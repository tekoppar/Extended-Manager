// Generated C++ file by Il2CppInspector - http://www.djkaty.com - https://github.com/djkaty
// Target Unity version: 2018.4.18 - 2018.4.27

// ******************************************************************************
// * IL2CPP application-specific method definition addresses and signatures
// ******************************************************************************

using namespace app;

DO_APP_FUNC(0x004C50A0, String *, Locale_GetText, (String * msg, MethodInfo * method));
DO_APP_FUNC(0x023AE4A0, String *, Locale_GetText_1, (String * fmt, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x0228ABB0, String *, SR_Format, (String * resourceFormat, Object * p1, MethodInfo * method));
DO_APP_FUNC(0x0228ACB0, String *, SR_Format_1, (String * resourceFormat, Object * p1, Object * p2, MethodInfo * method));
DO_APP_FUNC(0x023CE6E0, void, Runtime_mono_runtime_install_handlers, (MethodInfo * method));
DO_APP_FUNC(0x023CE6F0, void, Runtime_InstallSignalHandlers, (MethodInfo * method));
DO_APP_FUNC(0x023CE700, void, Runtime_mono_runtime_cleanup_handlers, (MethodInfo * method));
DO_APP_FUNC(0x023CE700, void, Runtime_RemoveSignalHandlers, (MethodInfo * method));
DO_APP_FUNC(0x023CE750, String *, Runtime_GetDisplayName, (MethodInfo * method));
DO_APP_FUNC(0x0173D7D0, String *, Runtime_GetNativeStackTrace, (Exception * exception, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, Runtime_SetGCAllowSynchronousMajor, (bool flag, MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, RuntimeClassHandle__ctor, (RuntimeClassHandle__Boxed * __this, RuntimeStructs_MonoClass * value, MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, RuntimeClassHandle__ctor_1, (RuntimeClassHandle__Boxed * __this, void * ptr, MethodInfo * method));
DO_APP_FUNC(0x00107C00, RuntimeStructs_MonoClass *, RuntimeClassHandle_get_Value, (RuntimeClassHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001EA310, bool, RuntimeClassHandle_Equals, (RuntimeClassHandle__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0010E170, int32_t, RuntimeClassHandle_GetHashCode, (RuntimeClassHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x023CE770, void *, RuntimeClassHandle_GetTypeFromClass, (RuntimeStructs_MonoClass * klass, MethodInfo * method));
DO_APP_FUNC(0x001EA440, RuntimeTypeHandle, RuntimeClassHandle_GetTypeHandle, (RuntimeClassHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DE360, RuntimeClassHandle, RuntimeRemoteClassHandle_get_ProxyClass, (RuntimeRemoteClassHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, RuntimeGenericParamInfoHandle__ctor, (RuntimeGenericParamInfoHandle__Boxed * __this, void * ptr, MethodInfo * method));
DO_APP_FUNC(0x001EA5B0, Type__Array *, RuntimeGenericParamInfoHandle_get_Constraints, (RuntimeGenericParamInfoHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001EA5C0, GenericParameterAttributes__Enum, RuntimeGenericParamInfoHandle_get_Attributes, (RuntimeGenericParamInfoHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001EA5B0, Type__Array *, RuntimeGenericParamInfoHandle_GetConstraints, (RuntimeGenericParamInfoHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001EA5E0, int32_t, RuntimeGenericParamInfoHandle_GetConstraintsCount, (RuntimeGenericParamInfoHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, RuntimeEventHandle__ctor, (RuntimeEventHandle__Boxed * __this, void * v, MethodInfo * method));
DO_APP_FUNC(0x00107C00, void *, RuntimeEventHandle_get_Value, (RuntimeEventHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001EA450, bool, RuntimeEventHandle_Equals, (RuntimeEventHandle__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0010E170, int32_t, RuntimeEventHandle_GetHashCode, (RuntimeEventHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, RuntimePropertyHandle__ctor, (RuntimePropertyHandle__Boxed * __this, void * v, MethodInfo * method));
DO_APP_FUNC(0x00107C00, void *, RuntimePropertyHandle_get_Value, (RuntimePropertyHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001EA620, bool, RuntimePropertyHandle_Equals, (RuntimePropertyHandle__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0010E170, int32_t, RuntimePropertyHandle_GetHashCode, (RuntimePropertyHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, RuntimeGPtrArrayHandle__ctor, (RuntimeGPtrArrayHandle__Boxed * __this, void * ptr, MethodInfo * method));
DO_APP_FUNC(0x001EA580, int32_t, RuntimeGPtrArrayHandle_get_Length, (RuntimeGPtrArrayHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001EA5A0, void *, RuntimeGPtrArrayHandle_get_Item, (RuntimeGPtrArrayHandle__Boxed * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x001EA5A0, void *, RuntimeGPtrArrayHandle_Lookup, (RuntimeGPtrArrayHandle__Boxed * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x023CE860, void, RuntimeGPtrArrayHandle_GPtrArrayFree, (RuntimeStructs_GPtrArray * value, MethodInfo * method));
DO_APP_FUNC(0x023CE8A0, void, RuntimeGPtrArrayHandle_DestroyAndFree, (RuntimeGPtrArrayHandle * h, MethodInfo * method));
DO_APP_FUNC(0x023CEA70, String *, RuntimeMarshal_PtrToUtf8String, (void * ptr, MethodInfo * method));
DO_APP_FUNC(0x023CEB70, SafeStringMarshal, RuntimeMarshal_MarshalString, (String * str, MethodInfo * method));
DO_APP_FUNC(0x023CEB90, int32_t, RuntimeMarshal_DecodeBlobSize, (void * in_ptr, void * * out_ptr, MethodInfo * method));
DO_APP_FUNC(0x023CEBF0, Byte__Array *, RuntimeMarshal_DecodeBlobArray, (void * ptr, MethodInfo * method));
DO_APP_FUNC(0x023CED20, int32_t, RuntimeMarshal_AsciHexDigitValue, (int32_t c, MethodInfo * method));
DO_APP_FUNC(0x023CED40, void, RuntimeMarshal_FreeAssemblyName, (MonoAssemblyName * name, bool freeStruct, MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, SafeGPtrArrayHandle__ctor, (SafeGPtrArrayHandle__Boxed * __this, void * ptr, MethodInfo * method));
DO_APP_FUNC(0x001EA750, void, SafeGPtrArrayHandle_Dispose, (SafeGPtrArrayHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001EA580, int32_t, SafeGPtrArrayHandle_get_Length, (SafeGPtrArrayHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001EA5A0, void *, SafeGPtrArrayHandle_get_Item, (SafeGPtrArrayHandle__Boxed * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x023CED90, void *, SafeStringMarshal_StringToUtf8, (String * str, MethodInfo * method));
DO_APP_FUNC(0x023CEE20, void, SafeStringMarshal_GFree, (void * ptr, MethodInfo * method));
DO_APP_FUNC(0x001EA8E0, void, SafeStringMarshal__ctor, (SafeStringMarshal__Boxed * __this, String * str, MethodInfo * method));
DO_APP_FUNC(0x001EA8F0, void *, SafeStringMarshal_get_Value, (SafeStringMarshal__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001EA900, void, SafeStringMarshal_Dispose, (SafeStringMarshal__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x02286B70, void, SecurityParser__ctor, (SecurityParser * __this, MethodInfo * method));
DO_APP_FUNC(0x02286CC0, void, SecurityParser_LoadXml, (SecurityParser * __this, String * xml, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, SecurityElement *, SecurityParser_ToXml, (SecurityParser * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SecurityParser_OnStartParsing, (SecurityParser * __this, SmallXmlParser * parser, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SecurityParser_OnProcessingInstruction, (SecurityParser * __this, String * name, String * text, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SecurityParser_OnIgnorableWhitespace, (SecurityParser * __this, String * s, MethodInfo * method));
DO_APP_FUNC(0x02286E50, void, SecurityParser_OnStartElement, (SecurityParser * __this, String * name, SmallXmlParser_IAttrList * attrs, MethodInfo * method));
DO_APP_FUNC(0x02287100, void, SecurityParser_OnEndElement, (SecurityParser * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x022871C0, void, SecurityParser_OnChars, (SecurityParser * __this, String * ch, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SecurityParser_OnEndParsing, (SecurityParser * __this, SmallXmlParser * parser, MethodInfo * method));
DO_APP_FUNC(0x02287290, void, SmallXmlParser__ctor, (SmallXmlParser * __this, MethodInfo * method));
DO_APP_FUNC(0x02287650, Exception *, SmallXmlParser_Error, (SmallXmlParser * __this, String * msg, MethodInfo * method));
DO_APP_FUNC(0x022878A0, Exception *, SmallXmlParser_UnexpectedEndError, (SmallXmlParser * __this, MethodInfo * method));
DO_APP_FUNC(0x022879F0, bool, SmallXmlParser_IsNameChar, (SmallXmlParser * __this, uint16_t c, bool start, MethodInfo * method));
DO_APP_FUNC(0x02287B50, bool, SmallXmlParser_IsWhitespace, (SmallXmlParser * __this, int32_t c, MethodInfo * method));
DO_APP_FUNC(0x02287B70, void, SmallXmlParser_SkipWhitespaces, (SmallXmlParser * __this, MethodInfo * method));
DO_APP_FUNC(0x02287B80, void, SmallXmlParser_HandleWhitespaces, (SmallXmlParser * __this, MethodInfo * method));
DO_APP_FUNC(0x02287E00, void, SmallXmlParser_SkipWhitespaces_1, (SmallXmlParser * __this, bool expected, MethodInfo * method));
DO_APP_FUNC(0x02287F30, int32_t, SmallXmlParser_Peek, (SmallXmlParser * __this, MethodInfo * method));
DO_APP_FUNC(0x02287F60, int32_t, SmallXmlParser_Read, (SmallXmlParser * __this, MethodInfo * method));
DO_APP_FUNC(0x02287FC0, void, SmallXmlParser_Expect, (SmallXmlParser * __this, int32_t c, MethodInfo * method));
DO_APP_FUNC(0x02288110, String *, SmallXmlParser_ReadUntil, (SmallXmlParser * __this, uint16_t until, bool handleReferences, MethodInfo * method));
DO_APP_FUNC(0x02288410, String *, SmallXmlParser_ReadName, (SmallXmlParser * __this, MethodInfo * method));
DO_APP_FUNC(0x02288660, void, SmallXmlParser_Parse, (SmallXmlParser * __this, TextReader * input, SmallXmlParser_IContentHandler * handler, MethodInfo * method));
DO_APP_FUNC(0x02288880, void, SmallXmlParser_Cleanup, (SmallXmlParser * __this, MethodInfo * method));
DO_APP_FUNC(0x02288920, void, SmallXmlParser_ReadContent, (SmallXmlParser * __this, MethodInfo * method));
DO_APP_FUNC(0x022890B0, void, SmallXmlParser_HandleBufferedContent, (SmallXmlParser * __this, MethodInfo * method));
DO_APP_FUNC(0x022891E0, void, SmallXmlParser_ReadCharacters, (SmallXmlParser * __this, MethodInfo * method));
DO_APP_FUNC(0x02289450, void, SmallXmlParser_ReadReference, (SmallXmlParser * __this, MethodInfo * method));
DO_APP_FUNC(0x02289720, int32_t, SmallXmlParser_ReadCharacterReference, (SmallXmlParser * __this, MethodInfo * method));
DO_APP_FUNC(0x022898B0, void, SmallXmlParser_ReadAttribute, (SmallXmlParser * __this, SmallXmlParser_AttrListImpl * a, MethodInfo * method));
DO_APP_FUNC(0x02289B10, void, SmallXmlParser_ReadCDATASection, (SmallXmlParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0228A080, void, SmallXmlParser_ReadComment, (SmallXmlParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0228A230, int32_t, SmallXmlParser_AttrListImpl_get_Length, (SmallXmlParser_AttrListImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0228A2C0, String *, SmallXmlParser_AttrListImpl_GetName, (SmallXmlParser_AttrListImpl * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x0228A370, String *, SmallXmlParser_AttrListImpl_GetValue, (SmallXmlParser_AttrListImpl * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x0228A420, String *, SmallXmlParser_AttrListImpl_GetValue_1, (SmallXmlParser_AttrListImpl * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x0228A570, String__Array *, SmallXmlParser_AttrListImpl_get_Names, (SmallXmlParser_AttrListImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0228A600, String__Array *, SmallXmlParser_AttrListImpl_get_Values, (SmallXmlParser_AttrListImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0228A690, void, SmallXmlParser_AttrListImpl_Clear, (SmallXmlParser_AttrListImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0228A770, void, SmallXmlParser_AttrListImpl_Add, (SmallXmlParser_AttrListImpl * __this, String * name, String * value, MethodInfo * method));
DO_APP_FUNC(0x0228A840, void, SmallXmlParser_AttrListImpl__ctor, (SmallXmlParser_AttrListImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0228AA60, void, SmallXmlParserException__ctor, (SmallXmlParserException * __this, String * msg, int32_t line, int32_t column, MethodInfo * method));
DO_APP_FUNC(0x023B9D70, void, CodePointIndexer__ctor, (CodePointIndexer * __this, Int32__Array * starts, Int32__Array * ends, int32_t defaultIndex, int32_t defaultCP, MethodInfo * method));
DO_APP_FUNC(0x023B9FB0, int32_t, CodePointIndexer_ToIndex, (CodePointIndexer * __this, int32_t cp, MethodInfo * method));
DO_APP_FUNC(0x001EA160, void, CodePointIndexer_TableRange__ctor, (CodePointIndexer_TableRange__Boxed * __this, int32_t start, int32_t end, int32_t indexStart, MethodInfo * method));
DO_APP_FUNC(0x023C5470, void, TailoringInfo__ctor, (TailoringInfo * __this, int32_t lcid, int32_t tailoringIndex, int32_t tailoringCount, bool frenchSort, MethodInfo * method));
DO_APP_FUNC(0x023BA050, void, Contraction__ctor, (Contraction * __this, int32_t index, Char__Array * source, String * replacement, Byte__Array * sortkey, MethodInfo * method));
DO_APP_FUNC(0x023BA070, int32_t, ContractionComparer_Compare, (ContractionComparer * __this, Contraction * c1, Contraction * c2, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ContractionComparer__ctor, (ContractionComparer * __this, MethodInfo * method));
DO_APP_FUNC(0x023BA170, void, ContractionComparer__cctor, (MethodInfo * method));
DO_APP_FUNC(0x023BA2B0, void, Level2Map__ctor, (Level2Map * __this, uint8_t source, uint8_t replace, MethodInfo * method));
DO_APP_FUNC(0x023BA2C0, TailoringInfo *, MSCompatUnicodeTable_GetTailoringInfo, (int32_t lcid, MethodInfo * method));
DO_APP_FUNC(0x023BA470, void, MSCompatUnicodeTable_BuildTailoringTables, (CultureInfo * culture, TailoringInfo * t, Contraction__Array * * contractions, Level2Map__Array * * diacriticals, MethodInfo * method));
DO_APP_FUNC(0x023BAE80, void, MSCompatUnicodeTable_SetCJKReferences, (String * name, CodePointIndexer * * cjkIndexer, uint8_t * * catTable, uint8_t * * lv1Table, CodePointIndexer * * lv2Indexer, uint8_t * * lv2Table, MethodInfo * method));
DO_APP_FUNC(0x023BB200, uint8_t, MSCompatUnicodeTable_Category, (int32_t cp, MethodInfo * method));
DO_APP_FUNC(0x023BB300, uint8_t, MSCompatUnicodeTable_Level1, (int32_t cp, MethodInfo * method));
DO_APP_FUNC(0x023BB400, uint8_t, MSCompatUnicodeTable_Level2, (int32_t cp, MethodInfo * method));
DO_APP_FUNC(0x023BB500, uint8_t, MSCompatUnicodeTable_Level3, (int32_t cp, MethodInfo * method));
DO_APP_FUNC(0x023BB600, bool, MSCompatUnicodeTable_IsIgnorable, (int32_t cp, uint8_t flag, MethodInfo * method));
DO_APP_FUNC(0x023BB770, bool, MSCompatUnicodeTable_IsIgnorableNonSpacing, (int32_t cp, MethodInfo * method));
DO_APP_FUNC(0x023BB810, int32_t, MSCompatUnicodeTable_ToKanaTypeInsensitive, (int32_t i, MethodInfo * method));
DO_APP_FUNC(0x023BB830, int32_t, MSCompatUnicodeTable_ToWidthCompat, (int32_t i, MethodInfo * method));
DO_APP_FUNC(0x023BB9B0, bool, MSCompatUnicodeTable_HasSpecialWeight, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x023BBA20, bool, MSCompatUnicodeTable_IsHalfWidthKana, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x023BBA40, bool, MSCompatUnicodeTable_IsHiragana, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x023BBA60, bool, MSCompatUnicodeTable_IsJapaneseSmallLetter, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x023BBBD0, bool, MSCompatUnicodeTable_get_IsReady, (MethodInfo * method));
DO_APP_FUNC(0x023BBC70, void *, MSCompatUnicodeTable_GetResource, (String * name, MethodInfo * method));
DO_APP_FUNC(0x023BBD20, uint32_t, MSCompatUnicodeTable_UInt32FromBytePtr, (uint8_t * raw, uint32_t idx, MethodInfo * method));
DO_APP_FUNC(0x023BBD60, void, MSCompatUnicodeTable__cctor, (MethodInfo * method));
DO_APP_FUNC(0x023BC3C0, void, MSCompatUnicodeTable_FillCJK, (String * culture, CodePointIndexer * * cjkIndexer, uint8_t * * catTable, uint8_t * * lv1Table, CodePointIndexer * * lv2Indexer, uint8_t * * lv2Table, MethodInfo * method));
DO_APP_FUNC(0x023BC5C0, void, MSCompatUnicodeTable_FillCJKCore, (String * culture, CodePointIndexer * * cjkIndexer, uint8_t * * catTable, uint8_t * * lv1Table, CodePointIndexer * * cjkLv2Indexer, uint8_t * * lv2Table, MethodInfo * method));
DO_APP_FUNC(0x023BCC10, void, MSCompatUnicodeTable_c__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MSCompatUnicodeTable_c__ctor, (MSCompatUnicodeTable_c * __this, MethodInfo * method));
DO_APP_FUNC(0x023BCD50, int32_t, MSCompatUnicodeTable_c__BuildTailoringTables_b__17_0, (MSCompatUnicodeTable_c * __this, Level2Map * a, Level2Map * b, MethodInfo * method));
DO_APP_FUNC(0x023BCD80, void, MSCompatUnicodeTableUtil__cctor, (MethodInfo * method));
DO_APP_FUNC(0x023BD700, void, NormalizationTableUtil__cctor, (MethodInfo * method));
DO_APP_FUNC(0x023BDDB0, int32_t, NormalizationTableUtil_PropIdx, (int32_t cp, MethodInfo * method));
DO_APP_FUNC(0x023BDE70, int32_t, NormalizationTableUtil_MapIdx, (int32_t cp, MethodInfo * method));
DO_APP_FUNC(0x023BDF30, void, SimpleCollator__ctor, (SimpleCollator * __this, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x023BE3C0, void, SimpleCollator_SetCJKTable, (SimpleCollator * __this, CultureInfo * culture, CodePointIndexer * * cjkIndexer, uint8_t * * catTable, uint8_t * * lv1Table, CodePointIndexer * * lv2Indexer, uint8_t * * lv2Table, MethodInfo * method));
DO_APP_FUNC(0x023BE590, CultureInfo *, SimpleCollator_GetNeutralCulture, (CultureInfo * info, MethodInfo * method));
DO_APP_FUNC(0x023BE630, uint8_t, SimpleCollator_Category, (SimpleCollator * __this, int32_t cp, MethodInfo * method));
DO_APP_FUNC(0x023BE720, uint8_t, SimpleCollator_Level1, (SimpleCollator * __this, int32_t cp, MethodInfo * method));
DO_APP_FUNC(0x023BE810, uint8_t, SimpleCollator_Level2, (SimpleCollator * __this, int32_t cp, SimpleCollator_ExtenderType__Enum ext, MethodInfo * method));
DO_APP_FUNC(0x023BE9F0, bool, SimpleCollator_IsHalfKana, (int32_t cp, CompareOptions__Enum opt, MethodInfo * method));
DO_APP_FUNC(0x023BEAC0, Contraction *, SimpleCollator_GetContraction, (SimpleCollator * __this, String * s, int32_t start, int32_t end, MethodInfo * method));
DO_APP_FUNC(0x023BEBF0, Contraction *, SimpleCollator_GetContraction_1, (SimpleCollator * __this, String * s, int32_t start, int32_t end, Contraction__Array * clist, MethodInfo * method));
DO_APP_FUNC(0x023BED60, Contraction *, SimpleCollator_GetTailContraction, (SimpleCollator * __this, String * s, int32_t start, int32_t end, MethodInfo * method));
DO_APP_FUNC(0x023BEE90, Contraction *, SimpleCollator_GetTailContraction_1, (SimpleCollator * __this, String * s, int32_t start, int32_t end, Contraction__Array * clist, MethodInfo * method));
DO_APP_FUNC(0x023BF110, int32_t, SimpleCollator_FilterOptions, (SimpleCollator * __this, int32_t i, CompareOptions__Enum opt, MethodInfo * method));
DO_APP_FUNC(0x023BF420, SimpleCollator_ExtenderType__Enum, SimpleCollator_GetExtenderType, (SimpleCollator * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x023BF4D0, uint8_t, SimpleCollator_ToDashTypeValue, (SimpleCollator_ExtenderType__Enum ext, CompareOptions__Enum opt, MethodInfo * method));
DO_APP_FUNC(0x023BF4F0, int32_t, SimpleCollator_FilterExtender, (SimpleCollator * __this, int32_t i, SimpleCollator_ExtenderType__Enum ext, CompareOptions__Enum opt, MethodInfo * method));
DO_APP_FUNC(0x023BF6F0, bool, SimpleCollator_IsIgnorable, (int32_t i, CompareOptions__Enum opt, MethodInfo * method));
DO_APP_FUNC(0x023BF7D0, bool, SimpleCollator_IsSafe, (SimpleCollator * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x023BF850, SortKey *, SimpleCollator_GetSortKey, (SimpleCollator * __this, String * s, CompareOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x023BF880, SortKey *, SimpleCollator_GetSortKey_1, (SimpleCollator * __this, String * s, int32_t start, int32_t length, CompareOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x023BFA50, void, SimpleCollator_GetSortKey_2, (SimpleCollator * __this, String * s, int32_t start, int32_t end, SortKeyBuffer * buf, CompareOptions__Enum opt, MethodInfo * method));
DO_APP_FUNC(0x023BFE70, void, SimpleCollator_FillSortKeyRaw, (SimpleCollator * __this, int32_t i, SimpleCollator_ExtenderType__Enum ext, SortKeyBuffer * buf, CompareOptions__Enum opt, MethodInfo * method));
DO_APP_FUNC(0x023C0360, void, SimpleCollator_FillSurrogateSortKeyRaw, (SimpleCollator * __this, int32_t i, SortKeyBuffer * buf, MethodInfo * method));
DO_APP_FUNC(0x023C0410, int32_t, SimpleCollator_Compare, (SimpleCollator * __this, String * s1, int32_t idx1, int32_t len1, String * s2, int32_t idx2, int32_t len2, CompareOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x023C0510, void, SimpleCollator_ClearBuffer, (SimpleCollator * __this, uint8_t * buffer, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x023C0530, int32_t, SimpleCollator_CompareInternal, (SimpleCollator * __this, String * s1, int32_t idx1, int32_t len1, String * s2, int32_t idx2, int32_t len2, bool * targetConsumed, bool * sourceConsumed, bool skipHeadingExtenders, bool immediateBreakup, SimpleCollator_Context * ctx, MethodInfo * method));
DO_APP_FUNC(0x023C18C0, int32_t, SimpleCollator_CompareFlagPair, (SimpleCollator * __this, bool b1, bool b2, MethodInfo * method));
DO_APP_FUNC(0x023C18E0, bool, SimpleCollator_IsPrefix, (SimpleCollator * __this, String * src, String * target, CompareOptions__Enum opt, MethodInfo * method));
DO_APP_FUNC(0x023C1920, bool, SimpleCollator_IsPrefix_1, (SimpleCollator * __this, String * s, String * target, int32_t start, int32_t length, CompareOptions__Enum opt, MethodInfo * method));
DO_APP_FUNC(0x023C1A20, bool, SimpleCollator_IsPrefix_2, (SimpleCollator * __this, String * s, String * target, int32_t start, int32_t length, bool skipHeadingExtenders, SimpleCollator_Context * ctx, MethodInfo * method));
DO_APP_FUNC(0x023C1AA0, bool, SimpleCollator_IsSuffix, (SimpleCollator * __this, String * src, String * target, CompareOptions__Enum opt, MethodInfo * method));
DO_APP_FUNC(0x023C1B60, bool, SimpleCollator_IsSuffix_1, (SimpleCollator * __this, String * s, String * target, int32_t start, int32_t length, CompareOptions__Enum opt, MethodInfo * method));
DO_APP_FUNC(0x023C1C30, int32_t, SimpleCollator_QuickIndexOf, (SimpleCollator * __this, String * s, String * target, int32_t start, int32_t length, bool * testWasUnable, MethodInfo * method));
DO_APP_FUNC(0x023C1DA0, int32_t, SimpleCollator_IndexOf, (SimpleCollator * __this, String * s, String * target, int32_t start, int32_t length, CompareOptions__Enum opt, MethodInfo * method));
DO_APP_FUNC(0x023C20D0, int32_t, SimpleCollator_IndexOfOrdinal, (SimpleCollator * __this, String * s, String * target, int32_t start, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x023C21B0, int32_t, SimpleCollator_IndexOfOrdinal_1, (SimpleCollator * __this, String * s, uint16_t target, int32_t start, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x023C2230, int32_t, SimpleCollator_IndexOfSortKey, (SimpleCollator * __this, String * s, int32_t start, int32_t length, uint8_t * sortkey, uint16_t target, int32_t ti, bool noLv4, SimpleCollator_Context * ctx, MethodInfo * method));
DO_APP_FUNC(0x023C22F0, int32_t, SimpleCollator_IndexOf_1, (SimpleCollator * __this, String * s, String * target, int32_t start, int32_t length, uint8_t * targetSortKey, SimpleCollator_Context * ctx, MethodInfo * method));
DO_APP_FUNC(0x023C2850, int32_t, SimpleCollator_LastIndexOf, (SimpleCollator * __this, String * s, String * target, int32_t start, int32_t length, CompareOptions__Enum opt, MethodInfo * method));
DO_APP_FUNC(0x023C2A40, int32_t, SimpleCollator_LastIndexOfOrdinal, (SimpleCollator * __this, String * s, String * target, int32_t start, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x023C2B90, int32_t, SimpleCollator_LastIndexOfSortKey, (SimpleCollator * __this, String * s, int32_t start, int32_t orgStart, int32_t length, uint8_t * sortkey, int32_t ti, bool noLv4, SimpleCollator_Context * ctx, MethodInfo * method));
DO_APP_FUNC(0x023C2C60, int32_t, SimpleCollator_LastIndexOf_1, (SimpleCollator * __this, String * s, String * target, int32_t start, int32_t length, uint8_t * targetSortKey, SimpleCollator_Context * ctx, MethodInfo * method));
DO_APP_FUNC(0x023C31A0, bool, SimpleCollator_MatchesForward, (SimpleCollator * __this, String * s, int32_t * idx, int32_t end, int32_t ti, uint8_t * sortkey, bool noLv4, SimpleCollator_Context * ctx, MethodInfo * method));
DO_APP_FUNC(0x023C3370, bool, SimpleCollator_MatchesForwardCore, (SimpleCollator * __this, String * s, int32_t * idx, int32_t end, int32_t ti, uint8_t * sortkey, bool noLv4, SimpleCollator_ExtenderType__Enum ext, Contraction * * ct, SimpleCollator_Context * ctx, MethodInfo * method));
DO_APP_FUNC(0x023C37A0, bool, SimpleCollator_MatchesPrimitive, (SimpleCollator * __this, CompareOptions__Enum opt, uint8_t * source, int32_t si, SimpleCollator_ExtenderType__Enum ext, uint8_t * target, int32_t ti, bool noLv4, MethodInfo * method));
DO_APP_FUNC(0x023C39F0, bool, SimpleCollator_MatchesBackward, (SimpleCollator * __this, String * s, int32_t * idx, int32_t end, int32_t orgStart, int32_t ti, uint8_t * sortkey, bool noLv4, SimpleCollator_Context * ctx, MethodInfo * method));
DO_APP_FUNC(0x023C3BD0, bool, SimpleCollator_MatchesBackwardCore, (SimpleCollator * __this, String * s, int32_t * idx, int32_t end, int32_t orgStart, int32_t ti, uint8_t * sortkey, bool noLv4, SimpleCollator_ExtenderType__Enum ext, Contraction * * ct, SimpleCollator_Context * ctx, MethodInfo * method));
DO_APP_FUNC(0x023C4230, void, SimpleCollator__cctor, (MethodInfo * method));
DO_APP_FUNC(0x001EA180, void, SimpleCollator_Context__ctor, (SimpleCollator_Context__Boxed * __this, CompareOptions__Enum opt, uint8_t * alwaysMatchFlags, uint8_t * neverMatchFlags, uint8_t * buffer1, uint8_t * buffer2, uint8_t * prev1, MethodInfo * method));
DO_APP_FUNC(0x001EA300, void, SimpleCollator_PreviousInfo__ctor, (SimpleCollator_PreviousInfo__Boxed * __this, bool dummy, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SortKeyBuffer__ctor, (SortKeyBuffer * __this, int32_t lcid, MethodInfo * method));
DO_APP_FUNC(0x023C4400, void, SortKeyBuffer_Reset, (SortKeyBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x023C4420, void, SortKeyBuffer_Initialize, (SortKeyBuffer * __this, CompareOptions__Enum options, int32_t lcid, String * s, bool frenchSort, MethodInfo * method));
DO_APP_FUNC(0x023C45F0, void, SortKeyBuffer_AppendCJKExtension, (SortKeyBuffer * __this, uint8_t lv1msb, uint8_t lv1lsb, MethodInfo * method));
DO_APP_FUNC(0x023C46D0, void, SortKeyBuffer_AppendKana, (SortKeyBuffer * __this, uint8_t category, uint8_t lv1, uint8_t lv2, uint8_t lv3, bool isSmallKana, uint8_t markType, bool isKatakana, bool isHalfWidth, MethodInfo * method));
DO_APP_FUNC(0x023C47A0, void, SortKeyBuffer_AppendNormal, (SortKeyBuffer * __this, uint8_t category, uint8_t lv1, uint8_t lv2, uint8_t lv3, MethodInfo * method));
DO_APP_FUNC(0x023C49D0, void, SortKeyBuffer_AppendLevel5, (SortKeyBuffer * __this, uint8_t category, uint8_t lv1, MethodInfo * method));
DO_APP_FUNC(0x023C4AB0, void, SortKeyBuffer_AppendBufferPrimitive, (SortKeyBuffer * __this, uint8_t value, Byte__Array * * buf, int32_t * bidx, MethodInfo * method));
DO_APP_FUNC(0x023C4BB0, SortKey *, SortKeyBuffer_GetResultAndReset, (SortKeyBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x023C4BE0, int32_t, SortKeyBuffer_GetOptimizedLength, (SortKeyBuffer * __this, Byte__Array * data, int32_t len, uint8_t defaultValue, MethodInfo * method));
DO_APP_FUNC(0x023C4C40, SortKey *, SortKeyBuffer_GetResult, (SortKeyBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x023CF080, void, ASN1__ctor, (ASN1 * __this, uint8_t tag, MethodInfo * method));
DO_APP_FUNC(0x0149F480, void, ASN1__ctor_1, (ASN1 * __this, uint8_t tag, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x023CF090, void, ASN1__ctor_2, (ASN1 * __this, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x023CF240, int32_t, ASN1_get_Count, (ASN1 * __this, MethodInfo * method));
DO_APP_FUNC(0x0052B590, uint8_t, ASN1_get_Tag, (ASN1 * __this, MethodInfo * method));
DO_APP_FUNC(0x023CF260, int32_t, ASN1_get_Length, (ASN1 * __this, MethodInfo * method));
DO_APP_FUNC(0x023CF270, Byte__Array *, ASN1_get_Value, (ASN1 * __this, MethodInfo * method));
DO_APP_FUNC(0x023CF3D0, void, ASN1_set_Value, (ASN1 * __this, Byte__Array * value, MethodInfo * method));
DO_APP_FUNC(0x023CF520, bool, ASN1_CompareArray, (ASN1 * __this, Byte__Array * array1, Byte__Array * array2, MethodInfo * method));
DO_APP_FUNC(0x023CF5C0, bool, ASN1_CompareValue, (ASN1 * __this, Byte__Array * value, MethodInfo * method));
DO_APP_FUNC(0x023CF650, ASN1 *, ASN1_Add, (ASN1 * __this, ASN1 * asn1, MethodInfo * method));
DO_APP_FUNC(0x023CF7E0, Byte__Array *, ASN1_GetBytes, (ASN1 * __this, MethodInfo * method));
DO_APP_FUNC(0x023CFFF0, void, ASN1_Decode, (ASN1 * __this, Byte__Array * asn1, int32_t * anPos, int32_t anLength, MethodInfo * method));
DO_APP_FUNC(0x023D0210, void, ASN1_DecodeTLV, (ASN1 * __this, Byte__Array * asn1, int32_t * pos, uint8_t * tag, int32_t * length, Byte__Array * * content, MethodInfo * method));
DO_APP_FUNC(0x023D0390, ASN1 *, ASN1_get_Item, (ASN1 * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x023D0480, ASN1 *, ASN1_Element, (ASN1 * __this, int32_t index, uint8_t anTag, MethodInfo * method));
DO_APP_FUNC(0x023D0590, String *, ASN1_ToString, (ASN1 * __this, MethodInfo * method));
DO_APP_FUNC(0x025C2DB0, ASN1 *, ASN1Convert_FromInt32, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x025C30B0, ASN1 *, ASN1Convert_FromOid, (String * oid, MethodInfo * method));
DO_APP_FUNC(0x025C3240, int32_t, ASN1Convert_ToInt32, (ASN1 * asn1, MethodInfo * method));
DO_APP_FUNC(0x025C33B0, String *, ASN1Convert_ToOid, (ASN1 * asn1, MethodInfo * method));
DO_APP_FUNC(0x025C3710, DateTime, ASN1Convert_ToDateTime, (ASN1 * time, MethodInfo * method));
DO_APP_FUNC(0x025C3C30, Byte__Array *, BitConverterLE_GetUIntBytes, (uint8_t * bytes, MethodInfo * method));
DO_APP_FUNC(0x025C3E10, Byte__Array *, BitConverterLE_GetULongBytes, (uint8_t * bytes, MethodInfo * method));
DO_APP_FUNC(0x025C4110, Byte__Array *, BitConverterLE_GetBytes, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x025C4130, Byte__Array *, BitConverterLE_GetBytes_1, (float value, MethodInfo * method));
DO_APP_FUNC(0x025C4150, Byte__Array *, BitConverterLE_GetBytes_2, (double value, MethodInfo * method));
DO_APP_FUNC(0x025C4170, void, BitConverterLE_UIntFromBytes, (uint8_t * dst, Byte__Array * src, int32_t startIndex, MethodInfo * method));
DO_APP_FUNC(0x025C4380, void, BitConverterLE_ULongFromBytes, (uint8_t * dst, Byte__Array * src, int32_t startIndex, MethodInfo * method));
DO_APP_FUNC(0x025C44C0, float, BitConverterLE_ToSingle, (Byte__Array * value, int32_t startIndex, MethodInfo * method));
DO_APP_FUNC(0x025C44F0, double, BitConverterLE_ToDouble, (Byte__Array * value, int32_t startIndex, MethodInfo * method));
DO_APP_FUNC(0x025D9D10, void, PKCS7_ContentInfo__ctor, (PKCS7_ContentInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025D9E60, void, PKCS7_ContentInfo__ctor_1, (PKCS7_ContentInfo * __this, String * oid, MethodInfo * method));
DO_APP_FUNC(0x025D9E90, void, PKCS7_ContentInfo__ctor_2, (PKCS7_ContentInfo * __this, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x025D9FF0, void, PKCS7_ContentInfo__ctor_3, (PKCS7_ContentInfo * __this, ASN1 * asn1, MethodInfo * method));
DO_APP_FUNC(0x025DA200, ASN1 *, PKCS7_ContentInfo_get_ASN1, (PKCS7_ContentInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, ASN1 *, PKCS7_ContentInfo_get_Content, (PKCS7_ContentInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, PKCS7_ContentInfo_set_Content, (PKCS7_ContentInfo * __this, ASN1 * value, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, PKCS7_ContentInfo_get_ContentType, (PKCS7_ContentInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, PKCS7_ContentInfo_set_ContentType, (PKCS7_ContentInfo * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x025DA210, ASN1 *, PKCS7_ContentInfo_GetASN1, (PKCS7_ContentInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00531660, void, PKCS7_EncryptedData__ctor, (PKCS7_EncryptedData * __this, MethodInfo * method));
DO_APP_FUNC(0x025DA3B0, void, PKCS7_EncryptedData__ctor_1, (PKCS7_EncryptedData * __this, ASN1 * asn1, MethodInfo * method));
DO_APP_FUNC(0x002FB950, PKCS7_ContentInfo *, PKCS7_EncryptedData_get_EncryptionAlgorithm, (PKCS7_EncryptedData * __this, MethodInfo * method));
DO_APP_FUNC(0x025DA8B0, Byte__Array *, PKCS7_EncryptedData_get_EncryptedContent, (PKCS7_EncryptedData * __this, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, SafeBag__ctor, (SafeBag * __this, String * bagOID, ASN1 * asn1, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, SafeBag_get_BagOID, (SafeBag * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, ASN1 *, SafeBag_get_ASN1, (SafeBag * __this, MethodInfo * method));
DO_APP_FUNC(0x025DAA00, void, PKCS12__ctor, (PKCS12 * __this, MethodInfo * method));
DO_APP_FUNC(0x025DADB0, void, PKCS12__ctor_1, (PKCS12 * __this, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x025DAE70, void, PKCS12__ctor_2, (PKCS12 * __this, Byte__Array * data, String * password, MethodInfo * method));
DO_APP_FUNC(0x025DAEC0, void, PKCS12_Decode, (PKCS12 * __this, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x025DBC40, void, PKCS12_Finalize, (PKCS12 * __this, MethodInfo * method));
DO_APP_FUNC(0x025DBCE0, void, PKCS12_set_Password, (PKCS12 * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x00998570, int32_t, PKCS12_get_IterationCount, (PKCS12 * __this, MethodInfo * method));
DO_APP_FUNC(0x00E06D70, void, PKCS12_set_IterationCount, (PKCS12 * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x025DBE80, ArrayList *, PKCS12_get_Keys, (PKCS12 * __this, MethodInfo * method));
DO_APP_FUNC(0x025DC770, X509CertificateCollection *, PKCS12_get_Certificates, (PKCS12 * __this, MethodInfo * method));
DO_APP_FUNC(0x025DCCB0, RandomNumberGenerator *, PKCS12_get_RNG, (PKCS12 * __this, MethodInfo * method));
DO_APP_FUNC(0x025DCCE0, bool, PKCS12_Compare, (PKCS12 * __this, Byte__Array * expected, Byte__Array * actual, MethodInfo * method));
DO_APP_FUNC(0x025DCD70, SymmetricAlgorithm *, PKCS12_GetSymmetricAlgorithm, (PKCS12 * __this, String * algorithmOid, Byte__Array * salt, int32_t iterationCount, MethodInfo * method));
DO_APP_FUNC(0x025DD700, Byte__Array *, PKCS12_Decrypt, (PKCS12 * __this, String * algorithmOid, Byte__Array * salt, int32_t iterationCount, Byte__Array * encryptedData, MethodInfo * method));
DO_APP_FUNC(0x025DD8A0, Byte__Array *, PKCS12_Decrypt_1, (PKCS12 * __this, PKCS7_EncryptedData * ed, MethodInfo * method));
DO_APP_FUNC(0x025DDAC0, Byte__Array *, PKCS12_Encrypt, (PKCS12 * __this, String * algorithmOid, Byte__Array * salt, int32_t iterationCount, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x025DDC60, DSAParameters, PKCS12_GetExistingParameters, (PKCS12 * __this, bool * found, MethodInfo * method));
DO_APP_FUNC(0x025DDEF0, void, PKCS12_AddPrivateKey, (PKCS12 * __this, PKCS8_PrivateKeyInfo * pki, MethodInfo * method));
DO_APP_FUNC(0x025DE0D0, void, PKCS12_ReadSafeBag, (PKCS12 * __this, ASN1 * safeBag, MethodInfo * method));
DO_APP_FUNC(0x025DED50, ASN1 *, PKCS12_CertificateSafeBag, (PKCS12 * __this, X509Certificate * x509, IDictionary * attributes, MethodInfo * method));
DO_APP_FUNC(0x025DFC80, Byte__Array *, PKCS12_MAC, (PKCS12 * __this, Byte__Array * password, Byte__Array * salt, int32_t iterations, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x025DFF50, Byte__Array *, PKCS12_GetBytes, (PKCS12 * __this, MethodInfo * method));
DO_APP_FUNC(0x025E2A30, PKCS7_ContentInfo *, PKCS12_EncryptedContentInfo, (PKCS12 * __this, ASN1 * safeBags, String * algorithmOid, MethodInfo * method));
DO_APP_FUNC(0x025E3320, void, PKCS12_AddCertificate, (PKCS12 * __this, X509Certificate * cert, MethodInfo * method));
DO_APP_FUNC(0x025E3330, void, PKCS12_AddCertificate_1, (PKCS12 * __this, X509Certificate * cert, IDictionary * attributes, MethodInfo * method));
DO_APP_FUNC(0x025E38A0, void, PKCS12_RemoveCertificate, (PKCS12 * __this, X509Certificate * cert, MethodInfo * method));
DO_APP_FUNC(0x025E38B0, void, PKCS12_RemoveCertificate_1, (PKCS12 * __this, X509Certificate * cert, IDictionary * attrs, MethodInfo * method));
DO_APP_FUNC(0x025E3F40, Object *, PKCS12_Clone, (PKCS12 * __this, MethodInfo * method));
DO_APP_FUNC(0x025E41E0, int32_t, PKCS12_get_MaximumPasswordLength, (MethodInfo * method));
DO_APP_FUNC(0x025E4280, void, PKCS12__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, PKCS12_DeriveBytes__ctor, (PKCS12_DeriveBytes * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, PKCS12_DeriveBytes_set_HashName, (PKCS12_DeriveBytes * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0052A000, void, PKCS12_DeriveBytes_set_IterationCount, (PKCS12_DeriveBytes * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x025E4300, void, PKCS12_DeriveBytes_set_Password, (PKCS12_DeriveBytes * __this, Byte__Array * value, MethodInfo * method));
DO_APP_FUNC(0x025E4460, void, PKCS12_DeriveBytes_set_Salt, (PKCS12_DeriveBytes * __this, Byte__Array * value, MethodInfo * method));
DO_APP_FUNC(0x025E45B0, void, PKCS12_DeriveBytes_Adjust, (PKCS12_DeriveBytes * __this, Byte__Array * a, int32_t aOff, Byte__Array * b, MethodInfo * method));
DO_APP_FUNC(0x025E46B0, Byte__Array *, PKCS12_DeriveBytes_Derive, (PKCS12_DeriveBytes * __this, Byte__Array * diversifier, int32_t n, MethodInfo * method));
DO_APP_FUNC(0x025E4BE0, Byte__Array *, PKCS12_DeriveBytes_DeriveKey, (PKCS12_DeriveBytes * __this, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x025E4CA0, Byte__Array *, PKCS12_DeriveBytes_DeriveIV, (PKCS12_DeriveBytes * __this, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x025E4D60, Byte__Array *, PKCS12_DeriveBytes_DeriveMAC, (PKCS12_DeriveBytes * __this, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x025E4E20, void, PKCS12_DeriveBytes__cctor, (MethodInfo * method));
DO_APP_FUNC(0x025E4F40, String *, X501_ToString, (ASN1 * seq, MethodInfo * method));
DO_APP_FUNC(0x025E5170, String *, X501_ToString_1, (ASN1 * seq, bool reversed, String * separator, bool quotes, MethodInfo * method));
DO_APP_FUNC(0x025E5470, void, X501_AppendEntry, (StringBuilder * sb, ASN1 * entry, bool quotes, MethodInfo * method));
DO_APP_FUNC(0x025E5E60, void, X501__cctor, (MethodInfo * method));
DO_APP_FUNC(0x025E6220, void, X509Certificate_Parse, (X509Certificate * __this, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x025E6D00, void, X509Certificate__ctor, (X509Certificate * __this, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x025E6E60, Byte__Array *, X509Certificate_GetUnsignedBigInteger, (X509Certificate * __this, Byte__Array * integer, MethodInfo * method));
DO_APP_FUNC(0x025E6F50, DSA *, X509Certificate_get_DSA, (X509Certificate * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, String *, X509Certificate_get_IssuerName, (X509Certificate * __this, MethodInfo * method));
DO_APP_FUNC(0x025E7500, Byte__Array *, X509Certificate_get_KeyAlgorithmParameters, (X509Certificate * __this, MethodInfo * method));
DO_APP_FUNC(0x025E7650, Byte__Array *, X509Certificate_get_PublicKey, (X509Certificate * __this, MethodInfo * method));
DO_APP_FUNC(0x025E77A0, RSA *, X509Certificate_get_RSA, (X509Certificate * __this, MethodInfo * method));
DO_APP_FUNC(0x025E7B30, Byte__Array *, X509Certificate_get_RawData, (X509Certificate * __this, MethodInfo * method));
DO_APP_FUNC(0x025E7C80, Byte__Array *, X509Certificate_get_SerialNumber, (X509Certificate * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, String *, X509Certificate_get_SubjectName, (X509Certificate * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, DateTime, X509Certificate_get_ValidFrom, (X509Certificate * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, DateTime, X509Certificate_get_ValidUntil, (X509Certificate * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, ASN1 *, X509Certificate_GetIssuerName, (X509Certificate * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, ASN1 *, X509Certificate_GetSubjectName, (X509Certificate * __this, MethodInfo * method));
DO_APP_FUNC(0x025E7DD0, void, X509Certificate_GetObjectData, (X509Certificate * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x025E7E70, Byte__Array *, X509Certificate_PEM, (String * type, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x025E8070, void, X509Certificate__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01C9A650, void, X509CertificateCollection__ctor, (X509CertificateCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x022856E0, X509Certificate *, X509CertificateCollection_get_Item, (X509CertificateCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x022857E0, int32_t, X509CertificateCollection_Add, (X509CertificateCollection * __this, X509Certificate * value, MethodInfo * method));
DO_APP_FUNC(0x022858C0, X509CertificateCollection_X509CertificateEnumerator *, X509CertificateCollection_GetEnumerator, (X509CertificateCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x020202A0, IEnumerator *, X509CertificateCollection_System_Collections_IEnumerable_GetEnumerator, (X509CertificateCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x021CBAD0, int32_t, X509CertificateCollection_GetHashCode, (X509CertificateCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02285A80, void, X509CertificateCollection_X509CertificateEnumerator__ctor, (X509CertificateCollection_X509CertificateEnumerator * __this, X509CertificateCollection * mappings, MethodInfo * method));
DO_APP_FUNC(0x02285B20, X509Certificate *, X509CertificateCollection_X509CertificateEnumerator_get_Current, (X509CertificateCollection_X509CertificateEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02285C10, Object *, X509CertificateCollection_X509CertificateEnumerator_System_Collections_IEnumerator_get_Current, (X509CertificateCollection_X509CertificateEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02285CA0, bool, X509CertificateCollection_X509CertificateEnumerator_System_Collections_IEnumerator_MoveNext, (X509CertificateCollection_X509CertificateEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02285D30, void, X509CertificateCollection_X509CertificateEnumerator_System_Collections_IEnumerator_Reset, (X509CertificateCollection_X509CertificateEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02285DC0, bool, X509CertificateCollection_X509CertificateEnumerator_MoveNext, (X509CertificateCollection_X509CertificateEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02285E50, void, X509Extension__ctor, (X509Extension * __this, ASN1 * asn1, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, X509Extension_Decode, (X509Extension * __this, MethodInfo * method));
DO_APP_FUNC(0x02286270, bool, X509Extension_Equals, (X509Extension * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0150BDE0, int32_t, X509Extension_GetHashCode, (X509Extension * __this, MethodInfo * method));
DO_APP_FUNC(0x02286460, void, X509Extension_WriteLine, (X509Extension * __this, StringBuilder * sb, int32_t n, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x022866E0, String *, X509Extension_ToString, (X509Extension * __this, MethodInfo * method));
DO_APP_FUNC(0x01C9A650, void, X509ExtensionCollection__ctor, (X509ExtensionCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x022868F0, void, X509ExtensionCollection__ctor_1, (X509ExtensionCollection * __this, ASN1 * asn1, MethodInfo * method));
DO_APP_FUNC(0x020202A0, IEnumerator *, X509ExtensionCollection_System_Collections_IEnumerable_GetEnumerator, (X509ExtensionCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x025C4640, void, ARC4Managed__ctor, (ARC4Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x025C47C0, void, ARC4Managed_Finalize, (ARC4Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x025C4840, void, ARC4Managed_Dispose, (ARC4Managed * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x025C4930, Byte__Array *, ARC4Managed_get_Key, (ARC4Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x025C4A90, void, ARC4Managed_set_Key, (ARC4Managed * __this, Byte__Array * value, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, ARC4Managed_get_CanReuseTransform, (ARC4Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x025C4C20, ICryptoTransform *, ARC4Managed_CreateEncryptor, (ARC4Managed * __this, Byte__Array * rgbKey, Byte__Array * rgvIV, MethodInfo * method));
DO_APP_FUNC(0x025C4C50, ICryptoTransform *, ARC4Managed_CreateDecryptor, (ARC4Managed * __this, Byte__Array * rgbKey, Byte__Array * rgvIV, MethodInfo * method));
DO_APP_FUNC(0x025C4C90, void, ARC4Managed_GenerateIV, (ARC4Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x025C4D30, void, ARC4Managed_GenerateKey, (ARC4Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, ARC4Managed_get_CanTransformMultipleBlocks, (ARC4Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x00417920, int32_t, ARC4Managed_get_InputBlockSize, (ARC4Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x00417920, int32_t, ARC4Managed_get_OutputBlockSize, (ARC4Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x025C4D50, void, ARC4Managed_KeySetup, (ARC4Managed * __this, Byte__Array * key, MethodInfo * method));
DO_APP_FUNC(0x025C4EC0, void, ARC4Managed_CheckInput, (ARC4Managed * __this, Byte__Array * inputBuffer, int32_t inputOffset, int32_t inputCount, MethodInfo * method));
DO_APP_FUNC(0x025C5050, int32_t, ARC4Managed_TransformBlock, (ARC4Managed * __this, Byte__Array * inputBuffer, int32_t inputOffset, int32_t inputCount, Byte__Array * outputBuffer, int32_t outputOffset, MethodInfo * method));
DO_APP_FUNC(0x025C5200, int32_t, ARC4Managed_InternalTransformBlock, (ARC4Managed * __this, Byte__Array * inputBuffer, int32_t inputOffset, int32_t inputCount, Byte__Array * outputBuffer, int32_t outputOffset, MethodInfo * method));
DO_APP_FUNC(0x025C5460, Byte__Array *, ARC4Managed_TransformFinalBlock, (ARC4Managed * __this, Byte__Array * inputBuffer, int32_t inputOffset, int32_t inputCount, MethodInfo * method));
DO_APP_FUNC(0x025C5550, int32_t, CryptoConvert_ToInt32LE, (Byte__Array * bytes, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x025C5550, uint32_t, CryptoConvert_ToUInt32LE, (Byte__Array * bytes, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x025C5610, Byte__Array *, CryptoConvert_GetBytesLE, (int32_t val, MethodInfo * method));
DO_APP_FUNC(0x025C5720, Byte__Array *, CryptoConvert_Trim, (Byte__Array * array, MethodInfo * method));
DO_APP_FUNC(0x025C5830, RSA *, CryptoConvert_FromCapiPrivateKeyBlob, (Byte__Array * blob, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x025C6360, DSA *, CryptoConvert_FromCapiPrivateKeyBlobDSA, (Byte__Array * blob, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x025C6AE0, Byte__Array *, CryptoConvert_ToCapiPrivateKeyBlob, (RSA * rsa, MethodInfo * method));
DO_APP_FUNC(0x025C7070, Byte__Array *, CryptoConvert_ToCapiPrivateKeyBlob_1, (DSA * dsa, MethodInfo * method));
DO_APP_FUNC(0x025C7770, RSA *, CryptoConvert_FromCapiPublicKeyBlob, (Byte__Array * blob, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x025C7C10, DSA *, CryptoConvert_FromCapiPublicKeyBlobDSA, (Byte__Array * blob, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x025C8390, Byte__Array *, CryptoConvert_ToCapiPublicKeyBlob, (RSA * rsa, MethodInfo * method));
DO_APP_FUNC(0x025C8750, Byte__Array *, CryptoConvert_ToCapiPublicKeyBlob_1, (DSA * dsa, MethodInfo * method));
DO_APP_FUNC(0x025C8E40, RSA *, CryptoConvert_FromCapiKeyBlob, (Byte__Array * blob, MethodInfo * method));
DO_APP_FUNC(0x025C8E50, RSA *, CryptoConvert_FromCapiKeyBlob_1, (Byte__Array * blob, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x025C9010, DSA *, CryptoConvert_FromCapiKeyBlobDSA, (Byte__Array * blob, MethodInfo * method));
DO_APP_FUNC(0x025C9170, DSA *, CryptoConvert_FromCapiKeyBlobDSA_1, (Byte__Array * blob, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x025CC250, RandomNumberGenerator *, KeyBuilder_get_Rng, (MethodInfo * method));
DO_APP_FUNC(0x025CC300, Byte__Array *, KeyBuilder_Key, (int32_t size, MethodInfo * method));
DO_APP_FUNC(0x025CC3B0, Byte__Array *, KeyBuilder_IV, (int32_t size, MethodInfo * method));
DO_APP_FUNC(0x025CC460, void, KeyPairPersistence__ctor, (KeyPairPersistence * __this, CspParameters * parameters, MethodInfo * method));
DO_APP_FUNC(0x025CC530, void, KeyPairPersistence__ctor_1, (KeyPairPersistence * __this, CspParameters * parameters, String * keyPair, MethodInfo * method));
DO_APP_FUNC(0x025CC610, String *, KeyPairPersistence_get_Filename, (KeyPairPersistence * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, KeyPairPersistence_get_KeyValue, (KeyPairPersistence * __this, MethodInfo * method));
DO_APP_FUNC(0x025CC7F0, void, KeyPairPersistence_set_KeyValue, (KeyPairPersistence * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x025CC800, CspParameters *, KeyPairPersistence_get_Parameters, (KeyPairPersistence * __this, MethodInfo * method));
DO_APP_FUNC(0x025CC810, bool, KeyPairPersistence_Load, (KeyPairPersistence * __this, MethodInfo * method));
DO_APP_FUNC(0x025CC990, void, KeyPairPersistence_Save, (KeyPairPersistence * __this, MethodInfo * method));
DO_APP_FUNC(0x025CCC80, void, KeyPairPersistence_Remove, (KeyPairPersistence * __this, MethodInfo * method));
DO_APP_FUNC(0x025CCCA0, String *, KeyPairPersistence_get_UserPath, (MethodInfo * method));
DO_APP_FUNC(0x025CD210, String *, KeyPairPersistence_get_MachinePath, (MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, KeyPairPersistence__CanSecure, (String * root, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, KeyPairPersistence__ProtectUser, (String * path, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, KeyPairPersistence__ProtectMachine, (String * path, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, KeyPairPersistence__IsUserProtected, (String * path, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, KeyPairPersistence__IsMachineProtected, (String * path, MethodInfo * method));
DO_APP_FUNC(0x025CD790, bool, KeyPairPersistence_CanSecure, (String * path, MethodInfo * method));
DO_APP_FUNC(0x025CD880, bool, KeyPairPersistence_ProtectUser, (String * path, MethodInfo * method));
DO_APP_FUNC(0x025CD950, bool, KeyPairPersistence_ProtectMachine, (String * path, MethodInfo * method));
DO_APP_FUNC(0x025CDA20, bool, KeyPairPersistence_IsUserProtected, (String * path, MethodInfo * method));
DO_APP_FUNC(0x025CDAF0, bool, KeyPairPersistence_IsMachineProtected, (String * path, MethodInfo * method));
DO_APP_FUNC(0x01854CD0, bool, KeyPairPersistence_get_CanChange, (KeyPairPersistence * __this, MethodInfo * method));
DO_APP_FUNC(0x025CDBC0, bool, KeyPairPersistence_get_UseDefaultKeyContainer, (KeyPairPersistence * __this, MethodInfo * method));
DO_APP_FUNC(0x025CDBE0, bool, KeyPairPersistence_get_UseMachineKeyStore, (KeyPairPersistence * __this, MethodInfo * method));
DO_APP_FUNC(0x025CDC00, String *, KeyPairPersistence_get_ContainerName, (KeyPairPersistence * __this, MethodInfo * method));
DO_APP_FUNC(0x025CDE30, CspParameters *, KeyPairPersistence_Copy, (KeyPairPersistence * __this, CspParameters * p, MethodInfo * method));
DO_APP_FUNC(0x025CDFD0, void, KeyPairPersistence_FromXml, (KeyPairPersistence * __this, String * xml, MethodInfo * method));
DO_APP_FUNC(0x025CE210, String *, KeyPairPersistence_ToXml, (KeyPairPersistence * __this, MethodInfo * method));
DO_APP_FUNC(0x025CE4E0, void, KeyPairPersistence__cctor, (MethodInfo * method));
DO_APP_FUNC(0x020DD3E0, void, MD2__ctor, (MD2 * __this, MethodInfo * method));
DO_APP_FUNC(0x025CE630, MD2 *, MD2_Create, (MethodInfo * method));
DO_APP_FUNC(0x025CE830, Byte__Array *, MD2Managed_Padding, (MD2Managed * __this, int32_t nLength, MethodInfo * method));
DO_APP_FUNC(0x025CE910, void, MD2Managed__ctor, (MD2Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x025CE9F0, void, MD2Managed_Initialize, (MD2Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x025CEA50, void, MD2Managed_HashCore, (MD2Managed * __this, Byte__Array * array, int32_t ibStart, int32_t cbSize, MethodInfo * method));
DO_APP_FUNC(0x025CEB50, Byte__Array *, MD2Managed_HashFinal, (MD2Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x025CEDC0, void, MD2Managed_MD2Transform, (MD2Managed * __this, Byte__Array * state, Byte__Array * checksum, Byte__Array * block, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x025CF150, void, MD2Managed__cctor, (MethodInfo * method));
DO_APP_FUNC(0x020DD3E0, void, MD4__ctor, (MD4 * __this, MethodInfo * method));
DO_APP_FUNC(0x025CF200, MD4 *, MD4_Create, (MethodInfo * method));
DO_APP_FUNC(0x025CF410, void, MD4Managed__ctor, (MD4Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x025CF510, void, MD4Managed_Initialize, (MD4Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x025CF680, void, MD4Managed_HashCore, (MD4Managed * __this, Byte__Array * array, int32_t ibStart, int32_t cbSize, MethodInfo * method));
DO_APP_FUNC(0x025CF870, Byte__Array *, MD4Managed_HashFinal, (MD4Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x025CFA80, Byte__Array *, MD4Managed_Padding, (MD4Managed * __this, int32_t nLength, MethodInfo * method));
DO_APP_FUNC(0x025CFB30, uint32_t, MD4Managed_F, (MD4Managed * __this, uint32_t x, uint32_t y, uint32_t z, MethodInfo * method));
DO_APP_FUNC(0x025CFB40, uint32_t, MD4Managed_G, (MD4Managed * __this, uint32_t x, uint32_t y, uint32_t z, MethodInfo * method));
DO_APP_FUNC(0x025CFB50, uint32_t, MD4Managed_H, (MD4Managed * __this, uint32_t x, uint32_t y, uint32_t z, MethodInfo * method));
DO_APP_FUNC(0x025CFB60, uint32_t, MD4Managed_ROL, (MD4Managed * __this, uint32_t x, uint8_t n, MethodInfo * method));
DO_APP_FUNC(0x025CFB80, void, MD4Managed_FF, (MD4Managed * __this, uint32_t * a, uint32_t b, uint32_t c, uint32_t d, uint32_t x, uint8_t s, MethodInfo * method));
DO_APP_FUNC(0x025CFBC0, void, MD4Managed_GG, (MD4Managed * __this, uint32_t * a, uint32_t b, uint32_t c, uint32_t d, uint32_t x, uint8_t s, MethodInfo * method));
DO_APP_FUNC(0x025CFC10, void, MD4Managed_HH, (MD4Managed * __this, uint32_t * a, uint32_t b, uint32_t c, uint32_t d, uint32_t x, uint8_t s, MethodInfo * method));
DO_APP_FUNC(0x025CFC60, void, MD4Managed_Encode, (MD4Managed * __this, Byte__Array * output, UInt32__Array * input, MethodInfo * method));
DO_APP_FUNC(0x025CFDC0, void, MD4Managed_Decode, (MD4Managed * __this, UInt32__Array * output, Byte__Array * input, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x025CFED0, void, MD4Managed_MD4Transform, (MD4Managed * __this, UInt32__Array * state, Byte__Array * block, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x025D0AD0, bool, PKCS1_Compare, (Byte__Array * array1, Byte__Array * array2, MethodInfo * method));
DO_APP_FUNC(0x025D0B70, Byte__Array *, PKCS1_xor, (Byte__Array * array1, Byte__Array * array2, MethodInfo * method));
DO_APP_FUNC(0x025D0C90, Byte__Array *, PKCS1_GetEmptyHash, (HashAlgorithm * hash, MethodInfo * method));
DO_APP_FUNC(0x025D0EF0, Byte__Array *, PKCS1_I2OSP, (int32_t x, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x025D0FD0, Byte__Array *, PKCS1_I2OSP_1, (Byte__Array * x, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x025D10A0, Byte__Array *, PKCS1_OS2IP, (Byte__Array * x, MethodInfo * method));
DO_APP_FUNC(0x025D11C0, Byte__Array *, PKCS1_RSAEP, (RSA * rsa, Byte__Array * m, MethodInfo * method));
DO_APP_FUNC(0x025D11F0, Byte__Array *, PKCS1_RSADP, (RSA * rsa, Byte__Array * c, MethodInfo * method));
DO_APP_FUNC(0x025D11F0, Byte__Array *, PKCS1_RSASP1, (RSA * rsa, Byte__Array * m, MethodInfo * method));
DO_APP_FUNC(0x025D11C0, Byte__Array *, PKCS1_RSAVP1, (RSA * rsa, Byte__Array * s, MethodInfo * method));
DO_APP_FUNC(0x025D1220, Byte__Array *, PKCS1_Encrypt_OAEP, (RSA * rsa, HashAlgorithm * hash, RandomNumberGenerator * rng, Byte__Array * M, MethodInfo * method));
DO_APP_FUNC(0x025D1580, Byte__Array *, PKCS1_Decrypt_OAEP, (RSA * rsa, HashAlgorithm * hash, Byte__Array * C, MethodInfo * method));
DO_APP_FUNC(0x025D1920, Byte__Array *, PKCS1_Sign_v15, (RSA * rsa, HashAlgorithm * hash, Byte__Array * hashValue, MethodInfo * method));
DO_APP_FUNC(0x025D1A40, Byte__Array *, PKCS1_Sign_v15_1, (RSA * rsa, String * hashName, Byte__Array * hashValue, MethodInfo * method));
DO_APP_FUNC(0x025D1BC0, bool, PKCS1_Verify_v15, (RSA * rsa, HashAlgorithm * hash, Byte__Array * hashValue, Byte__Array * signature, MethodInfo * method));
DO_APP_FUNC(0x025D1CA0, bool, PKCS1_Verify_v15_1, (RSA * rsa, String * hashName, Byte__Array * hashValue, Byte__Array * signature, MethodInfo * method));
DO_APP_FUNC(0x025D1E40, bool, PKCS1_Verify_v15_2, (RSA * rsa, HashAlgorithm * hash, Byte__Array * hashValue, Byte__Array * signature, bool tryNonStandardEncoding, MethodInfo * method));
DO_APP_FUNC(0x025D20D0, Byte__Array *, PKCS1_Encode_v15, (HashAlgorithm * hash, Byte__Array * hashValue, int32_t emLength, MethodInfo * method));
DO_APP_FUNC(0x025D2750, Byte__Array *, PKCS1_MGF1, (HashAlgorithm * hash, Byte__Array * mgfSeed, int32_t maskLen, MethodInfo * method));
DO_APP_FUNC(0x025D29A0, HashAlgorithm *, PKCS1_CreateFromName, (String * name, MethodInfo * method));
DO_APP_FUNC(0x025D2E00, void, PKCS1__cctor, (MethodInfo * method));
DO_APP_FUNC(0x025D3650, void, PKCS8_PrivateKeyInfo__ctor, (PKCS8_PrivateKeyInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025D37A0, void, PKCS8_PrivateKeyInfo__ctor_1, (PKCS8_PrivateKeyInfo * __this, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x025D3900, Byte__Array *, PKCS8_PrivateKeyInfo_get_PrivateKey, (PKCS8_PrivateKeyInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025D3A50, void, PKCS8_PrivateKeyInfo_Decode, (PKCS8_PrivateKeyInfo * __this, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x025D3E10, Byte__Array *, PKCS8_PrivateKeyInfo_RemoveLeadingZero, (Byte__Array * bigInt, MethodInfo * method));
DO_APP_FUNC(0x025D3F10, Byte__Array *, PKCS8_PrivateKeyInfo_Normalize, (Byte__Array * bigInt, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x025D4000, RSA *, PKCS8_PrivateKeyInfo_DecodeRSA, (Byte__Array * keypair, MethodInfo * method));
DO_APP_FUNC(0x025D46B0, DSA *, PKCS8_PrivateKeyInfo_DecodeDSA, (Byte__Array * privateKey, DSAParameters dsaParameters, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, PKCS8_EncryptedPrivateKeyInfo__ctor, (PKCS8_EncryptedPrivateKeyInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025D2F50, void, PKCS8_EncryptedPrivateKeyInfo__ctor_1, (PKCS8_EncryptedPrivateKeyInfo * __this, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, PKCS8_EncryptedPrivateKeyInfo_get_Algorithm, (PKCS8_EncryptedPrivateKeyInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025D2F60, Byte__Array *, PKCS8_EncryptedPrivateKeyInfo_get_EncryptedData, (PKCS8_EncryptedPrivateKeyInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025D30B0, Byte__Array *, PKCS8_EncryptedPrivateKeyInfo_get_Salt, (PKCS8_EncryptedPrivateKeyInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, int32_t, PKCS8_EncryptedPrivateKeyInfo_get_IterationCount, (PKCS8_EncryptedPrivateKeyInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025D3240, void, PKCS8_EncryptedPrivateKeyInfo_Decode, (PKCS8_EncryptedPrivateKeyInfo * __this, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x025D48D0, void, RC4__ctor, (RC4 * __this, MethodInfo * method));
DO_APP_FUNC(0x025D49B0, Byte__Array *, RC4_get_IV, (RC4 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RC4_set_IV, (RC4 * __this, Byte__Array * value, MethodInfo * method));
DO_APP_FUNC(0x025D4A30, RC4 *, RC4_Create, (MethodInfo * method));
DO_APP_FUNC(0x025D4CC0, void, RC4__cctor, (MethodInfo * method));
DO_APP_FUNC(0x025D4FD0, void, RSAManaged__ctor, (RSAManaged * __this, int32_t keySize, MethodInfo * method));
DO_APP_FUNC(0x025D51B0, void, RSAManaged_Finalize, (RSAManaged * __this, MethodInfo * method));
DO_APP_FUNC(0x025D5230, void, RSAManaged_GenerateKeyPair, (RSAManaged * __this, MethodInfo * method));
DO_APP_FUNC(0x025D56D0, int32_t, RSAManaged_get_KeySize, (RSAManaged * __this, MethodInfo * method));
DO_APP_FUNC(0x025D57D0, String *, RSAManaged_get_KeyExchangeAlgorithm, (RSAManaged * __this, MethodInfo * method));
DO_APP_FUNC(0x025D5850, bool, RSAManaged_get_PublicOnly, (RSAManaged * __this, MethodInfo * method));
DO_APP_FUNC(0x025D5950, String *, RSAManaged_get_SignatureAlgorithm, (RSAManaged * __this, MethodInfo * method));
DO_APP_FUNC(0x025D59D0, Byte__Array *, RSAManaged_DecryptValue, (RSAManaged * __this, Byte__Array * rgb, MethodInfo * method));
DO_APP_FUNC(0x025D5FC0, Byte__Array *, RSAManaged_EncryptValue, (RSAManaged * __this, Byte__Array * rgb, MethodInfo * method));
DO_APP_FUNC(0x025D6260, RSAParameters, RSAManaged_ExportParameters, (RSAManaged * __this, bool includePrivateParameters, MethodInfo * method));
DO_APP_FUNC(0x025D6680, void, RSAManaged_ImportParameters, (RSAManaged * __this, RSAParameters parameters, MethodInfo * method));
DO_APP_FUNC(0x025D72F0, void, RSAManaged_Dispose, (RSAManaged * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x025D7620, void, RSAManaged_add_KeyGenerated, (RSAManaged * __this, RSAManaged_KeyGeneratedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x025D7710, void, RSAManaged_remove_KeyGenerated, (RSAManaged * __this, RSAManaged_KeyGeneratedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x025D7800, String *, RSAManaged_ToXmlString, (RSAManaged * __this, bool includePrivateParameters, MethodInfo * method));
DO_APP_FUNC(0x025D7DE0, bool, RSAManaged_get_IsCrtPossible, (RSAManaged * __this, MethodInfo * method));
DO_APP_FUNC(0x025D7DF0, Byte__Array *, RSAManaged_GetPaddedValue, (RSAManaged * __this, BigInteger * value, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, RSAManaged_KeyGeneratedEventHandler__ctor, (RSAManaged_KeyGeneratedEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x015FE410, void, RSAManaged_KeyGeneratedEventHandler_Invoke, (RSAManaged_KeyGeneratedEventHandler * __this, Object * sender, EventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, RSAManaged_KeyGeneratedEventHandler_BeginInvoke, (RSAManaged_KeyGeneratedEventHandler * __this, Object * sender, EventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, RSAManaged_KeyGeneratedEventHandler_EndInvoke, (RSAManaged_KeyGeneratedEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x025D7EF0, void, SymmetricTransform__ctor, (SymmetricTransform * __this, SymmetricAlgorithm * symmAlgo, bool encryption, Byte__Array * rgbIV, MethodInfo * method));
DO_APP_FUNC(0x025D8260, void, SymmetricTransform_Finalize, (SymmetricTransform * __this, MethodInfo * method));
DO_APP_FUNC(0x025D82E0, void, SymmetricTransform_System_IDisposable_Dispose, (SymmetricTransform * __this, MethodInfo * method));
DO_APP_FUNC(0x025D8390, void, SymmetricTransform_Dispose, (SymmetricTransform * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, SymmetricTransform_get_CanTransformMultipleBlocks, (SymmetricTransform * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, SymmetricTransform_get_CanReuseTransform, (SymmetricTransform * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A010, int32_t, SymmetricTransform_get_InputBlockSize, (SymmetricTransform * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A010, int32_t, SymmetricTransform_get_OutputBlockSize, (SymmetricTransform * __this, MethodInfo * method));
DO_APP_FUNC(0x025D83F0, void, SymmetricTransform_Transform, (SymmetricTransform * __this, Byte__Array * input, Byte__Array * output, MethodInfo * method));
DO_APP_FUNC(0x025D8610, void, SymmetricTransform_CBC, (SymmetricTransform * __this, Byte__Array * input, Byte__Array * output, MethodInfo * method));
DO_APP_FUNC(0x025D87B0, void, SymmetricTransform_CFB, (SymmetricTransform * __this, Byte__Array * input, Byte__Array * output, MethodInfo * method));
DO_APP_FUNC(0x025D8A20, void, SymmetricTransform_OFB, (SymmetricTransform * __this, Byte__Array * input, Byte__Array * output, MethodInfo * method));
DO_APP_FUNC(0x025D8A80, void, SymmetricTransform_CTS, (SymmetricTransform * __this, Byte__Array * input, Byte__Array * output, MethodInfo * method));
DO_APP_FUNC(0x025D8AE0, void, SymmetricTransform_CheckInput, (SymmetricTransform * __this, Byte__Array * inputBuffer, int32_t inputOffset, int32_t inputCount, MethodInfo * method));
DO_APP_FUNC(0x025D8C70, int32_t, SymmetricTransform_TransformBlock, (SymmetricTransform * __this, Byte__Array * inputBuffer, int32_t inputOffset, int32_t inputCount, Byte__Array * outputBuffer, int32_t outputOffset, MethodInfo * method));
DO_APP_FUNC(0x025D8F50, bool, SymmetricTransform_get_KeepLastBlock, (SymmetricTransform * __this, MethodInfo * method));
DO_APP_FUNC(0x025D8F70, int32_t, SymmetricTransform_InternalTransformBlock, (SymmetricTransform * __this, Byte__Array * inputBuffer, int32_t inputOffset, int32_t inputCount, Byte__Array * outputBuffer, int32_t outputOffset, MethodInfo * method));
DO_APP_FUNC(0x025D9190, void, SymmetricTransform_Random, (SymmetricTransform * __this, Byte__Array * buffer, int32_t start, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x025D9290, void, SymmetricTransform_ThrowBadPaddingException, (SymmetricTransform * __this, PaddingMode__Enum padding, int32_t length, int32_t position, MethodInfo * method));
DO_APP_FUNC(0x025D9450, Byte__Array *, SymmetricTransform_FinalEncrypt, (SymmetricTransform * __this, Byte__Array * inputBuffer, int32_t inputOffset, int32_t inputCount, MethodInfo * method));
DO_APP_FUNC(0x025D9850, Byte__Array *, SymmetricTransform_FinalDecrypt, (SymmetricTransform * __this, Byte__Array * inputBuffer, int32_t inputOffset, int32_t inputCount, MethodInfo * method));
DO_APP_FUNC(0x025D9BE0, Byte__Array *, SymmetricTransform_TransformFinalBlock, (SymmetricTransform * __this, Byte__Array * inputBuffer, int32_t inputOffset, int32_t inputCount, MethodInfo * method));
DO_APP_FUNC(0x025C92E0, void, DSAManaged__ctor, (DSAManaged * __this, int32_t dwKeySize, MethodInfo * method));
DO_APP_FUNC(0x025C94A0, void, DSAManaged_Finalize, (DSAManaged * __this, MethodInfo * method));
DO_APP_FUNC(0x025C9520, void, DSAManaged_Generate, (DSAManaged * __this, MethodInfo * method));
DO_APP_FUNC(0x025C96B0, void, DSAManaged_GenerateKeyPair, (DSAManaged * __this, MethodInfo * method));
DO_APP_FUNC(0x025C9810, void, DSAManaged_add, (DSAManaged * __this, Byte__Array * a, Byte__Array * b, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x025C98D0, void, DSAManaged_GenerateParams, (DSAManaged * __this, int32_t keyLength, MethodInfo * method));
DO_APP_FUNC(0x025CA2C0, RandomNumberGenerator *, DSAManaged_get_Random, (DSAManaged * __this, MethodInfo * method));
DO_APP_FUNC(0x025CA2F0, int32_t, DSAManaged_get_KeySize, (DSAManaged * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, String *, DSAManaged_get_KeyExchangeAlgorithm, (DSAManaged * __this, MethodInfo * method));
DO_APP_FUNC(0x025CA320, bool, DSAManaged_get_PublicOnly, (DSAManaged * __this, MethodInfo * method));
DO_APP_FUNC(0x025CA3D0, String *, DSAManaged_get_SignatureAlgorithm, (DSAManaged * __this, MethodInfo * method));
DO_APP_FUNC(0x025CA450, Byte__Array *, DSAManaged_NormalizeArray, (DSAManaged * __this, Byte__Array * array, MethodInfo * method));
DO_APP_FUNC(0x025CA540, DSAParameters, DSAManaged_ExportParameters, (DSAManaged * __this, bool includePrivateParameters, MethodInfo * method));
DO_APP_FUNC(0x025CA880, void, DSAManaged_ImportParameters, (DSAManaged * __this, DSAParameters parameters, MethodInfo * method));
DO_APP_FUNC(0x025CB1E0, Byte__Array *, DSAManaged_CreateSignature, (DSAManaged * __this, Byte__Array * rgbHash, MethodInfo * method));
DO_APP_FUNC(0x025CB6B0, bool, DSAManaged_VerifySignature, (DSAManaged * __this, Byte__Array * rgbHash, Byte__Array * rgbSignature, MethodInfo * method));
DO_APP_FUNC(0x025CBD90, void, DSAManaged_Dispose, (DSAManaged * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x025CC070, void, DSAManaged_add_KeyGenerated, (DSAManaged * __this, DSAManaged_KeyGeneratedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x025CC160, void, DSAManaged_remove_KeyGenerated, (DSAManaged * __this, DSAManaged_KeyGeneratedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, DSAManaged_KeyGeneratedEventHandler__ctor, (DSAManaged_KeyGeneratedEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x015FE410, void, DSAManaged_KeyGeneratedEventHandler_Invoke, (DSAManaged_KeyGeneratedEventHandler * __this, Object * sender, EventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, DSAManaged_KeyGeneratedEventHandler_BeginInvoke, (DSAManaged_KeyGeneratedEventHandler * __this, Object * sender, EventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, DSAManaged_KeyGeneratedEventHandler_EndInvoke, (DSAManaged_KeyGeneratedEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x023C5490, void, BigInteger__ctor, (BigInteger * __this, BigInteger_Sign__Enum sign, uint32_t len, MethodInfo * method));
DO_APP_FUNC(0x023C5530, void, BigInteger__ctor_1, (BigInteger * __this, BigInteger * bi, MethodInfo * method));
DO_APP_FUNC(0x023C56A0, void, BigInteger__ctor_2, (BigInteger * __this, BigInteger * bi, uint32_t len, MethodInfo * method));
DO_APP_FUNC(0x023C57C0, void, BigInteger__ctor_3, (BigInteger * __this, Byte__Array * inData, MethodInfo * method));
DO_APP_FUNC(0x023C5BA0, void, BigInteger__ctor_4, (BigInteger * __this, uint32_t ui, MethodInfo * method));
DO_APP_FUNC(0x023C5C60, BigInteger *, BigInteger_op_Implicit, (uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x023C5DB0, BigInteger *, BigInteger_op_Implicit_1, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x023C5F30, BigInteger *, BigInteger_op_Addition, (BigInteger * bi1, BigInteger * bi2, MethodInfo * method));
DO_APP_FUNC(0x023C61C0, BigInteger *, BigInteger_op_Subtraction, (BigInteger * bi1, BigInteger * bi2, MethodInfo * method));
DO_APP_FUNC(0x023C6480, uint32_t, BigInteger_op_Modulus, (BigInteger * bi, uint32_t ui, MethodInfo * method));
DO_APP_FUNC(0x023C64F0, BigInteger *, BigInteger_op_Modulus_1, (BigInteger * bi1, BigInteger * bi2, MethodInfo * method));
DO_APP_FUNC(0x023C6530, BigInteger *, BigInteger_op_Division, (BigInteger * bi1, BigInteger * bi2, MethodInfo * method));
DO_APP_FUNC(0x023C6570, BigInteger *, BigInteger_op_Multiply, (BigInteger * bi1, BigInteger * bi2, MethodInfo * method));
DO_APP_FUNC(0x023C6880, BigInteger *, BigInteger_op_Multiply_1, (BigInteger * bi, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x023C6A70, BigInteger *, BigInteger_op_LeftShift, (BigInteger * bi1, int32_t shiftVal, MethodInfo * method));
DO_APP_FUNC(0x023C6A80, BigInteger *, BigInteger_op_RightShift, (BigInteger * bi1, int32_t shiftVal, MethodInfo * method));
DO_APP_FUNC(0x023C6A90, RandomNumberGenerator *, BigInteger_get_Rng, (MethodInfo * method));
DO_APP_FUNC(0x023C6BB0, BigInteger *, BigInteger_GenerateRandom, (int32_t bits, RandomNumberGenerator * rng, MethodInfo * method));
DO_APP_FUNC(0x023C6EB0, BigInteger *, BigInteger_GenerateRandom_1, (int32_t bits, MethodInfo * method));
DO_APP_FUNC(0x023C6F60, void, BigInteger_Randomize, (BigInteger * __this, RandomNumberGenerator * rng, MethodInfo * method));
DO_APP_FUNC(0x023C71D0, void, BigInteger_Randomize_1, (BigInteger * __this, MethodInfo * method));
DO_APP_FUNC(0x023C7280, int32_t, BigInteger_BitCount, (BigInteger * __this, MethodInfo * method));
DO_APP_FUNC(0x023C7360, bool, BigInteger_TestBit, (BigInteger * __this, uint32_t bitNum, MethodInfo * method));
DO_APP_FUNC(0x023C73B0, bool, BigInteger_TestBit_1, (BigInteger * __this, int32_t bitNum, MethodInfo * method));
DO_APP_FUNC(0x023C74B0, void, BigInteger_SetBit, (BigInteger * __this, uint32_t bitNum, MethodInfo * method));
DO_APP_FUNC(0x023C7500, void, BigInteger_SetBit_1, (BigInteger * __this, uint32_t bitNum, bool value, MethodInfo * method));
DO_APP_FUNC(0x023C7590, int32_t, BigInteger_LowestSetBit, (BigInteger * __this, MethodInfo * method));
DO_APP_FUNC(0x023C7670, Byte__Array *, BigInteger_GetBytes, (BigInteger * __this, MethodInfo * method));
DO_APP_FUNC(0x023C7800, bool, BigInteger_op_Equality, (BigInteger * bi1, uint32_t ui, MethodInfo * method));
DO_APP_FUNC(0x023C78B0, bool, BigInteger_op_Inequality, (BigInteger * bi1, uint32_t ui, MethodInfo * method));
DO_APP_FUNC(0x023C7960, bool, BigInteger_op_Equality_1, (BigInteger * bi1, BigInteger * bi2, MethodInfo * method));
DO_APP_FUNC(0x023C7A80, bool, BigInteger_op_Inequality_1, (BigInteger * bi1, BigInteger * bi2, MethodInfo * method));
DO_APP_FUNC(0x023C7BA0, bool, BigInteger_op_GreaterThan, (BigInteger * bi1, BigInteger * bi2, MethodInfo * method));
DO_APP_FUNC(0x023C7BC0, bool, BigInteger_op_LessThan, (BigInteger * bi1, BigInteger * bi2, MethodInfo * method));
DO_APP_FUNC(0x023C7BE0, bool, BigInteger_op_GreaterThanOrEqual, (BigInteger * bi1, BigInteger * bi2, MethodInfo * method));
DO_APP_FUNC(0x023C7C00, bool, BigInteger_op_LessThanOrEqual, (BigInteger * bi1, BigInteger * bi2, MethodInfo * method));
DO_APP_FUNC(0x023C7C20, String *, BigInteger_ToString, (BigInteger * __this, uint32_t radix, MethodInfo * method));
DO_APP_FUNC(0x023C7CC0, String *, BigInteger_ToString_1, (BigInteger * __this, uint32_t radix, String * characterSet, MethodInfo * method));
DO_APP_FUNC(0x023C8180, void, BigInteger_Normalize, (BigInteger * __this, MethodInfo * method));
DO_APP_FUNC(0x023C81E0, void, BigInteger_Clear, (BigInteger * __this, MethodInfo * method));
DO_APP_FUNC(0x023C8240, int32_t, BigInteger_GetHashCode, (BigInteger * __this, MethodInfo * method));
DO_APP_FUNC(0x023C8290, String *, BigInteger_ToString_2, (BigInteger * __this, MethodInfo * method));
DO_APP_FUNC(0x023C8320, bool, BigInteger_Equals, (BigInteger * __this, Object * o, MethodInfo * method));
DO_APP_FUNC(0x023C84D0, BigInteger *, BigInteger_ModInverse, (BigInteger * __this, BigInteger * modulus, MethodInfo * method));
DO_APP_FUNC(0x023C84E0, BigInteger *, BigInteger_ModPow, (BigInteger * __this, BigInteger * exp, BigInteger * n, MethodInfo * method));
DO_APP_FUNC(0x023C8660, bool, BigInteger_IsProbablePrime, (BigInteger * __this, MethodInfo * method));
DO_APP_FUNC(0x023C8930, BigInteger *, BigInteger_GeneratePseudoPrime, (int32_t bits, MethodInfo * method));
DO_APP_FUNC(0x023C8A90, void, BigInteger_Incr2, (BigInteger * __this, MethodInfo * method));
DO_APP_FUNC(0x023C8BD0, void, BigInteger__cctor, (MethodInfo * method));
DO_APP_FUNC(0x023CC160, void, BigInteger_ModulusRing__ctor, (BigInteger_ModulusRing * __this, BigInteger * modulus, MethodInfo * method));
DO_APP_FUNC(0x023CC370, void, BigInteger_ModulusRing_BarrettReduction, (BigInteger_ModulusRing * __this, BigInteger * x, MethodInfo * method));
DO_APP_FUNC(0x023CC8E0, BigInteger *, BigInteger_ModulusRing_Multiply, (BigInteger_ModulusRing * __this, BigInteger * a, BigInteger * b, MethodInfo * method));
DO_APP_FUNC(0x023CCB70, BigInteger *, BigInteger_ModulusRing_Difference, (BigInteger_ModulusRing * __this, BigInteger * a, BigInteger * b, MethodInfo * method));
DO_APP_FUNC(0x023CCDD0, BigInteger *, BigInteger_ModulusRing_Pow, (BigInteger_ModulusRing * __this, BigInteger * a, BigInteger * k, MethodInfo * method));
DO_APP_FUNC(0x023CCFE0, BigInteger *, BigInteger_ModulusRing_Pow_1, (BigInteger_ModulusRing * __this, uint32_t b, BigInteger * exp, MethodInfo * method));
DO_APP_FUNC(0x023C8C80, BigInteger *, BigInteger_Kernel_AddSameSign, (BigInteger * bi1, BigInteger * bi2, MethodInfo * method));
DO_APP_FUNC(0x023C9050, BigInteger *, BigInteger_Kernel_Subtract, (BigInteger * big, BigInteger * small, MethodInfo * method));
DO_APP_FUNC(0x023C93F0, void, BigInteger_Kernel_MinusEq, (BigInteger * big, BigInteger * small, MethodInfo * method));
DO_APP_FUNC(0x023C9590, void, BigInteger_Kernel_PlusEq, (BigInteger * bi1, BigInteger * bi2, MethodInfo * method));
DO_APP_FUNC(0x023C9840, BigInteger_Sign__Enum, BigInteger_Kernel_Compare, (BigInteger * bi1, BigInteger * bi2, MethodInfo * method));
DO_APP_FUNC(0x023C9A40, uint32_t, BigInteger_Kernel_SingleByteDivideInPlace, (BigInteger * n, uint32_t d, MethodInfo * method));
DO_APP_FUNC(0x023C6480, uint32_t, BigInteger_Kernel_DwordMod, (BigInteger * n, uint32_t d, MethodInfo * method));
DO_APP_FUNC(0x023C9B40, BigInteger__Array *, BigInteger_Kernel_DwordDivMod, (BigInteger * n, uint32_t d, MethodInfo * method));
DO_APP_FUNC(0x023C9EA0, BigInteger__Array *, BigInteger_Kernel_multiByteDivide, (BigInteger * bi1, BigInteger * bi2, MethodInfo * method));
DO_APP_FUNC(0x023CA9A0, BigInteger *, BigInteger_Kernel_LeftShift, (BigInteger * bi, int32_t n, MethodInfo * method));
DO_APP_FUNC(0x023CAEA0, BigInteger *, BigInteger_Kernel_RightShift, (BigInteger * bi, int32_t n, MethodInfo * method));
DO_APP_FUNC(0x023CB260, BigInteger *, BigInteger_Kernel_MultiplyByDword, (BigInteger * n, uint32_t f, MethodInfo * method));
DO_APP_FUNC(0x023CB4F0, void, BigInteger_Kernel_Multiply, (UInt32__Array * x, uint32_t xOffset, uint32_t xLen, UInt32__Array * y, uint32_t yOffset, uint32_t yLen, UInt32__Array * d, uint32_t dOffset, MethodInfo * method));
DO_APP_FUNC(0x023CB640, void, BigInteger_Kernel_MultiplyMod2p32pmod, (UInt32__Array * x, int32_t xOffset, int32_t xLen, UInt32__Array * y, int32_t yOffest, int32_t yLen, UInt32__Array * d, int32_t dOffset, int32_t mod, MethodInfo * method));
DO_APP_FUNC(0x023CB780, uint32_t, BigInteger_Kernel_modInverse, (BigInteger * bi, uint32_t modulus, MethodInfo * method));
DO_APP_FUNC(0x023CB880, BigInteger *, BigInteger_Kernel_modInverse_1, (BigInteger * bi, BigInteger * modulus, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, PrimalityTest__ctor, (PrimalityTest * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x023CD700, bool, PrimalityTest_Invoke, (PrimalityTest * __this, BigInteger * bi, ConfidenceFactor__Enum confidence, MethodInfo * method));
DO_APP_FUNC(0x023CDC30, IAsyncResult *, PrimalityTest_BeginInvoke, (PrimalityTest * __this, BigInteger * bi, ConfidenceFactor__Enum confidence, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x008A1BF0, bool, PrimalityTest_EndInvoke, (PrimalityTest * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x023CDD00, int32_t, PrimalityTests_GetSPPRounds, (BigInteger * bi, ConfidenceFactor__Enum confidence, MethodInfo * method));
DO_APP_FUNC(0x023CDF20, bool, PrimalityTests_Test, (BigInteger * n, ConfidenceFactor__Enum confidence, MethodInfo * method));
DO_APP_FUNC(0x023CDF70, bool, PrimalityTests_RabinMillerTest, (BigInteger * n, ConfidenceFactor__Enum confidence, MethodInfo * method));
DO_APP_FUNC(0x023CE3B0, bool, PrimalityTests_SmallPrimeSppTest, (BigInteger * bi, ConfidenceFactor__Enum confidence, MethodInfo * method));
DO_APP_FUNC(0x0043D9E0, ConfidenceFactor__Enum, PrimeGeneratorBase_get_Confidence, (PrimeGeneratorBase * __this, MethodInfo * method));
DO_APP_FUNC(0x023CD150, PrimalityTest *, PrimeGeneratorBase_get_PrimalityTest, (PrimeGeneratorBase * __this, MethodInfo * method));
DO_APP_FUNC(0x023CD2A0, int32_t, PrimeGeneratorBase_get_TrialDivisionBounds, (PrimeGeneratorBase * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, PrimeGeneratorBase__ctor, (PrimeGeneratorBase * __this, MethodInfo * method));
DO_APP_FUNC(0x023CD2B0, BigInteger *, SequentialSearchPrimeGeneratorBase_GenerateSearchBase, (SequentialSearchPrimeGeneratorBase * __this, int32_t bits, Object * context, MethodInfo * method));
DO_APP_FUNC(0x01F938C0, BigInteger *, SequentialSearchPrimeGeneratorBase_GenerateNewPrime, (SequentialSearchPrimeGeneratorBase * __this, int32_t bits, MethodInfo * method));
DO_APP_FUNC(0x023CD390, BigInteger *, SequentialSearchPrimeGeneratorBase_GenerateNewPrime_1, (SequentialSearchPrimeGeneratorBase * __this, int32_t bits, Object * context, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, SequentialSearchPrimeGeneratorBase_IsPrimeAcceptable, (SequentialSearchPrimeGeneratorBase * __this, BigInteger * bi, Object * context, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SequentialSearchPrimeGeneratorBase__ctor, (SequentialSearchPrimeGeneratorBase * __this, MethodInfo * method));
DO_APP_FUNC(0x01A084B0, bool, ReflectionExtensions_IsEnum, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x023AE4B0, bool, ReflectionExtensions_IsAbstract, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x023AE4E0, bool, ReflectionExtensions_IsSealed, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x013DD200, Type *, ReflectionExtensions_BaseType, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x023AE510, Assembly *, ReflectionExtensions_Assembly, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x023AE540, TypeCode__Enum, ReflectionExtensions_GetTypeCode, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x023AE5E0, bool, ReflectionExtensions_ReflectionOnly, (Assembly * assm, MethodInfo * method));
DO_APP_FUNC(0x023B70F0, uint32_t, UnsafeNativeMethods_ManifestEtw_EventRegister, (Guid * providerId, UnsafeNativeMethods_ManifestEtw_EtwEnableCallback * enableCallback, Void * callbackContext, int64_t * registrationHandle, MethodInfo * method));
DO_APP_FUNC(0x023B71C0, uint32_t, UnsafeNativeMethods_ManifestEtw_EventUnregister, (int64_t registrationHandle, MethodInfo * method));
DO_APP_FUNC(0x023B7260, int32_t, UnsafeNativeMethods_ManifestEtw_EventWriteTransferWrapper, (int64_t registrationHandle, EventDescriptor * eventDescriptor, Guid * activityId, Guid * relatedActivityId, int32_t userDataCount, EventProvider_EventData * userData, MethodInfo * method));
DO_APP_FUNC(0x023B73B0, int32_t, UnsafeNativeMethods_ManifestEtw_EventWriteTransfer, (int64_t registrationHandle, EventDescriptor * eventDescriptor, Guid * activityId, Guid * relatedActivityId, int32_t userDataCount, EventProvider_EventData * userData, MethodInfo * method));
DO_APP_FUNC(0x023B7480, int32_t, UnsafeNativeMethods_ManifestEtw_EventActivityIdControl, (UnsafeNativeMethods_ManifestEtw_ActivityControl__Enum ControlCode, Guid * ActivityId, MethodInfo * method));
DO_APP_FUNC(0x023B7530, int32_t, UnsafeNativeMethods_ManifestEtw_EventSetInformation, (int64_t registrationHandle, UnsafeNativeMethods_ManifestEtw_EVENT_INFO_CLASS__Enum informationClass, Void * eventInformation, int32_t informationLength, MethodInfo * method));
DO_APP_FUNC(0x023B75F0, int32_t, UnsafeNativeMethods_ManifestEtw_EnumerateTraceGuidsEx, (UnsafeNativeMethods_ManifestEtw_TRACE_QUERY_INFO_CLASS__Enum TraceQueryInfoClass, Void * InBuffer, int32_t InBufferSize, Void * OutBuffer, int32_t OutBufferSize, int32_t * ReturnLength, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnsafeNativeMethods_ManifestEtw_EtwEnableCallback__ctor, (UnsafeNativeMethods_ManifestEtw_EtwEnableCallback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x023B76B0, void, UnsafeNativeMethods_ManifestEtw_EtwEnableCallback_Invoke, (UnsafeNativeMethods_ManifestEtw_EtwEnableCallback * __this, Guid * sourceId, int32_t isEnabled, uint8_t level, int64_t matchAnyKeywords, int64_t matchAllKeywords, UnsafeNativeMethods_ManifestEtw_EVENT_FILTER_DESCRIPTOR * filterData, Void * callbackContext, MethodInfo * method));
DO_APP_FUNC(0x023B7C70, IAsyncResult *, UnsafeNativeMethods_ManifestEtw_EtwEnableCallback_BeginInvoke, (UnsafeNativeMethods_ManifestEtw_EtwEnableCallback * __this, Guid * sourceId, int32_t isEnabled, uint8_t level, int64_t matchAnyKeywords, int64_t matchAllKeywords, UnsafeNativeMethods_ManifestEtw_EVENT_FILTER_DESCRIPTOR * filterData, Void * callbackContext, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x006FD370, void, UnsafeNativeMethods_ManifestEtw_EtwEnableCallback_EndInvoke, (UnsafeNativeMethods_ManifestEtw_EtwEnableCallback * __this, Guid * sourceId, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x023B41C0, void, Registry__cctor, (MethodInfo * method));
DO_APP_FUNC(0x023B4890, void, RegistryKey__cctor, (MethodInfo * method));
DO_APP_FUNC(0x023B4B60, void, RegistryKey__ctor, (RegistryKey * __this, RegistryHive__Enum hiveId, MethodInfo * method));
DO_APP_FUNC(0x023B4B80, void, RegistryKey__ctor_1, (RegistryKey * __this, RegistryHive__Enum hiveId, void * keyHandle, bool remoteRoot, MethodInfo * method));
DO_APP_FUNC(0x023B4DC0, void, RegistryKey__ctor_2, (RegistryKey * __this, Object * data, String * keyName, bool writable, MethodInfo * method));
DO_APP_FUNC(0x023B4DD0, bool, RegistryKey_IsEquals, (RegistryKey * a, RegistryKey * b, MethodInfo * method));
DO_APP_FUNC(0x023B4E60, void, RegistryKey_Dispose, (RegistryKey * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, RegistryKey_get_Name, (RegistryKey * __this, MethodInfo * method));
DO_APP_FUNC(0x023B5060, void, RegistryKey_Flush, (RegistryKey * __this, MethodInfo * method));
DO_APP_FUNC(0x023B5120, void, RegistryKey_Close, (RegistryKey * __this, MethodInfo * method));
DO_APP_FUNC(0x023B52A0, SafeRegistryHandle *, RegistryKey_get_Handle, (RegistryKey * __this, MethodInfo * method));
DO_APP_FUNC(0x023B54C0, RegistryKey *, RegistryKey_OpenSubKey, (RegistryKey * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x023B54D0, RegistryKey *, RegistryKey_OpenSubKey_1, (RegistryKey * __this, String * name, bool writable, MethodInfo * method));
DO_APP_FUNC(0x023B5700, Object *, RegistryKey_GetValue, (RegistryKey * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x023B5860, Object *, RegistryKey_GetValue_1, (RegistryKey * __this, String * name, Object * defaultValue, MethodInfo * method));
DO_APP_FUNC(0x023B59D0, String__Array *, RegistryKey_GetSubKeyNames, (RegistryKey * __this, MethodInfo * method));
DO_APP_FUNC(0x023B5B10, String *, RegistryKey_ToString, (RegistryKey * __this, MethodInfo * method));
DO_APP_FUNC(0x01D60150, bool, RegistryKey_get_IsRoot, (RegistryKey * __this, MethodInfo * method));
DO_APP_FUNC(0x023B5C50, RegistryHive__Enum, RegistryKey_get_Hive, (RegistryKey * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Object *, RegistryKey_get_InternalHandle, (RegistryKey * __this, MethodInfo * method));
DO_APP_FUNC(0x023B5D20, void, RegistryKey_AssertKeyStillValid, (RegistryKey * __this, MethodInfo * method));
DO_APP_FUNC(0x023B5DD0, void, RegistryKey_AssertKeyNameLength, (RegistryKey * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x023B5E90, String *, RegistryKey_DecodeString, (Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x023B5F90, IOException *, RegistryKey_CreateMarkedForDeletionException, (MethodInfo * method));
DO_APP_FUNC(0x023B5FF0, String *, RegistryKey_GetHiveName, (RegistryHive__Enum hive, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, ExpandString__ctor, (ExpandString * __this, String * s, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, ExpandString_ToString, (ExpandString * __this, MethodInfo * method));
DO_APP_FUNC(0x023AE610, String *, ExpandString_Expand, (ExpandString * __this, MethodInfo * method));
DO_APP_FUNC(0x023B61A0, bool, RegistryKeyComparer_Equals, (RegistryKeyComparer * __this, Object * x, Object * y, MethodInfo * method));
DO_APP_FUNC(0x023B6300, int32_t, RegistryKeyComparer_GetHashCode, (RegistryKeyComparer * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RegistryKeyComparer__ctor, (RegistryKeyComparer * __this, MethodInfo * method));
DO_APP_FUNC(0x023AE8E0, void, KeyHandler__cctor, (MethodInfo * method));
DO_APP_FUNC(0x023AEEE0, void, KeyHandler__ctor, (KeyHandler * __this, RegistryKey * rkey, String * basedir, MethodInfo * method));
DO_APP_FUNC(0x023AEF00, void, KeyHandler__ctor_1, (KeyHandler * __this, RegistryKey * rkey, String * basedir, bool is_volatile, MethodInfo * method));
DO_APP_FUNC(0x023AF0A0, void, KeyHandler_Load, (KeyHandler * __this, MethodInfo * method));
DO_APP_FUNC(0x023AF680, void, KeyHandler_LoadKey, (KeyHandler * __this, SecurityElement * se, MethodInfo * method));
DO_APP_FUNC(0x023AFDA0, RegistryKey *, KeyHandler_Ensure, (KeyHandler * __this, RegistryKey * rkey, String * extra, bool writable, bool is_volatile, MethodInfo * method));
DO_APP_FUNC(0x023B0260, RegistryKey *, KeyHandler_Probe, (KeyHandler * __this, RegistryKey * rkey, String * extra, bool writable, MethodInfo * method));
DO_APP_FUNC(0x023B0890, String *, KeyHandler_CombineName, (RegistryKey * rkey, String * extra, MethodInfo * method));
DO_APP_FUNC(0x023B0980, int64_t, KeyHandler_GetSystemBootTime, (MethodInfo * method));
DO_APP_FUNC(0x023B0CC0, int64_t, KeyHandler_GetRegisteredBootTime, (String * path, MethodInfo * method));
DO_APP_FUNC(0x023B0FA0, void, KeyHandler_SaveRegisteredBootTime, (String * path, int64_t btime, MethodInfo * method));
DO_APP_FUNC(0x023B11E0, void, KeyHandler_CleanVolatileKeys, (MethodInfo * method));
DO_APP_FUNC(0x023B1480, bool, KeyHandler_VolatileKeyExists, (String * dir, MethodInfo * method));
DO_APP_FUNC(0x023B1730, String *, KeyHandler_GetVolatileDir, (String * dir, MethodInfo * method));
DO_APP_FUNC(0x023B1830, KeyHandler *, KeyHandler_Lookup, (RegistryKey * rkey, bool createNonExisting, MethodInfo * method));
DO_APP_FUNC(0x023B1F70, String *, KeyHandler_GetRootFromDir, (String * dir, MethodInfo * method));
DO_APP_FUNC(0x023B2120, void, KeyHandler_Drop, (RegistryKey * rkey, MethodInfo * method));
DO_APP_FUNC(0x023B25E0, Object *, KeyHandler_GetValue, (KeyHandler * __this, String * name, RegistryValueOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x023B2820, String__Array *, KeyHandler_GetSubKeyNames, (KeyHandler * __this, MethodInfo * method));
DO_APP_FUNC(0x023B2F70, void, KeyHandler_Flush, (KeyHandler * __this, MethodInfo * method));
DO_APP_FUNC(0x023B30F0, bool, KeyHandler_ValueExists, (KeyHandler * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x023B3280, bool, KeyHandler_get_IsMarkedForDeletion, (KeyHandler * __this, MethodInfo * method));
DO_APP_FUNC(0x023B3350, void, KeyHandler_Finalize, (KeyHandler * __this, MethodInfo * method));
DO_APP_FUNC(0x023B33E0, void, KeyHandler_Save, (KeyHandler * __this, MethodInfo * method));
DO_APP_FUNC(0x023B3E60, String *, KeyHandler_get_UserStore, (MethodInfo * method));
DO_APP_FUNC(0x023B3FC0, String *, KeyHandler_get_MachineStore, (MethodInfo * method));
DO_APP_FUNC(0x023B6600, String *, UnixRegistryApi_ToUnix, (String * keyname, MethodInfo * method));
DO_APP_FUNC(0x023B6670, bool, UnixRegistryApi_IsWellKnownKey, (String * parentKeyName, String * keyname, MethodInfo * method));
DO_APP_FUNC(0x023B6820, RegistryKey *, UnixRegistryApi_OpenSubKey, (UnixRegistryApi * __this, RegistryKey * rkey, String * keyname, bool writable, MethodInfo * method));
DO_APP_FUNC(0x023B6A90, void, UnixRegistryApi_Flush, (UnixRegistryApi * __this, RegistryKey * rkey, MethodInfo * method));
DO_APP_FUNC(0x023B6B40, void, UnixRegistryApi_Close, (UnixRegistryApi * __this, RegistryKey * rkey, MethodInfo * method));
DO_APP_FUNC(0x023B6BE0, Object *, UnixRegistryApi_GetValue, (UnixRegistryApi * __this, RegistryKey * rkey, String * name, Object * default_value, RegistryValueOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x023B6CD0, String__Array *, UnixRegistryApi_GetSubKeyNames, (UnixRegistryApi * __this, RegistryKey * rkey, MethodInfo * method));
DO_APP_FUNC(0x00529D50, String *, UnixRegistryApi_ToString, (UnixRegistryApi * __this, RegistryKey * rkey, MethodInfo * method));
DO_APP_FUNC(0x023B6D80, RegistryKey *, UnixRegistryApi_CreateSubKey, (UnixRegistryApi * __this, RegistryKey * rkey, String * keyname, bool writable, MethodInfo * method));
DO_APP_FUNC(0x023B6F00, RegistryKey *, UnixRegistryApi_CreateSubKey_1, (UnixRegistryApi * __this, RegistryKey * rkey, String * keyname, bool writable, bool is_volatile, MethodInfo * method));
DO_APP_FUNC(0x023B70A0, void *, UnixRegistryApi_GetHandle, (UnixRegistryApi * __this, RegistryKey * key, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, UnixRegistryApi__ctor, (UnixRegistryApi * __this, MethodInfo * method));
DO_APP_FUNC(0x023B7F60, int32_t, Win32RegistryApi_RegCloseKey, (void * keyHandle, MethodInfo * method));
DO_APP_FUNC(0x023B8000, int32_t, Win32RegistryApi_RegFlushKey, (void * keyHandle, MethodInfo * method));
DO_APP_FUNC(0x023B80A0, int32_t, Win32RegistryApi_RegOpenKeyEx, (void * keyBase, String * keyName, void * reserved, int32_t access, void * * keyHandle, MethodInfo * method));
DO_APP_FUNC(0x023B8180, int32_t, Win32RegistryApi_RegEnumKeyEx, (void * keyHandle, int32_t dwIndex, uint16_t * lpName, int32_t * lpcbName, Int32__Array * lpReserved, StringBuilder * lpClass, Int32__Array * lpcbClass, Int64__Array * lpftLastWriteTime, MethodInfo * method));
DO_APP_FUNC(0x023B82B0, int32_t, Win32RegistryApi_RegQueryValueEx, (void * keyBase, String * valueName, void * reserved, RegistryValueKind__Enum * type, void * zero, int32_t * dataSize, MethodInfo * method));
DO_APP_FUNC(0x023B8390, int32_t, Win32RegistryApi_RegQueryValueEx_1, (void * keyBase, String * valueName, void * reserved, RegistryValueKind__Enum * type, Byte__Array * data, int32_t * dataSize, MethodInfo * method));
DO_APP_FUNC(0x023B8510, int32_t, Win32RegistryApi_RegQueryValueEx_2, (void * keyBase, String * valueName, void * reserved, RegistryValueKind__Enum * type, int32_t * data, int32_t * dataSize, MethodInfo * method));
DO_APP_FUNC(0x023B85F0, int32_t, Win32RegistryApi_RegQueryValueEx_3, (void * keyBase, String * valueName, void * reserved, RegistryValueKind__Enum * type, int64_t * data, int32_t * dataSize, MethodInfo * method));
DO_APP_FUNC(0x023B86D0, int32_t, Win32RegistryApi_RegQueryInfoKey, (void * hKey, StringBuilder * lpClass, Int32__Array * lpcbClass, void * lpReserved_MustBeZero, int32_t * lpcSubKeys, Int32__Array * lpcbMaxSubKeyLen, Int32__Array * lpcbMaxClassLen, int32_t * lpcValues, Int32__Array * lpcbMaxValueNameLen, Int32__Array * lpcbMaxValueLen, Int32__Array * lpcbSecurityDescriptor, Int32__Array * lpftLastWriteTime, MethodInfo * method));
DO_APP_FUNC(0x023B8860, void *, Win32RegistryApi_GetHandle, (Win32RegistryApi * __this, RegistryKey * key, MethodInfo * method));
DO_APP_FUNC(0x023B8910, bool, Win32RegistryApi_IsHandleValid, (RegistryKey * key, MethodInfo * method));
DO_APP_FUNC(0x023B8930, Object *, Win32RegistryApi_GetValue, (Win32RegistryApi * __this, RegistryKey * rkey, String * name, Object * defaultValue, RegistryValueOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x023B8E70, int32_t, Win32RegistryApi_GetBinaryValue, (Win32RegistryApi * __this, RegistryKey * rkey, String * name, RegistryValueKind__Enum type, Byte__Array * * data, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x023B9060, int32_t, Win32RegistryApi_SubKeyCount, (Win32RegistryApi * __this, RegistryKey * rkey, MethodInfo * method));
DO_APP_FUNC(0x023B9200, RegistryKey *, Win32RegistryApi_OpenSubKey, (Win32RegistryApi * __this, RegistryKey * rkey, String * keyName, bool writable, MethodInfo * method));
DO_APP_FUNC(0x023B94F0, void, Win32RegistryApi_Flush, (Win32RegistryApi * __this, RegistryKey * rkey, MethodInfo * method));
DO_APP_FUNC(0x023B95B0, void, Win32RegistryApi_Close, (Win32RegistryApi * __this, RegistryKey * rkey, MethodInfo * method));
DO_APP_FUNC(0x023B96B0, String__Array *, Win32RegistryApi_GetSubKeyNames, (Win32RegistryApi * __this, RegistryKey * rkey, MethodInfo * method));
DO_APP_FUNC(0x023B9A30, void, Win32RegistryApi_GenerateException, (Win32RegistryApi * __this, int32_t errorCode, MethodInfo * method));
DO_APP_FUNC(0x00529D50, String *, Win32RegistryApi_ToString, (Win32RegistryApi * __this, RegistryKey * rkey, MethodInfo * method));
DO_APP_FUNC(0x023B9C20, String *, Win32RegistryApi_CombineName, (RegistryKey * rkey, String * localName, MethodInfo * method));
DO_APP_FUNC(0x023B9CC0, void, Win32RegistryApi__ctor, (Win32RegistryApi * __this, MethodInfo * method));
DO_APP_FUNC(0x023B7DC0, String *, Win32Native_GetMessage, (int32_t hr, MethodInfo * method));
DO_APP_FUNC(0x023B7E60, int32_t, Win32Native_MakeHRFromErrorCode, (int32_t errorCode, MethodInfo * method));
DO_APP_FUNC(0x023B7E70, uint32_t, Win32Native_GetCurrentProcessId, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Win32Native_WIN32_FIND_DATA__ctor, (Win32Native_WIN32_FIND_DATA * __this, MethodInfo * method));
DO_APP_FUNC(0x021722B0, void, SafeFileHandle__ctor, (SafeFileHandle * __this, void * preexistingHandle, bool ownsHandle, MethodInfo * method));
DO_APP_FUNC(0x023B63D0, bool, SafeFileHandle_ReleaseHandle, (SafeFileHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x02172280, void, SafeFindHandle__ctor, (SafeFindHandle * __this, void * preexistingHandle, MethodInfo * method));
DO_APP_FUNC(0x023B6490, bool, SafeFindHandle_ReleaseHandle, (SafeFindHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x021722B0, void, SafeRegistryHandle__ctor, (SafeRegistryHandle * __this, void * preexistingHandle, bool ownsHandle, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, SafeRegistryHandle_ReleaseHandle, (SafeRegistryHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x021722B0, void, SafeWaitHandle__ctor, (SafeWaitHandle * __this, void * existingHandle, bool ownsHandle, MethodInfo * method));
DO_APP_FUNC(0x023B65E0, bool, SafeWaitHandle_ReleaseHandle, (SafeWaitHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x023B6530, void, SafeHandleZeroOrMinusOneIsInvalid__ctor, (SafeHandleZeroOrMinusOneIsInvalid * __this, bool ownsHandle, MethodInfo * method));
DO_APP_FUNC(0x023B65C0, bool, SafeHandleZeroOrMinusOneIsInvalid_get_IsInvalid, (SafeHandleZeroOrMinusOneIsInvalid * __this, MethodInfo * method));
DO_APP_FUNC(0x01E267B0, bool, SpanHelpers_IsReferenceOrContainsReferencesCore, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x027ABA90, void, ThrowHelper_ThrowArgumentNullException, (ExceptionArgument__Enum argument, MethodInfo * method));
DO_APP_FUNC(0x027ABAD0, Exception *, ThrowHelper_CreateArgumentNullException, (ExceptionArgument__Enum argument, MethodInfo * method));
DO_APP_FUNC(0x027ABC50, void, ThrowHelper_ThrowArrayTypeMismatchException_ArrayTypeMustBeExactMatch, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x027ABC90, Exception *, ThrowHelper_CreateArrayTypeMismatchException_ArrayTypeMustBeExactMatch, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x027ABE00, void, ThrowHelper_ThrowArgumentException_InvalidTypeWithPointersNotSupported, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x027ABE40, Exception *, ThrowHelper_CreateArgumentException_InvalidTypeWithPointersNotSupported, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x027ABFB0, void, ThrowHelper_ThrowIndexOutOfRangeException, (MethodInfo * method));
DO_APP_FUNC(0x027ABFF0, Exception *, ThrowHelper_CreateIndexOutOfRangeException, (MethodInfo * method));
DO_APP_FUNC(0x027AC130, void, ThrowHelper_ThrowArgumentOutOfRangeException, (ExceptionArgument__Enum argument, MethodInfo * method));
DO_APP_FUNC(0x027AC170, Exception *, ThrowHelper_CreateArgumentOutOfRangeException, (ExceptionArgument__Enum argument, MethodInfo * method));
DO_APP_FUNC(0x027AC300, void, ThrowHelper_ThrowArgumentOutOfRangeException_1, (MethodInfo * method));
DO_APP_FUNC(0x027AC320, void, ThrowHelper_ThrowWrongValueTypeArgumentException, (Object * value, Type * targetType, MethodInfo * method));
DO_APP_FUNC(0x027AC3F0, void, ThrowHelper_ThrowKeyNotFoundException, (MethodInfo * method));
DO_APP_FUNC(0x027AC440, void, ThrowHelper_ThrowArgumentException, (ExceptionResource__Enum resource, MethodInfo * method));
DO_APP_FUNC(0x027AC4B0, void, ThrowHelper_ThrowArgumentOutOfRangeException_2, (ExceptionArgument__Enum argument, ExceptionResource__Enum resource, MethodInfo * method));
DO_APP_FUNC(0x027AC600, void, ThrowHelper_ThrowInvalidOperationException, (ExceptionResource__Enum resource, MethodInfo * method));
DO_APP_FUNC(0x027AC670, void, ThrowHelper_ThrowNotSupportedException, (ExceptionResource__Enum resource, MethodInfo * method));
DO_APP_FUNC(0x027AC6E0, String *, ThrowHelper_GetArgumentName, (ExceptionArgument__Enum argument, MethodInfo * method));
DO_APP_FUNC(0x027AC920, String *, ThrowHelper_GetResourceName, (ExceptionResource__Enum resource, MethodInfo * method));
DO_APP_FUNC(0x00249B10, bool, ValueTuple_Equals, (ValueTuple__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x00221FF0, bool, ValueTuple_Equals_1, (ValueTuple__Boxed * __this, ValueTuple other, MethodInfo * method));
DO_APP_FUNC(0x00249BB0, bool, ValueTuple_System_Collections_IStructuralEquatable_Equals, (ValueTuple__Boxed * __this, Object * other, IEqualityComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x00249C50, int32_t, ValueTuple_System_IComparable_CompareTo, (ValueTuple__Boxed * __this, Object * other, MethodInfo * method));
DO_APP_FUNC(0x0013BB70, int32_t, ValueTuple_CompareTo, (ValueTuple__Boxed * __this, ValueTuple other, MethodInfo * method));
DO_APP_FUNC(0x00249D80, int32_t, ValueTuple_System_Collections_IStructuralComparable_CompareTo, (ValueTuple__Boxed * __this, Object * other, IComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x0013BB70, int32_t, ValueTuple_GetHashCode, (ValueTuple__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0013BB70, int32_t, ValueTuple_System_Collections_IStructuralEquatable_GetHashCode, (ValueTuple__Boxed * __this, IEqualityComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x00249EB0, String *, ValueTuple_ToString, (ValueTuple__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0314ADC0, int32_t, ValueTuple_CombineHashCodes, (int32_t h1, int32_t h2, MethodInfo * method));
DO_APP_FUNC(0x0314AE90, int32_t, ValueTuple_CombineHashCodes_1, (int32_t h1, int32_t h2, int32_t h3, MethodInfo * method));
DO_APP_FUNC(0x0314AF60, int32_t, ValueTuple_CombineHashCodes_2, (int32_t h1, int32_t h2, int32_t h3, int32_t h4, MethodInfo * method));
DO_APP_FUNC(0x02290DE0, Array *, Array_CreateInstance, (Type * elementType, Int64__Array * lengths, MethodInfo * method));
DO_APP_FUNC(0x02290FA0, int32_t, Array_System_Collections_ICollection_get_Count, (Array * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Array_System_Collections_IList_get_IsReadOnly, (Array * __this, MethodInfo * method));
DO_APP_FUNC(0x02290FB0, Object *, Array_System_Collections_IList_get_Item, (Array * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02290FC0, void, Array_System_Collections_IList_set_Item, (Array * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02290FE0, int32_t, Array_System_Collections_IList_Add, (Array * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02291040, bool, Array_System_Collections_IList_Contains, (Array * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02291060, void, Array_System_Collections_IList_Clear, (Array * __this, MethodInfo * method));
DO_APP_FUNC(0x022910C0, int32_t, Array_System_Collections_IList_IndexOf, (Array * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x022910D0, void, Array_System_Collections_IList_Insert, (Array * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02291130, void, Array_System_Collections_IList_Remove, (Array * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02291190, void, Array_System_Collections_IList_RemoveAt, (Array * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x022911F0, void, Array_CopyTo, (Array * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0173F610, Object *, Array_Clone, (Array * __this, MethodInfo * method));
DO_APP_FUNC(0x02291320, int32_t, Array_System_Collections_IStructuralComparable_CompareTo, (Array * __this, Object * other, IComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x02291550, bool, Array_System_Collections_IStructuralEquatable_Equals, (Array * __this, Object * other, IEqualityComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x022916C0, int32_t, Array_CombineHashCodes, (int32_t h1, int32_t h2, MethodInfo * method));
DO_APP_FUNC(0x022916D0, int32_t, Array_System_Collections_IStructuralEquatable_GetHashCode, (Array * __this, IEqualityComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x02291920, int32_t, Array_BinarySearch, (Array * array, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02291A40, void, Array_Copy, (Array * sourceArray, Array * destinationArray, int64_t length, MethodInfo * method));
DO_APP_FUNC(0x02291B30, void, Array_Copy_1, (Array * sourceArray, int64_t sourceIndex, Array * destinationArray, int64_t destinationIndex, int64_t length, MethodInfo * method));
DO_APP_FUNC(0x02291CD0, void, Array_CopyTo_1, (Array * __this, Array * array, int64_t index, MethodInfo * method));
DO_APP_FUNC(0x02291DC0, int64_t, Array_get_LongLength, (Array * __this, MethodInfo * method));
DO_APP_FUNC(0x02291E60, int64_t, Array_GetLongLength, (Array * __this, int32_t dimension, MethodInfo * method));
DO_APP_FUNC(0x02291EB0, Object *, Array_GetValue, (Array * __this, int64_t index, MethodInfo * method));
DO_APP_FUNC(0x02291F90, Object *, Array_GetValue_1, (Array * __this, int64_t index1, int64_t index2, MethodInfo * method));
DO_APP_FUNC(0x02292170, Object *, Array_GetValue_2, (Array * __this, int64_t index1, int64_t index2, int64_t index3, MethodInfo * method));
DO_APP_FUNC(0x022923D0, Object *, Array_GetValue_3, (Array * __this, Int64__Array * indices, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, Array_get_IsFixedSize, (Array * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Array_get_IsReadOnly, (Array * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Array_get_IsSynchronized, (Array * __this, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, Object *, Array_get_SyncRoot, (Array * __this, MethodInfo * method));
DO_APP_FUNC(0x022925A0, int32_t, Array_BinarySearch_1, (Array * array, int32_t index, int32_t length, Object * value, MethodInfo * method));
DO_APP_FUNC(0x022925C0, int32_t, Array_BinarySearch_2, (Array * array, Object * value, IComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x022926F0, int32_t, Array_BinarySearch_3, (Array * array, int32_t index, int32_t length, Object * value, IComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x02292A50, int32_t, Array_GetMedian, (int32_t low, int32_t hi, MethodInfo * method));
DO_APP_FUNC(0x02292A60, int32_t, Array_IndexOf, (Array * array, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02292B70, int32_t, Array_IndexOf_1, (Array * array, Object * value, int32_t startIndex, MethodInfo * method));
DO_APP_FUNC(0x02292CA0, int32_t, Array_IndexOf_2, (Array * array, Object * value, int32_t startIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02292F60, int32_t, Array_LastIndexOf, (Array * array, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02293050, int32_t, Array_LastIndexOf_1, (Array * array, Object * value, int32_t startIndex, MethodInfo * method));
DO_APP_FUNC(0x02293130, int32_t, Array_LastIndexOf_2, (Array * array, Object * value, int32_t startIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02293420, void, Array_Reverse, (Array * array, MethodInfo * method));
DO_APP_FUNC(0x02293520, void, Array_Reverse_1, (Array * array, int32_t index, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x02293860, void, Array_SetValue, (Array * __this, Object * value, int64_t index, MethodInfo * method));
DO_APP_FUNC(0x02293950, void, Array_SetValue_1, (Array * __this, Object * value, int64_t index1, int64_t index2, MethodInfo * method));
DO_APP_FUNC(0x02293AA0, void, Array_SetValue_2, (Array * __this, Object * value, int64_t index1, int64_t index2, int64_t index3, MethodInfo * method));
DO_APP_FUNC(0x02293C40, void, Array_SetValue_3, (Array * __this, Object * value, Int64__Array * indices, MethodInfo * method));
DO_APP_FUNC(0x02293E20, void, Array_Sort, (Array * array, MethodInfo * method));
DO_APP_FUNC(0x02293F30, void, Array_Sort_1, (Array * array, int32_t index, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x02293F60, void, Array_Sort_2, (Array * array, IComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x02294080, void, Array_Sort_3, (Array * array, int32_t index, int32_t length, IComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x022940B0, void, Array_Sort_4, (Array * keys, Array * items, MethodInfo * method));
DO_APP_FUNC(0x022941D0, void, Array_Sort_5, (Array * keys, Array * items, IComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x02294300, void, Array_Sort_6, (Array * keys, Array * items, int32_t index, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x02294320, void, Array_Sort_7, (Array * keys, Array * items, int32_t index, int32_t length, IComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x02294690, IEnumerator *, Array_GetEnumerator, (Array * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Array__ctor, (Array * __this, MethodInfo * method));
DO_APP_FUNC(0x02290FA0, int32_t, Array_InternalArray__ICollection_get_Count, (Array * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, Array_InternalArray__ICollection_get_IsReadOnly, (Array * __this, MethodInfo * method));
DO_APP_FUNC(0x022947F0, void, Array_InternalArray__ICollection_Clear, (Array * __this, MethodInfo * method));
DO_APP_FUNC(0x02290FA0, int32_t, Array_InternalArray__IReadOnlyCollection_get_Count, (Array * __this, MethodInfo * method));
DO_APP_FUNC(0x02294850, void, Array_InternalArray__RemoveAt, (Array * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x022948B0, int32_t, Array_get_Length, (Array * __this, MethodInfo * method));
DO_APP_FUNC(0x02294950, int32_t, Array_get_Rank, (Array * __this, MethodInfo * method));
DO_APP_FUNC(0x02294950, int32_t, Array_GetRank, (Array * __this, MethodInfo * method));
DO_APP_FUNC(0x02294960, int32_t, Array_GetLength, (Array * __this, int32_t dimension, MethodInfo * method));
DO_APP_FUNC(0x022949B0, int32_t, Array_GetLowerBound, (Array * __this, int32_t dimension, MethodInfo * method));
DO_APP_FUNC(0x02294A00, Object *, Array_GetValue_4, (Array * __this, Int32__Array * indices, MethodInfo * method));
DO_APP_FUNC(0x02294A10, void, Array_SetValue_4, (Array * __this, Object * value, Int32__Array * indices, MethodInfo * method));
DO_APP_FUNC(0x02294A20, Object *, Array_GetValueImpl, (Array * __this, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x02294A50, void, Array_SetValueImpl, (Array * __this, Object * value, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x02294A60, bool, Array_FastCopy, (Array * source, int32_t source_idx, Array * dest, int32_t dest_idx, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x02294A70, Array *, Array_CreateInstanceImpl, (Type * elementType, Int32__Array * lengths, Int32__Array * bounds, MethodInfo * method));
DO_APP_FUNC(0x02294A80, int32_t, Array_GetUpperBound, (Array * __this, int32_t dimension, MethodInfo * method));
DO_APP_FUNC(0x02294AE0, Object *, Array_GetValue_5, (Array * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02294CE0, Object *, Array_GetValue_6, (Array * __this, int32_t index1, int32_t index2, MethodInfo * method));
DO_APP_FUNC(0x02294DC0, Object *, Array_GetValue_7, (Array * __this, int32_t index1, int32_t index2, int32_t index3, MethodInfo * method));
DO_APP_FUNC(0x02294ED0, void, Array_SetValue_5, (Array * __this, Object * value, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x022950B0, void, Array_SetValue_6, (Array * __this, Object * value, int32_t index1, int32_t index2, MethodInfo * method));
DO_APP_FUNC(0x022951A0, void, Array_SetValue_7, (Array * __this, Object * value, int32_t index1, int32_t index2, int32_t index3, MethodInfo * method));
DO_APP_FUNC(0x022952B0, Array *, Array_UnsafeCreateInstance, (Type * elementType, Int32__Array * lengths, Int32__Array * lowerBounds, MethodInfo * method));
DO_APP_FUNC(0x022952C0, Array *, Array_UnsafeCreateInstance_1, (Type * elementType, int32_t length1, int32_t length2, MethodInfo * method));
DO_APP_FUNC(0x022953B0, Array *, Array_UnsafeCreateInstance_2, (Type * elementType, Int32__Array * lengths, MethodInfo * method));
DO_APP_FUNC(0x022953C0, Array *, Array_CreateInstance_1, (Type * elementType, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x022952C0, Array *, Array_CreateInstance_2, (Type * elementType, int32_t length1, int32_t length2, MethodInfo * method));
DO_APP_FUNC(0x02295490, Array *, Array_CreateInstance_3, (Type * elementType, int32_t length1, int32_t length2, int32_t length3, MethodInfo * method));
DO_APP_FUNC(0x022955A0, Array *, Array_CreateInstance_4, (Type * elementType, Int32__Array * lengths, MethodInfo * method));
DO_APP_FUNC(0x02295850, Array *, Array_CreateInstance_5, (Type * elementType, Int32__Array * lengths, Int32__Array * lowerBounds, MethodInfo * method));
DO_APP_FUNC(0x02295CE0, void, Array_Clear, (Array * array, int32_t index, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x02295EC0, void, Array_ClearInternal, (Array * a, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02295EF0, void, Array_Copy_2, (Array * sourceArray, Array * destinationArray, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x02296070, void, Array_Copy_3, (Array * sourceArray, int32_t sourceIndex, Array * destinationArray, int32_t destinationIndex, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x02296600, Exception *, Array_CreateArrayTypeMismatchException, (MethodInfo * method));
DO_APP_FUNC(0x022967B0, bool, Array_CanAssignArrayElement, (Type * source, Type * target, MethodInfo * method));
DO_APP_FUNC(0x022968D0, void, Array_ConstrainedCopy, (Array * sourceArray, int32_t sourceIndex, Array * destinationArray, int32_t destinationIndex, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Array_Initialize, (Array * __this, MethodInfo * method));
DO_APP_FUNC(0x022968E0, void, Array_SortImpl, (Array * keys, Array * items, int32_t index, int32_t length, IComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x02296A30, void, Array_ArrayEnumerator__ctor, (Array_ArrayEnumerator * __this, Array * array, MethodInfo * method));
DO_APP_FUNC(0x02296A70, bool, Array_ArrayEnumerator_MoveNext, (Array_ArrayEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x00C2BCA0, void, Array_ArrayEnumerator_Reset, (Array_ArrayEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0173F610, Object *, Array_ArrayEnumerator_Clone, (Array_ArrayEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02296A90, Object *, Array_ArrayEnumerator_get_Current, (Array_ArrayEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x001E14D0, void, Array_SorterObjectArray__ctor, (Array_SorterObjectArray__Boxed * __this, Object__Array * keys, Object__Array * items, IComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x001E14E0, void, Array_SorterObjectArray_SwapIfGreaterWithItems, (Array_SorterObjectArray__Boxed * __this, int32_t a, int32_t b, MethodInfo * method));
DO_APP_FUNC(0x001E14F0, void, Array_SorterObjectArray_Swap, (Array_SorterObjectArray__Boxed * __this, int32_t i, int32_t j, MethodInfo * method));
DO_APP_FUNC(0x001E1500, void, Array_SorterObjectArray_Sort, (Array_SorterObjectArray__Boxed * __this, int32_t left, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x001E1500, void, Array_SorterObjectArray_IntrospectiveSort, (Array_SorterObjectArray__Boxed * __this, int32_t left, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x001E1510, void, Array_SorterObjectArray_IntroSort, (Array_SorterObjectArray__Boxed * __this, int32_t lo, int32_t hi, int32_t depthLimit, MethodInfo * method));
DO_APP_FUNC(0x001E1520, int32_t, Array_SorterObjectArray_PickPivotAndPartition, (Array_SorterObjectArray__Boxed * __this, int32_t lo, int32_t hi, MethodInfo * method));
DO_APP_FUNC(0x001E1530, void, Array_SorterObjectArray_Heapsort, (Array_SorterObjectArray__Boxed * __this, int32_t lo, int32_t hi, MethodInfo * method));
DO_APP_FUNC(0x001E1540, void, Array_SorterObjectArray_DownHeap, (Array_SorterObjectArray__Boxed * __this, int32_t i, int32_t n, int32_t lo, MethodInfo * method));
DO_APP_FUNC(0x001E1550, void, Array_SorterObjectArray_InsertionSort, (Array_SorterObjectArray__Boxed * __this, int32_t lo, int32_t hi, MethodInfo * method));
DO_APP_FUNC(0x001E1420, void, Array_SorterGenericArray__ctor, (Array_SorterGenericArray__Boxed * __this, Array * keys, Array * items, IComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x001E1430, void, Array_SorterGenericArray_SwapIfGreaterWithItems, (Array_SorterGenericArray__Boxed * __this, int32_t a, int32_t b, MethodInfo * method));
DO_APP_FUNC(0x001E1440, void, Array_SorterGenericArray_Swap, (Array_SorterGenericArray__Boxed * __this, int32_t i, int32_t j, MethodInfo * method));
DO_APP_FUNC(0x001E1450, void, Array_SorterGenericArray_Sort, (Array_SorterGenericArray__Boxed * __this, int32_t left, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x001E1450, void, Array_SorterGenericArray_IntrospectiveSort, (Array_SorterGenericArray__Boxed * __this, int32_t left, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x001E1460, void, Array_SorterGenericArray_IntroSort, (Array_SorterGenericArray__Boxed * __this, int32_t lo, int32_t hi, int32_t depthLimit, MethodInfo * method));
DO_APP_FUNC(0x001E1470, int32_t, Array_SorterGenericArray_PickPivotAndPartition, (Array_SorterGenericArray__Boxed * __this, int32_t lo, int32_t hi, MethodInfo * method));
DO_APP_FUNC(0x001E1480, void, Array_SorterGenericArray_Heapsort, (Array_SorterGenericArray__Boxed * __this, int32_t lo, int32_t hi, MethodInfo * method));
DO_APP_FUNC(0x001E1490, void, Array_SorterGenericArray_DownHeap, (Array_SorterGenericArray__Boxed * __this, int32_t i, int32_t n, int32_t lo, MethodInfo * method));
DO_APP_FUNC(0x001E14A0, void, Array_SorterGenericArray_InsertionSort, (Array_SorterGenericArray__Boxed * __this, int32_t lo, int32_t hi, MethodInfo * method));
DO_APP_FUNC(0x022916C0, int32_t, Tuple_CombineHashCodes, (int32_t h1, int32_t h2, MethodInfo * method));
DO_APP_FUNC(0x027BB430, int32_t, Tuple_CombineHashCodes_1, (int32_t h1, int32_t h2, int32_t h3, MethodInfo * method));
DO_APP_FUNC(0x027BB440, int32_t, Tuple_CombineHashCodes_2, (int32_t h1, int32_t h2, int32_t h3, int32_t h4, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MonoTODOAttribute__ctor, (MonoTODOAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, MonoTODOAttribute__ctor_1, (MonoTODOAttribute * __this, String * comment, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, MonoLimitationAttribute__ctor, (MonoLimitationAttribute * __this, String * comment, MethodInfo * method));
DO_APP_FUNC(0x0228B2B0, void, AggregateException__ctor, (AggregateException * __this, MethodInfo * method));
DO_APP_FUNC(0x0228B460, void, AggregateException__ctor_1, (AggregateException * __this, IEnumerable_1_System_Exception_ * innerExceptions, MethodInfo * method));
DO_APP_FUNC(0x0228B500, void, AggregateException__ctor_2, (AggregateException * __this, Exception__Array * innerExceptions, MethodInfo * method));
DO_APP_FUNC(0x0228B5A0, void, AggregateException__ctor_3, (AggregateException * __this, String * message, IEnumerable_1_System_Exception_ * innerExceptions, MethodInfo * method));
DO_APP_FUNC(0x0228B740, void, AggregateException__ctor_4, (AggregateException * __this, String * message, Exception__Array * innerExceptions, MethodInfo * method));
DO_APP_FUNC(0x0228B750, void, AggregateException__ctor_5, (AggregateException * __this, String * message, IList_1_System_Exception_ * innerExceptions, MethodInfo * method));
DO_APP_FUNC(0x0228BA60, void, AggregateException__ctor_6, (AggregateException * __this, IEnumerable_1_System_Runtime_ExceptionServices_ExceptionDispatchInfo_ * innerExceptionInfos, MethodInfo * method));
DO_APP_FUNC(0x0228BB00, void, AggregateException__ctor_7, (AggregateException * __this, String * message, IEnumerable_1_System_Runtime_ExceptionServices_ExceptionDispatchInfo_ * innerExceptionInfos, MethodInfo * method));
DO_APP_FUNC(0x0228BCA0, void, AggregateException__ctor_8, (AggregateException * __this, String * message, IList_1_System_Runtime_ExceptionServices_ExceptionDispatchInfo_ * innerExceptionInfos, MethodInfo * method));
DO_APP_FUNC(0x0228BFC0, void, AggregateException__ctor_9, (AggregateException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0228C230, void, AggregateException_GetObjectData, (AggregateException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FBC20, ReadOnlyCollection_1_System_Exception_ *, AggregateException_get_InnerExceptions, (AggregateException * __this, MethodInfo * method));
DO_APP_FUNC(0x0228C440, AggregateException *, AggregateException_Flatten, (AggregateException * __this, MethodInfo * method));
DO_APP_FUNC(0x0228C860, String *, AggregateException_ToString, (AggregateException * __this, MethodInfo * method));
DO_APP_FUNC(0x0228CB70, int32_t, AggregateException_get_InnerExceptionCount, (AggregateException * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AppContextSwitches__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01A1CA60, String *, FormattableString_System_IFormattable_ToString, (FormattableString * __this, String * ignored, IFormatProvider * formatProvider, MethodInfo * method));
DO_APP_FUNC(0x01A1CA80, String *, FormattableString_ToString, (FormattableString * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, FormattableString__ctor, (FormattableString * __this, MethodInfo * method));
DO_APP_FUNC(0x0314FE00, bool, _Filters_FilterAttribute, (_Filters * __this, MemberInfo_1 * m, Object * filterCriteria, MethodInfo * method));
DO_APP_FUNC(0x03150160, bool, _Filters_FilterName, (_Filters * __this, MemberInfo_1 * m, Object * filterCriteria, MethodInfo * method));
DO_APP_FUNC(0x03150440, bool, _Filters_FilterIgnoreCase, (_Filters * __this, MemberInfo_1 * m, Object * filterCriteria, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, _Filters__ctor, (_Filters * __this, MethodInfo * method));
DO_APP_FUNC(0x03150740, void, _Filters__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, LocalDataStoreHolder__ctor, (LocalDataStoreHolder * __this, LocalDataStore * store, MethodInfo * method));
DO_APP_FUNC(0x02266BE0, void, LocalDataStoreHolder_Finalize, (LocalDataStoreHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, LocalDataStore *, LocalDataStoreHolder_get_Store, (LocalDataStoreHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, LocalDataStoreElement__ctor, (LocalDataStoreElement * __this, int64_t cookie, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Object *, LocalDataStoreElement_get_Value, (LocalDataStoreElement * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, LocalDataStoreElement_set_Value, (LocalDataStoreElement * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x002FB930, int64_t, LocalDataStoreElement_get_Cookie, (LocalDataStoreElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02266420, void, LocalDataStore__ctor, (LocalDataStore * __this, LocalDataStoreMgr * mgr, int32_t InitialCapacity, MethodInfo * method));
DO_APP_FUNC(0x022664C0, void, LocalDataStore_Dispose, (LocalDataStore * __this, MethodInfo * method));
DO_APP_FUNC(0x022664F0, Object *, LocalDataStore_GetData, (LocalDataStore * __this, LocalDataStoreSlot * slot, MethodInfo * method));
DO_APP_FUNC(0x02266640, void, LocalDataStore_SetData, (LocalDataStore * __this, LocalDataStoreSlot * slot, Object * data, MethodInfo * method));
DO_APP_FUNC(0x022667B0, void, LocalDataStore_FreeData, (LocalDataStore * __this, int32_t slot, int64_t cookie, MethodInfo * method));
DO_APP_FUNC(0x02266820, LocalDataStoreElement *, LocalDataStore_PopulateElement, (LocalDataStore * __this, LocalDataStoreSlot * slot, MethodInfo * method));
DO_APP_FUNC(0x0199E410, void, LocalDataStoreSlot__ctor, (LocalDataStoreSlot * __this, LocalDataStoreMgr * mgr, int32_t slot, int64_t cookie, MethodInfo * method));
DO_APP_FUNC(0x002FA280, LocalDataStoreMgr *, LocalDataStoreSlot_get_Manager, (LocalDataStoreSlot * __this, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, LocalDataStoreSlot_get_Slot, (LocalDataStoreSlot * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, int64_t, LocalDataStoreSlot_get_Cookie, (LocalDataStoreSlot * __this, MethodInfo * method));
DO_APP_FUNC(0x02267E50, void, LocalDataStoreSlot_Finalize, (LocalDataStoreSlot * __this, MethodInfo * method));
DO_APP_FUNC(0x02266C80, LocalDataStoreHolder *, LocalDataStoreMgr_CreateLocalDataStore, (LocalDataStoreMgr * __this, MethodInfo * method));
DO_APP_FUNC(0x02266FC0, void, LocalDataStoreMgr_DeleteLocalDataStore, (LocalDataStoreMgr * __this, LocalDataStore * store, MethodInfo * method));
DO_APP_FUNC(0x02267110, LocalDataStoreSlot *, LocalDataStoreMgr_AllocateDataSlot, (LocalDataStoreMgr * __this, MethodInfo * method));
DO_APP_FUNC(0x02267450, LocalDataStoreSlot *, LocalDataStoreMgr_AllocateNamedDataSlot, (LocalDataStoreMgr * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x022675F0, LocalDataStoreSlot *, LocalDataStoreMgr_GetNamedDataSlot, (LocalDataStoreMgr * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x02267780, void, LocalDataStoreMgr_FreeNamedDataSlot, (LocalDataStoreMgr * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x022678D0, void, LocalDataStoreMgr_FreeDataSlot, (LocalDataStoreMgr * __this, int32_t slot, int64_t cookie, MethodInfo * method));
DO_APP_FUNC(0x02267B30, void, LocalDataStoreMgr_ValidateSlot, (LocalDataStoreMgr * __this, LocalDataStoreSlot * slot, MethodInfo * method));
DO_APP_FUNC(0x02027AB0, int32_t, LocalDataStoreMgr_GetSlotTableLength, (LocalDataStoreMgr * __this, MethodInfo * method));
DO_APP_FUNC(0x02267C00, void, LocalDataStoreMgr__ctor, (LocalDataStoreMgr * __this, MethodInfo * method));
DO_APP_FUNC(0x0228ADC0, void, AccessViolationException__ctor, (AccessViolationException * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, AccessViolationException__ctor_1, (AccessViolationException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, Action__ctor, (Action * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x00611820, void, Action_Invoke, (Action * __this, MethodInfo * method));
DO_APP_FUNC(0x00611B10, IAsyncResult *, Action_BeginInvoke, (Action * __this, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, Action_EndInvoke, (Action * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x0228AE50, Object *, Activator_CreateInstance, (Type * type, BindingFlags__Enum bindingAttr, Binder * binder, Object__Array * args, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x0228AE80, Object *, Activator_CreateInstance_1, (Type * type, BindingFlags__Enum bindingAttr, Binder * binder, Object__Array * args, CultureInfo * culture, Object__Array * activationAttributes, MethodInfo * method));
DO_APP_FUNC(0x01A08480, Object *, Activator_CreateInstance_2, (Type * type, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x0228B0C0, Object *, Activator_CreateInstance_3, (Type * type, Object__Array * args, Object__Array * activationAttributes, MethodInfo * method));
DO_APP_FUNC(0x0228B0F0, Object *, Activator_CreateInstance_4, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x0228B100, Object *, Activator_CreateInstance_5, (Type * type, bool nonPublic, MethodInfo * method));
DO_APP_FUNC(0x0228FDE0, void, AppDomainUnloadedException__ctor, (AppDomainUnloadedException * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, AppDomainUnloadedException__ctor_1, (AppDomainUnloadedException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0228FE70, void, ApplicationException__ctor, (ApplicationException * __this, MethodInfo * method));
DO_APP_FUNC(0x0228FF30, void, ApplicationException__ctor_1, (ApplicationException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x0228FFF0, void, ApplicationException__ctor_2, (ApplicationException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x022900B0, void, ApplicationException__ctor_3, (ApplicationException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x022901E0, void, ArgumentException__ctor, (ArgumentException * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEFCD0, void, ArgumentException__ctor_1, (ArgumentException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01FEFCF0, void, ArgumentException__ctor_2, (ArgumentException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x02290270, void, ArgumentException__ctor_3, (ArgumentException * __this, String * message, String * paramName, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x022902B0, void, ArgumentException__ctor_4, (ArgumentException * __this, String * message, String * paramName, MethodInfo * method));
DO_APP_FUNC(0x022902F0, void, ArgumentException__ctor_5, (ArgumentException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x022903C0, String *, ArgumentException_get_Message, (ArgumentException * __this, MethodInfo * method));
DO_APP_FUNC(0x02290500, void, ArgumentException_GetObjectData, (ArgumentException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02290640, void, ArgumentNullException__ctor, (ArgumentNullException * __this, MethodInfo * method));
DO_APP_FUNC(0x022906D0, void, ArgumentNullException__ctor_1, (ArgumentNullException * __this, String * paramName, MethodInfo * method));
DO_APP_FUNC(0x02290770, void, ArgumentNullException__ctor_2, (ArgumentNullException * __this, String * paramName, String * message, MethodInfo * method));
DO_APP_FUNC(0x01FEFD10, void, ArgumentNullException__ctor_3, (ArgumentNullException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x022907B0, String *, ArgumentOutOfRangeException_get_RangeMessage, (MethodInfo * method));
DO_APP_FUNC(0x02290870, void, ArgumentOutOfRangeException__ctor, (ArgumentOutOfRangeException * __this, MethodInfo * method));
DO_APP_FUNC(0x022908A0, void, ArgumentOutOfRangeException__ctor_1, (ArgumentOutOfRangeException * __this, String * paramName, MethodInfo * method));
DO_APP_FUNC(0x022908E0, void, ArgumentOutOfRangeException__ctor_2, (ArgumentOutOfRangeException * __this, String * paramName, String * message, MethodInfo * method));
DO_APP_FUNC(0x02290920, void, ArgumentOutOfRangeException__ctor_3, (ArgumentOutOfRangeException * __this, String * paramName, Object * actualValue, String * message, MethodInfo * method));
DO_APP_FUNC(0x02290970, String *, ArgumentOutOfRangeException_get_Message, (ArgumentOutOfRangeException * __this, MethodInfo * method));
DO_APP_FUNC(0x02290AD0, void, ArgumentOutOfRangeException_GetObjectData, (ArgumentOutOfRangeException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02290C10, void, ArgumentOutOfRangeException__ctor_4, (ArgumentOutOfRangeException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02290D10, void, ArithmeticException__ctor, (ArithmeticException * __this, MethodInfo * method));
DO_APP_FUNC(0x02290DA0, void, ArithmeticException__ctor_1, (ArithmeticException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x02290DC0, void, ArithmeticException__ctor_2, (ArithmeticException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, ArithmeticException__ctor_3, (ArithmeticException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02298F80, void, ArrayTypeMismatchException__ctor, (ArrayTypeMismatchException * __this, MethodInfo * method));
DO_APP_FUNC(0x0200AA70, void, ArrayTypeMismatchException__ctor_1, (ArrayTypeMismatchException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, ArrayTypeMismatchException__ctor_2, (ArrayTypeMismatchException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, AsyncCallback__ctor, (AsyncCallback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x00673B90, void, AsyncCallback_Invoke, (AsyncCallback * __this, IAsyncResult * ar, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, AsyncCallback_BeginInvoke, (AsyncCallback * __this, IAsyncResult * ar, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, AsyncCallback_EndInvoke, (AsyncCallback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x022990C0, Attribute__Array *, Attribute_InternalGetCustomAttributes, (PropertyInfo_1 * element, Type * type, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x022991C0, Attribute__Array *, Attribute_InternalGetCustomAttributes_1, (EventInfo_1 * element, Type * type, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x022992C0, Attribute__Array *, Attribute_InternalParamGetCustomAttributes, (ParameterInfo_1 * parameter, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x022998D0, bool, Attribute_InternalIsDefined, (PropertyInfo_1 * element, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02299990, bool, Attribute_InternalIsDefined_1, (EventInfo_1 * element, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02299A50, Attribute__Array *, Attribute_GetCustomAttributes, (MemberInfo_1 * element, Type * type, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02299D10, Attribute__Array *, Attribute_GetCustomAttributes_1, (MemberInfo_1 * element, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x013DCFB0, bool, Attribute_IsDefined, (MemberInfo_1 * element, Type * attributeType, MethodInfo * method));
DO_APP_FUNC(0x02299F40, bool, Attribute_IsDefined_1, (MemberInfo_1 * element, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x0229A2D0, Attribute *, Attribute_GetCustomAttribute, (MemberInfo_1 * element, Type * attributeType, MethodInfo * method));
DO_APP_FUNC(0x0229A2E0, Attribute *, Attribute_GetCustomAttribute_1, (MemberInfo_1 * element, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x0229A3F0, Attribute__Array *, Attribute_GetCustomAttributes_2, (ParameterInfo_1 * element, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x0229A720, Attribute__Array *, Attribute_GetCustomAttributes_3, (ParameterInfo_1 * element, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x0229A960, Attribute__Array *, Attribute_GetCustomAttributes_4, (Module * element, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x0229AAC0, Attribute__Array *, Attribute_GetCustomAttributes_5, (Module * element, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x0229AD20, Attribute__Array *, Attribute_GetCustomAttributes_6, (Assembly * element, Type * attributeType, MethodInfo * method));
DO_APP_FUNC(0x0229AD30, Attribute__Array *, Attribute_GetCustomAttributes_7, (Assembly * element, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x0229AF70, Attribute__Array *, Attribute_GetCustomAttributes_8, (Assembly * element, MethodInfo * method));
DO_APP_FUNC(0x0229B0B0, Attribute__Array *, Attribute_GetCustomAttributes_9, (Assembly * element, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x0229B200, Attribute *, Attribute_GetCustomAttribute_2, (Assembly * element, Type * attributeType, MethodInfo * method));
DO_APP_FUNC(0x0229B2F0, Attribute *, Attribute_GetCustomAttribute_3, (Assembly * element, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Attribute__ctor, (Attribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0229B400, bool, Attribute_Equals, (Attribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0229B710, bool, Attribute_AreFieldValuesEqual, (Object * thisValue, Object * thatValue, MethodInfo * method));
DO_APP_FUNC(0x0229B900, int32_t, Attribute_GetHashCode, (Attribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1C4F0, Object *, Attribute_get_TypeId, (Attribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0229BB40, bool, Attribute_Match, (Attribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Attribute_IsDefaultAttribute, (Attribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0229BB60, void, AttributeUsageAttribute__ctor, (AttributeUsageAttribute * __this, AttributeTargets__Enum validOn, MethodInfo * method));
DO_APP_FUNC(0x00724AE0, bool, AttributeUsageAttribute_get_AllowMultiple, (AttributeUsageAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x007EA280, void, AttributeUsageAttribute_set_AllowMultiple, (AttributeUsageAttribute * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00724AF0, bool, AttributeUsageAttribute_get_Inherited, (AttributeUsageAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0229BB70, void, AttributeUsageAttribute_set_Inherited, (AttributeUsageAttribute * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x0229BB80, void, AttributeUsageAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0229BCD0, void, BadImageFormatException__ctor, (BadImageFormatException * __this, MethodInfo * method));
DO_APP_FUNC(0x0229BD60, void, BadImageFormatException__ctor_1, (BadImageFormatException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x0229BD80, void, BadImageFormatException__ctor_2, (BadImageFormatException * __this, String * message, Exception * inner, MethodInfo * method));
DO_APP_FUNC(0x0229BDA0, void, BadImageFormatException__ctor_3, (BadImageFormatException * __this, String * message, String * fileName, MethodInfo * method));
DO_APP_FUNC(0x0229BDE0, String *, BadImageFormatException_get_Message, (BadImageFormatException * __this, MethodInfo * method));
DO_APP_FUNC(0x0229BEA0, void, BadImageFormatException_SetMessageField, (BadImageFormatException * __this, MethodInfo * method));
DO_APP_FUNC(0x0229BF50, String *, BadImageFormatException_ToString, (BadImageFormatException * __this, MethodInfo * method));
DO_APP_FUNC(0x0229C210, void, BadImageFormatException__ctor_4, (BadImageFormatException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FBC40, String *, BadImageFormatException_get_FusionLog, (BadImageFormatException * __this, MethodInfo * method));
DO_APP_FUNC(0x0229C320, void, BadImageFormatException_GetObjectData, (BadImageFormatException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0229C490, bool, BitConverter_AmILittleEndian, (MethodInfo * method));
DO_APP_FUNC(0x0229C4B0, Byte__Array *, BitConverter_GetBytes, (bool value, MethodInfo * method));
DO_APP_FUNC(0x0229C560, Byte__Array *, BitConverter_GetBytes_1, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x0229C600, Byte__Array *, BitConverter_GetBytes_2, (int16_t value, MethodInfo * method));
DO_APP_FUNC(0x0229C6A0, Byte__Array *, BitConverter_GetBytes_3, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0229C740, Byte__Array *, BitConverter_GetBytes_4, (int64_t value, MethodInfo * method));
DO_APP_FUNC(0x0229C7E0, Byte__Array *, BitConverter_GetBytes_5, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x0229C880, Byte__Array *, BitConverter_GetBytes_6, (uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x0229C920, Byte__Array *, BitConverter_GetBytes_7, (uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x0229C9C0, Byte__Array *, BitConverter_GetBytes_8, (float value, MethodInfo * method));
DO_APP_FUNC(0x0229CA60, Byte__Array *, BitConverter_GetBytes_9, (double value, MethodInfo * method));
DO_APP_FUNC(0x0229CB00, int16_t, BitConverter_ToInt16, (Byte__Array * value, int32_t startIndex, MethodInfo * method));
DO_APP_FUNC(0x0229CC60, int32_t, BitConverter_ToInt32, (Byte__Array * value, int32_t startIndex, MethodInfo * method));
DO_APP_FUNC(0x0229CDF0, int64_t, BitConverter_ToInt64, (Byte__Array * value, int32_t startIndex, MethodInfo * method));
DO_APP_FUNC(0x0229CFE0, uint16_t, BitConverter_ToUInt16, (Byte__Array * value, int32_t startIndex, MethodInfo * method));
DO_APP_FUNC(0x0229D0D0, uint32_t, BitConverter_ToUInt32, (Byte__Array * value, int32_t startIndex, MethodInfo * method));
DO_APP_FUNC(0x0229D1C0, uint64_t, BitConverter_ToUInt64, (Byte__Array * value, int32_t startIndex, MethodInfo * method));
DO_APP_FUNC(0x0229D2B0, float, BitConverter_ToSingle, (Byte__Array * value, int32_t startIndex, MethodInfo * method));
DO_APP_FUNC(0x0229D3A0, uint16_t, BitConverter_GetHexValue, (int32_t i, MethodInfo * method));
DO_APP_FUNC(0x0229D3B0, String *, BitConverter_ToString, (Byte__Array * value, int32_t startIndex, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x0229D790, String *, BitConverter_ToString_1, (Byte__Array * value, MethodInfo * method));
DO_APP_FUNC(0x0229D870, bool, BitConverter_ToBoolean, (Byte__Array * value, int32_t startIndex, MethodInfo * method));
DO_APP_FUNC(0x01969710, int64_t, BitConverter_DoubleToInt64Bits, (double value, MethodInfo * method));
DO_APP_FUNC(0x0229D9F0, double, BitConverter_Int64BitsToDouble, (int64_t value, MethodInfo * method));
DO_APP_FUNC(0x0229DA00, void, BitConverter__cctor, (MethodInfo * method));
DO_APP_FUNC(0x001E1560, int32_t, Boolean_GetHashCode, (Boolean__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E1570, String *, Boolean_ToString, (Boolean__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E1580, String *, Boolean_ToString_1, (Boolean__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E1590, bool, Boolean_Equals, (Boolean__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x001D85A0, bool, Boolean_Equals_1, (Boolean__Boxed * __this, bool obj, MethodInfo * method));
DO_APP_FUNC(0x001E15A0, int32_t, Boolean_CompareTo, (Boolean__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x001E15B0, int32_t, Boolean_CompareTo_1, (Boolean__Boxed * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x0229DDD0, bool, Boolean_Parse, (String * value, MethodInfo * method));
DO_APP_FUNC(0x0229DF00, bool, Boolean_TryParse, (String * value, bool * result, MethodInfo * method));
DO_APP_FUNC(0x0229E3D0, String *, Boolean_TrimWhiteSpaceAndNull, (String * value, MethodInfo * method));
DO_APP_FUNC(0x001E15D0, TypeCode__Enum, Boolean_GetTypeCode, (Boolean__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E15E0, bool, Boolean_System_IConvertible_ToBoolean, (Boolean__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E15F0, uint16_t, Boolean_System_IConvertible_ToChar, (Boolean__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E1600, int8_t, Boolean_System_IConvertible_ToSByte, (Boolean__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E16A0, uint8_t, Boolean_System_IConvertible_ToByte, (Boolean__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E1740, int16_t, Boolean_System_IConvertible_ToInt16, (Boolean__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E17F0, uint16_t, Boolean_System_IConvertible_ToUInt16, (Boolean__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E18A0, int32_t, Boolean_System_IConvertible_ToInt32, (Boolean__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E1950, uint32_t, Boolean_System_IConvertible_ToUInt32, (Boolean__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E1A00, int64_t, Boolean_System_IConvertible_ToInt64, (Boolean__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E1AB0, uint64_t, Boolean_System_IConvertible_ToUInt64, (Boolean__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E1B60, float, Boolean_System_IConvertible_ToSingle, (Boolean__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E1C10, double, Boolean_System_IConvertible_ToDouble, (Boolean__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E1CC0, Decimal, Boolean_System_IConvertible_ToDecimal, (Boolean__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E1E10, DateTime, Boolean_System_IConvertible_ToDateTime, (Boolean__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E1E20, Object *, Boolean_System_IConvertible_ToType, (Boolean__Boxed * __this, Type * type, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0229E6E0, void, Boolean__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0229E780, bool, Buffer_InternalBlockCopy, (Array * src, int32_t srcOffsetBytes, Array * dst, int32_t dstOffsetBytes, int32_t byteCount, MethodInfo * method));
DO_APP_FUNC(0x0229E840, int32_t, Buffer_IndexOfByte, (uint8_t * src, uint8_t value, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0229E900, int32_t, Buffer__ByteLength, (Array * array, MethodInfo * method));
DO_APP_FUNC(0x0229E950, void, Buffer_ZeroMemory, (uint8_t * src, int64_t len, MethodInfo * method));
DO_APP_FUNC(0x0229E970, void, Buffer_Memcpy, (Byte__Array * dest, int32_t destIndex, uint8_t * src, int32_t srcIndex, int32_t len, MethodInfo * method));
DO_APP_FUNC(0x0229E9B0, void, Buffer_Memcpy_1, (uint8_t * pDest, int32_t destIndex, Byte__Array * src, int32_t srcIndex, int32_t len, MethodInfo * method));
DO_APP_FUNC(0x0229E9F0, int32_t, Buffer_ByteLength, (Array * array, MethodInfo * method));
DO_APP_FUNC(0x0229EB30, void, Buffer_BlockCopy, (Array * src, int32_t srcOffset, Array * dst, int32_t dstOffset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0229EDB0, void, Buffer_MemoryCopy, (Void * source, Void * destination, int64_t destinationSizeInBytes, int64_t sourceBytesToCopy, MethodInfo * method));
DO_APP_FUNC(0x0229EF00, void, Buffer_memcpy4, (uint8_t * dest, uint8_t * src, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x0229EFA0, void, Buffer_memcpy2, (uint8_t * dest, uint8_t * src, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x0229F020, void, Buffer_memcpy1, (uint8_t * dest, uint8_t * src, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x0229F0D0, void, Buffer_Memcpy_2, (uint8_t * dest, uint8_t * src, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x001E1F00, int32_t, Byte_CompareTo, (Byte__Boxed * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x001E1F10, int32_t, Byte_CompareTo_1, (Byte__Boxed * __this, uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x001E1F20, bool, Byte_Equals, (Byte__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x001D85A0, bool, Byte_Equals_1, (Byte__Boxed * __this, uint8_t obj, MethodInfo * method));
DO_APP_FUNC(0x0010E100, int32_t, Byte_GetHashCode, (Byte__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0229F450, uint8_t, Byte_Parse, (String * s, NumberStyles__Enum style, MethodInfo * method));
DO_APP_FUNC(0x0229F490, uint8_t, Byte_Parse_1, (String * s, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0229F4C0, uint8_t, Byte_Parse_2, (String * s, NumberStyles__Enum style, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0229F510, uint8_t, Byte_Parse_3, (String * s, NumberStyles__Enum style, NumberFormatInfo * info, MethodInfo * method));
DO_APP_FUNC(0x0229F650, bool, Byte_TryParse, (String * s, uint8_t * result, MethodInfo * method));
DO_APP_FUNC(0x0229F6C0, bool, Byte_TryParse_1, (String * s, NumberStyles__Enum style, IFormatProvider * provider, uint8_t * result, MethodInfo * method));
DO_APP_FUNC(0x0229F750, bool, Byte_TryParse_2, (String * s, NumberStyles__Enum style, NumberFormatInfo * info, uint8_t * result, MethodInfo * method));
DO_APP_FUNC(0x001E1F30, String *, Byte_ToString, (Byte__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E1F60, String *, Byte_ToString_1, (Byte__Boxed * __this, String * format, MethodInfo * method));
DO_APP_FUNC(0x001E1FA0, String *, Byte_ToString_2, (Byte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E1FD0, String *, Byte_ToString_3, (Byte__Boxed * __this, String * format, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E2010, TypeCode__Enum, Byte_GetTypeCode, (Byte__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E2020, bool, Byte_System_IConvertible_ToBoolean, (Byte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E20C0, uint16_t, Byte_System_IConvertible_ToChar, (Byte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E2160, int8_t, Byte_System_IConvertible_ToSByte, (Byte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0010E100, uint8_t, Byte_System_IConvertible_ToByte, (Byte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E22A0, int16_t, Byte_System_IConvertible_ToInt16, (Byte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E2340, uint16_t, Byte_System_IConvertible_ToUInt16, (Byte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E23E0, int32_t, Byte_System_IConvertible_ToInt32, (Byte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E2480, uint32_t, Byte_System_IConvertible_ToUInt32, (Byte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E2520, int64_t, Byte_System_IConvertible_ToInt64, (Byte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E25C0, uint64_t, Byte_System_IConvertible_ToUInt64, (Byte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E2660, float, Byte_System_IConvertible_ToSingle, (Byte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E2700, double, Byte_System_IConvertible_ToDouble, (Byte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E27A0, Decimal, Byte_System_IConvertible_ToDecimal, (Byte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E28E0, DateTime, Byte_System_IConvertible_ToDateTime, (Byte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E28F0, Object *, Byte_System_IConvertible_ToType, (Byte__Boxed * __this, Type * type, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x022A0070, void, CannotUnloadAppDomainException__ctor, (CannotUnloadAppDomainException * __this, MethodInfo * method));
DO_APP_FUNC(0x022A0100, void, CannotUnloadAppDomainException__ctor_1, (CannotUnloadAppDomainException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, CannotUnloadAppDomainException__ctor_2, (CannotUnloadAppDomainException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x022A0120, bool, Char_IsLatin1, (uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x022A0130, bool, Char_IsAscii, (uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x022A0140, UnicodeCategory__Enum, Char_GetLatin1UnicodeCategory, (uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x001E29D0, int32_t, Char_GetHashCode, (Char__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E29E0, bool, Char_Equals, (Char__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x001303C0, bool, Char_Equals_1, (Char__Boxed * __this, uint16_t obj, MethodInfo * method));
DO_APP_FUNC(0x001E29F0, int32_t, Char_CompareTo, (Char__Boxed * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x001E2A00, int32_t, Char_CompareTo_1, (Char__Boxed * __this, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x00123DF0, String *, Char_ToString, (Char__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E2A10, String *, Char_ToString_1, (Char__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x022A0550, String *, Char_ToString_2, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x022A0570, uint16_t, Char_Parse, (String * s, MethodInfo * method));
DO_APP_FUNC(0x022A0680, bool, Char_TryParse, (String * s, uint16_t * result, MethodInfo * method));
DO_APP_FUNC(0x022A06B0, bool, Char_IsDigit, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x022A07A0, bool, Char_CheckLetter, (UnicodeCategory__Enum uc, MethodInfo * method));
DO_APP_FUNC(0x022A07B0, bool, Char_IsLetter, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x022A0910, bool, Char_IsWhiteSpaceLatin1, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x022A0940, bool, Char_IsWhiteSpace, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x022A0AF0, bool, Char_IsUpper, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x022A0C30, bool, Char_IsLower, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x022A0D70, bool, Char_CheckPunctuation, (UnicodeCategory__Enum uc, MethodInfo * method));
DO_APP_FUNC(0x022A0D80, bool, Char_IsPunctuation, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x022A0EB0, bool, Char_CheckLetterOrDigit, (UnicodeCategory__Enum uc, MethodInfo * method));
DO_APP_FUNC(0x022A0EC0, bool, Char_IsLetterOrDigit, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x022A0FF0, uint16_t, Char_ToUpper, (uint16_t c, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x022A10E0, uint16_t, Char_ToUpper_1, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x022A11D0, uint16_t, Char_ToUpperInvariant, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x022A12A0, uint16_t, Char_ToLower, (uint16_t c, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x022A1390, uint16_t, Char_ToLower_1, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x022A1480, uint16_t, Char_ToLowerInvariant, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x001E2A20, TypeCode__Enum, Char_GetTypeCode, (Char__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E2A30, bool, Char_System_IConvertible_ToBoolean, (Char__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00113CC0, uint16_t, Char_System_IConvertible_ToChar, (Char__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E2A40, int8_t, Char_System_IConvertible_ToSByte, (Char__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E2B80, uint8_t, Char_System_IConvertible_ToByte, (Char__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E2CC0, int16_t, Char_System_IConvertible_ToInt16, (Char__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E2E00, uint16_t, Char_System_IConvertible_ToUInt16, (Char__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E2EA0, int32_t, Char_System_IConvertible_ToInt32, (Char__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E2F40, uint32_t, Char_System_IConvertible_ToUInt32, (Char__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E2FE0, int64_t, Char_System_IConvertible_ToInt64, (Char__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E3080, uint64_t, Char_System_IConvertible_ToUInt64, (Char__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E3120, float, Char_System_IConvertible_ToSingle, (Char__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E3130, double, Char_System_IConvertible_ToDouble, (Char__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E3140, Decimal, Char_System_IConvertible_ToDecimal, (Char__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E3150, DateTime, Char_System_IConvertible_ToDateTime, (Char__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E3160, Object *, Char_System_IConvertible_ToType, (Char__Boxed * __this, Type * type, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x022A1960, bool, Char_IsControl, (String * s, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x022A1AF0, bool, Char_IsLetterOrDigit_1, (String * s, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x022A1CC0, bool, Char_IsLower_1, (String * s, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x022A1EA0, bool, Char_CheckNumber, (UnicodeCategory__Enum uc, MethodInfo * method));
DO_APP_FUNC(0x022A1EB0, bool, Char_IsNumber, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x022A2010, bool, Char_IsNumber_1, (String * s, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x022A2220, bool, Char_CheckSeparator, (UnicodeCategory__Enum uc, MethodInfo * method));
DO_APP_FUNC(0x022A2230, bool, Char_IsSeparatorLatin1, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x022A2250, bool, Char_IsSeparator, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x022A2380, bool, Char_IsSurrogate, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x022A23A0, bool, Char_IsSurrogate_1, (String * s, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x022A24E0, bool, Char_CheckSymbol, (UnicodeCategory__Enum uc, MethodInfo * method));
DO_APP_FUNC(0x022A24F0, bool, Char_IsSymbol, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x022A2620, bool, Char_IsWhiteSpace_1, (String * s, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x022A2870, UnicodeCategory__Enum, Char_GetUnicodeCategory, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x022A2960, UnicodeCategory__Enum, Char_GetUnicodeCategory_1, (String * s, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x022A2B00, bool, Char_IsHighSurrogate, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x022A2B20, bool, Char_IsHighSurrogate_1, (String * s, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x022A2C70, bool, Char_IsLowSurrogate, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x022A2C90, bool, Char_IsSurrogatePair, (String * s, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x022A2E10, bool, Char_IsSurrogatePair_1, (uint16_t highSurrogate, uint16_t lowSurrogate, MethodInfo * method));
DO_APP_FUNC(0x022A2E40, String *, Char_ConvertFromUtf32, (int32_t utf32, MethodInfo * method));
DO_APP_FUNC(0x022A3000, int32_t, Char_ConvertToUtf32, (uint16_t highSurrogate, uint16_t lowSurrogate, MethodInfo * method));
DO_APP_FUNC(0x022A3190, void, Char__cctor, (MethodInfo * method));
DO_APP_FUNC(0x021C1000, void, CharEnumerator__ctor, (CharEnumerator * __this, String * str, MethodInfo * method));
DO_APP_FUNC(0x0173F610, Object *, CharEnumerator_Clone, (CharEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x022A3240, bool, CharEnumerator_MoveNext, (CharEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x022A32B0, void, CharEnumerator_Dispose, (CharEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x022A32D0, Object *, CharEnumerator_System_Collections_IEnumerator_get_Current, (CharEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x022A3400, uint16_t, CharEnumerator_get_Current, (CharEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x022A3520, void, CharEnumerator_Reset, (CharEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x022A3530, void, CharEnumerator__ctor_1, (CharEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, CLSCompliantAttribute__ctor, (CLSCompliantAttribute * __this, bool isCompliant, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, ConsoleCancelEventHandler__ctor, (ConsoleCancelEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, ConsoleCancelEventHandler_Invoke, (ConsoleCancelEventHandler * __this, Object * sender, ConsoleCancelEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, ConsoleCancelEventHandler_BeginInvoke, (ConsoleCancelEventHandler * __this, Object * sender, ConsoleCancelEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, ConsoleCancelEventHandler_EndInvoke, (ConsoleCancelEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x02034910, void, ConsoleCancelEventArgs__ctor, (ConsoleCancelEventArgs * __this, ConsoleSpecialKey__Enum type, MethodInfo * method));
DO_APP_FUNC(0x00724AE0, bool, ConsoleCancelEventArgs_get_Cancel, (ConsoleCancelEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x020349C0, void, ConsoleCancelEventArgs__ctor_1, (ConsoleCancelEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x001DBE50, void, ConsoleKeyInfo__ctor, (ConsoleKeyInfo__Boxed * __this, uint16_t keyChar, ConsoleKey__Enum key, bool shift, bool alt, bool control, MethodInfo * method));
DO_APP_FUNC(0x00113CC0, uint16_t, ConsoleKeyInfo_get_KeyChar, (ConsoleKeyInfo__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00113CE0, ConsoleKey__Enum, ConsoleKeyInfo_get_Key, (ConsoleKeyInfo__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DBE70, bool, ConsoleKeyInfo_Equals, (ConsoleKeyInfo__Boxed * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x001DBF70, bool, ConsoleKeyInfo_Equals_1, (ConsoleKeyInfo__Boxed * __this, ConsoleKeyInfo obj, MethodInfo * method));
DO_APP_FUNC(0x001DBFC0, int32_t, ConsoleKeyInfo_GetHashCode, (ConsoleKeyInfo__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ContextBoundObject__ctor, (ContextBoundObject * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ContextStaticAttribute__ctor, (ContextStaticAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02035400, TypeCode__Enum, Convert_GetTypeCode, (Object * value, MethodInfo * method));
DO_APP_FUNC(0x020354B0, Object *, Convert_ChangeType, (Object * value, TypeCode__Enum typeCode, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x02035950, Object *, Convert_DefaultToType, (IConvertible * value, Type * targetType, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x02036940, Object *, Convert_ChangeType_1, (Object * value, Type * conversionType, MethodInfo * method));
DO_APP_FUNC(0x02036A20, Object *, Convert_ChangeType_2, (Object * value, Type * conversionType, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x02037790, bool, Convert_ToBoolean, (Object * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x02037890, bool, Convert_ToBoolean_1, (int8_t value, MethodInfo * method));
DO_APP_FUNC(0x02037890, bool, Convert_ToBoolean_2, (uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x020378A0, bool, Convert_ToBoolean_3, (int16_t value, MethodInfo * method));
DO_APP_FUNC(0x020378A0, bool, Convert_ToBoolean_4, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x020378B0, bool, Convert_ToBoolean_5, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x020378B0, bool, Convert_ToBoolean_6, (uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x020378C0, bool, Convert_ToBoolean_7, (int64_t value, MethodInfo * method));
DO_APP_FUNC(0x020378C0, bool, Convert_ToBoolean_8, (uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x020378D0, bool, Convert_ToBoolean_9, (String * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x02037980, bool, Convert_ToBoolean_10, (float value, MethodInfo * method));
DO_APP_FUNC(0x02037990, bool, Convert_ToBoolean_11, (double value, MethodInfo * method));
DO_APP_FUNC(0x020379B0, bool, Convert_ToBoolean_12, (Decimal value, MethodInfo * method));
DO_APP_FUNC(0x02037A80, uint16_t, Convert_ToChar, (Object * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x02037B80, uint16_t, Convert_ToChar_1, (int8_t value, MethodInfo * method));
DO_APP_FUNC(0x018F0F30, uint16_t, Convert_ToChar_2, (uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x02037C40, uint16_t, Convert_ToChar_3, (int16_t value, MethodInfo * method));
DO_APP_FUNC(0x015FAE60, uint16_t, Convert_ToChar_4, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x02037D10, uint16_t, Convert_ToChar_5, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x02037DE0, uint16_t, Convert_ToChar_6, (uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x02037EB0, uint16_t, Convert_ToChar_7, (int64_t value, MethodInfo * method));
DO_APP_FUNC(0x02037F80, uint16_t, Convert_ToChar_8, (uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x02038050, uint16_t, Convert_ToChar_9, (String * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x02038160, int8_t, Convert_ToSByte, (Object * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x02037890, int8_t, Convert_ToSByte_1, (bool value, MethodInfo * method));
DO_APP_FUNC(0x02038260, int8_t, Convert_ToSByte_2, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x02038330, int8_t, Convert_ToSByte_3, (uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x02038400, int8_t, Convert_ToSByte_4, (int16_t value, MethodInfo * method));
DO_APP_FUNC(0x020384D0, int8_t, Convert_ToSByte_5, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x020385A0, int8_t, Convert_ToSByte_6, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x02038670, int8_t, Convert_ToSByte_7, (uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x02038730, int8_t, Convert_ToSByte_8, (int64_t value, MethodInfo * method));
DO_APP_FUNC(0x02038800, int8_t, Convert_ToSByte_9, (uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x020388D0, int8_t, Convert_ToSByte_10, (float value, MethodInfo * method));
DO_APP_FUNC(0x02038980, int8_t, Convert_ToSByte_11, (double value, MethodInfo * method));
DO_APP_FUNC(0x02038A30, int8_t, Convert_ToSByte_12, (Decimal value, MethodInfo * method));
DO_APP_FUNC(0x02038BA0, int8_t, Convert_ToSByte_13, (String * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x02038BE0, uint8_t, Convert_ToByte, (Object * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x02037890, uint8_t, Convert_ToByte_1, (bool value, MethodInfo * method));
DO_APP_FUNC(0x02038CE0, uint8_t, Convert_ToByte_2, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x02038DB0, uint8_t, Convert_ToByte_3, (int8_t value, MethodInfo * method));
DO_APP_FUNC(0x02038E70, uint8_t, Convert_ToByte_4, (int16_t value, MethodInfo * method));
DO_APP_FUNC(0x02038F40, uint8_t, Convert_ToByte_5, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x02039010, uint8_t, Convert_ToByte_6, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x020390E0, uint8_t, Convert_ToByte_7, (uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x020391B0, uint8_t, Convert_ToByte_8, (int64_t value, MethodInfo * method));
DO_APP_FUNC(0x02039280, uint8_t, Convert_ToByte_9, (uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x02039350, uint8_t, Convert_ToByte_10, (float value, MethodInfo * method));
DO_APP_FUNC(0x02039400, uint8_t, Convert_ToByte_11, (double value, MethodInfo * method));
DO_APP_FUNC(0x020394B0, uint8_t, Convert_ToByte_12, (Decimal value, MethodInfo * method));
DO_APP_FUNC(0x02039620, uint8_t, Convert_ToByte_13, (String * value, MethodInfo * method));
DO_APP_FUNC(0x02039700, uint8_t, Convert_ToByte_14, (String * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x02039760, int16_t, Convert_ToInt16, (Object * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x02039860, int16_t, Convert_ToInt16_1, (bool value, MethodInfo * method));
DO_APP_FUNC(0x02039870, int16_t, Convert_ToInt16_2, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x02039940, int16_t, Convert_ToInt16_3, (int8_t value, MethodInfo * method));
DO_APP_FUNC(0x018F0F30, int16_t, Convert_ToInt16_4, (uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x02039950, int16_t, Convert_ToInt16_5, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x02039A20, int16_t, Convert_ToInt16_6, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x02039AF0, int16_t, Convert_ToInt16_7, (uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x02039BC0, int16_t, Convert_ToInt16_8, (int64_t value, MethodInfo * method));
DO_APP_FUNC(0x02039C90, int16_t, Convert_ToInt16_9, (uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x02039D60, int16_t, Convert_ToInt16_10, (float value, MethodInfo * method));
DO_APP_FUNC(0x02039E10, int16_t, Convert_ToInt16_11, (double value, MethodInfo * method));
DO_APP_FUNC(0x02039EC0, int16_t, Convert_ToInt16_12, (Decimal value, MethodInfo * method));
DO_APP_FUNC(0x0203A030, int16_t, Convert_ToInt16_13, (String * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0203A090, uint16_t, Convert_ToUInt16, (Object * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x02039860, uint16_t, Convert_ToUInt16_1, (bool value, MethodInfo * method));
DO_APP_FUNC(0x015FAE60, uint16_t, Convert_ToUInt16_2, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x0203A190, uint16_t, Convert_ToUInt16_3, (int8_t value, MethodInfo * method));
DO_APP_FUNC(0x018F0F30, uint16_t, Convert_ToUInt16_4, (uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x0203A250, uint16_t, Convert_ToUInt16_5, (int16_t value, MethodInfo * method));
DO_APP_FUNC(0x0203A320, uint16_t, Convert_ToUInt16_6, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0203A3F0, uint16_t, Convert_ToUInt16_7, (uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x0203A4C0, uint16_t, Convert_ToUInt16_8, (int64_t value, MethodInfo * method));
DO_APP_FUNC(0x0203A590, uint16_t, Convert_ToUInt16_9, (uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x0203A660, uint16_t, Convert_ToUInt16_10, (float value, MethodInfo * method));
DO_APP_FUNC(0x0203A710, uint16_t, Convert_ToUInt16_11, (double value, MethodInfo * method));
DO_APP_FUNC(0x0203A7C0, uint16_t, Convert_ToUInt16_12, (Decimal value, MethodInfo * method));
DO_APP_FUNC(0x0203A930, uint16_t, Convert_ToUInt16_13, (String * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0203A990, int32_t, Convert_ToInt32, (Object * value, MethodInfo * method));
DO_APP_FUNC(0x0203AA80, int32_t, Convert_ToInt32_1, (Object * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0203AB80, int32_t, Convert_ToInt32_2, (bool value, MethodInfo * method));
DO_APP_FUNC(0x015FAE60, int32_t, Convert_ToInt32_3, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x018F0F30, int32_t, Convert_ToInt32_4, (uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x0203AB90, int32_t, Convert_ToInt32_5, (int16_t value, MethodInfo * method));
DO_APP_FUNC(0x015FAE60, int32_t, Convert_ToInt32_6, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x0203ABA0, int32_t, Convert_ToInt32_7, (uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x0203AC70, int32_t, Convert_ToInt32_8, (int64_t value, MethodInfo * method));
DO_APP_FUNC(0x0203AD40, int32_t, Convert_ToInt32_9, (uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x0203AE10, int32_t, Convert_ToInt32_10, (float value, MethodInfo * method));
DO_APP_FUNC(0x0203AEC0, int32_t, Convert_ToInt32_11, (double value, MethodInfo * method));
DO_APP_FUNC(0x0203B010, int32_t, Convert_ToInt32_12, (Decimal value, MethodInfo * method));
DO_APP_FUNC(0x0203B110, int32_t, Convert_ToInt32_13, (String * value, MethodInfo * method));
DO_APP_FUNC(0x0203B1F0, int32_t, Convert_ToInt32_14, (String * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0203B250, uint32_t, Convert_ToUInt32, (Object * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0203AB80, uint32_t, Convert_ToUInt32_1, (bool value, MethodInfo * method));
DO_APP_FUNC(0x015FAE60, uint32_t, Convert_ToUInt32_2, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x0203B350, uint32_t, Convert_ToUInt32_3, (int8_t value, MethodInfo * method));
DO_APP_FUNC(0x018F0F30, uint32_t, Convert_ToUInt32_4, (uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x0203B410, uint32_t, Convert_ToUInt32_5, (int16_t value, MethodInfo * method));
DO_APP_FUNC(0x015FAE60, uint32_t, Convert_ToUInt32_6, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x0203B4E0, uint32_t, Convert_ToUInt32_7, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0203B5A0, uint32_t, Convert_ToUInt32_8, (int64_t value, MethodInfo * method));
DO_APP_FUNC(0x0203B670, uint32_t, Convert_ToUInt32_9, (uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x0203B740, uint32_t, Convert_ToUInt32_10, (float value, MethodInfo * method));
DO_APP_FUNC(0x0203B7F0, uint32_t, Convert_ToUInt32_11, (double value, MethodInfo * method));
DO_APP_FUNC(0x0203B900, uint32_t, Convert_ToUInt32_12, (Decimal value, MethodInfo * method));
DO_APP_FUNC(0x0203BA70, uint32_t, Convert_ToUInt32_13, (String * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0203BAD0, int64_t, Convert_ToInt64, (Object * value, MethodInfo * method));
DO_APP_FUNC(0x0203BBC0, int64_t, Convert_ToInt64_1, (Object * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0203BCC0, int64_t, Convert_ToInt64_2, (bool value, MethodInfo * method));
DO_APP_FUNC(0x015FAE60, int64_t, Convert_ToInt64_3, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x0203BCD0, int64_t, Convert_ToInt64_4, (int8_t value, MethodInfo * method));
DO_APP_FUNC(0x018F0F30, int64_t, Convert_ToInt64_5, (uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x0203BCE0, int64_t, Convert_ToInt64_6, (int16_t value, MethodInfo * method));
DO_APP_FUNC(0x015FAE60, int64_t, Convert_ToInt64_7, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x01A948E0, int64_t, Convert_ToInt64_8, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x006CE970, int64_t, Convert_ToInt64_9, (uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x0203BCF0, int64_t, Convert_ToInt64_10, (uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x0203BDC0, int64_t, Convert_ToInt64_11, (float value, MethodInfo * method));
DO_APP_FUNC(0x0203BE70, int64_t, Convert_ToInt64_12, (double value, MethodInfo * method));
DO_APP_FUNC(0x0203BF40, int64_t, Convert_ToInt64_13, (Decimal value, MethodInfo * method));
DO_APP_FUNC(0x0203C0B0, int64_t, Convert_ToInt64_14, (String * value, MethodInfo * method));
DO_APP_FUNC(0x0203C190, int64_t, Convert_ToInt64_15, (String * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0203C1F0, uint64_t, Convert_ToUInt64, (Object * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0203AB80, uint64_t, Convert_ToUInt64_1, (bool value, MethodInfo * method));
DO_APP_FUNC(0x015FAE60, uint64_t, Convert_ToUInt64_2, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x0203C2F0, uint64_t, Convert_ToUInt64_3, (int8_t value, MethodInfo * method));
DO_APP_FUNC(0x018F0F30, uint64_t, Convert_ToUInt64_4, (uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x0203C3C0, uint64_t, Convert_ToUInt64_5, (int16_t value, MethodInfo * method));
DO_APP_FUNC(0x015FAE60, uint64_t, Convert_ToUInt64_6, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x0203C490, uint64_t, Convert_ToUInt64_7, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x006CE970, uint64_t, Convert_ToUInt64_8, (uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x0203C550, uint64_t, Convert_ToUInt64_9, (int64_t value, MethodInfo * method));
DO_APP_FUNC(0x0203C620, uint64_t, Convert_ToUInt64_10, (float value, MethodInfo * method));
DO_APP_FUNC(0x0203C6D0, uint64_t, Convert_ToUInt64_11, (double value, MethodInfo * method));
DO_APP_FUNC(0x0203C7D0, uint64_t, Convert_ToUInt64_12, (Decimal value, MethodInfo * method));
DO_APP_FUNC(0x0203C940, uint64_t, Convert_ToUInt64_13, (String * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0203C9A0, float, Convert_ToSingle, (Object * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0203CAA0, float, Convert_ToSingle_1, (int8_t value, MethodInfo * method));
DO_APP_FUNC(0x0203CAB0, float, Convert_ToSingle_2, (uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x0203CAC0, float, Convert_ToSingle_3, (int16_t value, MethodInfo * method));
DO_APP_FUNC(0x0203CAD0, float, Convert_ToSingle_4, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x0203CAE0, float, Convert_ToSingle_5, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0203CAF0, float, Convert_ToSingle_6, (uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x0203CB00, float, Convert_ToSingle_7, (int64_t value, MethodInfo * method));
DO_APP_FUNC(0x0203CB10, float, Convert_ToSingle_8, (uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x0203CB30, float, Convert_ToSingle_9, (double value, MethodInfo * method));
DO_APP_FUNC(0x0203CB40, float, Convert_ToSingle_10, (Decimal value, MethodInfo * method));
DO_APP_FUNC(0x0203CCA0, float, Convert_ToSingle_11, (String * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0203CD00, float, Convert_ToSingle_12, (bool value, MethodInfo * method));
DO_APP_FUNC(0x0203CD10, double, Convert_ToDouble, (Object * value, MethodInfo * method));
DO_APP_FUNC(0x0203CE00, double, Convert_ToDouble_1, (Object * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0203CF00, double, Convert_ToDouble_2, (int8_t value, MethodInfo * method));
DO_APP_FUNC(0x0203CF10, double, Convert_ToDouble_3, (uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x0203CF20, double, Convert_ToDouble_4, (int16_t value, MethodInfo * method));
DO_APP_FUNC(0x0203CF30, double, Convert_ToDouble_5, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x0203CF40, double, Convert_ToDouble_6, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0203CF50, double, Convert_ToDouble_7, (uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x0203CF60, double, Convert_ToDouble_8, (int64_t value, MethodInfo * method));
DO_APP_FUNC(0x0203CF70, double, Convert_ToDouble_9, (uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x0203CF90, double, Convert_ToDouble_10, (float value, MethodInfo * method));
DO_APP_FUNC(0x0203CFA0, double, Convert_ToDouble_11, (Decimal value, MethodInfo * method));
DO_APP_FUNC(0x0203D050, double, Convert_ToDouble_12, (String * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0203D120, double, Convert_ToDouble_13, (bool value, MethodInfo * method));
DO_APP_FUNC(0x0203D130, Decimal, Convert_ToDecimal, (Object * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0203D260, Decimal, Convert_ToDecimal_1, (int8_t value, MethodInfo * method));
DO_APP_FUNC(0x0203D340, Decimal, Convert_ToDecimal_2, (uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x0203D400, Decimal, Convert_ToDecimal_3, (int16_t value, MethodInfo * method));
DO_APP_FUNC(0x0203D4E0, Decimal, Convert_ToDecimal_4, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x0203D5A0, Decimal, Convert_ToDecimal_5, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0203D670, Decimal, Convert_ToDecimal_6, (uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x0203D730, Decimal, Convert_ToDecimal_7, (int64_t value, MethodInfo * method));
DO_APP_FUNC(0x0203D810, Decimal, Convert_ToDecimal_8, (uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x0203D8D0, Decimal, Convert_ToDecimal_9, (float value, MethodInfo * method));
DO_APP_FUNC(0x0203D9B0, Decimal, Convert_ToDecimal_10, (double value, MethodInfo * method));
DO_APP_FUNC(0x0203DA90, Decimal, Convert_ToDecimal_11, (String * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0203DBB0, Decimal, Convert_ToDecimal_12, (bool value, MethodInfo * method));
DO_APP_FUNC(0x0203DC70, DateTime, Convert_ToDateTime, (Object * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0203DDA0, DateTime, Convert_ToDateTime_1, (String * value, MethodInfo * method));
DO_APP_FUNC(0x0203DEB0, DateTime, Convert_ToDateTime_2, (String * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0203DF90, String *, Convert_ToString, (Object * value, MethodInfo * method));
DO_APP_FUNC(0x0203E030, String *, Convert_ToString_1, (Object * value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x019637F0, String *, Convert_ToString_2, (uint16_t value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0203E150, String *, Convert_ToString_3, (int32_t value, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0203E180, String *, Convert_ToString_4, (uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x0203E250, uint8_t, Convert_ToByte_15, (String * value, int32_t fromBase, MethodInfo * method));
DO_APP_FUNC(0x0203E380, int8_t, Convert_ToSByte_14, (String * value, int32_t fromBase, MethodInfo * method));
DO_APP_FUNC(0x0203E4D0, int16_t, Convert_ToInt16_14, (String * value, int32_t fromBase, MethodInfo * method));
DO_APP_FUNC(0x0203E620, uint16_t, Convert_ToUInt16_14, (String * value, int32_t fromBase, MethodInfo * method));
DO_APP_FUNC(0x0203E750, int32_t, Convert_ToInt32_15, (String * value, int32_t fromBase, MethodInfo * method));
DO_APP_FUNC(0x0203E840, uint32_t, Convert_ToUInt32_14, (String * value, int32_t fromBase, MethodInfo * method));
DO_APP_FUNC(0x0203E930, int64_t, Convert_ToInt64_16, (String * value, int32_t fromBase, MethodInfo * method));
DO_APP_FUNC(0x0203EA20, uint64_t, Convert_ToUInt64_14, (String * value, int32_t fromBase, MethodInfo * method));
DO_APP_FUNC(0x0203EB10, String *, Convert_ToBase64String, (Byte__Array * inArray, MethodInfo * method));
DO_APP_FUNC(0x0203EC00, String *, Convert_ToBase64String_1, (Byte__Array * inArray, int32_t offset, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x0203ECD0, String *, Convert_ToBase64String_2, (Byte__Array * inArray, int32_t offset, int32_t length, Base64FormattingOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x0203EFE0, int32_t, Convert_ToBase64CharArray, (Byte__Array * inArray, int32_t offsetIn, int32_t length, Char__Array * outArray, int32_t offsetOut, MethodInfo * method));
DO_APP_FUNC(0x0203F0D0, int32_t, Convert_ToBase64CharArray_1, (Byte__Array * inArray, int32_t offsetIn, int32_t length, Char__Array * outArray, int32_t offsetOut, Base64FormattingOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x0203F4E0, int32_t, Convert_ConvertToBase64Array, (uint16_t * outChars, uint8_t * inData, int32_t offset, int32_t length, bool insertLineBreaks, MethodInfo * method));
DO_APP_FUNC(0x0203F7D0, int32_t, Convert_ToBase64_CalculateAndValidateOutputLength, (int32_t inputLength, bool insertLineBreaks, MethodInfo * method));
DO_APP_FUNC(0x0203F910, Byte__Array *, Convert_FromBase64String, (String * s, MethodInfo * method));
DO_APP_FUNC(0x0203FA00, Byte__Array *, Convert_FromBase64CharArray, (Char__Array * inArray, int32_t offset, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x0203FBF0, Byte__Array *, Convert_FromBase64CharPtr, (uint16_t * inputPtr, int32_t inputLength, MethodInfo * method));
DO_APP_FUNC(0x0203FE40, int32_t, Convert_FromBase64_Decode, (uint16_t * startInputPtr, int32_t inputLength, uint8_t * startDestPtr, int32_t destLength, MethodInfo * method));
DO_APP_FUNC(0x02040180, int32_t, Convert_FromBase64_ComputeResultLength, (uint16_t * inputPtr, int32_t inputLength, MethodInfo * method));
DO_APP_FUNC(0x020402A0, void, Convert__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00213D60, void, DateTime__ctor, (DateTime__Boxed * __this, int64_t ticks, MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, DateTime__ctor_1, (DateTime__Boxed * __this, uint64_t dateData, MethodInfo * method));
DO_APP_FUNC(0x00213D70, void, DateTime__ctor_2, (DateTime__Boxed * __this, int64_t ticks, DateTimeKind__Enum kind, MethodInfo * method));
DO_APP_FUNC(0x00213D80, void, DateTime__ctor_3, (DateTime__Boxed * __this, int64_t ticks, DateTimeKind__Enum kind, bool isAmbiguousDst, MethodInfo * method));
DO_APP_FUNC(0x00213D90, void, DateTime__ctor_4, (DateTime__Boxed * __this, int32_t year, int32_t month, int32_t day, MethodInfo * method));
DO_APP_FUNC(0x00213DA0, void, DateTime__ctor_5, (DateTime__Boxed * __this, int32_t year, int32_t month, int32_t day, Calendar * calendar, MethodInfo * method));
DO_APP_FUNC(0x00213DD0, void, DateTime__ctor_6, (DateTime__Boxed * __this, int32_t year, int32_t month, int32_t day, int32_t hour, int32_t minute, int32_t second, MethodInfo * method));
DO_APP_FUNC(0x00213DE0, void, DateTime__ctor_7, (DateTime__Boxed * __this, int32_t year, int32_t month, int32_t day, int32_t hour, int32_t minute, int32_t second, DateTimeKind__Enum kind, MethodInfo * method));
DO_APP_FUNC(0x00213DF0, void, DateTime__ctor_8, (DateTime__Boxed * __this, int32_t year, int32_t month, int32_t day, int32_t hour, int32_t minute, int32_t second, Calendar * calendar, MethodInfo * method));
DO_APP_FUNC(0x00213E00, void, DateTime__ctor_9, (DateTime__Boxed * __this, int32_t year, int32_t month, int32_t day, int32_t hour, int32_t minute, int32_t second, int32_t millisecond, MethodInfo * method));
DO_APP_FUNC(0x00213E10, void, DateTime__ctor_10, (DateTime__Boxed * __this, int32_t year, int32_t month, int32_t day, int32_t hour, int32_t minute, int32_t second, int32_t millisecond, DateTimeKind__Enum kind, MethodInfo * method));
DO_APP_FUNC(0x00213E20, void, DateTime__ctor_11, (DateTime__Boxed * __this, int32_t year, int32_t month, int32_t day, int32_t hour, int32_t minute, int32_t second, int32_t millisecond, Calendar * calendar, MethodInfo * method));
DO_APP_FUNC(0x00213E30, void, DateTime__ctor_12, (DateTime__Boxed * __this, int32_t year, int32_t month, int32_t day, int32_t hour, int32_t minute, int32_t second, int32_t millisecond, Calendar * calendar, DateTimeKind__Enum kind, MethodInfo * method));
DO_APP_FUNC(0x00213E40, void, DateTime__ctor_13, (DateTime__Boxed * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x00213E60, int64_t, DateTime_get_InternalTicks, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00213E80, uint64_t, DateTime_get_InternalKind, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00213EA0, DateTime, DateTime_Add, (DateTime__Boxed * __this, TimeSpan value, MethodInfo * method));
DO_APP_FUNC(0x00213EB0, DateTime, DateTime_Add_1, (DateTime__Boxed * __this, double value, int32_t scale, MethodInfo * method));
DO_APP_FUNC(0x00213EC0, DateTime, DateTime_AddDays, (DateTime__Boxed * __this, double value, MethodInfo * method));
DO_APP_FUNC(0x00213ED0, DateTime, DateTime_AddHours, (DateTime__Boxed * __this, double value, MethodInfo * method));
DO_APP_FUNC(0x00213EE0, DateTime, DateTime_AddMilliseconds, (DateTime__Boxed * __this, double value, MethodInfo * method));
DO_APP_FUNC(0x00213EF0, DateTime, DateTime_AddMonths, (DateTime__Boxed * __this, int32_t months, MethodInfo * method));
DO_APP_FUNC(0x00213F00, DateTime, DateTime_AddSeconds, (DateTime__Boxed * __this, double value, MethodInfo * method));
DO_APP_FUNC(0x00213EA0, DateTime, DateTime_AddTicks, (DateTime__Boxed * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x00213F10, DateTime, DateTime_AddYears, (DateTime__Boxed * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x028A3200, int32_t, DateTime_Compare, (DateTime t1, DateTime t2, MethodInfo * method));
DO_APP_FUNC(0x00213F20, int32_t, DateTime_CompareTo, (DateTime__Boxed * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x00214050, int32_t, DateTime_CompareTo_1, (DateTime__Boxed * __this, DateTime value, MethodInfo * method));
DO_APP_FUNC(0x028A3220, int64_t, DateTime_DateToTicks, (int32_t year, int32_t month, int32_t day, MethodInfo * method));
DO_APP_FUNC(0x028A3460, int64_t, DateTime_TimeToTicks, (int32_t hour, int32_t minute, int32_t second, MethodInfo * method));
DO_APP_FUNC(0x028A3560, int32_t, DateTime_DaysInMonth, (int32_t year, int32_t month, MethodInfo * method));
DO_APP_FUNC(0x00214080, bool, DateTime_Equals, (DateTime__Boxed * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x00214090, bool, DateTime_Equals_1, (DateTime__Boxed * __this, DateTime value, MethodInfo * method));
DO_APP_FUNC(0x028A37F0, DateTime, DateTime_FromBinary, (int64_t dateData, MethodInfo * method));
DO_APP_FUNC(0x028A3AB0, DateTime, DateTime_FromBinaryRaw, (int64_t dateData, MethodInfo * method));
DO_APP_FUNC(0x028A3BA0, DateTime, DateTime_FromFileTime, (int64_t fileTime, MethodInfo * method));
DO_APP_FUNC(0x028A3C50, DateTime, DateTime_FromFileTimeUtc, (int64_t fileTime, MethodInfo * method));
DO_APP_FUNC(0x002140B0, void, DateTime_System_Runtime_Serialization_ISerializable_GetObjectData, (DateTime__Boxed * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002141A0, bool, DateTime_IsDaylightSavingTime, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x028A3D50, DateTime, DateTime_SpecifyKind, (DateTime value, DateTimeKind__Enum kind, MethodInfo * method));
DO_APP_FUNC(0x00214300, int64_t, DateTime_ToBinary, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00107C00, int64_t, DateTime_ToBinaryRaw, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002143A0, DateTime, DateTime_get_Date, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002143E0, int32_t, DateTime_GetDatePart, (DateTime__Boxed * __this, int32_t part, MethodInfo * method));
DO_APP_FUNC(0x001C5E10, int32_t, DateTime_get_Day, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002143F0, DayOfWeek__Enum, DateTime_get_DayOfWeek, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00214440, int32_t, DateTime_get_DayOfYear, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00214450, int32_t, DateTime_GetHashCode, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001C5E20, int32_t, DateTime_get_Hour, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00214470, bool, DateTime_IsAmbiguousDaylightSavingTime, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00214490, DateTimeKind__Enum, DateTime_get_Kind, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002144C0, int32_t, DateTime_get_Millisecond, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001C5E70, int32_t, DateTime_get_Minute, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001C5E00, int32_t, DateTime_get_Month, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x028A4000, DateTime, DateTime_get_Now, (MethodInfo * method));
DO_APP_FUNC(0x028A4150, DateTime, DateTime_get_UtcNow, (MethodInfo * method));
DO_APP_FUNC(0x028A4210, int64_t, DateTime_GetSystemTimeAsFileTime, (MethodInfo * method));
DO_APP_FUNC(0x001C5EC0, int32_t, DateTime_get_Second, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00213E60, int64_t, DateTime_get_Ticks, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00214510, TimeSpan, DateTime_get_TimeOfDay, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001C5DF0, int32_t, DateTime_get_Year, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x028A4230, bool, DateTime_IsLeapYear, (int32_t year, MethodInfo * method));
DO_APP_FUNC(0x028A4360, DateTime, DateTime_Parse, (String * s, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x028A4440, DateTime, DateTime_Parse_1, (String * s, IFormatProvider * provider, DateTimeStyles__Enum styles, MethodInfo * method));
DO_APP_FUNC(0x028A4540, DateTime, DateTime_ParseExact, (String * s, String * format, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x028A4630, DateTime, DateTime_ParseExact_1, (String * s, String * format, IFormatProvider * provider, DateTimeStyles__Enum style, MethodInfo * method));
DO_APP_FUNC(0x028A4750, DateTime, DateTime_ParseExact_2, (String * s, String__Array * formats, IFormatProvider * provider, DateTimeStyles__Enum style, MethodInfo * method));
DO_APP_FUNC(0x00214540, TimeSpan, DateTime_Subtract, (DateTime__Boxed * __this, DateTime value, MethodInfo * method));
DO_APP_FUNC(0x028A4970, double, DateTime_TicksToOADate, (int64_t value, MethodInfo * method));
DO_APP_FUNC(0x00214560, double, DateTime_ToOADate, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00214570, int64_t, DateTime_ToFileTime, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002145B0, int64_t, DateTime_ToFileTimeUtc, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002145C0, DateTime, DateTime_ToLocalTime, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002145D0, DateTime, DateTime_ToLocalTime_1, (DateTime__Boxed * __this, bool throwOnOverflow, MethodInfo * method));
DO_APP_FUNC(0x002145E0, String *, DateTime_ToLongDateString, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002146C0, String *, DateTime_ToLongTimeString, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002146D0, String *, DateTime_ToShortDateString, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002147B0, String *, DateTime_ToShortTimeString, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00214890, String *, DateTime_ToString, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002148A0, String *, DateTime_ToString_1, (DateTime__Boxed * __this, String * format, MethodInfo * method));
DO_APP_FUNC(0x002148B0, String *, DateTime_ToString_2, (DateTime__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x002148C0, String *, DateTime_ToString_3, (DateTime__Boxed * __this, String * format, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x002148D0, DateTime, DateTime_ToUniversalTime, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x028A5480, bool, DateTime_TryParse, (String * s, DateTime * result, MethodInfo * method));
DO_APP_FUNC(0x028A5570, bool, DateTime_TryParse_1, (String * s, IFormatProvider * provider, DateTimeStyles__Enum styles, DateTime * result, MethodInfo * method));
DO_APP_FUNC(0x028A5690, bool, DateTime_TryParseExact, (String * s, String * format, IFormatProvider * provider, DateTimeStyles__Enum style, DateTime * result, MethodInfo * method));
DO_APP_FUNC(0x028A58B0, bool, DateTime_TryParseExact_1, (String * s, String__Array * formats, IFormatProvider * provider, DateTimeStyles__Enum style, DateTime * result, MethodInfo * method));
DO_APP_FUNC(0x028A5AD0, DateTime, DateTime_op_Addition, (DateTime d, TimeSpan t, MethodInfo * method));
DO_APP_FUNC(0x028A5BE0, DateTime, DateTime_op_Subtraction, (DateTime d, TimeSpan t, MethodInfo * method));
DO_APP_FUNC(0x028A5CE0, TimeSpan, DateTime_op_Subtraction_1, (DateTime d1, DateTime d2, MethodInfo * method));
DO_APP_FUNC(0x028A5D00, bool, DateTime_op_Equality, (DateTime d1, DateTime d2, MethodInfo * method));
DO_APP_FUNC(0x028A5D20, bool, DateTime_op_Inequality, (DateTime d1, DateTime d2, MethodInfo * method));
DO_APP_FUNC(0x028A5D40, bool, DateTime_op_LessThan, (DateTime t1, DateTime t2, MethodInfo * method));
DO_APP_FUNC(0x028A5D60, bool, DateTime_op_LessThanOrEqual, (DateTime t1, DateTime t2, MethodInfo * method));
DO_APP_FUNC(0x028A5D80, bool, DateTime_op_GreaterThan, (DateTime t1, DateTime t2, MethodInfo * method));
DO_APP_FUNC(0x028A5DA0, bool, DateTime_op_GreaterThanOrEqual, (DateTime t1, DateTime t2, MethodInfo * method));
DO_APP_FUNC(0x00214900, String__Array *, DateTime_GetDateTimeFormats, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002149C0, String__Array *, DateTime_GetDateTimeFormats_1, (DateTime__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x002149D0, TypeCode__Enum, DateTime_GetTypeCode, (DateTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002149E0, bool, DateTime_System_IConvertible_ToBoolean, (DateTime__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x002149F0, uint16_t, DateTime_System_IConvertible_ToChar, (DateTime__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00214A00, int8_t, DateTime_System_IConvertible_ToSByte, (DateTime__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00214A10, uint8_t, DateTime_System_IConvertible_ToByte, (DateTime__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00214A20, int16_t, DateTime_System_IConvertible_ToInt16, (DateTime__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00214A30, uint16_t, DateTime_System_IConvertible_ToUInt16, (DateTime__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00214A40, int32_t, DateTime_System_IConvertible_ToInt32, (DateTime__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00214A50, uint32_t, DateTime_System_IConvertible_ToUInt32, (DateTime__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00214A60, int64_t, DateTime_System_IConvertible_ToInt64, (DateTime__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00214A70, uint64_t, DateTime_System_IConvertible_ToUInt64, (DateTime__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00214A80, float, DateTime_System_IConvertible_ToSingle, (DateTime__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00214A90, double, DateTime_System_IConvertible_ToDouble, (DateTime__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00214AA0, Decimal, DateTime_System_IConvertible_ToDecimal, (DateTime__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00107C00, DateTime, DateTime_System_IConvertible_ToDateTime, (DateTime__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00214AB0, Object *, DateTime_System_IConvertible_ToType, (DateTime__Boxed * __this, Type * type, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x028A6930, bool, DateTime_TryCreate, (int32_t year, int32_t month, int32_t day, int32_t hour, int32_t minute, int32_t second, int32_t millisecond, DateTime * result, MethodInfo * method));
DO_APP_FUNC(0x028A6BD0, void, DateTime__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00214B90, void, DateTimeOffset__ctor, (DateTimeOffset__Boxed * __this, int64_t ticks, TimeSpan offset, MethodInfo * method));
DO_APP_FUNC(0x00214BA0, void, DateTimeOffset__ctor_1, (DateTimeOffset__Boxed * __this, DateTime dateTime, MethodInfo * method));
DO_APP_FUNC(0x00214BB0, void, DateTimeOffset__ctor_2, (DateTimeOffset__Boxed * __this, DateTime dateTime, TimeSpan offset, MethodInfo * method));
DO_APP_FUNC(0x00214BC0, void, DateTimeOffset__ctor_3, (DateTimeOffset__Boxed * __this, int32_t year, int32_t month, int32_t day, int32_t hour, int32_t minute, int32_t second, TimeSpan offset, MethodInfo * method));
DO_APP_FUNC(0x00214CF0, void, DateTimeOffset__ctor_4, (DateTimeOffset__Boxed * __this, int32_t year, int32_t month, int32_t day, int32_t hour, int32_t minute, int32_t second, int32_t millisecond, TimeSpan offset, MethodInfo * method));
DO_APP_FUNC(0x00214E20, void, DateTimeOffset__ctor_5, (DateTimeOffset__Boxed * __this, int32_t year, int32_t month, int32_t day, int32_t hour, int32_t minute, int32_t second, int32_t millisecond, Calendar * calendar, TimeSpan offset, MethodInfo * method));
DO_APP_FUNC(0x028AAE10, DateTimeOffset, DateTimeOffset_get_Now, (MethodInfo * method));
DO_APP_FUNC(0x00214F60, DateTime, DateTimeOffset_get_DateTime, (DateTimeOffset__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00214F70, DateTime, DateTimeOffset_get_UtcDateTime, (DateTimeOffset__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00214F80, DateTime, DateTimeOffset_get_LocalDateTime, (DateTimeOffset__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00214F60, DateTime, DateTimeOffset_get_ClockDateTime, (DateTimeOffset__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00214FB0, DateTime, DateTimeOffset_get_Date, (DateTimeOffset__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00215000, int32_t, DateTimeOffset_get_Day, (DateTimeOffset__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00215030, DayOfWeek__Enum, DateTimeOffset_get_DayOfWeek, (DateTimeOffset__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00215090, int32_t, DateTimeOffset_get_DayOfYear, (DateTimeOffset__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002150C0, int32_t, DateTimeOffset_get_Hour, (DateTimeOffset__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00215120, int32_t, DateTimeOffset_get_Millisecond, (DateTimeOffset__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00215180, int32_t, DateTimeOffset_get_Minute, (DateTimeOffset__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002151E0, int32_t, DateTimeOffset_get_Month, (DateTimeOffset__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00215210, TimeSpan, DateTimeOffset_get_Offset, (DateTimeOffset__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00215240, int32_t, DateTimeOffset_get_Second, (DateTimeOffset__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002152A0, int64_t, DateTimeOffset_get_Ticks, (DateTimeOffset__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002152C0, int64_t, DateTimeOffset_get_UtcTicks, (DateTimeOffset__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002152E0, TimeSpan, DateTimeOffset_get_TimeOfDay, (DateTimeOffset__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00215320, int32_t, DateTimeOffset_get_Year, (DateTimeOffset__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x028AB0C0, int32_t, DateTimeOffset_Compare, (DateTimeOffset first, DateTimeOffset second, MethodInfo * method));
DO_APP_FUNC(0x00215350, int32_t, DateTimeOffset_System_IComparable_CompareTo, (DateTimeOffset__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x002154E0, int32_t, DateTimeOffset_CompareTo, (DateTimeOffset__Boxed * __this, DateTimeOffset other, MethodInfo * method));
DO_APP_FUNC(0x00215500, bool, DateTimeOffset_Equals, (DateTimeOffset__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x00215510, bool, DateTimeOffset_Equals_1, (DateTimeOffset__Boxed * __this, DateTimeOffset other, MethodInfo * method));
DO_APP_FUNC(0x00215550, void, DateTimeOffset_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization, (DateTimeOffset__Boxed * __this, Object * sender, MethodInfo * method));
DO_APP_FUNC(0x00215560, void, DateTimeOffset_System_Runtime_Serialization_ISerializable_GetObjectData, (DateTimeOffset__Boxed * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x00215710, void, DateTimeOffset__ctor_6, (DateTimeOffset__Boxed * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002158A0, int32_t, DateTimeOffset_GetHashCode, (DateTimeOffset__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x028AB4F0, DateTimeOffset, DateTimeOffset_Parse, (String * input, IFormatProvider * formatProvider, MethodInfo * method));
DO_APP_FUNC(0x028AB5C0, DateTimeOffset, DateTimeOffset_Parse_1, (String * input, IFormatProvider * formatProvider, DateTimeStyles__Enum styles, MethodInfo * method));
DO_APP_FUNC(0x028AB830, DateTimeOffset, DateTimeOffset_ParseExact, (String * input, String__Array * formats, IFormatProvider * formatProvider, DateTimeStyles__Enum styles, MethodInfo * method));
DO_APP_FUNC(0x002158D0, int64_t, DateTimeOffset_ToFileTime, (DateTimeOffset__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00215910, int64_t, DateTimeOffset_ToUnixTimeSeconds, (DateTimeOffset__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00215960, int64_t, DateTimeOffset_ToUnixTimeMilliseconds, (DateTimeOffset__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002159B0, DateTimeOffset, DateTimeOffset_ToLocalTime, (DateTimeOffset__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00215A00, DateTimeOffset, DateTimeOffset_ToLocalTime_1, (DateTimeOffset__Boxed * __this, bool throwOnOverflow, MethodInfo * method));
DO_APP_FUNC(0x00215A60, String *, DateTimeOffset_ToString, (DateTimeOffset__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00215A70, String *, DateTimeOffset_ToString_1, (DateTimeOffset__Boxed * __this, String * format, MethodInfo * method));
DO_APP_FUNC(0x00215A80, String *, DateTimeOffset_ToString_2, (DateTimeOffset__Boxed * __this, IFormatProvider * formatProvider, MethodInfo * method));
DO_APP_FUNC(0x00215A90, String *, DateTimeOffset_ToString_3, (DateTimeOffset__Boxed * __this, String * format, IFormatProvider * formatProvider, MethodInfo * method));
DO_APP_FUNC(0x00215AA0, DateTimeOffset, DateTimeOffset_ToUniversalTime, (DateTimeOffset__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x028ABF50, bool, DateTimeOffset_TryParse, (String * input, IFormatProvider * formatProvider, DateTimeStyles__Enum styles, DateTimeOffset * result, MethodInfo * method));
DO_APP_FUNC(0x028AC220, bool, DateTimeOffset_TryParseExact, (String * input, String * format, IFormatProvider * formatProvider, DateTimeStyles__Enum styles, DateTimeOffset * result, MethodInfo * method));
DO_APP_FUNC(0x028AC500, bool, DateTimeOffset_TryParseExact_1, (String * input, String__Array * formats, IFormatProvider * formatProvider, DateTimeStyles__Enum styles, DateTimeOffset * result, MethodInfo * method));
DO_APP_FUNC(0x028AC7E0, int16_t, DateTimeOffset_ValidateOffset, (TimeSpan offset, MethodInfo * method));
DO_APP_FUNC(0x028AC930, DateTime, DateTimeOffset_ValidateDate, (DateTime dateTime, TimeSpan offset, MethodInfo * method));
DO_APP_FUNC(0x028ACA30, DateTimeStyles__Enum, DateTimeOffset_ValidateStyles, (DateTimeStyles__Enum style, String * parameterName, MethodInfo * method));
DO_APP_FUNC(0x028ACBA0, DateTimeOffset, DateTimeOffset_op_Implicit, (DateTime dateTime, MethodInfo * method));
DO_APP_FUNC(0x028ACBC0, bool, DateTimeOffset_op_Equality, (DateTimeOffset left, DateTimeOffset right, MethodInfo * method));
DO_APP_FUNC(0x028ACC90, bool, DateTimeOffset_op_Inequality, (DateTimeOffset left, DateTimeOffset right, MethodInfo * method));
DO_APP_FUNC(0x028ACD60, void, DateTimeOffset__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DBNull__ctor, (DBNull * __this, MethodInfo * method));
DO_APP_FUNC(0x028A0D90, void, DBNull__ctor_1, (DBNull * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x028A0E00, void, DBNull_GetObjectData, (DBNull * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x028A0E30, String *, DBNull_ToString, (DBNull * __this, MethodInfo * method));
DO_APP_FUNC(0x028A0EB0, String *, DBNull_ToString_1, (DBNull * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0043D9E0, TypeCode__Enum, DBNull_GetTypeCode, (DBNull * __this, MethodInfo * method));
DO_APP_FUNC(0x028A0F30, bool, DBNull_System_IConvertible_ToBoolean, (DBNull * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x028A0FA0, uint16_t, DBNull_System_IConvertible_ToChar, (DBNull * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x028A1010, int8_t, DBNull_System_IConvertible_ToSByte, (DBNull * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x028A1080, uint8_t, DBNull_System_IConvertible_ToByte, (DBNull * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x028A10F0, int16_t, DBNull_System_IConvertible_ToInt16, (DBNull * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x028A1160, uint16_t, DBNull_System_IConvertible_ToUInt16, (DBNull * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x028A11D0, int32_t, DBNull_System_IConvertible_ToInt32, (DBNull * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x028A1240, uint32_t, DBNull_System_IConvertible_ToUInt32, (DBNull * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x028A12B0, int64_t, DBNull_System_IConvertible_ToInt64, (DBNull * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x028A1320, uint64_t, DBNull_System_IConvertible_ToUInt64, (DBNull * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x028A1390, float, DBNull_System_IConvertible_ToSingle, (DBNull * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x028A1400, double, DBNull_System_IConvertible_ToDouble, (DBNull * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x028A1470, Decimal, DBNull_System_IConvertible_ToDecimal, (DBNull * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x028A14E0, DateTime, DBNull_System_IConvertible_ToDateTime, (DBNull * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x028A1550, Object *, DBNull_System_IConvertible_ToType, (DBNull * __this, Type * type, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x028A1610, void, DBNull__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0013D300, void, Decimal__ctor, (Decimal__Boxed * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0013D330, void, Decimal__ctor_1, (Decimal__Boxed * __this, uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x0013D340, void, Decimal__ctor_2, (Decimal__Boxed * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x0013D370, void, Decimal__ctor_3, (Decimal__Boxed * __this, uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x0013D390, void, Decimal__ctor_4, (Decimal__Boxed * __this, float value, MethodInfo * method));
DO_APP_FUNC(0x0013D3C0, void, Decimal__ctor_5, (Decimal__Boxed * __this, double value, MethodInfo * method));
DO_APP_FUNC(0x0013D3F0, void, Decimal__ctor_6, (Decimal__Boxed * __this, Int32__Array * bits, MethodInfo * method));
DO_APP_FUNC(0x0013D400, void, Decimal_SetBits, (Decimal__Boxed * __this, Int32__Array * bits, MethodInfo * method));
DO_APP_FUNC(0x0013D410, void, Decimal__ctor_7, (Decimal__Boxed * __this, int32_t lo, int32_t mid, int32_t hi, bool isNegative, uint8_t scale, MethodInfo * method));
DO_APP_FUNC(0x0013D430, void, Decimal_OnSerializing, (Decimal__Boxed * __this, StreamingContext ctx, MethodInfo * method));
DO_APP_FUNC(0x0013D450, void, Decimal_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization, (Decimal__Boxed * __this, Object * sender, MethodInfo * method));
DO_APP_FUNC(0x0013D460, void, Decimal__ctor_8, (Decimal__Boxed * __this, int32_t lo, int32_t mid, int32_t hi, int32_t flags, MethodInfo * method));
DO_APP_FUNC(0x01732A00, Decimal, Decimal_Abs, (Decimal d, MethodInfo * method));
DO_APP_FUNC(0x01732A50, Decimal, Decimal_Add, (Decimal d1, Decimal d2, MethodInfo * method));
DO_APP_FUNC(0x01732B10, void, Decimal_FCallAddSub, (Decimal * d1, Decimal * d2, uint8_t bSign, MethodInfo * method));
DO_APP_FUNC(0x01732B20, int32_t, Decimal_Compare, (Decimal d1, Decimal d2, MethodInfo * method));
DO_APP_FUNC(0x01732C70, int32_t, Decimal_FCallCompare, (Decimal * d1, Decimal * d2, MethodInfo * method));
DO_APP_FUNC(0x0013D470, int32_t, Decimal_CompareTo, (Decimal__Boxed * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0013D480, int32_t, Decimal_CompareTo_1, (Decimal__Boxed * __this, Decimal value, MethodInfo * method));
DO_APP_FUNC(0x01733040, Decimal, Decimal_Divide, (Decimal d1, Decimal d2, MethodInfo * method));
DO_APP_FUNC(0x01733100, void, Decimal_FCallDivide, (Decimal * d1, Decimal * d2, MethodInfo * method));
DO_APP_FUNC(0x0013D4A0, bool, Decimal_Equals, (Decimal__Boxed * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0013D4B0, bool, Decimal_Equals_1, (Decimal__Boxed * __this, Decimal value, MethodInfo * method));
DO_APP_FUNC(0x0013D4D0, int32_t, Decimal_GetHashCode, (Decimal__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0013D520, String *, Decimal_ToString, (Decimal__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0013D560, String *, Decimal_ToString_1, (Decimal__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0013D5A0, String *, Decimal_ToString_2, (Decimal__Boxed * __this, String * format, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01733420, Decimal, Decimal_Parse, (String * s, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01733470, Decimal, Decimal_Parse_1, (String * s, NumberStyles__Enum style, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x017334E0, bool, Decimal_TryParse, (String * s, NumberStyles__Enum style, IFormatProvider * provider, Decimal * result, MethodInfo * method));
DO_APP_FUNC(0x01733540, Int32__Array *, Decimal_GetBits, (Decimal d, MethodInfo * method));
DO_APP_FUNC(0x01733670, Decimal, Decimal_ToDecimal, (Byte__Array * buffer, MethodInfo * method));
DO_APP_FUNC(0x01733960, Decimal, Decimal_Max, (Decimal d1, Decimal d2, MethodInfo * method));
DO_APP_FUNC(0x01733A90, Decimal, Decimal_Min, (Decimal d1, Decimal d2, MethodInfo * method));
DO_APP_FUNC(0x01733BC0, Decimal, Decimal_Multiply, (Decimal d1, Decimal d2, MethodInfo * method));
DO_APP_FUNC(0x01733CC0, void, Decimal_FCallMultiply, (Decimal * d1, Decimal * d2, MethodInfo * method));
DO_APP_FUNC(0x01733D10, Decimal, Decimal_Negate, (Decimal d, MethodInfo * method));
DO_APP_FUNC(0x01733D70, Decimal, Decimal_Round, (Decimal d, int32_t decimals, MethodInfo * method));
DO_APP_FUNC(0x01733E70, void, Decimal_FCallRound, (Decimal * d, int32_t decimals, MethodInfo * method));
DO_APP_FUNC(0x01733EC0, uint8_t, Decimal_ToByte, (Decimal value, MethodInfo * method));
DO_APP_FUNC(0x01734010, int8_t, Decimal_ToSByte, (Decimal value, MethodInfo * method));
DO_APP_FUNC(0x01734160, int16_t, Decimal_ToInt16, (Decimal value, MethodInfo * method));
DO_APP_FUNC(0x017342B0, double, Decimal_ToDouble, (Decimal d, MethodInfo * method));
DO_APP_FUNC(0x01734300, int32_t, Decimal_FCallToInt32, (Decimal d, MethodInfo * method));
DO_APP_FUNC(0x01734380, int32_t, Decimal_ToInt32, (Decimal d, MethodInfo * method));
DO_APP_FUNC(0x017344D0, int64_t, Decimal_ToInt64, (Decimal d, MethodInfo * method));
DO_APP_FUNC(0x01734630, uint16_t, Decimal_ToUInt16, (Decimal value, MethodInfo * method));
DO_APP_FUNC(0x01734780, uint32_t, Decimal_ToUInt32, (Decimal d, MethodInfo * method));
DO_APP_FUNC(0x017348D0, uint64_t, Decimal_ToUInt64, (Decimal d, MethodInfo * method));
DO_APP_FUNC(0x01734A20, float, Decimal_ToSingle, (Decimal d, MethodInfo * method));
DO_APP_FUNC(0x01734A70, Decimal, Decimal_Truncate, (Decimal d, MethodInfo * method));
DO_APP_FUNC(0x01734B50, void, Decimal_FCallTruncate, (Decimal * d, MethodInfo * method));
DO_APP_FUNC(0x01734B90, Decimal, Decimal_op_Implicit, (uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x01734BB0, Decimal, Decimal_op_Implicit_1, (int8_t value, MethodInfo * method));
DO_APP_FUNC(0x01734BE0, Decimal, Decimal_op_Implicit_2, (int16_t value, MethodInfo * method));
DO_APP_FUNC(0x01734C10, Decimal, Decimal_op_Implicit_3, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x01734C10, Decimal, Decimal_op_Implicit_4, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x01734C30, Decimal, Decimal_op_Implicit_5, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01734C60, Decimal, Decimal_op_Implicit_6, (uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x01734C70, Decimal, Decimal_op_Implicit_7, (int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01734CB0, Decimal, Decimal_op_Implicit_8, (uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x01734CD0, Decimal, Decimal_op_Explicit, (float value, MethodInfo * method));
DO_APP_FUNC(0x01734D10, Decimal, Decimal_op_Explicit_1, (double value, MethodInfo * method));
DO_APP_FUNC(0x01734D50, int32_t, Decimal_op_Explicit_2, (Decimal value, MethodInfo * method));
DO_APP_FUNC(0x01734E00, int64_t, Decimal_op_Explicit_3, (Decimal value, MethodInfo * method));
DO_APP_FUNC(0x01734EB0, uint64_t, Decimal_op_Explicit_4, (Decimal value, MethodInfo * method));
DO_APP_FUNC(0x01734F60, float, Decimal_op_Explicit_5, (Decimal value, MethodInfo * method));
DO_APP_FUNC(0x01735040, double, Decimal_op_Explicit_6, (Decimal value, MethodInfo * method));
DO_APP_FUNC(0x01735110, Decimal, Decimal_op_UnaryNegation, (Decimal d, MethodInfo * method));
DO_APP_FUNC(0x01735200, Decimal, Decimal_op_Increment, (Decimal d, MethodInfo * method));
DO_APP_FUNC(0x01735360, Decimal, Decimal_op_Addition, (Decimal d1, Decimal d2, MethodInfo * method));
DO_APP_FUNC(0x01735420, Decimal, Decimal_op_Subtraction, (Decimal d1, Decimal d2, MethodInfo * method));
DO_APP_FUNC(0x017354E0, Decimal, Decimal_op_Multiply, (Decimal d1, Decimal d2, MethodInfo * method));
DO_APP_FUNC(0x017355E0, Decimal, Decimal_op_Division, (Decimal d1, Decimal d2, MethodInfo * method));
DO_APP_FUNC(0x017356A0, bool, Decimal_op_Equality, (Decimal d1, Decimal d2, MethodInfo * method));
DO_APP_FUNC(0x017357D0, bool, Decimal_op_Inequality, (Decimal d1, Decimal d2, MethodInfo * method));
DO_APP_FUNC(0x01735900, bool, Decimal_op_LessThan, (Decimal d1, Decimal d2, MethodInfo * method));
DO_APP_FUNC(0x01735A30, bool, Decimal_op_LessThanOrEqual, (Decimal d1, Decimal d2, MethodInfo * method));
DO_APP_FUNC(0x01735B60, bool, Decimal_op_GreaterThan, (Decimal d1, Decimal d2, MethodInfo * method));
DO_APP_FUNC(0x01735C90, bool, Decimal_op_GreaterThanOrEqual, (Decimal d1, Decimal d2, MethodInfo * method));
DO_APP_FUNC(0x0013D5E0, TypeCode__Enum, Decimal_GetTypeCode, (Decimal__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0013D5F0, bool, Decimal_System_IConvertible_ToBoolean, (Decimal__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0013D740, uint16_t, Decimal_System_IConvertible_ToChar, (Decimal__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0013D750, int8_t, Decimal_System_IConvertible_ToSByte, (Decimal__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0013D760, uint8_t, Decimal_System_IConvertible_ToByte, (Decimal__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0013D770, int16_t, Decimal_System_IConvertible_ToInt16, (Decimal__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0013D780, uint16_t, Decimal_System_IConvertible_ToUInt16, (Decimal__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0013D790, int32_t, Decimal_System_IConvertible_ToInt32, (Decimal__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0013D920, uint32_t, Decimal_System_IConvertible_ToUInt32, (Decimal__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0013D930, int64_t, Decimal_System_IConvertible_ToInt64, (Decimal__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0013D940, uint64_t, Decimal_System_IConvertible_ToUInt64, (Decimal__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0013D950, float, Decimal_System_IConvertible_ToSingle, (Decimal__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0013D960, double, Decimal_System_IConvertible_ToDouble, (Decimal__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0010A980, Decimal, Decimal_System_IConvertible_ToDecimal, (Decimal__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0013DA90, DateTime, Decimal_System_IConvertible_ToDateTime, (Decimal__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0013DAA0, Object *, Decimal_System_IConvertible_ToType, (Decimal__Boxed * __this, Type * type, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01736E80, void, Decimal__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01737180, MethodBase *, DefaultBinder_BindToMethod, (DefaultBinder * __this, BindingFlags__Enum bindingAttr, MethodBase__Array * match, Object__Array * * args, ParameterModifier__Array * modifiers, CultureInfo * cultureInfo, String__Array * names, Object * * state, MethodInfo * method));
DO_APP_FUNC(0x017398D0, FieldInfo_1 *, DefaultBinder_BindToField, (DefaultBinder * __this, BindingFlags__Enum bindingAttr, FieldInfo_1__Array * match, Object * value, CultureInfo * cultureInfo, MethodInfo * method));
DO_APP_FUNC(0x0173A060, MethodBase *, DefaultBinder_SelectMethod, (DefaultBinder * __this, BindingFlags__Enum bindingAttr, MethodBase__Array * match, Type__Array * types, ParameterModifier__Array * modifiers, MethodInfo * method));
DO_APP_FUNC(0x0173A890, PropertyInfo_1 *, DefaultBinder_SelectProperty, (DefaultBinder * __this, BindingFlags__Enum bindingAttr, PropertyInfo_1__Array * match, Type * returnType, Type__Array * indexes, ParameterModifier__Array * modifiers, MethodInfo * method));
DO_APP_FUNC(0x0173B440, Object *, DefaultBinder_ChangeType, (DefaultBinder * __this, Object * value, Type * type, CultureInfo * cultureInfo, MethodInfo * method));
DO_APP_FUNC(0x0173B4B0, void, DefaultBinder_ReorderArgumentArray, (DefaultBinder * __this, Object__Array * * args, Object * state, MethodInfo * method));
DO_APP_FUNC(0x0173B880, MethodBase *, DefaultBinder_ExactBinding, (MethodBase__Array * match, Type__Array * types, ParameterModifier__Array * modifiers, MethodInfo * method));
DO_APP_FUNC(0x0173BB60, PropertyInfo_1 *, DefaultBinder_ExactPropertyBinding, (PropertyInfo_1__Array * match, Type * returnType, Type__Array * types, ParameterModifier__Array * modifiers, MethodInfo * method));
DO_APP_FUNC(0x0173BEB0, int32_t, DefaultBinder_FindMostSpecific, (ParameterInfo_1__Array * p1, Int32__Array * paramOrder1, Type * paramArrayType1, ParameterInfo_1__Array * p2, Int32__Array * paramOrder2, Type * paramArrayType2, Type__Array * types, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x0173C3B0, int32_t, DefaultBinder_FindMostSpecificType, (Type * c1, Type * c2, Type * t, MethodInfo * method));
DO_APP_FUNC(0x0173C750, int32_t, DefaultBinder_FindMostSpecificMethod, (MethodBase * m1, Int32__Array * paramOrder1, Type * paramArrayType1, MethodBase * m2, Int32__Array * paramOrder2, Type * paramArrayType2, Type__Array * types, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x0173C880, int32_t, DefaultBinder_FindMostSpecificField, (FieldInfo_1 * cur1, FieldInfo_1 * cur2, MethodInfo * method));
DO_APP_FUNC(0x0173C880, int32_t, DefaultBinder_FindMostSpecificProperty, (PropertyInfo_1 * cur1, PropertyInfo_1 * cur2, MethodInfo * method));
DO_APP_FUNC(0x0173C980, bool, DefaultBinder_CompareMethodSigAndName, (MethodBase * m1, MethodBase * m2, MethodInfo * method));
DO_APP_FUNC(0x0173CB40, int32_t, DefaultBinder_GetHierarchyDepth, (Type * t, MethodInfo * method));
DO_APP_FUNC(0x0173CC10, MethodBase *, DefaultBinder_FindMostDerivedNewSlotMeth, (MethodBase__Array * match, int32_t cMatches, MethodInfo * method));
DO_APP_FUNC(0x0173CD70, void, DefaultBinder_ReorderParams, (Int32__Array * paramOrder, Object__Array * vars, MethodInfo * method));
DO_APP_FUNC(0x0173CF70, bool, DefaultBinder_CreateParamOrder, (Int32__Array * paramOrder, ParameterInfo_1__Array * pars, String__Array * names, MethodInfo * method));
DO_APP_FUNC(0x0173D260, bool, DefaultBinder_CanConvertPrimitive, (RuntimeType * source, RuntimeType * target, MethodInfo * method));
DO_APP_FUNC(0x0173D4E0, bool, DefaultBinder_CanConvertPrimitiveObjectToType, (Object * source, RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DefaultBinder__ctor, (DefaultBinder * __this, MethodInfo * method));
DO_APP_FUNC(0x0173D7A0, void, DefaultBinder_BinderState__ctor, (DefaultBinder_BinderState * __this, Int32__Array * argsMap, int32_t originalSize, bool isParamArray, MethodInfo * method));
DO_APP_FUNC(0x0173D5C0, void, DefaultBinder_c__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DefaultBinder_c__ctor, (DefaultBinder_c * __this, MethodInfo * method));
DO_APP_FUNC(0x0173D700, bool, DefaultBinder_c__SelectProperty_b__3_0, (DefaultBinder_c * __this, Type * t, MethodInfo * method));
DO_APP_FUNC(0x01A0F9F0, void, DivideByZeroException__ctor, (DivideByZeroException * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0FA80, void, DivideByZeroException__ctor_1, (DivideByZeroException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, DivideByZeroException__ctor_2, (DivideByZeroException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01A0FAC0, void, DllNotFoundException__ctor, (DllNotFoundException * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0FB50, void, DllNotFoundException__ctor_1, (DllNotFoundException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FB70, void, DllNotFoundException__ctor_2, (DllNotFoundException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01A0FB90, bool, Double_IsInfinity, (double d, MethodInfo * method));
DO_APP_FUNC(0x01A0FBC0, bool, Double_IsPositiveInfinity, (double d, MethodInfo * method));
DO_APP_FUNC(0x01A0FBE0, bool, Double_IsNegativeInfinity, (double d, MethodInfo * method));
DO_APP_FUNC(0x01A0FC00, bool, Double_IsNegative, (double d, MethodInfo * method));
DO_APP_FUNC(0x01A0FC20, bool, Double_IsNaN, (double d, MethodInfo * method));
DO_APP_FUNC(0x01A0FC50, bool, Double_IsFinite, (double d, MethodInfo * method));
DO_APP_FUNC(0x00154D20, int32_t, Double_CompareTo, (Double__Boxed * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x00154D30, int32_t, Double_CompareTo_1, (Double__Boxed * __this, double value, MethodInfo * method));
DO_APP_FUNC(0x00154D40, bool, Double_Equals, (Double__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x00154D50, bool, Double_Equals_1, (Double__Boxed * __this, double obj, MethodInfo * method));
DO_APP_FUNC(0x00154D60, int32_t, Double_GetHashCode, (Double__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00154D70, String *, Double_ToString, (Double__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00154DA0, String *, Double_ToString_1, (Double__Boxed * __this, String * format, MethodInfo * method));
DO_APP_FUNC(0x00154DE0, String *, Double_ToString_2, (Double__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00154E20, String *, Double_ToString_3, (Double__Boxed * __this, String * format, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01A102D0, double, Double_Parse, (String * s, MethodInfo * method));
DO_APP_FUNC(0x01A10390, double, Double_Parse_1, (String * s, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01A10450, double, Double_Parse_2, (String * s, NumberStyles__Enum style, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01A10520, double, Double_Parse_3, (String * s, NumberStyles__Enum style, NumberFormatInfo * info, MethodInfo * method));
DO_APP_FUNC(0x01A10530, bool, Double_TryParse, (String * s, double * result, MethodInfo * method));
DO_APP_FUNC(0x01A10600, bool, Double_TryParse_1, (String * s, NumberStyles__Enum style, IFormatProvider * provider, double * result, MethodInfo * method));
DO_APP_FUNC(0x01A106F0, bool, Double_TryParse_2, (String * s, NumberStyles__Enum style, NumberFormatInfo * info, double * result, MethodInfo * method));
DO_APP_FUNC(0x00154E60, TypeCode__Enum, Double_GetTypeCode, (Double__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00154E70, bool, Double_System_IConvertible_ToBoolean, (Double__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00154F30, uint16_t, Double_System_IConvertible_ToChar, (Double__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00154F40, int8_t, Double_System_IConvertible_ToSByte, (Double__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00154FF0, uint8_t, Double_System_IConvertible_ToByte, (Double__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001550A0, int16_t, Double_System_IConvertible_ToInt16, (Double__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00155150, uint16_t, Double_System_IConvertible_ToUInt16, (Double__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00155200, int32_t, Double_System_IConvertible_ToInt32, (Double__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001552B0, uint32_t, Double_System_IConvertible_ToUInt32, (Double__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00155360, int64_t, Double_System_IConvertible_ToInt64, (Double__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00155410, uint64_t, Double_System_IConvertible_ToUInt64, (Double__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001554C0, float, Double_System_IConvertible_ToSingle, (Double__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00155570, double, Double_System_IConvertible_ToDouble, (Double__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00155580, Decimal, Double_System_IConvertible_ToDecimal, (Double__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001556E0, DateTime, Double_System_IConvertible_ToDateTime, (Double__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001556F0, Object *, Double_System_IConvertible_ToType, (Double__Boxed * __this, Type * type, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01A10980, void, Double__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Empty__ctor, (Empty * __this, MethodInfo * method));
DO_APP_FUNC(0x01A10A30, String *, Empty_ToString, (Empty * __this, MethodInfo * method));
DO_APP_FUNC(0x01A10AB0, void, Empty_GetObjectData, (Empty * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01A10B80, void, Empty__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01A10CC0, void, EntryPointNotFoundException__ctor, (EntryPointNotFoundException * __this, MethodInfo * method));
DO_APP_FUNC(0x01A10D50, void, EntryPointNotFoundException__ctor_1, (EntryPointNotFoundException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FB70, void, EntryPointNotFoundException__ctor_2, (EntryPointNotFoundException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01A10D70, Enum_ValuesAndNames *, Enum_GetCachedValuesAndNames, (RuntimeType * enumType, bool getNames, MethodInfo * method));
DO_APP_FUNC(0x01A11140, String *, Enum_InternalFormattedHexString, (Object * value, MethodInfo * method));
DO_APP_FUNC(0x01A11560, String *, Enum_InternalFormat, (RuntimeType * eT, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01A116D0, String *, Enum_InternalFlagsFormat, (RuntimeType * eT, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01A11A70, uint64_t, Enum_ToUInt64, (Object * value, MethodInfo * method));
DO_APP_FUNC(0x01A11C50, int32_t, Enum_InternalCompareTo, (Object * o1, Object * o2, MethodInfo * method));
DO_APP_FUNC(0x01A11D70, RuntimeType *, Enum_InternalGetUnderlyingType, (RuntimeType * enumType, MethodInfo * method));
DO_APP_FUNC(0x01A11DC0, bool, Enum_GetEnumValuesAndNames, (RuntimeType * enumType, UInt64__Array * * values, String__Array * * names, MethodInfo * method));
DO_APP_FUNC(0x01A11E00, Object *, Enum_InternalBoxEnum, (RuntimeType * enumType, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01A11E30, Object *, Enum_Parse, (Type * enumType, String * value, MethodInfo * method));
DO_APP_FUNC(0x01A11EE0, Object *, Enum_Parse_1, (Type * enumType, String * value, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x01A12070, bool, Enum_TryParseEnum, (Type * enumType, String * value, bool ignoreCase, Enum_EnumResult * parseResult, MethodInfo * method));
DO_APP_FUNC(0x01A12800, Type *, Enum_GetUnderlyingType, (Type * enumType, MethodInfo * method));
DO_APP_FUNC(0x01A128E0, Array *, Enum_GetValues, (Type * enumType, MethodInfo * method));
DO_APP_FUNC(0x01A129C0, UInt64__Array *, Enum_InternalGetValues, (RuntimeType * enumType, MethodInfo * method));
DO_APP_FUNC(0x01A12A70, String *, Enum_GetName, (Type * enumType, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01A12B60, String__Array *, Enum_GetNames, (Type * enumType, MethodInfo * method));
DO_APP_FUNC(0x01A12C40, String__Array *, Enum_InternalGetNames, (RuntimeType * enumType, MethodInfo * method));
DO_APP_FUNC(0x01A12CF0, Object *, Enum_ToObject, (Type * enumType, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01A13280, bool, Enum_IsDefined, (Type * enumType, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01A13370, String *, Enum_Format, (Type * enumType, Object * value, String * format, MethodInfo * method));
DO_APP_FUNC(0x01A13AD0, Object *, Enum_get_value, (Enum__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01A13AD0, Object *, Enum_GetValue, (Enum__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01A13C10, bool, Enum_InternalHasFlag, (Enum__Boxed * __this, Enum flags, MethodInfo * method));
DO_APP_FUNC(0x01A13CC0, int32_t, Enum_get_hashcode, (Enum__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01A13D40, bool, Enum_Equals, (Enum__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01A13CC0, int32_t, Enum_GetHashCode, (Enum__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01A13D50, String *, Enum_ToString, (Enum__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01A13F60, String *, Enum_ToString_1, (Enum__Boxed * __this, String * format, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01A13F70, int32_t, Enum_CompareTo, (Enum__Boxed * __this, Object * target, MethodInfo * method));
DO_APP_FUNC(0x01A14270, String *, Enum_ToString_2, (Enum__Boxed * __this, String * format, MethodInfo * method));
DO_APP_FUNC(0x01742A00, String *, Enum_ToString_3, (Enum__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01A14AC0, bool, Enum_HasFlag, (Enum__Boxed * __this, Enum flag, MethodInfo * method));
DO_APP_FUNC(0x01A14D00, TypeCode__Enum, Enum_GetTypeCode, (Enum__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01A150C0, bool, Enum_System_IConvertible_ToBoolean, (Enum__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01A152B0, uint16_t, Enum_System_IConvertible_ToChar, (Enum__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01A154A0, int8_t, Enum_System_IConvertible_ToSByte, (Enum__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01A15690, uint8_t, Enum_System_IConvertible_ToByte, (Enum__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01A15880, int16_t, Enum_System_IConvertible_ToInt16, (Enum__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01A15A70, uint16_t, Enum_System_IConvertible_ToUInt16, (Enum__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01A15C60, int32_t, Enum_System_IConvertible_ToInt32, (Enum__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01A15E50, uint32_t, Enum_System_IConvertible_ToUInt32, (Enum__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01A16040, int64_t, Enum_System_IConvertible_ToInt64, (Enum__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01A16230, uint64_t, Enum_System_IConvertible_ToUInt64, (Enum__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01A16420, float, Enum_System_IConvertible_ToSingle, (Enum__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01A16610, double, Enum_System_IConvertible_ToDouble, (Enum__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01A16800, Decimal, Enum_System_IConvertible_ToDecimal, (Enum__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01A16A10, DateTime, Enum_System_IConvertible_ToDateTime, (Enum__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01A16AE0, Object *, Enum_System_IConvertible_ToType, (Enum__Boxed * __this, Type * type, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01A16BA0, Object *, Enum_ToObject_1, (Type * enumType, int8_t value, MethodInfo * method));
DO_APP_FUNC(0x01A16DC0, Object *, Enum_ToObject_2, (Type * enumType, int16_t value, MethodInfo * method));
DO_APP_FUNC(0x01A16FE0, Object *, Enum_ToObject_3, (Type * enumType, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01A17200, Object *, Enum_ToObject_4, (Type * enumType, uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x01A17420, Object *, Enum_ToObject_5, (Type * enumType, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x01A17640, Object *, Enum_ToObject_6, (Type * enumType, uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x01A17860, Object *, Enum_ToObject_7, (Type * enumType, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01A17A80, Object *, Enum_ToObject_8, (Type * enumType, uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x01A17CA0, Object *, Enum_ToObject_9, (Type * enumType, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x01A17EC0, Object *, Enum_ToObject_10, (Type * enumType, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Enum__ctor, (Enum__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01A180E0, void, Enum__cctor, (MethodInfo * method));
DO_APP_FUNC(0x001557F0, void, Enum_EnumResult_Init, (Enum_EnumResult__Boxed * __this, bool canMethodThrow, MethodInfo * method));
DO_APP_FUNC(0x00155800, void, Enum_EnumResult_SetFailure, (Enum_EnumResult__Boxed * __this, Exception * unhandledException, MethodInfo * method));
DO_APP_FUNC(0x00155810, void, Enum_EnumResult_SetFailure_1, (Enum_EnumResult__Boxed * __this, Enum_ParseFailureKind__Enum failure, String * failureParameter, MethodInfo * method));
DO_APP_FUNC(0x00155820, void, Enum_EnumResult_SetFailure_2, (Enum_EnumResult__Boxed * __this, Enum_ParseFailureKind__Enum failure, String * failureMessageID, Object * failureMessageFormatArgument, MethodInfo * method));
DO_APP_FUNC(0x00155830, Exception *, Enum_EnumResult_GetEnumParseException, (Enum_EnumResult__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, Enum_ValuesAndNames__ctor, (Enum_ValuesAndNames * __this, UInt64__Array * values, String__Array * names, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, EventArgs__ctor, (EventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1AE80, void, EventArgs__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00611810, void, EventHandler__ctor, (EventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x015FE410, void, EventHandler_Invoke, (EventHandler * __this, Object * sender, EventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, EventHandler_BeginInvoke, (EventHandler * __this, Object * sender, EventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, EventHandler_EndInvoke, (EventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01A1AFC0, void, Exception_Init, (Exception * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1B110, void, Exception__ctor, (Exception * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1B120, void, Exception__ctor_1, (Exception * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A1B150, void, Exception__ctor_2, (Exception * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x01A1B190, void, Exception__ctor_3, (Exception * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01A1B4C0, String *, Exception_get_Message, (Exception * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1B600, IDictionary *, Exception_get_Data, (Exception * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Exception_IsImmutableAgileException, (Exception * e, MethodInfo * method));
DO_APP_FUNC(0x01A1B770, String *, Exception_GetClassName, (Exception * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, Exception *, Exception_get_InnerException, (Exception * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1B7C0, String *, Exception_get_StackTrace, (Exception * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1B800, String *, Exception_GetStackTrace, (Exception * __this, bool needFileInfo, MethodInfo * method));
DO_APP_FUNC(0x002FD760, void, Exception_SetErrorCode, (Exception * __this, int32_t hr, MethodInfo * method));
DO_APP_FUNC(0x01A1B850, String *, Exception_get_Source, (Exception * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1BAA0, String *, Exception_ToString, (Exception * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1BAB0, String *, Exception_ToString_1, (Exception * __this, bool needFileLineInfo, bool needMessage, MethodInfo * method));
DO_APP_FUNC(0x01A1BED0, void, Exception_GetObjectData, (Exception * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01A1C2A0, void, Exception_OnDeserialized, (Exception * __this, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x00502220, String *, Exception_StripFileInfo, (Exception * __this, String * stackTrace, bool isRemoteStackTrace, MethodInfo * method));
DO_APP_FUNC(0x01A1C410, void, Exception_RestoreExceptionDispatchInfo, (Exception * __this, ExceptionDispatchInfo * exceptionDispatchInfo, MethodInfo * method));
DO_APP_FUNC(0x002FD750, int32_t, Exception_get_HResult, (Exception * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD760, void, Exception_set_HResult, (Exception * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01A1C4F0, Type *, Exception_GetType, (Exception * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1C500, String *, Exception_GetMessageFromNativeResources, (Exception_ExceptionMessageKind__Enum kind, MethodInfo * method));
DO_APP_FUNC(0x01A1C590, Exception *, Exception_FixRemotingException, (Exception * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1C6D0, void, Exception__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01A1C810, void, ExecutionEngineException__ctor, (ExecutionEngineException * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1C8A0, void, ExecutionEngineException__ctor_1, (ExecutionEngineException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A1C8C0, void, ExecutionEngineException__ctor_2, (ExecutionEngineException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, ExecutionEngineException__ctor_3, (ExecutionEngineException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01A1C8E0, void, FieldAccessException__ctor, (FieldAccessException * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1C970, void, FieldAccessException__ctor_1, (FieldAccessException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, FieldAccessException__ctor_2, (FieldAccessException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, FlagsAttribute__ctor, (FlagsAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1C990, void, FormatException__ctor, (FormatException * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1CA20, void, FormatException__ctor_1, (FormatException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A1CA40, void, FormatException__ctor_2, (FormatException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, FormatException__ctor_3, (FormatException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01A1CB50, int32_t, GC_1_GetCollectionCount, (int32_t generation, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, int32_t, GC_1_GetMaxGeneration, (MethodInfo * method));
DO_APP_FUNC(0x01A1CB60, void, GC_1_InternalCollect, (int32_t generation, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, GC_1_register_ephemeron_array, (Ephemeron__Array * array, MethodInfo * method));
DO_APP_FUNC(0x01A1CB80, Object *, GC_1_get_ephemeron_tombstone, (MethodInfo * method));
DO_APP_FUNC(0x01A1CC50, void, GC_1_Collect, (int32_t generation, MethodInfo * method));
DO_APP_FUNC(0x01A1CCF0, void, GC_1_Collect_1, (MethodInfo * method));
DO_APP_FUNC(0x01A1CDA0, void, GC_1_Collect_2, (int32_t generation, GCCollectionMode__Enum mode, MethodInfo * method));
DO_APP_FUNC(0x01A1CE50, void, GC_1_Collect_3, (int32_t generation, GCCollectionMode__Enum mode, bool blocking, MethodInfo * method));
DO_APP_FUNC(0x01A1D010, void, GC_1_Collect_4, (int32_t generation, GCCollectionMode__Enum mode, bool blocking, bool compacting, MethodInfo * method));
DO_APP_FUNC(0x01A1D150, int32_t, GC_1_CollectionCount, (int32_t generation, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, GC_1_KeepAlive, (Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01A1D240, int32_t, GC_1_get_MaxGeneration, (MethodInfo * method));
DO_APP_FUNC(0x01A1D2D0, void, GC_1__SuppressFinalize, (Object * o, MethodInfo * method));
DO_APP_FUNC(0x01A1D3C0, void, GC_1_SuppressFinalize, (Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01A1D540, void, GC_1__ReRegisterForFinalize, (Object * o, MethodInfo * method));
DO_APP_FUNC(0x01A1D640, void, GC_1_ReRegisterForFinalize, (Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01A1D7C0, int64_t, GC_1_GetTotalMemory, (bool forceFullCollection, MethodInfo * method));
DO_APP_FUNC(0x01A1D7F0, void, GC_1__cctor, (MethodInfo * method));
DO_APP_FUNC(0x028A6D20, void, DateTimeFormat_FormatDigits, (StringBuilder * outputBuffer, int32_t value, int32_t len, MethodInfo * method));
DO_APP_FUNC(0x028A6DF0, void, DateTimeFormat_FormatDigits_1, (StringBuilder * outputBuffer, int32_t value, int32_t len, bool overrideLengthLimit, MethodInfo * method));
DO_APP_FUNC(0x028A6EF0, void, DateTimeFormat_HebrewFormatDigits, (StringBuilder * outputBuffer, int32_t digits, MethodInfo * method));
DO_APP_FUNC(0x028A6FB0, int32_t, DateTimeFormat_ParseRepeatPattern, (String * format, int32_t pos, uint16_t patternChar, MethodInfo * method));
DO_APP_FUNC(0x028A7030, String *, DateTimeFormat_FormatDayOfWeek, (int32_t dayOfWeek, int32_t repeat, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x028A7080, String *, DateTimeFormat_FormatMonth, (int32_t month, int32_t repeatCount, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x028A70D0, String *, DateTimeFormat_FormatHebrewMonthName, (DateTime time, int32_t month, int32_t repeatCount, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x028A71A0, int32_t, DateTimeFormat_ParseQuoteString, (String * format, int32_t pos, StringBuilder * result, MethodInfo * method));
DO_APP_FUNC(0x028A73B0, int32_t, DateTimeFormat_ParseNextChar, (String * format, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x028A73F0, bool, DateTimeFormat_IsUseGenitiveForm, (String * format, int32_t index, int32_t tokenLen, uint16_t patternToMatch, MethodInfo * method));
DO_APP_FUNC(0x028A7510, String *, DateTimeFormat_FormatCustomized, (DateTime dateTime, String * format, DateTimeFormatInfo * dtfi, TimeSpan offset, MethodInfo * method));
DO_APP_FUNC(0x028A8890, void, DateTimeFormat_FormatCustomizedTimeZone, (DateTime dateTime, TimeSpan offset, String * format, int32_t tokenLen, bool timeOnly, StringBuilder * result, MethodInfo * method));
DO_APP_FUNC(0x028A8D20, void, DateTimeFormat_FormatCustomizedRoundripTimeZone, (DateTime dateTime, TimeSpan offset, StringBuilder * result, MethodInfo * method));
DO_APP_FUNC(0x028A9060, String *, DateTimeFormat_GetRealFormat, (String * format, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x028A9700, String *, DateTimeFormat_ExpandPredefinedFormat, (String * format, DateTime * dateTime, DateTimeFormatInfo * * dtfi, TimeSpan * offset, MethodInfo * method));
DO_APP_FUNC(0x028A9B30, String *, DateTimeFormat_Format, (DateTime dateTime, String * format, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x028A9C10, String *, DateTimeFormat_Format_1, (DateTime dateTime, String * format, DateTimeFormatInfo * dtfi, TimeSpan offset, MethodInfo * method));
DO_APP_FUNC(0x028A9EE0, String__Array *, DateTimeFormat_GetAllDateTimes, (DateTime dateTime, uint16_t format, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x028AA370, String__Array *, DateTimeFormat_GetAllDateTimes_1, (DateTime dateTime, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DateTimeFormat_InvalidFormatForLocal, (String * format, DateTime dateTime, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DateTimeFormat_InvalidFormatForUtc, (String * format, DateTime dateTime, MethodInfo * method));
DO_APP_FUNC(0x028AA650, void, DateTimeFormat__cctor, (MethodInfo * method));
DO_APP_FUNC(0x028ACE80, DateTime, DateTimeParse_ParseExact, (String * s, String * format, DateTimeFormatInfo * dtfi, DateTimeStyles__Enum style, MethodInfo * method));
DO_APP_FUNC(0x028ACFF0, bool, DateTimeParse_TryParseExact, (String * s, String * format, DateTimeFormatInfo * dtfi, DateTimeStyles__Enum style, DateTime * result, MethodInfo * method));
DO_APP_FUNC(0x028AD160, bool, DateTimeParse_TryParseExact_1, (String * s, String * format, DateTimeFormatInfo * dtfi, DateTimeStyles__Enum style, DateTime * result, TimeSpan * offset, MethodInfo * method));
DO_APP_FUNC(0x028AD330, bool, DateTimeParse_TryParseExact_2, (String * s, String * format, DateTimeFormatInfo * dtfi, DateTimeStyles__Enum style, DateTimeResult * result, MethodInfo * method));
DO_APP_FUNC(0x028AD490, DateTime, DateTimeParse_ParseExactMultiple, (String * s, String__Array * formats, DateTimeFormatInfo * dtfi, DateTimeStyles__Enum style, MethodInfo * method));
DO_APP_FUNC(0x028AD600, DateTime, DateTimeParse_ParseExactMultiple_1, (String * s, String__Array * formats, DateTimeFormatInfo * dtfi, DateTimeStyles__Enum style, TimeSpan * offset, MethodInfo * method));
DO_APP_FUNC(0x028AD7B0, bool, DateTimeParse_TryParseExactMultiple, (String * s, String__Array * formats, DateTimeFormatInfo * dtfi, DateTimeStyles__Enum style, DateTime * result, TimeSpan * offset, MethodInfo * method));
DO_APP_FUNC(0x028AD980, bool, DateTimeParse_TryParseExactMultiple_1, (String * s, String__Array * formats, DateTimeFormatInfo * dtfi, DateTimeStyles__Enum style, DateTime * result, MethodInfo * method));
DO_APP_FUNC(0x028ADAF0, bool, DateTimeParse_TryParseExactMultiple_2, (String * s, String__Array * formats, DateTimeFormatInfo * dtfi, DateTimeStyles__Enum style, DateTimeResult * result, MethodInfo * method));
DO_APP_FUNC(0x028ADD60, bool, DateTimeParse_MatchWord, (_DTString * str, String * target, MethodInfo * method));
DO_APP_FUNC(0x028ADF00, bool, DateTimeParse_GetTimeZoneName, (_DTString * str, MethodInfo * method));
DO_APP_FUNC(0x028ADFF0, bool, DateTimeParse_IsDigit, (uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x028AE010, bool, DateTimeParse_ParseFraction, (_DTString * str, double * result, MethodInfo * method));
DO_APP_FUNC(0x028AE150, bool, DateTimeParse_ParseTimeZone, (_DTString * str, TimeSpan * result, MethodInfo * method));
DO_APP_FUNC(0x028AE4E0, bool, DateTimeParse_HandleTimeZone, (_DTString * str, DateTimeResult * result, MethodInfo * method));
DO_APP_FUNC(0x028AE680, bool, DateTimeParse_Lex, (DateTimeParse_DS__Enum dps, _DTString * str, DateTimeToken * dtok, DateTimeRawInfo * raw, DateTimeResult * result, DateTimeFormatInfo * * dtfi, DateTimeStyles__Enum styles, MethodInfo * method));
DO_APP_FUNC(0x028AF660, bool, DateTimeParse_VerifyValidPunctuation, (_DTString * str, MethodInfo * method));
DO_APP_FUNC(0x028AF840, bool, DateTimeParse_GetYearMonthDayOrder, (String * datePattern, DateTimeFormatInfo * dtfi, int32_t * order, MethodInfo * method));
DO_APP_FUNC(0x028AFA70, bool, DateTimeParse_GetYearMonthOrder, (String * pattern, DateTimeFormatInfo * dtfi, int32_t * order, MethodInfo * method));
DO_APP_FUNC(0x028AFBC0, bool, DateTimeParse_GetMonthDayOrder, (String * pattern, DateTimeFormatInfo * dtfi, int32_t * order, MethodInfo * method));
DO_APP_FUNC(0x028AFD50, bool, DateTimeParse_TryAdjustYear, (DateTimeResult * result, int32_t year, int32_t * adjustedYear, MethodInfo * method));
DO_APP_FUNC(0x028AFE40, bool, DateTimeParse_SetDateYMD, (DateTimeResult * result, int32_t year, int32_t month, int32_t day, MethodInfo * method));
DO_APP_FUNC(0x028AFEC0, bool, DateTimeParse_SetDateMDY, (DateTimeResult * result, int32_t month, int32_t day, int32_t year, MethodInfo * method));
DO_APP_FUNC(0x028AFFA0, bool, DateTimeParse_SetDateDMY, (DateTimeResult * result, int32_t day, int32_t month, int32_t year, MethodInfo * method));
DO_APP_FUNC(0x028B0080, bool, DateTimeParse_SetDateYDM, (DateTimeResult * result, int32_t year, int32_t day, int32_t month, MethodInfo * method));
DO_APP_FUNC(0x028B0160, void, DateTimeParse_GetDefaultYear, (DateTimeResult * result, DateTimeStyles__Enum * styles, MethodInfo * method));
DO_APP_FUNC(0x028B0240, bool, DateTimeParse_GetDayOfNN, (DateTimeResult * result, DateTimeStyles__Enum * styles, DateTimeRawInfo * raw, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x028B0400, bool, DateTimeParse_GetDayOfNNN, (DateTimeResult * result, DateTimeRawInfo * raw, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x028B08F0, bool, DateTimeParse_GetDayOfMN, (DateTimeResult * result, DateTimeStyles__Enum * styles, DateTimeRawInfo * raw, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x028B0B70, bool, DateTimeParse_GetHebrewDayOfNM, (DateTimeResult * result, DateTimeRawInfo * raw, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x028B0D00, bool, DateTimeParse_GetDayOfNM, (DateTimeResult * result, DateTimeStyles__Enum * styles, DateTimeRawInfo * raw, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x028B0F80, bool, DateTimeParse_GetDayOfMNN, (DateTimeResult * result, DateTimeRawInfo * raw, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x028B1450, bool, DateTimeParse_GetDayOfYNN, (DateTimeResult * result, DateTimeRawInfo * raw, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x028B1630, bool, DateTimeParse_GetDayOfNNY, (DateTimeResult * result, DateTimeRawInfo * raw, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x028B1860, bool, DateTimeParse_GetDayOfYMN, (DateTimeResult * result, DateTimeRawInfo * raw, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x028B1970, bool, DateTimeParse_GetDayOfYN, (DateTimeResult * result, DateTimeRawInfo * raw, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x028B1A70, bool, DateTimeParse_GetDayOfYM, (DateTimeResult * result, DateTimeRawInfo * raw, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x028B1B70, void, DateTimeParse_AdjustTimeMark, (DateTimeFormatInfo * dtfi, DateTimeRawInfo * raw, MethodInfo * method));
DO_APP_FUNC(0x028B1BF0, bool, DateTimeParse_AdjustHour, (int32_t * hour, DateTimeParse_TM__Enum timeMark, MethodInfo * method));
DO_APP_FUNC(0x028B1C30, bool, DateTimeParse_GetTimeOfN, (DateTimeFormatInfo * dtfi, DateTimeResult * result, DateTimeRawInfo * raw, MethodInfo * method));
DO_APP_FUNC(0x028B1D00, bool, DateTimeParse_GetTimeOfNN, (DateTimeFormatInfo * dtfi, DateTimeResult * result, DateTimeRawInfo * raw, MethodInfo * method));
DO_APP_FUNC(0x028B1DD0, bool, DateTimeParse_GetTimeOfNNN, (DateTimeFormatInfo * dtfi, DateTimeResult * result, DateTimeRawInfo * raw, MethodInfo * method));
DO_APP_FUNC(0x028B1EB0, bool, DateTimeParse_GetDateOfDSN, (DateTimeResult * result, DateTimeRawInfo * raw, MethodInfo * method));
DO_APP_FUNC(0x028B1F80, bool, DateTimeParse_GetDateOfNDS, (DateTimeResult * result, DateTimeRawInfo * raw, MethodInfo * method));
DO_APP_FUNC(0x028B2080, bool, DateTimeParse_GetDateOfNNDS, (DateTimeResult * result, DateTimeRawInfo * raw, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x028B2320, bool, DateTimeParse_ProcessDateTimeSuffix, (DateTimeResult * result, DateTimeRawInfo * raw, DateTimeToken * dtok, MethodInfo * method));
DO_APP_FUNC(0x028B2400, bool, DateTimeParse_ProcessHebrewTerminalState, (DateTimeParse_DS__Enum dps, DateTimeResult * result, DateTimeStyles__Enum * styles, DateTimeRawInfo * raw, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x028B28F0, bool, DateTimeParse_ProcessTerminaltState, (DateTimeParse_DS__Enum dps, DateTimeResult * result, DateTimeStyles__Enum * styles, DateTimeRawInfo * raw, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x028B2F50, DateTime, DateTimeParse_Parse, (String * s, DateTimeFormatInfo * dtfi, DateTimeStyles__Enum styles, MethodInfo * method));
DO_APP_FUNC(0x028B30A0, DateTime, DateTimeParse_Parse_1, (String * s, DateTimeFormatInfo * dtfi, DateTimeStyles__Enum styles, TimeSpan * offset, MethodInfo * method));
DO_APP_FUNC(0x028B3210, bool, DateTimeParse_TryParse, (String * s, DateTimeFormatInfo * dtfi, DateTimeStyles__Enum styles, DateTime * result, MethodInfo * method));
DO_APP_FUNC(0x028B3370, bool, DateTimeParse_TryParse_1, (String * s, DateTimeFormatInfo * dtfi, DateTimeStyles__Enum styles, DateTime * result, TimeSpan * offset, MethodInfo * method));
DO_APP_FUNC(0x028B3520, bool, DateTimeParse_TryParse_2, (String * s, DateTimeFormatInfo * dtfi, DateTimeStyles__Enum styles, DateTimeResult * result, MethodInfo * method));
DO_APP_FUNC(0x028B3EA0, bool, DateTimeParse_DetermineTimeZoneAdjustments, (DateTimeResult * result, DateTimeStyles__Enum styles, bool bTimeOnly, MethodInfo * method));
DO_APP_FUNC(0x028B4100, bool, DateTimeParse_DateTimeOffsetTimeZonePostProcessing, (DateTimeResult * result, DateTimeStyles__Enum styles, MethodInfo * method));
DO_APP_FUNC(0x028B4350, bool, DateTimeParse_AdjustTimeZoneToUniversal, (DateTimeResult * result, MethodInfo * method));
DO_APP_FUNC(0x028B4450, bool, DateTimeParse_AdjustTimeZoneToLocal, (DateTimeResult * result, bool bTimeOnly, MethodInfo * method));
DO_APP_FUNC(0x028B46E0, bool, DateTimeParse_ParseISO8601, (DateTimeRawInfo * raw, _DTString * str, DateTimeStyles__Enum styles, DateTimeResult * result, MethodInfo * method));
DO_APP_FUNC(0x028B4D70, bool, DateTimeParse_MatchHebrewDigits, (_DTString * str, int32_t digitLen, int32_t * number, MethodInfo * method));
DO_APP_FUNC(0x028B4EA0, bool, DateTimeParse_ParseDigits, (_DTString * str, int32_t digitLen, int32_t * result, MethodInfo * method));
DO_APP_FUNC(0x028B4F90, bool, DateTimeParse_ParseDigits_1, (_DTString * str, int32_t minDigitLen, int32_t maxDigitLen, int32_t * result, MethodInfo * method));
DO_APP_FUNC(0x028B5040, bool, DateTimeParse_ParseFractionExact, (_DTString * str, int32_t maxDigitLen, double * result, MethodInfo * method));
DO_APP_FUNC(0x028B51E0, bool, DateTimeParse_ParseSign, (_DTString * str, bool * result, MethodInfo * method));
DO_APP_FUNC(0x028B5270, bool, DateTimeParse_ParseTimeZoneOffset, (_DTString * str, int32_t len, TimeSpan * result, MethodInfo * method));
DO_APP_FUNC(0x028B56E0, bool, DateTimeParse_MatchAbbreviatedMonthName, (_DTString * str, DateTimeFormatInfo * dtfi, int32_t * result, MethodInfo * method));
DO_APP_FUNC(0x028B5950, bool, DateTimeParse_MatchMonthName, (_DTString * str, DateTimeFormatInfo * dtfi, int32_t * result, MethodInfo * method));
DO_APP_FUNC(0x028B5C60, bool, DateTimeParse_MatchAbbreviatedDayName, (_DTString * str, DateTimeFormatInfo * dtfi, int32_t * result, MethodInfo * method));
DO_APP_FUNC(0x028B5D60, bool, DateTimeParse_MatchDayName, (_DTString * str, DateTimeFormatInfo * dtfi, int32_t * result, MethodInfo * method));
DO_APP_FUNC(0x028B5E60, bool, DateTimeParse_MatchEraName, (_DTString * str, DateTimeFormatInfo * dtfi, int32_t * result, MethodInfo * method));
DO_APP_FUNC(0x028B6000, bool, DateTimeParse_MatchTimeMark, (_DTString * str, DateTimeFormatInfo * dtfi, DateTimeParse_TM__Enum * result, MethodInfo * method));
DO_APP_FUNC(0x028B61E0, bool, DateTimeParse_MatchAbbreviatedTimeMark, (_DTString * str, DateTimeFormatInfo * dtfi, DateTimeParse_TM__Enum * result, MethodInfo * method));
DO_APP_FUNC(0x028B62E0, bool, DateTimeParse_CheckNewValue, (int32_t * currentValue, int32_t newValue, uint16_t patternChar, DateTimeResult * result, MethodInfo * method));
DO_APP_FUNC(0x028B63C0, DateTime, DateTimeParse_GetDateTimeNow, (DateTimeResult * result, DateTimeStyles__Enum * styles, MethodInfo * method));
DO_APP_FUNC(0x028B6520, bool, DateTimeParse_CheckDefaultDateTime, (DateTimeResult * result, Calendar * * cal, DateTimeStyles__Enum styles, MethodInfo * method));
DO_APP_FUNC(0x028B6780, String *, DateTimeParse_ExpandPredefinedFormat, (String * format, DateTimeFormatInfo * * dtfi, ParsingInfo * parseInfo, DateTimeResult * result, MethodInfo * method));
DO_APP_FUNC(0x028B6B90, bool, DateTimeParse_ParseByFormat, (_DTString * str, _DTString * format, ParsingInfo * parseInfo, DateTimeFormatInfo * dtfi, DateTimeResult * result, MethodInfo * method));
DO_APP_FUNC(0x028B7D10, bool, DateTimeParse_TryParseQuoteString, (String * format, int32_t pos, StringBuilder * result, int32_t * returnValue, MethodInfo * method));
DO_APP_FUNC(0x028B7DF0, bool, DateTimeParse_DoStrictParse, (String * s, String * formatParam, DateTimeStyles__Enum styles, DateTimeFormatInfo * dtfi, DateTimeResult * result, MethodInfo * method));
DO_APP_FUNC(0x028B8410, Exception *, DateTimeParse_GetDateTimeParseException, (DateTimeResult * result, MethodInfo * method));
DO_APP_FUNC(0x028B8850, void, DateTimeParse__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00611810, void, DateTimeParse_MatchNumberDelegate__ctor, (DateTimeParse_MatchNumberDelegate * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x028B92F0, bool, DateTimeParse_MatchNumberDelegate_Invoke, (DateTimeParse_MatchNumberDelegate * __this, _DTString * str, int32_t digitLen, int32_t * result, MethodInfo * method));
DO_APP_FUNC(0x028B9690, IAsyncResult *, DateTimeParse_MatchNumberDelegate_BeginInvoke, (DateTimeParse_MatchNumberDelegate * __this, _DTString * str, int32_t digitLen, int32_t * result, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x0167DD00, bool, DateTimeParse_MatchNumberDelegate_EndInvoke, (DateTimeParse_MatchNumberDelegate * __this, _DTString * str, int32_t * result, IAsyncResult * __result, MethodInfo * method));
DO_APP_FUNC(0x00249FC0, void, _DTString__ctor, (_DTString__Boxed * __this, String * str, DateTimeFormatInfo * dtfi, bool checkDigitToken, MethodInfo * method));
DO_APP_FUNC(0x00249FF0, void, _DTString__ctor_1, (_DTString__Boxed * __this, String * str, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x00107C30, CompareInfo *, _DTString_get_CompareInfo, (_DTString__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0024A000, bool, _DTString_GetNext, (_DTString__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0024A040, bool, _DTString_AtEnd, (_DTString__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0024A050, bool, _DTString_Advance, (_DTString__Boxed * __this, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0024A090, void, _DTString_GetRegularToken, (_DTString__Boxed * __this, TokenType__Enum * tokenType, int32_t * tokenValue, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x0024A0A0, TokenType__Enum, _DTString_GetSeparatorToken, (_DTString__Boxed * __this, DateTimeFormatInfo * dtfi, int32_t * indexBeforeSeparator, uint16_t * charBeforeSeparator, MethodInfo * method));
DO_APP_FUNC(0x0024A0B0, bool, _DTString_MatchSpecifiedWord, (_DTString__Boxed * __this, String * target, MethodInfo * method));
DO_APP_FUNC(0x0024A0C0, bool, _DTString_MatchSpecifiedWord_1, (_DTString__Boxed * __this, String * target, int32_t endIndex, MethodInfo * method));
DO_APP_FUNC(0x0024A0D0, bool, _DTString_MatchSpecifiedWords, (_DTString__Boxed * __this, String * target, bool checkWordBoundary, int32_t * matchLength, MethodInfo * method));
DO_APP_FUNC(0x0024A0E0, bool, _DTString_Match, (_DTString__Boxed * __this, String * str, MethodInfo * method));
DO_APP_FUNC(0x0024A0F0, bool, _DTString_Match_1, (_DTString__Boxed * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x0024A150, int32_t, _DTString_MatchLongestWords, (_DTString__Boxed * __this, String__Array * words, int32_t * maxMatchStrLen, MethodInfo * method));
DO_APP_FUNC(0x0024A160, int32_t, _DTString_GetRepeatCount, (_DTString__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0024A170, bool, _DTString_GetNextDigit, (_DTString__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0024A180, uint16_t, _DTString_GetChar, (_DTString__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0024A1B0, int32_t, _DTString_GetDigit, (_DTString__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0024A1E0, void, _DTString_SkipWhiteSpaces, (_DTString__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0024A1F0, bool, _DTString_SkipWhiteSpaceCurrent, (_DTString__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0024A200, void, _DTString_TrimTail, (_DTString__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0024A210, void, _DTString_RemoveTrailingInQuoteSpaces, (_DTString__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0024A220, void, _DTString_RemoveLeadingInQuoteSpaces, (_DTString__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0024A230, DTSubString, _DTString_GetSubString, (_DTString__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0024A260, void, _DTString_ConsumeSubString, (_DTString__Boxed * __this, DTSubString sub, MethodInfo * method));
DO_APP_FUNC(0x0314FD20, void, _DTString__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00213D30, uint16_t, DTSubString_get_Item, (DTSubString__Boxed * __this, int32_t relativeIndex, MethodInfo * method));
DO_APP_FUNC(0x00215B80, void, DateTimeRawInfo_Init, (DateTimeRawInfo__Boxed * __this, int32_t * numberBuffer, MethodInfo * method));
DO_APP_FUNC(0x00215BB0, void, DateTimeRawInfo_AddNumber, (DateTimeRawInfo__Boxed * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x00215BD0, int32_t, DateTimeRawInfo_GetNumber, (DateTimeRawInfo__Boxed * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0013D290, void, DateTimeResult_Init, (DateTimeResult__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0013D2C0, void, DateTimeResult_SetDate, (DateTimeResult__Boxed * __this, int32_t year, int32_t month, int32_t day, MethodInfo * method));
DO_APP_FUNC(0x0013D2D0, void, DateTimeResult_SetFailure, (DateTimeResult__Boxed * __this, ParseFailureKind__Enum failure, String * failureMessageID, Object * failureMessageFormatArgument, MethodInfo * method));
DO_APP_FUNC(0x0013D2E0, void, DateTimeResult_SetFailure_1, (DateTimeResult__Boxed * __this, ParseFailureKind__Enum failure, String * failureMessageID, Object * failureMessageFormatArgument, String * failureArgumentName, MethodInfo * method));
DO_APP_FUNC(0x001E12C0, void, ParsingInfo_Init, (ParsingInfo__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D46A0, void, Guid__ctor, (Guid__Boxed * __this, Byte__Array * b, MethodInfo * method));
DO_APP_FUNC(0x001D46B0, void, Guid__ctor_1, (Guid__Boxed * __this, uint32_t a, uint16_t b, uint16_t c, uint8_t d, uint8_t e, uint8_t f, uint8_t g, uint8_t h, uint8_t i, uint8_t j, uint8_t k, MethodInfo * method));
DO_APP_FUNC(0x001D4700, void, Guid__ctor_2, (Guid__Boxed * __this, int32_t a, int16_t b, int16_t c, Byte__Array * d, MethodInfo * method));
DO_APP_FUNC(0x001D46B0, void, Guid__ctor_3, (Guid__Boxed * __this, int32_t a, int16_t b, int16_t c, uint8_t d, uint8_t e, uint8_t f, uint8_t g, uint8_t h, uint8_t i, uint8_t j, uint8_t k, MethodInfo * method));
DO_APP_FUNC(0x001D4710, void, Guid__ctor_4, (Guid__Boxed * __this, String * g, MethodInfo * method));
DO_APP_FUNC(0x01DF9340, Guid, Guid_Parse, (String * input, MethodInfo * method));
DO_APP_FUNC(0x01DF9490, bool, Guid_TryParse, (String * input, Guid * result, MethodInfo * method));
DO_APP_FUNC(0x01DF95C0, bool, Guid_TryParseExact, (String * input, String * format, Guid * result, MethodInfo * method));
DO_APP_FUNC(0x01DF9770, bool, Guid_TryParseGuid, (String * g, Guid_GuidStyles__Enum flags, Guid_GuidResult * result, MethodInfo * method));
DO_APP_FUNC(0x01DF99A0, bool, Guid_TryParseGuidWithHexPrefix, (String * guidString, Guid_GuidResult * result, MethodInfo * method));
DO_APP_FUNC(0x01DFA170, bool, Guid_TryParseGuidWithNoStyle, (String * guidString, Guid_GuidResult * result, MethodInfo * method));
DO_APP_FUNC(0x01DFA510, bool, Guid_TryParseGuidWithDashes, (String * guidString, Guid_GuidResult * result, MethodInfo * method));
DO_APP_FUNC(0x01DFAAA0, bool, Guid_StringToShort, (String * str, int32_t requiredLength, int32_t flags, int16_t * result, Guid_GuidResult * parseResult, MethodInfo * method));
DO_APP_FUNC(0x01DFAC10, bool, Guid_StringToShort_1, (String * str, int32_t * parsePos, int32_t requiredLength, int32_t flags, int16_t * result, Guid_GuidResult * parseResult, MethodInfo * method));
DO_APP_FUNC(0x01DFAD20, bool, Guid_StringToInt, (String * str, int32_t requiredLength, int32_t flags, int32_t * result, Guid_GuidResult * parseResult, MethodInfo * method));
DO_APP_FUNC(0x01DFAE10, bool, Guid_StringToInt_1, (String * str, int32_t * parsePos, int32_t requiredLength, int32_t flags, int32_t * result, Guid_GuidResult * parseResult, MethodInfo * method));
DO_APP_FUNC(0x01DFAEF0, bool, Guid_StringToInt_2, (String * str, int32_t * parsePos, int32_t requiredLength, int32_t flags, int32_t * result, Guid_GuidResult * parseResult, MethodInfo * method));
DO_APP_FUNC(0x01DFB0B0, bool, Guid_StringToLong, (String * str, int32_t * parsePos, int32_t flags, int64_t * result, Guid_GuidResult * parseResult, MethodInfo * method));
DO_APP_FUNC(0x01DFB190, bool, Guid_StringToLong_1, (String * str, int32_t * parsePos, int32_t flags, int64_t * result, Guid_GuidResult * parseResult, MethodInfo * method));
DO_APP_FUNC(0x01DFB2F0, String *, Guid_EatAllWhitespace, (String * str, MethodInfo * method));
DO_APP_FUNC(0x01DFB450, bool, Guid_IsHexPrefix, (String * str, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x001D4720, Byte__Array *, Guid_ToByteArray, (Guid__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D4730, String *, Guid_ToString, (Guid__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D4740, int32_t, Guid_GetHashCode, (Guid__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D4770, bool, Guid_Equals, (Guid__Boxed * __this, Object * o, MethodInfo * method));
DO_APP_FUNC(0x001D4780, bool, Guid_Equals_1, (Guid__Boxed * __this, Guid g, MethodInfo * method));
DO_APP_FUNC(0x001D47A0, int32_t, Guid_GetResult, (Guid__Boxed * __this, uint32_t me, uint32_t them, MethodInfo * method));
DO_APP_FUNC(0x001D47C0, int32_t, Guid_CompareTo, (Guid__Boxed * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x001D47D0, int32_t, Guid_CompareTo_1, (Guid__Boxed * __this, Guid value, MethodInfo * method));
DO_APP_FUNC(0x01DFC0D0, bool, Guid_op_Equality, (Guid a, Guid b, MethodInfo * method));
DO_APP_FUNC(0x01DFC250, bool, Guid_op_Inequality, (Guid a, Guid b, MethodInfo * method));
DO_APP_FUNC(0x001D47F0, String *, Guid_ToString_1, (Guid__Boxed * __this, String * format, MethodInfo * method));
DO_APP_FUNC(0x01DFC320, uint16_t, Guid_HexToChar, (int32_t a, MethodInfo * method));
DO_APP_FUNC(0x01DFC340, int32_t, Guid_HexsToChars, (uint16_t * guidChars, int32_t offset, int32_t a, int32_t b, MethodInfo * method));
DO_APP_FUNC(0x01DFC420, int32_t, Guid_HexsToChars_1, (uint16_t * guidChars, int32_t offset, int32_t a, int32_t b, bool hex, MethodInfo * method));
DO_APP_FUNC(0x001D47F0, String *, Guid_ToString_2, (Guid__Boxed * __this, String * format, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01DFCC80, Guid, Guid_NewGuid, (MethodInfo * method));
DO_APP_FUNC(0x01DFCF20, void, Guid__cctor, (MethodInfo * method));
DO_APP_FUNC(0x001D4820, void, Guid_GuidResult_Init, (Guid_GuidResult__Boxed * __this, Guid_GuidParseThrowStyle__Enum canThrow, MethodInfo * method));
DO_APP_FUNC(0x001D4830, void, Guid_GuidResult_SetFailure, (Guid_GuidResult__Boxed * __this, Exception * nativeException, MethodInfo * method));
DO_APP_FUNC(0x001D4840, void, Guid_GuidResult_SetFailure_1, (Guid_GuidResult__Boxed * __this, Guid_ParseFailureKind__Enum failure, String * failureMessageID, MethodInfo * method));
DO_APP_FUNC(0x001D4870, void, Guid_GuidResult_SetFailure_2, (Guid_GuidResult__Boxed * __this, Guid_ParseFailureKind__Enum failure, String * failureMessageID, Object * failureMessageFormatArgument, MethodInfo * method));
DO_APP_FUNC(0x001D4890, void, Guid_GuidResult_SetFailure_3, (Guid_GuidResult__Boxed * __this, Guid_ParseFailureKind__Enum failure, String * failureMessageID, Object * failureMessageFormatArgument, String * failureArgumentName, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x001D48A0, Exception *, Guid_GuidResult_GetGuidParseException, (Guid_GuidResult__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0238C2C0, void, IndexOutOfRangeException__ctor, (IndexOutOfRangeException * __this, MethodInfo * method));
DO_APP_FUNC(0x0238C350, void, IndexOutOfRangeException__ctor_1, (IndexOutOfRangeException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, IndexOutOfRangeException__ctor_2, (IndexOutOfRangeException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0238C370, void, InsufficientExecutionStackException__ctor, (InsufficientExecutionStackException * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, InsufficientExecutionStackException__ctor_1, (InsufficientExecutionStackException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x001E71E0, int32_t, Int16_CompareTo, (Int16__Boxed * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x001303D0, int32_t, Int16_CompareTo_1, (Int16__Boxed * __this, int16_t value, MethodInfo * method));
DO_APP_FUNC(0x001E71F0, bool, Int16_Equals, (Int16__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x001303C0, bool, Int16_Equals_1, (Int16__Boxed * __this, int16_t obj, MethodInfo * method));
DO_APP_FUNC(0x001303B0, int32_t, Int16_GetHashCode, (Int16__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00130280, String *, Int16_ToString, (Int16__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E7200, String *, Int16_ToString_1, (Int16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E7230, String *, Int16_ToString_2, (Int16__Boxed * __this, String * format, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E7270, String *, Int16_ToString_3, (Int16__Boxed * __this, String * format, NumberFormatInfo * info, MethodInfo * method));
DO_APP_FUNC(0x0238C680, int16_t, Int16_Parse, (String * s, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0238C6B0, int16_t, Int16_Parse_1, (String * s, NumberStyles__Enum style, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0238C700, int16_t, Int16_Parse_2, (String * s, NumberStyles__Enum style, NumberFormatInfo * info, MethodInfo * method));
DO_APP_FUNC(0x0238C890, bool, Int16_TryParse, (String * s, NumberStyles__Enum style, IFormatProvider * provider, int16_t * result, MethodInfo * method));
DO_APP_FUNC(0x0238C930, bool, Int16_TryParse_1, (String * s, NumberStyles__Enum style, NumberFormatInfo * info, int16_t * result, MethodInfo * method));
DO_APP_FUNC(0x001E7280, TypeCode__Enum, Int16_GetTypeCode, (Int16__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E7290, bool, Int16_System_IConvertible_ToBoolean, (Int16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E7330, uint16_t, Int16_System_IConvertible_ToChar, (Int16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E7470, int8_t, Int16_System_IConvertible_ToSByte, (Int16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E75C0, uint8_t, Int16_System_IConvertible_ToByte, (Int16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00113CC0, int16_t, Int16_System_IConvertible_ToInt16, (Int16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E7700, uint16_t, Int16_System_IConvertible_ToUInt16, (Int16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E7840, int32_t, Int16_System_IConvertible_ToInt32, (Int16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E78E0, uint32_t, Int16_System_IConvertible_ToUInt32, (Int16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E7A20, int64_t, Int16_System_IConvertible_ToInt64, (Int16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E7AC0, uint64_t, Int16_System_IConvertible_ToUInt64, (Int16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E7C00, float, Int16_System_IConvertible_ToSingle, (Int16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E7CA0, double, Int16_System_IConvertible_ToDouble, (Int16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E7D40, Decimal, Int16_System_IConvertible_ToDecimal, (Int16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E7E90, DateTime, Int16_System_IConvertible_ToDateTime, (Int16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E7EA0, Object *, Int16_System_IConvertible_ToType, (Int16__Boxed * __this, Type * type, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E7F80, int32_t, Int32_CompareTo, (Int32__Boxed * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x001312E0, int32_t, Int32_CompareTo_1, (Int32__Boxed * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x001E7F90, bool, Int32_Equals, (Int32__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0012EDC0, bool, Int32_Equals_1, (Int32__Boxed * __this, int32_t obj, MethodInfo * method));
DO_APP_FUNC(0x0010E170, int32_t, Int32_GetHashCode, (Int32__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001311C0, String *, Int32_ToString, (Int32__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E7FA0, String *, Int32_ToString_1, (Int32__Boxed * __this, String * format, MethodInfo * method));
DO_APP_FUNC(0x001E7FE0, String *, Int32_ToString_2, (Int32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E8010, String *, Int32_ToString_3, (Int32__Boxed * __this, String * format, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0238CD20, int32_t, Int32_Parse, (String * s, MethodInfo * method));
DO_APP_FUNC(0x0238CD50, int32_t, Int32_Parse_1, (String * s, NumberStyles__Enum style, MethodInfo * method));
DO_APP_FUNC(0x0238CD90, int32_t, Int32_Parse_2, (String * s, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0238CDC0, int32_t, Int32_Parse_3, (String * s, NumberStyles__Enum style, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0238CE10, bool, Int32_TryParse, (String * s, int32_t * result, MethodInfo * method));
DO_APP_FUNC(0x0238CE50, bool, Int32_TryParse_1, (String * s, NumberStyles__Enum style, IFormatProvider * provider, int32_t * result, MethodInfo * method));
DO_APP_FUNC(0x001E8050, TypeCode__Enum, Int32_GetTypeCode, (Int32__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E8060, bool, Int32_System_IConvertible_ToBoolean, (Int32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E8100, uint16_t, Int32_System_IConvertible_ToChar, (Int32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E81A0, int8_t, Int32_System_IConvertible_ToSByte, (Int32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E8240, uint8_t, Int32_System_IConvertible_ToByte, (Int32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E82E0, int16_t, Int32_System_IConvertible_ToInt16, (Int32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E8380, uint16_t, Int32_System_IConvertible_ToUInt16, (Int32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0010E170, int32_t, Int32_System_IConvertible_ToInt32, (Int32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E8420, uint32_t, Int32_System_IConvertible_ToUInt32, (Int32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E84C0, int64_t, Int32_System_IConvertible_ToInt64, (Int32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E8560, uint64_t, Int32_System_IConvertible_ToUInt64, (Int32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E8600, float, Int32_System_IConvertible_ToSingle, (Int32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E86A0, double, Int32_System_IConvertible_ToDouble, (Int32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E8740, Decimal, Int32_System_IConvertible_ToDecimal, (Int32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E8890, DateTime, Int32_System_IConvertible_ToDateTime, (Int32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E88A0, Object *, Int32_System_IConvertible_ToType, (Int32__Boxed * __this, Type * type, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E8970, int32_t, Int64_CompareTo, (Int64__Boxed * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x001E8980, int32_t, Int64_CompareTo_1, (Int64__Boxed * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x001E89A0, bool, Int64_Equals, (Int64__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0012F2C0, bool, Int64_Equals_1, (Int64__Boxed * __this, int64_t obj, MethodInfo * method));
DO_APP_FUNC(0x00154D60, int32_t, Int64_GetHashCode, (Int64__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E89B0, String *, Int64_ToString, (Int64__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E89E0, String *, Int64_ToString_1, (Int64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E8A10, String *, Int64_ToString_2, (Int64__Boxed * __this, String * format, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0238D1C0, int64_t, Int64_Parse, (String * s, MethodInfo * method));
DO_APP_FUNC(0x0238D1F0, int64_t, Int64_Parse_1, (String * s, NumberStyles__Enum style, MethodInfo * method));
DO_APP_FUNC(0x0238D230, int64_t, Int64_Parse_2, (String * s, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0238D260, int64_t, Int64_Parse_3, (String * s, NumberStyles__Enum style, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0238D2B0, bool, Int64_TryParse, (String * s, int64_t * result, MethodInfo * method));
DO_APP_FUNC(0x0238D2F0, bool, Int64_TryParse_1, (String * s, NumberStyles__Enum style, IFormatProvider * provider, int64_t * result, MethodInfo * method));
DO_APP_FUNC(0x001E8A50, TypeCode__Enum, Int64_GetTypeCode, (Int64__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E8A60, bool, Int64_System_IConvertible_ToBoolean, (Int64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E8B00, uint16_t, Int64_System_IConvertible_ToChar, (Int64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E8C40, int8_t, Int64_System_IConvertible_ToSByte, (Int64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E8D90, uint8_t, Int64_System_IConvertible_ToByte, (Int64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E8E30, int16_t, Int64_System_IConvertible_ToInt16, (Int64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E8F80, uint16_t, Int64_System_IConvertible_ToUInt16, (Int64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E90C0, int32_t, Int64_System_IConvertible_ToInt32, (Int64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E9160, uint32_t, Int64_System_IConvertible_ToUInt32, (Int64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00107C00, int64_t, Int64_System_IConvertible_ToInt64, (Int64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E92A0, uint64_t, Int64_System_IConvertible_ToUInt64, (Int64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E93E0, float, Int64_System_IConvertible_ToSingle, (Int64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E9480, double, Int64_System_IConvertible_ToDouble, (Int64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E9520, Decimal, Int64_System_IConvertible_ToDecimal, (Int64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E9680, DateTime, Int64_System_IConvertible_ToDateTime, (Int64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001E9690, Object *, Int64_System_IConvertible_ToType, (Int64__Boxed * __this, Type * type, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x02265D40, void, InvalidCastException__ctor, (InvalidCastException * __this, MethodInfo * method));
DO_APP_FUNC(0x02265DD0, void, InvalidCastException__ctor_1, (InvalidCastException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x02265DF0, void, InvalidCastException__ctor_2, (InvalidCastException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, InvalidCastException__ctor_3, (InvalidCastException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02265E10, void, InvalidOperationException__ctor, (InvalidOperationException * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCD850, void, InvalidOperationException__ctor_1, (InvalidOperationException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x02265EA0, void, InvalidOperationException__ctor_2, (InvalidOperationException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, InvalidOperationException__ctor_3, (InvalidOperationException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02265EC0, void, InvalidProgramException__ctor, (InvalidProgramException * __this, MethodInfo * method));
DO_APP_FUNC(0x02265F50, void, InvalidProgramException__ctor_1, (InvalidProgramException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, InvalidProgramException__ctor_2, (InvalidProgramException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02265F70, void, InvalidTimeZoneException__ctor, (InvalidTimeZoneException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x02266020, void, InvalidTimeZoneException__ctor_1, (InvalidTimeZoneException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x022660E0, void, InvalidTimeZoneException__ctor_2, (InvalidTimeZoneException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x022661A0, void, InvalidTimeZoneException__ctor_3, (InvalidTimeZoneException * __this, MethodInfo * method));
DO_APP_FUNC(0x02268030, double, Math_Acos, (double d, MethodInfo * method));
DO_APP_FUNC(0x02268040, double, Math_Asin, (double d, MethodInfo * method));
DO_APP_FUNC(0x02268050, double, Math_Atan, (double d, MethodInfo * method));
DO_APP_FUNC(0x02268060, double, Math_Atan2, (double y, double x, MethodInfo * method));
DO_APP_FUNC(0x02268070, double, Math_Ceiling, (double a, MethodInfo * method));
DO_APP_FUNC(0x02268080, double, Math_Cos, (double d, MethodInfo * method));
DO_APP_FUNC(0x02268090, double, Math_Floor, (double d, MethodInfo * method));
DO_APP_FUNC(0x022680A0, double, Math_InternalRound, (double value, int32_t digits, MidpointRounding__Enum mode, MethodInfo * method));
DO_APP_FUNC(0x022682E0, double, Math_InternalTruncate, (double d, MethodInfo * method));
DO_APP_FUNC(0x02268390, double, Math_Sin, (double a, MethodInfo * method));
DO_APP_FUNC(0x022683A0, double, Math_Tan, (double a, MethodInfo * method));
DO_APP_FUNC(0x022683B0, double, Math_Round, (double a, MethodInfo * method));
DO_APP_FUNC(0x022683C0, double, Math_Round_1, (double value, int32_t digits, MethodInfo * method));
DO_APP_FUNC(0x022684C0, double, Math_Round_2, (double value, MidpointRounding__Enum mode, MethodInfo * method));
DO_APP_FUNC(0x02268570, double, Math_Round_3, (double value, int32_t digits, MidpointRounding__Enum mode, MethodInfo * method));
DO_APP_FUNC(0x02268740, Decimal, Math_Round_4, (Decimal d, MethodInfo * method));
DO_APP_FUNC(0x022688B0, double, Math_SplitFractionDouble, (double * value, MethodInfo * method));
DO_APP_FUNC(0x022688C0, Decimal, Math_Truncate, (Decimal d, MethodInfo * method));
DO_APP_FUNC(0x02268A30, double, Math_Truncate_1, (double d, MethodInfo * method));
DO_APP_FUNC(0x02268B60, double, Math_Sqrt, (double d, MethodInfo * method));
DO_APP_FUNC(0x02268B70, double, Math_Log, (double d, MethodInfo * method));
DO_APP_FUNC(0x02268B80, double, Math_Log10, (double d, MethodInfo * method));
DO_APP_FUNC(0x02268B90, double, Math_Exp, (double d, MethodInfo * method));
DO_APP_FUNC(0x02268BA0, double, Math_Pow, (double x, double y, MethodInfo * method));
DO_APP_FUNC(0x02268BB0, double, Math_IEEERemainder, (double x, double y, MethodInfo * method));
DO_APP_FUNC(0x02268ED0, int32_t, Math_Abs, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x02269010, int32_t, Math_AbsHelper, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x022690E0, int64_t, Math_Abs_1, (int64_t value, MethodInfo * method));
DO_APP_FUNC(0x02269230, int64_t, Math_AbsHelper_1, (int64_t value, MethodInfo * method));
DO_APP_FUNC(0x02269300, float, Math_Abs_2, (float value, MethodInfo * method));
DO_APP_FUNC(0x02269320, double, Math_Abs_3, (double value, MethodInfo * method));
DO_APP_FUNC(0x02269330, Decimal, Math_Abs_4, (Decimal value, MethodInfo * method));
DO_APP_FUNC(0x02269420, int8_t, Math_Max, (int8_t val1, int8_t val2, MethodInfo * method));
DO_APP_FUNC(0x02269430, uint8_t, Math_Max_1, (uint8_t val1, uint8_t val2, MethodInfo * method));
DO_APP_FUNC(0x02269440, int16_t, Math_Max_2, (int16_t val1, int16_t val2, MethodInfo * method));
DO_APP_FUNC(0x02269450, uint16_t, Math_Max_3, (uint16_t val1, uint16_t val2, MethodInfo * method));
DO_APP_FUNC(0x02269460, int32_t, Math_Max_4, (int32_t val1, int32_t val2, MethodInfo * method));
DO_APP_FUNC(0x02269470, uint32_t, Math_Max_5, (uint32_t val1, uint32_t val2, MethodInfo * method));
DO_APP_FUNC(0x02269480, int64_t, Math_Max_6, (int64_t val1, int64_t val2, MethodInfo * method));
DO_APP_FUNC(0x02269490, uint64_t, Math_Max_7, (uint64_t val1, uint64_t val2, MethodInfo * method));
DO_APP_FUNC(0x022694A0, float, Math_Max_8, (float val1, float val2, MethodInfo * method));
DO_APP_FUNC(0x022694C0, double, Math_Max_9, (double val1, double val2, MethodInfo * method));
DO_APP_FUNC(0x022695B0, Decimal, Math_Max_10, (Decimal val1, Decimal val2, MethodInfo * method));
DO_APP_FUNC(0x02269770, int8_t, Math_Min, (int8_t val1, int8_t val2, MethodInfo * method));
DO_APP_FUNC(0x02269780, uint8_t, Math_Min_1, (uint8_t val1, uint8_t val2, MethodInfo * method));
DO_APP_FUNC(0x02269790, int16_t, Math_Min_2, (int16_t val1, int16_t val2, MethodInfo * method));
DO_APP_FUNC(0x022697A0, uint16_t, Math_Min_3, (uint16_t val1, uint16_t val2, MethodInfo * method));
DO_APP_FUNC(0x022697B0, int32_t, Math_Min_4, (int32_t val1, int32_t val2, MethodInfo * method));
DO_APP_FUNC(0x022697C0, uint32_t, Math_Min_5, (uint32_t val1, uint32_t val2, MethodInfo * method));
DO_APP_FUNC(0x022697D0, int64_t, Math_Min_6, (int64_t val1, int64_t val2, MethodInfo * method));
DO_APP_FUNC(0x022697E0, uint64_t, Math_Min_7, (uint64_t val1, uint64_t val2, MethodInfo * method));
DO_APP_FUNC(0x022697F0, float, Math_Min_8, (float val1, float val2, MethodInfo * method));
DO_APP_FUNC(0x02269810, double, Math_Min_9, (double val1, double val2, MethodInfo * method));
DO_APP_FUNC(0x02269900, Decimal, Math_Min_10, (Decimal val1, Decimal val2, MethodInfo * method));
DO_APP_FUNC(0x02269AC0, double, Math_Log_1, (double a, double newBase, MethodInfo * method));
DO_APP_FUNC(0x02269C70, int32_t, Math_Sign, (float value, MethodInfo * method));
DO_APP_FUNC(0x02269D80, int32_t, Math_Sign_1, (double value, MethodInfo * method));
DO_APP_FUNC(0x02269E90, void, Math__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02269F60, void, MemberAccessException__ctor, (MemberAccessException * __this, MethodInfo * method));
DO_APP_FUNC(0x02269FF0, void, MemberAccessException__ctor_1, (MemberAccessException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, MemberAccessException__ctor_2, (MemberAccessException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0226A010, void, MethodAccessException__ctor, (MethodAccessException * __this, MethodInfo * method));
DO_APP_FUNC(0x0226A0A0, void, MethodAccessException__ctor_1, (MethodAccessException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, MethodAccessException__ctor_2, (MethodAccessException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0226A0C0, void, MissingFieldException__ctor, (MissingFieldException * __this, MethodInfo * method));
DO_APP_FUNC(0x0226A150, void, MissingFieldException__ctor_1, (MissingFieldException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x0226A170, void, MissingFieldException__ctor_2, (MissingFieldException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0226A190, String *, MissingFieldException_get_Message, (MissingFieldException * __this, MethodInfo * method));
DO_APP_FUNC(0x0226A300, void, MissingFieldException__ctor_3, (MissingFieldException * __this, String * className, String * fieldName, MethodInfo * method));
DO_APP_FUNC(0x0226A340, void, MissingMemberException__ctor, (MissingMemberException * __this, MethodInfo * method));
DO_APP_FUNC(0x0226A3D0, void, MissingMemberException__ctor_1, (MissingMemberException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x0226A3F0, void, MissingMemberException__ctor_2, (MissingMemberException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0226A560, String *, MissingMemberException_get_Message, (MissingMemberException * __this, MethodInfo * method));
DO_APP_FUNC(0x0173D7D0, String *, MissingMemberException_FormatSignature, (Byte__Array * signature, MethodInfo * method));
DO_APP_FUNC(0x0226A6D0, void, MissingMemberException_GetObjectData, (MissingMemberException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0226A870, void, MissingMethodException__ctor, (MissingMethodException * __this, MethodInfo * method));
DO_APP_FUNC(0x0226A900, void, MissingMethodException__ctor_1, (MissingMethodException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x0226A170, void, MissingMethodException__ctor_2, (MissingMethodException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0226A920, String *, MissingMethodException_get_Message, (MissingMethodException * __this, MethodInfo * method));
DO_APP_FUNC(0x0226A300, void, MissingMethodException__ctor_3, (MissingMethodException * __this, String * className, String * methodName, MethodInfo * method));
DO_APP_FUNC(0x0226AA50, void, MissingMethodException__ctor_4, (MissingMethodException * __this, String * className, String * methodName, String * signature, String * message, MethodInfo * method));
DO_APP_FUNC(0x0226F1C0, void, MulticastNotSupportedException__ctor, (MulticastNotSupportedException * __this, MethodInfo * method));
DO_APP_FUNC(0x0226F250, void, MulticastNotSupportedException__ctor_1, (MulticastNotSupportedException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, MulticastNotSupportedException__ctor_2, (MulticastNotSupportedException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, NonSerializedAttribute__ctor, (NonSerializedAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0226F270, void, NotImplementedException__ctor, (NotImplementedException * __this, MethodInfo * method));
DO_APP_FUNC(0x0226F300, void, NotImplementedException__ctor_1, (NotImplementedException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, NotImplementedException__ctor_2, (NotImplementedException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0226F320, void, NotSupportedException__ctor, (NotSupportedException * __this, MethodInfo * method));
DO_APP_FUNC(0x0226F3B0, void, NotSupportedException__ctor_1, (NotSupportedException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x0226F3D0, void, NotSupportedException__ctor_2, (NotSupportedException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, NotSupportedException__ctor_3, (NotSupportedException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0226F5A0, void, NullReferenceException__ctor, (NullReferenceException * __this, MethodInfo * method));
DO_APP_FUNC(0x0226F630, void, NullReferenceException__ctor_1, (NullReferenceException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, NullReferenceException__ctor_2, (NullReferenceException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0226F7F0, bool, Number_NumberBufferToDecimal, (uint8_t * number, Decimal * value, MethodInfo * method));
DO_APP_FUNC(0x0226F800, bool, Number_NumberBufferToDouble, (uint8_t * number, double * value, MethodInfo * method));
DO_APP_FUNC(0x0226F860, String *, Number_FormatDecimal, (Decimal value, String * format, NumberFormatInfo * info, MethodInfo * method));
DO_APP_FUNC(0x0226FA00, String *, Number_FormatDouble, (double value, String * format, NumberFormatInfo * info, MethodInfo * method));
DO_APP_FUNC(0x0226FAC0, String *, Number_FormatInt32, (int32_t value, String * format, NumberFormatInfo * info, MethodInfo * method));
DO_APP_FUNC(0x0226FCB0, String *, Number_FormatUInt32, (uint32_t value, String * format, NumberFormatInfo * info, MethodInfo * method));
DO_APP_FUNC(0x0226FE90, String *, Number_FormatInt64, (int64_t value, String * format, NumberFormatInfo * info, MethodInfo * method));
DO_APP_FUNC(0x02270080, String *, Number_FormatUInt64, (uint64_t value, String * format, NumberFormatInfo * info, MethodInfo * method));
DO_APP_FUNC(0x02270260, String *, Number_FormatSingle, (float value, String * format, NumberFormatInfo * info, MethodInfo * method));
DO_APP_FUNC(0x02270320, bool, Number_HexNumberToInt32, (Number_NumberBuffer * number, int32_t * value, MethodInfo * method));
DO_APP_FUNC(0x022703A0, bool, Number_HexNumberToInt64, (Number_NumberBuffer * number, int64_t * value, MethodInfo * method));
DO_APP_FUNC(0x02270460, bool, Number_HexNumberToUInt32, (Number_NumberBuffer * number, uint32_t * value, MethodInfo * method));
DO_APP_FUNC(0x022704E0, bool, Number_HexNumberToUInt64, (Number_NumberBuffer * number, uint64_t * value, MethodInfo * method));
DO_APP_FUNC(0x02270570, bool, Number_IsWhite, (uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x02270590, bool, Number_NumberToInt32, (Number_NumberBuffer * number, int32_t * value, MethodInfo * method));
DO_APP_FUNC(0x02270600, bool, Number_NumberToInt64, (Number_NumberBuffer * number, int64_t * value, MethodInfo * method));
DO_APP_FUNC(0x02270680, bool, Number_NumberToUInt32, (Number_NumberBuffer * number, uint32_t * value, MethodInfo * method));
DO_APP_FUNC(0x022706E0, bool, Number_NumberToUInt64, (Number_NumberBuffer * number, uint64_t * value, MethodInfo * method));
DO_APP_FUNC(0x02270750, uint16_t *, Number_MatchChars, (uint16_t * p, String * str, MethodInfo * method));
DO_APP_FUNC(0x022707A0, uint16_t *, Number_MatchChars_1, (uint16_t * p, uint16_t * str, MethodInfo * method));
DO_APP_FUNC(0x022707E0, Decimal, Number_ParseDecimal, (String * value, NumberStyles__Enum options, NumberFormatInfo * numfmt, MethodInfo * method));
DO_APP_FUNC(0x022709A0, double, Number_ParseDouble, (String * value, NumberStyles__Enum options, NumberFormatInfo * numfmt, MethodInfo * method));
DO_APP_FUNC(0x02270CB0, int32_t, Number_ParseInt32, (String * s, NumberStyles__Enum style, NumberFormatInfo * info, MethodInfo * method));
DO_APP_FUNC(0x02270F40, int64_t, Number_ParseInt64, (String * value, NumberStyles__Enum options, NumberFormatInfo * numfmt, MethodInfo * method));
DO_APP_FUNC(0x022711F0, bool, Number_ParseNumber, (uint16_t * * str, NumberStyles__Enum options, Number_NumberBuffer * number, StringBuilder * sb, NumberFormatInfo * numfmt, bool parseDecimal, MethodInfo * method));
DO_APP_FUNC(0x02271BF0, float, Number_ParseSingle, (String * value, NumberStyles__Enum options, NumberFormatInfo * numfmt, MethodInfo * method));
DO_APP_FUNC(0x02271F60, uint32_t, Number_ParseUInt32, (String * value, NumberStyles__Enum options, NumberFormatInfo * numfmt, MethodInfo * method));
DO_APP_FUNC(0x02272200, uint64_t, Number_ParseUInt64, (String * value, NumberStyles__Enum options, NumberFormatInfo * numfmt, MethodInfo * method));
DO_APP_FUNC(0x022724B0, void, Number_StringToNumber, (String * str, NumberStyles__Enum options, Number_NumberBuffer * number, NumberFormatInfo * info, bool parseDecimal, MethodInfo * method));
DO_APP_FUNC(0x02272630, bool, Number_TrailingZeros, (String * s, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02272690, bool, Number_TryParseDecimal, (String * value, NumberStyles__Enum options, NumberFormatInfo * numfmt, Decimal * result, MethodInfo * method));
DO_APP_FUNC(0x02272840, bool, Number_TryParseDouble, (String * value, NumberStyles__Enum options, NumberFormatInfo * numfmt, double * result, MethodInfo * method));
DO_APP_FUNC(0x02272A20, bool, Number_TryParseInt32, (String * s, NumberStyles__Enum style, NumberFormatInfo * info, int32_t * result, MethodInfo * method));
DO_APP_FUNC(0x02272C90, bool, Number_TryParseInt64, (String * s, NumberStyles__Enum style, NumberFormatInfo * info, int64_t * result, MethodInfo * method));
DO_APP_FUNC(0x02272E90, bool, Number_TryParseSingle, (String * value, NumberStyles__Enum options, NumberFormatInfo * numfmt, float * result, MethodInfo * method));
DO_APP_FUNC(0x02273090, bool, Number_TryParseUInt32, (String * s, NumberStyles__Enum style, NumberFormatInfo * info, uint32_t * result, MethodInfo * method));
DO_APP_FUNC(0x02273300, bool, Number_TryParseUInt64, (String * s, NumberStyles__Enum style, NumberFormatInfo * info, uint64_t * result, MethodInfo * method));
DO_APP_FUNC(0x02273590, bool, Number_TryStringToNumber, (String * str, NumberStyles__Enum options, Number_NumberBuffer * number, NumberFormatInfo * numfmt, bool parseDecimal, MethodInfo * method));
DO_APP_FUNC(0x02273620, bool, Number_TryStringToNumber_1, (String * str, NumberStyles__Enum options, Number_NumberBuffer * number, StringBuilder * sb, NumberFormatInfo * numfmt, bool parseDecimal, MethodInfo * method));
DO_APP_FUNC(0x001E1140, void, Number_NumberBuffer__ctor, (Number_NumberBuffer__Boxed * __this, uint8_t * stackBuffer, MethodInfo * method));
DO_APP_FUNC(0x001E1160, uint8_t *, Number_NumberBuffer_PackForNative, (Number_NumberBuffer__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x022736B0, void, Number_NumberBuffer__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0227B460, void, ObjectDisposedException__ctor, (ObjectDisposedException * __this, MethodInfo * method));
DO_APP_FUNC(0x0227B500, void, ObjectDisposedException__ctor_1, (ObjectDisposedException * __this, String * objectName, MethodInfo * method));
DO_APP_FUNC(0x0227B5A0, void, ObjectDisposedException__ctor_2, (ObjectDisposedException * __this, String * objectName, String * message, MethodInfo * method));
DO_APP_FUNC(0x0227B5E0, String *, ObjectDisposedException_get_Message, (ObjectDisposedException * __this, MethodInfo * method));
DO_APP_FUNC(0x0227B740, String *, ObjectDisposedException_get_ObjectName, (ObjectDisposedException * __this, MethodInfo * method));
DO_APP_FUNC(0x0227B810, void, ObjectDisposedException__ctor_3, (ObjectDisposedException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0227B8E0, void, ObjectDisposedException_GetObjectData, (ObjectDisposedException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0227B9F0, void, ObsoleteAttribute__ctor, (ObsoleteAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01248670, void, ObsoleteAttribute__ctor_1, (ObsoleteAttribute * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01669060, void, ObsoleteAttribute__ctor_2, (ObsoleteAttribute * __this, String * message, bool error, MethodInfo * method));
DO_APP_FUNC(0x002FBC20, CancellationToken, OperationCanceledException_get_CancellationToken, (OperationCanceledException * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC30, void, OperationCanceledException_set_CancellationToken, (OperationCanceledException * __this, CancellationToken value, MethodInfo * method));
DO_APP_FUNC(0x0227C0E0, void, OperationCanceledException__ctor, (OperationCanceledException * __this, MethodInfo * method));
DO_APP_FUNC(0x0227C170, void, OperationCanceledException__ctor_1, (OperationCanceledException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x0227C190, void, OperationCanceledException__ctor_2, (OperationCanceledException * __this, String * message, CancellationToken token, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, OperationCanceledException__ctor_3, (OperationCanceledException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0227C790, void, OutOfMemoryException__ctor, (OutOfMemoryException * __this, MethodInfo * method));
DO_APP_FUNC(0x0227C840, void, OutOfMemoryException__ctor_1, (OutOfMemoryException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, OutOfMemoryException__ctor_2, (OutOfMemoryException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0227C860, void, OverflowException__ctor, (OverflowException * __this, MethodInfo * method));
DO_APP_FUNC(0x0227C8F0, void, OverflowException__ctor_1, (OverflowException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x0227C910, void, OverflowException__ctor_2, (OverflowException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, OverflowException__ctor_3, (OverflowException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ParamArrayAttribute__ctor, (ParamArrayAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x001E11D0, void, ParamsArray__ctor, (ParamsArray__Boxed * __this, Object * arg0, MethodInfo * method));
DO_APP_FUNC(0x001E11E0, void, ParamsArray__ctor_1, (ParamsArray__Boxed * __this, Object * arg0, Object * arg1, MethodInfo * method));
DO_APP_FUNC(0x001E11F0, void, ParamsArray__ctor_2, (ParamsArray__Boxed * __this, Object * arg0, Object * arg1, Object * arg2, MethodInfo * method));
DO_APP_FUNC(0x001E1200, void, ParamsArray__ctor_3, (ParamsArray__Boxed * __this, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x001E1210, int32_t, ParamsArray_get_Length, (ParamsArray__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E1230, Object *, ParamsArray_get_Item, (ParamsArray__Boxed * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x001E1240, Object *, ParamsArray_GetAtSlow, (ParamsArray__Boxed * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0227EB10, void, ParamsArray__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02280400, void, PlatformNotSupportedException__ctor, (PlatformNotSupportedException * __this, MethodInfo * method));
DO_APP_FUNC(0x02280490, void, PlatformNotSupportedException__ctor_1, (PlatformNotSupportedException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, PlatformNotSupportedException__ctor_2, (PlatformNotSupportedException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x022806C0, void, Random__ctor, (Random * __this, MethodInfo * method));
DO_APP_FUNC(0x02280710, void, Random__ctor_1, (Random * __this, int32_t Seed, MethodInfo * method));
DO_APP_FUNC(0x022809F0, double, Random_Sample, (Random * __this, MethodInfo * method));
DO_APP_FUNC(0x02280A10, int32_t, Random_InternalSample, (Random * __this, MethodInfo * method));
DO_APP_FUNC(0x02280AE0, int32_t, Random_Next, (Random * __this, MethodInfo * method));
DO_APP_FUNC(0x02280AF0, double, Random_GetSampleForLargeRange, (Random * __this, MethodInfo * method));
DO_APP_FUNC(0x02280B50, int32_t, Random_Next_1, (Random * __this, int32_t minValue, int32_t maxValue, MethodInfo * method));
DO_APP_FUNC(0x02280D20, int32_t, Random_Next_2, (Random * __this, int32_t maxValue, MethodInfo * method));
DO_APP_FUNC(0x00980110, double, Random_NextDouble, (Random * __this, MethodInfo * method));
DO_APP_FUNC(0x02280E50, void, RankException__ctor, (RankException * __this, MethodInfo * method));
DO_APP_FUNC(0x02280EE0, void, RankException__ctor_1, (RankException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, RankException__ctor_2, (RankException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01EE29F0, void, RuntimeType_ThrowIfTypeNeverValidGenericArgument, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x01EE2B70, void, RuntimeType_SanityCheckGenericArguments, (RuntimeType__Array * genericArguments, RuntimeType__Array * genericParamters, MethodInfo * method));
DO_APP_FUNC(0x01EE2DF0, void, RuntimeType_SplitName, (String * fullname, String * * name, String * * ns, MethodInfo * method));
DO_APP_FUNC(0x01EE2F10, void, RuntimeType_FilterHelper, (BindingFlags__Enum bindingFlags, String * * name, bool allowPrefixLookup, bool * prefixLookup, bool * ignoreCase, RuntimeType_MemberListType__Enum * listType, MethodInfo * method));
DO_APP_FUNC(0x01EE3160, void, RuntimeType_FilterHelper_1, (BindingFlags__Enum bindingFlags, String * * name, bool * ignoreCase, RuntimeType_MemberListType__Enum * listType, MethodInfo * method));
DO_APP_FUNC(0x01EE32E0, bool, RuntimeType_FilterApplyPrefixLookup, (MemberInfo_1 * memberInfo, String * name, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x01EE3530, bool, RuntimeType_FilterApplyBase, (MemberInfo_1 * memberInfo, BindingFlags__Enum bindingFlags, bool isPublic, bool isNonProtectedInternal, bool isStatic, String * name, bool prefixLookup, MethodInfo * method));
DO_APP_FUNC(0x01EE3780, bool, RuntimeType_FilterApplyType, (Type * type, BindingFlags__Enum bindingFlags, String * name, bool prefixLookup, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01EE3920, bool, RuntimeType_FilterApplyMethodInfo, (RuntimeMethodInfo * method_1, BindingFlags__Enum bindingFlags, CallingConventions__Enum callConv, Type__Array * argumentTypes, MethodInfo * method));
DO_APP_FUNC(0x01EE3A10, bool, RuntimeType_FilterApplyConstructorInfo, (RuntimeConstructorInfo * constructor, BindingFlags__Enum bindingFlags, CallingConventions__Enum callConv, Type__Array * argumentTypes, MethodInfo * method));
DO_APP_FUNC(0x01EE3B00, bool, RuntimeType_FilterApplyMethodBase, (MethodBase * methodBase, BindingFlags__Enum methodFlags, BindingFlags__Enum bindingFlags, CallingConventions__Enum callConv, Type__Array * argumentTypes, MethodInfo * method));
DO_APP_FUNC(0x01EE3E60, void, RuntimeType__ctor, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE3EC0, bool, RuntimeType_IsSpecialSerializableType, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE3FE0, RuntimeType_ListBuilder_1_System_Reflection_MethodInfo_, RuntimeType_GetMethodCandidates, (RuntimeType * __this, String * name, BindingFlags__Enum bindingAttr, CallingConventions__Enum callConv, Type__Array * types, bool allowPrefixLookup, MethodInfo * method));
DO_APP_FUNC(0x01EE4210, RuntimeType_ListBuilder_1_System_Reflection_ConstructorInfo_, RuntimeType_GetConstructorCandidates, (RuntimeType * __this, String * name, BindingFlags__Enum bindingAttr, CallingConventions__Enum callConv, Type__Array * types, bool allowPrefixLookup, MethodInfo * method));
DO_APP_FUNC(0x01EE4500, RuntimeType_ListBuilder_1_System_Reflection_PropertyInfo_, RuntimeType_GetPropertyCandidates, (RuntimeType * __this, String * name, BindingFlags__Enum bindingAttr, Type__Array * types, bool allowPrefixLookup, MethodInfo * method));
DO_APP_FUNC(0x01EE4730, RuntimeType_ListBuilder_1_System_Reflection_EventInfo_, RuntimeType_GetEventCandidates, (RuntimeType * __this, String * name, BindingFlags__Enum bindingAttr, bool allowPrefixLookup, MethodInfo * method));
DO_APP_FUNC(0x01EE4920, RuntimeType_ListBuilder_1_System_Reflection_FieldInfo_, RuntimeType_GetFieldCandidates, (RuntimeType * __this, String * name, BindingFlags__Enum bindingAttr, bool allowPrefixLookup, MethodInfo * method));
DO_APP_FUNC(0x01EE4B10, RuntimeType_ListBuilder_1_Type_, RuntimeType_GetNestedTypeCandidates, (RuntimeType * __this, String * fullname, BindingFlags__Enum bindingAttr, bool allowPrefixLookup, MethodInfo * method));
DO_APP_FUNC(0x01EE4D20, MethodInfo_1__Array *, RuntimeType_GetMethods, (RuntimeType * __this, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x01EE4E10, ConstructorInfo__Array *, RuntimeType_GetConstructors, (RuntimeType * __this, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x01EE4F00, PropertyInfo_1__Array *, RuntimeType_GetProperties, (RuntimeType * __this, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x01EE4FF0, EventInfo_1__Array *, RuntimeType_GetEvents, (RuntimeType * __this, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x01EE50D0, FieldInfo_1__Array *, RuntimeType_GetFields, (RuntimeType * __this, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x01EE51B0, MemberInfo_1__Array *, RuntimeType_GetMembers, (RuntimeType * __this, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x01EE5440, MethodInfo_1 *, RuntimeType_GetMethodImpl, (RuntimeType * __this, String * name, BindingFlags__Enum bindingAttr, Binder * binder, CallingConventions__Enum callConv, Type__Array * types, ParameterModifier__Array * modifiers, MethodInfo * method));
DO_APP_FUNC(0x01EE5720, ConstructorInfo *, RuntimeType_GetConstructorImpl, (RuntimeType * __this, BindingFlags__Enum bindingAttr, Binder * binder, CallingConventions__Enum callConvention, Type__Array * types, ParameterModifier__Array * modifiers, MethodInfo * method));
DO_APP_FUNC(0x01EE5990, PropertyInfo_1 *, RuntimeType_GetPropertyImpl, (RuntimeType * __this, String * name, BindingFlags__Enum bindingAttr, Binder * binder, Type * returnType, Type__Array * types, ParameterModifier__Array * modifiers, MethodInfo * method));
DO_APP_FUNC(0x01EE5C60, EventInfo_1 *, RuntimeType_GetEvent, (RuntimeType * __this, String * name, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x01EE5E20, FieldInfo_1 *, RuntimeType_GetField, (RuntimeType * __this, String * name, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x01EE61B0, Type *, RuntimeType_GetInterface, (RuntimeType * __this, String * fullname, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x01EE6670, Type *, RuntimeType_GetNestedType, (RuntimeType * __this, String * fullname, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x01EE68D0, MemberInfo_1__Array *, RuntimeType_GetMember, (RuntimeType * __this, String * name, MemberTypes__Enum type, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x01EE6CB0, Module *, RuntimeType_get_Module, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE6CB0, RuntimeModule *, RuntimeType_GetRuntimeModule, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE6CD0, Assembly *, RuntimeType_get_Assembly, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE6CD0, RuntimeAssembly *, RuntimeType_GetRuntimeAssembly, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01600C80, RuntimeTypeHandle, RuntimeType_get_TypeHandle, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE6CF0, bool, RuntimeType_IsInstanceOfType, (RuntimeType * __this, Object * o, MethodInfo * method));
DO_APP_FUNC(0x01EE6D20, bool, RuntimeType_IsSubclassOf, (RuntimeType * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x01EE6F00, bool, RuntimeType_IsAssignableFrom, (RuntimeType * __this, Type * c, MethodInfo * method));
DO_APP_FUNC(0x01EE7070, bool, RuntimeType_IsEquivalentTo, (RuntimeType * __this, Type * other, MethodInfo * method));
DO_APP_FUNC(0x01EE7170, Type *, RuntimeType_get_BaseType, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE7180, RuntimeType *, RuntimeType_GetBaseType, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, Type *, RuntimeType_get_UnderlyingSystemType, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE7420, TypeAttributes__Enum, RuntimeType_GetAttributeFlagsImpl, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE7450, bool, RuntimeType_IsContextfulImpl, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE7520, bool, RuntimeType_IsByRefImpl, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE7530, bool, RuntimeType_IsPrimitiveImpl, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE7560, bool, RuntimeType_IsPointerImpl, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x00B1B670, bool, RuntimeType_IsCOMObjectImpl, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE7570, bool, RuntimeType_IsValueTypeImpl, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE76B0, bool, RuntimeType_get_IsEnum, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE7770, bool, RuntimeType_HasElementTypeImpl, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE77D0, GenericParameterAttributes__Enum, RuntimeType_get_GenericParameterAttributes, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE78C0, bool, RuntimeType_get_IsSzArray, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE7920, bool, RuntimeType_IsArrayImpl, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE7950, int32_t, RuntimeType_GetArrayRank, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE7A30, Type *, RuntimeType_GetElementType, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE7AA0, String__Array *, RuntimeType_GetEnumNames, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE7BE0, Array *, RuntimeType_GetEnumValues, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE7DE0, Type *, RuntimeType_GetEnumUnderlyingType, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE7F10, bool, RuntimeType_IsEnumDefined, (RuntimeType * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01EE85A0, String *, RuntimeType_GetEnumName, (RuntimeType * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01EE8880, RuntimeType__Array *, RuntimeType_GetGenericArgumentsInternal, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE8940, Type__Array *, RuntimeType_GetGenericArguments, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE8A00, Type *, RuntimeType_MakeGenericType, (RuntimeType * __this, Type__Array * instantiation, MethodInfo * method));
DO_APP_FUNC(0x01EE8EA0, bool, RuntimeType_get_IsGenericTypeDefinition, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE8ED0, bool, RuntimeType_get_IsGenericParameter, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE8EF0, int32_t, RuntimeType_get_GenericParameterPosition, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE9020, Type *, RuntimeType_GetGenericTypeDefinition, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE9140, bool, RuntimeType_get_IsGenericType, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE9180, bool, RuntimeType_get_IsConstructedGenericType, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE91D0, Object *, RuntimeType_InvokeMember, (RuntimeType * __this, String * name, BindingFlags__Enum bindingFlags, Binder * binder, Object * target, Object__Array * providedArgs, ParameterModifier__Array * modifiers, CultureInfo * culture, String__Array * namedParams, MethodInfo * method));
DO_APP_FUNC(0x01EEA6F0, bool, RuntimeType_Equals, (RuntimeType * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x015F8190, bool, RuntimeType_op_Equality, (RuntimeType * left, RuntimeType * right, MethodInfo * method));
DO_APP_FUNC(0x015F81A0, bool, RuntimeType_op_Inequality, (RuntimeType * left, RuntimeType * right, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, Object *, RuntimeType_Clone, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEA700, void, RuntimeType_GetObjectData, (RuntimeType * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01EEA7D0, Object__Array *, RuntimeType_GetCustomAttributes, (RuntimeType * __this, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x01EEA8C0, Object__Array *, RuntimeType_GetCustomAttributes_1, (RuntimeType * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x01EEAA70, bool, RuntimeType_IsDefined, (RuntimeType * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x01EEAC20, IList_1_System_Reflection_CustomAttributeData_ *, RuntimeType_GetCustomAttributesData, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEACC0, String *, RuntimeType_FormatTypeName, (RuntimeType * __this, bool serialization, MethodInfo * method));
DO_APP_FUNC(0x01EEAEF0, MemberTypes__Enum, RuntimeType_get_MemberType, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEAF40, Type *, RuntimeType_get_ReflectedType, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEAF60, int32_t, RuntimeType_get_MetadataToken, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEAF90, void, RuntimeType_CreateInstanceCheckThis, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEB210, Object *, RuntimeType_CreateInstanceImpl, (RuntimeType * __this, BindingFlags__Enum bindingAttr, Binder * binder, Object__Array * args, CultureInfo * culture, Object__Array * activationAttributes, StackCrawlMark__Enum * stackMark, MethodInfo * method));
DO_APP_FUNC(0x01EEBA00, Object *, RuntimeType_CreateInstanceDefaultCtor, (RuntimeType * __this, bool publicOnly, bool skipCheckThis, bool fillCache, StackCrawlMark__Enum * stackMark, MethodInfo * method));
DO_APP_FUNC(0x01EEBB40, MonoCMethod *, RuntimeType_GetDefaultConstructor, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEBD80, String *, RuntimeType_GetDefaultMemberName, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEBEB0, RuntimeConstructorInfo *, RuntimeType_GetSerializationCtor, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEC1D0, Object *, RuntimeType_CreateInstanceSlow, (RuntimeType * __this, bool publicOnly, bool skipCheckThis, bool fillCache, StackCrawlMark__Enum * stackMark, MethodInfo * method));
DO_APP_FUNC(0x01EEC210, Object *, RuntimeType_CreateInstanceMono, (RuntimeType * __this, bool nonPublic, MethodInfo * method));
DO_APP_FUNC(0x01EEC560, Object *, RuntimeType_CheckValue, (RuntimeType * __this, Object * value, Binder * binder, CultureInfo * culture, BindingFlags__Enum invokeAttr, MethodInfo * method));
DO_APP_FUNC(0x01EEC7A0, Object *, RuntimeType_TryConvertToType, (RuntimeType * __this, Object * value, bool * failed, MethodInfo * method));
DO_APP_FUNC(0x01EECA70, Object *, RuntimeType_IsConvertibleToPrimitiveType, (Object * value, Type * targetType, MethodInfo * method));
DO_APP_FUNC(0x01EED600, String *, RuntimeType_GetCachedName, (RuntimeType * __this, TypeNameKind__Enum kind, MethodInfo * method));
DO_APP_FUNC(0x01EED6C0, Type *, RuntimeType_make_array_type, (RuntimeType * __this, int32_t rank, MethodInfo * method));
DO_APP_FUNC(0x01EED720, Type *, RuntimeType_MakeArrayType, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EED770, Type *, RuntimeType_MakeArrayType_1, (RuntimeType * __this, int32_t rank, MethodInfo * method));
DO_APP_FUNC(0x01EED870, Type *, RuntimeType_make_byref_type, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EED890, Type *, RuntimeType_MakeByRefType, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EED960, Type *, RuntimeType_MakePointerType, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x01EED990, Type *, RuntimeType_MakePointerType_1, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEDA40, bool, RuntimeType_get_ContainsGenericParameters, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEDB80, Type__Array *, RuntimeType_GetGenericParameterConstraints, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEDCA0, Object *, RuntimeType_CreateInstanceForAnotherGenericParameter, (Type * genericType, RuntimeType * genericArgument, MethodInfo * method));
DO_APP_FUNC(0x01EEDE80, Type *, RuntimeType_MakeGenericType_1, (Type * gt, Type__Array * types, MethodInfo * method));
DO_APP_FUNC(0x01EEDE90, void *, RuntimeType_GetMethodsByName_native, (RuntimeType * __this, void * namePtr, BindingFlags__Enum bindingAttr, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x01EEDEA0, RuntimeMethodInfo__Array *, RuntimeType_GetMethodsByName, (RuntimeType * __this, String * name, BindingFlags__Enum bindingAttr, bool ignoreCase, RuntimeType * reflectedType, MethodInfo * method));
DO_APP_FUNC(0x01EEE290, void *, RuntimeType_GetPropertiesByName_native, (RuntimeType * __this, void * name, BindingFlags__Enum bindingAttr, bool icase, MethodInfo * method));
DO_APP_FUNC(0x01EEE2A0, void *, RuntimeType_GetConstructors_native, (RuntimeType * __this, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x01EEE2B0, RuntimeConstructorInfo__Array *, RuntimeType_GetConstructors_internal, (RuntimeType * __this, BindingFlags__Enum bindingAttr, RuntimeType * reflectedType, MethodInfo * method));
DO_APP_FUNC(0x01EEE590, RuntimePropertyInfo__Array *, RuntimeType_GetPropertiesByName, (RuntimeType * __this, String * name, BindingFlags__Enum bindingAttr, bool icase, RuntimeType * reflectedType, MethodInfo * method));
DO_APP_FUNC(0x01EEEA90, TypeCode__Enum, RuntimeType_GetTypeCodeImpl, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEEB30, TypeCode__Enum, RuntimeType_GetTypeCodeImplInternal, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x01EEEB40, String *, RuntimeType_ToString, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, RuntimeType_IsGenericCOMObjectImpl, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEEB50, Object *, RuntimeType_CreateInstanceInternal, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x0173D7D0, MethodBase *, RuntimeType_get_DeclaringMethod, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEEBA0, String *, RuntimeType_getFullName, (RuntimeType * __this, bool full_name, bool assembly_qualified, MethodInfo * method));
DO_APP_FUNC(0x01EEEBB0, Type__Array *, RuntimeType_GetGenericArgumentsInternal_1, (RuntimeType * __this, bool runtimeArray, MethodInfo * method));
DO_APP_FUNC(0x01EEEBC0, GenericParameterAttributes__Enum, RuntimeType_GetGenericParameterAttributes, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEEBE0, int32_t, RuntimeType_GetGenericParameterPosition, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEEC30, void *, RuntimeType_GetEvents_native, (RuntimeType * __this, void * name, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x01EEEC40, void *, RuntimeType_GetFields_native, (RuntimeType * __this, void * name, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x01EEEC50, RuntimeFieldInfo__Array *, RuntimeType_GetFields_internal, (RuntimeType * __this, String * name, BindingFlags__Enum bindingAttr, RuntimeType * reflectedType, MethodInfo * method));
DO_APP_FUNC(0x01EEF120, RuntimeEventInfo__Array *, RuntimeType_GetEvents_internal, (RuntimeType * __this, String * name, BindingFlags__Enum bindingAttr, RuntimeType * reflectedType, MethodInfo * method));
DO_APP_FUNC(0x01EEF610, Type__Array *, RuntimeType_GetInterfaces, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEF620, void *, RuntimeType_GetNestedTypes_native, (RuntimeType * __this, void * name, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x01EEF630, RuntimeType__Array *, RuntimeType_GetNestedTypes_internal, (RuntimeType * __this, String * displayName, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x01EEF9A0, String *, RuntimeType_get_AssemblyQualifiedName, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEF9B0, Type *, RuntimeType_get_DeclaringType, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEF9C0, String *, RuntimeType_get_Name, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEFAA0, String *, RuntimeType_get_Namespace, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEFB00, int32_t, RuntimeType_GetHashCode, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEFC00, String *, RuntimeType_get_FullName, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEFDD0, bool, RuntimeType_get_IsSZArray, (RuntimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEFE40, void, RuntimeType__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02698FB0, void, ReflectionOnlyType__ctor, (ReflectionOnlyType * __this, MethodInfo * method));
DO_APP_FUNC(0x02699050, RuntimeTypeHandle, ReflectionOnlyType_get_TypeHandle, (ReflectionOnlyType * __this, MethodInfo * method));
DO_APP_FUNC(0x001D8570, int32_t, SByte_CompareTo, (SByte__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x001D8580, int32_t, SByte_CompareTo_1, (SByte__Boxed * __this, int8_t value, MethodInfo * method));
DO_APP_FUNC(0x001D8590, bool, SByte_Equals, (SByte__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x001D85A0, bool, SByte_Equals_1, (SByte__Boxed * __this, int8_t obj, MethodInfo * method));
DO_APP_FUNC(0x001D85B0, int32_t, SByte_GetHashCode, (SByte__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D85C0, String *, SByte_ToString, (SByte__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D85F0, String *, SByte_ToString_1, (SByte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D8620, String *, SByte_ToString_2, (SByte__Boxed * __this, String * format, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D8660, String *, SByte_ToString_3, (SByte__Boxed * __this, String * format, NumberFormatInfo * info, MethodInfo * method));
DO_APP_FUNC(0x01EF0A50, int8_t, SByte_Parse, (String * s, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01EF0A80, int8_t, SByte_Parse_1, (String * s, NumberStyles__Enum style, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01EF0AD0, int8_t, SByte_Parse_2, (String * s, NumberStyles__Enum style, NumberFormatInfo * info, MethodInfo * method));
DO_APP_FUNC(0x01EF0C60, bool, SByte_TryParse, (String * s, NumberStyles__Enum style, IFormatProvider * provider, int8_t * result, MethodInfo * method));
DO_APP_FUNC(0x01EF0D00, bool, SByte_TryParse_1, (String * s, NumberStyles__Enum style, NumberFormatInfo * info, int8_t * result, MethodInfo * method));
DO_APP_FUNC(0x001D8670, TypeCode__Enum, SByte_GetTypeCode, (SByte__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D8680, bool, SByte_System_IConvertible_ToBoolean, (SByte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D8720, uint16_t, SByte_System_IConvertible_ToChar, (SByte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0010E100, int8_t, SByte_System_IConvertible_ToSByte, (SByte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D8860, uint8_t, SByte_System_IConvertible_ToByte, (SByte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D89A0, int16_t, SByte_System_IConvertible_ToInt16, (SByte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D8A40, uint16_t, SByte_System_IConvertible_ToUInt16, (SByte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D8B80, int32_t, SByte_System_IConvertible_ToInt32, (SByte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D8B90, uint32_t, SByte_System_IConvertible_ToUInt32, (SByte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D8CD0, int64_t, SByte_System_IConvertible_ToInt64, (SByte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D8D70, uint64_t, SByte_System_IConvertible_ToUInt64, (SByte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D8EB0, float, SByte_System_IConvertible_ToSingle, (SByte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D8F50, double, SByte_System_IConvertible_ToDouble, (SByte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D8FF0, Decimal, SByte_System_IConvertible_ToDecimal, (SByte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D9140, DateTime, SByte_System_IConvertible_ToDateTime, (SByte__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D9150, Object *, SByte_System_IConvertible_ToType, (SByte__Boxed * __this, Type * type, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SerializableAttribute__ctor, (SerializableAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SharedStatics__ctor, (SharedStatics * __this, MethodInfo * method));
DO_APP_FUNC(0x01E259D0, Tokenizer_StringMaker *, SharedStatics_GetSharedStringMaker, (MethodInfo * method));
DO_APP_FUNC(0x01E25D30, void, SharedStatics_ReleaseSharedStringMaker, (Tokenizer_StringMaker * * maker, MethodInfo * method));
DO_APP_FUNC(0x01E25ED0, void, SharedStatics__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01E26010, bool, Single_IsInfinity, (float f, MethodInfo * method));
DO_APP_FUNC(0x01E26030, bool, Single_IsPositiveInfinity, (float f, MethodInfo * method));
DO_APP_FUNC(0x01E26050, bool, Single_IsNegativeInfinity, (float f, MethodInfo * method));
DO_APP_FUNC(0x01E26070, bool, Single_IsNaN, (float f, MethodInfo * method));
DO_APP_FUNC(0x01E26090, bool, Single_IsFinite, (float f, MethodInfo * method));
DO_APP_FUNC(0x001D4970, int32_t, Single_CompareTo, (Single__Boxed * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x001D4980, int32_t, Single_CompareTo_1, (Single__Boxed * __this, float value, MethodInfo * method));
DO_APP_FUNC(0x001D49E0, bool, Single_Equals, (Single__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x001D49F0, bool, Single_Equals_1, (Single__Boxed * __this, float obj, MethodInfo * method));
DO_APP_FUNC(0x0014A500, int32_t, Single_GetHashCode, (Single__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D4A30, String *, Single_ToString, (Single__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D4A60, String *, Single_ToString_1, (Single__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D4AA0, String *, Single_ToString_2, (Single__Boxed * __this, String * format, MethodInfo * method));
DO_APP_FUNC(0x001D4AE0, String *, Single_ToString_3, (Single__Boxed * __this, String * format, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01E263B0, float, Single_Parse, (String * s, MethodInfo * method));
DO_APP_FUNC(0x01E263E0, float, Single_Parse_1, (String * s, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01E26410, float, Single_Parse_2, (String * s, NumberStyles__Enum style, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01E26460, float, Single_Parse_3, (String * s, NumberStyles__Enum style, NumberFormatInfo * info, MethodInfo * method));
DO_APP_FUNC(0x01E26470, bool, Single_TryParse, (String * s, float * result, MethodInfo * method));
DO_APP_FUNC(0x01E264B0, bool, Single_TryParse_1, (String * s, NumberStyles__Enum style, IFormatProvider * provider, float * result, MethodInfo * method));
DO_APP_FUNC(0x01E26510, bool, Single_TryParse_2, (String * s, NumberStyles__Enum style, NumberFormatInfo * info, float * result, MethodInfo * method));
DO_APP_FUNC(0x001D4B20, TypeCode__Enum, Single_GetTypeCode, (Single__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D4B30, bool, Single_System_IConvertible_ToBoolean, (Single__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D4BF0, uint16_t, Single_System_IConvertible_ToChar, (Single__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D4C00, int8_t, Single_System_IConvertible_ToSByte, (Single__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D4D30, uint8_t, Single_System_IConvertible_ToByte, (Single__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D4E60, int16_t, Single_System_IConvertible_ToInt16, (Single__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D4F90, uint16_t, Single_System_IConvertible_ToUInt16, (Single__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D50C0, int32_t, Single_System_IConvertible_ToInt32, (Single__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D51F0, uint32_t, Single_System_IConvertible_ToUInt32, (Single__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D5320, int64_t, Single_System_IConvertible_ToInt64, (Single__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D5450, uint64_t, Single_System_IConvertible_ToUInt64, (Single__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0010FDD0, float, Single_System_IConvertible_ToSingle, (Single__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D5580, double, Single_System_IConvertible_ToDouble, (Single__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D5630, Decimal, Single_System_IConvertible_ToDecimal, (Single__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D5790, DateTime, Single_System_IConvertible_ToDateTime, (Single__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x001D57A0, Object *, Single_System_IConvertible_ToType, (Single__Boxed * __this, Type * type, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01E26AB0, void, StackOverflowException__ctor, (StackOverflowException * __this, MethodInfo * method));
DO_APP_FUNC(0x01E26B40, void, StackOverflowException__ctor_1, (StackOverflowException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, StackOverflowException__ctor_2, (StackOverflowException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01E26B60, String *, String_Join, (String * separator, String__Array * value, MethodInfo * method));
DO_APP_FUNC(0x01E26C40, String *, String_Join_1, (String * separator, IEnumerable_1_System_String_ * values, MethodInfo * method));
DO_APP_FUNC(0x01E26F60, String *, String_Join_2, (String * separator, String__Array * value, int32_t startIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E27360, int32_t, String_CompareOrdinalIgnoreCaseHelper, (String * strA, String * strB, MethodInfo * method));
DO_APP_FUNC(0x01E274A0, bool, String_EqualsHelper, (String * strA, String * strB, MethodInfo * method));
DO_APP_FUNC(0x01E27530, int32_t, String_CompareOrdinalHelper, (String * strA, String * strB, MethodInfo * method));
DO_APP_FUNC(0x01E276F0, bool, String_Equals, (String * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01E27800, bool, String_Equals_1, (String * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E278F0, bool, String_Equals_2, (String * __this, String * value, StringComparison__Enum comparisonType, MethodInfo * method));
DO_APP_FUNC(0x01E27CD0, bool, String_Equals_3, (String * a, String * b, MethodInfo * method));
DO_APP_FUNC(0x01E27D00, bool, String_Equals_4, (String * a, String * b, StringComparison__Enum comparisonType, MethodInfo * method));
DO_APP_FUNC(0x01E27CD0, bool, String_op_Equality, (String * a, String * b, MethodInfo * method));
DO_APP_FUNC(0x01E280E0, bool, String_op_Inequality, (String * a, String * b, MethodInfo * method));
DO_APP_FUNC(0x01E28120, uint16_t, String_get_Chars, (String * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01E281E0, void, String_CopyTo, (String * __this, int32_t sourceIndex, Char__Array * destination, int32_t destinationIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E28430, Char__Array *, String_ToCharArray, (String * __this, MethodInfo * method));
DO_APP_FUNC(0x01E28500, bool, String_IsNullOrEmpty, (String * value, MethodInfo * method));
DO_APP_FUNC(0x01E28510, bool, String_IsNullOrWhiteSpace, (String * value, MethodInfo * method));
DO_APP_FUNC(0x01E285F0, int32_t, String_GetHashCode, (String * __this, MethodInfo * method));
DO_APP_FUNC(0x01E285F0, int32_t, String_GetLegacyNonRandomizedHashCode, (String * __this, MethodInfo * method));
DO_APP_FUNC(0x01E28640, String__Array *, String_Split, (String * __this, Char__Array * separator, MethodInfo * method));
DO_APP_FUNC(0x01E28660, String__Array *, String_Split_1, (String * __this, Char__Array * separator, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E28680, String__Array *, String_Split_2, (String * __this, Char__Array * separator, StringSplitOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x01E286A0, String__Array *, String_SplitInternal, (String * __this, Char__Array * separator, int32_t count, StringSplitOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x01E288F0, String__Array *, String_Split_3, (String * __this, String__Array * separator, StringSplitOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x01E28910, String__Array *, String_Split_4, (String * __this, String__Array * separator, int32_t count, StringSplitOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x01E28BB0, String__Array *, String_InternalSplitKeepEmptyEntries, (String * __this, Int32__Array * sepList, Int32__Array * lengthList, int32_t numReplaces, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E28EB0, String__Array *, String_InternalSplitOmitEmptyEntries, (String * __this, Int32__Array * sepList, Int32__Array * lengthList, int32_t numReplaces, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E29260, int32_t, String_MakeSeparatorList, (String * __this, Char__Array * separator, Int32__Array * * sepList, MethodInfo * method));
DO_APP_FUNC(0x01E29460, int32_t, String_MakeSeparatorList_1, (String * __this, String__Array * separators, Int32__Array * * sepList, Int32__Array * * lengthList, MethodInfo * method));
DO_APP_FUNC(0x01E29620, String *, String_Substring, (String * __this, int32_t startIndex, MethodInfo * method));
DO_APP_FUNC(0x01E29630, String *, String_Substring_1, (String * __this, int32_t startIndex, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01E29840, String *, String_InternalSubString, (String * __this, int32_t startIndex, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01E298B0, String *, String_Trim, (String * __this, Char__Array * trimChars, MethodInfo * method));
DO_APP_FUNC(0x01E298E0, String *, String_TrimStart, (String * __this, Char__Array * trimChars, MethodInfo * method));
DO_APP_FUNC(0x01E299A0, String *, String_TrimEnd, (String * __this, Char__Array * trimChars, MethodInfo * method));
DO_APP_FUNC(0x01E29A50, void, String__ctor, (String * __this, uint16_t * value, MethodInfo * method));
DO_APP_FUNC(0x01E29A50, void, String__ctor_1, (String * __this, uint16_t * value, int32_t startIndex, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01E29A50, void, String__ctor_2, (String * __this, int8_t * value, MethodInfo * method));
DO_APP_FUNC(0x01E29A50, void, String__ctor_3, (String * __this, int8_t * value, int32_t startIndex, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01E29A60, void, String__ctor_4, (String * __this, int8_t * value, int32_t startIndex, int32_t length, Encoding * enc, MethodInfo * method));
DO_APP_FUNC(0x01E29A80, String *, String_CreateStringFromEncoding, (uint8_t * bytes, int32_t byteLength, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x01E29BB0, String *, String_Normalize, (String * __this, NormalizationForm__Enum normalizationForm, MethodInfo * method));
DO_APP_FUNC(0x01E29E00, String *, String_FastAllocateString, (int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01E29E10, void, String_FillStringChecked, (String * dest, int32_t destPos, String * src, MethodInfo * method));
DO_APP_FUNC(0x01E29A50, void, String__ctor_5, (String * __this, Char__Array * value, int32_t startIndex, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01E29A50, void, String__ctor_6, (String * __this, Char__Array * value, MethodInfo * method));
DO_APP_FUNC(0x01E29F00, void, String_wstrcpy, (uint16_t * dmem, uint16_t * smem, int32_t charCount, MethodInfo * method));
DO_APP_FUNC(0x01E29F10, String *, String_CtorCharArray, (String * __this, Char__Array * value, MethodInfo * method));
DO_APP_FUNC(0x01E2A000, String *, String_CtorCharArrayStartLength, (String * __this, Char__Array * value, int32_t startIndex, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01E2A210, int32_t, String_wcslen, (uint16_t * ptr, MethodInfo * method));
DO_APP_FUNC(0x01E2A270, String *, String_CtorCharPtr, (String * __this, uint16_t * ptr, MethodInfo * method));
DO_APP_FUNC(0x01E2A420, String *, String_CtorCharPtrStartLength, (String * __this, uint16_t * ptr, int32_t startIndex, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01E29A50, void, String__ctor_7, (String * __this, uint16_t c, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E2A640, int32_t, String_Compare, (String * strA, String * strB, MethodInfo * method));
DO_APP_FUNC(0x01E2A750, int32_t, String_Compare_1, (String * strA, String * strB, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x01E2A8E0, int32_t, String_Compare_2, (String * strA, String * strB, StringComparison__Enum comparisonType, MethodInfo * method));
DO_APP_FUNC(0x01E2ACB0, int32_t, String_Compare_3, (String * strA, String * strB, bool ignoreCase, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x01E2ADE0, int32_t, String_Compare_4, (String * strA, int32_t indexA, String * strB, int32_t indexB, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01E2AF50, int32_t, String_Compare_5, (String * strA, int32_t indexA, String * strB, int32_t indexB, int32_t length, bool ignoreCase, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x01E2B0F0, int32_t, String_Compare_6, (String * strA, int32_t indexA, String * strB, int32_t indexB, int32_t length, CultureInfo * culture, CompareOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x01E2B250, int32_t, String_Compare_7, (String * strA, int32_t indexA, String * strB, int32_t indexB, int32_t length, StringComparison__Enum comparisonType, MethodInfo * method));
DO_APP_FUNC(0x01E2B810, int32_t, String_CompareTo, (String * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01E2B930, int32_t, String_CompareTo_1, (String * __this, String * strB, MethodInfo * method));
DO_APP_FUNC(0x01E2BA50, int32_t, String_CompareOrdinal, (String * strA, String * strB, MethodInfo * method));
DO_APP_FUNC(0x01E2BA90, int32_t, String_CompareOrdinal_1, (String * strA, int32_t indexA, String * strB, int32_t indexB, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01E2BAD0, bool, String_Contains, (String * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E2BB00, bool, String_EndsWith, (String * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E2BB10, bool, String_EndsWith_1, (String * __this, String * value, StringComparison__Enum comparisonType, MethodInfo * method));
DO_APP_FUNC(0x01E2BED0, bool, String_EndsWith_2, (String * __this, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x01E2BF00, int32_t, String_IndexOf, (String * __this, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x01E2BF20, int32_t, String_IndexOf_1, (String * __this, uint16_t value, int32_t startIndex, MethodInfo * method));
DO_APP_FUNC(0x01E2BF40, int32_t, String_IndexOfAny, (String * __this, Char__Array * anyOf, MethodInfo * method));
DO_APP_FUNC(0x01E2BF60, int32_t, String_IndexOfAny_1, (String * __this, Char__Array * anyOf, int32_t startIndex, MethodInfo * method));
DO_APP_FUNC(0x01E2BF80, int32_t, String_IndexOf_2, (String * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E2BFA0, int32_t, String_IndexOf_3, (String * __this, String * value, int32_t startIndex, MethodInfo * method));
DO_APP_FUNC(0x01E2BFC0, int32_t, String_IndexOf_4, (String * __this, String * value, StringComparison__Enum comparisonType, MethodInfo * method));
DO_APP_FUNC(0x01E2BFF0, int32_t, String_IndexOf_5, (String * __this, String * value, int32_t startIndex, StringComparison__Enum comparisonType, MethodInfo * method));
DO_APP_FUNC(0x01E2C020, int32_t, String_IndexOf_6, (String * __this, String * value, int32_t startIndex, int32_t count, StringComparison__Enum comparisonType, MethodInfo * method));
DO_APP_FUNC(0x01E2C550, int32_t, String_LastIndexOf, (String * __this, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x01E2C570, int32_t, String_LastIndexOf_1, (String * __this, uint16_t value, int32_t startIndex, MethodInfo * method));
DO_APP_FUNC(0x01E2C590, int32_t, String_LastIndexOfAny, (String * __this, Char__Array * anyOf, MethodInfo * method));
DO_APP_FUNC(0x01E2C5B0, int32_t, String_LastIndexOfAny_1, (String * __this, Char__Array * anyOf, int32_t startIndex, MethodInfo * method));
DO_APP_FUNC(0x01E2C5D0, int32_t, String_LastIndexOf_2, (String * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E2C600, int32_t, String_LastIndexOf_3, (String * __this, String * value, StringComparison__Enum comparisonType, MethodInfo * method));
DO_APP_FUNC(0x01E2C630, int32_t, String_LastIndexOf_4, (String * __this, String * value, int32_t startIndex, int32_t count, StringComparison__Enum comparisonType, MethodInfo * method));
DO_APP_FUNC(0x01E2CBA0, String *, String_PadLeft, (String * __this, int32_t totalWidth, uint16_t paddingChar, MethodInfo * method));
DO_APP_FUNC(0x01E2CBC0, String *, String_PadRight, (String * __this, int32_t totalWidth, MethodInfo * method));
DO_APP_FUNC(0x01E2CBE0, String *, String_PadRight_1, (String * __this, int32_t totalWidth, uint16_t paddingChar, MethodInfo * method));
DO_APP_FUNC(0x01E2CC00, bool, String_StartsWith, (String * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E2CCD0, bool, String_StartsWith_1, (String * __this, String * value, StringComparison__Enum comparisonType, MethodInfo * method));
DO_APP_FUNC(0x01E2D090, String *, String_ToLower, (String * __this, MethodInfo * method));
DO_APP_FUNC(0x01E2D150, String *, String_ToLower_1, (String * __this, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x01E2D240, String *, String_ToLowerInvariant, (String * __this, MethodInfo * method));
DO_APP_FUNC(0x01E2D2F0, String *, String_ToUpper, (String * __this, MethodInfo * method));
DO_APP_FUNC(0x01E2D3B0, String *, String_ToUpper_1, (String * __this, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x01E2D4A0, String *, String_ToUpperInvariant, (String * __this, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, String *, String_ToString, (String * __this, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, String *, String_ToString_1, (String * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, Object *, String_Clone, (String * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, String_IsBOMWhitespace, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x01E2D550, String *, String_Trim_1, (String * __this, MethodInfo * method));
DO_APP_FUNC(0x01E2D560, String *, String_TrimHelper, (String * __this, int32_t trimType, MethodInfo * method));
DO_APP_FUNC(0x01E2D6D0, String *, String_TrimHelper_1, (String * __this, Char__Array * trimChars, int32_t trimType, MethodInfo * method));
DO_APP_FUNC(0x01E2D800, String *, String_CreateTrimmedString, (String * __this, int32_t start, int32_t end, MethodInfo * method));
DO_APP_FUNC(0x01E2D8E0, String *, String_Insert, (String * __this, int32_t startIndex, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E2DA90, String *, String_Replace, (String * __this, uint16_t oldChar, uint16_t newChar, MethodInfo * method));
DO_APP_FUNC(0x01E2DBC0, String *, String_Replace_1, (String * __this, String * oldValue, String * newValue, MethodInfo * method));
DO_APP_FUNC(0x01E2DD50, String *, String_Remove, (String * __this, int32_t startIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E2DF40, String *, String_Remove_1, (String * __this, int32_t startIndex, MethodInfo * method));
DO_APP_FUNC(0x01E2E060, String *, String_Format, (String * format, Object * arg0, MethodInfo * method));
DO_APP_FUNC(0x01E2E0C0, String *, String_Format_1, (String * format, Object * arg0, Object * arg1, MethodInfo * method));
DO_APP_FUNC(0x01E2E120, String *, String_Format_2, (String * format, Object * arg0, Object * arg1, Object * arg2, MethodInfo * method));
DO_APP_FUNC(0x01E2E180, String *, String_Format_3, (String * format, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x01E2E2F0, String *, String_Format_4, (IFormatProvider * provider, String * format, Object * arg0, MethodInfo * method));
DO_APP_FUNC(0x01E2E360, String *, String_Format_5, (IFormatProvider * provider, String * format, Object * arg0, Object * arg1, MethodInfo * method));
DO_APP_FUNC(0x01E2E3D0, String *, String_Format_6, (IFormatProvider * provider, String * format, Object * arg0, Object * arg1, Object * arg2, MethodInfo * method));
DO_APP_FUNC(0x01E2E450, String *, String_Format_7, (IFormatProvider * provider, String * format, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x01E2E5D0, String *, String_FormatHelper, (IFormatProvider * provider, String * format, ParamsArray args, MethodInfo * method));
DO_APP_FUNC(0x01E2E730, String *, String_Copy, (String * str, MethodInfo * method));
DO_APP_FUNC(0x01E2E820, String *, String_Concat, (Object * arg0, MethodInfo * method));
DO_APP_FUNC(0x01E2E8C0, String *, String_Concat_1, (Object * arg0, Object * arg1, MethodInfo * method));
DO_APP_FUNC(0x01E2E9C0, String *, String_Concat_2, (Object * arg0, Object * arg1, Object * arg2, MethodInfo * method));
DO_APP_FUNC(0x01E2EB00, String *, String_Concat_3, (Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x01E2ED50, String *, String_Concat_4, (String * str0, String * str1, MethodInfo * method));
DO_APP_FUNC(0x01E2EE50, String *, String_Concat_5, (String * str0, String * str1, String * str2, MethodInfo * method));
DO_APP_FUNC(0x01E2EFA0, String *, String_Concat_6, (String * str0, String * str1, String * str2, String * str3, MethodInfo * method));
DO_APP_FUNC(0x01E2F140, String *, String_ConcatArray, (String__Array * values, int32_t totalLength, MethodInfo * method));
DO_APP_FUNC(0x01E2F200, String *, String_Concat_7, (String__Array * values, MethodInfo * method));
DO_APP_FUNC(0x00E3D980, TypeCode__Enum, String_GetTypeCode, (String * __this, MethodInfo * method));
DO_APP_FUNC(0x01E2F3C0, bool, String_System_IConvertible_ToBoolean, (String * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01E2F4F0, uint16_t, String_System_IConvertible_ToChar, (String * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01E2F670, int8_t, String_System_IConvertible_ToSByte, (String * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01E2F740, uint8_t, String_System_IConvertible_ToByte, (String * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01E2F820, int16_t, String_System_IConvertible_ToInt16, (String * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01E2F900, uint16_t, String_System_IConvertible_ToUInt16, (String * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01E2F9E0, int32_t, String_System_IConvertible_ToInt32, (String * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01E2FAC0, uint32_t, String_System_IConvertible_ToUInt32, (String * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01E2FBA0, int64_t, String_System_IConvertible_ToInt64, (String * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01E2FC80, uint64_t, String_System_IConvertible_ToUInt64, (String * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01E2FD60, float, String_System_IConvertible_ToSingle, (String * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01E2FE40, double, String_System_IConvertible_ToDouble, (String * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01E2FEF0, Decimal, String_System_IConvertible_ToDecimal, (String * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01E2FFC0, DateTime, String_System_IConvertible_ToDateTime, (String * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01E30110, Object *, String_System_IConvertible_ToType, (String * __this, Type * type, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01E301D0, IEnumerator_1_System_Char_ *, String_System_Collections_Generic_IEnumerable_System_Char__GetEnumerator, (String * __this, MethodInfo * method));
DO_APP_FUNC(0x01E30320, IEnumerator *, String_System_Collections_IEnumerable_GetEnumerator, (String * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, String_get_Length, (String * __this, MethodInfo * method));
DO_APP_FUNC(0x01E30470, int32_t, String_CompareOrdinalUnchecked, (String * strA, int32_t indexA, int32_t lenA, String * strB, int32_t indexB, int32_t lenB, MethodInfo * method));
DO_APP_FUNC(0x01E30600, int32_t, String_IndexOf_7, (String * __this, uint16_t value, int32_t startIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E307A0, int32_t, String_IndexOfUnchecked, (String * __this, uint16_t value, int32_t startIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E308A0, int32_t, String_IndexOfUnchecked_1, (String * __this, String * value, int32_t startIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E309C0, int32_t, String_IndexOfAny_2, (String * __this, Char__Array * anyOf, int32_t startIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E30BF0, int32_t, String_IndexOfAnyUnchecked, (String * __this, Char__Array * anyOf, int32_t startIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E30D20, int32_t, String_LastIndexOf_5, (String * __this, uint16_t value, int32_t startIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E30EB0, int32_t, String_LastIndexOfUnchecked, (String * __this, uint16_t value, int32_t startIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E30FC0, int32_t, String_LastIndexOfAny_2, (String * __this, Char__Array * anyOf, int32_t startIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E311F0, int32_t, String_LastIndexOfAnyUnchecked, (String * __this, Char__Array * anyOf, int32_t startIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E312B0, int32_t, String_nativeCompareOrdinalEx, (String * strA, int32_t indexA, String * strB, int32_t indexB, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E31490, String *, String_ReplaceInternal, (String * __this, uint16_t oldChar, uint16_t newChar, MethodInfo * method));
DO_APP_FUNC(0x01E315A0, String *, String_ReplaceInternal_1, (String * __this, String * oldValue, String * newValue, MethodInfo * method));
DO_APP_FUNC(0x01E316E0, String *, String_ReplaceUnchecked, (String * __this, String * oldValue, String * newValue, MethodInfo * method));
DO_APP_FUNC(0x01E31A80, String *, String_ReplaceFallback, (String * __this, String * oldValue, String * newValue, int32_t testedCount, MethodInfo * method));
DO_APP_FUNC(0x01E31CE0, String *, String_PadHelper, (String * __this, int32_t totalWidth, uint16_t paddingChar, bool isRightPadded, MethodInfo * method));
DO_APP_FUNC(0x01E31EE0, bool, String_StartsWithOrdinalUnchecked, (String * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E31F30, bool, String_IsAscii, (String * __this, MethodInfo * method));
DO_APP_FUNC(0x01E31F60, void, String_CharCopy, (uint16_t * dest, uint16_t * src, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E31FB0, void, String_memset, (uint8_t * dest, int32_t val, int32_t len, MethodInfo * method));
DO_APP_FUNC(0x01E32090, void, String_memcpy, (uint8_t * dest, uint8_t * src, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01E320A0, void, String_bzero, (uint8_t * dest, int32_t len, MethodInfo * method));
DO_APP_FUNC(0x01E32150, void, String_bzero_aligned_1, (uint8_t * dest, int32_t len, MethodInfo * method));
DO_APP_FUNC(0x01E32160, void, String_bzero_aligned_2, (uint8_t * dest, int32_t len, MethodInfo * method));
DO_APP_FUNC(0x01E32170, void, String_bzero_aligned_4, (uint8_t * dest, int32_t len, MethodInfo * method));
DO_APP_FUNC(0x01E32180, void, String_bzero_aligned_8, (uint8_t * dest, int32_t len, MethodInfo * method));
DO_APP_FUNC(0x01E32190, void, String_memcpy_aligned_1, (uint8_t * dest, uint8_t * src, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01E321A0, void, String_memcpy_aligned_2, (uint8_t * dest, uint8_t * src, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01E321B0, void, String_memcpy_aligned_4, (uint8_t * dest, uint8_t * src, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01E321C0, void, String_memcpy_aligned_8, (uint8_t * dest, uint8_t * src, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01E321D0, String *, String_CreateString, (String * __this, int8_t * value, MethodInfo * method));
DO_APP_FUNC(0x01E322D0, String *, String_CreateString_1, (String * __this, int8_t * value, int32_t startIndex, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01E322F0, String *, String_CreateString_2, (String * __this, uint16_t * value, MethodInfo * method));
DO_APP_FUNC(0x01E32300, String *, String_CreateString_3, (String * __this, uint16_t * value, int32_t startIndex, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01E32310, String *, String_CreateString_4, (String * __this, Char__Array * val, int32_t startIndex, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01E32320, String *, String_CreateString_5, (String * __this, Char__Array * val, MethodInfo * method));
DO_APP_FUNC(0x01E32410, String *, String_CreateString_6, (String * __this, uint16_t c, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E32540, String *, String_CreateString_7, (String * __this, int8_t * value, int32_t startIndex, int32_t length, Encoding * enc, MethodInfo * method));
DO_APP_FUNC(0x0243D830, StringComparer *, StringComparer_get_InvariantCultureIgnoreCase, (MethodInfo * method));
DO_APP_FUNC(0x0243D8D0, StringComparer *, StringComparer_get_CurrentCultureIgnoreCase, (MethodInfo * method));
DO_APP_FUNC(0x0243DA60, StringComparer *, StringComparer_get_Ordinal, (MethodInfo * method));
DO_APP_FUNC(0x0243DB00, StringComparer *, StringComparer_get_OrdinalIgnoreCase, (MethodInfo * method));
DO_APP_FUNC(0x0243DBA0, StringComparer *, StringComparer_Create, (CultureInfo * culture, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x0243DD30, int32_t, StringComparer_Compare, (StringComparer * __this, Object * x, Object * y, MethodInfo * method));
DO_APP_FUNC(0x0243DE90, bool, StringComparer_Equals, (StringComparer * __this, Object * x, Object * y, MethodInfo * method));
DO_APP_FUNC(0x0243DF90, int32_t, StringComparer_GetHashCode, (StringComparer * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, StringComparer__ctor, (StringComparer * __this, MethodInfo * method));
DO_APP_FUNC(0x0243E0A0, void, StringComparer__cctor, (MethodInfo * method));
DO_APP_FUNC(0x028A0750, void, CultureAwareComparer__ctor, (CultureAwareComparer * __this, CultureInfo * culture, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x028A0830, int32_t, CultureAwareComparer_Compare, (CultureAwareComparer * __this, String * x, String * y, MethodInfo * method));
DO_APP_FUNC(0x028A0890, bool, CultureAwareComparer_Equals, (CultureAwareComparer * __this, String * x, String * y, MethodInfo * method));
DO_APP_FUNC(0x028A08F0, int32_t, CultureAwareComparer_GetHashCode, (CultureAwareComparer * __this, String * obj, MethodInfo * method));
DO_APP_FUNC(0x028A0AC0, bool, CultureAwareComparer_Equals_1, (CultureAwareComparer * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x028A0BB0, int32_t, CultureAwareComparer_GetHashCode_1, (CultureAwareComparer * __this, MethodInfo * method));
DO_APP_FUNC(0x0227C1D0, void, OrdinalComparer__ctor, (OrdinalComparer * __this, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x0227C270, int32_t, OrdinalComparer_Compare, (OrdinalComparer * __this, String * x, String * y, MethodInfo * method));
DO_APP_FUNC(0x0227C3C0, bool, OrdinalComparer_Equals, (OrdinalComparer * __this, String * x, String * y, MethodInfo * method));
DO_APP_FUNC(0x0227C520, int32_t, OrdinalComparer_GetHashCode, (OrdinalComparer * __this, String * obj, MethodInfo * method));
DO_APP_FUNC(0x0227C630, bool, OrdinalComparer_Equals_1, (OrdinalComparer * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0227C6F0, int32_t, OrdinalComparer_GetHashCode_1, (OrdinalComparer * __this, MethodInfo * method));
DO_APP_FUNC(0x0243E4C0, void, SystemException__ctor, (SystemException * __this, MethodInfo * method));
DO_APP_FUNC(0x0243E580, void, SystemException__ctor_1, (SystemException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x0243E640, void, SystemException__ctor_2, (SystemException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x0243E700, void, SystemException__ctor_3, (SystemException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, STAThreadAttribute__ctor, (STAThreadAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ThreadStaticAttribute__ctor, (ThreadStaticAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x027BB380, void, TimeoutException__ctor, (TimeoutException * __this, MethodInfo * method));
DO_APP_FUNC(0x027BB410, void, TimeoutException__ctor_1, (TimeoutException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, TimeoutException__ctor_2, (TimeoutException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, TimeSpan__ctor, (TimeSpan__Boxed * __this, int64_t ticks, MethodInfo * method));
DO_APP_FUNC(0x002034B0, void, TimeSpan__ctor_1, (TimeSpan__Boxed * __this, int32_t hours, int32_t minutes, int32_t seconds, MethodInfo * method));
DO_APP_FUNC(0x002034C0, void, TimeSpan__ctor_2, (TimeSpan__Boxed * __this, int32_t days, int32_t hours, int32_t minutes, int32_t seconds, MethodInfo * method));
DO_APP_FUNC(0x002034F0, void, TimeSpan__ctor_3, (TimeSpan__Boxed * __this, int32_t days, int32_t hours, int32_t minutes, int32_t seconds, int32_t milliseconds, MethodInfo * method));
DO_APP_FUNC(0x00107C00, int64_t, TimeSpan_get_Ticks, (TimeSpan__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00203500, int32_t, TimeSpan_get_Days, (TimeSpan__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00203520, int32_t, TimeSpan_get_Hours, (TimeSpan__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00203560, int32_t, TimeSpan_get_Milliseconds, (TimeSpan__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002035B0, int32_t, TimeSpan_get_Minutes, (TimeSpan__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00203600, int32_t, TimeSpan_get_Seconds, (TimeSpan__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00203650, double, TimeSpan_get_TotalDays, (TimeSpan__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00203670, double, TimeSpan_get_TotalHours, (TimeSpan__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00203690, double, TimeSpan_get_TotalMilliseconds, (TimeSpan__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002036D0, double, TimeSpan_get_TotalMinutes, (TimeSpan__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002036F0, double, TimeSpan_get_TotalSeconds, (TimeSpan__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00203710, TimeSpan, TimeSpan_Add, (TimeSpan__Boxed * __this, TimeSpan ts, MethodInfo * method));
DO_APP_FUNC(0x027AD040, int32_t, TimeSpan_Compare, (TimeSpan t1, TimeSpan t2, MethodInfo * method));
DO_APP_FUNC(0x00203720, int32_t, TimeSpan_CompareTo, (TimeSpan__Boxed * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x00203730, int32_t, TimeSpan_CompareTo_1, (TimeSpan__Boxed * __this, TimeSpan value, MethodInfo * method));
DO_APP_FUNC(0x027AD180, TimeSpan, TimeSpan_FromDays, (double value, MethodInfo * method));
DO_APP_FUNC(0x00203750, TimeSpan, TimeSpan_Duration, (TimeSpan__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00203850, bool, TimeSpan_Equals, (TimeSpan__Boxed * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0012F2C0, bool, TimeSpan_Equals_1, (TimeSpan__Boxed * __this, TimeSpan obj, MethodInfo * method));
DO_APP_FUNC(0x00154D60, int32_t, TimeSpan_GetHashCode, (TimeSpan__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x027AD300, TimeSpan, TimeSpan_FromHours, (double value, MethodInfo * method));
DO_APP_FUNC(0x027AD3B0, TimeSpan, TimeSpan_Interval, (double value, int32_t scale, MethodInfo * method));
DO_APP_FUNC(0x027AD550, TimeSpan, TimeSpan_FromMilliseconds, (double value, MethodInfo * method));
DO_APP_FUNC(0x027AD600, TimeSpan, TimeSpan_FromMinutes, (double value, MethodInfo * method));
DO_APP_FUNC(0x00203860, TimeSpan, TimeSpan_Negate, (TimeSpan__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x027AD7B0, TimeSpan, TimeSpan_FromSeconds, (double value, MethodInfo * method));
DO_APP_FUNC(0x00203870, TimeSpan, TimeSpan_Subtract, (TimeSpan__Boxed * __this, TimeSpan ts, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, TimeSpan, TimeSpan_FromTicks, (int64_t value, MethodInfo * method));
DO_APP_FUNC(0x027AD950, int64_t, TimeSpan_TimeToTicks, (int32_t hour, int32_t minute, int32_t second, MethodInfo * method));
DO_APP_FUNC(0x027ADA50, TimeSpan, TimeSpan_Parse, (String * s, MethodInfo * method));
DO_APP_FUNC(0x027ADAF0, TimeSpan, TimeSpan_Parse_1, (String * input, IFormatProvider * formatProvider, MethodInfo * method));
DO_APP_FUNC(0x027ADBA0, bool, TimeSpan_TryParse, (String * s, TimeSpan * result, MethodInfo * method));
DO_APP_FUNC(0x00203880, String *, TimeSpan_ToString, (TimeSpan__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00203890, String *, TimeSpan_ToString_1, (TimeSpan__Boxed * __this, String * format, MethodInfo * method));
DO_APP_FUNC(0x002038A0, String *, TimeSpan_ToString_2, (TimeSpan__Boxed * __this, String * format, IFormatProvider * formatProvider, MethodInfo * method));
DO_APP_FUNC(0x027ADF80, TimeSpan, TimeSpan_op_Subtraction, (TimeSpan t1, TimeSpan t2, MethodInfo * method));
DO_APP_FUNC(0x027ADFA0, TimeSpan, TimeSpan_op_Addition, (TimeSpan t1, TimeSpan t2, MethodInfo * method));
DO_APP_FUNC(0x015F8190, bool, TimeSpan_op_Equality, (TimeSpan t1, TimeSpan t2, MethodInfo * method));
DO_APP_FUNC(0x015F81A0, bool, TimeSpan_op_Inequality, (TimeSpan t1, TimeSpan t2, MethodInfo * method));
DO_APP_FUNC(0x027ADFC0, bool, TimeSpan_op_LessThan, (TimeSpan t1, TimeSpan t2, MethodInfo * method));
DO_APP_FUNC(0x027ADFD0, bool, TimeSpan_op_LessThanOrEqual, (TimeSpan t1, TimeSpan t2, MethodInfo * method));
DO_APP_FUNC(0x027ADFE0, bool, TimeSpan_op_GreaterThan, (TimeSpan t1, TimeSpan t2, MethodInfo * method));
DO_APP_FUNC(0x027ADFF0, bool, TimeSpan_op_GreaterThanOrEqual, (TimeSpan t1, TimeSpan t2, MethodInfo * method));
DO_APP_FUNC(0x027AE000, bool, TimeSpan_GetLegacyFormatMode, (MethodInfo * method));
DO_APP_FUNC(0x027AE0A0, bool, TimeSpan_get_LegacyMode, (MethodInfo * method));
DO_APP_FUNC(0x027AE260, void, TimeSpan__cctor, (MethodInfo * method));
DO_APP_FUNC(0x027AE7B0, bool, TimeZoneInfo_UtcOffsetOutOfRange, (TimeSpan offset, MethodInfo * method));
DO_APP_FUNC(0x027AE7E0, List_1_System_TimeZoneInfo_AdjustmentRule_ *, TimeZoneInfo_CreateAdjustmentRule, (int32_t year, Int64__Array * * data, String__Array * * names, String * standardNameCurrentYear, String * daylightNameCurrentYear, MethodInfo * method));
DO_APP_FUNC(0x027AED10, TimeZoneInfo *, TimeZoneInfo_CreateLocalUnity, (MethodInfo * method));
DO_APP_FUNC(0x027AEE70, uint32_t, TimeZoneInfo_EnumDynamicTimeZoneInformation, (uint32_t dwIndex, TimeZoneInfo_DYNAMIC_TIME_ZONE_INFORMATION * lpTimeZoneInformation, MethodInfo * method));
DO_APP_FUNC(0x027AEFA0, uint32_t, TimeZoneInfo_GetDynamicTimeZoneInformation, (TimeZoneInfo_DYNAMIC_TIME_ZONE_INFORMATION * pTimeZoneInformation, MethodInfo * method));
DO_APP_FUNC(0x027AF0C0, uint32_t, TimeZoneInfo_GetDynamicTimeZoneInformationWin32, (TimeZoneInfo_DYNAMIC_TIME_ZONE_INFORMATION * pTimeZoneInformation, MethodInfo * method));
DO_APP_FUNC(0x027AF1E0, uint32_t, TimeZoneInfo_GetDynamicTimeZoneInformationEffectiveYears, (TimeZoneInfo_DYNAMIC_TIME_ZONE_INFORMATION * lpTimeZoneInformation, uint32_t * FirstYear, uint32_t * LastYear, MethodInfo * method));
DO_APP_FUNC(0x027AF330, bool, TimeZoneInfo_GetTimeZoneInformationForYear, (uint16_t wYear, TimeZoneInfo_DYNAMIC_TIME_ZONE_INFORMATION * pdtzi, TimeZoneInfo_TIME_ZONE_INFORMATION * ptzi, MethodInfo * method));
DO_APP_FUNC(0x027AF510, TimeZoneInfo_AdjustmentRule *, TimeZoneInfo_CreateAdjustmentRuleFromTimeZoneInformation, (TimeZoneInfo_DYNAMIC_TIME_ZONE_INFORMATION * timeZoneInformation, DateTime startDate, DateTime endDate, int32_t defaultBaseUtcOffset, MethodInfo * method));
DO_APP_FUNC(0x027AFAA0, bool, TimeZoneInfo_TransitionTimeFromTimeZoneInformation, (TimeZoneInfo_DYNAMIC_TIME_ZONE_INFORMATION timeZoneInformation, TimeZoneInfo_TransitionTime * transitionTime, bool readStartDate, MethodInfo * method));
DO_APP_FUNC(0x027AFC90, TimeZoneInfo *, TimeZoneInfo_TryCreateTimeZone, (TimeZoneInfo_DYNAMIC_TIME_ZONE_INFORMATION timeZoneInformation, MethodInfo * method));
DO_APP_FUNC(0x027B04A0, TimeZoneInfo *, TimeZoneInfo_GetLocalTimeZoneInfoWinRTFallback, (MethodInfo * method));
DO_APP_FUNC(0x027B0670, String *, TimeZoneInfo_GetLocalTimeZoneKeyNameWin32Fallback, (MethodInfo * method));
DO_APP_FUNC(0x027B0800, TimeZoneInfo *, TimeZoneInfo_FindSystemTimeZoneByIdWinRTFallback, (String * id, MethodInfo * method));
DO_APP_FUNC(0x027B0B10, List_1_System_TimeZoneInfo_ *, TimeZoneInfo_GetSystemTimeZonesWinRTFallback, (MethodInfo * method));
DO_APP_FUNC(0x002FA280, TimeSpan, TimeZoneInfo_get_BaseUtcOffset, (TimeZoneInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, TimeZoneInfo_get_DisplayName, (TimeZoneInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, TimeZoneInfo_get_Id, (TimeZoneInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x027B0E20, TimeZoneInfo *, TimeZoneInfo_get_Local, (MethodInfo * method));
DO_APP_FUNC(0x027B0F10, int32_t, TimeZoneInfo_readlink, (String * path, Byte__Array * buffer, int32_t buflen, MethodInfo * method));
DO_APP_FUNC(0x027B10B0, String *, TimeZoneInfo_readlink_1, (String * path, MethodInfo * method));
DO_APP_FUNC(0x027B1360, bool, TimeZoneInfo_TryGetNameFromPath, (String * path, String * * name, MethodInfo * method));
DO_APP_FUNC(0x027B1600, TimeZoneInfo *, TimeZoneInfo_CreateLocal, (MethodInfo * method));
DO_APP_FUNC(0x027B1B80, TimeZoneInfo *, TimeZoneInfo_FindSystemTimeZoneByIdCore, (String * id, MethodInfo * method));
DO_APP_FUNC(0x027B1C40, void, TimeZoneInfo_GetSystemTimeZonesCore, (List_1_System_TimeZoneInfo_ * systemTimeZones, MethodInfo * method));
DO_APP_FUNC(0x00446590, bool, TimeZoneInfo_get_SupportsDaylightSavingTime, (TimeZoneInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x027B2790, TimeZoneInfo *, TimeZoneInfo_get_Utc, (MethodInfo * method));
DO_APP_FUNC(0x027B2860, String *, TimeZoneInfo_get_TimeZoneDirectory, (MethodInfo * method));
DO_APP_FUNC(0x027B2910, bool, TimeZoneInfo_get_IsWindows, (MethodInfo * method));
DO_APP_FUNC(0x027B2950, String *, TimeZoneInfo_TrimSpecial, (String * str, MethodInfo * method));
DO_APP_FUNC(0x027B2AB0, RegistryKey *, TimeZoneInfo_get_TimeZoneKey, (MethodInfo * method));
DO_APP_FUNC(0x027B2BF0, RegistryKey *, TimeZoneInfo_get_LocalZoneKey, (MethodInfo * method));
DO_APP_FUNC(0x027B2D30, bool, TimeZoneInfo_TryAddTicks, (DateTime date, int64_t ticks, DateTime * result, DateTimeKind__Enum kind, MethodInfo * method));
DO_APP_FUNC(0x027B2EF0, DateTime, TimeZoneInfo_ConvertTime, (DateTime dateTime, TimeZoneInfo * sourceTimeZone, TimeZoneInfo * destinationTimeZone, MethodInfo * method));
DO_APP_FUNC(0x027B31F0, DateTime, TimeZoneInfo_ConvertTimeFromUtc, (TimeZoneInfo * __this, DateTime dateTime, MethodInfo * method));
DO_APP_FUNC(0x027B33D0, DateTime, TimeZoneInfo_ConvertTimeFromUtc_1, (DateTime dateTime, TimeZoneInfo * destinationTimeZone, MethodInfo * method));
DO_APP_FUNC(0x027B3490, DateTime, TimeZoneInfo_ConvertTimeToUtc, (DateTime dateTime, TimeZoneInfoOptions__Enum flags, MethodInfo * method));
DO_APP_FUNC(0x027B34D0, DateTime, TimeZoneInfo_ConvertTimeToUtc_1, (DateTime dateTime, TimeZoneInfo * sourceTimeZone, MethodInfo * method));
DO_APP_FUNC(0x027B34E0, DateTime, TimeZoneInfo_ConvertTimeToUtc_2, (DateTime dateTime, TimeZoneInfo * sourceTimeZone, TimeZoneInfoOptions__Enum flags, MethodInfo * method));
DO_APP_FUNC(0x027B3710, TimeSpan, TimeZoneInfo_GetDateTimeNowUtcOffsetFromUtc, (DateTime time, bool * isAmbiguousLocalDst, MethodInfo * method));
DO_APP_FUNC(0x027B3780, TimeZoneInfo *, TimeZoneInfo_CreateCustomTimeZone, (String * id, TimeSpan baseUtcOffset, String * displayName, String * standardDisplayName, MethodInfo * method));
DO_APP_FUNC(0x027B37B0, TimeZoneInfo *, TimeZoneInfo_CreateCustomTimeZone_1, (String * id, TimeSpan baseUtcOffset, String * displayName, String * standardDisplayName, String * daylightDisplayName, TimeZoneInfo_AdjustmentRule__Array * adjustmentRules, MethodInfo * method));
DO_APP_FUNC(0x027B37E0, TimeZoneInfo *, TimeZoneInfo_CreateCustomTimeZone_2, (String * id, TimeSpan baseUtcOffset, String * displayName, String * standardDisplayName, String * daylightDisplayName, TimeZoneInfo_AdjustmentRule__Array * adjustmentRules, bool disableDaylightSavingTime, MethodInfo * method));
DO_APP_FUNC(0x027B3980, bool, TimeZoneInfo_Equals, (TimeZoneInfo * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x027B3A70, bool, TimeZoneInfo_Equals_1, (TimeZoneInfo * __this, TimeZoneInfo * other, MethodInfo * method));
DO_APP_FUNC(0x027B3AE0, TimeZoneInfo *, TimeZoneInfo_FindSystemTimeZoneById, (String * id, MethodInfo * method));
DO_APP_FUNC(0x027B3D60, TimeZoneInfo *, TimeZoneInfo_FindSystemTimeZoneByFileName, (String * id, String * filepath, MethodInfo * method));
DO_APP_FUNC(0x027B3EF0, TimeZoneInfo *, TimeZoneInfo_FromRegistryKey, (String * id, RegistryKey * key, MethodInfo * method));
DO_APP_FUNC(0x027B43B0, void, TimeZoneInfo_ParseRegTzi, (List_1_System_TimeZoneInfo_AdjustmentRule_ * adjustmentRules, int32_t start_year, int32_t end_year, Byte__Array * buffer, MethodInfo * method));
DO_APP_FUNC(0x027B4780, TimeZoneInfo_AdjustmentRule__Array *, TimeZoneInfo_GetAdjustmentRules, (TimeZoneInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x027B48E0, int32_t, TimeZoneInfo_GetHashCode, (TimeZoneInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x027B4AD0, void, TimeZoneInfo_System_Runtime_Serialization_ISerializable_GetObjectData, (TimeZoneInfo * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027B4C40, ReadOnlyCollection_1_System_TimeZoneInfo_ *, TimeZoneInfo_GetSystemTimeZones, (MethodInfo * method));
DO_APP_FUNC(0x027B4EB0, TimeSpan, TimeZoneInfo_GetUtcOffset, (TimeZoneInfo * __this, DateTime dateTime, MethodInfo * method));
DO_APP_FUNC(0x027B4ED0, TimeSpan, TimeZoneInfo_GetUtcOffset_1, (TimeZoneInfo * __this, DateTime dateTime, bool * isDST, MethodInfo * method));
DO_APP_FUNC(0x027B4FD0, TimeSpan, TimeZoneInfo_GetUtcOffsetHelper, (DateTime dateTime, TimeZoneInfo * tz, bool * isDST, MethodInfo * method));
DO_APP_FUNC(0x027B52D0, bool, TimeZoneInfo_HasSameRules, (TimeZoneInfo * __this, TimeZoneInfo * other, MethodInfo * method));
DO_APP_FUNC(0x027B56A0, bool, TimeZoneInfo_IsAmbiguousTime, (TimeZoneInfo * __this, DateTime dateTime, MethodInfo * method));
DO_APP_FUNC(0x027B58E0, bool, TimeZoneInfo_IsInDST, (TimeZoneInfo * __this, TimeZoneInfo_AdjustmentRule * rule, DateTime dateTime, MethodInfo * method));
DO_APP_FUNC(0x027B59A0, bool, TimeZoneInfo_IsInDSTForYear, (TimeZoneInfo * __this, TimeZoneInfo_AdjustmentRule * rule, DateTime dateTime, int32_t year, MethodInfo * method));
DO_APP_FUNC(0x027B5BD0, bool, TimeZoneInfo_IsDaylightSavingTime, (TimeZoneInfo * __this, DateTime dateTime, MethodInfo * method));
DO_APP_FUNC(0x027B5BD0, bool, TimeZoneInfo_IsDaylightSavingTime_1, (TimeZoneInfo * __this, DateTime dateTime, TimeZoneInfoOptions__Enum flags, MethodInfo * method));
DO_APP_FUNC(0x027B5CF0, bool, TimeZoneInfo_IsInvalidTime, (TimeZoneInfo * __this, DateTime dateTime, MethodInfo * method));
DO_APP_FUNC(0x027B5EA0, void, TimeZoneInfo_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization, (TimeZoneInfo * __this, Object * sender, MethodInfo * method));
DO_APP_FUNC(0x027B5F70, void, TimeZoneInfo_Validate, (String * id, TimeSpan baseUtcOffset, TimeZoneInfo_AdjustmentRule__Array * adjustmentRules, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, TimeZoneInfo_ToString, (TimeZoneInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x027B64C0, void, TimeZoneInfo__ctor, (TimeZoneInfo * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027B6800, void, TimeZoneInfo__ctor_1, (TimeZoneInfo * __this, String * id, TimeSpan baseUtcOffset, String * displayName, String * standardDisplayName, String * daylightDisplayName, TimeZoneInfo_AdjustmentRule__Array * adjustmentRules, bool disableDaylightSavingTime, MethodInfo * method));
DO_APP_FUNC(0x027B6DE0, TimeZoneInfo_AdjustmentRule *, TimeZoneInfo_GetApplicableRule, (TimeZoneInfo * __this, DateTime dateTime, MethodInfo * method));
DO_APP_FUNC(0x027B7010, bool, TimeZoneInfo_TryGetTransitionOffset, (TimeZoneInfo * __this, DateTime dateTime, TimeSpan * offset, bool * isDst, MethodInfo * method));
DO_APP_FUNC(0x027B72E0, DateTime, TimeZoneInfo_TransitionPoint, (TimeZoneInfo_TransitionTime transition, int32_t year, MethodInfo * method));
DO_APP_FUNC(0x027B74E0, TimeZoneInfo_AdjustmentRule__Array *, TimeZoneInfo_ValidateRules, (List_1_System_TimeZoneInfo_AdjustmentRule_ * adjustmentRules, MethodInfo * method));
DO_APP_FUNC(0x027B7670, TimeZoneInfo *, TimeZoneInfo_BuildFromStream, (String * id, Stream * stream, MethodInfo * method));
DO_APP_FUNC(0x027B77F0, bool, TimeZoneInfo_ValidTZFile, (Byte__Array * buffer, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x027B7B70, int32_t, TimeZoneInfo_SwapInt32, (int32_t i, MethodInfo * method));
DO_APP_FUNC(0x027B7BA0, int32_t, TimeZoneInfo_ReadBigEndianInt32, (Byte__Array * buffer, int32_t start, MethodInfo * method));
DO_APP_FUNC(0x027B7C90, TimeZoneInfo *, TimeZoneInfo_ParseTZBuffer, (String * id, Byte__Array * buffer, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x027B8850, Dictionary_2_System_Int32_System_String_ *, TimeZoneInfo_ParseAbbreviations, (Byte__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x027B8C60, Dictionary_2_System_Int32_System_TimeType_ *, TimeZoneInfo_ParseTimesTypes, (Byte__Array * buffer, int32_t index, int32_t count, Dictionary_2_System_Int32_System_String_ * abbreviations, MethodInfo * method));
DO_APP_FUNC(0x027B9010, List_1_KeyValuePair_2_System_DateTime_System_TimeType_ *, TimeZoneInfo_ParseTransitions, (Byte__Array * buffer, int32_t index, int32_t count, Dictionary_2_System_Int32_System_TimeType_ * time_types, MethodInfo * method));
DO_APP_FUNC(0x027B9440, DateTime, TimeZoneInfo_DateTimeFromUnixTime, (int64_t unix_time, MethodInfo * method));
DO_APP_FUNC(0x027B9510, TimeSpan, TimeZoneInfo_GetLocalUtcOffset, (DateTime dateTime, TimeZoneInfoOptions__Enum flags, MethodInfo * method));
DO_APP_FUNC(0x027B4EB0, TimeSpan, TimeZoneInfo_GetUtcOffset_2, (TimeZoneInfo * __this, DateTime dateTime, TimeZoneInfoOptions__Enum flags, MethodInfo * method));
DO_APP_FUNC(0x027B9550, TimeSpan, TimeZoneInfo_GetUtcOffsetFromUtc, (DateTime time, TimeZoneInfo * zone, bool * isDaylightSavings, bool * isAmbiguousLocalDst, MethodInfo * method));
DO_APP_FUNC(0x027B95C0, void, TimeZoneInfo__ctor_2, (TimeZoneInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, DateTime, TimeZoneInfo_AdjustmentRule_get_DateStart, (TimeZoneInfo_AdjustmentRule * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, DateTime, TimeZoneInfo_AdjustmentRule_get_DateEnd, (TimeZoneInfo_AdjustmentRule * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, TimeSpan, TimeZoneInfo_AdjustmentRule_get_DaylightDelta, (TimeZoneInfo_AdjustmentRule * __this, MethodInfo * method));
DO_APP_FUNC(0x027B9780, TimeZoneInfo_TransitionTime, TimeZoneInfo_AdjustmentRule_get_DaylightTransitionStart, (TimeZoneInfo_AdjustmentRule * __this, MethodInfo * method));
DO_APP_FUNC(0x027B97A0, TimeZoneInfo_TransitionTime, TimeZoneInfo_AdjustmentRule_get_DaylightTransitionEnd, (TimeZoneInfo_AdjustmentRule * __this, MethodInfo * method));
DO_APP_FUNC(0x027B97C0, bool, TimeZoneInfo_AdjustmentRule_Equals, (TimeZoneInfo_AdjustmentRule * __this, TimeZoneInfo_AdjustmentRule * other, MethodInfo * method));
DO_APP_FUNC(0x027B9980, int32_t, TimeZoneInfo_AdjustmentRule_GetHashCode, (TimeZoneInfo_AdjustmentRule * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TimeZoneInfo_AdjustmentRule__ctor, (TimeZoneInfo_AdjustmentRule * __this, MethodInfo * method));
DO_APP_FUNC(0x027B99A0, TimeZoneInfo_AdjustmentRule *, TimeZoneInfo_AdjustmentRule_CreateAdjustmentRule, (DateTime dateStart, DateTime dateEnd, TimeSpan daylightDelta, TimeZoneInfo_TransitionTime daylightTransitionStart, TimeZoneInfo_TransitionTime daylightTransitionEnd, MethodInfo * method));
DO_APP_FUNC(0x027B9BE0, TimeZoneInfo_AdjustmentRule *, TimeZoneInfo_AdjustmentRule_CreateAdjustmentRule_1, (DateTime dateStart, DateTime dateEnd, TimeSpan daylightDelta, TimeZoneInfo_TransitionTime daylightTransitionStart, TimeZoneInfo_TransitionTime daylightTransitionEnd, TimeSpan baseUtcOffsetDelta, MethodInfo * method));
DO_APP_FUNC(0x027B9C50, void, TimeZoneInfo_AdjustmentRule_ValidateAdjustmentRule, (DateTime dateStart, DateTime dateEnd, TimeSpan daylightDelta, TimeZoneInfo_TransitionTime daylightTransitionStart, TimeZoneInfo_TransitionTime daylightTransitionEnd, MethodInfo * method));
DO_APP_FUNC(0x027BA0A0, void, TimeZoneInfo_AdjustmentRule_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization, (TimeZoneInfo_AdjustmentRule * __this, Object * sender, MethodInfo * method));
DO_APP_FUNC(0x027BA1C0, void, TimeZoneInfo_AdjustmentRule_System_Runtime_Serialization_ISerializable_GetObjectData, (TimeZoneInfo_AdjustmentRule * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027BA380, void, TimeZoneInfo_AdjustmentRule__ctor_1, (TimeZoneInfo_AdjustmentRule * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x00107C00, DateTime, TimeZoneInfo_TransitionTime_get_TimeOfDay, (TimeZoneInfo_TransitionTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00114120, int32_t, TimeZoneInfo_TransitionTime_get_Month, (TimeZoneInfo_TransitionTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00114130, int32_t, TimeZoneInfo_TransitionTime_get_Week, (TimeZoneInfo_TransitionTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001C5DE0, int32_t, TimeZoneInfo_TransitionTime_get_Day, (TimeZoneInfo_TransitionTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001155B0, DayOfWeek__Enum, TimeZoneInfo_TransitionTime_get_DayOfWeek, (TimeZoneInfo_TransitionTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00113140, bool, TimeZoneInfo_TransitionTime_get_IsFixedDateRule, (TimeZoneInfo_TransitionTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00203D30, bool, TimeZoneInfo_TransitionTime_Equals, (TimeZoneInfo_TransitionTime__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x027BA6A0, bool, TimeZoneInfo_TransitionTime_op_Inequality, (TimeZoneInfo_TransitionTime t1, TimeZoneInfo_TransitionTime t2, MethodInfo * method));
DO_APP_FUNC(0x00203E20, bool, TimeZoneInfo_TransitionTime_Equals_1, (TimeZoneInfo_TransitionTime__Boxed * __this, TimeZoneInfo_TransitionTime other, MethodInfo * method));
DO_APP_FUNC(0x00203E50, int32_t, TimeZoneInfo_TransitionTime_GetHashCode, (TimeZoneInfo_TransitionTime__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x027BA850, TimeZoneInfo_TransitionTime, TimeZoneInfo_TransitionTime_CreateFixedDateRule, (DateTime timeOfDay, int32_t month, int32_t day, MethodInfo * method));
DO_APP_FUNC(0x027BA8F0, TimeZoneInfo_TransitionTime, TimeZoneInfo_TransitionTime_CreateFloatingDateRule, (DateTime timeOfDay, int32_t month, int32_t week, DayOfWeek__Enum dayOfWeek, MethodInfo * method));
DO_APP_FUNC(0x027BA9A0, TimeZoneInfo_TransitionTime, TimeZoneInfo_TransitionTime_CreateTransitionTime, (DateTime timeOfDay, int32_t month, int32_t week, int32_t day, DayOfWeek__Enum dayOfWeek, bool isFixedDateRule, MethodInfo * method));
DO_APP_FUNC(0x027BAA60, void, TimeZoneInfo_TransitionTime_ValidateTransitionTime, (DateTime timeOfDay, int32_t month, int32_t week, int32_t day, DayOfWeek__Enum dayOfWeek, MethodInfo * method));
DO_APP_FUNC(0x00203E60, void, TimeZoneInfo_TransitionTime_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization, (TimeZoneInfo_TransitionTime__Boxed * __this, Object * sender, MethodInfo * method));
DO_APP_FUNC(0x00203E70, void, TimeZoneInfo_TransitionTime_System_Runtime_Serialization_ISerializable_GetObjectData, (TimeZoneInfo_TransitionTime__Boxed * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x00203FD0, void, TimeZoneInfo_TransitionTime__ctor, (TimeZoneInfo_TransitionTime__Boxed * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027B95F0, void, TimeZoneInfo_c__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TimeZoneInfo_c__ctor, (TimeZoneInfo_c * __this, MethodInfo * method));
DO_APP_FUNC(0x027B9730, int32_t, TimeZoneInfo_c__CreateLocalUnity_b__19_0, (TimeZoneInfo_c * __this, TimeZoneInfo_AdjustmentRule * rule1, TimeZoneInfo_AdjustmentRule * rule2, MethodInfo * method));
DO_APP_FUNC(0x027BB160, void, TimeZoneNotFoundException__ctor, (TimeZoneNotFoundException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x027BB220, void, TimeZoneNotFoundException__ctor_1, (TimeZoneNotFoundException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027BB2E0, void, TimeZoneNotFoundException__ctor_2, (TimeZoneNotFoundException * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Type__ctor, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3EE80, MemberTypes__Enum, Type_get_MemberType, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Type *, Type_get_DeclaringType, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, MethodBase *, Type_get_DeclaringMethod, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Type *, Type_get_ReflectedType, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BB460, Type *, Type_GetType, (String * typeName, Func_2_System_Reflection_AssemblyName_System_Reflection_Assembly_ * assemblyResolver, Func_4_System_Reflection_Assembly_String_Boolean_Type_ * typeResolver, MethodInfo * method));
DO_APP_FUNC(0x027BB490, Type *, Type_GetType_1, (String * typeName, Func_2_System_Reflection_AssemblyName_System_Reflection_Assembly_ * assemblyResolver, Func_4_System_Reflection_Assembly_String_Boolean_Type_ * typeResolver, bool throwOnError, MethodInfo * method));
DO_APP_FUNC(0x027BB4C0, Type *, Type_GetType_2, (String * typeName, Func_2_System_Reflection_AssemblyName_System_Reflection_Assembly_ * assemblyResolver, Func_4_System_Reflection_Assembly_String_Boolean_Type_ * typeResolver, bool throwOnError, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x027BB4F0, Type *, Type_MakePointerType, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BB540, Type *, Type_MakeByRefType, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BB590, Type *, Type_MakeArrayType, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BB5E0, Type *, Type_MakeArrayType_1, (Type * __this, int32_t rank, MethodInfo * method));
DO_APP_FUNC(0x027BB630, TypeCode__Enum, Type_GetTypeCode, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x027BB6E0, TypeCode__Enum, Type_GetTypeCodeImpl, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BB820, Binder *, Type_get_DefaultBinder, (MethodInfo * method));
DO_APP_FUNC(0x027BB920, void, Type_CreateBinder, (MethodInfo * method));
DO_APP_FUNC(0x027BBAC0, Object *, Type_InvokeMember, (Type * __this, String * name, BindingFlags__Enum invokeAttr, Binder * binder, Object * target, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x027BBB10, RuntimeTypeHandle, Type_get_TypeHandle, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BBB60, RuntimeTypeHandle, Type_GetTypeHandle, (Object * o, MethodInfo * method));
DO_APP_FUNC(0x027BBC90, int32_t, Type_GetArrayRank, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BBD00, ConstructorInfo *, Type_GetConstructor, (Type * __this, BindingFlags__Enum bindingAttr, Binder * binder, CallingConventions__Enum callConvention, Type__Array * types, ParameterModifier__Array * modifiers, MethodInfo * method));
DO_APP_FUNC(0x027BBEA0, ConstructorInfo *, Type_GetConstructor_1, (Type * __this, BindingFlags__Enum bindingAttr, Binder * binder, Type__Array * types, ParameterModifier__Array * modifiers, MethodInfo * method));
DO_APP_FUNC(0x027BC040, ConstructorInfo *, Type_GetConstructor_2, (Type * __this, Type__Array * types, MethodInfo * method));
DO_APP_FUNC(0x027BC070, ConstructorInfo__Array *, Type_GetConstructors, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BC090, MethodInfo_1 *, Type_GetMethod, (Type * __this, String * name, BindingFlags__Enum bindingAttr, Binder * binder, CallingConventions__Enum callConvention, Type__Array * types, ParameterModifier__Array * modifiers, MethodInfo * method));
DO_APP_FUNC(0x027BC280, MethodInfo_1 *, Type_GetMethod_1, (Type * __this, String * name, BindingFlags__Enum bindingAttr, Binder * binder, Type__Array * types, ParameterModifier__Array * modifiers, MethodInfo * method));
DO_APP_FUNC(0x027BC470, MethodInfo_1 *, Type_GetMethod_2, (Type * __this, String * name, Type__Array * types, MethodInfo * method));
DO_APP_FUNC(0x027BC650, MethodInfo_1 *, Type_GetMethod_3, (Type * __this, String * name, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x027BC750, MethodInfo_1 *, Type_GetMethod_4, (Type * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x027BC840, MethodInfo_1__Array *, Type_GetMethods, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BC860, FieldInfo_1 *, Type_GetField, (Type * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x027BC880, FieldInfo_1__Array *, Type_GetFields, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BC8A0, Type *, Type_GetInterface, (Type * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x027BC8C0, Type__Array *, Type_FindInterfaces, (Type * __this, TypeFilter * filter, Object * filterCriteria, MethodInfo * method));
DO_APP_FUNC(0x027BCB20, EventInfo_1 *, Type_GetEvent, (Type * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x027BCB40, PropertyInfo_1 *, Type_GetProperty, (Type * __this, String * name, BindingFlags__Enum bindingAttr, Binder * binder, Type * returnType, Type__Array * types, ParameterModifier__Array * modifiers, MethodInfo * method));
DO_APP_FUNC(0x027BCC90, PropertyInfo_1 *, Type_GetProperty_1, (Type * __this, String * name, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x027BCD90, PropertyInfo_1 *, Type_GetProperty_2, (Type * __this, String * name, Type * returnType, Type__Array * types, MethodInfo * method));
DO_APP_FUNC(0x027BCEE0, PropertyInfo_1 *, Type_GetProperty_3, (Type * __this, String * name, Type * returnType, MethodInfo * method));
DO_APP_FUNC(0x027BD040, PropertyInfo_1 *, Type_GetProperty_4, (Type * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x027BD130, PropertyInfo_1__Array *, Type_GetProperties, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BD150, Type *, Type_GetNestedType, (Type * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x027BD170, MemberInfo_1__Array *, Type_GetMember, (Type * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x027BD190, MemberInfo_1__Array *, Type_GetMember_1, (Type * __this, String * name, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x027BD1C0, MemberInfo_1__Array *, Type_GetMember_2, (Type * __this, String * name, MemberTypes__Enum type, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x027BD230, bool, Type_get_IsNested, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BD2E0, TypeAttributes__Enum, Type_get_Attributes, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BD300, GenericParameterAttributes__Enum, Type_get_GenericParameterAttributes, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BD350, bool, Type_get_IsVisible, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BD520, bool, Type_get_IsNotPublic, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BD540, bool, Type_get_IsPublic, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BD560, bool, Type_get_IsNestedPublic, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BD580, bool, Type_get_IsNestedAssembly, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BD5B0, bool, Type_get_IsExplicitLayout, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BD5D0, bool, Type_get_IsClass, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BD620, bool, Type_get_IsInterface, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BD720, bool, Type_get_IsValueType, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BD740, bool, Type_get_IsAbstract, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BD770, bool, Type_get_IsSealed, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BD7A0, bool, Type_get_IsEnum, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BD860, bool, Type_get_IsSerializable, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BDA90, bool, Type_get_IsArray, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Type_get_IsSzArray, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Type_get_IsGenericType, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Type_get_IsGenericTypeDefinition, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BDAB0, bool, Type_get_IsConstructedGenericType, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Type_get_IsGenericParameter, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BDB00, int32_t, Type_get_GenericParameterPosition, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BDB70, bool, Type_get_ContainsGenericParameters, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BDC80, Type__Array *, Type_GetGenericParameterConstraints, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BDD70, bool, Type_get_IsByRef, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BDD90, bool, Type_get_IsPointer, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BDDB0, bool, Type_get_IsPrimitive, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BDDD0, bool, Type_get_IsCOMObject, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BDDF0, bool, Type_get_HasElementType, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BDE10, bool, Type_get_IsContextful, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BDE30, bool, Type_get_IsMarshalByRef, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BDE50, bool, Type_IsValueTypeImpl, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BDF10, Type *, Type_MakeGenericType, (Type * __this, Type__Array * typeArguments, MethodInfo * method));
DO_APP_FUNC(0x027BDF80, bool, Type_IsContextfulImpl, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BE050, bool, Type_IsMarshalByRefImpl, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BE120, Type__Array *, Type_GetGenericArguments, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BE190, Type *, Type_GetGenericTypeDefinition, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BE200, Type *, Type_GetRootElementType, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BE260, String__Array *, Type_GetEnumNames, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BE360, Array *, Type_GetEnumValues, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BE460, Array *, Type_GetEnumRawConstantValues, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BE490, void, Type_GetEnumData, (Type * __this, String__Array * * enumNames, Array * * enumValues, MethodInfo * method));
DO_APP_FUNC(0x027BE910, Type *, Type_GetEnumUnderlyingType, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BEA80, bool, Type_IsEnumDefined, (Type * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x027BF020, String *, Type_GetEnumName, (Type * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x027BF290, int32_t, Type_BinarySearch, (Array * array, Object * value, MethodInfo * method));
DO_APP_FUNC(0x027BF4D0, bool, Type_IsIntegerType, (Type * t, MethodInfo * method));
DO_APP_FUNC(0x027BF780, bool, Type_IsSubclassOf, (Type * __this, Type * c, MethodInfo * method));
DO_APP_FUNC(0x027BF8A0, bool, Type_IsInstanceOfType, (Type * __this, Object * o, MethodInfo * method));
DO_APP_FUNC(0x027BF8E0, bool, Type_IsAssignableFrom, (Type * __this, Type * c, MethodInfo * method));
DO_APP_FUNC(0x027BFB20, bool, Type_IsEquivalentTo, (Type * __this, Type * other, MethodInfo * method));
DO_APP_FUNC(0x027BFBD0, bool, Type_ImplementInterface, (Type * __this, Type * ifaceType, MethodInfo * method));
DO_APP_FUNC(0x027BFDC0, String *, Type_FormatTypeName, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BFDE0, String *, Type_FormatTypeName_1, (Type * __this, bool serialization, MethodInfo * method));
DO_APP_FUNC(0x027BFE30, String *, Type_ToString, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027BFED0, bool, Type_Equals, (Type * __this, Object * o, MethodInfo * method));
DO_APP_FUNC(0x027BFFC0, bool, Type_Equals_1, (Type * __this, Type * o, MethodInfo * method));
DO_APP_FUNC(0x015F8190, bool, Type_op_Equality, (Type * left, Type * right, MethodInfo * method));
DO_APP_FUNC(0x015F81A0, bool, Type_op_Inequality, (Type * left, Type * right, MethodInfo * method));
DO_APP_FUNC(0x027C0020, int32_t, Type_GetHashCode, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1C4F0, Type *, Type_GetType_3, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027C0080, bool, Type_get_IsSZArray, (Type * __this, MethodInfo * method));
DO_APP_FUNC(0x027C00D0, Type *, Type_internal_from_name, (String * name, bool throwOnError, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x027C00E0, Type *, Type_GetType_4, (String * typeName, MethodInfo * method));
DO_APP_FUNC(0x027C01B0, Type *, Type_GetType_5, (String * typeName, bool throwOnError, MethodInfo * method));
DO_APP_FUNC(0x027C0290, Type *, Type_GetType_6, (String * typeName, bool throwOnError, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x027C0480, Type *, Type_GetTypeFromHandle, (RuntimeTypeHandle handle, MethodInfo * method));
DO_APP_FUNC(0x027C0530, Type *, Type_internal_from_handle, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x027C0550, void, Type__cctor, (MethodInfo * method));
DO_APP_FUNC(0x027C42F0, TypedReference, TypedReference_MakeTypedReference, (Object * target, FieldInfo_1__Array * flds, MethodInfo * method));
DO_APP_FUNC(0x027C4880, TypedReference, TypedReference_MakeTypedReferenceInternal, (Object * target, FieldInfo_1__Array * fields, MethodInfo * method));
DO_APP_FUNC(0x00203FF0, int32_t, TypedReference_GetHashCode, (TypedReference__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002040D0, bool, TypedReference_Equals, (TypedReference__Boxed * __this, Object * o, MethodInfo * method));
DO_APP_FUNC(0x002040E0, bool, TypedReference_get_IsNull, (TypedReference__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x027C4A10, void, TypedReference_SetTypedReference, (TypedReference target, Object * value, MethodInfo * method));
DO_APP_FUNC(0x027C0B30, void, TypeInitializationException__ctor, (TypeInitializationException * __this, MethodInfo * method));
DO_APP_FUNC(0x027C0BC0, void, TypeInitializationException__ctor_1, (TypeInitializationException * __this, String * fullTypeName, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x027C0CF0, void, TypeInitializationException__ctor_2, (TypeInitializationException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027C0DC0, String *, TypeInitializationException_get_TypeName, (TypeInitializationException * __this, MethodInfo * method));
DO_APP_FUNC(0x027C0E50, void, TypeInitializationException_GetObjectData, (TypeInitializationException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027C0FD0, void, TypeLoadException__ctor, (TypeLoadException * __this, MethodInfo * method));
DO_APP_FUNC(0x027C1060, void, TypeLoadException__ctor_1, (TypeLoadException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x027C1080, String *, TypeLoadException_get_Message, (TypeLoadException * __this, MethodInfo * method));
DO_APP_FUNC(0x027C10A0, void, TypeLoadException_SetMessageField, (TypeLoadException * __this, MethodInfo * method));
DO_APP_FUNC(0x027C11E0, void, TypeLoadException__ctor_2, (TypeLoadException * __this, String * className, String * assemblyName, MethodInfo * method));
DO_APP_FUNC(0x027C1240, void, TypeLoadException__ctor_3, (TypeLoadException * __this, String * className, String * assemblyName, String * messageArg, int32_t resourceId, MethodInfo * method));
DO_APP_FUNC(0x027C12B0, void, TypeLoadException__ctor_4, (TypeLoadException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027C13F0, void, TypeLoadException_GetObjectData, (TypeLoadException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x00204100, int32_t, UInt16_CompareTo, (UInt16__Boxed * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x001E2A00, int32_t, UInt16_CompareTo_1, (UInt16__Boxed * __this, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x00204110, bool, UInt16_Equals, (UInt16__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x001303C0, bool, UInt16_Equals_1, (UInt16__Boxed * __this, uint16_t obj, MethodInfo * method));
DO_APP_FUNC(0x00113CC0, int32_t, UInt16_GetHashCode, (UInt16__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00204120, String *, UInt16_ToString, (UInt16__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00204150, String *, UInt16_ToString_1, (UInt16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00204180, String *, UInt16_ToString_2, (UInt16__Boxed * __this, String * format, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x027C4C80, uint16_t, UInt16_Parse, (String * s, MethodInfo * method));
DO_APP_FUNC(0x027C4CB0, uint16_t, UInt16_Parse_1, (String * s, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x027C4CE0, uint16_t, UInt16_Parse_2, (String * s, NumberStyles__Enum style, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x027C4D30, uint16_t, UInt16_Parse_3, (String * s, NumberStyles__Enum style, NumberFormatInfo * info, MethodInfo * method));
DO_APP_FUNC(0x027C4E70, bool, UInt16_TryParse, (String * s, NumberStyles__Enum style, IFormatProvider * provider, uint16_t * result, MethodInfo * method));
DO_APP_FUNC(0x027C4F00, bool, UInt16_TryParse_1, (String * s, NumberStyles__Enum style, NumberFormatInfo * info, uint16_t * result, MethodInfo * method));
DO_APP_FUNC(0x002041C0, TypeCode__Enum, UInt16_GetTypeCode, (UInt16__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002041D0, bool, UInt16_System_IConvertible_ToBoolean, (UInt16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00204270, uint16_t, UInt16_System_IConvertible_ToChar, (UInt16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00204310, int8_t, UInt16_System_IConvertible_ToSByte, (UInt16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00204450, uint8_t, UInt16_System_IConvertible_ToByte, (UInt16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00204590, int16_t, UInt16_System_IConvertible_ToInt16, (UInt16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00113CC0, uint16_t, UInt16_System_IConvertible_ToUInt16, (UInt16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x002046D0, int32_t, UInt16_System_IConvertible_ToInt32, (UInt16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00204770, uint32_t, UInt16_System_IConvertible_ToUInt32, (UInt16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00204810, int64_t, UInt16_System_IConvertible_ToInt64, (UInt16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x002048B0, uint64_t, UInt16_System_IConvertible_ToUInt64, (UInt16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00204950, float, UInt16_System_IConvertible_ToSingle, (UInt16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x002049F0, double, UInt16_System_IConvertible_ToDouble, (UInt16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00204A90, Decimal, UInt16_System_IConvertible_ToDecimal, (UInt16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00204BD0, DateTime, UInt16_System_IConvertible_ToDateTime, (UInt16__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00204BE0, Object *, UInt16_System_IConvertible_ToType, (UInt16__Boxed * __this, Type * type, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00204CC0, int32_t, UInt32_CompareTo, (UInt32__Boxed * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0012EDD0, int32_t, UInt32_CompareTo_1, (UInt32__Boxed * __this, uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x00204CD0, bool, UInt32_Equals, (UInt32__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0012EDC0, bool, UInt32_Equals_1, (UInt32__Boxed * __this, uint32_t obj, MethodInfo * method));
DO_APP_FUNC(0x0010E170, int32_t, UInt32_GetHashCode, (UInt32__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0012ECC0, String *, UInt32_ToString, (UInt32__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00204CE0, String *, UInt32_ToString_1, (UInt32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00204D10, String *, UInt32_ToString_2, (UInt32__Boxed * __this, String * format, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x027C5290, uint32_t, UInt32_Parse, (String * s, MethodInfo * method));
DO_APP_FUNC(0x027C52C0, uint32_t, UInt32_Parse_1, (String * s, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x027C52F0, uint32_t, UInt32_Parse_2, (String * s, NumberStyles__Enum style, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x027C5340, bool, UInt32_TryParse, (String * s, NumberStyles__Enum style, IFormatProvider * provider, uint32_t * result, MethodInfo * method));
DO_APP_FUNC(0x00204D50, TypeCode__Enum, UInt32_GetTypeCode, (UInt32__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00204D60, bool, UInt32_System_IConvertible_ToBoolean, (UInt32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00204E00, uint16_t, UInt32_System_IConvertible_ToChar, (UInt32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00204F40, int8_t, UInt32_System_IConvertible_ToSByte, (UInt32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00205080, uint8_t, UInt32_System_IConvertible_ToByte, (UInt32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x002051C0, int16_t, UInt32_System_IConvertible_ToInt16, (UInt32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00205300, uint16_t, UInt32_System_IConvertible_ToUInt16, (UInt32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00205440, int32_t, UInt32_System_IConvertible_ToInt32, (UInt32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0010E170, uint32_t, UInt32_System_IConvertible_ToUInt32, (UInt32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x002054E0, int64_t, UInt32_System_IConvertible_ToInt64, (UInt32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00205580, uint64_t, UInt32_System_IConvertible_ToUInt64, (UInt32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00205620, float, UInt32_System_IConvertible_ToSingle, (UInt32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x002056C0, double, UInt32_System_IConvertible_ToDouble, (UInt32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00205760, Decimal, UInt32_System_IConvertible_ToDecimal, (UInt32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x002058A0, DateTime, UInt32_System_IConvertible_ToDateTime, (UInt32__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x002058B0, Object *, UInt32_System_IConvertible_ToType, (UInt32__Boxed * __this, Type * type, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00205980, int32_t, UInt64_CompareTo, (UInt64__Boxed * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0012F2D0, int32_t, UInt64_CompareTo_1, (UInt64__Boxed * __this, uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x00205990, bool, UInt64_Equals, (UInt64__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0012F2C0, bool, UInt64_Equals_1, (UInt64__Boxed * __this, uint64_t obj, MethodInfo * method));
DO_APP_FUNC(0x0012F2B0, int32_t, UInt64_GetHashCode, (UInt64__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0012F1B0, String *, UInt64_ToString, (UInt64__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002059A0, String *, UInt64_ToString_1, (UInt64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x002059D0, String *, UInt64_ToString_2, (UInt64__Boxed * __this, String * format, MethodInfo * method));
DO_APP_FUNC(0x00205A10, String *, UInt64_ToString_3, (UInt64__Boxed * __this, String * format, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x027C5670, uint64_t, UInt64_Parse, (String * s, MethodInfo * method));
DO_APP_FUNC(0x027C56A0, uint64_t, UInt64_Parse_1, (String * s, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x027C56D0, uint64_t, UInt64_Parse_2, (String * s, NumberStyles__Enum style, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x027C5720, bool, UInt64_TryParse, (String * s, NumberStyles__Enum style, IFormatProvider * provider, uint64_t * result, MethodInfo * method));
DO_APP_FUNC(0x00205A50, TypeCode__Enum, UInt64_GetTypeCode, (UInt64__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00205A60, bool, UInt64_System_IConvertible_ToBoolean, (UInt64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00205B00, uint16_t, UInt64_System_IConvertible_ToChar, (UInt64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00205C40, int8_t, UInt64_System_IConvertible_ToSByte, (UInt64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00205D80, uint8_t, UInt64_System_IConvertible_ToByte, (UInt64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00205EC0, int16_t, UInt64_System_IConvertible_ToInt16, (UInt64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00206000, uint16_t, UInt64_System_IConvertible_ToUInt16, (UInt64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00206140, int32_t, UInt64_System_IConvertible_ToInt32, (UInt64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x002061E0, uint32_t, UInt64_System_IConvertible_ToUInt32, (UInt64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00206280, int64_t, UInt64_System_IConvertible_ToInt64, (UInt64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00107C00, uint64_t, UInt64_System_IConvertible_ToUInt64, (UInt64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x002063D0, float, UInt64_System_IConvertible_ToSingle, (UInt64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00206480, double, UInt64_System_IConvertible_ToDouble, (UInt64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00206530, Decimal, UInt64_System_IConvertible_ToDecimal, (UInt64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00206670, DateTime, UInt64_System_IConvertible_ToDateTime, (UInt64__Boxed * __this, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x00206680, Object *, UInt64_System_IConvertible_ToType, (UInt64__Boxed * __this, Type * type, IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x027C5B20, void, UnauthorizedAccessException__ctor, (UnauthorizedAccessException * __this, MethodInfo * method));
DO_APP_FUNC(0x027C5BB0, void, UnauthorizedAccessException__ctor_1, (UnauthorizedAccessException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, UnauthorizedAccessException__ctor_2, (UnauthorizedAccessException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027C5BD0, void, UnhandledExceptionEventArgs__ctor, (UnhandledExceptionEventArgs * __this, Object * exception, bool isTerminating, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Object *, UnhandledExceptionEventArgs_get_ExceptionObject, (UnhandledExceptionEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A280, bool, UnhandledExceptionEventArgs_get_IsTerminating, (UnhandledExceptionEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnhandledExceptionEventHandler__ctor, (UnhandledExceptionEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, UnhandledExceptionEventHandler_Invoke, (UnhandledExceptionEventHandler * __this, Object * sender, UnhandledExceptionEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, UnhandledExceptionEventHandler_BeginInvoke, (UnhandledExceptionEventHandler * __this, Object * sender, UnhandledExceptionEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, UnhandledExceptionEventHandler_EndInvoke, (UnhandledExceptionEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x027C5C80, void, UnitySerializationHolder_GetUnitySerializationInfo, (SerializationInfo * info, Missing * missing, MethodInfo * method));
DO_APP_FUNC(0x027C5D60, RuntimeType *, UnitySerializationHolder_AddElementTypes, (SerializationInfo * info, RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x027C6380, Type *, UnitySerializationHolder_MakeElementTypes, (UnitySerializationHolder * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x027C6520, void, UnitySerializationHolder_GetUnitySerializationInfo_1, (SerializationInfo * info, RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x027C68C0, void, UnitySerializationHolder_GetUnitySerializationInfo_2, (SerializationInfo * info, int32_t unityType, String * data, RuntimeAssembly * assembly, MethodInfo * method));
DO_APP_FUNC(0x027C6A30, void, UnitySerializationHolder__ctor, (UnitySerializationHolder * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027C6CC0, void, UnitySerializationHolder_ThrowInsufficientInformation, (UnitySerializationHolder * __this, String * field, MethodInfo * method));
DO_APP_FUNC(0x027C6D60, void, UnitySerializationHolder_GetObjectData, (UnitySerializationHolder * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027C6DD0, Object *, UnitySerializationHolder_GetRealObject, (UnitySerializationHolder * __this, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x00206930, void, UnSafeCharBuffer__ctor, (UnSafeCharBuffer__Boxed * __this, uint16_t * buffer, int32_t bufferSize, MethodInfo * method));
DO_APP_FUNC(0x00206940, void, UnSafeCharBuffer_AppendString, (UnSafeCharBuffer__Boxed * __this, String * stringToAppend, MethodInfo * method));
DO_APP_FUNC(0x0314B480, void, Version__ctor, (Version * __this, int32_t major, int32_t minor, int32_t build, int32_t revision, MethodInfo * method));
DO_APP_FUNC(0x0314B660, void, Version__ctor_1, (Version * __this, int32_t major, int32_t minor, int32_t build, MethodInfo * method));
DO_APP_FUNC(0x0314B7F0, void, Version__ctor_2, (Version * __this, int32_t major, int32_t minor, MethodInfo * method));
DO_APP_FUNC(0x0314B920, void, Version__ctor_3, (Version * __this, String * version, MethodInfo * method));
DO_APP_FUNC(0x0314BB00, void, Version__ctor_4, (Version * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, Version_get_Major, (Version * __this, MethodInfo * method));
DO_APP_FUNC(0x00CC59E0, int32_t, Version_get_Minor, (Version * __this, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, Version_get_Build, (Version * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A010, int32_t, Version_get_Revision, (Version * __this, MethodInfo * method));
DO_APP_FUNC(0x0314BB10, Object *, Version_Clone, (Version * __this, MethodInfo * method));
DO_APP_FUNC(0x0314BC70, int32_t, Version_CompareTo, (Version * __this, Object * version, MethodInfo * method));
DO_APP_FUNC(0x0314BDD0, int32_t, Version_CompareTo_1, (Version * __this, Version * value, MethodInfo * method));
DO_APP_FUNC(0x0314BED0, bool, Version_Equals, (Version * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0314BFD0, bool, Version_Equals_1, (Version * __this, Version * obj, MethodInfo * method));
DO_APP_FUNC(0x0314C0C0, int32_t, Version_GetHashCode, (Version * __this, MethodInfo * method));
DO_APP_FUNC(0x0314C0F0, String *, Version_ToString, (Version * __this, MethodInfo * method));
DO_APP_FUNC(0x0314C230, String *, Version_ToString_1, (Version * __this, int32_t fieldCount, MethodInfo * method));
DO_APP_FUNC(0x0314C720, void, Version_AppendPositiveNumber, (int32_t num, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x0314C7C0, Version *, Version_Parse, (String * input, MethodInfo * method));
DO_APP_FUNC(0x0314C8E0, bool, Version_TryParse, (String * input, Version * * result, MethodInfo * method));
DO_APP_FUNC(0x0314C9C0, bool, Version_TryParseVersion, (String * version, Version_VersionResult * result, MethodInfo * method));
DO_APP_FUNC(0x0314D040, bool, Version_TryParseComponent, (String * component, String * componentName, Version_VersionResult * result, int32_t * parsedComponent, MethodInfo * method));
DO_APP_FUNC(0x0314D160, bool, Version_op_Equality, (Version * v1, Version * v2, MethodInfo * method));
DO_APP_FUNC(0x0314D180, bool, Version_op_Inequality, (Version * v1, Version * v2, MethodInfo * method));
DO_APP_FUNC(0x0314D250, bool, Version_op_LessThan, (Version * v1, Version * v2, MethodInfo * method));
DO_APP_FUNC(0x0314D320, bool, Version_op_LessThanOrEqual, (Version * v1, Version * v2, MethodInfo * method));
DO_APP_FUNC(0x0314D3F0, bool, Version_op_GreaterThan, (Version * v1, Version * v2, MethodInfo * method));
DO_APP_FUNC(0x0314D4A0, bool, Version_op_GreaterThanOrEqual, (Version * v1, Version * v2, MethodInfo * method));
DO_APP_FUNC(0x0314D550, void, Version__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00249F60, void, Version_VersionResult_Init, (Version_VersionResult__Boxed * __this, String * argumentName, bool canThrow, MethodInfo * method));
DO_APP_FUNC(0x00249F70, void, Version_VersionResult_SetFailure, (Version_VersionResult__Boxed * __this, Version_ParseFailureKind__Enum failure, MethodInfo * method));
DO_APP_FUNC(0x00249F80, void, Version_VersionResult_SetFailure_1, (Version_VersionResult__Boxed * __this, Version_ParseFailureKind__Enum failure, String * argument, MethodInfo * method));
DO_APP_FUNC(0x00249F90, Exception *, Version_VersionResult_GetVersionParseException, (Version_VersionResult__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AppDomain__ctor, (AppDomain * __this, MethodInfo * method));
DO_APP_FUNC(0x0228CC40, AppDomainSetup *, AppDomain_getSetup, (AppDomain * __this, MethodInfo * method));
DO_APP_FUNC(0x0228CC50, AppDomainSetup *, AppDomain_get_SetupInformation, (AppDomain * __this, MethodInfo * method));
DO_APP_FUNC(0x0228CE60, String *, AppDomain_getFriendlyName, (AppDomain * __this, MethodInfo * method));
DO_APP_FUNC(0x0228CE80, AppDomain *, AppDomain_getCurDomain, (MethodInfo * method));
DO_APP_FUNC(0x0228CE80, AppDomain *, AppDomain_get_CurrentDomain, (MethodInfo * method));
DO_APP_FUNC(0x0228CF90, Assembly__Array *, AppDomain_GetAssemblies, (AppDomain * __this, bool refOnly, MethodInfo * method));
DO_APP_FUNC(0x0228CF90, Assembly__Array *, AppDomain_GetAssemblies_1, (AppDomain * __this, MethodInfo * method));
DO_APP_FUNC(0x0228D040, Object *, AppDomain_GetData, (AppDomain * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Object *, AppDomain_InitializeLifetimeService, (AppDomain * __this, MethodInfo * method));
DO_APP_FUNC(0x0228D170, Assembly *, AppDomain_LoadAssembly, (AppDomain * __this, String * assemblyRef, Evidence * securityEvidence, bool refOnly, MethodInfo * method));
DO_APP_FUNC(0x0228D3A0, Assembly *, AppDomain_LoadSatellite, (AppDomain * __this, AssemblyName * assemblyRef, bool throwOnError, MethodInfo * method));
DO_APP_FUNC(0x0228D510, Assembly *, AppDomain_Load, (AppDomain * __this, String * assemblyString, MethodInfo * method));
DO_APP_FUNC(0x0228D680, Assembly *, AppDomain_Load_1, (AppDomain * __this, String * assemblyString, Evidence * assemblySecurity, bool refonly, MethodInfo * method));
DO_APP_FUNC(0x0228D810, AppDomain *, AppDomain_InternalSetDomainByID, (int32_t domain_id, MethodInfo * method));
DO_APP_FUNC(0x0228D820, AppDomain *, AppDomain_InternalSetDomain, (AppDomain * context, MethodInfo * method));
DO_APP_FUNC(0x0228D830, void, AppDomain_InternalPushDomainRefByID, (int32_t domain_id, MethodInfo * method));
DO_APP_FUNC(0x0228D840, void, AppDomain_InternalPopDomainRef, (MethodInfo * method));
DO_APP_FUNC(0x0228D850, Context *, AppDomain_InternalSetContext, (Context * context, MethodInfo * method));
DO_APP_FUNC(0x0228D860, Context *, AppDomain_InternalGetContext, (MethodInfo * method));
DO_APP_FUNC(0x0228D860, Context *, AppDomain_InternalGetDefaultContext, (MethodInfo * method));
DO_APP_FUNC(0x0228D8A0, String *, AppDomain_InternalGetProcessGuid, (String * newguid, MethodInfo * method));
DO_APP_FUNC(0x0228D8B0, Object *, AppDomain_InvokeInDomainByID, (int32_t domain_id, MethodInfo_1 * method_1, Object * obj, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x0228D920, String *, AppDomain_GetProcessGuid, (MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, AppDomain_InternalIsFinalizingForUnload, (int32_t domain_id, MethodInfo * method));
DO_APP_FUNC(0x0228D9F0, bool, AppDomain_IsFinalizingForUnload, (AppDomain * __this, MethodInfo * method));
DO_APP_FUNC(0x0228DA20, int32_t, AppDomain_getDomainID, (AppDomain * __this, MethodInfo * method));
DO_APP_FUNC(0x0228DA50, int32_t, AppDomain_GetCurrentThreadId, (MethodInfo * method));
DO_APP_FUNC(0x0228CE60, String *, AppDomain_ToString, (AppDomain * __this, MethodInfo * method));
DO_APP_FUNC(0x0228DA80, void, AppDomain_DoAssemblyLoad, (AppDomain * __this, Assembly * assembly, MethodInfo * method));
DO_APP_FUNC(0x0228DC70, Assembly *, AppDomain_DoAssemblyResolve, (AppDomain * __this, String * name, Assembly * requestingAssembly, bool refonly, MethodInfo * method));
DO_APP_FUNC(0x0228E2A0, Assembly *, AppDomain_DoTypeResolve, (AppDomain * __this, Object * name_or_tb, MethodInfo * method));
DO_APP_FUNC(0x0228E800, Assembly *, AppDomain_DoResourceResolve, (AppDomain * __this, String * name, Assembly * requesting, MethodInfo * method));
DO_APP_FUNC(0x0228EA50, void, AppDomain_DoDomainUnload, (AppDomain * __this, MethodInfo * method));
DO_APP_FUNC(0x0228EA70, Byte__Array *, AppDomain_GetMarshalledDomainObjRef, (AppDomain * __this, MethodInfo * method));
DO_APP_FUNC(0x0228EC30, void, AppDomain_ProcessMessageInDomain, (AppDomain * __this, Byte__Array * arrRequest, CADMethodCallMessage * cadMsg, Byte__Array * * arrResponse, CADMethodReturnMessage * * cadMrm, MethodInfo * method));
DO_APP_FUNC(0x0228F070, void, AppDomain_add_AssemblyLoad, (AppDomain * __this, AssemblyLoadEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x0228F160, void, AppDomain_remove_AssemblyLoad, (AppDomain * __this, AssemblyLoadEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x0228F250, void, AppDomain_add_DomainUnload, (AppDomain * __this, EventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x0228F340, void, AppDomain_remove_DomainUnload, (AppDomain * __this, EventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x0228F430, void, AppDomain_add_ProcessExit, (AppDomain * __this, EventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x0228F520, void, AppDomain_remove_ProcessExit, (AppDomain * __this, EventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x0228F610, void, AppDomain_add_UnhandledException, (AppDomain * __this, UnhandledExceptionEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x0228F700, void, AppDomain_remove_UnhandledException, (AppDomain * __this, UnhandledExceptionEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, AppDomain_get_IsHomogenous, (AppDomain * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, AppDomain_get_IsFullyTrusted, (AppDomain * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, CLRConfig_CheckThrowUnobservedTaskExceptions, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CompatibilitySwitches__cctor, (MethodInfo * method));
DO_APP_FUNC(0x004C50A0, String *, Environment_GetResourceString, (String * key, MethodInfo * method));
DO_APP_FUNC(0x01A18770, String *, Environment_GetResourceString_1, (String * key, Object__Array * values, MethodInfo * method));
DO_APP_FUNC(0x01A18830, String *, Environment_GetResourceStringEncodingName, (int32_t codePage, MethodInfo * method));
DO_APP_FUNC(0x01A18980, String *, Environment_get_CurrentDirectory, (MethodInfo * method));
DO_APP_FUNC(0x01A18990, int32_t, Environment_get_CurrentManagedThreadId, (MethodInfo * method));
DO_APP_FUNC(0x01A189E0, bool, Environment_get_HasShutdownStarted, (MethodInfo * method));
DO_APP_FUNC(0x01A189F0, String *, Environment_get_MachineName, (MethodInfo * method));
DO_APP_FUNC(0x01A18A00, String *, Environment_GetNewLine, (MethodInfo * method));
DO_APP_FUNC(0x01A18A20, String *, Environment_get_NewLine, (MethodInfo * method));
DO_APP_FUNC(0x0043D9E0, PlatformID__Enum, Environment_get_Platform, (MethodInfo * method));
DO_APP_FUNC(0x01A18AE0, String *, Environment_GetOSVersionString, (MethodInfo * method));
DO_APP_FUNC(0x01A18C10, OperatingSystem *, Environment_get_OSVersion, (MethodInfo * method));
DO_APP_FUNC(0x01A18ED0, Version *, Environment_CreateVersionFromString, (String * info, MethodInfo * method));
DO_APP_FUNC(0x01A19280, String *, Environment_get_StackTrace, (MethodInfo * method));
DO_APP_FUNC(0x01A193E0, int32_t, Environment_get_TickCount, (MethodInfo * method));
DO_APP_FUNC(0x01A189F0, String *, Environment_get_UserDomainName, (MethodInfo * method));
DO_APP_FUNC(0x01A19420, String *, Environment_get_UserName, (MethodInfo * method));
DO_APP_FUNC(0x01A19430, void, Environment_Exit, (int32_t exitCode, MethodInfo * method));
DO_APP_FUNC(0x01A19440, String *, Environment_ExpandEnvironmentVariables, (String * name, MethodInfo * method));
DO_APP_FUNC(0x013DD080, String__Array *, Environment_GetCommandLineArgs, (MethodInfo * method));
DO_APP_FUNC(0x01A19810, String *, Environment_internalGetEnvironmentVariable_native, (void * variable, MethodInfo * method));
DO_APP_FUNC(0x01A19960, String *, Environment_internalGetEnvironmentVariable, (String * variable, MethodInfo * method));
DO_APP_FUNC(0x01A19C20, String *, Environment_GetEnvironmentVariable, (String * variable, MethodInfo * method));
DO_APP_FUNC(0x01A19C30, Hashtable *, Environment_GetEnvironmentVariablesNoCase, (MethodInfo * method));
DO_APP_FUNC(0x01A19E30, IDictionary *, Environment_GetEnvironmentVariables, (MethodInfo * method));
DO_APP_FUNC(0x01A19FF0, String *, Environment_GetFolderPath, (Environment_SpecialFolder__Enum folder, MethodInfo * method));
DO_APP_FUNC(0x01A1A000, String *, Environment_GetWindowsFolderPath, (int32_t folder, MethodInfo * method));
DO_APP_FUNC(0x01A19FF0, String *, Environment_GetFolderPath_1, (Environment_SpecialFolder__Enum folder, Environment_SpecialFolderOption__Enum option, MethodInfo * method));
DO_APP_FUNC(0x01A1A010, String *, Environment_ReadXdgUserDir, (String * config_dir, String * home_dir, String * key, String * fallback, MethodInfo * method));
DO_APP_FUNC(0x01A1A4D0, String *, Environment_UnixGetFolderPath, (Environment_SpecialFolder__Enum folder, Environment_SpecialFolderOption__Enum option, MethodInfo * method));
DO_APP_FUNC(0x01A1A8B0, void, Environment_SetEnvironmentVariable, (String * variable, String * value, MethodInfo * method));
DO_APP_FUNC(0x01A1AA90, void, Environment_SetEnvironmentVariable_1, (String * variable, String * value, EnvironmentVariableTarget__Enum target, MethodInfo * method));
DO_APP_FUNC(0x01A1AAA0, void, Environment_InternalSetEnvironmentVariable, (String * variable, String * value, MethodInfo * method));
DO_APP_FUNC(0x01A1AAB0, void, Environment_FailFast, (String * message, MethodInfo * method));
DO_APP_FUNC(0x01A1AB00, void, Environment_FailFast_1, (String * message, Exception * exception, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, Environment_get_Is64BitProcess, (MethodInfo * method));
DO_APP_FUNC(0x01A1AB60, int32_t, Environment_get_ProcessorCount, (MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, Environment_get_IsRunningOnWindows, (MethodInfo * method));
DO_APP_FUNC(0x01A1AB80, String__Array *, Environment_GetEnvironmentVariableNames, (MethodInfo * method));
DO_APP_FUNC(0x01A1AB90, String *, Environment_GetMachineConfigPath, (MethodInfo * method));
DO_APP_FUNC(0x01A1ABA0, String *, Environment_internalGetHome, (MethodInfo * method));
DO_APP_FUNC(0x0139C650, int32_t, Environment_GetPageSize, (MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Environment_get_IsUnix, (MethodInfo * method));
DO_APP_FUNC(0x01A1AC30, String *, Environment_GetStackTrace, (Exception * e, bool needFileInfo, MethodInfo * method));
DO_APP_FUNC(0x0227EBF0, int32_t, ParseNumbers_StringToInt, (String * value, int32_t fromBase, int32_t flags, MethodInfo * method));
DO_APP_FUNC(0x0227EC10, int32_t, ParseNumbers_StringToInt_1, (String * value, int32_t fromBase, int32_t flags, int32_t * parsePos, MethodInfo * method));
DO_APP_FUNC(0x0227F090, int64_t, ParseNumbers_StringToLong, (String * value, int32_t fromBase, int32_t flags, MethodInfo * method));
DO_APP_FUNC(0x0227F0B0, int64_t, ParseNumbers_StringToLong_1, (String * value, int32_t fromBase, int32_t flags, int32_t * parsePos, MethodInfo * method));
DO_APP_FUNC(0x0227F5F0, String *, ParseNumbers_IntToString, (int32_t value, int32_t toBase, int32_t width, uint16_t paddingChar, int32_t flags, MethodInfo * method));
DO_APP_FUNC(0x0227F9F0, void, ParseNumbers_EndianSwap, (Byte__Array * * value, MethodInfo * method));
DO_APP_FUNC(0x0227FB20, StringBuilder *, ParseNumbers_ConvertToBase2, (Byte__Array * value, MethodInfo * method));
DO_APP_FUNC(0x0227FD50, StringBuilder *, ParseNumbers_ConvertToBase8, (Byte__Array * value, MethodInfo * method));
DO_APP_FUNC(0x02280170, StringBuilder *, ParseNumbers_ConvertToBase16, (Byte__Array * value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MonoTypeInfo__ctor, (MonoTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x027C15B0, Type *, TypeNameParser_GetType, (String * typeName, Func_2_System_Reflection_AssemblyName_System_Reflection_Assembly_ * assemblyResolver, Func_4_System_Reflection_Assembly_String_Boolean_Type_ * typeResolver, bool throwOnError, bool ignoreCase, StackCrawlMark__Enum * stackMark, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AppDomainSetup__ctor, (AppDomainSetup * __this, MethodInfo * method));
DO_APP_FUNC(0x0228F7F0, void, AppDomainSetup__ctor_1, (AppDomainSetup * __this, AppDomainSetup * setup, MethodInfo * method));
DO_APP_FUNC(0x0228F8D0, String *, AppDomainSetup_GetAppBase, (String * appBase, MethodInfo * method));
DO_APP_FUNC(0x0228FDD0, String *, AppDomainSetup_get_ApplicationBase, (AppDomainSetup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, String *, AppDomainSetup_get_LicenseFile, (AppDomainSetup * __this, MethodInfo * method));
DO_APP_FUNC(0x001E13F0, bool, ArgIterator_Equals, (ArgIterator__Boxed * __this, Object * o, MethodInfo * method));
DO_APP_FUNC(0x0010E170, int32_t, ArgIterator_GetHashCode, (ArgIterator__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x02299010, void, AssemblyLoadEventArgs__ctor, (AssemblyLoadEventArgs * __this, Assembly * loadedAssembly, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Assembly *, AssemblyLoadEventArgs_get_LoadedAssembly, (AssemblyLoadEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, AssemblyLoadEventHandler__ctor, (AssemblyLoadEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, AssemblyLoadEventHandler_Invoke, (AssemblyLoadEventHandler * __this, Object * sender, AssemblyLoadEventArgs * args, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, AssemblyLoadEventHandler_BeginInvoke, (AssemblyLoadEventHandler * __this, Object * sender, AssemblyLoadEventArgs * args, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, AssemblyLoadEventHandler_EndInvoke, (AssemblyLoadEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x02032E80, void, Console__cctor, (MethodInfo * method));
DO_APP_FUNC(0x020330A0, void, Console_SetupStreams, (Encoding * inputEncoding, Encoding * outputEncoding, MethodInfo * method));
DO_APP_FUNC(0x020335C0, TextWriter *, Console_get_Error, (MethodInfo * method));
DO_APP_FUNC(0x02033660, TextWriter *, Console_get_Out, (MethodInfo * method));
DO_APP_FUNC(0x02033700, Stream *, Console_Open, (void * handle, FileAccess__Enum access, int32_t bufferSize, MethodInfo * method));
DO_APP_FUNC(0x020338D0, Stream *, Console_OpenStandardError, (int32_t bufferSize, MethodInfo * method));
DO_APP_FUNC(0x020339B0, Stream *, Console_OpenStandardInput, (int32_t bufferSize, MethodInfo * method));
DO_APP_FUNC(0x02033A90, Stream *, Console_OpenStandardOutput, (int32_t bufferSize, MethodInfo * method));
DO_APP_FUNC(0x02033B70, void, Console_SetOut, (TextWriter * newOut, MethodInfo * method));
DO_APP_FUNC(0x02033C50, Encoding *, Console_get_InputEncoding, (MethodInfo * method));
DO_APP_FUNC(0x02033CF0, Encoding *, Console_get_OutputEncoding, (MethodInfo * method));
DO_APP_FUNC(0x02033D90, ConsoleKeyInfo, Console_ReadKey, (MethodInfo * method));
DO_APP_FUNC(0x02033E40, ConsoleKeyInfo, Console_ReadKey_1, (bool intercept, MethodInfo * method));
DO_APP_FUNC(0x02034010, void, Console_DoConsoleCancelEvent, (MethodInfo * method));
DO_APP_FUNC(0x02034300, int32_t, Console_WindowsConsole_GetConsoleCP, (MethodInfo * method));
DO_APP_FUNC(0x02034390, int32_t, Console_WindowsConsole_GetConsoleOutputCP, (MethodInfo * method));
DO_APP_FUNC(0x02034420, bool, Console_WindowsConsole_DoWindowsConsoleCancelEvent, (int32_t keyCode, MethodInfo * method));
DO_APP_FUNC(0x020344C0, int32_t, Console_WindowsConsole_GetInputCodePage, (MethodInfo * method));
DO_APP_FUNC(0x020345D0, int32_t, Console_WindowsConsole_GetOutputCodePage, (MethodInfo * method));
DO_APP_FUNC(0x020346E0, void, Console_WindowsConsole__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00611810, void, Console_WindowsConsole_WindowsCancelHandler__ctor, (Console_WindowsConsole_WindowsCancelHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x010C4980, bool, Console_WindowsConsole_WindowsCancelHandler_Invoke, (Console_WindowsConsole_WindowsCancelHandler * __this, int32_t keyCode, MethodInfo * method));
DO_APP_FUNC(0x02034850, IAsyncResult *, Console_WindowsConsole_WindowsCancelHandler_BeginInvoke, (Console_WindowsConsole_WindowsCancelHandler * __this, int32_t keyCode, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x008A1BF0, bool, Console_WindowsConsole_WindowsCancelHandler_EndInvoke, (Console_WindowsConsole_WindowsCancelHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, Console_InternalCancelHandler__ctor, (Console_InternalCancelHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x00611820, void, Console_InternalCancelHandler_Invoke, (Console_InternalCancelHandler * __this, MethodInfo * method));
DO_APP_FUNC(0x00611B10, IAsyncResult *, Console_InternalCancelHandler_BeginInvoke, (Console_InternalCancelHandler * __this, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, Console_InternalCancelHandler_EndInvoke, (Console_InternalCancelHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x020349F0, void, ConsoleDriver__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02034A90, IConsoleDriver *, ConsoleDriver_CreateNullConsoleDriver, (MethodInfo * method));
DO_APP_FUNC(0x02034BD0, IConsoleDriver *, ConsoleDriver_CreateWindowsConsoleDriver, (MethodInfo * method));
DO_APP_FUNC(0x02034E10, IConsoleDriver *, ConsoleDriver_CreateTermInfoDriver, (String * term, MethodInfo * method));
DO_APP_FUNC(0x02034F60, ConsoleKeyInfo, ConsoleDriver_ReadKey, (bool intercept, MethodInfo * method));
DO_APP_FUNC(0x020350B0, bool, ConsoleDriver_get_IsConsole, (MethodInfo * method));
DO_APP_FUNC(0x020352A0, bool, ConsoleDriver_Isatty, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, int32_t, ConsoleDriver_InternalKeyAvailable, (int32_t ms_timeout, MethodInfo * method));
DO_APP_FUNC(0x020352C0, bool, ConsoleDriver_TtySetup, (String * keypadXmit, String * teardown, Byte__Array * * control_characters, int32_t * * address, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, ConsoleDriver_SetEcho, (bool wantEcho, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DelegateData__ctor, (DelegateData * __this, MethodInfo * method));
DO_APP_FUNC(0x0173D7B0, MethodInfo_1 *, Delegate_get_Method, (Delegate * __this, MethodInfo * method));
DO_APP_FUNC(0x0173D7D0, MethodInfo_1 *, Delegate_GetVirtualMethod_internal, (Delegate * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, Object *, Delegate_get_Target, (Delegate * __this, MethodInfo * method));
DO_APP_FUNC(0x0173D7E0, Delegate *, Delegate_CreateDelegate_internal, (Type * type, Object * target, MethodInfo_1 * info, bool throwOnBindFailure, MethodInfo * method));
DO_APP_FUNC(0x0173D8E0, bool, Delegate_arg_type_match, (Type * delArgType, Type * argType, MethodInfo * method));
DO_APP_FUNC(0x0173DAE0, bool, Delegate_arg_type_match_this, (Type * delArgType, Type * argType, bool boxedThis, MethodInfo * method));
DO_APP_FUNC(0x0173DC90, bool, Delegate_return_type_match, (Type * delReturnType, Type * returnType, MethodInfo * method));
DO_APP_FUNC(0x0173DD90, Delegate *, Delegate_CreateDelegate, (Type * type, Object * firstArgument, MethodInfo_1 * method_1, bool throwOnBindFailure, MethodInfo * method));
DO_APP_FUNC(0x0173DDB0, Delegate *, Delegate_CreateDelegate_1, (Type * type, Object * firstArgument, MethodInfo_1 * method_1, bool throwOnBindFailure, bool allowClosed, MethodInfo * method));
DO_APP_FUNC(0x0173E950, Delegate *, Delegate_CreateDelegate_2, (Type * type, Object * firstArgument, MethodInfo_1 * method_1, MethodInfo * method));
DO_APP_FUNC(0x0173E970, Delegate *, Delegate_CreateDelegate_3, (Type * type, MethodInfo_1 * method_1, bool throwOnBindFailure, MethodInfo * method));
DO_APP_FUNC(0x013DCFD0, Delegate *, Delegate_CreateDelegate_4, (Type * type, MethodInfo_1 * method_1, MethodInfo * method));
DO_APP_FUNC(0x0173E9A0, Delegate *, Delegate_CreateDelegate_5, (Type * type, Object * target, String * method_1, MethodInfo * method));
DO_APP_FUNC(0x0173EB20, MethodInfo_1 *, Delegate_GetCandidateMethod, (Type * type, Type * target, String * method_1, BindingFlags__Enum bflags, bool ignoreCase, bool throwOnBindFailure, MethodInfo * method));
DO_APP_FUNC(0x0173EFC0, Delegate *, Delegate_CreateDelegate_6, (Type * type, Type * target, String * method_1, bool ignoreCase, bool throwOnBindFailure, MethodInfo * method));
DO_APP_FUNC(0x0173F160, Delegate *, Delegate_CreateDelegate_7, (Type * type, Type * target, String * method_1, MethodInfo * method));
DO_APP_FUNC(0x0173F2F0, Delegate *, Delegate_CreateDelegate_8, (Type * type, Object * target, String * method_1, bool ignoreCase, bool throwOnBindFailure, MethodInfo * method));
DO_APP_FUNC(0x0173F480, Delegate *, Delegate_CreateDelegate_9, (Type * type, Object * target, String * method_1, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x0173F610, Object *, Delegate_Clone, (Delegate * __this, MethodInfo * method));
DO_APP_FUNC(0x0173F6C0, bool, Delegate_Equals, (Delegate * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0173F8B0, int32_t, Delegate_GetHashCode, (Delegate * __this, MethodInfo * method));
DO_APP_FUNC(0x0173F940, MethodInfo_1 *, Delegate_GetMethodImpl, (Delegate * __this, MethodInfo * method));
DO_APP_FUNC(0x0173FA70, void, Delegate_GetObjectData, (Delegate * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0173FA90, Delegate__Array *, Delegate_GetInvocationList, (Delegate * __this, MethodInfo * method));
DO_APP_FUNC(0x0173FB80, Delegate *, Delegate_Combine, (Delegate * a, Delegate * b, MethodInfo * method));
DO_APP_FUNC(0x0173FD70, Delegate *, Delegate_Combine_1, (Delegate__Array * delegates, MethodInfo * method));
DO_APP_FUNC(0x0173FDE0, Delegate *, Delegate_CombineImpl, (Delegate * __this, Delegate * d, MethodInfo * method));
DO_APP_FUNC(0x0173FE50, Delegate *, Delegate_Remove, (Delegate * source, Delegate * value, MethodInfo * method));
DO_APP_FUNC(0x01740040, Delegate *, Delegate_RemoveImpl, (Delegate * __this, Delegate * d, MethodInfo * method));
DO_APP_FUNC(0x01740070, bool, Delegate_op_Equality, (Delegate * d1, Delegate * d2, MethodInfo * method));
DO_APP_FUNC(0x017400A0, Delegate *, Delegate_CreateDelegateNoSecurityCheck, (RuntimeType * type, Object * firstArgument, MethodInfo_1 * method_1, MethodInfo * method));
DO_APP_FUNC(0x017400C0, MulticastDelegate *, Delegate_AllocDelegateLike_internal, (Delegate * d, MethodInfo * method));
DO_APP_FUNC(0x017401E0, void, DelegateSerializationHolder__ctor, (DelegateSerializationHolder * __this, SerializationInfo * info, StreamingContext ctx, MethodInfo * method));
DO_APP_FUNC(0x01740470, void, DelegateSerializationHolder_GetDelegateData, (Delegate * instance, SerializationInfo * info, StreamingContext ctx, MethodInfo * method));
DO_APP_FUNC(0x017407B0, void, DelegateSerializationHolder_GetObjectData, (DelegateSerializationHolder * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Object *, DelegateSerializationHolder_GetRealObject, (DelegateSerializationHolder * __this, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01740800, void, DelegateSerializationHolder_DelegateEntry__ctor, (DelegateSerializationHolder_DelegateEntry * __this, Delegate * del, String * targetLabel, MethodInfo * method));
DO_APP_FUNC(0x017409E0, Delegate *, DelegateSerializationHolder_DelegateEntry_DeserializeDelegate, (DelegateSerializationHolder_DelegateEntry * __this, SerializationInfo * info, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x001DE610, void, IntPtr__ctor, (IntPtr__Boxed * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, IntPtr__ctor_1, (IntPtr__Boxed * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, IntPtr__ctor_2, (IntPtr__Boxed * __this, Void * value, MethodInfo * method));
DO_APP_FUNC(0x001E9770, void, IntPtr__ctor_3, (IntPtr__Boxed * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0043D9A0, int32_t, IntPtr_get_Size, (MethodInfo * method));
DO_APP_FUNC(0x001E9810, void, IntPtr_System_Runtime_Serialization_ISerializable_GetObjectData, (IntPtr__Boxed * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x001E98E0, bool, IntPtr_Equals, (IntPtr__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0010E170, int32_t, IntPtr_GetHashCode, (IntPtr__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0010E170, int32_t, IntPtr_ToInt32, (IntPtr__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D9820, int64_t, IntPtr_ToInt64, (IntPtr__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00107C00, Void *, IntPtr_ToPointer, (IntPtr__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00131090, String *, IntPtr_ToString, (IntPtr__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E98F0, String *, IntPtr_ToString_1, (IntPtr__Boxed * __this, String * format, MethodInfo * method));
DO_APP_FUNC(0x015F8190, bool, IntPtr_op_Equality, (void * value1, void * value2, MethodInfo * method));
DO_APP_FUNC(0x015F81A0, bool, IntPtr_op_Inequality, (void * value1, void * value2, MethodInfo * method));
DO_APP_FUNC(0x01A948E0, void *, IntPtr_op_Explicit, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, void *, IntPtr_op_Explicit_1, (int64_t value, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, void *, IntPtr_op_Explicit_2, (Void * value, MethodInfo * method));
DO_APP_FUNC(0x006CE970, int32_t, IntPtr_op_Explicit_3, (void * value, MethodInfo * method));
DO_APP_FUNC(0x0238D4F0, int64_t, IntPtr_op_Explicit_4, (void * value, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, Void *, IntPtr_op_Explicit_5, (void * value, MethodInfo * method));
DO_APP_FUNC(0x0157E100, void *, IntPtr_Add, (void * pointer, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x001D5C40, bool, IntPtr_IsNull, (IntPtr__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x02266240, Byte__Array *, KnownTerminals_get_linux, (MethodInfo * method));
DO_APP_FUNC(0x022662E0, Byte__Array *, KnownTerminals_get_xterm, (MethodInfo * method));
DO_APP_FUNC(0x02266380, Byte__Array *, KnownTerminals_get_ansi, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MarshalByRefObject__ctor, (MarshalByRefObject * __this, MethodInfo * method));
DO_APP_FUNC(0x02267EF0, ServerIdentity *, MarshalByRefObject_get_ObjectIdentity, (MarshalByRefObject * __this, MethodInfo * method));
DO_APP_FUNC(0x02267F40, void, MarshalByRefObject_set_ObjectIdentity, (MarshalByRefObject * __this, ServerIdentity * value, MethodInfo * method));
DO_APP_FUNC(0x02267F90, ObjRef *, MarshalByRefObject_CreateObjRef, (MarshalByRefObject * __this, Type * requestedType, MethodInfo * method));
DO_APP_FUNC(0x02267FE0, Object *, MarshalByRefObject_InitializeLifetimeService, (MarshalByRefObject * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MonoAsyncCall__ctor, (MonoAsyncCall * __this, MethodInfo * method));
DO_APP_FUNC(0x0226AAB0, bool, MonoCustomAttrs_IsUserCattrProvider, (Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0226AD30, Object__Array *, MonoCustomAttrs_GetCustomAttributesInternal, (ICustomAttributeProvider * obj, Type * attributeType, bool pseudoAttrs, MethodInfo * method));
DO_APP_FUNC(0x0226AE80, Object__Array *, MonoCustomAttrs_GetPseudoCustomAttributes, (ICustomAttributeProvider * obj, Type * attributeType, MethodInfo * method));
DO_APP_FUNC(0x0226B2A0, Object__Array *, MonoCustomAttrs_GetPseudoCustomAttributes_1, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x0226B5C0, Object__Array *, MonoCustomAttrs_GetCustomAttributesBase, (ICustomAttributeProvider * obj, Type * attributeType, bool inheritedOnly, MethodInfo * method));
DO_APP_FUNC(0x0226B8A0, Object__Array *, MonoCustomAttrs_GetCustomAttributes, (ICustomAttributeProvider * obj, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x0226C650, Object__Array *, MonoCustomAttrs_GetCustomAttributes_1, (ICustomAttributeProvider * obj, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x0226C870, CustomAttributeData__Array *, MonoCustomAttrs_GetCustomAttributesDataInternal, (ICustomAttributeProvider * obj, MethodInfo * method));
DO_APP_FUNC(0x0226C880, IList_1_System_Reflection_CustomAttributeData_ *, MonoCustomAttrs_GetCustomAttributesData, (ICustomAttributeProvider * obj, MethodInfo * method));
DO_APP_FUNC(0x0226C960, bool, MonoCustomAttrs_IsDefined, (ICustomAttributeProvider * obj, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x0226CC80, bool, MonoCustomAttrs_IsDefinedInternal, (ICustomAttributeProvider * obj, Type * AttributeType, MethodInfo * method));
DO_APP_FUNC(0x0226CCB0, PropertyInfo_1 *, MonoCustomAttrs_GetBasePropertyDefinition, (MonoProperty * property, MethodInfo * method));
DO_APP_FUNC(0x0226D250, EventInfo_1 *, MonoCustomAttrs_GetBaseEventDefinition, (MonoEvent * evt, MethodInfo * method));
DO_APP_FUNC(0x0226D550, ICustomAttributeProvider *, MonoCustomAttrs_GetBase, (ICustomAttributeProvider * obj, MethodInfo * method));
DO_APP_FUNC(0x0226D860, AttributeUsageAttribute *, MonoCustomAttrs_RetrieveAttributeUsageNoCache, (Type * attributeType, MethodInfo * method));
DO_APP_FUNC(0x0226DBB0, AttributeUsageAttribute *, MonoCustomAttrs_RetrieveAttributeUsage, (Type * attributeType, MethodInfo * method));
DO_APP_FUNC(0x0226DF60, void, MonoCustomAttrs__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00CC8D50, void, MonoCustomAttrs_AttributeInfo__ctor, (MonoCustomAttrs_AttributeInfo * __this, AttributeUsageAttribute * usage, int32_t inheritanceLevel, MethodInfo * method));
DO_APP_FUNC(0x002FA280, AttributeUsageAttribute *, MonoCustomAttrs_AttributeInfo_get_Usage, (MonoCustomAttrs_AttributeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, MonoCustomAttrs_AttributeInfo_get_InheritanceLevel, (MonoCustomAttrs_AttributeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0173FA70, void, MulticastDelegate_GetObjectData, (MulticastDelegate * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0226E0B0, bool, MulticastDelegate_Equals, (MulticastDelegate * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0173F8B0, int32_t, MulticastDelegate_GetHashCode, (MulticastDelegate * __this, MethodInfo * method));
DO_APP_FUNC(0x0226E2A0, MethodInfo_1 *, MulticastDelegate_GetMethodImpl, (MulticastDelegate * __this, MethodInfo * method));
DO_APP_FUNC(0x0226E430, Delegate__Array *, MulticastDelegate_GetInvocationList, (MulticastDelegate * __this, MethodInfo * method));
DO_APP_FUNC(0x0226E5E0, Delegate *, MulticastDelegate_CombineImpl, (MulticastDelegate * __this, Delegate * follow, MethodInfo * method));
DO_APP_FUNC(0x0226EA50, int32_t, MulticastDelegate_LastIndexOf, (MulticastDelegate * __this, Delegate__Array * haystack, Delegate__Array * needle, MethodInfo * method));
DO_APP_FUNC(0x0226EBE0, Delegate *, MulticastDelegate_RemoveImpl, (MulticastDelegate * __this, Delegate * value, MethodInfo * method));
DO_APP_FUNC(0x0226F3F0, ConsoleKeyInfo, NullConsoleDriver_ReadKey, (NullConsoleDriver * __this, bool intercept, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, NullConsoleDriver__ctor, (NullConsoleDriver * __this, MethodInfo * method));
DO_APP_FUNC(0x0226F4B0, void, NullConsoleDriver__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0226F650, Type *, Nullable_GetUnderlyingType, (Type * nullableType, MethodInfo * method));
DO_APP_FUNC(0x02273730, void, NumberFormatter_GetFormatterTables, (uint64_t * * MantissaBitsTable, int32_t * * TensExponentTable, uint16_t * * DigitLowerTable, uint16_t * * DigitUpperTable, int64_t * * TenPowersList, int32_t * * DecHexDigits, MethodInfo * method));
DO_APP_FUNC(0x02273780, void, NumberFormatter__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02273840, int64_t, NumberFormatter_GetTenPowerOf, (int32_t i, MethodInfo * method));
DO_APP_FUNC(0x022738F0, void, NumberFormatter_InitDecHexDigits, (NumberFormatter * __this, uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x022739F0, void, NumberFormatter_InitDecHexDigits_1, (NumberFormatter * __this, uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x02273B70, void, NumberFormatter_InitDecHexDigits_2, (NumberFormatter * __this, uint32_t hi, uint64_t lo, MethodInfo * method));
DO_APP_FUNC(0x02273DB0, uint32_t, NumberFormatter_FastToDecHex, (int32_t val, MethodInfo * method));
DO_APP_FUNC(0x02273EC0, uint32_t, NumberFormatter_ToDecHex, (int32_t val, MethodInfo * method));
DO_APP_FUNC(0x02273FC0, int32_t, NumberFormatter_FastDecHexLen, (int32_t val, MethodInfo * method));
DO_APP_FUNC(0x02273FF0, int32_t, NumberFormatter_DecHexLen, (uint32_t val, MethodInfo * method));
DO_APP_FUNC(0x02274110, int32_t, NumberFormatter_DecHexLen_1, (NumberFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x02274290, int32_t, NumberFormatter_ScaleOrder, (int64_t hi, MethodInfo * method));
DO_APP_FUNC(0x02274360, int32_t, NumberFormatter_InitialFloatingPrecision, (NumberFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x02274480, int32_t, NumberFormatter_ParsePrecision, (String * format, MethodInfo * method));
DO_APP_FUNC(0x02274500, void, NumberFormatter__ctor, (NumberFormatter * __this, Thread * current, MethodInfo * method));
DO_APP_FUNC(0x02274600, void, NumberFormatter_Init, (NumberFormatter * __this, String * format, MethodInfo * method));
DO_APP_FUNC(0x02274780, void, NumberFormatter_InitHex, (NumberFormatter * __this, uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x022747D0, void, NumberFormatter_Init_1, (NumberFormatter * __this, String * format, int32_t value, int32_t defPrecision, MethodInfo * method));
DO_APP_FUNC(0x02274880, void, NumberFormatter_Init_2, (NumberFormatter * __this, String * format, uint32_t value, int32_t defPrecision, MethodInfo * method));
DO_APP_FUNC(0x02274920, void, NumberFormatter_Init_3, (NumberFormatter * __this, String * format, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x022749C0, void, NumberFormatter_Init_4, (NumberFormatter * __this, String * format, uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x02274A50, void, NumberFormatter_Init_5, (NumberFormatter * __this, String * format, double value, int32_t defPrecision, MethodInfo * method));
DO_APP_FUNC(0x02274F00, void, NumberFormatter_Init_6, (NumberFormatter * __this, String * format, Decimal value, MethodInfo * method));
DO_APP_FUNC(0x022750F0, void, NumberFormatter_ResetCharBuf, (NumberFormatter * __this, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x022751A0, void, NumberFormatter_Resize, (NumberFormatter * __this, int32_t len, MethodInfo * method));
DO_APP_FUNC(0x02275360, void, NumberFormatter_Append, (NumberFormatter * __this, uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x022753E0, void, NumberFormatter_Append_1, (NumberFormatter * __this, uint16_t c, int32_t cnt, MethodInfo * method));
DO_APP_FUNC(0x02275480, void, NumberFormatter_Append_2, (NumberFormatter * __this, String * s, MethodInfo * method));
DO_APP_FUNC(0x02275550, NumberFormatInfo *, NumberFormatter_GetNumberFormatInstance, (NumberFormatter * __this, IFormatProvider * fp, MethodInfo * method));
DO_APP_FUNC(0x02275570, void, NumberFormatter_set_CurrentCulture, (NumberFormatter * __this, CultureInfo * value, MethodInfo * method));
DO_APP_FUNC(0x022755C0, int32_t, NumberFormatter_get_IntegerDigits, (NumberFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x022755D0, int32_t, NumberFormatter_get_DecimalDigits, (NumberFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x022755E0, bool, NumberFormatter_get_IsFloatingSource, (NumberFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x00AEDE10, bool, NumberFormatter_get_IsZero, (NumberFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x02275600, bool, NumberFormatter_get_IsZeroInteger, (NumberFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x02275620, void, NumberFormatter_RoundPos, (NumberFormatter * __this, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x02275630, bool, NumberFormatter_RoundDecimal, (NumberFormatter * __this, int32_t decimals, MethodInfo * method));
DO_APP_FUNC(0x02275650, bool, NumberFormatter_RoundBits, (NumberFormatter * __this, int32_t shift, MethodInfo * method));
DO_APP_FUNC(0x02275970, void, NumberFormatter_RemoveTrailingZeros, (NumberFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x022759A0, void, NumberFormatter_AddOneToDecHex, (NumberFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x02275B30, uint32_t, NumberFormatter_AddOneToDecHex_1, (uint32_t val, MethodInfo * method));
DO_APP_FUNC(0x02275BB0, int32_t, NumberFormatter_CountTrailingZeros, (NumberFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x02275E10, int32_t, NumberFormatter_CountTrailingZeros_1, (uint32_t val, MethodInfo * method));
DO_APP_FUNC(0x02275E60, NumberFormatter *, NumberFormatter_GetInstance, (IFormatProvider * fp, MethodInfo * method));
DO_APP_FUNC(0x022762B0, void, NumberFormatter_Release, (NumberFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x022763F0, String *, NumberFormatter_NumberToString, (String * format, uint32_t value, IFormatProvider * fp, MethodInfo * method));
DO_APP_FUNC(0x02276550, String *, NumberFormatter_NumberToString_1, (String * format, int32_t value, IFormatProvider * fp, MethodInfo * method));
DO_APP_FUNC(0x022766C0, String *, NumberFormatter_NumberToString_2, (String * format, uint64_t value, IFormatProvider * fp, MethodInfo * method));
DO_APP_FUNC(0x02276820, String *, NumberFormatter_NumberToString_3, (String * format, int64_t value, IFormatProvider * fp, MethodInfo * method));
DO_APP_FUNC(0x02276990, String *, NumberFormatter_NumberToString_4, (String * format, float value, IFormatProvider * fp, MethodInfo * method));
DO_APP_FUNC(0x02276B80, String *, NumberFormatter_NumberToString_5, (String * format, double value, IFormatProvider * fp, MethodInfo * method));
DO_APP_FUNC(0x02276E00, String *, NumberFormatter_NumberToString_6, (String * format, Decimal value, IFormatProvider * fp, MethodInfo * method));
DO_APP_FUNC(0x02276F20, String *, NumberFormatter_IntegerToString, (NumberFormatter * __this, String * format, IFormatProvider * fp, MethodInfo * method));
DO_APP_FUNC(0x02277170, String *, NumberFormatter_NumberToString_7, (NumberFormatter * __this, String * format, NumberFormatInfo * nfi, MethodInfo * method));
DO_APP_FUNC(0x02277360, String *, NumberFormatter_FormatCurrency, (NumberFormatter * __this, int32_t precision, NumberFormatInfo * nfi, MethodInfo * method));
DO_APP_FUNC(0x022776F0, String *, NumberFormatter_FormatDecimal, (NumberFormatter * __this, int32_t precision, NumberFormatInfo * nfi, MethodInfo * method));
DO_APP_FUNC(0x022777F0, String *, NumberFormatter_FormatHexadecimal, (NumberFormatter * __this, int32_t precision, MethodInfo * method));
DO_APP_FUNC(0x02277990, String *, NumberFormatter_FormatFixedPoint, (NumberFormatter * __this, int32_t precision, NumberFormatInfo * nfi, MethodInfo * method));
DO_APP_FUNC(0x02277B40, String *, NumberFormatter_FormatRoundtrip, (NumberFormatter * __this, double origval, NumberFormatInfo * nfi, MethodInfo * method));
DO_APP_FUNC(0x02277C70, String *, NumberFormatter_FormatRoundtrip_1, (NumberFormatter * __this, float origval, NumberFormatInfo * nfi, MethodInfo * method));
DO_APP_FUNC(0x02277D20, String *, NumberFormatter_FormatGeneral, (NumberFormatter * __this, int32_t precision, NumberFormatInfo * nfi, MethodInfo * method));
DO_APP_FUNC(0x02277E90, String *, NumberFormatter_FormatNumber, (NumberFormatter * __this, int32_t precision, NumberFormatInfo * nfi, MethodInfo * method));
DO_APP_FUNC(0x02278030, String *, NumberFormatter_FormatPercent, (NumberFormatter * __this, int32_t precision, NumberFormatInfo * nfi, MethodInfo * method));
DO_APP_FUNC(0x022781C0, String *, NumberFormatter_FormatExponential, (NumberFormatter * __this, int32_t precision, NumberFormatInfo * nfi, MethodInfo * method));
DO_APP_FUNC(0x02278220, String *, NumberFormatter_FormatExponential_1, (NumberFormatter * __this, int32_t precision, NumberFormatInfo * nfi, int32_t expDigits, MethodInfo * method));
DO_APP_FUNC(0x022783C0, String *, NumberFormatter_FormatCustom, (NumberFormatter * __this, String * format, NumberFormatInfo * nfi, MethodInfo * method));
DO_APP_FUNC(0x02278D90, void, NumberFormatter_ZeroTrimEnd, (StringBuilder * sb, bool canEmpty, MethodInfo * method));
DO_APP_FUNC(0x02278E30, bool, NumberFormatter_IsZeroOnly, (StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x02278F40, void, NumberFormatter_AppendNonNegativeNumber, (StringBuilder * sb, int32_t v, MethodInfo * method));
DO_APP_FUNC(0x022791E0, void, NumberFormatter_AppendIntegerString, (NumberFormatter * __this, int32_t minLength, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x02279270, void, NumberFormatter_AppendIntegerString_1, (NumberFormatter * __this, int32_t minLength, MethodInfo * method));
DO_APP_FUNC(0x02279340, void, NumberFormatter_AppendDecimalString, (NumberFormatter * __this, int32_t precision, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x02279370, void, NumberFormatter_AppendDecimalString_1, (NumberFormatter * __this, int32_t precision, MethodInfo * method));
DO_APP_FUNC(0x02279390, void, NumberFormatter_AppendIntegerStringWithGroupSeparator, (NumberFormatter * __this, Int32__Array * groups, String * groupSeparator, MethodInfo * method));
DO_APP_FUNC(0x02279600, void, NumberFormatter_AppendExponent, (NumberFormatter * __this, NumberFormatInfo * nfi, int32_t exponent, int32_t minDigits, MethodInfo * method));
DO_APP_FUNC(0x02279830, void, NumberFormatter_AppendOneDigit, (NumberFormatter * __this, int32_t start, MethodInfo * method));
DO_APP_FUNC(0x022798F0, void, NumberFormatter_AppendDigits, (NumberFormatter * __this, int32_t start, int32_t end, MethodInfo * method));
DO_APP_FUNC(0x02279C40, void, NumberFormatter_AppendDigits_1, (NumberFormatter * __this, int32_t start, int32_t end, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x02279E70, void, NumberFormatter_Multiply10, (NumberFormatter * __this, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02279E80, void, NumberFormatter_Divide10, (NumberFormatter * __this, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02279E90, NumberFormatter *, NumberFormatter_GetClone, (NumberFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x02279FC0, void, NumberFormatter_CustomInfo_GetActiveSection, (String * format, bool * positive, bool zero, int32_t * offset, int32_t * length, MethodInfo * method));
DO_APP_FUNC(0x0227A470, NumberFormatter_CustomInfo *, NumberFormatter_CustomInfo_Parse, (String * format, int32_t offset, int32_t length, NumberFormatInfo * nfi, MethodInfo * method));
DO_APP_FUNC(0x0227A910, String *, NumberFormatter_CustomInfo_Format, (NumberFormatter_CustomInfo * __this, String * format, int32_t offset, int32_t length, NumberFormatInfo * nfi, bool positive, StringBuilder * sb_int, StringBuilder * sb_dec, StringBuilder * sb_exp, MethodInfo * method));
DO_APP_FUNC(0x0227B250, void, NumberFormatter_CustomInfo__ctor, (NumberFormatter_CustomInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x015F8190, bool, Object_Equals, (Object * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0227B430, bool, Object_Equals_1, (Object * objA, Object * objB, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Object__ctor, (Object * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Object_Finalize, (Object * __this, MethodInfo * method));
DO_APP_FUNC(0x0194D440, int32_t, Object_GetHashCode, (Object * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1C4F0, Type *, Object_GetType, (Object * __this, MethodInfo * method));
DO_APP_FUNC(0x0173F610, Object *, Object_MemberwiseClone, (Object * __this, MethodInfo * method));
DO_APP_FUNC(0x01E16610, String *, Object_ToString, (Object * __this, MethodInfo * method));
DO_APP_FUNC(0x015F8190, bool, Object_ReferenceEquals, (Object * objA, Object * objB, MethodInfo * method));
DO_APP_FUNC(0x0194D440, int32_t, Object_InternalGetHashCode, (Object * o, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Object_FieldGetter, (Object * __this, String * typeName, String * fieldName, Object * * val, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Object_FieldSetter, (Object * __this, String * typeName, String * fieldName, Object * val, MethodInfo * method));
DO_APP_FUNC(0x0227BA00, void, OperatingSystem__ctor, (OperatingSystem * __this, PlatformID__Enum platform, Version * version, MethodInfo * method));
DO_APP_FUNC(0x0227BB50, void, OperatingSystem__ctor_1, (OperatingSystem * __this, SerializationInfo * information, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, PlatformID__Enum, OperatingSystem_get_Platform, (OperatingSystem * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Version *, OperatingSystem_get_Version, (OperatingSystem * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, OperatingSystem_get_ServicePack, (OperatingSystem * __this, MethodInfo * method));
DO_APP_FUNC(0x0227BCE0, Object *, OperatingSystem_Clone, (OperatingSystem * __this, MethodInfo * method));
DO_APP_FUNC(0x0227BE40, void, OperatingSystem_GetObjectData, (OperatingSystem * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0227BF30, String *, OperatingSystem_ToString, (OperatingSystem * __this, MethodInfo * method));
DO_APP_FUNC(0x026990C0, void, ResolveEventArgs__ctor, (ResolveEventArgs * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x02699170, void, ResolveEventArgs__ctor_1, (ResolveEventArgs * __this, String * name, Assembly * requestingAssembly, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, ResolveEventHandler__ctor, (ResolveEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01434D20, Assembly *, ResolveEventHandler_Invoke, (ResolveEventHandler * __this, Object * sender, ResolveEventArgs * args, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, ResolveEventHandler_BeginInvoke, (ResolveEventHandler * __this, Object * sender, ResolveEventArgs * args, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, Assembly *, ResolveEventHandler_EndInvoke, (ResolveEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, RuntimeFieldHandle__ctor, (RuntimeFieldHandle__Boxed * __this, void * v, MethodInfo * method));
DO_APP_FUNC(0x001D7E50, void, RuntimeFieldHandle__ctor_1, (RuntimeFieldHandle__Boxed * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x00107C00, void *, RuntimeFieldHandle_get_Value, (RuntimeFieldHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D7E70, void, RuntimeFieldHandle_GetObjectData, (RuntimeFieldHandle__Boxed * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x001D7FE0, bool, RuntimeFieldHandle_Equals, (RuntimeFieldHandle__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0010E170, int32_t, RuntimeFieldHandle_GetHashCode, (RuntimeFieldHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE2430, void, RuntimeFieldHandle_SetValueInternal, (FieldInfo_1 * fi, Object * obj, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01EE2430, void, RuntimeFieldHandle_SetValue, (RtFieldInfo * field, Object * obj, Object * value, RuntimeType * fieldType, FieldAttributes__Enum fieldAttr, RuntimeType * declaringType, bool * domainInitialized, MethodInfo * method));
DO_APP_FUNC(0x01EE2440, void, RuntimeFieldHandle_SetValueDirect, (RtFieldInfo * field, RuntimeType * fieldType, Void * pTypedRef, Object * value, RuntimeType * contextType, MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, RuntimeMethodHandle__ctor, (RuntimeMethodHandle__Boxed * __this, void * v, MethodInfo * method));
DO_APP_FUNC(0x001D8110, void, RuntimeMethodHandle__ctor_1, (RuntimeMethodHandle__Boxed * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x00107C00, void *, RuntimeMethodHandle_get_Value, (RuntimeMethodHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D8130, void, RuntimeMethodHandle_GetObjectData, (RuntimeMethodHandle__Boxed * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x001D82A0, bool, RuntimeMethodHandle_Equals, (RuntimeMethodHandle__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0010E170, int32_t, RuntimeMethodHandle_GetHashCode, (RuntimeMethodHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE2730, String *, RuntimeMethodHandle_ConstructInstantiation, (RuntimeMethodInfo * method_1, TypeNameFormatFlags__Enum format, MethodInfo * method));
DO_APP_FUNC(0x001D83D0, bool, RuntimeMethodHandle_IsNullHandle, (RuntimeMethodHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, RuntimeTypeHandle__ctor, (RuntimeTypeHandle__Boxed * __this, void * val, MethodInfo * method));
DO_APP_FUNC(0x001D83E0, void, RuntimeTypeHandle__ctor_1, (RuntimeTypeHandle__Boxed * __this, RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x001D8400, void, RuntimeTypeHandle__ctor_2, (RuntimeTypeHandle__Boxed * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x00107C00, void *, RuntimeTypeHandle_get_Value, (RuntimeTypeHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D8420, void, RuntimeTypeHandle_GetObjectData, (RuntimeTypeHandle__Boxed * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x001D8440, bool, RuntimeTypeHandle_Equals, (RuntimeTypeHandle__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0010E170, int32_t, RuntimeTypeHandle_GetHashCode, (RuntimeTypeHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE7420, TypeAttributes__Enum, RuntimeTypeHandle_GetAttributes, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x01EEAF60, int32_t, RuntimeTypeHandle_GetMetadataToken, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x01EEAF60, int32_t, RuntimeTypeHandle_GetToken, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x01EF05E0, Type *, RuntimeTypeHandle_GetGenericTypeDefinition_impl, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x01EF05E0, Type *, RuntimeTypeHandle_GetGenericTypeDefinition, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x01EE7770, bool, RuntimeTypeHandle_HasElementType, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x01EE9140, bool, RuntimeTypeHandle_HasInstantiation, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x01EE7920, bool, RuntimeTypeHandle_IsArray, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x01EE7520, bool, RuntimeTypeHandle_IsByRef, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, RuntimeTypeHandle_IsComObject, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x01EE6CF0, bool, RuntimeTypeHandle_IsInstanceOfType, (RuntimeType * type, Object * o, MethodInfo * method));
DO_APP_FUNC(0x01EE7560, bool, RuntimeTypeHandle_IsPointer, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x01EE7530, bool, RuntimeTypeHandle_IsPrimitive, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x01EF0640, bool, RuntimeTypeHandle_HasReferences, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, RuntimeTypeHandle_IsComObject_1, (RuntimeType * type, bool isGenericCOM, MethodInfo * method));
DO_APP_FUNC(0x01EE7450, bool, RuntimeTypeHandle_IsContextful, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, RuntimeTypeHandle_IsEquivalentTo, (RuntimeType * rtType1, RuntimeType * rtType2, MethodInfo * method));
DO_APP_FUNC(0x01EE78C0, bool, RuntimeTypeHandle_IsSzArray, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x01EF0660, bool, RuntimeTypeHandle_IsInterface, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x01EF0690, int32_t, RuntimeTypeHandle_GetArrayRank, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x01EE6CD0, RuntimeAssembly *, RuntimeTypeHandle_GetAssembly, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x01EE7A30, RuntimeType *, RuntimeTypeHandle_GetElementType, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x01EE6CB0, RuntimeModule *, RuntimeTypeHandle_GetModule, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x01EE8ED0, bool, RuntimeTypeHandle_IsGenericVariable, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x01EF06B0, RuntimeType *, RuntimeTypeHandle_GetBaseType, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x01EF06E0, bool, RuntimeTypeHandle_CanCastTo, (RuntimeType * type, RuntimeType * target, MethodInfo * method));
DO_APP_FUNC(0x01EF0750, bool, RuntimeTypeHandle_type_is_assignable_from, (Type * a, Type * b, MethodInfo * method));
DO_APP_FUNC(0x01EE8EA0, bool, RuntimeTypeHandle_IsGenericTypeDefinition, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x01EF07C0, void *, RuntimeTypeHandle_GetGenericParameterInfo, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x0243E7C0, String *, TermInfoDriver_TryTermInfoDir, (String * dir, String * term, MethodInfo * method));
DO_APP_FUNC(0x0243E950, String *, TermInfoDriver_SearchTerminfo, (String * term, MethodInfo * method));
DO_APP_FUNC(0x0243EB20, void, TermInfoDriver_WriteConsole, (TermInfoDriver * __this, String * str, MethodInfo * method));
DO_APP_FUNC(0x0243EB50, void, TermInfoDriver__ctor, (TermInfoDriver * __this, String * term, MethodInfo * method));
DO_APP_FUNC(0x003FD650, bool, TermInfoDriver_get_Initialized, (TermInfoDriver * __this, MethodInfo * method));
DO_APP_FUNC(0x0243F470, void, TermInfoDriver_Init, (TermInfoDriver * __this, MethodInfo * method));
DO_APP_FUNC(0x0243FD80, void, TermInfoDriver_IncrementX, (TermInfoDriver * __this, MethodInfo * method));
DO_APP_FUNC(0x0243FE10, void, TermInfoDriver_WriteSpecialKey, (TermInfoDriver * __this, ConsoleKeyInfo key, MethodInfo * method));
DO_APP_FUNC(0x02440030, void, TermInfoDriver_WriteSpecialKey_1, (TermInfoDriver * __this, uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x02440080, bool, TermInfoDriver_IsSpecialKey, (TermInfoDriver * __this, ConsoleKeyInfo key, MethodInfo * method));
DO_APP_FUNC(0x02440120, bool, TermInfoDriver_IsSpecialKey_1, (TermInfoDriver * __this, uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x024401F0, void, TermInfoDriver_GetCursorPosition, (TermInfoDriver * __this, MethodInfo * method));
DO_APP_FUNC(0x024402E0, void, TermInfoDriver_CheckWindowDimensions, (TermInfoDriver * __this, MethodInfo * method));
DO_APP_FUNC(0x02440530, int32_t, TermInfoDriver_get_WindowHeight, (TermInfoDriver * __this, MethodInfo * method));
DO_APP_FUNC(0x02440560, int32_t, TermInfoDriver_get_WindowWidth, (TermInfoDriver * __this, MethodInfo * method));
DO_APP_FUNC(0x02440590, void, TermInfoDriver_AddToBuffer, (TermInfoDriver * __this, int32_t b, MethodInfo * method));
DO_APP_FUNC(0x024406D0, void, TermInfoDriver_AdjustBuffer, (TermInfoDriver * __this, MethodInfo * method));
DO_APP_FUNC(0x024406F0, ConsoleKeyInfo, TermInfoDriver_CreateKeyInfoFromInt, (TermInfoDriver * __this, int32_t n, bool alt, MethodInfo * method));
DO_APP_FUNC(0x02440820, Object *, TermInfoDriver_GetKeyFromBuffer, (TermInfoDriver * __this, bool cooked, MethodInfo * method));
DO_APP_FUNC(0x02440C80, ConsoleKeyInfo, TermInfoDriver_ReadKeyInternal, (TermInfoDriver * __this, bool * fresh, MethodInfo * method));
DO_APP_FUNC(0x02440E80, bool, TermInfoDriver_InputPending, (TermInfoDriver * __this, MethodInfo * method));
DO_APP_FUNC(0x02440EC0, void, TermInfoDriver_QueueEcho, (TermInfoDriver * __this, uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x02441010, void, TermInfoDriver_Echo, (TermInfoDriver * __this, ConsoleKeyInfo key, MethodInfo * method));
DO_APP_FUNC(0x02441250, void, TermInfoDriver_EchoFlush, (TermInfoDriver * __this, MethodInfo * method));
DO_APP_FUNC(0x024412A0, int32_t, TermInfoDriver_Read, (TermInfoDriver * __this, Char__Array * dest, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02441920, ConsoleKeyInfo, TermInfoDriver_ReadKey, (TermInfoDriver * __this, bool intercept, MethodInfo * method));
DO_APP_FUNC(0x024419D0, String *, TermInfoDriver_ReadLine, (TermInfoDriver * __this, MethodInfo * method));
DO_APP_FUNC(0x024419E0, String *, TermInfoDriver_ReadToEnd, (TermInfoDriver * __this, MethodInfo * method));
DO_APP_FUNC(0x024419F0, String *, TermInfoDriver_ReadUntilConditionInternal, (TermInfoDriver * __this, bool haltOnNewLine, MethodInfo * method));
DO_APP_FUNC(0x02441DA0, void, TermInfoDriver_SetCursorPosition, (TermInfoDriver * __this, int32_t left, int32_t top, MethodInfo * method));
DO_APP_FUNC(0x02441FF0, void, TermInfoDriver_CreateKeyMap, (TermInfoDriver * __this, MethodInfo * method));
DO_APP_FUNC(0x024446C0, void, TermInfoDriver_InitKeys, (TermInfoDriver * __this, MethodInfo * method));
DO_APP_FUNC(0x02444970, void, TermInfoDriver_AddStringMapping, (TermInfoDriver * __this, TermInfoStrings__Enum s, MethodInfo * method));
DO_APP_FUNC(0x024449D0, void, TermInfoDriver__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0227C930, String *, ParameterizedStrings_Evaluate, (String * format, ParameterizedStrings_FormatParam__Array * args, MethodInfo * method));
DO_APP_FUNC(0x0227CC40, String *, ParameterizedStrings_EvaluateInternal, (String * format, int32_t * pos, ParameterizedStrings_FormatParam__Array * args, ParameterizedStrings_LowLevelStack * stack, ParameterizedStrings_FormatParam__Array * * dynamicVars, ParameterizedStrings_FormatParam__Array * * staticVars, MethodInfo * method));
DO_APP_FUNC(0x020378B0, bool, ParameterizedStrings_AsBool, (int32_t i, MethodInfo * method));
DO_APP_FUNC(0x0203AB80, int32_t, ParameterizedStrings_AsInt, (bool b, MethodInfo * method));
DO_APP_FUNC(0x0227DA00, String *, ParameterizedStrings_StringFromAsciiBytes, (Byte__Array * buffer, int32_t offset, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x0227DB20, int32_t, ParameterizedStrings_snprintf, (uint8_t * str, void * size, String * format, String * arg1, MethodInfo * method));
DO_APP_FUNC(0x0227DD70, int32_t, ParameterizedStrings_snprintf_1, (uint8_t * str, void * size, String * format, int32_t arg1, MethodInfo * method));
DO_APP_FUNC(0x0227DF10, String *, ParameterizedStrings_FormatPrintF, (String * format, Object * arg, MethodInfo * method));
DO_APP_FUNC(0x0227E210, ParameterizedStrings_FormatParam__Array *, ParameterizedStrings_GetDynamicOrStaticVariables, (uint16_t c, ParameterizedStrings_FormatParam__Array * * dynamicVars, ParameterizedStrings_FormatParam__Array * * staticVars, int32_t * index, MethodInfo * method));
DO_APP_FUNC(0x001E1180, void, ParameterizedStrings_FormatParam__ctor, (ParameterizedStrings_FormatParam__Boxed * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0013C010, void, ParameterizedStrings_FormatParam__ctor_1, (ParameterizedStrings_FormatParam__Boxed * __this, int32_t intValue, String * stringValue, MethodInfo * method));
DO_APP_FUNC(0x0227E330, ParameterizedStrings_FormatParam, ParameterizedStrings_FormatParam_op_Implicit, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0010E170, int32_t, ParameterizedStrings_FormatParam_get_Int32, (ParameterizedStrings_FormatParam__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E1190, String *, ParameterizedStrings_FormatParam_get_String, (ParameterizedStrings_FormatParam__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E11A0, Object *, ParameterizedStrings_FormatParam_get_Object, (ParameterizedStrings_FormatParam__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0227E470, void, ParameterizedStrings_LowLevelStack__ctor, (ParameterizedStrings_LowLevelStack * __this, MethodInfo * method));
DO_APP_FUNC(0x0227E500, ParameterizedStrings_FormatParam, ParameterizedStrings_LowLevelStack_Pop, (ParameterizedStrings_LowLevelStack * __this, MethodInfo * method));
DO_APP_FUNC(0x0227E610, void, ParameterizedStrings_LowLevelStack_Push, (ParameterizedStrings_LowLevelStack * __this, ParameterizedStrings_FormatParam item, MethodInfo * method));
DO_APP_FUNC(0x0227E750, void, ParameterizedStrings_LowLevelStack_Clear, (ParameterizedStrings_LowLevelStack * __this, MethodInfo * method));
DO_APP_FUNC(0x0229F8E0, void, ByteMatcher_AddMapping, (ByteMatcher * __this, TermInfoStrings__Enum key, Byte__Array * val, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ByteMatcher_Sort, (ByteMatcher * __this, MethodInfo * method));
DO_APP_FUNC(0x0229FA40, bool, ByteMatcher_StartsWith, (ByteMatcher * __this, int32_t c, MethodInfo * method));
DO_APP_FUNC(0x0229FB00, TermInfoStrings__Enum, ByteMatcher_Match, (ByteMatcher * __this, Char__Array * buffer, int32_t offset, int32_t length, int32_t * used, MethodInfo * method));
DO_APP_FUNC(0x0229FE40, void, ByteMatcher__ctor, (ByteMatcher * __this, MethodInfo * method));
DO_APP_FUNC(0x02444C20, void, TermInfoReader__ctor, (TermInfoReader * __this, String * term, String * filename, MethodInfo * method));
DO_APP_FUNC(0x02444E60, void, TermInfoReader__ctor_1, (TermInfoReader * __this, String * term, Byte__Array * buffer, MethodInfo * method));
DO_APP_FUNC(0x02444F60, void, TermInfoReader_ReadHeader, (TermInfoReader * __this, Byte__Array * buffer, int32_t * position, MethodInfo * method));
DO_APP_FUNC(0x02445260, void, TermInfoReader_ReadNames, (TermInfoReader * __this, Byte__Array * buffer, int32_t * position, MethodInfo * method));
DO_APP_FUNC(0x02445290, int32_t, TermInfoReader_Get, (TermInfoReader * __this, TermInfoNumbers__Enum number, MethodInfo * method));
DO_APP_FUNC(0x024452F0, String *, TermInfoReader_Get_1, (TermInfoReader * __this, TermInfoStrings__Enum tstr, MethodInfo * method));
DO_APP_FUNC(0x02445400, Byte__Array *, TermInfoReader_GetStringBytes, (TermInfoReader * __this, TermInfoStrings__Enum tstr, MethodInfo * method));
DO_APP_FUNC(0x02445600, int16_t, TermInfoReader_GetInt16, (TermInfoReader * __this, Byte__Array * buffer, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x02445680, String *, TermInfoReader_GetString, (TermInfoReader * __this, Byte__Array * buffer, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x02445720, Byte__Array *, TermInfoReader_GetStringBytes_1, (TermInfoReader * __this, Byte__Array * buffer, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TimeZone__ctor, (TimeZone * __this, MethodInfo * method));
DO_APP_FUNC(0x027AE670, void, TimeZone__cctor, (MethodInfo * method));
DO_APP_FUNC(0x028A0BF0, void, CurrentSystemTimeZone__ctor, (CurrentSystemTimeZone * __this, MethodInfo * method));
DO_APP_FUNC(0x028A0C90, bool, CurrentSystemTimeZone_GetTimeZoneData, (int32_t year, Int64__Array * * data, String__Array * * names, bool * daylight_inverted, MethodInfo * method));
DO_APP_FUNC(0x027AE320, void, TimeType__ctor, (TimeType * __this, int32_t offset, bool is_dst, String * abbrev, MethodInfo * method));
DO_APP_FUNC(0x027AE330, String *, TimeType_ToString, (TimeType * __this, MethodInfo * method));
DO_APP_FUNC(0x027C1720, bool, TypeNames_ATypeName_Equals, (TypeNames_ATypeName * __this, TypeName * other, MethodInfo * method));
DO_APP_FUNC(0x027C1810, int32_t, TypeNames_ATypeName_GetHashCode, (TypeNames_ATypeName * __this, MethodInfo * method));
DO_APP_FUNC(0x027C1850, bool, TypeNames_ATypeName_Equals_1, (TypeNames_ATypeName * __this, Object * other, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TypeNames_ATypeName__ctor, (TypeNames_ATypeName * __this, MethodInfo * method));
DO_APP_FUNC(0x027C09A0, TypeIdentifier *, TypeIdentifiers_FromDisplay, (String * displayName, MethodInfo * method));
DO_APP_FUNC(0x00B701E0, void, TypeIdentifiers_Display__ctor, (TypeIdentifiers_Display * __this, String * displayName, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, TypeIdentifiers_Display_get_DisplayName, (TypeIdentifiers_Display * __this, MethodInfo * method));
DO_APP_FUNC(0x027C0AF0, String *, TypeIdentifiers_Display_get_InternalName, (TypeIdentifiers_Display * __this, MethodInfo * method));
DO_APP_FUNC(0x027C0B20, String *, TypeIdentifiers_Display_GetInternalName, (TypeIdentifiers_Display * __this, MethodInfo * method));
DO_APP_FUNC(0x02298B90, void, ArraySpec__ctor, (ArraySpec * __this, int32_t dimensions, bool bound, MethodInfo * method));
DO_APP_FUNC(0x02298BA0, Type *, ArraySpec_Resolve, (ArraySpec * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x02298C30, StringBuilder *, ArraySpec_Append, (ArraySpec * __this, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x02298D40, String *, ArraySpec_ToString, (ArraySpec * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, PointerSpec__ctor, (PointerSpec * __this, int32_t pointer_level, MethodInfo * method));
DO_APP_FUNC(0x022804B0, Type *, PointerSpec_Resolve, (PointerSpec * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x02280500, StringBuilder *, PointerSpec_Append, (PointerSpec * __this, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x02280530, String *, PointerSpec_ToString, (PointerSpec * __this, MethodInfo * method));
DO_APP_FUNC(0x00519290, bool, TypeSpec_get_HasModifiers, (TypeSpec * __this, MethodInfo * method));
DO_APP_FUNC(0x027C19B0, String *, TypeSpec_GetDisplayFullName, (TypeSpec * __this, TypeSpec_DisplayNameFormat__Enum flags, MethodInfo * method));
DO_APP_FUNC(0x027C20E0, StringBuilder *, TypeSpec_GetModifierString, (TypeSpec * __this, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x027C22F0, String *, TypeSpec_get_DisplayFullName, (TypeSpec * __this, MethodInfo * method));
DO_APP_FUNC(0x027C2320, TypeSpec *, TypeSpec_Parse, (String * typeName, MethodInfo * method));
DO_APP_FUNC(0x027C2430, String *, TypeSpec_UnescapeInternalName, (String * displayName, MethodInfo * method));
DO_APP_FUNC(0x027C2610, Type *, TypeSpec_Resolve, (TypeSpec * __this, Func_2_System_Reflection_AssemblyName_System_Reflection_Assembly_ * assemblyResolver, Func_4_System_Reflection_Assembly_String_Boolean_Type_ * typeResolver, bool throwOnError, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x027C2EF0, void, TypeSpec_AddName, (TypeSpec * __this, String * type_name, MethodInfo * method));
DO_APP_FUNC(0x027C30A0, void, TypeSpec_AddModifier, (TypeSpec * __this, ModifierSpec * md, MethodInfo * method));
DO_APP_FUNC(0x027C3220, void, TypeSpec_SkipSpace, (String * name, int32_t * pos, MethodInfo * method));
DO_APP_FUNC(0x027C3310, void, TypeSpec_BoundCheck, (int32_t idx, String * s, MethodInfo * method));
DO_APP_FUNC(0x027C33E0, TypeIdentifier *, TypeSpec_ParsedTypeIdentifier, (String * displayName, MethodInfo * method));
DO_APP_FUNC(0x027C33F0, TypeSpec *, TypeSpec_Parse_1, (String * name, int32_t * p, bool is_recurse, bool allow_aqn, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TypeSpec__ctor, (TypeSpec * __this, MethodInfo * method));
DO_APP_FUNC(0x00206760, void, UIntPtr__ctor, (UIntPtr__Boxed * __this, uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x00206770, void, UIntPtr__ctor_1, (UIntPtr__Boxed * __this, uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, UIntPtr__ctor_2, (UIntPtr__Boxed * __this, Void * value, MethodInfo * method));
DO_APP_FUNC(0x00206780, bool, UIntPtr_Equals, (UIntPtr__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0010E170, int32_t, UIntPtr_GetHashCode, (UIntPtr__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00107C00, uint64_t, UIntPtr_ToUInt64, (UIntPtr__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00206790, String *, UIntPtr_ToString, (UIntPtr__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00206840, void, UIntPtr_System_Runtime_Serialization_ISerializable_GetObjectData, (UIntPtr__Boxed * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x015F8190, bool, UIntPtr_op_Equality, (void * value1, void * value2, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, uint64_t, UIntPtr_op_Explicit, (void * value, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, void *, UIntPtr_op_Explicit_1, (Void * value, MethodInfo * method));
DO_APP_FUNC(0x0043D9A0, int32_t, UIntPtr_get_Size, (MethodInfo * method));
DO_APP_FUNC(0x027C59D0, void, UIntPtr__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ValueType__ctor, (ValueType * __this, MethodInfo * method));
DO_APP_FUNC(0x0314B030, bool, ValueType_InternalEquals, (Object * o1, Object * o2, Object__Array * * fields, MethodInfo * method));
DO_APP_FUNC(0x0314B040, bool, ValueType_DefaultEquals, (Object * o1, Object * o2, MethodInfo * method));
DO_APP_FUNC(0x01A13D40, bool, ValueType_Equals, (ValueType * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0314B1E0, int32_t, ValueType_InternalGetHashCode, (Object * o, Object__Array * * fields, MethodInfo * method));
DO_APP_FUNC(0x0314B1F0, int32_t, ValueType_GetHashCode, (ValueType * __this, MethodInfo * method));
DO_APP_FUNC(0x0314B280, String *, ValueType_ToString, (ValueType * __this, MethodInfo * method));
DO_APP_FUNC(0x00249F30, void, Variant_Clear, (Variant__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0314DC40, void, WeakReference_AllocateHandle, (WeakReference * __this, Object * target, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WeakReference__ctor, (WeakReference * __this, MethodInfo * method));
DO_APP_FUNC(0x0314DC70, void, WeakReference__ctor_1, (WeakReference * __this, Object * target, MethodInfo * method));
DO_APP_FUNC(0x0314DCA0, void, WeakReference__ctor_2, (WeakReference * __this, Object * target, bool trackResurrection, MethodInfo * method));
DO_APP_FUNC(0x0314DCD0, void, WeakReference__ctor_3, (WeakReference * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0314DE10, bool, WeakReference_get_IsAlive, (WeakReference * __this, MethodInfo * method));
DO_APP_FUNC(0x0314DE30, Object *, WeakReference_get_Target, (WeakReference * __this, MethodInfo * method));
DO_APP_FUNC(0x0314DE40, void, WeakReference_set_Target, (WeakReference * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, WeakReference_get_TrackResurrection, (WeakReference * __this, MethodInfo * method));
DO_APP_FUNC(0x0314DE50, void, WeakReference_Finalize, (WeakReference * __this, MethodInfo * method));
DO_APP_FUNC(0x0314DED0, void, WeakReference_GetObjectData, (WeakReference * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0314E010, void, WindowsConsoleDriver__ctor, (WindowsConsoleDriver * __this, MethodInfo * method));
DO_APP_FUNC(0x0314E150, ConsoleKeyInfo, WindowsConsoleDriver_ReadKey, (WindowsConsoleDriver * __this, bool intercept, MethodInfo * method));
DO_APP_FUNC(0x0314E450, bool, WindowsConsoleDriver_IsModifierKey, (int16_t virtualKeyCode, MethodInfo * method));
DO_APP_FUNC(0x0314E480, void *, WindowsConsoleDriver_GetStdHandle, (Handles__Enum handle, MethodInfo * method));
DO_APP_FUNC(0x0314E580, bool, WindowsConsoleDriver_GetConsoleScreenBufferInfo, (void * handle, ConsoleScreenBufferInfo * info, MethodInfo * method));
DO_APP_FUNC(0x0314E680, bool, WindowsConsoleDriver_ReadConsoleInput, (void * handle, InputRecord * record, int32_t length, int32_t * nread, MethodInfo * method));
DO_APP_FUNC(0x0314E810, void, _ComObject__ctor, (_ComObject * __this, MethodInfo * method));
DO_APP_FUNC(0x02445830, void, ASCIIEncoding__ctor, (ASCIIEncoding * __this, MethodInfo * method));
DO_APP_FUNC(0x024458C0, void, ASCIIEncoding_SetDefaultFallbacks, (ASCIIEncoding * __this, MethodInfo * method));
DO_APP_FUNC(0x024458F0, int32_t, ASCIIEncoding_GetByteCount, (ASCIIEncoding * __this, Char__Array * chars, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02445AC0, int32_t, ASCIIEncoding_GetByteCount_1, (ASCIIEncoding * __this, String * chars, MethodInfo * method));
DO_APP_FUNC(0x02445BA0, int32_t, ASCIIEncoding_GetByteCount_2, (ASCIIEncoding * __this, uint16_t * chars, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02445CE0, int32_t, ASCIIEncoding_GetBytes, (ASCIIEncoding * __this, String * chars, int32_t charIndex, int32_t charCount, Byte__Array * bytes, int32_t byteIndex, MethodInfo * method));
DO_APP_FUNC(0x02445F70, int32_t, ASCIIEncoding_GetBytes_1, (ASCIIEncoding * __this, Char__Array * chars, int32_t charIndex, int32_t charCount, Byte__Array * bytes, int32_t byteIndex, MethodInfo * method));
DO_APP_FUNC(0x02446210, int32_t, ASCIIEncoding_GetBytes_2, (ASCIIEncoding * __this, uint16_t * chars, int32_t charCount, uint8_t * bytes, int32_t byteCount, MethodInfo * method));
DO_APP_FUNC(0x02446390, int32_t, ASCIIEncoding_GetCharCount, (ASCIIEncoding * __this, Byte__Array * bytes, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02446560, int32_t, ASCIIEncoding_GetCharCount_1, (ASCIIEncoding * __this, uint8_t * bytes, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x024466A0, int32_t, ASCIIEncoding_GetChars, (ASCIIEncoding * __this, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, Char__Array * chars, int32_t charIndex, MethodInfo * method));
DO_APP_FUNC(0x02446940, int32_t, ASCIIEncoding_GetChars_1, (ASCIIEncoding * __this, uint8_t * bytes, int32_t byteCount, uint16_t * chars, int32_t charCount, MethodInfo * method));
DO_APP_FUNC(0x02446AC0, String *, ASCIIEncoding_GetString, (ASCIIEncoding * __this, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, MethodInfo * method));
DO_APP_FUNC(0x02446C90, int32_t, ASCIIEncoding_GetByteCount_3, (ASCIIEncoding * __this, uint16_t * chars, int32_t charCount, EncoderNLS * encoder, MethodInfo * method));
DO_APP_FUNC(0x02447050, int32_t, ASCIIEncoding_GetBytes_3, (ASCIIEncoding * __this, uint16_t * chars, int32_t charCount, uint8_t * bytes, int32_t byteCount, EncoderNLS * encoder, MethodInfo * method));
DO_APP_FUNC(0x024475F0, int32_t, ASCIIEncoding_GetCharCount_2, (ASCIIEncoding * __this, uint8_t * bytes, int32_t count, DecoderNLS * decoder, MethodInfo * method));
DO_APP_FUNC(0x024477C0, int32_t, ASCIIEncoding_GetChars_2, (ASCIIEncoding * __this, uint8_t * bytes, int32_t byteCount, uint16_t * chars, int32_t charCount, DecoderNLS * decoder, MethodInfo * method));
DO_APP_FUNC(0x02447B40, int32_t, ASCIIEncoding_GetMaxByteCount, (ASCIIEncoding * __this, int32_t charCount, MethodInfo * method));
DO_APP_FUNC(0x02447CB0, int32_t, ASCIIEncoding_GetMaxCharCount, (ASCIIEncoding * __this, int32_t byteCount, MethodInfo * method));
DO_APP_FUNC(0x02447E20, Decoder *, ASCIIEncoding_GetDecoder, (ASCIIEncoding * __this, MethodInfo * method));
DO_APP_FUNC(0x02447F90, Encoder *, ASCIIEncoding_GetEncoder, (ASCIIEncoding * __this, MethodInfo * method));
DO_APP_FUNC(0x02448100, void, Decoder_SerializeDecoder, (Decoder * __this, SerializationInfo * info, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Decoder__ctor, (Decoder * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, DecoderFallback *, Decoder_get_Fallback, (Decoder * __this, MethodInfo * method));
DO_APP_FUNC(0x024481A0, DecoderFallbackBuffer *, Decoder_get_FallbackBuffer, (Decoder * __this, MethodInfo * method));
DO_APP_FUNC(0x009B3690, bool, Decoder_get_InternalHasFallbackBuffer, (Decoder * __this, MethodInfo * method));
DO_APP_FUNC(0x02448210, void, Decoder_Reset, (Decoder * __this, MethodInfo * method));
DO_APP_FUNC(0x02448320, int32_t, Decoder_GetCharCount, (Decoder * __this, Byte__Array * bytes, int32_t index, int32_t count, bool flush, MethodInfo * method));
DO_APP_FUNC(0x02448340, int32_t, Decoder_GetCharCount_1, (Decoder * __this, uint8_t * bytes, int32_t count, bool flush, MethodInfo * method));
DO_APP_FUNC(0x024484E0, int32_t, Decoder_GetChars, (Decoder * __this, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, Char__Array * chars, int32_t charIndex, bool flush, MethodInfo * method));
DO_APP_FUNC(0x02448500, int32_t, Decoder_GetChars_1, (Decoder * __this, uint8_t * bytes, int32_t byteCount, uint16_t * chars, int32_t charCount, bool flush, MethodInfo * method));
DO_APP_FUNC(0x02448770, void, Decoder_Convert, (Decoder * __this, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, Char__Array * chars, int32_t charIndex, int32_t charCount, bool flush, int32_t * bytesUsed, int32_t * charsUsed, bool * completed, MethodInfo * method));
DO_APP_FUNC(0x02448B00, void, Decoder_Convert_1, (Decoder * __this, uint8_t * bytes, int32_t byteCount, uint16_t * chars, int32_t charCount, bool flush, int32_t * bytesUsed, int32_t * charsUsed, bool * completed, MethodInfo * method));
DO_APP_FUNC(0x02457F90, void, InternalDecoderBestFitFallback__ctor, (InternalDecoderBestFitFallback * __this, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x02457FB0, DecoderFallbackBuffer *, InternalDecoderBestFitFallback_CreateFallbackBuffer, (InternalDecoderBestFitFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x00417920, int32_t, InternalDecoderBestFitFallback_get_MaxCharCount, (InternalDecoderBestFitFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x02458100, bool, InternalDecoderBestFitFallback_Equals, (InternalDecoderBestFitFallback * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01F3F1A0, int32_t, InternalDecoderBestFitFallback_GetHashCode, (InternalDecoderBestFitFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x02458200, Object *, InternalDecoderBestFitFallbackBuffer_get_InternalSyncObject, (MethodInfo * method));
DO_APP_FUNC(0x02458370, void, InternalDecoderBestFitFallbackBuffer__ctor, (InternalDecoderBestFitFallbackBuffer * __this, InternalDecoderBestFitFallback * fallback, MethodInfo * method));
DO_APP_FUNC(0x02458610, bool, InternalDecoderBestFitFallbackBuffer_Fallback, (InternalDecoderBestFitFallbackBuffer * __this, Byte__Array * bytesUnknown, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02458660, uint16_t, InternalDecoderBestFitFallbackBuffer_GetNextChar, (InternalDecoderBestFitFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x02458690, int32_t, InternalDecoderBestFitFallbackBuffer_get_Remaining, (InternalDecoderBestFitFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x024586A0, void, InternalDecoderBestFitFallbackBuffer_Reset, (InternalDecoderBestFitFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x00417920, int32_t, InternalDecoderBestFitFallbackBuffer_InternalFallback, (InternalDecoderBestFitFallbackBuffer * __this, Byte__Array * bytes, uint8_t * pBytes, MethodInfo * method));
DO_APP_FUNC(0x024586B0, uint16_t, InternalDecoderBestFitFallbackBuffer_TryBestFit, (InternalDecoderBestFitFallbackBuffer * __this, Byte__Array * bytesCheck, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DecoderExceptionFallback__ctor, (DecoderExceptionFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x02448D80, DecoderFallbackBuffer *, DecoderExceptionFallback_CreateFallbackBuffer, (DecoderExceptionFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, int32_t, DecoderExceptionFallback_get_MaxCharCount, (DecoderExceptionFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x02448EC0, bool, DecoderExceptionFallback_Equals, (DecoderExceptionFallback * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02448F60, int32_t, DecoderExceptionFallback_GetHashCode, (DecoderExceptionFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x02448F70, bool, DecoderExceptionFallbackBuffer_Fallback, (DecoderExceptionFallbackBuffer * __this, Byte__Array * bytesUnknown, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, uint16_t, DecoderExceptionFallbackBuffer_GetNextChar, (DecoderExceptionFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, int32_t, DecoderExceptionFallbackBuffer_get_Remaining, (DecoderExceptionFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x02448F80, void, DecoderExceptionFallbackBuffer_Throw, (DecoderExceptionFallbackBuffer * __this, Byte__Array * bytesUnknown, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DecoderExceptionFallbackBuffer__ctor, (DecoderExceptionFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x0244A140, void, DecoderFallbackException__ctor, (DecoderFallbackException * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEFD10, void, DecoderFallbackException__ctor_1, (DecoderFallbackException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0244A1D0, void, DecoderFallbackException__ctor_2, (DecoderFallbackException * __this, String * message, Byte__Array * bytesUnknown, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02449280, Object *, DecoderFallback_get_InternalSyncObject, (MethodInfo * method));
DO_APP_FUNC(0x024493F0, DecoderFallback *, DecoderFallback_get_ReplacementFallback, (MethodInfo * method));
DO_APP_FUNC(0x024496D0, DecoderFallback *, DecoderFallback_get_ExceptionFallback, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DecoderFallback__ctor, (DecoderFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x02449950, void, DecoderFallbackBuffer_Reset, (DecoderFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x02449980, void, DecoderFallbackBuffer_InternalReset, (DecoderFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, DecoderFallbackBuffer_InternalInitialize, (DecoderFallbackBuffer * __this, uint8_t * byteStart, uint16_t * charEnd, MethodInfo * method));
DO_APP_FUNC(0x024499A0, bool, DecoderFallbackBuffer_InternalFallback, (DecoderFallbackBuffer * __this, Byte__Array * bytes, uint8_t * pBytes, uint16_t * * chars, MethodInfo * method));
DO_APP_FUNC(0x02449C10, int32_t, DecoderFallbackBuffer_InternalFallback_1, (DecoderFallbackBuffer * __this, Byte__Array * bytes, uint8_t * pBytes, MethodInfo * method));
DO_APP_FUNC(0x02449E70, void, DecoderFallbackBuffer_ThrowLastBytesRecursive, (DecoderFallbackBuffer * __this, Byte__Array * bytesUnknown, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DecoderFallbackBuffer__ctor, (DecoderFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x0244A220, void, DecoderNLS__ctor, (DecoderNLS * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0244A320, void, DecoderNLS_System_Runtime_Serialization_ISerializable_GetObjectData, (DecoderNLS * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0244A470, void, DecoderNLS__ctor_1, (DecoderNLS * __this, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x0244A4A0, void, DecoderNLS__ctor_2, (DecoderNLS * __this, MethodInfo * method));
DO_APP_FUNC(0x0244A4C0, void, DecoderNLS_Reset, (DecoderNLS * __this, MethodInfo * method));
DO_APP_FUNC(0x019509B0, int32_t, DecoderNLS_GetCharCount, (DecoderNLS * __this, Byte__Array * bytes, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0244A4E0, int32_t, DecoderNLS_GetCharCount_1, (DecoderNLS * __this, Byte__Array * bytes, int32_t index, int32_t count, bool flush, MethodInfo * method));
DO_APP_FUNC(0x0244A6D0, int32_t, DecoderNLS_GetCharCount_2, (DecoderNLS * __this, uint8_t * bytes, int32_t count, bool flush, MethodInfo * method));
DO_APP_FUNC(0x0244A840, int32_t, DecoderNLS_GetChars, (DecoderNLS * __this, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, Char__Array * chars, int32_t charIndex, MethodInfo * method));
DO_APP_FUNC(0x0244A880, int32_t, DecoderNLS_GetChars_1, (DecoderNLS * __this, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, Char__Array * chars, int32_t charIndex, bool flush, MethodInfo * method));
DO_APP_FUNC(0x0244AB40, int32_t, DecoderNLS_GetChars_2, (DecoderNLS * __this, uint8_t * bytes, int32_t byteCount, uint16_t * chars, int32_t charCount, bool flush, MethodInfo * method));
DO_APP_FUNC(0x0244ACE0, void, DecoderNLS_Convert, (DecoderNLS * __this, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, Char__Array * chars, int32_t charIndex, int32_t charCount, bool flush, int32_t * bytesUsed, int32_t * charsUsed, bool * completed, MethodInfo * method));
DO_APP_FUNC(0x0244B030, void, DecoderNLS_Convert_1, (DecoderNLS * __this, uint8_t * bytes, int32_t byteCount, uint16_t * chars, int32_t charCount, bool flush, int32_t * bytesUsed, int32_t * charsUsed, bool * completed, MethodInfo * method));
DO_APP_FUNC(0x004F4CE0, bool, DecoderNLS_get_MustFlush, (DecoderNLS * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, DecoderNLS_get_HasState, (DecoderNLS * __this, MethodInfo * method));
DO_APP_FUNC(0x0244B240, void, DecoderNLS_ClearMustFlush, (DecoderNLS * __this, MethodInfo * method));
DO_APP_FUNC(0x0244B250, void, DecoderReplacementFallback__ctor, (DecoderReplacementFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x0244B2E0, void, DecoderReplacementFallback__ctor_1, (DecoderReplacementFallback * __this, String * replacement, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, DecoderReplacementFallback_get_DefaultString, (DecoderReplacementFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x0244B4C0, DecoderFallbackBuffer *, DecoderReplacementFallback_CreateFallbackBuffer, (DecoderReplacementFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x0244B620, int32_t, DecoderReplacementFallback_get_MaxCharCount, (DecoderReplacementFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x0244B640, bool, DecoderReplacementFallback_Equals, (DecoderReplacementFallback * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x017E12D0, int32_t, DecoderReplacementFallback_GetHashCode, (DecoderReplacementFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x0244B730, void, DecoderReplacementFallbackBuffer__ctor, (DecoderReplacementFallbackBuffer * __this, DecoderReplacementFallback * fallback, MethodInfo * method));
DO_APP_FUNC(0x0244B760, bool, DecoderReplacementFallbackBuffer_Fallback, (DecoderReplacementFallbackBuffer * __this, Byte__Array * bytesUnknown, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0244B7B0, uint16_t, DecoderReplacementFallbackBuffer_GetNextChar, (DecoderReplacementFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x0244B800, int32_t, DecoderReplacementFallbackBuffer_get_Remaining, (DecoderReplacementFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x0244B810, void, DecoderReplacementFallbackBuffer_Reset, (DecoderReplacementFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x01939E80, int32_t, DecoderReplacementFallbackBuffer_InternalFallback, (DecoderReplacementFallbackBuffer * __this, Byte__Array * bytes, uint8_t * pBytes, MethodInfo * method));
DO_APP_FUNC(0x0244B830, void, Encoder_SerializeEncoder, (Encoder * __this, SerializationInfo * info, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Encoder__ctor, (Encoder * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, EncoderFallback *, Encoder_get_Fallback, (Encoder * __this, MethodInfo * method));
DO_APP_FUNC(0x0244B8D0, EncoderFallbackBuffer *, Encoder_get_FallbackBuffer, (Encoder * __this, MethodInfo * method));
DO_APP_FUNC(0x009B3690, bool, Encoder_get_InternalHasFallbackBuffer, (Encoder * __this, MethodInfo * method));
DO_APP_FUNC(0x0244B940, void, Encoder_Reset, (Encoder * __this, MethodInfo * method));
DO_APP_FUNC(0x0244BA50, int32_t, Encoder_GetByteCount, (Encoder * __this, uint16_t * chars, int32_t count, bool flush, MethodInfo * method));
DO_APP_FUNC(0x0244BC00, int32_t, Encoder_GetBytes, (Encoder * __this, uint16_t * chars, int32_t charCount, uint8_t * bytes, int32_t byteCount, bool flush, MethodInfo * method));
DO_APP_FUNC(0x0244BE70, void, Encoder_Convert, (Encoder * __this, Char__Array * chars, int32_t charIndex, int32_t charCount, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, bool flush, int32_t * charsUsed, int32_t * bytesUsed, bool * completed, MethodInfo * method));
DO_APP_FUNC(0x0244C200, void, Encoder_Convert_1, (Encoder * __this, uint16_t * chars, int32_t charCount, uint8_t * bytes, int32_t byteCount, bool flush, int32_t * charsUsed, int32_t * bytesUsed, bool * completed, MethodInfo * method));
DO_APP_FUNC(0x02458940, void, InternalEncoderBestFitFallback__ctor, (InternalEncoderBestFitFallback * __this, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x02458950, EncoderFallbackBuffer *, InternalEncoderBestFitFallback_CreateFallbackBuffer, (InternalEncoderBestFitFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x00417920, int32_t, InternalEncoderBestFitFallback_get_MaxCharCount, (InternalEncoderBestFitFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x02458AA0, bool, InternalEncoderBestFitFallback_Equals, (InternalEncoderBestFitFallback * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01F3F1A0, int32_t, InternalEncoderBestFitFallback_GetHashCode, (InternalEncoderBestFitFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x02458BC0, Object *, InternalEncoderBestFitFallbackBuffer_get_InternalSyncObject, (MethodInfo * method));
DO_APP_FUNC(0x02458D30, void, InternalEncoderBestFitFallbackBuffer__ctor, (InternalEncoderBestFitFallbackBuffer * __this, InternalEncoderBestFitFallback * fallback, MethodInfo * method));
DO_APP_FUNC(0x02458FD0, bool, InternalEncoderBestFitFallbackBuffer_Fallback, (InternalEncoderBestFitFallbackBuffer * __this, uint16_t charUnknown, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02459010, bool, InternalEncoderBestFitFallbackBuffer_Fallback_1, (InternalEncoderBestFitFallbackBuffer * __this, uint16_t charUnknownHigh, uint16_t charUnknownLow, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x024592D0, uint16_t, InternalEncoderBestFitFallbackBuffer_GetNextChar, (InternalEncoderBestFitFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x02459300, bool, InternalEncoderBestFitFallbackBuffer_MovePrevious, (InternalEncoderBestFitFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x02459320, int32_t, InternalEncoderBestFitFallbackBuffer_get_Remaining, (InternalEncoderBestFitFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x02459330, void, InternalEncoderBestFitFallbackBuffer_Reset, (InternalEncoderBestFitFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x02459350, uint16_t, InternalEncoderBestFitFallbackBuffer_TryBestFit, (InternalEncoderBestFitFallbackBuffer * __this, uint16_t cUnknown, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, EncoderExceptionFallback__ctor, (EncoderExceptionFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x0244C480, EncoderFallbackBuffer *, EncoderExceptionFallback_CreateFallbackBuffer, (EncoderExceptionFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, int32_t, EncoderExceptionFallback_get_MaxCharCount, (EncoderExceptionFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x0244C5C0, bool, EncoderExceptionFallback_Equals, (EncoderExceptionFallback * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0244C660, int32_t, EncoderExceptionFallback_GetHashCode, (EncoderExceptionFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, EncoderExceptionFallbackBuffer__ctor, (EncoderExceptionFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x0244C670, bool, EncoderExceptionFallbackBuffer_Fallback, (EncoderExceptionFallbackBuffer * __this, uint16_t charUnknown, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0244C780, bool, EncoderExceptionFallbackBuffer_Fallback_1, (EncoderExceptionFallbackBuffer * __this, uint16_t charUnknownHigh, uint16_t charUnknownLow, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, uint16_t, EncoderExceptionFallbackBuffer_GetNextChar, (EncoderExceptionFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, EncoderExceptionFallbackBuffer_MovePrevious, (EncoderExceptionFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, int32_t, EncoderExceptionFallbackBuffer_get_Remaining, (EncoderExceptionFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x0244D5B0, void, EncoderFallbackException__ctor, (EncoderFallbackException * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEFD10, void, EncoderFallbackException__ctor_1, (EncoderFallbackException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0244D640, void, EncoderFallbackException__ctor_2, (EncoderFallbackException * __this, String * message, uint16_t charUnknown, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0244D690, void, EncoderFallbackException__ctor_3, (EncoderFallbackException * __this, String * message, uint16_t charUnknownHigh, uint16_t charUnknownLow, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0244CB50, Object *, EncoderFallback_get_InternalSyncObject, (MethodInfo * method));
DO_APP_FUNC(0x0244CCC0, EncoderFallback *, EncoderFallback_get_ReplacementFallback, (MethodInfo * method));
DO_APP_FUNC(0x0244CFA0, EncoderFallback *, EncoderFallback_get_ExceptionFallback, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, EncoderFallback__ctor, (EncoderFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x0244D220, void, EncoderFallbackBuffer_Reset, (EncoderFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x0244D250, void, EncoderFallbackBuffer_InternalReset, (EncoderFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x0244D270, void, EncoderFallbackBuffer_InternalInitialize, (EncoderFallbackBuffer * __this, uint16_t * charStart, uint16_t * charEnd, EncoderNLS * encoder, bool setEncoder, MethodInfo * method));
DO_APP_FUNC(0x0244D2A0, uint16_t, EncoderFallbackBuffer_InternalGetNextChar, (EncoderFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x0244D2E0, bool, EncoderFallbackBuffer_InternalFallback, (EncoderFallbackBuffer * __this, uint16_t ch, uint16_t * * chars, MethodInfo * method));
DO_APP_FUNC(0x0244D4F0, void, EncoderFallbackBuffer_ThrowLastCharRecursive, (EncoderFallbackBuffer * __this, int32_t charRecursive, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, EncoderFallbackBuffer__ctor, (EncoderFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x0244D970, void, EncoderNLS__ctor, (EncoderNLS * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0244DA70, void, EncoderNLS_System_Runtime_Serialization_ISerializable_GetObjectData, (EncoderNLS * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0244DBE0, void, EncoderNLS__ctor_1, (EncoderNLS * __this, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x0244DC10, void, EncoderNLS__ctor_2, (EncoderNLS * __this, MethodInfo * method));
DO_APP_FUNC(0x0244DC30, void, EncoderNLS_Reset, (EncoderNLS * __this, MethodInfo * method));
DO_APP_FUNC(0x0244DC60, int32_t, EncoderNLS_GetByteCount, (EncoderNLS * __this, Char__Array * chars, int32_t index, int32_t count, bool flush, MethodInfo * method));
DO_APP_FUNC(0x0244DE50, int32_t, EncoderNLS_GetByteCount_1, (EncoderNLS * __this, uint16_t * chars, int32_t count, bool flush, MethodInfo * method));
DO_APP_FUNC(0x0244DFC0, int32_t, EncoderNLS_GetBytes, (EncoderNLS * __this, Char__Array * chars, int32_t charIndex, int32_t charCount, Byte__Array * bytes, int32_t byteIndex, bool flush, MethodInfo * method));
DO_APP_FUNC(0x0244E280, int32_t, EncoderNLS_GetBytes_1, (EncoderNLS * __this, uint16_t * chars, int32_t charCount, uint8_t * bytes, int32_t byteCount, bool flush, MethodInfo * method));
DO_APP_FUNC(0x0244E420, void, EncoderNLS_Convert, (EncoderNLS * __this, Char__Array * chars, int32_t charIndex, int32_t charCount, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, bool flush, int32_t * charsUsed, int32_t * bytesUsed, bool * completed, MethodInfo * method));
DO_APP_FUNC(0x0244E770, void, EncoderNLS_Convert_1, (EncoderNLS * __this, uint16_t * chars, int32_t charCount, uint8_t * bytes, int32_t byteCount, bool flush, int32_t * charsUsed, int32_t * bytesUsed, bool * completed, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, Encoding *, EncoderNLS_get_Encoding, (EncoderNLS * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A050, bool, EncoderNLS_get_MustFlush, (EncoderNLS * __this, MethodInfo * method));
DO_APP_FUNC(0x0244E980, bool, EncoderNLS_get_HasState, (EncoderNLS * __this, MethodInfo * method));
DO_APP_FUNC(0x0089F980, void, EncoderNLS_ClearMustFlush, (EncoderNLS * __this, MethodInfo * method));
DO_APP_FUNC(0x0244E990, void, EncoderReplacementFallback__ctor, (EncoderReplacementFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x0244EA20, void, EncoderReplacementFallback__ctor_1, (EncoderReplacementFallback * __this, String * replacement, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, EncoderReplacementFallback_get_DefaultString, (EncoderReplacementFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x0244EC00, EncoderFallbackBuffer *, EncoderReplacementFallback_CreateFallbackBuffer, (EncoderReplacementFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x0244B620, int32_t, EncoderReplacementFallback_get_MaxCharCount, (EncoderReplacementFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x0244ED70, bool, EncoderReplacementFallback_Equals, (EncoderReplacementFallback * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x017E12D0, int32_t, EncoderReplacementFallback_GetHashCode, (EncoderReplacementFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x0244EE60, void, EncoderReplacementFallbackBuffer__ctor, (EncoderReplacementFallbackBuffer * __this, EncoderReplacementFallback * fallback, MethodInfo * method));
DO_APP_FUNC(0x0244EEA0, bool, EncoderReplacementFallbackBuffer_Fallback, (EncoderReplacementFallbackBuffer * __this, uint16_t charUnknown, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0244F060, bool, EncoderReplacementFallbackBuffer_Fallback_1, (EncoderReplacementFallbackBuffer * __this, uint16_t charUnknownHigh, uint16_t charUnknownLow, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0244F370, uint16_t, EncoderReplacementFallbackBuffer_GetNextChar, (EncoderReplacementFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x0244F3C0, bool, EncoderReplacementFallbackBuffer_MovePrevious, (EncoderReplacementFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x0244F3E0, int32_t, EncoderReplacementFallbackBuffer_get_Remaining, (EncoderReplacementFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x0244F3F0, void, EncoderReplacementFallbackBuffer_Reset, (EncoderReplacementFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x01952A10, void, Encoding__ctor, (Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x0244F410, void, Encoding__ctor_1, (Encoding * __this, int32_t codePage, MethodInfo * method));
DO_APP_FUNC(0x0244F4E0, void, Encoding_SetDefaultFallbacks, (Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x0244F700, void, Encoding_OnDeserializing, (Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x0244F710, void, Encoding_OnDeserialized, (Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x0244F700, void, Encoding_OnDeserializing_1, (Encoding * __this, StreamingContext ctx, MethodInfo * method));
DO_APP_FUNC(0x0244F710, void, Encoding_OnDeserialized_1, (Encoding * __this, StreamingContext ctx, MethodInfo * method));
DO_APP_FUNC(0x002FBAF0, void, Encoding_OnSerializing, (Encoding * __this, StreamingContext ctx, MethodInfo * method));
DO_APP_FUNC(0x0244F760, void, Encoding_DeserializeEncoding, (Encoding * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0244FA40, void, Encoding_SerializeEncoding, (Encoding * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0244FBA0, Object *, Encoding_get_InternalSyncObject, (MethodInfo * method));
DO_APP_FUNC(0x0244FD10, Encoding *, Encoding_GetEncoding, (int32_t codepage, MethodInfo * method));
DO_APP_FUNC(0x024509C0, Encoding *, Encoding_GetEncoding_1, (int32_t codepage, EncoderFallback * encoderFallback, DecoderFallback * decoderFallback, MethodInfo * method));
DO_APP_FUNC(0x02450C70, Encoding *, Encoding_GetEncoding_2, (String * name, MethodInfo * method));
DO_APP_FUNC(0x02450E70, Encoding *, Encoding_GetEncoding_3, (String * name, EncoderFallback * encoderFallback, DecoderFallback * decoderFallback, MethodInfo * method));
DO_APP_FUNC(0x024510B0, Byte__Array *, Encoding_GetPreamble, (Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x02451150, void, Encoding_GetDataItem, (Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x024512A0, String *, Encoding_get_EncodingName, (Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x024513F0, String *, Encoding_get_WebName, (Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, EncoderFallback *, Encoding_get_EncoderFallback, (Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x02451570, void, Encoding_set_EncoderFallback, (Encoding * __this, EncoderFallback * value, MethodInfo * method));
DO_APP_FUNC(0x002FB990, DecoderFallback *, Encoding_get_DecoderFallback, (Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x02451670, void, Encoding_set_DecoderFallback, (Encoding * __this, DecoderFallback * value, MethodInfo * method));
DO_APP_FUNC(0x02451770, Object *, Encoding_Clone, (Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x00DF3DF0, bool, Encoding_get_IsReadOnly, (Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x024518D0, Encoding *, Encoding_get_ASCII, (MethodInfo * method));
DO_APP_FUNC(0x02451AD0, Encoding *, Encoding_get_Latin1, (MethodInfo * method));
DO_APP_FUNC(0x02451C60, int32_t, Encoding_GetByteCount, (Encoding * __this, String * s, MethodInfo * method));
DO_APP_FUNC(0x02451D50, int32_t, Encoding_GetByteCount_1, (Encoding * __this, uint16_t * chars, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x00E08510, int32_t, Encoding_GetByteCount_2, (Encoding * __this, uint16_t * chars, int32_t count, EncoderNLS * encoder, MethodInfo * method));
DO_APP_FUNC(0x02451EF0, Byte__Array *, Encoding_GetBytes, (Encoding * __this, Char__Array * chars, MethodInfo * method));
DO_APP_FUNC(0x02451FE0, Byte__Array *, Encoding_GetBytes_1, (Encoding * __this, Char__Array * chars, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x024520E0, Byte__Array *, Encoding_GetBytes_2, (Encoding * __this, String * s, MethodInfo * method));
DO_APP_FUNC(0x02452210, int32_t, Encoding_GetBytes_3, (Encoding * __this, String * s, int32_t charIndex, int32_t charCount, Byte__Array * bytes, int32_t byteIndex, MethodInfo * method));
DO_APP_FUNC(0x02452310, int32_t, Encoding_GetBytes_4, (Encoding * __this, uint16_t * chars, int32_t charCount, uint8_t * bytes, int32_t byteCount, EncoderNLS * encoder, MethodInfo * method));
DO_APP_FUNC(0x02452330, int32_t, Encoding_GetBytes_5, (Encoding * __this, uint16_t * chars, int32_t charCount, uint8_t * bytes, int32_t byteCount, MethodInfo * method));
DO_APP_FUNC(0x024525A0, int32_t, Encoding_GetCharCount, (Encoding * __this, uint8_t * bytes, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02452740, int32_t, Encoding_GetCharCount_1, (Encoding * __this, uint8_t * bytes, int32_t count, DecoderNLS * decoder, MethodInfo * method));
DO_APP_FUNC(0x02452760, Char__Array *, Encoding_GetChars, (Encoding * __this, Byte__Array * bytes, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02452860, int32_t, Encoding_GetChars_1, (Encoding * __this, uint8_t * bytes, int32_t byteCount, uint16_t * chars, int32_t charCount, MethodInfo * method));
DO_APP_FUNC(0x02452AC0, int32_t, Encoding_GetChars_2, (Encoding * __this, uint8_t * bytes, int32_t byteCount, uint16_t * chars, int32_t charCount, DecoderNLS * decoder, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, Encoding_get_CodePage, (Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x02452AE0, Decoder *, Encoding_GetDecoder, (Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x02452C30, Encoding *, Encoding_CreateDefaultEncoding, (MethodInfo * method));
DO_APP_FUNC(0x00DF3E00, void, Encoding_setReadOnly, (Encoding * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x02452CD0, Encoding *, Encoding_get_Default, (MethodInfo * method));
DO_APP_FUNC(0x02452E10, Encoder *, Encoding_GetEncoder, (Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x02452F60, String *, Encoding_GetString, (Encoding * __this, Byte__Array * bytes, MethodInfo * method));
DO_APP_FUNC(0x02453050, String *, Encoding_GetString_1, (Encoding * __this, Byte__Array * bytes, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02453080, Encoding *, Encoding_get_Unicode, (MethodInfo * method));
DO_APP_FUNC(0x02453220, Encoding *, Encoding_get_BigEndianUnicode, (MethodInfo * method));
DO_APP_FUNC(0x024533C0, Encoding *, Encoding_get_UTF7, (MethodInfo * method));
DO_APP_FUNC(0x024535D0, Encoding *, Encoding_get_UTF8, (MethodInfo * method));
DO_APP_FUNC(0x02453760, Encoding *, Encoding_get_UTF32, (MethodInfo * method));
DO_APP_FUNC(0x02453910, bool, Encoding_Equals, (Encoding * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02453A40, int32_t, Encoding_GetHashCode, (Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x02453AB0, Char__Array *, Encoding_GetBestFitUnicodeToBytesData, (Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x02453B50, Char__Array *, Encoding_GetBestFitBytesToUnicodeData, (Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x02453BF0, void, Encoding_ThrowBytesOverflow, (Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x02453CF0, void, Encoding_ThrowBytesOverflow_1, (Encoding * __this, EncoderNLS * encoder, bool nothingEncoded, MethodInfo * method));
DO_APP_FUNC(0x02453D70, void, Encoding_ThrowCharsOverflow, (Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x02453E70, void, Encoding_ThrowCharsOverflow_1, (Encoding * __this, DecoderNLS * decoder, bool nothingDecoded, MethodInfo * method));
DO_APP_FUNC(0x02453EF0, void, Encoding_DefaultEncoder__ctor, (Encoding_DefaultEncoder * __this, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x02454310, void, Encoding_DefaultEncoder__ctor_1, (Encoding_DefaultEncoder * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02454580, Object *, Encoding_DefaultEncoder_GetRealObject, (Encoding_DefaultEncoder * __this, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x024546B0, void, Encoding_DefaultEncoder_System_Runtime_Serialization_ISerializable_GetObjectData, (Encoding_DefaultEncoder * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02454780, int32_t, Encoding_DefaultEncoder_GetByteCount, (Encoding_DefaultEncoder * __this, Char__Array * chars, int32_t index, int32_t count, bool flush, MethodInfo * method));
DO_APP_FUNC(0x024547B0, int32_t, Encoding_DefaultEncoder_GetByteCount_1, (Encoding_DefaultEncoder * __this, uint16_t * chars, int32_t count, bool flush, MethodInfo * method));
DO_APP_FUNC(0x024547E0, int32_t, Encoding_DefaultEncoder_GetBytes, (Encoding_DefaultEncoder * __this, Char__Array * chars, int32_t charIndex, int32_t charCount, Byte__Array * bytes, int32_t byteIndex, bool flush, MethodInfo * method));
DO_APP_FUNC(0x02454810, int32_t, Encoding_DefaultEncoder_GetBytes_1, (Encoding_DefaultEncoder * __this, uint16_t * chars, int32_t charCount, uint8_t * bytes, int32_t byteCount, bool flush, MethodInfo * method));
DO_APP_FUNC(0x02453EF0, void, Encoding_DefaultDecoder__ctor, (Encoding_DefaultDecoder * __this, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x02453F00, void, Encoding_DefaultDecoder__ctor_1, (Encoding_DefaultDecoder * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02454120, Object *, Encoding_DefaultDecoder_GetRealObject, (Encoding_DefaultDecoder * __this, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02454180, void, Encoding_DefaultDecoder_System_Runtime_Serialization_ISerializable_GetObjectData, (Encoding_DefaultDecoder * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x019509B0, int32_t, Encoding_DefaultDecoder_GetCharCount, (Encoding_DefaultDecoder * __this, Byte__Array * bytes, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02454250, int32_t, Encoding_DefaultDecoder_GetCharCount_1, (Encoding_DefaultDecoder * __this, Byte__Array * bytes, int32_t index, int32_t count, bool flush, MethodInfo * method));
DO_APP_FUNC(0x02454280, int32_t, Encoding_DefaultDecoder_GetCharCount_2, (Encoding_DefaultDecoder * __this, uint8_t * bytes, int32_t count, bool flush, MethodInfo * method));
DO_APP_FUNC(0x0244A840, int32_t, Encoding_DefaultDecoder_GetChars, (Encoding_DefaultDecoder * __this, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, Char__Array * chars, int32_t charIndex, MethodInfo * method));
DO_APP_FUNC(0x024542B0, int32_t, Encoding_DefaultDecoder_GetChars_1, (Encoding_DefaultDecoder * __this, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, Char__Array * chars, int32_t charIndex, bool flush, MethodInfo * method));
DO_APP_FUNC(0x024542E0, int32_t, Encoding_DefaultDecoder_GetChars_2, (Encoding_DefaultDecoder * __this, uint8_t * bytes, int32_t byteCount, uint16_t * chars, int32_t charCount, bool flush, MethodInfo * method));
DO_APP_FUNC(0x02454ED0, void, Encoding_EncodingCharBuffer__ctor, (Encoding_EncodingCharBuffer * __this, Encoding * enc, DecoderNLS * decoder, uint16_t * charStart, int32_t charCount, uint8_t * byteStart, int32_t byteCount, MethodInfo * method));
DO_APP_FUNC(0x02454F80, bool, Encoding_EncodingCharBuffer_AddChar, (Encoding_EncodingCharBuffer * __this, uint16_t ch, int32_t numBytes, MethodInfo * method));
DO_APP_FUNC(0x02454FF0, bool, Encoding_EncodingCharBuffer_AddChar_1, (Encoding_EncodingCharBuffer * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x02455060, void, Encoding_EncodingCharBuffer_AdjustBytes, (Encoding_EncodingCharBuffer * __this, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02455070, bool, Encoding_EncodingCharBuffer_get_MoreData, (Encoding_EncodingCharBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x02455080, uint8_t, Encoding_EncodingCharBuffer_GetNextByte, (Encoding_EncodingCharBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x024550A0, int32_t, Encoding_EncodingCharBuffer_get_BytesUsed, (Encoding_EncodingCharBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x024550B0, bool, Encoding_EncodingCharBuffer_Fallback, (Encoding_EncodingCharBuffer * __this, uint8_t fallbackByte, MethodInfo * method));
DO_APP_FUNC(0x02455270, bool, Encoding_EncodingCharBuffer_Fallback_1, (Encoding_EncodingCharBuffer * __this, Byte__Array * byteBuffer, MethodInfo * method));
DO_APP_FUNC(0x002FB970, int32_t, Encoding_EncodingCharBuffer_get_Count, (Encoding_EncodingCharBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x02454840, void, Encoding_EncodingByteBuffer__ctor, (Encoding_EncodingByteBuffer * __this, Encoding * inEncoding, EncoderNLS * inEncoder, uint8_t * inByteStart, int32_t inByteCount, uint16_t * inCharStart, int32_t inCharCount, MethodInfo * method));
DO_APP_FUNC(0x02454B00, bool, Encoding_EncodingByteBuffer_AddByte, (Encoding_EncodingByteBuffer * __this, uint8_t b, int32_t moreBytesExpected, MethodInfo * method));
DO_APP_FUNC(0x02454BB0, bool, Encoding_EncodingByteBuffer_AddByte_1, (Encoding_EncodingByteBuffer * __this, uint8_t b1, MethodInfo * method));
DO_APP_FUNC(0x02454BC0, bool, Encoding_EncodingByteBuffer_AddByte_2, (Encoding_EncodingByteBuffer * __this, uint8_t b1, uint8_t b2, MethodInfo * method));
DO_APP_FUNC(0x02454C80, bool, Encoding_EncodingByteBuffer_AddByte_3, (Encoding_EncodingByteBuffer * __this, uint8_t b1, uint8_t b2, int32_t moreBytesExpected, MethodInfo * method));
DO_APP_FUNC(0x02454D60, void, Encoding_EncodingByteBuffer_MovePrevious, (Encoding_EncodingByteBuffer * __this, bool bThrow, MethodInfo * method));
DO_APP_FUNC(0x02454DF0, bool, Encoding_EncodingByteBuffer_get_MoreData, (Encoding_EncodingByteBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x02454E40, uint16_t, Encoding_EncodingByteBuffer_GetNextChar, (Encoding_EncodingByteBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x02454EB0, int32_t, Encoding_EncodingByteBuffer_get_CharsUsed, (Encoding_EncodingByteBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x004E57A0, int32_t, Encoding_EncodingByteBuffer_get_Count, (Encoding_EncodingByteBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x02455F00, void, EncodingNLS__ctor, (EncodingNLS * __this, int32_t codePage, MethodInfo * method));
DO_APP_FUNC(0x02455F10, int32_t, EncodingNLS_GetByteCount, (EncodingNLS * __this, Char__Array * chars, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x024560E0, int32_t, EncodingNLS_GetByteCount_1, (EncodingNLS * __this, String * s, MethodInfo * method));
DO_APP_FUNC(0x024561C0, int32_t, EncodingNLS_GetByteCount_2, (EncodingNLS * __this, uint16_t * chars, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02456300, int32_t, EncodingNLS_GetBytes, (EncodingNLS * __this, String * s, int32_t charIndex, int32_t charCount, Byte__Array * bytes, int32_t byteIndex, MethodInfo * method));
DO_APP_FUNC(0x02456590, int32_t, EncodingNLS_GetBytes_1, (EncodingNLS * __this, Char__Array * chars, int32_t charIndex, int32_t charCount, Byte__Array * bytes, int32_t byteIndex, MethodInfo * method));
DO_APP_FUNC(0x02456830, int32_t, EncodingNLS_GetBytes_2, (EncodingNLS * __this, uint16_t * chars, int32_t charCount, uint8_t * bytes, int32_t byteCount, MethodInfo * method));
DO_APP_FUNC(0x024569B0, int32_t, EncodingNLS_GetCharCount, (EncodingNLS * __this, Byte__Array * bytes, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02456B80, int32_t, EncodingNLS_GetCharCount_1, (EncodingNLS * __this, uint8_t * bytes, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02456CC0, int32_t, EncodingNLS_GetChars, (EncodingNLS * __this, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, Char__Array * chars, int32_t charIndex, MethodInfo * method));
DO_APP_FUNC(0x02456F60, int32_t, EncodingNLS_GetChars_1, (EncodingNLS * __this, uint8_t * bytes, int32_t byteCount, uint16_t * chars, int32_t charCount, MethodInfo * method));
DO_APP_FUNC(0x024570E0, String *, EncodingNLS_GetString, (EncodingNLS * __this, Byte__Array * bytes, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x024572B0, Decoder *, EncodingNLS_GetDecoder, (EncodingNLS * __this, MethodInfo * method));
DO_APP_FUNC(0x02457420, Encoder *, EncodingNLS_GetEncoder, (EncodingNLS * __this, MethodInfo * method));
DO_APP_FUNC(0x02457590, Encoding *, EncodingProvider_GetEncoding, (EncodingProvider * __this, String * name, EncoderFallback * encoderFallback, DecoderFallback * decoderFallback, MethodInfo * method));
DO_APP_FUNC(0x02457710, Encoding *, EncodingProvider_GetEncoding_1, (EncodingProvider * __this, int32_t codepage, EncoderFallback * encoderFallback, DecoderFallback * decoderFallback, MethodInfo * method));
DO_APP_FUNC(0x02457890, Encoding *, EncodingProvider_GetEncodingFromProvider, (int32_t codepage, MethodInfo * method));
DO_APP_FUNC(0x024579F0, Encoding *, EncodingProvider_GetEncodingFromProvider_1, (String * encodingName, MethodInfo * method));
DO_APP_FUNC(0x02457B50, Encoding *, EncodingProvider_GetEncodingFromProvider_2, (int32_t codepage, EncoderFallback * enc, DecoderFallback * dec, MethodInfo * method));
DO_APP_FUNC(0x02457CD0, Encoding *, EncodingProvider_GetEncodingFromProvider_3, (String * encodingName, EncoderFallback * enc, DecoderFallback * dec, MethodInfo * method));
DO_APP_FUNC(0x02457E50, void, EncodingProvider__cctor, (MethodInfo * method));
DO_APP_FUNC(0x024594F0, void, Latin1Encoding__ctor, (Latin1Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x02459500, void, Latin1Encoding__ctor_1, (Latin1Encoding * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02459550, void, Latin1Encoding_System_Runtime_Serialization_ISerializable_GetObjectData, (Latin1Encoding * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02459750, int32_t, Latin1Encoding_GetByteCount, (Latin1Encoding * __this, uint16_t * chars, int32_t charCount, EncoderNLS * encoder, MethodInfo * method));
DO_APP_FUNC(0x024599A0, int32_t, Latin1Encoding_GetBytes, (Latin1Encoding * __this, uint16_t * chars, int32_t charCount, uint8_t * bytes, int32_t byteCount, EncoderNLS * encoder, MethodInfo * method));
DO_APP_FUNC(0x02459E20, int32_t, Latin1Encoding_GetCharCount, (Latin1Encoding * __this, uint8_t * bytes, int32_t count, DecoderNLS * decoder, MethodInfo * method));
DO_APP_FUNC(0x02459E30, int32_t, Latin1Encoding_GetChars, (Latin1Encoding * __this, uint8_t * bytes, int32_t byteCount, uint16_t * chars, int32_t charCount, DecoderNLS * decoder, MethodInfo * method));
DO_APP_FUNC(0x02459ED0, int32_t, Latin1Encoding_GetMaxByteCount, (Latin1Encoding * __this, int32_t charCount, MethodInfo * method));
DO_APP_FUNC(0x0245A040, int32_t, Latin1Encoding_GetMaxCharCount, (Latin1Encoding * __this, int32_t byteCount, MethodInfo * method));
DO_APP_FUNC(0x0245A1B0, Char__Array *, Latin1Encoding_GetBestFitUnicodeToBytesData, (Latin1Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x0245A250, void, Latin1Encoding__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0245CF10, void, StringBuilder__ctor, (StringBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x0245CF20, void, StringBuilder__ctor_1, (StringBuilder * __this, int32_t capacity, MethodInfo * method));
DO_APP_FUNC(0x0245CFF0, void, StringBuilder__ctor_2, (StringBuilder * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0245D030, void, StringBuilder__ctor_3, (StringBuilder * __this, String * value, int32_t capacity, MethodInfo * method));
DO_APP_FUNC(0x0245D070, void, StringBuilder__ctor_4, (StringBuilder * __this, String * value, int32_t startIndex, int32_t length, int32_t capacity, MethodInfo * method));
DO_APP_FUNC(0x0245D340, void, StringBuilder__ctor_5, (StringBuilder * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0245D6E0, void, StringBuilder_System_Runtime_Serialization_ISerializable_GetObjectData, (StringBuilder * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0245D820, int32_t, StringBuilder_get_Capacity, (StringBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x0245D840, void, StringBuilder_set_Capacity, (StringBuilder * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x002FB970, int32_t, StringBuilder_get_MaxCapacity, (StringBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x0245D9F0, String *, StringBuilder_ToString, (StringBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x0245DB80, String *, StringBuilder_ToString_1, (StringBuilder * __this, int32_t startIndex, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x0245DE80, StringBuilder *, StringBuilder_Clear, (StringBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED6AA0, int32_t, StringBuilder_get_Length, (StringBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x0245DEA0, void, StringBuilder_set_Length, (StringBuilder * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0245E090, uint16_t, StringBuilder_get_Chars, (StringBuilder * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0245E1C0, void, StringBuilder_set_Chars, (StringBuilder * __this, int32_t index, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x0245E330, StringBuilder *, StringBuilder_Append, (StringBuilder * __this, uint16_t value, int32_t repeatCount, MethodInfo * method));
DO_APP_FUNC(0x0245E480, StringBuilder *, StringBuilder_Append_1, (StringBuilder * __this, Char__Array * value, int32_t startIndex, int32_t charCount, MethodInfo * method));
DO_APP_FUNC(0x0245E6C0, StringBuilder *, StringBuilder_Append_2, (StringBuilder * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0245E7E0, void, StringBuilder_AppendHelper, (StringBuilder * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0245E810, StringBuilder *, StringBuilder_Append_3, (StringBuilder * __this, String * value, int32_t startIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0245EA30, StringBuilder *, StringBuilder_AppendLine, (StringBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x0245EA60, StringBuilder *, StringBuilder_AppendLine_1, (StringBuilder * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0245EA90, StringBuilder *, StringBuilder_Insert, (StringBuilder * __this, int32_t index, String * value, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0245EC90, StringBuilder *, StringBuilder_Remove, (StringBuilder * __this, int32_t startIndex, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x0245EE60, StringBuilder *, StringBuilder_Append_4, (StringBuilder * __this, uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x0245EF40, StringBuilder *, StringBuilder_Append_5, (StringBuilder * __this, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x0245EFC0, StringBuilder *, StringBuilder_Append_6, (StringBuilder * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0245F0A0, StringBuilder *, StringBuilder_Append_7, (StringBuilder * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x0245F180, StringBuilder *, StringBuilder_Append_8, (StringBuilder * __this, float value, MethodInfo * method));
DO_APP_FUNC(0x0245F260, StringBuilder *, StringBuilder_Append_9, (StringBuilder * __this, uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x0245F340, StringBuilder *, StringBuilder_Append_10, (StringBuilder * __this, uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x0245F420, StringBuilder *, StringBuilder_Append_11, (StringBuilder * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0245F460, StringBuilder *, StringBuilder_Append_12, (StringBuilder * __this, Char__Array * value, MethodInfo * method));
DO_APP_FUNC(0x0245F4B0, StringBuilder *, StringBuilder_Insert_1, (StringBuilder * __this, int32_t index, String * value, MethodInfo * method));
DO_APP_FUNC(0x0245F5B0, StringBuilder *, StringBuilder_Insert_2, (StringBuilder * __this, int32_t index, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x0245F5E0, StringBuilder *, StringBuilder_AppendFormat, (StringBuilder * __this, String * format, Object * arg0, MethodInfo * method));
DO_APP_FUNC(0x0245F650, StringBuilder *, StringBuilder_AppendFormat_1, (StringBuilder * __this, String * format, Object * arg0, Object * arg1, MethodInfo * method));
DO_APP_FUNC(0x0245F6D0, StringBuilder *, StringBuilder_AppendFormat_2, (StringBuilder * __this, String * format, Object * arg0, Object * arg1, Object * arg2, MethodInfo * method));
DO_APP_FUNC(0x0245F760, StringBuilder *, StringBuilder_AppendFormat_3, (StringBuilder * __this, String * format, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x0245F8F0, StringBuilder *, StringBuilder_AppendFormat_4, (StringBuilder * __this, IFormatProvider * provider, String * format, Object * arg0, MethodInfo * method));
DO_APP_FUNC(0x0245F970, StringBuilder *, StringBuilder_AppendFormat_5, (StringBuilder * __this, IFormatProvider * provider, String * format, Object * arg0, Object * arg1, MethodInfo * method));
DO_APP_FUNC(0x0245FA00, void, StringBuilder_FormatError, (MethodInfo * method));
DO_APP_FUNC(0x0245FA70, StringBuilder *, StringBuilder_AppendFormatHelper, (StringBuilder * __this, IFormatProvider * provider, String * format, ParamsArray args, MethodInfo * method));
DO_APP_FUNC(0x02460170, StringBuilder *, StringBuilder_Replace, (StringBuilder * __this, String * oldValue, String * newValue, MethodInfo * method));
DO_APP_FUNC(0x024601A0, StringBuilder *, StringBuilder_Replace_1, (StringBuilder * __this, String * oldValue, String * newValue, int32_t startIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02460610, StringBuilder *, StringBuilder_Append_13, (StringBuilder * __this, uint16_t * value, int32_t valueCount, MethodInfo * method));
DO_APP_FUNC(0x024607A0, void, StringBuilder_Insert_3, (StringBuilder * __this, int32_t index, uint16_t * value, int32_t valueCount, MethodInfo * method));
DO_APP_FUNC(0x024608F0, void, StringBuilder_ReplaceAllInChunk, (StringBuilder * __this, Int32__Array * replacements, int32_t replacementsCount, StringBuilder * sourceChunk, int32_t removeCount, String * value, MethodInfo * method));
DO_APP_FUNC(0x02460B50, bool, StringBuilder_StartsWith, (StringBuilder * __this, StringBuilder * chunk, int32_t indexInChunk, int32_t count, String * value, MethodInfo * method));
DO_APP_FUNC(0x02460C50, void, StringBuilder_ReplaceInPlaceAtChunk, (StringBuilder * __this, StringBuilder * * chunk, int32_t * indexInChunk, uint16_t * value, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02460DF0, void, StringBuilder_ThreadSafeCopy, (uint16_t * sourcePtr, Char__Array * destination, int32_t destinationIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02460F20, void, StringBuilder_ThreadSafeCopy_1, (Char__Array * source, int32_t sourceIndex, Char__Array * destination, int32_t destinationIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02461060, StringBuilder *, StringBuilder_FindChunkForIndex, (StringBuilder * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x024610A0, StringBuilder *, StringBuilder_Next, (StringBuilder * __this, StringBuilder * chunk, MethodInfo * method));
DO_APP_FUNC(0x02461100, void, StringBuilder_ExpandByABlock, (StringBuilder * __this, int32_t minBlockCharCount, MethodInfo * method));
DO_APP_FUNC(0x02461350, void, StringBuilder__ctor_6, (StringBuilder * __this, StringBuilder * from, MethodInfo * method));
DO_APP_FUNC(0x02461390, void, StringBuilder_MakeRoom, (StringBuilder * __this, int32_t index, int32_t count, StringBuilder * * chunk, int32_t * indexInChunk, bool doneMoveFollowingChars, MethodInfo * method));
DO_APP_FUNC(0x024618B0, void, StringBuilder__ctor_7, (StringBuilder * __this, int32_t size, int32_t maxCapacity, StringBuilder * previousBlock, MethodInfo * method));
DO_APP_FUNC(0x02461970, void, StringBuilder_Remove_1, (StringBuilder * __this, int32_t startIndex, int32_t count, StringBuilder * * chunk, int32_t * indexInChunk, MethodInfo * method));
DO_APP_FUNC(0x027C7470, StringBuilder *, StringBuilderCache_Acquire, (int32_t capacity, MethodInfo * method));
DO_APP_FUNC(0x027C7680, void, StringBuilderCache_Release, (StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x027C7770, String *, StringBuilderCache_GetStringAndRelease, (StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x027D2EB0, void, UnicodeEncoding__ctor, (UnicodeEncoding * __this, MethodInfo * method));
DO_APP_FUNC(0x027D2EE0, void, UnicodeEncoding__ctor_1, (UnicodeEncoding * __this, bool bigEndian, bool byteOrderMark, MethodInfo * method));
DO_APP_FUNC(0x027D2F30, void, UnicodeEncoding__ctor_2, (UnicodeEncoding * __this, bool bigEndian, bool byteOrderMark, bool throwOnInvalidBytes, MethodInfo * method));
DO_APP_FUNC(0x00447380, void, UnicodeEncoding_OnDeserializing, (UnicodeEncoding * __this, StreamingContext ctx, MethodInfo * method));
DO_APP_FUNC(0x027D2FA0, void, UnicodeEncoding_SetDefaultFallbacks, (UnicodeEncoding * __this, MethodInfo * method));
DO_APP_FUNC(0x027D31F0, int32_t, UnicodeEncoding_GetByteCount, (UnicodeEncoding * __this, Char__Array * chars, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x027D33C0, int32_t, UnicodeEncoding_GetByteCount_1, (UnicodeEncoding * __this, String * s, MethodInfo * method));
DO_APP_FUNC(0x027D34A0, int32_t, UnicodeEncoding_GetByteCount_2, (UnicodeEncoding * __this, uint16_t * chars, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x027D35E0, int32_t, UnicodeEncoding_GetBytes, (UnicodeEncoding * __this, String * s, int32_t charIndex, int32_t charCount, Byte__Array * bytes, int32_t byteIndex, MethodInfo * method));
DO_APP_FUNC(0x027D3870, int32_t, UnicodeEncoding_GetBytes_1, (UnicodeEncoding * __this, Char__Array * chars, int32_t charIndex, int32_t charCount, Byte__Array * bytes, int32_t byteIndex, MethodInfo * method));
DO_APP_FUNC(0x027D3B10, int32_t, UnicodeEncoding_GetBytes_2, (UnicodeEncoding * __this, uint16_t * chars, int32_t charCount, uint8_t * bytes, int32_t byteCount, MethodInfo * method));
DO_APP_FUNC(0x027D3C90, int32_t, UnicodeEncoding_GetCharCount, (UnicodeEncoding * __this, Byte__Array * bytes, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x027D3E60, int32_t, UnicodeEncoding_GetCharCount_1, (UnicodeEncoding * __this, uint8_t * bytes, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x027D3FA0, int32_t, UnicodeEncoding_GetChars, (UnicodeEncoding * __this, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, Char__Array * chars, int32_t charIndex, MethodInfo * method));
DO_APP_FUNC(0x027D4240, int32_t, UnicodeEncoding_GetChars_1, (UnicodeEncoding * __this, uint8_t * bytes, int32_t byteCount, uint16_t * chars, int32_t charCount, MethodInfo * method));
DO_APP_FUNC(0x027D43C0, String *, UnicodeEncoding_GetString, (UnicodeEncoding * __this, Byte__Array * bytes, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x027D4590, int32_t, UnicodeEncoding_GetByteCount_3, (UnicodeEncoding * __this, uint16_t * chars, int32_t count, EncoderNLS * encoder, MethodInfo * method));
DO_APP_FUNC(0x027D4E40, int32_t, UnicodeEncoding_GetBytes_3, (UnicodeEncoding * __this, uint16_t * chars, int32_t charCount, uint8_t * bytes, int32_t byteCount, EncoderNLS * encoder, MethodInfo * method));
DO_APP_FUNC(0x027D5970, int32_t, UnicodeEncoding_GetCharCount_2, (UnicodeEncoding * __this, uint8_t * bytes, int32_t count, DecoderNLS * baseDecoder, MethodInfo * method));
DO_APP_FUNC(0x027D63A0, int32_t, UnicodeEncoding_GetChars_2, (UnicodeEncoding * __this, uint8_t * bytes, int32_t byteCount, uint16_t * chars, int32_t charCount, DecoderNLS * baseDecoder, MethodInfo * method));
DO_APP_FUNC(0x027D6F20, Encoder *, UnicodeEncoding_GetEncoder, (UnicodeEncoding * __this, MethodInfo * method));
DO_APP_FUNC(0x027D7090, Decoder *, UnicodeEncoding_GetDecoder, (UnicodeEncoding * __this, MethodInfo * method));
DO_APP_FUNC(0x027D7200, Byte__Array *, UnicodeEncoding_GetPreamble, (UnicodeEncoding * __this, MethodInfo * method));
DO_APP_FUNC(0x027D7360, int32_t, UnicodeEncoding_GetMaxByteCount, (UnicodeEncoding * __this, int32_t charCount, MethodInfo * method));
DO_APP_FUNC(0x027D74D0, int32_t, UnicodeEncoding_GetMaxCharCount, (UnicodeEncoding * __this, int32_t byteCount, MethodInfo * method));
DO_APP_FUNC(0x027D7650, bool, UnicodeEncoding_Equals, (UnicodeEncoding * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x027D77C0, int32_t, UnicodeEncoding_GetHashCode, (UnicodeEncoding * __this, MethodInfo * method));
DO_APP_FUNC(0x027D7860, void, UnicodeEncoding__cctor, (MethodInfo * method));
DO_APP_FUNC(0x027D7930, void, UnicodeEncoding_Decoder__ctor, (UnicodeEncoding_Decoder * __this, UnicodeEncoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x027D7970, void, UnicodeEncoding_Decoder__ctor_1, (UnicodeEncoding_Decoder * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027D7DB0, void, UnicodeEncoding_Decoder_System_Runtime_Serialization_ISerializable_GetObjectData, (UnicodeEncoding_Decoder * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027D7F80, void, UnicodeEncoding_Decoder_Reset, (UnicodeEncoding_Decoder * __this, MethodInfo * method));
DO_APP_FUNC(0x027D7FB0, bool, UnicodeEncoding_Decoder_get_HasState, (UnicodeEncoding_Decoder * __this, MethodInfo * method));
DO_APP_FUNC(0x027C77C0, void, UTF32Encoding__ctor, (UTF32Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x027C7800, void, UTF32Encoding__ctor_1, (UTF32Encoding * __this, bool bigEndian, bool byteOrderMark, MethodInfo * method));
DO_APP_FUNC(0x027C7860, void, UTF32Encoding__ctor_2, (UTF32Encoding * __this, bool bigEndian, bool byteOrderMark, bool throwOnInvalidCharacters, MethodInfo * method));
DO_APP_FUNC(0x027C78E0, void, UTF32Encoding_SetDefaultFallbacks, (UTF32Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x027C7B30, int32_t, UTF32Encoding_GetByteCount, (UTF32Encoding * __this, Char__Array * chars, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x027C7D00, int32_t, UTF32Encoding_GetByteCount_1, (UTF32Encoding * __this, String * s, MethodInfo * method));
DO_APP_FUNC(0x027C7DE0, int32_t, UTF32Encoding_GetByteCount_2, (UTF32Encoding * __this, uint16_t * chars, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x027C7F20, int32_t, UTF32Encoding_GetBytes, (UTF32Encoding * __this, String * s, int32_t charIndex, int32_t charCount, Byte__Array * bytes, int32_t byteIndex, MethodInfo * method));
DO_APP_FUNC(0x027C81B0, int32_t, UTF32Encoding_GetBytes_1, (UTF32Encoding * __this, Char__Array * chars, int32_t charIndex, int32_t charCount, Byte__Array * bytes, int32_t byteIndex, MethodInfo * method));
DO_APP_FUNC(0x027C8450, int32_t, UTF32Encoding_GetBytes_2, (UTF32Encoding * __this, uint16_t * chars, int32_t charCount, uint8_t * bytes, int32_t byteCount, MethodInfo * method));
DO_APP_FUNC(0x027C85D0, int32_t, UTF32Encoding_GetCharCount, (UTF32Encoding * __this, Byte__Array * bytes, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x027C87A0, int32_t, UTF32Encoding_GetCharCount_1, (UTF32Encoding * __this, uint8_t * bytes, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x027C88E0, int32_t, UTF32Encoding_GetChars, (UTF32Encoding * __this, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, Char__Array * chars, int32_t charIndex, MethodInfo * method));
DO_APP_FUNC(0x027C8B80, int32_t, UTF32Encoding_GetChars_1, (UTF32Encoding * __this, uint8_t * bytes, int32_t byteCount, uint16_t * chars, int32_t charCount, MethodInfo * method));
DO_APP_FUNC(0x027C8D00, String *, UTF32Encoding_GetString, (UTF32Encoding * __this, Byte__Array * bytes, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x027C8ED0, int32_t, UTF32Encoding_GetByteCount_3, (UTF32Encoding * __this, uint16_t * chars, int32_t count, EncoderNLS * encoder, MethodInfo * method));
DO_APP_FUNC(0x027C92C0, int32_t, UTF32Encoding_GetBytes_3, (UTF32Encoding * __this, uint16_t * chars, int32_t charCount, uint8_t * bytes, int32_t byteCount, EncoderNLS * encoder, MethodInfo * method));
DO_APP_FUNC(0x027C98C0, int32_t, UTF32Encoding_GetCharCount_2, (UTF32Encoding * __this, uint8_t * bytes, int32_t count, DecoderNLS * baseDecoder, MethodInfo * method));
DO_APP_FUNC(0x027C9D30, int32_t, UTF32Encoding_GetChars_2, (UTF32Encoding * __this, uint8_t * bytes, int32_t byteCount, uint16_t * chars, int32_t charCount, DecoderNLS * baseDecoder, MethodInfo * method));
DO_APP_FUNC(0x027CA360, uint32_t, UTF32Encoding_GetSurrogate, (UTF32Encoding * __this, uint16_t cHigh, uint16_t cLow, MethodInfo * method));
DO_APP_FUNC(0x027CA380, uint16_t, UTF32Encoding_GetHighSurrogate, (UTF32Encoding * __this, uint32_t iChar, MethodInfo * method));
DO_APP_FUNC(0x027CA3A0, uint16_t, UTF32Encoding_GetLowSurrogate, (UTF32Encoding * __this, uint32_t iChar, MethodInfo * method));
DO_APP_FUNC(0x027CA3C0, Decoder *, UTF32Encoding_GetDecoder, (UTF32Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x027CA530, Encoder *, UTF32Encoding_GetEncoder, (UTF32Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x027CA6A0, int32_t, UTF32Encoding_GetMaxByteCount, (UTF32Encoding * __this, int32_t charCount, MethodInfo * method));
DO_APP_FUNC(0x027CA820, int32_t, UTF32Encoding_GetMaxCharCount, (UTF32Encoding * __this, int32_t byteCount, MethodInfo * method));
DO_APP_FUNC(0x027CA940, Byte__Array *, UTF32Encoding_GetPreamble, (UTF32Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x027CAAA0, bool, UTF32Encoding_Equals, (UTF32Encoding * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x027CABB0, int32_t, UTF32Encoding_GetHashCode, (UTF32Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x0244A470, void, UTF32Encoding_UTF32Decoder__ctor, (UTF32Encoding_UTF32Decoder * __this, UTF32Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x027CAC50, void, UTF32Encoding_UTF32Decoder_Reset, (UTF32Encoding_UTF32Decoder * __this, MethodInfo * method));
DO_APP_FUNC(0x019E8F70, bool, UTF32Encoding_UTF32Decoder_get_HasState, (UTF32Encoding_UTF32Decoder * __this, MethodInfo * method));
DO_APP_FUNC(0x027CAC80, void, UTF7Encoding__ctor, (UTF7Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x027CAD20, void, UTF7Encoding__ctor_1, (UTF7Encoding * __this, bool allowOptionals, MethodInfo * method));
DO_APP_FUNC(0x027CADD0, void, UTF7Encoding_MakeTables, (UTF7Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x027CB0C0, void, UTF7Encoding_SetDefaultFallbacks, (UTF7Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x0244F700, void, UTF7Encoding_OnDeserializing, (UTF7Encoding * __this, StreamingContext ctx, MethodInfo * method));
DO_APP_FUNC(0x027CB2E0, void, UTF7Encoding_OnDeserialized, (UTF7Encoding * __this, StreamingContext ctx, MethodInfo * method));
DO_APP_FUNC(0x027CB3F0, bool, UTF7Encoding_Equals, (UTF7Encoding * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x027CB520, int32_t, UTF7Encoding_GetHashCode, (UTF7Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x027CB5A0, int32_t, UTF7Encoding_GetByteCount, (UTF7Encoding * __this, Char__Array * chars, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x027CB770, int32_t, UTF7Encoding_GetByteCount_1, (UTF7Encoding * __this, String * s, MethodInfo * method));
DO_APP_FUNC(0x027CB850, int32_t, UTF7Encoding_GetByteCount_2, (UTF7Encoding * __this, uint16_t * chars, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x027CB990, int32_t, UTF7Encoding_GetBytes, (UTF7Encoding * __this, String * s, int32_t charIndex, int32_t charCount, Byte__Array * bytes, int32_t byteIndex, MethodInfo * method));
DO_APP_FUNC(0x027CBC20, int32_t, UTF7Encoding_GetBytes_1, (UTF7Encoding * __this, Char__Array * chars, int32_t charIndex, int32_t charCount, Byte__Array * bytes, int32_t byteIndex, MethodInfo * method));
DO_APP_FUNC(0x027CBEC0, int32_t, UTF7Encoding_GetBytes_2, (UTF7Encoding * __this, uint16_t * chars, int32_t charCount, uint8_t * bytes, int32_t byteCount, MethodInfo * method));
DO_APP_FUNC(0x027CC040, int32_t, UTF7Encoding_GetCharCount, (UTF7Encoding * __this, Byte__Array * bytes, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x027CC210, int32_t, UTF7Encoding_GetCharCount_1, (UTF7Encoding * __this, uint8_t * bytes, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x027CC350, int32_t, UTF7Encoding_GetChars, (UTF7Encoding * __this, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, Char__Array * chars, int32_t charIndex, MethodInfo * method));
DO_APP_FUNC(0x027CC5F0, int32_t, UTF7Encoding_GetChars_1, (UTF7Encoding * __this, uint8_t * bytes, int32_t byteCount, uint16_t * chars, int32_t charCount, MethodInfo * method));
DO_APP_FUNC(0x027CC770, String *, UTF7Encoding_GetString, (UTF7Encoding * __this, Byte__Array * bytes, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x027CC940, int32_t, UTF7Encoding_GetByteCount_3, (UTF7Encoding * __this, uint16_t * chars, int32_t count, EncoderNLS * baseEncoder, MethodInfo * method));
DO_APP_FUNC(0x027CC970, int32_t, UTF7Encoding_GetBytes_3, (UTF7Encoding * __this, uint16_t * chars, int32_t charCount, uint8_t * bytes, int32_t byteCount, EncoderNLS * baseEncoder, MethodInfo * method));
DO_APP_FUNC(0x027CCF60, int32_t, UTF7Encoding_GetCharCount_2, (UTF7Encoding * __this, uint8_t * bytes, int32_t count, DecoderNLS * baseDecoder, MethodInfo * method));
DO_APP_FUNC(0x027CCF90, int32_t, UTF7Encoding_GetChars_2, (UTF7Encoding * __this, uint8_t * bytes, int32_t byteCount, uint16_t * chars, int32_t charCount, DecoderNLS * baseDecoder, MethodInfo * method));
DO_APP_FUNC(0x027CD360, Decoder *, UTF7Encoding_GetDecoder, (UTF7Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x027CD4D0, Encoder *, UTF7Encoding_GetEncoder, (UTF7Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x027CD640, int32_t, UTF7Encoding_GetMaxByteCount, (UTF7Encoding * __this, int32_t charCount, MethodInfo * method));
DO_APP_FUNC(0x027CD760, int32_t, UTF7Encoding_GetMaxCharCount, (UTF7Encoding * __this, int32_t byteCount, MethodInfo * method));
DO_APP_FUNC(0x0244A470, void, UTF7Encoding_Decoder__ctor, (UTF7Encoding_Decoder * __this, UTF7Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x027CD830, void, UTF7Encoding_Decoder__ctor_1, (UTF7Encoding_Decoder * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027CDAC0, void, UTF7Encoding_Decoder_System_Runtime_Serialization_ISerializable_GetObjectData, (UTF7Encoding_Decoder * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027CDBD0, void, UTF7Encoding_Decoder_Reset, (UTF7Encoding_Decoder * __this, MethodInfo * method));
DO_APP_FUNC(0x027CDC00, bool, UTF7Encoding_Decoder_get_HasState, (UTF7Encoding_Decoder * __this, MethodInfo * method));
DO_APP_FUNC(0x0244DBE0, void, UTF7Encoding_Encoder__ctor, (UTF7Encoding_Encoder * __this, UTF7Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x027CDF60, void, UTF7Encoding_Encoder__ctor_1, (UTF7Encoding_Encoder * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027CE190, void, UTF7Encoding_Encoder_System_Runtime_Serialization_ISerializable_GetObjectData, (UTF7Encoding_Encoder * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027CE290, void, UTF7Encoding_Encoder_Reset, (UTF7Encoding_Encoder * __this, MethodInfo * method));
DO_APP_FUNC(0x027CE2C0, bool, UTF7Encoding_Encoder_get_HasState, (UTF7Encoding_Encoder * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, UTF7Encoding_DecoderUTF7Fallback__ctor, (UTF7Encoding_DecoderUTF7Fallback * __this, MethodInfo * method));
DO_APP_FUNC(0x027CDC10, DecoderFallbackBuffer *, UTF7Encoding_DecoderUTF7Fallback_CreateFallbackBuffer, (UTF7Encoding_DecoderUTF7Fallback * __this, MethodInfo * method));
DO_APP_FUNC(0x00417920, int32_t, UTF7Encoding_DecoderUTF7Fallback_get_MaxCharCount, (UTF7Encoding_DecoderUTF7Fallback * __this, MethodInfo * method));
DO_APP_FUNC(0x027CDD50, bool, UTF7Encoding_DecoderUTF7Fallback_Equals, (UTF7Encoding_DecoderUTF7Fallback * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x027CDDF0, int32_t, UTF7Encoding_DecoderUTF7Fallback_GetHashCode, (UTF7Encoding_DecoderUTF7Fallback * __this, MethodInfo * method));
DO_APP_FUNC(0x027CDE00, void, UTF7Encoding_DecoderUTF7FallbackBuffer__ctor, (UTF7Encoding_DecoderUTF7FallbackBuffer * __this, UTF7Encoding_DecoderUTF7Fallback * fallback, MethodInfo * method));
DO_APP_FUNC(0x027CDE10, bool, UTF7Encoding_DecoderUTF7FallbackBuffer_Fallback, (UTF7Encoding_DecoderUTF7FallbackBuffer * __this, Byte__Array * bytesUnknown, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x027CDE60, uint16_t, UTF7Encoding_DecoderUTF7FallbackBuffer_GetNextChar, (UTF7Encoding_DecoderUTF7FallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x02458690, int32_t, UTF7Encoding_DecoderUTF7FallbackBuffer_get_Remaining, (UTF7Encoding_DecoderUTF7FallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x024586A0, void, UTF7Encoding_DecoderUTF7FallbackBuffer_Reset, (UTF7Encoding_DecoderUTF7FallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x027CDE80, int32_t, UTF7Encoding_DecoderUTF7FallbackBuffer_InternalFallback, (UTF7Encoding_DecoderUTF7FallbackBuffer * __this, Byte__Array * bytes, uint8_t * pBytes, MethodInfo * method));
DO_APP_FUNC(0x027CE2E0, void, UTF8Encoding__ctor, (UTF8Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x027CE2F0, void, UTF8Encoding__ctor_1, (UTF8Encoding * __this, bool encoderShouldEmitUTF8Identifier, MethodInfo * method));
DO_APP_FUNC(0x027CE300, void, UTF8Encoding__ctor_2, (UTF8Encoding * __this, bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes, MethodInfo * method));
DO_APP_FUNC(0x027CE3D0, void, UTF8Encoding_SetDefaultFallbacks, (UTF8Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x027CE620, int32_t, UTF8Encoding_GetByteCount, (UTF8Encoding * __this, Char__Array * chars, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x027CE7F0, int32_t, UTF8Encoding_GetByteCount_1, (UTF8Encoding * __this, String * chars, MethodInfo * method));
DO_APP_FUNC(0x027CE8D0, int32_t, UTF8Encoding_GetByteCount_2, (UTF8Encoding * __this, uint16_t * chars, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x027CEA10, int32_t, UTF8Encoding_GetBytes, (UTF8Encoding * __this, String * s, int32_t charIndex, int32_t charCount, Byte__Array * bytes, int32_t byteIndex, MethodInfo * method));
DO_APP_FUNC(0x027CECA0, int32_t, UTF8Encoding_GetBytes_1, (UTF8Encoding * __this, Char__Array * chars, int32_t charIndex, int32_t charCount, Byte__Array * bytes, int32_t byteIndex, MethodInfo * method));
DO_APP_FUNC(0x027CEF40, int32_t, UTF8Encoding_GetBytes_2, (UTF8Encoding * __this, uint16_t * chars, int32_t charCount, uint8_t * bytes, int32_t byteCount, MethodInfo * method));
DO_APP_FUNC(0x027CF0C0, int32_t, UTF8Encoding_GetCharCount, (UTF8Encoding * __this, Byte__Array * bytes, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x027CF290, int32_t, UTF8Encoding_GetCharCount_1, (UTF8Encoding * __this, uint8_t * bytes, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x027CF3D0, int32_t, UTF8Encoding_GetChars, (UTF8Encoding * __this, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, Char__Array * chars, int32_t charIndex, MethodInfo * method));
DO_APP_FUNC(0x027CF670, int32_t, UTF8Encoding_GetChars_1, (UTF8Encoding * __this, uint8_t * bytes, int32_t byteCount, uint16_t * chars, int32_t charCount, MethodInfo * method));
DO_APP_FUNC(0x027CF7F0, String *, UTF8Encoding_GetString, (UTF8Encoding * __this, Byte__Array * bytes, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x027CF9C0, int32_t, UTF8Encoding_GetByteCount_3, (UTF8Encoding * __this, uint16_t * chars, int32_t count, EncoderNLS * baseEncoder, MethodInfo * method));
DO_APP_FUNC(0x027D00E0, int32_t, UTF8Encoding_PtrDiff, (uint16_t * a, uint16_t * b, MethodInfo * method));
DO_APP_FUNC(0x027D00F0, int32_t, UTF8Encoding_PtrDiff_1, (uint8_t * a, uint8_t * b, MethodInfo * method));
DO_APP_FUNC(0x0195FD00, bool, UTF8Encoding_InRange, (int32_t ch, int32_t start, int32_t end, MethodInfo * method));
DO_APP_FUNC(0x027D0100, int32_t, UTF8Encoding_GetBytes_3, (UTF8Encoding * __this, uint16_t * chars, int32_t charCount, uint8_t * bytes, int32_t byteCount, EncoderNLS * baseEncoder, MethodInfo * method));
DO_APP_FUNC(0x027D0A20, int32_t, UTF8Encoding_GetCharCount_2, (UTF8Encoding * __this, uint8_t * bytes, int32_t count, DecoderNLS * baseDecoder, MethodInfo * method));
DO_APP_FUNC(0x027D0FA0, int32_t, UTF8Encoding_GetChars_2, (UTF8Encoding * __this, uint8_t * bytes, int32_t byteCount, uint16_t * chars, int32_t charCount, DecoderNLS * baseDecoder, MethodInfo * method));
DO_APP_FUNC(0x027D1A10, bool, UTF8Encoding_FallbackInvalidByteSequence, (UTF8Encoding * __this, uint8_t * * pSrc, int32_t ch, DecoderFallbackBuffer * fallback, uint16_t * * pTarget, MethodInfo * method));
DO_APP_FUNC(0x027D1A90, int32_t, UTF8Encoding_FallbackInvalidByteSequence_1, (UTF8Encoding * __this, uint8_t * pSrc, int32_t ch, DecoderFallbackBuffer * fallback, MethodInfo * method));
DO_APP_FUNC(0x027D1AE0, Byte__Array *, UTF8Encoding_GetBytesUnknown, (UTF8Encoding * __this, uint8_t * * pSrc, int32_t ch, MethodInfo * method));
DO_APP_FUNC(0x027D1E60, Decoder *, UTF8Encoding_GetDecoder, (UTF8Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x027D1FD0, Encoder *, UTF8Encoding_GetEncoder, (UTF8Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x027D2140, int32_t, UTF8Encoding_GetMaxByteCount, (UTF8Encoding * __this, int32_t charCount, MethodInfo * method));
DO_APP_FUNC(0x027D22B0, int32_t, UTF8Encoding_GetMaxCharCount, (UTF8Encoding * __this, int32_t byteCount, MethodInfo * method));
DO_APP_FUNC(0x027D2420, Byte__Array *, UTF8Encoding_GetPreamble, (UTF8Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x027D2500, bool, UTF8Encoding_Equals, (UTF8Encoding * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x027D2630, int32_t, UTF8Encoding_GetHashCode, (UTF8Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x0244DBE0, void, UTF8Encoding_UTF8Encoder__ctor, (UTF8Encoding_UTF8Encoder * __this, UTF8Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x027D2AB0, void, UTF8Encoding_UTF8Encoder__ctor_1, (UTF8Encoding_UTF8Encoder * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027D2D40, void, UTF8Encoding_UTF8Encoder_System_Runtime_Serialization_ISerializable_GetObjectData, (UTF8Encoding_UTF8Encoder * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027D2E70, void, UTF8Encoding_UTF8Encoder_Reset, (UTF8Encoding_UTF8Encoder * __this, MethodInfo * method));
DO_APP_FUNC(0x027D2EA0, bool, UTF8Encoding_UTF8Encoder_get_HasState, (UTF8Encoding_UTF8Encoder * __this, MethodInfo * method));
DO_APP_FUNC(0x0244A470, void, UTF8Encoding_UTF8Decoder__ctor, (UTF8Encoding_UTF8Decoder * __this, UTF8Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x027D26A0, void, UTF8Encoding_UTF8Decoder__ctor_1, (UTF8Encoding_UTF8Decoder * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027D2930, void, UTF8Encoding_UTF8Decoder_System_Runtime_Serialization_ISerializable_GetObjectData, (UTF8Encoding_UTF8Decoder * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027D2A80, void, UTF8Encoding_UTF8Decoder_Reset, (UTF8Encoding_UTF8Decoder * __this, MethodInfo * method));
DO_APP_FUNC(0x019A42C0, bool, UTF8Encoding_UTF8Decoder_get_HasState, (UTF8Encoding_UTF8Decoder * __this, MethodInfo * method));
DO_APP_FUNC(0x0245A300, uint32_t, Normalization_PropValue, (int32_t cp, MethodInfo * method));
DO_APP_FUNC(0x0245A480, int32_t, Normalization_CharMapIdx, (int32_t cp, MethodInfo * method));
DO_APP_FUNC(0x0245A600, uint8_t, Normalization_GetCombiningClass, (int32_t c, MethodInfo * method));
DO_APP_FUNC(0x0245A700, int32_t, Normalization_GetPrimaryCompositeFromMapIndex, (int32_t src, MethodInfo * method));
DO_APP_FUNC(0x0245A800, int32_t, Normalization_GetPrimaryCompositeHelperIndex, (int32_t cp, MethodInfo * method));
DO_APP_FUNC(0x0245A900, String *, Normalization_Compose, (String * source, int32_t checkType, MethodInfo * method));
DO_APP_FUNC(0x0245AA60, StringBuilder *, Normalization_Combine, (String * source, int32_t start, int32_t checkType, MethodInfo * method));
DO_APP_FUNC(0x0245AC80, void, Normalization_Combine_1, (StringBuilder * sb, int32_t i, int32_t checkType, MethodInfo * method));
DO_APP_FUNC(0x0245ADE0, int32_t, Normalization_CombineHangul, (StringBuilder * sb, String * s, int32_t current, MethodInfo * method));
DO_APP_FUNC(0x0245AFF0, int32_t, Normalization_Fetch, (StringBuilder * sb, String * s, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x0245B040, int32_t, Normalization_TryComposeWithPreviousStarter, (StringBuilder * sb, String * s, int32_t current, MethodInfo * method));
DO_APP_FUNC(0x0245B470, int32_t, Normalization_TryCompose, (int32_t i, int32_t starter, int32_t candidate, MethodInfo * method));
DO_APP_FUNC(0x0245B640, String *, Normalization_Decompose, (String * source, int32_t checkType, MethodInfo * method));
DO_APP_FUNC(0x0245B730, void, Normalization_Decompose_1, (String * source, StringBuilder * * sb, int32_t checkType, MethodInfo * method));
DO_APP_FUNC(0x0245B8E0, void, Normalization_ReorderCanonical, (String * src, StringBuilder * * sb, int32_t start, MethodInfo * method));
DO_APP_FUNC(0x0245BCA0, void, Normalization_DecomposeChar, (StringBuilder * * sb, Int32__Array * * buf, String * s, int32_t i, int32_t checkType, int32_t * start, MethodInfo * method));
DO_APP_FUNC(0x0245BFE0, NormalizationCheck__Enum, Normalization_QuickCheck, (uint16_t c, int32_t type, MethodInfo * method));
DO_APP_FUNC(0x0245C1A0, int32_t, Normalization_GetCanonicalHangul, (int32_t s, Int32__Array * buf, int32_t bufIdx, MethodInfo * method));
DO_APP_FUNC(0x0245C2F0, int32_t, Normalization_GetCanonical, (int32_t c, Int32__Array * buf, int32_t bufIdx, int32_t checkType, MethodInfo * method));
DO_APP_FUNC(0x0245C810, String *, Normalization_Normalize, (String * source, NormalizationForm__Enum normalizationForm, MethodInfo * method));
DO_APP_FUNC(0x0245C950, String *, Normalization_Normalize_1, (String * source, int32_t type, MethodInfo * method));
DO_APP_FUNC(0x0245CC10, void, Normalization_load_normalization_resource, (void * * props, void * * mappedChars, void * * charMapIndex, void * * helperIndex, void * * mapIdxToComposite, void * * combiningClass, MethodInfo * method));
DO_APP_FUNC(0x0245CC60, void, Normalization__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02455380, Encoding *, EncodingHelper_get_UTF8Unmarked, (MethodInfo * method));
DO_APP_FUNC(0x024556E0, String *, EncodingHelper_InternalCodePage, (int32_t * code_page, MethodInfo * method));
DO_APP_FUNC(0x024556F0, Encoding *, EncodingHelper_GetDefaultEncoding, (MethodInfo * method));
DO_APP_FUNC(0x02455850, Object *, EncodingHelper_InvokeI18N, (String * name, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x02455DB0, void, EncodingHelper__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02699220, int32_t, FastResourceComparer_GetHashCode, (FastResourceComparer * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x026992F0, int32_t, FastResourceComparer_GetHashCode_1, (FastResourceComparer * __this, String * key, MethodInfo * method));
DO_APP_FUNC(0x02699390, int32_t, FastResourceComparer_HashFunction, (String * key, MethodInfo * method));
DO_APP_FUNC(0x026994B0, int32_t, FastResourceComparer_Compare, (FastResourceComparer * __this, Object * a, Object * b, MethodInfo * method));
DO_APP_FUNC(0x026995F0, int32_t, FastResourceComparer_Compare_1, (FastResourceComparer * __this, String * a, String * b, MethodInfo * method));
DO_APP_FUNC(0x02022840, bool, FastResourceComparer_Equals, (FastResourceComparer * __this, String * a, String * b, MethodInfo * method));
DO_APP_FUNC(0x02699640, bool, FastResourceComparer_Equals_1, (FastResourceComparer * __this, Object * a, Object * b, MethodInfo * method));
DO_APP_FUNC(0x02699750, int32_t, FastResourceComparer_CompareOrdinal, (String * a, Byte__Array * bytes, int32_t bCharLength, MethodInfo * method));
DO_APP_FUNC(0x02699830, int32_t, FastResourceComparer_CompareOrdinal_1, (Byte__Array * bytes, int32_t aCharLength, String * b, MethodInfo * method));
DO_APP_FUNC(0x02699980, int32_t, FastResourceComparer_CompareOrdinal_2, (uint8_t * a, int32_t byteLen, String * b, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, FastResourceComparer__ctor, (FastResourceComparer * __this, MethodInfo * method));
DO_APP_FUNC(0x02699A30, void, FastResourceComparer__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, FileBasedResourceGroveler__ctor, (FileBasedResourceGroveler * __this, ResourceManager_ResourceManagerMediator * mediator, MethodInfo * method));
DO_APP_FUNC(0x02699B70, ResourceSet *, FileBasedResourceGroveler_GrovelForResourceSet, (FileBasedResourceGroveler * __this, CultureInfo * culture, Dictionary_2_System_String_System_Resources_ResourceSet_ * localResourceSets, bool tryParents, bool createIfNotExists, StackCrawlMark__Enum * stackMark, MethodInfo * method));
DO_APP_FUNC(0x0269A0D0, String *, FileBasedResourceGroveler_FindResourceFile, (FileBasedResourceGroveler * __this, CultureInfo * culture, String * fileName, MethodInfo * method));
DO_APP_FUNC(0x0269A200, ResourceSet *, FileBasedResourceGroveler_CreateResourceSet, (FileBasedResourceGroveler * __this, String * file, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, ManifestBasedResourceGroveler__ctor, (ManifestBasedResourceGroveler * __this, ResourceManager_ResourceManagerMediator * mediator, MethodInfo * method));
DO_APP_FUNC(0x01A814A0, ResourceSet *, ManifestBasedResourceGroveler_GrovelForResourceSet, (ManifestBasedResourceGroveler * __this, CultureInfo * culture, Dictionary_2_System_String_System_Resources_ResourceSet_ * localResourceSets, bool tryParents, bool createIfNotExists, StackCrawlMark__Enum * stackMark, MethodInfo * method));
DO_APP_FUNC(0x01A818D0, CultureInfo *, ManifestBasedResourceGroveler_UltimateFallbackFixup, (ManifestBasedResourceGroveler * __this, CultureInfo * lookForCulture, MethodInfo * method));
DO_APP_FUNC(0x01A81AB0, CultureInfo *, ManifestBasedResourceGroveler_GetNeutralResourcesLanguage, (Assembly * a, UltimateResourceFallbackLocation__Enum * fallbackLocation, MethodInfo * method));
DO_APP_FUNC(0x01A81DD0, ResourceSet *, ManifestBasedResourceGroveler_CreateResourceSet, (ManifestBasedResourceGroveler * __this, Stream * store, Assembly * assembly, MethodInfo * method));
DO_APP_FUNC(0x01A828A0, Stream *, ManifestBasedResourceGroveler_GetManifestResourceStream, (ManifestBasedResourceGroveler * __this, RuntimeAssembly * satellite, String * fileName, StackCrawlMark__Enum * stackMark, MethodInfo * method));
DO_APP_FUNC(0x01A82A40, Stream *, ManifestBasedResourceGroveler_CaseInsensitiveManifestResourceStreamLookup, (ManifestBasedResourceGroveler * __this, RuntimeAssembly * satellite, String * name, MethodInfo * method));
DO_APP_FUNC(0x01A82F60, RuntimeAssembly *, ManifestBasedResourceGroveler_GetSatelliteAssembly, (ManifestBasedResourceGroveler * __this, CultureInfo * lookForCulture, StackCrawlMark__Enum * stackMark, MethodInfo * method));
DO_APP_FUNC(0x01A83240, bool, ManifestBasedResourceGroveler_CanUseDefaultResourceClasses, (ManifestBasedResourceGroveler * __this, String * readerTypeName, String * resSetTypeName, MethodInfo * method));
DO_APP_FUNC(0x01A834C0, String *, ManifestBasedResourceGroveler_GetSatelliteAssemblyName, (ManifestBasedResourceGroveler * __this, MethodInfo * method));
DO_APP_FUNC(0x01A83590, void, ManifestBasedResourceGroveler_HandleSatelliteMissing, (ManifestBasedResourceGroveler * __this, MethodInfo * method));
DO_APP_FUNC(0x01A83B10, void, ManifestBasedResourceGroveler_HandleResourceStreamMissing, (ManifestBasedResourceGroveler * __this, String * fileName, MethodInfo * method));
DO_APP_FUNC(0x01A83EE0, bool, ManifestBasedResourceGroveler_GetNeutralResourcesLanguageAttribute, (Assembly * assembly, String * * cultureName, int16_t * fallbackLocation, MethodInfo * method));
DO_APP_FUNC(0x01A83FA0, void, MissingManifestResourceException__ctor, (MissingManifestResourceException * __this, MethodInfo * method));
DO_APP_FUNC(0x01A84030, void, MissingManifestResourceException__ctor_1, (MissingManifestResourceException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, MissingManifestResourceException__ctor_2, (MissingManifestResourceException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01A84050, void, MissingSatelliteAssemblyException__ctor, (MissingSatelliteAssemblyException * __this, MethodInfo * method));
DO_APP_FUNC(0x01A840E0, void, MissingSatelliteAssemblyException__ctor_1, (MissingSatelliteAssemblyException * __this, String * message, String * cultureName, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, MissingSatelliteAssemblyException__ctor_2, (MissingSatelliteAssemblyException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01A84120, void, NeutralResourcesLanguageAttribute__ctor, (NeutralResourcesLanguageAttribute * __this, String * cultureName, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, NeutralResourcesLanguageAttribute_get_CultureName, (NeutralResourcesLanguageAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, UltimateResourceFallbackLocation__Enum, NeutralResourcesLanguageAttribute_get_Location, (NeutralResourcesLanguageAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01A841F0, void, ResourceFallbackManager__ctor, (ResourceFallbackManager * __this, CultureInfo * startingCulture, CultureInfo * neutralResourcesCulture, bool useParents, MethodInfo * method));
DO_APP_FUNC(0x01A842E0, IEnumerator *, ResourceFallbackManager_System_Collections_IEnumerable_GetEnumerator, (ResourceFallbackManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01A842F0, IEnumerator_1_System_Globalization_CultureInfo_ *, ResourceFallbackManager_GetEnumerator, (ResourceFallbackManager * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, ResourceFallbackManager_GetEnumerator_d_5__ctor, (ResourceFallbackManager_GetEnumerator_d_5 * __this, int32_t __1__state, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ResourceFallbackManager_GetEnumerator_d_5_System_IDisposable_Dispose, (ResourceFallbackManager_GetEnumerator_d_5 * __this, MethodInfo * method));
DO_APP_FUNC(0x01A84440, bool, ResourceFallbackManager_GetEnumerator_d_5_MoveNext, (ResourceFallbackManager_GetEnumerator_d_5 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, CultureInfo *, ResourceFallbackManager_GetEnumerator_d_5_System_Collections_Generic_IEnumerator_System_Globalization_CultureInfo__get_Current, (ResourceFallbackManager_GetEnumerator_d_5 * __this, MethodInfo * method));
DO_APP_FUNC(0x01A846F0, void, ResourceFallbackManager_GetEnumerator_d_5_System_Collections_IEnumerator_Reset, (ResourceFallbackManager_GetEnumerator_d_5 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Object *, ResourceFallbackManager_GetEnumerator_d_5_System_Collections_IEnumerator_get_Current, (ResourceFallbackManager_GetEnumerator_d_5 * __this, MethodInfo * method));
DO_APP_FUNC(0x01A84750, void, ResourceManager_Init, (ResourceManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01A84920, void, ResourceManager__ctor, (ResourceManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01A84C00, void, ResourceManager__ctor_1, (ResourceManager * __this, String * baseName, Assembly * assembly, MethodInfo * method));
DO_APP_FUNC(0x01A84F20, void, ResourceManager__ctor_2, (ResourceManager * __this, Type * resourceSource, MethodInfo * method));
DO_APP_FUNC(0x01A85280, void, ResourceManager_OnDeserializing, (ResourceManager * __this, StreamingContext ctx, MethodInfo * method));
DO_APP_FUNC(0x01A852A0, void, ResourceManager_OnDeserialized, (ResourceManager * __this, StreamingContext ctx, MethodInfo * method));
DO_APP_FUNC(0x01A85740, void, ResourceManager_OnSerializing, (ResourceManager * __this, StreamingContext ctx, MethodInfo * method));
DO_APP_FUNC(0x01A858A0, void, ResourceManager_CommonAssemblyInit, (ResourceManager * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, ResourceManager_get_BaseName, (ResourceManager * __this, MethodInfo * method));
DO_APP_FUNC(0x00585310, bool, ResourceManager_get_IgnoreCase, (ResourceManager * __this, MethodInfo * method));
DO_APP_FUNC(0x003FF2B0, UltimateResourceFallbackLocation__Enum, ResourceManager_get_FallbackLocation, (ResourceManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01A85D60, String *, ResourceManager_GetResourceFileName, (ResourceManager * __this, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x01A85F80, ResourceSet *, ResourceManager_GetFirstResourceSet, (ResourceManager * __this, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x01A864C0, ResourceSet *, ResourceManager_GetResourceSet, (ResourceManager * __this, CultureInfo * culture, bool createIfNotExists, bool tryParents, MethodInfo * method));
DO_APP_FUNC(0x01A86890, ResourceSet *, ResourceManager_InternalGetResourceSet, (ResourceManager * __this, CultureInfo * culture, bool createIfNotExists, bool tryParents, MethodInfo * method));
DO_APP_FUNC(0x01A868C0, ResourceSet *, ResourceManager_InternalGetResourceSet_1, (ResourceManager * __this, CultureInfo * requestedCulture, bool createIfNotExists, bool tryParents, StackCrawlMark__Enum * stackMark, MethodInfo * method));
DO_APP_FUNC(0x01A86FF0, void, ResourceManager_AddResourceSet, (Dictionary_2_System_String_System_Resources_ResourceSet_ * localResourceSets, String * cultureName, ResourceSet * * rs, MethodInfo * method));
DO_APP_FUNC(0x01A87210, Version *, ResourceManager_GetSatelliteContractVersion, (Assembly * a, MethodInfo * method));
DO_APP_FUNC(0x01A87850, CultureInfo *, ResourceManager_GetNeutralResourcesLanguage, (Assembly * a, MethodInfo * method));
DO_APP_FUNC(0x01A87870, bool, ResourceManager_CompareNames, (String * asmTypeName1, String * typeName2, AssemblyName * asmName2, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ResourceManager_SetAppXConfiguration, (ResourceManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01A87DA0, String *, ResourceManager_GetString, (ResourceManager * __this, String * name, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x01A88280, void, ResourceManager__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ResourceManager_CultureNameResourceSetPair__ctor, (ResourceManager_CultureNameResourceSetPair * __this, MethodInfo * method));
DO_APP_FUNC(0x01A88460, void, ResourceManager_ResourceManagerMediator__ctor, (ResourceManager_ResourceManagerMediator * __this, ResourceManager * rm, MethodInfo * method));
DO_APP_FUNC(0x01A88520, String *, ResourceManager_ResourceManagerMediator_get_ModuleDir, (ResourceManager_ResourceManagerMediator * __this, MethodInfo * method));
DO_APP_FUNC(0x01A88540, Type *, ResourceManager_ResourceManagerMediator_get_LocationInfo, (ResourceManager_ResourceManagerMediator * __this, MethodInfo * method));
DO_APP_FUNC(0x01A88560, Type *, ResourceManager_ResourceManagerMediator_get_UserResourceSet, (ResourceManager_ResourceManagerMediator * __this, MethodInfo * method));
DO_APP_FUNC(0x01052DF0, String *, ResourceManager_ResourceManagerMediator_get_BaseNameField, (ResourceManager_ResourceManagerMediator * __this, MethodInfo * method));
DO_APP_FUNC(0x00824120, CultureInfo *, ResourceManager_ResourceManagerMediator_get_NeutralResourcesCulture, (ResourceManager_ResourceManagerMediator * __this, MethodInfo * method));
DO_APP_FUNC(0x01869F10, String *, ResourceManager_ResourceManagerMediator_GetResourceFileName, (ResourceManager_ResourceManagerMediator * __this, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x01A88580, bool, ResourceManager_ResourceManagerMediator_get_LookedForSatelliteContractVersion, (ResourceManager_ResourceManagerMediator * __this, MethodInfo * method));
DO_APP_FUNC(0x01A885A0, void, ResourceManager_ResourceManagerMediator_set_LookedForSatelliteContractVersion, (ResourceManager_ResourceManagerMediator * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01A885C0, Version *, ResourceManager_ResourceManagerMediator_get_SatelliteContractVersion, (ResourceManager_ResourceManagerMediator * __this, MethodInfo * method));
DO_APP_FUNC(0x01A885E0, void, ResourceManager_ResourceManagerMediator_set_SatelliteContractVersion, (ResourceManager_ResourceManagerMediator * __this, Version * value, MethodInfo * method));
DO_APP_FUNC(0x01A88600, Version *, ResourceManager_ResourceManagerMediator_ObtainSatelliteContractVersion, (ResourceManager_ResourceManagerMediator * __this, Assembly * a, MethodInfo * method));
DO_APP_FUNC(0x01A886A0, UltimateResourceFallbackLocation__Enum, ResourceManager_ResourceManagerMediator_get_FallbackLoc, (ResourceManager_ResourceManagerMediator * __this, MethodInfo * method));
DO_APP_FUNC(0x010648A0, RuntimeAssembly *, ResourceManager_ResourceManagerMediator_get_CallingAssembly, (ResourceManager_ResourceManagerMediator * __this, MethodInfo * method));
DO_APP_FUNC(0x01A886C0, RuntimeAssembly *, ResourceManager_ResourceManagerMediator_get_MainAssembly, (ResourceManager_ResourceManagerMediator * __this, MethodInfo * method));
DO_APP_FUNC(0x01A887A0, String *, ResourceManager_ResourceManagerMediator_get_BaseName, (ResourceManager_ResourceManagerMediator * __this, MethodInfo * method));
DO_APP_FUNC(0x0018ED30, void, ResourceLocator__ctor, (ResourceLocator__Boxed * __this, int32_t dataPos, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0010A860, int32_t, ResourceLocator_get_DataPosition, (ResourceLocator__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00107C00, Object *, ResourceLocator_get_Value, (ResourceLocator__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, ResourceLocator_set_Value, (ResourceLocator__Boxed * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01A84740, bool, ResourceLocator_CanCache, (ResourceTypeCode__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01A887D0, void, ResourceReader__ctor, (ResourceReader * __this, Stream * stream, Dictionary_2_System_String_System_Resources_ResourceLocator_ * resCache, MethodInfo * method));
DO_APP_FUNC(0x01A88990, void, ResourceReader_Close, (ResourceReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01A88990, void, ResourceReader_Dispose, (ResourceReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01A889F0, void, ResourceReader_Dispose_1, (ResourceReader * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01A88A50, int32_t, ResourceReader_ReadUnalignedI4, (int32_t * p, MethodInfo * method));
DO_APP_FUNC(0x01A88A70, void, ResourceReader_SkipString, (ResourceReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01A88BA0, int32_t, ResourceReader_GetNameHash, (ResourceReader * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01A88C20, int32_t, ResourceReader_GetNamePosition, (ResourceReader * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01A88DB0, IEnumerator *, ResourceReader_System_Collections_IEnumerable_GetEnumerator, (ResourceReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01A88DC0, IDictionaryEnumerator *, ResourceReader_GetEnumerator, (ResourceReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01A88F60, ResourceReader_ResourceEnumerator *, ResourceReader_GetEnumeratorInternal, (ResourceReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01A890B0, int32_t, ResourceReader_FindPosForResource, (ResourceReader * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01A89540, bool, ResourceReader_CompareStringEqualsName, (ResourceReader * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01A89890, String *, ResourceReader_AllocateStringForNameIndex, (ResourceReader * __this, int32_t index, int32_t * dataOffset, MethodInfo * method));
DO_APP_FUNC(0x01A8A090, Object *, ResourceReader_GetValueForNameIndex, (ResourceReader * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01A8A390, String *, ResourceReader_LoadString, (ResourceReader * __this, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x01A8A6C0, Object *, ResourceReader_LoadObject, (ResourceReader * __this, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x01A8A6F0, Object *, ResourceReader_LoadObject_1, (ResourceReader * __this, int32_t pos, ResourceTypeCode__Enum * typeCode, MethodInfo * method));
DO_APP_FUNC(0x01A8A7D0, Object *, ResourceReader_LoadObjectV1, (ResourceReader * __this, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x01A8A8F0, Object *, ResourceReader__LoadObjectV1, (ResourceReader * __this, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x01A8B0B0, Object *, ResourceReader_LoadObjectV2, (ResourceReader * __this, int32_t pos, ResourceTypeCode__Enum * typeCode, MethodInfo * method));
DO_APP_FUNC(0x01A8B1E0, Object *, ResourceReader__LoadObjectV2, (ResourceReader * __this, int32_t pos, ResourceTypeCode__Enum * typeCode, MethodInfo * method));
DO_APP_FUNC(0x01A8BE50, Object *, ResourceReader_DeserializeObject, (ResourceReader * __this, int32_t typeIndex, MethodInfo * method));
DO_APP_FUNC(0x01A8C060, void, ResourceReader_ReadResources, (ResourceReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01A8C260, void, ResourceReader__ReadResources, (ResourceReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01A8CD20, RuntimeType *, ResourceReader_FindType, (ResourceReader * __this, int32_t typeIndex, MethodInfo * method));
DO_APP_FUNC(0x01A8D130, void, ResourceReader_ResourceEnumerator__ctor, (ResourceReader_ResourceEnumerator * __this, ResourceReader * reader, MethodInfo * method));
DO_APP_FUNC(0x01A8D150, bool, ResourceReader_ResourceEnumerator_MoveNext, (ResourceReader_ResourceEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01A8D1A0, Object *, ResourceReader_ResourceEnumerator_get_Key, (ResourceReader_ResourceEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01A8D320, Object *, ResourceReader_ResourceEnumerator_get_Current, (ResourceReader_ResourceEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, int32_t, ResourceReader_ResourceEnumerator_get_DataPosition, (ResourceReader_ResourceEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01A8D3C0, DictionaryEntry, ResourceReader_ResourceEnumerator_get_Entry, (ResourceReader_ResourceEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01A8D7D0, Object *, ResourceReader_ResourceEnumerator_get_Value, (ResourceReader_ResourceEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01A8D950, void, ResourceReader_ResourceEnumerator_Reset, (ResourceReader_ResourceEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01A8DA30, void, ResourceSet__ctor, (ResourceSet * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ResourceSet__ctor_1, (ResourceSet * __this, bool junk, MethodInfo * method));
DO_APP_FUNC(0x01A8DA30, void, ResourceSet_CommonInit, (ResourceSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01A8DB90, void, ResourceSet_Dispose, (ResourceSet * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01A8DC40, void, ResourceSet_Dispose_1, (ResourceSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01A8DC60, IDictionaryEnumerator *, ResourceSet_GetEnumerator, (ResourceSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01A8DC60, IEnumerator *, ResourceSet_System_Collections_IEnumerable_GetEnumerator, (ResourceSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01A8DC70, IDictionaryEnumerator *, ResourceSet_GetEnumeratorHelper, (ResourceSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01A8DD50, String *, ResourceSet_GetString, (ResourceSet * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01A8DEA0, String *, ResourceSet_GetString_1, (ResourceSet * __this, String * name, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x01A8E0B0, Object *, ResourceSet_GetObject, (ResourceSet * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01A8E0C0, Object *, ResourceSet_GetObject_1, (ResourceSet * __this, String * name, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x01A8E110, Object *, ResourceSet_GetObjectInternal, (ResourceSet * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01A8E230, Object *, ResourceSet_GetCaseInsensitiveObjectInternal, (ResourceSet * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01A8E5F0, void, RuntimeResourceSet__ctor, (RuntimeResourceSet * __this, String * fileName, MethodInfo * method));
DO_APP_FUNC(0x01A8E980, void, RuntimeResourceSet__ctor_1, (RuntimeResourceSet * __this, Stream * stream, MethodInfo * method));
DO_APP_FUNC(0x01A8EC10, void, RuntimeResourceSet_Dispose, (RuntimeResourceSet * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01A8ED70, IDictionaryEnumerator *, RuntimeResourceSet_GetEnumerator, (RuntimeResourceSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01A8ED70, IEnumerator *, RuntimeResourceSet_System_Collections_IEnumerable_GetEnumerator, (RuntimeResourceSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01A8ED80, IDictionaryEnumerator *, RuntimeResourceSet_GetEnumeratorHelper, (RuntimeResourceSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01A8EE60, String *, RuntimeResourceSet_GetString, (RuntimeResourceSet * __this, String * key, MethodInfo * method));
DO_APP_FUNC(0x01A8EF20, String *, RuntimeResourceSet_GetString_1, (RuntimeResourceSet * __this, String * key, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x01A8EFF0, Object *, RuntimeResourceSet_GetObject, (RuntimeResourceSet * __this, String * key, MethodInfo * method));
DO_APP_FUNC(0x01A8F010, Object *, RuntimeResourceSet_GetObject_1, (RuntimeResourceSet * __this, String * key, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x01A8F030, Object *, RuntimeResourceSet_GetObject_2, (RuntimeResourceSet * __this, String * key, bool ignoreCase, bool isString, MethodInfo * method));
DO_APP_FUNC(0x01A8FAA0, Object *, RuntimeResourceSet_ResolveResourceLocator, (RuntimeResourceSet * __this, ResourceLocator resLocation, String * key, Dictionary_2_System_String_System_Resources_ResourceLocator_ * copyOfCache, bool keyInWrongCase, MethodInfo * method));
DO_APP_FUNC(0x01A8FCA0, void, SatelliteContractVersionAttribute__ctor, (SatelliteContractVersionAttribute * __this, String * version, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, SatelliteContractVersionAttribute_get_Version, (SatelliteContractVersionAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0229B200, Attribute *, CustomAttributeExtensions_GetCustomAttribute, (Assembly * element, Type * attributeType, MethodInfo * method));
DO_APP_FUNC(0x0229A2D0, Attribute *, CustomAttributeExtensions_GetCustomAttribute_1, (MemberInfo_1 * element, Type * attributeType, MethodInfo * method));
DO_APP_FUNC(0x013DCFB0, bool, CustomAttributeExtensions_IsDefined, (MemberInfo_1 * element, Type * attributeType, MethodInfo * method));
DO_APP_FUNC(0x02280F00, void, AmbiguousMatchException__ctor, (AmbiguousMatchException * __this, MethodInfo * method));
DO_APP_FUNC(0x02280F90, void, AmbiguousMatchException__ctor_1, (AmbiguousMatchException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, AmbiguousMatchException__ctor_2, (AmbiguousMatchException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, AssemblyCopyrightAttribute__ctor, (AssemblyCopyrightAttribute * __this, String * copyright, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, AssemblyTrademarkAttribute__ctor, (AssemblyTrademarkAttribute * __this, String * trademark, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, AssemblyProductAttribute__ctor, (AssemblyProductAttribute * __this, String * product, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, AssemblyCompanyAttribute__ctor, (AssemblyCompanyAttribute * __this, String * company, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, AssemblyDescriptionAttribute__ctor, (AssemblyDescriptionAttribute * __this, String * description, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, AssemblyTitleAttribute__ctor, (AssemblyTitleAttribute * __this, String * title, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, AssemblyConfigurationAttribute__ctor, (AssemblyConfigurationAttribute * __this, String * configuration, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, AssemblyDefaultAliasAttribute__ctor, (AssemblyDefaultAliasAttribute * __this, String * defaultAlias, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, AssemblyInformationalVersionAttribute__ctor, (AssemblyInformationalVersionAttribute * __this, String * informationalVersion, MethodInfo * method));
DO_APP_FUNC(0x022839E0, void, AssemblyFileVersionAttribute__ctor, (AssemblyFileVersionAttribute * __this, String * version, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, AssemblyKeyFileAttribute__ctor, (AssemblyKeyFileAttribute * __this, String * keyFile, MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, AssemblyDelaySignAttribute__ctor, (AssemblyDelaySignAttribute * __this, bool delaySign, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Binder__ctor, (Binder * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, DefaultMemberAttribute__ctor, (DefaultMemberAttribute * __this, String * memberName, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, DefaultMemberAttribute_get_MemberName, (DefaultMemberAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0268AC00, TypeInfo *, IntrospectionExtensions_GetTypeInfo, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x0268AD70, void, InvalidFilterCriteriaException__ctor, (InvalidFilterCriteriaException * __this, MethodInfo * method));
DO_APP_FUNC(0x0268AE00, void, InvalidFilterCriteriaException__ctor_1, (InvalidFilterCriteriaException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x0268AE20, void, InvalidFilterCriteriaException__ctor_2, (InvalidFilterCriteriaException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x00E332C0, void, ManifestResourceInfo__ctor, (ManifestResourceInfo * __this, Assembly * containingAssembly, String * containingFileName, ResourceLocation__Enum resourceLocation, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Assembly *, ManifestResourceInfo_get_ReferencedAssembly, (ManifestResourceInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, ManifestResourceInfo_get_FileName, (ManifestResourceInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, ResourceLocation__Enum, ManifestResourceInfo_get_ResourceLocation, (ManifestResourceInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, MemberFilter__ctor, (MemberFilter * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01D3D560, bool, MemberFilter_Invoke, (MemberFilter * __this, MemberInfo_1 * m, Object * filterCriteria, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, MemberFilter_BeginInvoke, (MemberFilter * __this, MemberInfo_1 * m, Object * filterCriteria, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x008A1BF0, bool, MemberFilter_EndInvoke, (MemberFilter * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MemberInfo_1__ctor, (MemberInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x0268AF40, IList_1_System_Reflection_CustomAttributeData_ *, MemberInfo_1_GetCustomAttributesData, (MemberInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x0268AF90, int32_t, MemberInfo_1_get_MetadataToken, (MemberInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x0268B130, Module *, MemberInfo_1_get_Module, (MemberInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x0268B2B0, bool, MemberInfo_1_op_Equality, (MemberInfo_1 * left, MemberInfo_1 * right, MethodInfo * method));
DO_APP_FUNC(0x0268B5F0, bool, MemberInfo_1_op_Inequality, (MemberInfo_1 * left, MemberInfo_1 * right, MethodInfo * method));
DO_APP_FUNC(0x015F8190, bool, MemberInfo_1_Equals, (MemberInfo_1 * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0194D440, int32_t, MemberInfo_1_GetHashCode, (MemberInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x0268B610, void, MemberInfoSerializationHolder_GetSerializationInfo, (SerializationInfo * info, String * name, RuntimeType * reflectedClass, String * signature, MemberTypes__Enum type, MethodInfo * method));
DO_APP_FUNC(0x0268B640, void, MemberInfoSerializationHolder_GetSerializationInfo_1, (SerializationInfo * info, String * name, RuntimeType * reflectedClass, String * signature, String * signature2, MemberTypes__Enum type, Type__Array * genericArguments, MethodInfo * method));
DO_APP_FUNC(0x0268B900, void, MemberInfoSerializationHolder__ctor, (MemberInfoSerializationHolder * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0268BB70, void, MemberInfoSerializationHolder_GetObjectData, (MemberInfoSerializationHolder * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0268BBE0, Object *, MemberInfoSerializationHolder_GetRealObject, (MemberInfoSerializationHolder * __this, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0268C9D0, MethodBase *, MethodBase_GetMethodFromHandle, (RuntimeMethodHandle handle, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MethodBase__ctor, (MethodBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0268CC90, bool, MethodBase_op_Equality, (MethodBase * left, MethodBase * right, MethodInfo * method));
DO_APP_FUNC(0x0268CE30, bool, MethodBase_op_Inequality, (MethodBase * left, MethodBase * right, MethodInfo * method));
DO_APP_FUNC(0x015F8190, bool, MethodBase_Equals, (MethodBase * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0194D440, int32_t, MethodBase_GetHashCode, (MethodBase * __this, MethodInfo * method));
DO_APP_FUNC(0x01E113B0, ParameterInfo_1__Array *, MethodBase_GetParametersNoCopy, (MethodBase * __this, MethodInfo * method));
DO_APP_FUNC(0x00417920, CallingConventions__Enum, MethodBase_get_CallingConvention, (MethodBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0268CE50, Type__Array *, MethodBase_GetGenericArguments, (MethodBase * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, MethodBase_get_IsGenericMethodDefinition, (MethodBase * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, MethodBase_get_ContainsGenericParameters, (MethodBase * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, MethodBase_get_IsGenericMethod, (MethodBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0268CEC0, bool, MethodBase_get_IsSecurityCritical, (MethodBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0268CF10, Object *, MethodBase_Invoke, (MethodBase * __this, Object * obj, Object__Array * parameters, MethodInfo * method));
DO_APP_FUNC(0x0268CF50, bool, MethodBase_get_IsPublic, (MethodBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0268CF80, bool, MethodBase_get_IsStatic, (MethodBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0268CFA0, bool, MethodBase_get_IsFinal, (MethodBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0268CFC0, bool, MethodBase_get_IsVirtual, (MethodBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0268CFE0, bool, MethodBase_get_IsAbstract, (MethodBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0268D010, bool, MethodBase_get_IsSpecialName, (MethodBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0268D040, bool, MethodBase_get_IsConstructor, (MethodBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0268D140, MethodBody *, MethodBase_GetMethodBody, (MethodBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0268D190, String *, MethodBase_ConstructParameters, (Type__Array * parameterTypes, CallingConventions__Enum callingConvention, bool serialization, MethodInfo * method));
DO_APP_FUNC(0x0268D4A0, String *, MethodBase_FormatNameAndSig, (MethodBase * __this, bool serialization, MethodInfo * method));
DO_APP_FUNC(0x0268D6C0, Type__Array *, MethodBase_GetParameterTypes, (MethodBase * __this, MethodInfo * method));
DO_APP_FUNC(0x01E113B0, ParameterInfo_1__Array *, MethodBase_GetParametersInternal, (MethodBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0268D830, int32_t, MethodBase_GetParametersCount, (MethodBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0268D860, MethodBase *, MethodBase_GetMethodFromHandleNoGenericCheck, (RuntimeMethodHandle handle, MethodInfo * method));
DO_APP_FUNC(0x0268D8E0, MethodBase *, MethodBase_GetMethodFromHandleNoGenericCheck_1, (RuntimeMethodHandle handle, RuntimeTypeHandle reflectedType, MethodInfo * method));
DO_APP_FUNC(0x0268D920, MethodBody *, MethodBase_GetMethodBodyInternal, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x0268D930, MethodBody *, MethodBase_GetMethodBody_1, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x0268D940, MethodBase *, MethodBase_GetMethodFromHandleInternalType, (void * method_handle, void * type_handle, MethodInfo * method));
DO_APP_FUNC(0x0268D950, MethodBase *, MethodBase_GetMethodFromHandleInternalType_native, (void * method_handle, void * type_handle, bool genericCheck, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MethodInfo_1__ctor, (MethodInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x0268D960, bool, MethodInfo_1_op_Equality, (MethodInfo_1 * left, MethodInfo_1 * right, MethodInfo * method));
DO_APP_FUNC(0x0268DA40, bool, MethodInfo_1_op_Inequality, (MethodInfo_1 * left, MethodInfo_1 * right, MethodInfo * method));
DO_APP_FUNC(0x015F8190, bool, MethodInfo_1_Equals, (MethodInfo_1 * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0194D440, int32_t, MethodInfo_1_GetHashCode, (MethodInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x0043D9A0, MemberTypes__Enum, MethodInfo_1_get_MemberType, (MethodInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x0268DA60, Type *, MethodInfo_1_get_ReturnType, (MethodInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x0268DAB0, Type__Array *, MethodInfo_1_GetGenericArguments, (MethodInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x0268DB20, MethodInfo_1 *, MethodInfo_1_GetGenericMethodDefinition, (MethodInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x0268DB90, MethodInfo_1 *, MethodInfo_1_MakeGenericMethod, (MethodInfo_1 * __this, Type__Array * typeArguments, MethodInfo * method));
DO_APP_FUNC(0x0268DC00, Delegate *, MethodInfo_1_CreateDelegate, (MethodInfo_1 * __this, Type * delegateType, MethodInfo * method));
DO_APP_FUNC(0x0268DC70, Delegate *, MethodInfo_1_CreateDelegate_1, (MethodInfo_1 * __this, Type * delegateType, Object * target, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, MethodInfo_1 *, MethodInfo_1_GetBaseMethod, (MethodInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Missing__ctor, (Missing * __this, MethodInfo * method));
DO_APP_FUNC(0x0268DCE0, void, Missing_System_Runtime_Serialization_ISerializable_GetObjectData, (Missing * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0268DE40, void, Missing__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Pointer_1__ctor, (Pointer_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02695560, void, Pointer_1__ctor_1, (Pointer_1 * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x026956F0, Object *, Pointer_1_Box, (Void * ptr, Type * type, MethodInfo * method));
DO_APP_FUNC(0x026959A0, void, Pointer_1_System_Runtime_Serialization_ISerializable_GetObjectData, (Pointer_1 * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02695FF0, void, ReflectionTypeLoadException__ctor, (ReflectionTypeLoadException * __this, MethodInfo * method));
DO_APP_FUNC(0x02696080, void, ReflectionTypeLoadException__ctor_1, (ReflectionTypeLoadException * __this, Type__Array * classes, Exception__Array * exceptions, MethodInfo * method));
DO_APP_FUNC(0x026960D0, void, ReflectionTypeLoadException__ctor_2, (ReflectionTypeLoadException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FBC20, Type__Array *, ReflectionTypeLoadException_get_Types, (ReflectionTypeLoadException * __this, MethodInfo * method));
DO_APP_FUNC(0x02696270, void, ReflectionTypeLoadException_GetObjectData, (ReflectionTypeLoadException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02698BE0, void, TargetException__ctor, (TargetException * __this, MethodInfo * method));
DO_APP_FUNC(0x02698CA0, void, TargetException__ctor_1, (TargetException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x0268AE20, void, TargetException__ctor_2, (TargetException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02698CC0, void, TargetInvocationException__ctor, (TargetInvocationException * __this, MethodInfo * method));
DO_APP_FUNC(0x02698D50, void, TargetInvocationException__ctor_1, (TargetInvocationException * __this, Exception * inner, MethodInfo * method));
DO_APP_FUNC(0x02698DF0, void, TargetInvocationException__ctor_2, (TargetInvocationException * __this, String * message, Exception * inner, MethodInfo * method));
DO_APP_FUNC(0x0268AE20, void, TargetInvocationException__ctor_3, (TargetInvocationException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02698E10, void, TargetParameterCountException__ctor, (TargetParameterCountException * __this, MethodInfo * method));
DO_APP_FUNC(0x02698EA0, void, TargetParameterCountException__ctor_1, (TargetParameterCountException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x02698EC0, void, TargetParameterCountException__ctor_2, (TargetParameterCountException * __this, String * message, Exception * inner, MethodInfo * method));
DO_APP_FUNC(0x0268AE20, void, TargetParameterCountException__ctor_3, (TargetParameterCountException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, TypeFilter__ctor, (TypeFilter * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01D3D560, bool, TypeFilter_Invoke, (TypeFilter * __this, Type * m, Object * filterCriteria, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, TypeFilter_BeginInvoke, (TypeFilter * __this, Type * m, Object * filterCriteria, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x008A1BF0, bool, TypeFilter_EndInvoke, (TypeFilter * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x02698EE0, void, TypeInfo__ctor, (TypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, TypeInfo *, TypeInfo_System_Reflection_IReflectableType_GetTypeInfo, (TypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02698F70, IEnumerable_1_System_Reflection_FieldInfo_ *, TypeInfo_get_DeclaredFields, (TypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02698F90, IEnumerable_1_System_Type_ *, TypeInfo_get_ImplementedInterfaces, (TypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02280FB0, void, Assembly__ctor, (Assembly * __this, MethodInfo * method));
DO_APP_FUNC(0x022810F0, String *, Assembly_get_code_base, (Assembly * __this, bool escaped, MethodInfo * method));
DO_APP_FUNC(0x02281100, String *, Assembly_get_fullname, (Assembly * __this, MethodInfo * method));
DO_APP_FUNC(0x02281190, String *, Assembly_get_location, (Assembly * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, String *, Assembly_GetAotId, (MethodInfo * method));
DO_APP_FUNC(0x022810F0, String *, Assembly_GetCodeBase, (Assembly * __this, bool escaped, MethodInfo * method));
DO_APP_FUNC(0x022811A0, String *, Assembly_get_CodeBase, (Assembly * __this, MethodInfo * method));
DO_APP_FUNC(0x022811B0, String *, Assembly_get_EscapedCodeBase, (Assembly * __this, MethodInfo * method));
DO_APP_FUNC(0x01742A00, String *, Assembly_get_FullName, (Assembly * __this, MethodInfo * method));
DO_APP_FUNC(0x022811C0, String *, Assembly_get_Location, (Assembly * __this, MethodInfo * method));
DO_APP_FUNC(0x02281260, void, Assembly_GetObjectData, (Assembly * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x022812B0, bool, Assembly_IsDefined, (Assembly * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02281370, Object__Array *, Assembly_GetCustomAttributes, (Assembly * __this, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02281420, Object__Array *, Assembly_GetCustomAttributes_1, (Assembly * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x022814E0, void *, Assembly_GetManifestResourceInternal, (Assembly * __this, String * name, int32_t * size, Module * * module, MethodInfo * method));
DO_APP_FUNC(0x022814F0, Stream *, Assembly_GetManifestResourceStream, (Assembly * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x02281BA0, Stream *, Assembly_GetManifestResourceStream_1, (Assembly * __this, Type * type, String * name, bool skipSecurityCheck, StackCrawlMark__Enum * stackMark, MethodInfo * method));
DO_APP_FUNC(0x02281E20, Stream *, Assembly_GetManifestResourceStream_2, (Assembly * __this, String * name, StackCrawlMark__Enum * stackMark, bool skipSecurityCheck, MethodInfo * method));
DO_APP_FUNC(0x02281E50, String *, Assembly_GetSimpleName, (Assembly * __this, MethodInfo * method));
DO_APP_FUNC(0x02281E80, Byte__Array *, Assembly_GetPublicKey, (Assembly * __this, MethodInfo * method));
DO_APP_FUNC(0x02281EB0, Version *, Assembly_GetVersion, (Assembly * __this, MethodInfo * method));
DO_APP_FUNC(0x02281EE0, AssemblyNameFlags__Enum, Assembly_GetFlags, (Assembly * __this, MethodInfo * method));
DO_APP_FUNC(0x02281F10, Type__Array *, Assembly_GetTypes, (Assembly * __this, bool exportedOnly, MethodInfo * method));
DO_APP_FUNC(0x02282080, Type__Array *, Assembly_GetTypes_1, (Assembly * __this, MethodInfo * method));
DO_APP_FUNC(0x022820A0, Type *, Assembly_GetType, (Assembly * __this, String * name, bool throwOnError, MethodInfo * method));
DO_APP_FUNC(0x022820D0, Type *, Assembly_GetType_1, (Assembly * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x02282100, Type *, Assembly_InternalGetType, (Assembly * __this, Module * module, String * name, bool throwOnError, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x02282110, AssemblyName *, Assembly_GetName, (Assembly * __this, bool copiedName, MethodInfo * method));
DO_APP_FUNC(0x02282160, AssemblyName *, Assembly_GetName_1, (Assembly * __this, MethodInfo * method));
DO_APP_FUNC(0x02282180, String *, Assembly_ToString, (Assembly * __this, MethodInfo * method));
DO_APP_FUNC(0x02282230, Assembly *, Assembly_GetAssembly, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Assembly *, Assembly_GetEntryAssembly, (MethodInfo * method));
DO_APP_FUNC(0x02282310, RuntimeAssembly *, Assembly_InternalGetSatelliteAssembly, (Assembly * __this, String * name, CultureInfo * culture, Version * version, bool throwOnFileNotFound, StackCrawlMark__Enum * stackMark, MethodInfo * method));
DO_APP_FUNC(0x022829A0, Assembly *, Assembly_LoadFrom, (String * assemblyFile, bool refonly, MethodInfo * method));
DO_APP_FUNC(0x022829A0, Assembly *, Assembly_LoadFrom_1, (String * assemblyFile, MethodInfo * method));
DO_APP_FUNC(0x02282B00, Assembly *, Assembly_Load, (String * assemblyString, MethodInfo * method));
DO_APP_FUNC(0x02282D60, Assembly *, Assembly_LoadWithPartialName, (String * partialName, MethodInfo * method));
DO_APP_FUNC(0x02282D70, Assembly *, Assembly_load_with_partial_name, (String * name, Evidence * e, MethodInfo * method));
DO_APP_FUNC(0x02282E40, Assembly *, Assembly_LoadWithPartialName_1, (String * partialName, Evidence * securityEvidence, MethodInfo * method));
DO_APP_FUNC(0x02282E50, Assembly *, Assembly_LoadWithPartialName_2, (String * partialName, Evidence * securityEvidence, bool oldBehavior, MethodInfo * method));
DO_APP_FUNC(0x02282FE0, Module__Array *, Assembly_GetModules, (Assembly * __this, MethodInfo * method));
DO_APP_FUNC(0x02283000, Module__Array *, Assembly_GetModulesInternal, (Assembly * __this, MethodInfo * method));
DO_APP_FUNC(0x02283050, String__Array *, Assembly_GetManifestResourceNames, (Assembly * __this, MethodInfo * method));
DO_APP_FUNC(0x022831B0, Assembly *, Assembly_GetExecutingAssembly, (MethodInfo * method));
DO_APP_FUNC(0x02283230, Assembly *, Assembly_GetCallingAssembly, (MethodInfo * method));
DO_APP_FUNC(0x02283330, bool, Assembly_GetManifestResourceInfoInternal, (Assembly * __this, String * name, ManifestResourceInfo * info, MethodInfo * method));
DO_APP_FUNC(0x02283340, ManifestResourceInfo *, Assembly_GetManifestResourceInfo, (Assembly * __this, String * resourceName, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Assembly_get_ReflectionOnly, (Assembly * __this, MethodInfo * method));
DO_APP_FUNC(0x0194D440, int32_t, Assembly_GetHashCode, (Assembly * __this, MethodInfo * method));
DO_APP_FUNC(0x02283530, bool, Assembly_Equals, (Assembly * __this, Object * o, MethodInfo * method));
DO_APP_FUNC(0x02283610, Exception *, Assembly_CreateNIE, (MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, Assembly_get_IsFullyTrusted, (Assembly * __this, MethodInfo * method));
DO_APP_FUNC(0x02283760, Type *, Assembly_GetType_2, (Assembly * __this, String * name, bool throwOnError, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x022837A0, Module *, Assembly_GetModule, (Assembly * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x022837E0, Module__Array *, Assembly_GetModules_1, (Assembly * __this, bool getResourceModules, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Assembly_get_IsDynamic, (Assembly * __this, MethodInfo * method));
DO_APP_FUNC(0x02283820, bool, Assembly_op_Equality, (Assembly * left, Assembly * right, MethodInfo * method));
DO_APP_FUNC(0x02283870, bool, Assembly_op_Inequality, (Assembly * left, Assembly * right, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Assembly_ResolveEventHolder__ctor, (Assembly_ResolveEventHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x022838D0, void, Assembly_UnmanagedMemoryStreamForModule__ctor, (Assembly_UnmanagedMemoryStreamForModule * __this, uint8_t * pointer, int64_t length, Module * module, MethodInfo * method));
DO_APP_FUNC(0x022839C0, void, Assembly_UnmanagedMemoryStreamForModule_Dispose, (Assembly_UnmanagedMemoryStreamForModule * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x02283AA0, void, AssemblyName__ctor, (AssemblyName * __this, MethodInfo * method));
DO_APP_FUNC(0x02283AB0, bool, AssemblyName_ParseAssemblyName, (void * name, MonoAssemblyName * aname, bool * is_version_definited, bool * is_token_defined, MethodInfo * method));
DO_APP_FUNC(0x02283AC0, void, AssemblyName__ctor_1, (AssemblyName * __this, String * assemblyName, MethodInfo * method));
DO_APP_FUNC(0x02283DA0, void, AssemblyName__ctor_2, (AssemblyName * __this, SerializationInfo * si, StreamingContext sc, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, AssemblyName_get_Name, (AssemblyName * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, AssemblyName_set_Name, (AssemblyName * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB990, CultureInfo *, AssemblyName_get_CultureInfo, (AssemblyName * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9A0, void, AssemblyName_set_CultureInfo, (AssemblyName * __this, CultureInfo * value, MethodInfo * method));
DO_APP_FUNC(0x003FC7F0, AssemblyNameFlags__Enum, AssemblyName_get_Flags, (AssemblyName * __this, MethodInfo * method));
DO_APP_FUNC(0x00617D40, void, AssemblyName_set_Flags, (AssemblyName * __this, AssemblyNameFlags__Enum value, MethodInfo * method));
DO_APP_FUNC(0x02284220, String *, AssemblyName_get_FullName, (AssemblyName * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, Version *, AssemblyName_get_Version, (AssemblyName * __this, MethodInfo * method));
DO_APP_FUNC(0x02284720, void, AssemblyName_set_Version, (AssemblyName * __this, Version * value, MethodInfo * method));
DO_APP_FUNC(0x02284810, String *, AssemblyName_ToString, (AssemblyName * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, Byte__Array *, AssemblyName_GetPublicKey, (AssemblyName * __this, MethodInfo * method));
DO_APP_FUNC(0x02284860, Byte__Array *, AssemblyName_GetPublicKeyToken, (AssemblyName * __this, MethodInfo * method));
DO_APP_FUNC(0x02284970, bool, AssemblyName_get_IsPublicKeyValid, (AssemblyName * __this, MethodInfo * method));
DO_APP_FUNC(0x02284A40, Byte__Array *, AssemblyName_InternalGetPublicKeyToken, (AssemblyName * __this, MethodInfo * method));
DO_APP_FUNC(0x0173D7D0, void, AssemblyName_get_public_token, (uint8_t * token, uint8_t * pubkey, int32_t len, MethodInfo * method));
DO_APP_FUNC(0x02284B50, Byte__Array *, AssemblyName_ComputePublicKeyToken, (AssemblyName * __this, MethodInfo * method));
DO_APP_FUNC(0x02284C40, void, AssemblyName_SetPublicKey, (AssemblyName * __this, Byte__Array * publicKey, MethodInfo * method));
DO_APP_FUNC(0x02284C60, void, AssemblyName_GetObjectData, (AssemblyName * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02284EB0, Object *, AssemblyName_Clone, (AssemblyName * __this, MethodInfo * method));
DO_APP_FUNC(0x02285060, void, AssemblyName_OnDeserialization, (AssemblyName * __this, Object * sender, MethodInfo * method));
DO_APP_FUNC(0x02285070, MonoAssemblyName *, AssemblyName_GetNativeName, (void * assembly_ptr, MethodInfo * method));
DO_APP_FUNC(0x02285080, void, AssemblyName_FillName, (AssemblyName * __this, MonoAssemblyName * native, String * codeBase, bool addVersion, bool addPublickey, bool defaultToken, bool assemblyRef, MethodInfo * method));
DO_APP_FUNC(0x02285530, AssemblyName *, AssemblyName_Create, (Assembly * assembly, bool fillCodebase, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ConstructorInfo__ctor, (ConstructorInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00417920, MemberTypes__Enum, ConstructorInfo_get_MemberType, (ConstructorInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0267D4D0, Object *, ConstructorInfo_Invoke, (ConstructorInfo * __this, Object__Array * parameters, MethodInfo * method));
DO_APP_FUNC(0x01EEA6F0, bool, ConstructorInfo_Equals, (ConstructorInfo * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0194D440, int32_t, ConstructorInfo_GetHashCode, (ConstructorInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02283820, bool, ConstructorInfo_op_Equality, (ConstructorInfo * left, ConstructorInfo * right, MethodInfo * method));
DO_APP_FUNC(0x02283870, bool, ConstructorInfo_op_Inequality, (ConstructorInfo * left, ConstructorInfo * right, MethodInfo * method));
DO_APP_FUNC(0x0267D5C0, void, ConstructorInfo__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CustomAttributeData__ctor, (CustomAttributeData * __this, MethodInfo * method));
DO_APP_FUNC(0x0267D660, void, CustomAttributeData__ctor_1, (CustomAttributeData * __this, ConstructorInfo * ctorInfo, Assembly * assembly, void * data, uint32_t data_length, MethodInfo * method));
DO_APP_FUNC(0x0267D7F0, void, CustomAttributeData_ResolveArgumentsInternal, (ConstructorInfo * ctor, Assembly * assembly, void * data, uint32_t data_length, Object__Array * * ctorArgs, Object__Array * * namedArgs, MethodInfo * method));
DO_APP_FUNC(0x0267D810, void, CustomAttributeData_ResolveArguments, (CustomAttributeData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, ConstructorInfo *, CustomAttributeData_get_Constructor, (CustomAttributeData * __this, MethodInfo * method));
DO_APP_FUNC(0x0267D940, IList_1_System_Reflection_CustomAttributeTypedArgument_ *, CustomAttributeData_get_ConstructorArguments, (CustomAttributeData * __this, MethodInfo * method));
DO_APP_FUNC(0x0267D960, IList_1_System_Reflection_CustomAttributeNamedArgument_ *, CustomAttributeData_get_NamedArguments, (CustomAttributeData * __this, MethodInfo * method));
DO_APP_FUNC(0x0267D980, IList_1_System_Reflection_CustomAttributeData_ *, CustomAttributeData_GetCustomAttributes, (Assembly * target, MethodInfo * method));
DO_APP_FUNC(0x0267DA20, IList_1_System_Reflection_CustomAttributeData_ *, CustomAttributeData_GetCustomAttributes_1, (MemberInfo_1 * target, MethodInfo * method));
DO_APP_FUNC(0x01EEAC20, IList_1_System_Reflection_CustomAttributeData_ *, CustomAttributeData_GetCustomAttributesInternal, (RuntimeType * target, MethodInfo * method));
DO_APP_FUNC(0x0267DAC0, IList_1_System_Reflection_CustomAttributeData_ *, CustomAttributeData_GetCustomAttributes_2, (Module * target, MethodInfo * method));
DO_APP_FUNC(0x0267DB60, IList_1_System_Reflection_CustomAttributeData_ *, CustomAttributeData_GetCustomAttributes_3, (ParameterInfo_1 * target, MethodInfo * method));
DO_APP_FUNC(0x01717090, Type *, CustomAttributeData_get_AttributeType, (CustomAttributeData * __this, MethodInfo * method));
DO_APP_FUNC(0x0267DC00, String *, CustomAttributeData_ToString, (CustomAttributeData * __this, MethodInfo * method));
DO_APP_FUNC(0x0267E2D0, bool, CustomAttributeData_Equals, (CustomAttributeData * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0267E6C0, int32_t, CustomAttributeData_GetHashCode, (CustomAttributeData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CustomAttributeData_LazyCAttrData__ctor, (CustomAttributeData_LazyCAttrData * __this, MethodInfo * method));
DO_APP_FUNC(0x0267EB30, void, CustomAttributeFormatException__ctor, (CustomAttributeFormatException * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1CA20, void, CustomAttributeFormatException__ctor_1, (CustomAttributeFormatException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01EA7840, void, CustomAttributeFormatException__ctor_2, (CustomAttributeFormatException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x001FC850, void, CustomAttributeNamedArgument__ctor, (CustomAttributeNamedArgument__Boxed * __this, MemberInfo_1 * memberInfo, Object * value, MethodInfo * method));
DO_APP_FUNC(0x00107C20, MemberInfo_1 *, CustomAttributeNamedArgument_get_MemberInfo, (CustomAttributeNamedArgument__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0010A980, CustomAttributeTypedArgument, CustomAttributeNamedArgument_get_TypedValue, (CustomAttributeNamedArgument__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001FC910, String *, CustomAttributeNamedArgument_ToString, (CustomAttributeNamedArgument__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001FC920, bool, CustomAttributeNamedArgument_Equals, (CustomAttributeNamedArgument__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x001FC930, int32_t, CustomAttributeNamedArgument_GetHashCode, (CustomAttributeNamedArgument__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001FC9A0, void, CustomAttributeTypedArgument__ctor, (CustomAttributeTypedArgument__Boxed * __this, Type * argumentType, Object * value, MethodInfo * method));
DO_APP_FUNC(0x00107C10, Object *, CustomAttributeTypedArgument_get_Value, (CustomAttributeTypedArgument__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001FC9B0, String *, CustomAttributeTypedArgument_ToString, (CustomAttributeTypedArgument__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001FC9C0, bool, CustomAttributeTypedArgument_Equals, (CustomAttributeTypedArgument__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x001FC9D0, int32_t, CustomAttributeTypedArgument_GetHashCode, (CustomAttributeTypedArgument__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x02689DF0, Type *, EventInfo_1_get_EventHandlerType, (EventInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x0043D9E0, MemberTypes__Enum, EventInfo_1_get_MemberType, (EventInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, EventInfo_1__ctor, (EventInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x00F4E290, MethodInfo_1 *, EventInfo_1_GetAddMethod, (EventInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02689E80, MethodInfo_1 *, EventInfo_1_GetRemoveMethod, (EventInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEA6F0, bool, EventInfo_1_Equals, (EventInfo_1 * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0194D440, int32_t, EventInfo_1_GetHashCode, (EventInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02283820, bool, EventInfo_1_op_Equality, (EventInfo_1 * left, EventInfo_1 * right, MethodInfo * method));
DO_APP_FUNC(0x02283870, bool, EventInfo_1_op_Inequality, (EventInfo_1 * left, EventInfo_1 * right, MethodInfo * method));
DO_APP_FUNC(0x02689EA0, EventInfo_1 *, EventInfo_1_internal_from_handle_type, (void * event_handle, void * type_handle, MethodInfo * method));
DO_APP_FUNC(0x02689F00, EventInfo_1 *, EventInfo_1_GetEventFromHandle, (RuntimeEventHandle handle, RuntimeTypeHandle reflectedType, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, EventInfo_AddEventAdapter__ctor, (EventInfo_AddEventAdapter * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, EventInfo_AddEventAdapter_Invoke, (EventInfo_AddEventAdapter * __this, Object * _this, Delegate * dele, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, EventInfo_AddEventAdapter_BeginInvoke, (EventInfo_AddEventAdapter * __this, Object * _this, Delegate * dele, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, EventInfo_AddEventAdapter_EndInvoke, (EventInfo_AddEventAdapter * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x0268A020, String *, ExceptionHandlingClause_ToString, (ExceptionHandlingClause * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, FieldInfo_1__ctor, (FieldInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x00910BD0, MemberTypes__Enum, FieldInfo_1_get_MemberType, (FieldInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x0268A3D0, bool, FieldInfo_1_get_IsLiteral, (FieldInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x0268A3F0, bool, FieldInfo_1_get_IsStatic, (FieldInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x0268A410, bool, FieldInfo_1_get_IsInitOnly, (FieldInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x0268A430, bool, FieldInfo_1_get_IsPublic, (FieldInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x0268A460, bool, FieldInfo_1_get_IsPrivate, (FieldInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x0268A480, bool, FieldInfo_1_get_IsNotSerialized, (FieldInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x0268A4A0, void, FieldInfo_1_SetValue, (FieldInfo_1 * __this, Object * obj, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0268A4D0, FieldInfo_1 *, FieldInfo_1_internal_from_handle_type, (void * field_handle, void * type_handle, MethodInfo * method));
DO_APP_FUNC(0x0268A530, FieldInfo_1 *, FieldInfo_1_GetFieldFromHandle, (RuntimeFieldHandle handle, MethodInfo * method));
DO_APP_FUNC(0x0268A5F0, FieldInfo_1 *, FieldInfo_1_GetFieldFromHandle_1, (RuntimeFieldHandle handle, RuntimeTypeHandle declaringType, MethodInfo * method));
DO_APP_FUNC(0x0268A720, int32_t, FieldInfo_1_GetFieldOffset, (FieldInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x0268A780, void, FieldInfo_1_SetValueDirect, (FieldInfo_1 * __this, TypedReference obj, Object * value, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, MarshalAsAttribute *, FieldInfo_1_get_marshal_info, (FieldInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x0268A7F0, Object__Array *, FieldInfo_1_GetPseudoCustomAttributes, (FieldInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x0268ABA0, Object *, FieldInfo_1_GetRawConstantValue, (FieldInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEA6F0, bool, FieldInfo_1_Equals, (FieldInfo_1 * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0194D440, int32_t, FieldInfo_1_GetHashCode, (FieldInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02283820, bool, FieldInfo_1_op_Equality, (FieldInfo_1 * left, FieldInfo_1 * right, MethodInfo * method));
DO_APP_FUNC(0x02283870, bool, FieldInfo_1_op_Inequality, (FieldInfo_1 * left, FieldInfo_1 * right, MethodInfo * method));
DO_APP_FUNC(0x0268AE40, String *, LocalVariableInfo_ToString, (LocalVariableInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MethodBody__ctor, (MethodBody * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, Byte__Array *, MethodBody_GetILAsByteArray, (MethodBody * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Module__ctor, (Module * __this, MethodInfo * method));
DO_APP_FUNC(0x0268DF80, void, Module_GetObjectData, (Module * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, Module_ToString, (Module * __this, MethodInfo * method));
DO_APP_FUNC(0x0268DFD0, Guid, Module_GetModuleVersionId, (Module * __this, MethodInfo * method));
DO_APP_FUNC(0x0268E010, bool, Module_filter_by_type_name, (Type * m, Object * filterCriteria, MethodInfo * method));
DO_APP_FUNC(0x0268E1C0, bool, Module_filter_by_type_name_ignore_case, (Type * m, Object * filterCriteria, MethodInfo * method));
DO_APP_FUNC(0x0268E4E0, String *, Module_GetGuidInternal, (Module * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEA6F0, bool, Module_Equals, (Module * __this, Object * o, MethodInfo * method));
DO_APP_FUNC(0x0194D440, int32_t, Module_GetHashCode, (Module * __this, MethodInfo * method));
DO_APP_FUNC(0x02283820, bool, Module_op_Equality, (Module * left, Module * right, MethodInfo * method));
DO_APP_FUNC(0x02283870, bool, Module_op_Inequality, (Module * left, Module * right, MethodInfo * method));
DO_APP_FUNC(0x0268E500, Assembly *, Module_get_Assembly, (Module * __this, MethodInfo * method));
DO_APP_FUNC(0x0268E5A0, String *, Module_get_ScopeName, (Module * __this, MethodInfo * method));
DO_APP_FUNC(0x0268E640, Guid, Module_get_ModuleVersionId, (Module * __this, MethodInfo * method));
DO_APP_FUNC(0x0268E6E0, String *, Module_get_FullyQualifiedName, (Module * __this, MethodInfo * method));
DO_APP_FUNC(0x0268E780, Exception *, Module_CreateNIE, (MethodInfo * method));
DO_APP_FUNC(0x0268E8D0, bool, Module_IsResource, (Module * __this, MethodInfo * method));
DO_APP_FUNC(0x0268E970, Object__Array *, Module_GetCustomAttributes, (Module * __this, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x0268EA10, Object__Array *, Module_GetCustomAttributes_1, (Module * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x0268EAB0, bool, Module_IsDefined, (Module * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x0268EB50, void, Module__cctor, (MethodInfo * method));
DO_APP_FUNC(0x026968D0, void, RuntimeAssembly_GetObjectData, (RuntimeAssembly * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x026969C0, RuntimeAssembly *, RuntimeAssembly_LoadWithPartialNameInternal, (String * partialName, Evidence * securityEvidence, StackCrawlMark__Enum * stackMark, MethodInfo * method));
DO_APP_FUNC(0x02696AB0, RuntimeAssembly *, RuntimeAssembly_LoadWithPartialNameInternal_1, (AssemblyName * an, Evidence * securityEvidence, StackCrawlMark__Enum * stackMark, MethodInfo * method));
DO_APP_FUNC(0x02696B00, AssemblyName *, RuntimeAssembly_GetName, (RuntimeAssembly * __this, bool copiedName, MethodInfo * method));
DO_APP_FUNC(0x02280FB0, void, RuntimeAssembly__ctor, (RuntimeAssembly * __this, MethodInfo * method));
DO_APP_FUNC(0x0268ED90, Type *, MonoAssembly_GetType, (MonoAssembly * __this, String * name, bool throwOnError, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x0268EEB0, Module *, MonoAssembly_GetModule, (MonoAssembly * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x0268F060, Module__Array *, MonoAssembly_GetModules, (MonoAssembly * __this, bool getResourceModules, MethodInfo * method));
DO_APP_FUNC(0x02280FB0, void, MonoAssembly__ctor, (MonoAssembly * __this, MethodInfo * method));
DO_APP_FUNC(0x02690470, void, MonoEventInfo_get_event_info, (MonoEvent * ev, MonoEventInfo * info, MethodInfo * method));
DO_APP_FUNC(0x02690580, MonoEventInfo, MonoEventInfo_GetEventInfo, (MonoEvent * ev, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, BindingFlags__Enum, RuntimeEventInfo_get_BindingFlags, (RuntimeEventInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x026970A0, Module *, RuntimeEventInfo_get_Module, (RuntimeEventInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02697190, RuntimeType *, RuntimeEventInfo_GetDeclaringTypeInternal, (RuntimeEventInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02697270, RuntimeType *, RuntimeEventInfo_get_ReflectedTypeInternal, (RuntimeEventInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x026970A0, RuntimeModule *, RuntimeEventInfo_GetRuntimeModule, (RuntimeEventInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02697350, void, RuntimeEventInfo_GetObjectData, (RuntimeEventInfo * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RuntimeEventInfo__ctor, (RuntimeEventInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0268FF20, MethodInfo_1 *, MonoEvent_GetAddMethod, (MonoEvent * __this, bool nonPublic, MethodInfo * method));
DO_APP_FUNC(0x0268FFC0, MethodInfo_1 *, MonoEvent_GetRaiseMethod, (MonoEvent * __this, bool nonPublic, MethodInfo * method));
DO_APP_FUNC(0x02690060, MethodInfo_1 *, MonoEvent_GetRemoveMethod, (MonoEvent * __this, bool nonPublic, MethodInfo * method));
DO_APP_FUNC(0x026900F0, Type *, MonoEvent_get_DeclaringType, (MonoEvent * __this, MethodInfo * method));
DO_APP_FUNC(0x02690120, Type *, MonoEvent_get_ReflectedType, (MonoEvent * __this, MethodInfo * method));
DO_APP_FUNC(0x02690150, String *, MonoEvent_get_Name, (MonoEvent * __this, MethodInfo * method));
DO_APP_FUNC(0x02690180, String *, MonoEvent_ToString, (MonoEvent * __this, MethodInfo * method));
DO_APP_FUNC(0x02690240, bool, MonoEvent_IsDefined, (MonoEvent * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02690300, Object__Array *, MonoEvent_GetCustomAttributes, (MonoEvent * __this, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x026903B0, Object__Array *, MonoEvent_GetCustomAttributes_1, (MonoEvent * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x0268FE80, IList_1_System_Reflection_CustomAttributeData_ *, MonoEvent_GetCustomAttributesData, (MonoEvent * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MonoEvent__ctor, (MonoEvent * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, BindingFlags__Enum, RuntimeFieldInfo_get_BindingFlags, (RuntimeFieldInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02697520, Module *, RuntimeFieldInfo_get_Module, (RuntimeFieldInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02697550, RuntimeType *, RuntimeFieldInfo_GetDeclaringTypeInternal, (RuntimeFieldInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02697630, RuntimeType *, RuntimeFieldInfo_get_ReflectedTypeInternal, (RuntimeFieldInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02697520, RuntimeModule *, RuntimeFieldInfo_GetRuntimeModule, (RuntimeFieldInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02697710, void, RuntimeFieldInfo_GetObjectData, (RuntimeFieldInfo * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RuntimeFieldInfo__ctor, (RuntimeFieldInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02690A30, Object *, RtFieldInfo_UnsafeGetValue, (RtFieldInfo * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x026963E0, void, RtFieldInfo_CheckConsistency, (RtFieldInfo * __this, Object * target, MethodInfo * method));
DO_APP_FUNC(0x026965D0, void, RtFieldInfo_UnsafeSetValue, (RtFieldInfo * __this, Object * obj, Object * value, BindingFlags__Enum invokeAttr, Binder * binder, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x02696620, void, RtFieldInfo_SetValueDirect, (RtFieldInfo * __this, TypedReference obj, Object * value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RtFieldInfo__ctor, (RtFieldInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00654950, FieldAttributes__Enum, MonoField_get_Attributes, (MonoField * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, RuntimeFieldHandle, MonoField_get_FieldHandle, (MonoField * __this, MethodInfo * method));
DO_APP_FUNC(0x0173D7D0, Type *, MonoField_ResolveType, (MonoField * __this, MethodInfo * method));
DO_APP_FUNC(0x026906D0, Type *, MonoField_get_FieldType, (MonoField * __this, MethodInfo * method));
DO_APP_FUNC(0x02690790, Type *, MonoField_GetParentType, (MonoField * __this, bool declaring, MethodInfo * method));
DO_APP_FUNC(0x026907C0, Type *, MonoField_get_ReflectedType, (MonoField * __this, MethodInfo * method));
DO_APP_FUNC(0x026907D0, Type *, MonoField_get_DeclaringType, (MonoField * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, MonoField_get_Name, (MonoField * __this, MethodInfo * method));
DO_APP_FUNC(0x026907F0, bool, MonoField_IsDefined, (MonoField * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x026908B0, Object__Array *, MonoField_GetCustomAttributes, (MonoField * __this, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02690960, Object__Array *, MonoField_GetCustomAttributes_1, (MonoField * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02690A20, int32_t, MonoField_GetFieldOffset, (MonoField * __this, MethodInfo * method));
DO_APP_FUNC(0x02690A30, Object *, MonoField_GetValueInternal, (MonoField * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x02690A80, Object *, MonoField_GetValue, (MonoField * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x02690C80, String *, MonoField_ToString, (MonoField * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE2430, void, MonoField_SetValueInternal, (FieldInfo_1 * fi, Object * obj, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02690D70, void, MonoField_SetValue, (MonoField * __this, Object * obj, Object * val, BindingFlags__Enum invokeAttr, Binder * binder, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x02691040, Object *, MonoField_GetRawConstantValue, (MonoField * __this, MethodInfo * method));
DO_APP_FUNC(0x0268FE80, IList_1_System_Reflection_CustomAttributeData_ *, MonoField_GetCustomAttributesData, (MonoField * __this, MethodInfo * method));
DO_APP_FUNC(0x02691050, void, MonoField_CheckGeneric, (MonoField * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MonoField__ctor, (MonoField * __this, MethodInfo * method));
DO_APP_FUNC(0x02692400, void, MonoMethodInfo_get_method_info, (void * handle, MonoMethodInfo * info, MethodInfo * method));
DO_APP_FUNC(0x02692410, int32_t, MonoMethodInfo_get_method_attributes, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x02692420, MonoMethodInfo, MonoMethodInfo_GetMethodInfo, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x02692470, Type *, MonoMethodInfo_GetDeclaringType, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x02692490, Type *, MonoMethodInfo_GetReturnType, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x02692410, MethodAttributes__Enum, MonoMethodInfo_GetAttributes, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x026924B0, CallingConventions__Enum, MonoMethodInfo_GetCallingConvention, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x026924D0, MethodImplAttributes__Enum, MonoMethodInfo_GetMethodImplementationFlags, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x02692500, ParameterInfo_1__Array *, MonoMethodInfo_get_parameter_info, (void * handle, MemberInfo_1 * member, MethodInfo * method));
DO_APP_FUNC(0x02692500, ParameterInfo_1__Array *, MonoMethodInfo_GetParametersInfo, (void * handle, MemberInfo_1 * member, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, BindingFlags__Enum, RuntimeMethodInfo_get_BindingFlags, (RuntimeMethodInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02697900, Module *, RuntimeMethodInfo_get_Module, (RuntimeMethodInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02697A30, RuntimeType *, RuntimeMethodInfo_get_ReflectedTypeInternal, (RuntimeMethodInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02697B10, String *, RuntimeMethodInfo_FormatNameAndSig, (RuntimeMethodInfo * __this, bool serialization, MethodInfo * method));
DO_APP_FUNC(0x02697D60, Delegate *, RuntimeMethodInfo_CreateDelegate, (RuntimeMethodInfo * __this, Type * delegateType, MethodInfo * method));
DO_APP_FUNC(0x01AD43A0, Delegate *, RuntimeMethodInfo_CreateDelegate_1, (RuntimeMethodInfo * __this, Type * delegateType, Object * target, MethodInfo * method));
DO_APP_FUNC(0x02697D90, String *, RuntimeMethodInfo_ToString, (RuntimeMethodInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02697900, RuntimeModule *, RuntimeMethodInfo_GetRuntimeModule, (RuntimeMethodInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02697E70, void, RuntimeMethodInfo_GetObjectData, (RuntimeMethodInfo * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x026980C0, String *, RuntimeMethodInfo_SerializationToString, (RuntimeMethodInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RuntimeMethodInfo__ctor, (RuntimeMethodInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MonoMethod__ctor, (MonoMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x02691130, String *, MonoMethod_get_name, (MethodBase * method_1, MethodInfo * method));
DO_APP_FUNC(0x02691170, MonoMethod *, MonoMethod_get_base_method, (MonoMethod * method_1, bool definition, MethodInfo * method));
DO_APP_FUNC(0x02691180, MethodInfo_1 *, MonoMethod_GetBaseDefinition, (MonoMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x02691190, MethodInfo_1 *, MonoMethod_GetBaseMethod, (MonoMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x026911A0, Type *, MonoMethod_get_ReturnType, (MonoMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0268F2D0, MethodImplAttributes__Enum, MonoMethod_GetMethodImplementationFlags, (MonoMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x026911D0, ParameterInfo_1__Array *, MonoMethod_GetParameters, (MonoMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0268F300, ParameterInfo_1__Array *, MonoMethod_GetParametersInternal, (MonoMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x026912D0, int32_t, MonoMethod_GetParametersCount, (MonoMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0268F380, Object *, MonoMethod_InternalInvoke, (MonoMethod * __this, Object * obj, Object__Array * parameters, Exception * * exc, MethodInfo * method));
DO_APP_FUNC(0x02691310, Object *, MonoMethod_Invoke, (MonoMethod * __this, Object * obj, BindingFlags__Enum invokeAttr, Binder * binder, Object__Array * parameters, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x026914E0, void, MonoMethod_ConvertValues, (Binder * binder, Object__Array * args, ParameterInfo_1__Array * pinfo, CultureInfo * culture, BindingFlags__Enum invokeAttr, MethodInfo * method));
DO_APP_FUNC(0x002FA280, RuntimeMethodHandle, MonoMethod_get_MethodHandle, (MonoMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0268F890, MethodAttributes__Enum, MonoMethod_get_Attributes, (MonoMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0268F8A0, CallingConventions__Enum, MonoMethod_get_CallingConvention, (MonoMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, Type *, MonoMethod_get_ReflectedType, (MonoMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0268F910, Type *, MonoMethod_get_DeclaringType, (MonoMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0268F940, String *, MonoMethod_get_Name, (MonoMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x02691820, bool, MonoMethod_IsDefined, (MonoMethod * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x026918E0, Object__Array *, MonoMethod_GetCustomAttributes, (MonoMethod * __this, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02691990, Object__Array *, MonoMethod_GetCustomAttributes_1, (MonoMethod * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02691A50, void, MonoMethod_GetPInvoke, (MonoMethod * __this, PInvokeAttributes__Enum * flags, String * * entryPoint, String * * dllName, MethodInfo * method));
DO_APP_FUNC(0x02691A70, Object__Array *, MonoMethod_GetPseudoCustomAttributes, (MonoMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x02691CD0, MethodInfo_1 *, MonoMethod_MakeGenericMethod, (MonoMethod * __this, Type__Array * methodInstantiation, MethodInfo * method));
DO_APP_FUNC(0x02692000, MethodInfo_1 *, MonoMethod_MakeGenericMethod_impl, (MonoMethod * __this, Type__Array * types, MethodInfo * method));
DO_APP_FUNC(0x02692010, Type__Array *, MonoMethod_GetGenericArguments, (MonoMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x02692150, MethodInfo_1 *, MonoMethod_GetGenericMethodDefinition_impl, (MonoMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x02692180, MethodInfo_1 *, MonoMethod_GetGenericMethodDefinition, (MonoMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x026922C0, bool, MonoMethod_get_IsGenericMethodDefinition, (MonoMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x026922D0, bool, MonoMethod_get_IsGenericMethod, (MonoMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x02692300, bool, MonoMethod_get_ContainsGenericParameters, (MonoMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0268FBB0, MethodBody *, MonoMethod_GetMethodBody, (MonoMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0268FE80, IList_1_System_Reflection_CustomAttributeData_ *, MonoMethod_GetCustomAttributesData, (MonoMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x00417920, int32_t, MonoMethod_get_core_clr_security_level, (MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, MonoMethod_get_IsSecurityCritical, (MonoMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x02696B10, Module *, RuntimeConstructorInfo_get_Module, (RuntimeConstructorInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02696B10, RuntimeModule *, RuntimeConstructorInfo_GetRuntimeModule, (RuntimeConstructorInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, BindingFlags__Enum, RuntimeConstructorInfo_get_BindingFlags, (RuntimeConstructorInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02696C00, RuntimeType *, RuntimeConstructorInfo_get_ReflectedTypeInternal, (RuntimeConstructorInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02696CE0, void, RuntimeConstructorInfo_GetObjectData, (RuntimeConstructorInfo * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02696EE0, String *, RuntimeConstructorInfo_SerializationToString, (RuntimeConstructorInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02696F00, void, RuntimeConstructorInfo_SerializationInvoke, (RuntimeConstructorInfo * __this, Object * target, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0268FE90, void, RuntimeConstructorInfo__ctor, (RuntimeConstructorInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0268F2D0, MethodImplAttributes__Enum, MonoCMethod_GetMethodImplementationFlags, (MonoCMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0268F300, ParameterInfo_1__Array *, MonoCMethod_GetParameters, (MonoCMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0268F300, ParameterInfo_1__Array *, MonoCMethod_GetParametersInternal, (MonoCMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0268F340, int32_t, MonoCMethod_GetParametersCount, (MonoCMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0268F380, Object *, MonoCMethod_InternalInvoke, (MonoCMethod * __this, Object * obj, Object__Array * parameters, Exception * * exc, MethodInfo * method));
DO_APP_FUNC(0x0268F390, Object *, MonoCMethod_Invoke, (MonoCMethod * __this, Object * obj, BindingFlags__Enum invokeAttr, Binder * binder, Object__Array * parameters, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x0268F500, Object *, MonoCMethod_DoInvoke, (MonoCMethod * __this, Object * obj, BindingFlags__Enum invokeAttr, Binder * binder, Object__Array * parameters, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x0268F750, Object *, MonoCMethod_InternalInvoke_1, (MonoCMethod * __this, Object * obj, Object__Array * parameters, MethodInfo * method));
DO_APP_FUNC(0x0268F860, Object *, MonoCMethod_Invoke_1, (MonoCMethod * __this, BindingFlags__Enum invokeAttr, Binder * binder, Object__Array * parameters, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x002FA280, RuntimeMethodHandle, MonoCMethod_get_MethodHandle, (MonoCMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0268F890, MethodAttributes__Enum, MonoCMethod_get_Attributes, (MonoCMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0268F8A0, CallingConventions__Enum, MonoCMethod_get_CallingConvention, (MonoCMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0268F8D0, bool, MonoCMethod_get_ContainsGenericParameters, (MonoCMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, Type *, MonoCMethod_get_ReflectedType, (MonoCMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0268F910, Type *, MonoCMethod_get_DeclaringType, (MonoCMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0268F940, String *, MonoCMethod_get_Name, (MonoCMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0268F980, bool, MonoCMethod_IsDefined, (MonoCMethod * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x0268FA40, Object__Array *, MonoCMethod_GetCustomAttributes, (MonoCMethod * __this, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x0268FAF0, Object__Array *, MonoCMethod_GetCustomAttributes_1, (MonoCMethod * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x0268FBB0, MethodBody *, MonoCMethod_GetMethodBody, (MonoCMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0268FBD0, String *, MonoCMethod_ToString, (MonoCMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0268FE80, IList_1_System_Reflection_CustomAttributeData_ *, MonoCMethod_GetCustomAttributesData, (MonoCMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x00417920, int32_t, MonoCMethod_get_core_clr_security_level, (MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, MonoCMethod_get_IsSecurityCritical, (MonoCMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0268FE90, void, MonoCMethod__ctor, (MonoCMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x02692A20, void, RuntimeModule__ctor, (RuntimeModule * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Assembly *, MonoModule_get_Assembly, (MonoModule * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, MonoModule_get_ScopeName, (MonoModule * __this, MethodInfo * method));
DO_APP_FUNC(0x02692540, Guid, MonoModule_get_ModuleVersionId, (MonoModule * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, MonoModule_get_FullyQualifiedName, (MonoModule * __this, MethodInfo * method));
DO_APP_FUNC(0x004358D0, bool, MonoModule_IsResource, (MonoModule * __this, MethodInfo * method));
DO_APP_FUNC(0x02692570, Object__Array *, MonoModule_GetCustomAttributes, (MonoModule * __this, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02692620, Object__Array *, MonoModule_GetCustomAttributes_1, (MonoModule * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x026926E0, bool, MonoModule_IsDefined, (MonoModule * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x026927A0, void, MonoModule_GetObjectData, (MonoModule * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02692950, RuntimeAssembly *, MonoModule_GetRuntimeAssembly, (MonoModule * __this, MethodInfo * method));
DO_APP_FUNC(0x02692A20, void, MonoModule__ctor, (MonoModule * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RuntimeParameterInfo__ctor, (RuntimeParameterInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02692AB0, void, MonoParameterInfo__ctor, (MonoParameterInfo * __this, ParameterInfo_1 * pinfo, MemberInfo_1 * member, MethodInfo * method));
DO_APP_FUNC(0x02692B50, Object *, MonoParameterInfo_get_DefaultValue, (MonoParameterInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02692E00, Object__Array *, MonoParameterInfo_GetCustomAttributes, (MonoParameterInfo * __this, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02692EB0, Object__Array *, MonoParameterInfo_GetCustomAttributes_1, (MonoParameterInfo * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02692F70, bool, MonoParameterInfo_IsDefined, (MonoParameterInfo * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02694530, void, MonoPropertyInfo_get_property_info, (MonoProperty * prop, MonoPropertyInfo * info, PInfo__Enum req_info, MethodInfo * method));
DO_APP_FUNC(0x02694620, Type__Array *, MonoPropertyInfo_GetTypeModifiers, (MonoProperty * prop, bool optional, MethodInfo * method));
DO_APP_FUNC(0x0173D7D0, Object *, MonoPropertyInfo_get_default_value, (MonoProperty * prop, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, BindingFlags__Enum, RuntimePropertyInfo_get_BindingFlags, (RuntimePropertyInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x026981A0, Module *, RuntimePropertyInfo_get_Module, (RuntimePropertyInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02698290, RuntimeType *, RuntimePropertyInfo_GetDeclaringTypeInternal, (RuntimePropertyInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02698370, RuntimeType *, RuntimePropertyInfo_get_ReflectedTypeInternal, (RuntimePropertyInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x026981A0, RuntimeModule *, RuntimePropertyInfo_GetRuntimeModule, (RuntimePropertyInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02698450, String *, RuntimePropertyInfo_ToString, (RuntimePropertyInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02698460, String *, RuntimePropertyInfo_FormatNameAndSig, (RuntimePropertyInfo * __this, bool serialization, MethodInfo * method));
DO_APP_FUNC(0x026986D0, void, RuntimePropertyInfo_GetObjectData, (RuntimePropertyInfo * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x026988D0, String *, RuntimePropertyInfo_SerializationToString, (RuntimePropertyInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RuntimePropertyInfo__ctor, (RuntimePropertyInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02693030, void, MonoProperty_CachePropertyInfo, (MonoProperty * __this, PInfo__Enum flags, MethodInfo * method));
DO_APP_FUNC(0x02693120, PropertyAttributes__Enum, MonoProperty_get_Attributes, (MonoProperty * __this, MethodInfo * method));
DO_APP_FUNC(0x02693140, bool, MonoProperty_get_CanRead, (MonoProperty * __this, MethodInfo * method));
DO_APP_FUNC(0x02693190, bool, MonoProperty_get_CanWrite, (MonoProperty * __this, MethodInfo * method));
DO_APP_FUNC(0x026931E0, Type *, MonoProperty_get_PropertyType, (MonoProperty * __this, MethodInfo * method));
DO_APP_FUNC(0x026932F0, Type *, MonoProperty_get_ReflectedType, (MonoProperty * __this, MethodInfo * method));
DO_APP_FUNC(0x02693330, Type *, MonoProperty_get_DeclaringType, (MonoProperty * __this, MethodInfo * method));
DO_APP_FUNC(0x02693370, String *, MonoProperty_get_Name, (MonoProperty * __this, MethodInfo * method));
DO_APP_FUNC(0x026933C0, MethodInfo_1__Array *, MonoProperty_GetAccessors, (MonoProperty * __this, bool nonPublic, MethodInfo * method));
DO_APP_FUNC(0x02693610, MethodInfo_1 *, MonoProperty_GetGetMethod, (MonoProperty * __this, bool nonPublic, MethodInfo * method));
DO_APP_FUNC(0x026936B0, ParameterInfo_1__Array *, MonoProperty_GetIndexParameters, (MonoProperty * __this, MethodInfo * method));
DO_APP_FUNC(0x02693910, MethodInfo_1 *, MonoProperty_GetSetMethod, (MonoProperty * __this, bool nonPublic, MethodInfo * method));
DO_APP_FUNC(0x026939B0, Object *, MonoProperty_GetConstantValue, (MonoProperty * __this, MethodInfo * method));
DO_APP_FUNC(0x026939B0, Object *, MonoProperty_GetRawConstantValue, (MonoProperty * __this, MethodInfo * method));
DO_APP_FUNC(0x026939C0, bool, MonoProperty_IsDefined, (MonoProperty * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02693A70, Object__Array *, MonoProperty_GetCustomAttributes, (MonoProperty * __this, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02693B10, Object__Array *, MonoProperty_GetCustomAttributes_1, (MonoProperty * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02693BC0, MonoProperty_GetterAdapter *, MonoProperty_CreateGetterDelegate, (MethodInfo_1 * method_1, MethodInfo * method));
DO_APP_FUNC(0x02693FA0, Object *, MonoProperty_GetValue, (MonoProperty * __this, Object * obj, Object__Array * index, MethodInfo * method));
DO_APP_FUNC(0x02693FE0, Object *, MonoProperty_GetValue_1, (MonoProperty * __this, Object * obj, BindingFlags__Enum invokeAttr, Binder * binder, Object__Array * index, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x026941F0, void, MonoProperty_SetValue, (MonoProperty * __this, Object * obj, Object * value, BindingFlags__Enum invokeAttr, Binder * binder, Object__Array * index, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x026944B0, Type__Array *, MonoProperty_GetOptionalCustomModifiers, (MonoProperty * __this, MethodInfo * method));
DO_APP_FUNC(0x026944F0, Type__Array *, MonoProperty_GetRequiredCustomModifiers, (MonoProperty * __this, MethodInfo * method));
DO_APP_FUNC(0x0268FE80, IList_1_System_Reflection_CustomAttributeData_ *, MonoProperty_GetCustomAttributesData, (MonoProperty * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MonoProperty__ctor, (MonoProperty * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, MonoProperty_GetterAdapter__ctor, (MonoProperty_GetterAdapter * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01852930, Object *, MonoProperty_GetterAdapter_Invoke, (MonoProperty_GetterAdapter * __this, Object * _this, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, MonoProperty_GetterAdapter_BeginInvoke, (MonoProperty_GetterAdapter * __this, Object * _this, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, Object *, MonoProperty_GetterAdapter_EndInvoke, (MonoProperty_GetterAdapter * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ParameterInfo_1__ctor, (ParameterInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02694630, String *, ParameterInfo_1_ToString, (ParameterInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x026948D0, void, ParameterInfo_1_FormatParameters, (StringBuilder * sb, ParameterInfo_1__Array * p, CallingConventions__Enum callingConvention, bool serialization, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Type *, ParameterInfo_1_get_ParameterType, (ParameterInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x00998570, ParameterAttributes__Enum, ParameterInfo_1_get_Attributes, (ParameterInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02694B60, bool, ParameterInfo_1_get_IsIn, (ParameterInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02694B80, bool, ParameterInfo_1_get_IsOptional, (ParameterInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02694BA0, bool, ParameterInfo_1_get_IsOut, (ParameterInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02694BC0, bool, ParameterInfo_1_get_IsRetval, (ParameterInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, MemberInfo_1 *, ParameterInfo_1_get_Member, (ParameterInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, ParameterInfo_1_get_Name, (ParameterInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x00654950, int32_t, ParameterInfo_1_get_Position, (ParameterInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02694BE0, Object__Array *, ParameterInfo_1_GetPseudoCustomAttributes, (ParameterInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Object *, ParameterInfo_1_GetDefaultValueImpl, (ParameterInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02695210, Object *, ParameterInfo_1_get_DefaultValue, (ParameterInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02695260, Object__Array *, ParameterInfo_1_GetCustomAttributes, (ParameterInfo_1 * __this, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x026952E0, Object__Array *, ParameterInfo_1_GetCustomAttributes_1, (ParameterInfo_1 * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02695360, Object *, ParameterInfo_1_GetRealObject, (ParameterInfo_1 * __this, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, ParameterInfo_1_IsDefined, (ParameterInfo_1 * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x026953B0, ParameterInfo_1 *, ParameterInfo_1_New, (ParameterInfo_1 * pinfo, MemberInfo_1 * member, MethodInfo * method));
DO_APP_FUNC(0x007E3F10, MemberTypes__Enum, PropertyInfo_1_get_MemberType, (PropertyInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, PropertyInfo_1__ctor, (PropertyInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02695A70, MethodInfo_1 *, PropertyInfo_1_GetGetMethod, (PropertyInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02695A90, MethodInfo_1 *, PropertyInfo_1_GetSetMethod, (PropertyInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02693FA0, Object *, PropertyInfo_1_GetValue, (PropertyInfo_1 * __this, Object * obj, Object__Array * index, MethodInfo * method));
DO_APP_FUNC(0x02695AB0, Object *, PropertyInfo_1_GetValue_1, (PropertyInfo_1 * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x02695AF0, void, PropertyInfo_1_SetValue, (PropertyInfo_1 * __this, Object * obj, Object * value, Object__Array * index, MethodInfo * method));
DO_APP_FUNC(0x02695B30, void, PropertyInfo_1_SetValue_1, (PropertyInfo_1 * __this, Object * obj, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02695B70, Type__Array *, PropertyInfo_1_GetOptionalCustomModifiers, (PropertyInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02695C10, Type__Array *, PropertyInfo_1_GetRequiredCustomModifiers, (PropertyInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02695CB0, NotImplementedException *, PropertyInfo_1_CreateNIE, (MethodInfo * method));
DO_APP_FUNC(0x02695DF0, Object *, PropertyInfo_1_GetConstantValue, (PropertyInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02695E30, Object *, PropertyInfo_1_GetRawConstantValue, (PropertyInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEA6F0, bool, PropertyInfo_1_Equals, (PropertyInfo_1 * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0194D440, int32_t, PropertyInfo_1_GetHashCode, (PropertyInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02283820, bool, PropertyInfo_1_op_Equality, (PropertyInfo_1 * left, PropertyInfo_1 * right, MethodInfo * method));
DO_APP_FUNC(0x02283870, bool, PropertyInfo_1_op_Inequality, (PropertyInfo_1 * left, PropertyInfo_1 * right, MethodInfo * method));
DO_APP_FUNC(0x02695E70, PropertyInfo_1 *, PropertyInfo_1_internal_from_handle_type, (void * event_handle, void * type_handle, MethodInfo * method));
DO_APP_FUNC(0x02695ED0, PropertyInfo_1 *, PropertyInfo_1_GetPropertyFromHandle, (RuntimePropertyHandle handle, RuntimeTypeHandle reflectedType, MethodInfo * method));
DO_APP_FUNC(0x026988E0, void, StrongNameKeyPair__ctor, (StrongNameKeyPair * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02698A90, void, StrongNameKeyPair_System_Runtime_Serialization_ISerializable_GetObjectData, (StrongNameKeyPair * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, StrongNameKeyPair_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization, (StrongNameKeyPair * __this, Object * sender, MethodInfo * method));
DO_APP_FUNC(0x0267F4F0, MethodAttributes__Enum, ConstructorBuilder_get_Attributes, (ConstructorBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x0267F540, Type *, ConstructorBuilder_get_DeclaringType, (ConstructorBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x0267F590, String *, ConstructorBuilder_get_Name, (ConstructorBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x0267F5E0, ParameterInfo_1__Array *, ConstructorBuilder_GetParameters, (ConstructorBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x0267F630, RuntimeMethodHandle, ConstructorBuilder_get_MethodHandle, (ConstructorBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x0267F660, Type *, ConstructorBuilder_get_ReflectedType, (ConstructorBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x0267F690, Object__Array *, ConstructorBuilder_GetCustomAttributes, (ConstructorBuilder * __this, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x0267F6C0, Object__Array *, ConstructorBuilder_GetCustomAttributes_1, (ConstructorBuilder * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x0267F6F0, MethodImplAttributes__Enum, ConstructorBuilder_GetMethodImplementationFlags, (ConstructorBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x0267F720, Object *, ConstructorBuilder_Invoke, (ConstructorBuilder * __this, Object * obj, BindingFlags__Enum invokeAttr, Binder * binder, Object__Array * parameters, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x0267F750, Object *, ConstructorBuilder_Invoke_1, (ConstructorBuilder * __this, BindingFlags__Enum invokeAttr, Binder * binder, Object__Array * parameters, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x0267F780, bool, ConstructorBuilder_IsDefined, (ConstructorBuilder * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x0267FAB0, Assembly *, EnumBuilder_get_Assembly, (EnumBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x0267FB00, String *, EnumBuilder_get_AssemblyQualifiedName, (EnumBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x0267FB50, Type *, EnumBuilder_get_BaseType, (EnumBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x0267FBA0, String *, EnumBuilder_get_FullName, (EnumBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x0267FBF0, Module *, EnumBuilder_get_Module, (EnumBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x0267FC40, String *, EnumBuilder_get_Name, (EnumBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x0267FC90, String *, EnumBuilder_get_Namespace, (EnumBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x0267FCE0, Type *, EnumBuilder_GetElementType, (EnumBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x0267FD30, Type *, EnumBuilder_get_UnderlyingSystemType, (EnumBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x0267FD60, TypeAttributes__Enum, EnumBuilder_GetAttributeFlagsImpl, (EnumBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x0267FD90, ConstructorInfo *, EnumBuilder_GetConstructorImpl, (EnumBuilder * __this, BindingFlags__Enum bindingAttr, Binder * binder, CallingConventions__Enum callConvention, Type__Array * types, ParameterModifier__Array * modifiers, MethodInfo * method));
DO_APP_FUNC(0x0267FDC0, ConstructorInfo__Array *, EnumBuilder_GetConstructors, (EnumBuilder * __this, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x0267FDF0, Object__Array *, EnumBuilder_GetCustomAttributes, (EnumBuilder * __this, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x0267FE20, Object__Array *, EnumBuilder_GetCustomAttributes_1, (EnumBuilder * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x0267FE50, EventInfo_1 *, EnumBuilder_GetEvent, (EnumBuilder * __this, String * name, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x0267FE80, EventInfo_1__Array *, EnumBuilder_GetEvents, (EnumBuilder * __this, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x0267FEB0, FieldInfo_1 *, EnumBuilder_GetField, (EnumBuilder * __this, String * name, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x0267FEE0, FieldInfo_1__Array *, EnumBuilder_GetFields, (EnumBuilder * __this, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x0267FF10, Type *, EnumBuilder_GetInterface, (EnumBuilder * __this, String * name, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x0267FF40, Type__Array *, EnumBuilder_GetInterfaces, (EnumBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x0267FF70, MemberInfo_1__Array *, EnumBuilder_GetMembers, (EnumBuilder * __this, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x0267FFA0, MethodInfo_1 *, EnumBuilder_GetMethodImpl, (EnumBuilder * __this, String * name, BindingFlags__Enum bindingAttr, Binder * binder, CallingConventions__Enum callConvention, Type__Array * types, ParameterModifier__Array * modifiers, MethodInfo * method));
DO_APP_FUNC(0x0267FFD0, MethodInfo_1__Array *, EnumBuilder_GetMethods, (EnumBuilder * __this, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x02680000, Type *, EnumBuilder_GetNestedType, (EnumBuilder * __this, String * name, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x02680030, PropertyInfo_1__Array *, EnumBuilder_GetProperties, (EnumBuilder * __this, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x02680060, PropertyInfo_1 *, EnumBuilder_GetPropertyImpl, (EnumBuilder * __this, String * name, BindingFlags__Enum bindingAttr, Binder * binder, Type * returnType, Type__Array * types, ParameterModifier__Array * modifiers, MethodInfo * method));
DO_APP_FUNC(0x02680090, bool, EnumBuilder_HasElementTypeImpl, (EnumBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x026800C0, Object *, EnumBuilder_InvokeMember, (EnumBuilder * __this, String * name, BindingFlags__Enum invokeAttr, Binder * binder, Object * target, Object__Array * args, ParameterModifier__Array * modifiers, CultureInfo * culture, String__Array * namedParameters, MethodInfo * method));
DO_APP_FUNC(0x026800F0, bool, EnumBuilder_IsArrayImpl, (EnumBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02680120, bool, EnumBuilder_IsByRefImpl, (EnumBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02680150, bool, EnumBuilder_IsCOMObjectImpl, (EnumBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02680180, bool, EnumBuilder_IsDefined, (EnumBuilder * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x026801B0, bool, EnumBuilder_IsPointerImpl, (EnumBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x026801E0, bool, EnumBuilder_IsPrimitiveImpl, (EnumBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02680210, FieldAttributes__Enum, FieldBuilder_get_Attributes, (FieldBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02680260, Type *, FieldBuilder_get_DeclaringType, (FieldBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x026802B0, Type *, FieldBuilder_get_FieldType, (FieldBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02680300, String *, FieldBuilder_get_Name, (FieldBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02680350, Object *, FieldBuilder_GetValue, (FieldBuilder * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x026803A0, RuntimeFieldHandle, FieldBuilder_get_FieldHandle, (FieldBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x026803D0, Type *, FieldBuilder_get_ReflectedType, (FieldBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02680400, Object__Array *, FieldBuilder_GetCustomAttributes, (FieldBuilder * __this, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02680430, Object__Array *, FieldBuilder_GetCustomAttributes_1, (FieldBuilder * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02680460, bool, FieldBuilder_IsDefined, (FieldBuilder * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02680490, void, FieldBuilder_SetValue, (FieldBuilder * __this, Object * obj, Object * val, BindingFlags__Enum invokeAttr, Binder * binder, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x026804C0, Assembly *, GenericTypeParameterBuilder_get_Assembly, (GenericTypeParameterBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02680510, String *, GenericTypeParameterBuilder_get_AssemblyQualifiedName, (GenericTypeParameterBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02680560, Type *, GenericTypeParameterBuilder_get_BaseType, (GenericTypeParameterBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x026805B0, String *, GenericTypeParameterBuilder_get_FullName, (GenericTypeParameterBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02680600, Module *, GenericTypeParameterBuilder_get_Module, (GenericTypeParameterBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02680650, String *, GenericTypeParameterBuilder_get_Name, (GenericTypeParameterBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x026806A0, String *, GenericTypeParameterBuilder_get_Namespace, (GenericTypeParameterBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x026806F0, Type *, GenericTypeParameterBuilder_GetElementType, (GenericTypeParameterBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02680740, Type *, GenericTypeParameterBuilder_get_UnderlyingSystemType, (GenericTypeParameterBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02680770, TypeAttributes__Enum, GenericTypeParameterBuilder_GetAttributeFlagsImpl, (GenericTypeParameterBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x026807A0, ConstructorInfo *, GenericTypeParameterBuilder_GetConstructorImpl, (GenericTypeParameterBuilder * __this, BindingFlags__Enum bindingAttr, Binder * binder, CallingConventions__Enum callConvention, Type__Array * types, ParameterModifier__Array * modifiers, MethodInfo * method));
DO_APP_FUNC(0x026807D0, ConstructorInfo__Array *, GenericTypeParameterBuilder_GetConstructors, (GenericTypeParameterBuilder * __this, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x02680800, Object__Array *, GenericTypeParameterBuilder_GetCustomAttributes, (GenericTypeParameterBuilder * __this, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02680830, Object__Array *, GenericTypeParameterBuilder_GetCustomAttributes_1, (GenericTypeParameterBuilder * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02680860, EventInfo_1 *, GenericTypeParameterBuilder_GetEvent, (GenericTypeParameterBuilder * __this, String * name, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x02680890, EventInfo_1__Array *, GenericTypeParameterBuilder_GetEvents, (GenericTypeParameterBuilder * __this, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x026808C0, FieldInfo_1 *, GenericTypeParameterBuilder_GetField, (GenericTypeParameterBuilder * __this, String * name, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x026808F0, FieldInfo_1__Array *, GenericTypeParameterBuilder_GetFields, (GenericTypeParameterBuilder * __this, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x02680920, Type *, GenericTypeParameterBuilder_GetInterface, (GenericTypeParameterBuilder * __this, String * name, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x02680950, Type__Array *, GenericTypeParameterBuilder_GetInterfaces, (GenericTypeParameterBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02680980, MemberInfo_1__Array *, GenericTypeParameterBuilder_GetMembers, (GenericTypeParameterBuilder * __this, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x026809B0, MethodInfo_1 *, GenericTypeParameterBuilder_GetMethodImpl, (GenericTypeParameterBuilder * __this, String * name, BindingFlags__Enum bindingAttr, Binder * binder, CallingConventions__Enum callConvention, Type__Array * types, ParameterModifier__Array * modifiers, MethodInfo * method));
DO_APP_FUNC(0x026809E0, MethodInfo_1__Array *, GenericTypeParameterBuilder_GetMethods, (GenericTypeParameterBuilder * __this, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x02680A10, Type *, GenericTypeParameterBuilder_GetNestedType, (GenericTypeParameterBuilder * __this, String * name, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x02680A40, PropertyInfo_1__Array *, GenericTypeParameterBuilder_GetProperties, (GenericTypeParameterBuilder * __this, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x02680A70, PropertyInfo_1 *, GenericTypeParameterBuilder_GetPropertyImpl, (GenericTypeParameterBuilder * __this, String * name, BindingFlags__Enum bindingAttr, Binder * binder, Type * returnType, Type__Array * types, ParameterModifier__Array * modifiers, MethodInfo * method));
DO_APP_FUNC(0x02680AA0, bool, GenericTypeParameterBuilder_HasElementTypeImpl, (GenericTypeParameterBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02680AD0, Object *, GenericTypeParameterBuilder_InvokeMember, (GenericTypeParameterBuilder * __this, String * name, BindingFlags__Enum invokeAttr, Binder * binder, Object * target, Object__Array * args, ParameterModifier__Array * modifiers, CultureInfo * culture, String__Array * namedParameters, MethodInfo * method));
DO_APP_FUNC(0x02680B00, bool, GenericTypeParameterBuilder_IsArrayImpl, (GenericTypeParameterBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02680B30, bool, GenericTypeParameterBuilder_IsByRefImpl, (GenericTypeParameterBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02680B60, bool, GenericTypeParameterBuilder_IsCOMObjectImpl, (GenericTypeParameterBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02680B90, bool, GenericTypeParameterBuilder_IsDefined, (GenericTypeParameterBuilder * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02680BC0, bool, GenericTypeParameterBuilder_IsPointerImpl, (GenericTypeParameterBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02680BF0, bool, GenericTypeParameterBuilder_IsPrimitiveImpl, (GenericTypeParameterBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02680C20, LocalBuilder *, ILGenerator_DeclareLocal, (ILGenerator * __this, Type * localType, MethodInfo * method));
DO_APP_FUNC(0x02680C70, Label, ILGenerator_DefineLabel, (ILGenerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02680CC0, void, ILGenerator_Emit, (ILGenerator * __this, OpCode opcode, MethodInfo * method));
DO_APP_FUNC(0x02680D10, void, ILGenerator_Emit_1, (ILGenerator * __this, OpCode opcode, int32_t arg, MethodInfo * method));
DO_APP_FUNC(0x02680D60, void, ILGenerator_Emit_2, (ILGenerator * __this, OpCode opcode, ConstructorInfo * con, MethodInfo * method));
DO_APP_FUNC(0x02680DB0, void, ILGenerator_Emit_3, (ILGenerator * __this, OpCode opcode, Label label, MethodInfo * method));
DO_APP_FUNC(0x02680E00, void, ILGenerator_Emit_4, (ILGenerator * __this, OpCode opcode, LocalBuilder * local, MethodInfo * method));
DO_APP_FUNC(0x02680E50, void, ILGenerator_Emit_5, (ILGenerator * __this, OpCode opcode, FieldInfo_1 * field, MethodInfo * method));
DO_APP_FUNC(0x02680EA0, void, ILGenerator_Emit_6, (ILGenerator * __this, OpCode opcode, MethodInfo_1 * meth, MethodInfo * method));
DO_APP_FUNC(0x02680EF0, void, ILGenerator_Emit_7, (ILGenerator * __this, OpCode opcode, Type * cls, MethodInfo * method));
DO_APP_FUNC(0x02680F40, void, ILGenerator_MarkLabel, (ILGenerator * __this, Label loc, MethodInfo * method));
DO_APP_FUNC(0x001FC9E0, bool, Label_Equals, (Label__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0010E170, int32_t, Label_GetHashCode, (Label__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x02680F90, MethodAttributes__Enum, MethodBuilder_get_Attributes, (MethodBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02680FE0, Type *, MethodBuilder_get_DeclaringType, (MethodBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02681030, String *, MethodBuilder_get_Name, (MethodBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02681080, ParameterInfo_1__Array *, MethodBuilder_GetParameters, (MethodBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x026810D0, RuntimeMethodHandle, MethodBuilder_get_MethodHandle, (MethodBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02681100, Type *, MethodBuilder_get_ReflectedType, (MethodBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02681130, MethodInfo_1 *, MethodBuilder_GetBaseDefinition, (MethodBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02681160, Object__Array *, MethodBuilder_GetCustomAttributes, (MethodBuilder * __this, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02681190, Object__Array *, MethodBuilder_GetCustomAttributes_1, (MethodBuilder * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x026811C0, MethodImplAttributes__Enum, MethodBuilder_GetMethodImplementationFlags, (MethodBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x026811F0, Object *, MethodBuilder_Invoke, (MethodBuilder * __this, Object * obj, BindingFlags__Enum invokeAttr, Binder * binder, Object__Array * parameters, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x02681220, bool, MethodBuilder_IsDefined, (MethodBuilder * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x001FCAD0, void, OpCode__ctor, (OpCode__Boxed * __this, int32_t p, int32_t q, MethodInfo * method));
DO_APP_FUNC(0x001FCB10, int32_t, OpCode_GetHashCode, (OpCode__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001FCB40, bool, OpCode_Equals, (OpCode__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x001FCC20, String *, OpCode_ToString, (OpCode__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001FCC20, String *, OpCode_get_Name, (OpCode__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x026813D0, void, OpCodeNames__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02685E20, void, OpCodes__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02689220, PropertyAttributes__Enum, PropertyBuilder_get_Attributes, (PropertyBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02689270, bool, PropertyBuilder_get_CanRead, (PropertyBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x026892C0, bool, PropertyBuilder_get_CanWrite, (PropertyBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02689310, Type *, PropertyBuilder_get_DeclaringType, (PropertyBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02689360, String *, PropertyBuilder_get_Name, (PropertyBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x026893B0, Type *, PropertyBuilder_get_PropertyType, (PropertyBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02689400, ParameterInfo_1__Array *, PropertyBuilder_GetIndexParameters, (PropertyBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02689450, Type *, PropertyBuilder_get_ReflectedType, (PropertyBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02689480, MethodInfo_1__Array *, PropertyBuilder_GetAccessors, (PropertyBuilder * __this, bool nonPublic, MethodInfo * method));
DO_APP_FUNC(0x026894B0, Object__Array *, PropertyBuilder_GetCustomAttributes, (PropertyBuilder * __this, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x026894E0, Object__Array *, PropertyBuilder_GetCustomAttributes_1, (PropertyBuilder * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02689510, MethodInfo_1 *, PropertyBuilder_GetGetMethod, (PropertyBuilder * __this, bool nonPublic, MethodInfo * method));
DO_APP_FUNC(0x02689540, MethodInfo_1 *, PropertyBuilder_GetSetMethod, (PropertyBuilder * __this, bool nonPublic, MethodInfo * method));
DO_APP_FUNC(0x02689570, Object *, PropertyBuilder_GetValue, (PropertyBuilder * __this, Object * obj, BindingFlags__Enum invokeAttr, Binder * binder, Object__Array * index, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x026895A0, bool, PropertyBuilder_IsDefined, (PropertyBuilder * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x026895D0, void, PropertyBuilder_SetValue, (PropertyBuilder * __this, Object * obj, Object * value, BindingFlags__Enum invokeAttr, Binder * binder, Object__Array * index, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x02689600, Assembly *, TypeBuilder_get_Assembly, (TypeBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02689650, String *, TypeBuilder_get_AssemblyQualifiedName, (TypeBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x026896A0, Type *, TypeBuilder_get_BaseType, (TypeBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x026896F0, String *, TypeBuilder_get_FullName, (TypeBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02689740, Module *, TypeBuilder_get_Module, (TypeBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02689790, String *, TypeBuilder_get_Name, (TypeBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x026897E0, String *, TypeBuilder_get_Namespace, (TypeBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02689830, Type *, TypeBuilder_GetElementType, (TypeBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02689880, Type *, TypeBuilder_get_UnderlyingSystemType, (TypeBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x026898B0, TypeAttributes__Enum, TypeBuilder_GetAttributeFlagsImpl, (TypeBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x026898E0, ConstructorInfo *, TypeBuilder_GetConstructorImpl, (TypeBuilder * __this, BindingFlags__Enum bindingAttr, Binder * binder, CallingConventions__Enum callConvention, Type__Array * types, ParameterModifier__Array * modifiers, MethodInfo * method));
DO_APP_FUNC(0x02689910, ConstructorInfo__Array *, TypeBuilder_GetConstructors, (TypeBuilder * __this, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x02689940, Object__Array *, TypeBuilder_GetCustomAttributes, (TypeBuilder * __this, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02689970, Object__Array *, TypeBuilder_GetCustomAttributes_1, (TypeBuilder * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x026899A0, EventInfo_1 *, TypeBuilder_GetEvent, (TypeBuilder * __this, String * name, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x026899D0, EventInfo_1__Array *, TypeBuilder_GetEvents, (TypeBuilder * __this, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x02689A00, FieldInfo_1 *, TypeBuilder_GetField, (TypeBuilder * __this, String * name, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x02689A30, FieldInfo_1__Array *, TypeBuilder_GetFields, (TypeBuilder * __this, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x02689A60, Type *, TypeBuilder_GetInterface, (TypeBuilder * __this, String * name, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x02689A90, Type__Array *, TypeBuilder_GetInterfaces, (TypeBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02689AC0, MemberInfo_1__Array *, TypeBuilder_GetMembers, (TypeBuilder * __this, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x02689AF0, MethodInfo_1 *, TypeBuilder_GetMethodImpl, (TypeBuilder * __this, String * name, BindingFlags__Enum bindingAttr, Binder * binder, CallingConventions__Enum callConvention, Type__Array * types, ParameterModifier__Array * modifiers, MethodInfo * method));
DO_APP_FUNC(0x02689B20, MethodInfo_1__Array *, TypeBuilder_GetMethods, (TypeBuilder * __this, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x02689B50, Type *, TypeBuilder_GetNestedType, (TypeBuilder * __this, String * name, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x02689B80, PropertyInfo_1__Array *, TypeBuilder_GetProperties, (TypeBuilder * __this, BindingFlags__Enum bindingAttr, MethodInfo * method));
DO_APP_FUNC(0x02689BB0, PropertyInfo_1 *, TypeBuilder_GetPropertyImpl, (TypeBuilder * __this, String * name, BindingFlags__Enum bindingAttr, Binder * binder, Type * returnType, Type__Array * types, ParameterModifier__Array * modifiers, MethodInfo * method));
DO_APP_FUNC(0x02689BE0, bool, TypeBuilder_HasElementTypeImpl, (TypeBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02689C10, Object *, TypeBuilder_InvokeMember, (TypeBuilder * __this, String * name, BindingFlags__Enum invokeAttr, Binder * binder, Object * target, Object__Array * args, ParameterModifier__Array * modifiers, CultureInfo * culture, String__Array * namedParameters, MethodInfo * method));
DO_APP_FUNC(0x02689C40, bool, TypeBuilder_IsArrayImpl, (TypeBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02689C70, bool, TypeBuilder_IsByRefImpl, (TypeBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02689CA0, bool, TypeBuilder_IsCOMObjectImpl, (TypeBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02689CD0, bool, TypeBuilder_IsDefined, (TypeBuilder * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x02689D00, bool, TypeBuilder_IsPointerImpl, (TypeBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02689D30, bool, TypeBuilder_IsPrimitiveImpl, (TypeBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02689D60, Type *, TypeBuilderInstantiation_MakeGenericType, (Type * type, Type__Array * typeArguments, MethodInfo * method));
DO_APP_FUNC(0x0238B580, void, _Error_EndOfFile, (MethodInfo * method));
DO_APP_FUNC(0x0238B5F0, void, _Error_FileNotOpen, (MethodInfo * method));
DO_APP_FUNC(0x0238B660, void, _Error_StreamIsClosed, (MethodInfo * method));
DO_APP_FUNC(0x0238B6D0, void, _Error_MemoryStreamNotExpandable, (MethodInfo * method));
DO_APP_FUNC(0x0238B740, void, _Error_ReaderClosed, (MethodInfo * method));
DO_APP_FUNC(0x0238B7B0, void, _Error_ReadNotSupported, (MethodInfo * method));
DO_APP_FUNC(0x0238B820, void, _Error_WrongAsyncResult, (MethodInfo * method));
DO_APP_FUNC(0x0238B890, void, _Error_EndReadCalledTwice, (MethodInfo * method));
DO_APP_FUNC(0x0238B900, void, _Error_EndWriteCalledTwice, (MethodInfo * method));
DO_APP_FUNC(0x0238B970, String *, _Error_GetDisplayablePath, (String * path, bool isInvalidPath, MethodInfo * method));
DO_APP_FUNC(0x0238BAC0, void, _Error_WinIOError, (int32_t errorCode, String * maybeFullPath, MethodInfo * method));
DO_APP_FUNC(0x0238C1E0, void, _Error_WriteNotSupported, (MethodInfo * method));
DO_APP_FUNC(0x0238C250, void, _Error_WriterClosed, (MethodInfo * method));
DO_APP_FUNC(0x01DFD6B0, void, BinaryReader__ctor, (BinaryReader * __this, Stream * input, MethodInfo * method));
DO_APP_FUNC(0x01DFD820, void, BinaryReader__ctor_1, (BinaryReader * __this, Stream * input, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x01DFD840, void, BinaryReader__ctor_2, (BinaryReader * __this, Stream * input, Encoding * encoding, bool leaveOpen, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Stream *, BinaryReader_get_BaseStream, (BinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFDA90, void, BinaryReader_Close, (BinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFDAB0, void, BinaryReader_Dispose, (BinaryReader * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01DFDA90, void, BinaryReader_Dispose_1, (BinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFDB10, int32_t, BinaryReader_PeekChar, (BinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFDBD0, int32_t, BinaryReader_Read, (BinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFDBF0, bool, BinaryReader_ReadBoolean, (BinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFDC50, uint8_t, BinaryReader_ReadByte, (BinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFDC90, int8_t, BinaryReader_ReadSByte, (BinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFDCE0, uint16_t, BinaryReader_ReadChar, (BinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFDD10, int16_t, BinaryReader_ReadInt16, (BinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFDD10, uint16_t, BinaryReader_ReadUInt16, (BinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFDD90, int32_t, BinaryReader_ReadInt32, (BinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFDFA0, uint32_t, BinaryReader_ReadUInt32, (BinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFE090, int64_t, BinaryReader_ReadInt64, (BinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFE090, uint64_t, BinaryReader_ReadUInt64, (BinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFE280, float, BinaryReader_ReadSingle, (BinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFE2D0, double, BinaryReader_ReadDouble, (BinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFE440, Decimal, BinaryReader_ReadDecimal, (BinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFE570, String *, BinaryReader_ReadString, (BinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFE820, int32_t, BinaryReader_InternalReadChars, (BinaryReader * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01DFEB80, int32_t, BinaryReader_InternalReadOneChar, (BinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFEEA0, Char__Array *, BinaryReader_ReadChars, (BinaryReader * __this, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01DFF030, int32_t, BinaryReader_Read_1, (BinaryReader * __this, Byte__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01DFF220, Byte__Array *, BinaryReader_ReadBytes, (BinaryReader * __this, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01DFF3F0, void, BinaryReader_FillBuffer, (BinaryReader * __this, int32_t numBytes, MethodInfo * method));
DO_APP_FUNC(0x01DFF5A0, int32_t, BinaryReader_Read7BitEncodedInt, (BinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFF690, void, BinaryWriter__ctor, (BinaryWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFF850, void, BinaryWriter__ctor_1, (BinaryWriter * __this, Stream * output, MethodInfo * method));
DO_APP_FUNC(0x01DFF9C0, void, BinaryWriter__ctor_2, (BinaryWriter * __this, Stream * output, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x01DFF9E0, void, BinaryWriter__ctor_3, (BinaryWriter * __this, Stream * output, Encoding * encoding, bool leaveOpen, MethodInfo * method));
DO_APP_FUNC(0x01A8DC40, void, BinaryWriter_Close, (BinaryWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFFB80, void, BinaryWriter_Dispose, (BinaryWriter * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01A8DC40, void, BinaryWriter_Dispose_1, (BinaryWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFFBE0, Stream *, BinaryWriter_get_BaseStream, (BinaryWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFFC10, void, BinaryWriter_Flush, (BinaryWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFFC40, int64_t, BinaryWriter_Seek, (BinaryWriter * __this, int32_t offset, SeekOrigin__Enum origin, MethodInfo * method));
DO_APP_FUNC(0x01DFFC70, void, BinaryWriter_Write, (BinaryWriter * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01DFFCE0, void, BinaryWriter_Write_1, (BinaryWriter * __this, uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x01DFFCE0, void, BinaryWriter_Write_2, (BinaryWriter * __this, int8_t value, MethodInfo * method));
DO_APP_FUNC(0x01DFFD10, void, BinaryWriter_Write_3, (BinaryWriter * __this, Byte__Array * buffer, MethodInfo * method));
DO_APP_FUNC(0x01DFFE00, void, BinaryWriter_Write_4, (BinaryWriter * __this, Byte__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01DFFE30, void, BinaryWriter_Write_5, (BinaryWriter * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x01DFFFC0, void, BinaryWriter_Write_6, (BinaryWriter * __this, Char__Array * chars, MethodInfo * method));
DO_APP_FUNC(0x01E000E0, void, BinaryWriter_Write_7, (BinaryWriter * __this, double value, MethodInfo * method));
DO_APP_FUNC(0x01E00140, void, BinaryWriter_Write_8, (BinaryWriter * __this, int16_t value, MethodInfo * method));
DO_APP_FUNC(0x01E001E0, void, BinaryWriter_Write_9, (BinaryWriter * __this, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x01E00280, void, BinaryWriter_Write_10, (BinaryWriter * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01E00390, void, BinaryWriter_Write_11, (BinaryWriter * __this, uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x01E004A0, void, BinaryWriter_Write_12, (BinaryWriter * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01E006B0, void, BinaryWriter_Write_13, (BinaryWriter * __this, uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x01E008C0, void, BinaryWriter_Write_14, (BinaryWriter * __this, float value, MethodInfo * method));
DO_APP_FUNC(0x01E00920, void, BinaryWriter_Write_15, (BinaryWriter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E00C90, void, BinaryWriter_Write7BitEncodedInt, (BinaryWriter * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01E00D00, void, BinaryWriter__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01E01E10, String__Array *, Directory_GetFiles, (String * path, MethodInfo * method));
DO_APP_FUNC(0x01E01EF0, String__Array *, Directory_GetFiles_1, (String * path, String * searchPattern, MethodInfo * method));
DO_APP_FUNC(0x01E02010, String__Array *, Directory_GetFiles_2, (String * path, String * searchPattern, SearchOption__Enum searchOption, MethodInfo * method));
DO_APP_FUNC(0x01E02190, String__Array *, Directory_InternalGetFiles, (String * path, String * searchPattern, SearchOption__Enum searchOption, MethodInfo * method));
DO_APP_FUNC(0x01E021C0, String__Array *, Directory_GetDirectories, (String * path, MethodInfo * method));
DO_APP_FUNC(0x01E022A0, String__Array *, Directory_GetDirectories_1, (String * path, String * searchPattern, MethodInfo * method));
DO_APP_FUNC(0x01E023C0, String__Array *, Directory_InternalGetDirectories, (String * path, String * searchPattern, SearchOption__Enum searchOption, MethodInfo * method));
DO_APP_FUNC(0x01E023F0, String__Array *, Directory_InternalGetFileDirectoryNames, (String * path, String * userPathOriginal, String * searchPattern, bool includeFiles, bool includeDirs, SearchOption__Enum searchOption, bool checkHost, MethodInfo * method));
DO_APP_FUNC(0x01E025B0, DirectoryInfo *, Directory_CreateDirectory, (String * path, MethodInfo * method));
DO_APP_FUNC(0x01E02840, DirectoryInfo *, Directory_CreateDirectoriesInternal, (String * path, MethodInfo * method));
DO_APP_FUNC(0x01E02B80, void, Directory_Delete, (String * path, MethodInfo * method));
DO_APP_FUNC(0x01E02EC0, void, Directory_RecursiveDelete, (String * path, MethodInfo * method));
DO_APP_FUNC(0x01E03070, void, Directory_Delete_1, (String * path, bool recursive, MethodInfo * method));
DO_APP_FUNC(0x01E03140, bool, Directory_Exists, (String * path, MethodInfo * method));
DO_APP_FUNC(0x01A18980, String *, Directory_GetCurrentDirectory, (MethodInfo * method));
DO_APP_FUNC(0x01E032C0, String *, Directory_InsecureGetCurrentDirectory, (MethodInfo * method));
DO_APP_FUNC(0x01E03420, bool, Directory_IsRootDirectory, (String * path, MethodInfo * method));
DO_APP_FUNC(0x01E03560, DirectoryInfo *, Directory_GetParent, (String * path, MethodInfo * method));
DO_APP_FUNC(0x01E03850, String *, Directory_GetDemandDir, (String * fullPath, bool thisDirOnly, MethodInfo * method));
DO_APP_FUNC(0x00E332C0, void, Directory_SearchData__ctor, (Directory_SearchData * __this, String * fullPath, String * userPath, SearchOption__Enum searchOption, MethodInfo * method));
DO_APP_FUNC(0x01E05080, void, DirectoryNotFoundException__ctor, (DirectoryNotFoundException * __this, MethodInfo * method));
DO_APP_FUNC(0x01E05110, void, DirectoryNotFoundException__ctor_1, (DirectoryNotFoundException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, DirectoryNotFoundException__ctor_2, (DirectoryNotFoundException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01E05130, void, DriveNotFoundException__ctor, (DriveNotFoundException * __this, MethodInfo * method));
DO_APP_FUNC(0x01E05110, void, DriveNotFoundException__ctor_1, (DriveNotFoundException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, DriveNotFoundException__ctor_2, (DriveNotFoundException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01E051C0, void, EndOfStreamException__ctor, (EndOfStreamException * __this, MethodInfo * method));
DO_APP_FUNC(0x01E05250, void, EndOfStreamException__ctor_1, (EndOfStreamException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, EndOfStreamException__ctor_2, (EndOfStreamException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01E085A0, void, FileInfo__ctor, (FileInfo * __this, String * fileName, MethodInfo * method));
DO_APP_FUNC(0x01E08710, void, FileInfo_Init, (FileInfo * __this, String * fileName, bool checkHost, MethodInfo * method));
DO_APP_FUNC(0x00502220, String *, FileInfo_GetDisplayPath, (FileInfo * __this, String * originalPath, MethodInfo * method));
DO_APP_FUNC(0x01E087E0, void, FileInfo__ctor_1, (FileInfo * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, String *, FileInfo_get_Name, (FileInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01E088C0, int64_t, FileInfo_get_Length, (FileInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01E08940, String *, FileInfo_get_DirectoryName, (FileInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01E089E0, DirectoryInfo *, FileInfo_get_Directory, (FileInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01E08BD0, bool, FileInfo_get_Exists, (FileInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01E08C80, FileStream *, FileInfo_OpenRead, (FileInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, String *, FileInfo_ToString, (FileInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01E08E00, void, FileLoadException__ctor, (FileLoadException * __this, MethodInfo * method));
DO_APP_FUNC(0x01E08E90, void, FileLoadException__ctor_1, (FileLoadException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01E08EB0, String *, FileLoadException_get_Message, (FileLoadException * __this, MethodInfo * method));
DO_APP_FUNC(0x01E08EE0, void, FileLoadException_SetMessageField, (FileLoadException * __this, MethodInfo * method));
DO_APP_FUNC(0x01E08F10, String *, FileLoadException_ToString, (FileLoadException * __this, MethodInfo * method));
DO_APP_FUNC(0x01E091D0, void, FileLoadException__ctor_2, (FileLoadException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FBC60, String *, FileLoadException_get_FusionLog, (FileLoadException * __this, MethodInfo * method));
DO_APP_FUNC(0x01E092E0, void, FileLoadException_GetObjectData, (FileLoadException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01E09450, String *, FileLoadException_FormatFileLoadExceptionMessage, (String * fileName, int32_t hResult, MethodInfo * method));
DO_APP_FUNC(0x01E09550, void, FileNotFoundException__ctor, (FileNotFoundException * __this, MethodInfo * method));
DO_APP_FUNC(0x01E095E0, void, FileNotFoundException__ctor_1, (FileNotFoundException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01E09600, void, FileNotFoundException__ctor_2, (FileNotFoundException * __this, String * message, String * fileName, MethodInfo * method));
DO_APP_FUNC(0x01E09640, String *, FileNotFoundException_get_Message, (FileNotFoundException * __this, MethodInfo * method));
DO_APP_FUNC(0x01E09700, void, FileNotFoundException_SetMessageField, (FileNotFoundException * __this, MethodInfo * method));
DO_APP_FUNC(0x01E097B0, String *, FileNotFoundException_ToString, (FileNotFoundException * __this, MethodInfo * method));
DO_APP_FUNC(0x01E09A70, void, FileNotFoundException__ctor_3, (FileNotFoundException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FBC60, String *, FileNotFoundException_get_FusionLog, (FileNotFoundException * __this, MethodInfo * method));
DO_APP_FUNC(0x01E09B80, void, FileNotFoundException_GetObjectData, (FileNotFoundException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0236F420, IEnumerable_1_System_String_ *, FileSystemEnumerableFactory_CreateFileNameIterator, (String * path, String * originalUserPath, String * searchPattern, bool includeFiles, bool includeDirs, SearchOption__Enum searchOption, bool checkHost, MethodInfo * method));
DO_APP_FUNC(0x02384010, void, StringResultHandler__ctor, (StringResultHandler * __this, bool includeFiles, bool includeDirs, MethodInfo * method));
DO_APP_FUNC(0x023840B0, bool, StringResultHandler_IsResultIncluded, (StringResultHandler * __this, SearchResult * result, MethodInfo * method));
DO_APP_FUNC(0x00AD4920, String *, StringResultHandler_CreateObject, (StringResultHandler * __this, SearchResult * result, MethodInfo * method));
DO_APP_FUNC(0x00522850, void, SearchResult__ctor, (SearchResult * __this, String * fullPath, String * userPath, Win32Native_WIN32_FIND_DATA * findData, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, SearchResult_get_UserPath, (SearchResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, Win32Native_WIN32_FIND_DATA *, SearchResult_get_FindData, (SearchResult * __this, MethodInfo * method));
DO_APP_FUNC(0x0236F6F0, bool, FileSystemEnumerableHelpers_IsDir, (Win32Native_WIN32_FIND_DATA * data, MethodInfo * method));
DO_APP_FUNC(0x0236F7C0, bool, FileSystemEnumerableHelpers_IsFile, (Win32Native_WIN32_FIND_DATA * data, MethodInfo * method));
DO_APP_FUNC(0x0236F7E0, void, FileSystemInfo__ctor, (FileSystemInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0236F880, void, FileSystemInfo__ctor_1, (FileSystemInfo * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, String *, FileSystemInfo_get_FullName, (FileSystemInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0236F9B0, String *, FileSystemInfo_get_Extension, (FileSystemInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0236FB60, DateTime, FileSystemInfo_get_LastWriteTime, (FileSystemInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0236FC50, DateTime, FileSystemInfo_get_LastWriteTimeUtc, (FileSystemInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0236FD30, void, FileSystemInfo_Refresh, (FileSystemInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0236FE30, void, FileSystemInfo_GetObjectData, (FileSystemInfo * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, String *, FileSystemInfo_get_DisplayPath, (FileSystemInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB70, void, FileSystemInfo_set_DisplayPath, (FileSystemInfo * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0236FF50, void, IOException__ctor, (IOException * __this, MethodInfo * method));
DO_APP_FUNC(0x0236FFE0, void, IOException__ctor_1, (IOException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A93D50, void, IOException__ctor_2, (IOException * __this, String * message, int32_t hresult, MethodInfo * method));
DO_APP_FUNC(0x02370000, void, IOException__ctor_3, (IOException * __this, String * message, int32_t hresult, String * maybeFullPath, MethodInfo * method));
DO_APP_FUNC(0x02370040, void, IOException__ctor_4, (IOException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, IOException__ctor_5, (IOException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02370060, void, MemoryStream__ctor, (MemoryStream * __this, MethodInfo * method));
DO_APP_FUNC(0x02370070, void, MemoryStream__ctor_1, (MemoryStream * __this, int32_t capacity, MethodInfo * method));
DO_APP_FUNC(0x02370180, void, MemoryStream__ctor_2, (MemoryStream * __this, Byte__Array * buffer, MethodInfo * method));
DO_APP_FUNC(0x02370290, void, MemoryStream__ctor_3, (MemoryStream * __this, Byte__Array * buffer, bool writable, MethodInfo * method));
DO_APP_FUNC(0x023703B0, void, MemoryStream__ctor_4, (MemoryStream * __this, Byte__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x023703E0, void, MemoryStream__ctor_5, (MemoryStream * __this, Byte__Array * buffer, int32_t index, int32_t count, bool writable, bool publiclyVisible, MethodInfo * method));
DO_APP_FUNC(0x00A1A3B0, bool, MemoryStream_get_CanRead, (MemoryStream * __this, MethodInfo * method));
DO_APP_FUNC(0x00A1A3B0, bool, MemoryStream_get_CanSeek, (MemoryStream * __this, MethodInfo * method));
DO_APP_FUNC(0x00444DC0, bool, MemoryStream_get_CanWrite, (MemoryStream * __this, MethodInfo * method));
DO_APP_FUNC(0x023705F0, void, MemoryStream_EnsureWriteable, (MemoryStream * __this, MethodInfo * method));
DO_APP_FUNC(0x02370620, void, MemoryStream_Dispose, (MemoryStream * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x02370660, bool, MemoryStream_EnsureCapacity, (MemoryStream * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MemoryStream_Flush, (MemoryStream * __this, MethodInfo * method));
DO_APP_FUNC(0x02370770, Task *, MemoryStream_FlushAsync, (MemoryStream * __this, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x023708B0, Byte__Array *, MemoryStream_GetBuffer, (MemoryStream * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, Byte__Array *, MemoryStream_InternalGetBuffer, (MemoryStream * __this, MethodInfo * method));
DO_APP_FUNC(0x02370980, int32_t, MemoryStream_InternalGetPosition, (MemoryStream * __this, MethodInfo * method));
DO_APP_FUNC(0x023709A0, int32_t, MemoryStream_InternalReadInt32, (MemoryStream * __this, MethodInfo * method));
DO_APP_FUNC(0x02370AC0, int32_t, MemoryStream_InternalEmulateRead, (MemoryStream * __this, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02370B00, int32_t, MemoryStream_get_Capacity, (MemoryStream * __this, MethodInfo * method));
DO_APP_FUNC(0x02370B20, void, MemoryStream_set_Capacity, (MemoryStream * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x02370CA0, int64_t, MemoryStream_get_Length, (MemoryStream * __this, MethodInfo * method));
DO_APP_FUNC(0x02370CC0, int64_t, MemoryStream_get_Position, (MemoryStream * __this, MethodInfo * method));
DO_APP_FUNC(0x02370CE0, void, MemoryStream_set_Position, (MemoryStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x02370E10, int32_t, MemoryStream_Read, (MemoryStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x023710C0, Task_1_System_Int32_ *, MemoryStream_ReadAsync, (MemoryStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x023714C0, int32_t, MemoryStream_ReadByte, (MemoryStream * __this, MethodInfo * method));
DO_APP_FUNC(0x02371520, int64_t, MemoryStream_Seek, (MemoryStream * __this, int64_t offset, SeekOrigin__Enum loc, MethodInfo * method));
DO_APP_FUNC(0x02371780, void, MemoryStream_SetLength, (MemoryStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x02371900, Byte__Array *, MemoryStream_ToArray, (MemoryStream * __this, MethodInfo * method));
DO_APP_FUNC(0x02371A00, void, MemoryStream_Write, (MemoryStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02371D40, Task *, MemoryStream_WriteAsync, (MemoryStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x02372000, void, MemoryStream_WriteByte, (MemoryStream * __this, uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x023720F0, void, MemoryStream_WriteTo, (MemoryStream * __this, Stream * stream, MethodInfo * method));
DO_APP_FUNC(0x0237B060, void, PathTooLongException__ctor, (PathTooLongException * __this, MethodInfo * method));
DO_APP_FUNC(0x0237B0F0, void, PathTooLongException__ctor_1, (PathTooLongException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, PathTooLongException__ctor_2, (PathTooLongException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0237B110, void, PinnedBufferMemoryStream__ctor, (PinnedBufferMemoryStream * __this, Byte__Array * array, MethodInfo * method));
DO_APP_FUNC(0x0237B290, void, PinnedBufferMemoryStream_Finalize, (PinnedBufferMemoryStream * __this, MethodInfo * method));
DO_APP_FUNC(0x0237B310, void, PinnedBufferMemoryStream_Dispose, (PinnedBufferMemoryStream * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x0237B350, SemaphoreSlim *, Stream_EnsureAsyncActiveSemaphoreInitialized, (Stream * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Stream_get_CanTimeout, (Stream * __this, MethodInfo * method));
DO_APP_FUNC(0x0237B550, int32_t, Stream_get_ReadTimeout, (Stream * __this, MethodInfo * method));
DO_APP_FUNC(0x0237B5C0, void, Stream_set_ReadTimeout, (Stream * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0237B630, int32_t, Stream_get_WriteTimeout, (Stream * __this, MethodInfo * method));
DO_APP_FUNC(0x0237B6A0, void, Stream_set_WriteTimeout, (Stream * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01F86A90, void, Stream_Close, (Stream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E113B0, void, Stream_Dispose, (Stream * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Stream_Dispose_1, (Stream * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x0237B710, Task *, Stream_FlushAsync, (Stream * __this, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x0237B970, IAsyncResult *, Stream_BeginRead, (Stream * __this, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x0237B9A0, IAsyncResult *, Stream_BeginReadInternal, (Stream * __this, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * callback, Object * state, bool serializeAsynchronously, MethodInfo * method));
DO_APP_FUNC(0x0237BDA0, int32_t, Stream_EndRead, (Stream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x0237C0B0, Task_1_System_Int32_ *, Stream_ReadAsync, (Stream * __this, Byte__Array * buffer, int32_t offset, int32_t count, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x0237C1B0, Task_1_System_Int32_ *, Stream_BeginEndReadAsync, (Stream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0237C510, IAsyncResult *, Stream_BeginWrite, (Stream * __this, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x0237C540, IAsyncResult *, Stream_BeginWriteInternal, (Stream * __this, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * callback, Object * state, bool serializeAsynchronously, MethodInfo * method));
DO_APP_FUNC(0x0237C940, void, Stream_RunReadWriteTaskWhenReady, (Stream * __this, Task * asyncWaiter, Stream_ReadWriteTask * readWriteTask, MethodInfo * method));
DO_APP_FUNC(0x0237CBB0, void, Stream_RunReadWriteTask, (Stream * __this, Stream_ReadWriteTask * readWriteTask, MethodInfo * method));
DO_APP_FUNC(0x0237CC80, void, Stream_EndWrite, (Stream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x0237CF70, Task *, Stream_WriteAsync, (Stream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0237D060, Task *, Stream_WriteAsync_1, (Stream * __this, Byte__Array * buffer, int32_t offset, int32_t count, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x0237D160, Task *, Stream_BeginEndWriteAsync, (Stream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0237D4C0, int32_t, Stream_ReadByte, (Stream * __this, MethodInfo * method));
DO_APP_FUNC(0x0237D5B0, void, Stream_WriteByte, (Stream * __this, uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x0237D690, IAsyncResult *, Stream_BlockingBeginRead, (Stream * __this, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x0237D910, int32_t, Stream_BlockingEndRead, (IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x0237D9F0, IAsyncResult *, Stream_BlockingBeginWrite, (Stream * __this, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x0237DC70, void, Stream_BlockingEndWrite, (IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Stream__ctor, (Stream * __this, MethodInfo * method));
DO_APP_FUNC(0x0237DD50, void, Stream__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0237EDF0, void, Stream_ReadWriteTask_ClearBeginState, (Stream_ReadWriteTask * __this, MethodInfo * method));
DO_APP_FUNC(0x0237EE00, void, Stream_ReadWriteTask__ctor, (Stream_ReadWriteTask * __this, bool isRead, Func_2_Object_Int32_ * function, Object * state, Stream * stream, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * callback, MethodInfo * method));
DO_APP_FUNC(0x0237EF90, void, Stream_ReadWriteTask_InvokeAsyncCallback, (Object * completedTask, MethodInfo * method));
DO_APP_FUNC(0x0237F060, void, Stream_ReadWriteTask_System_Threading_Tasks_ITaskCompletionAction_Invoke, (Stream_ReadWriteTask * __this, Task * completingTask, MethodInfo * method));
DO_APP_FUNC(0x0237E700, void, Stream_NullStream__ctor, (Stream_NullStream * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, Stream_NullStream_get_CanRead, (Stream_NullStream * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, Stream_NullStream_get_CanWrite, (Stream_NullStream * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, Stream_NullStream_get_CanSeek, (Stream_NullStream * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, int64_t, Stream_NullStream_get_Length, (Stream_NullStream * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, int64_t, Stream_NullStream_get_Position, (Stream_NullStream * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Stream_NullStream_set_Position, (Stream_NullStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Stream_NullStream_Dispose, (Stream_NullStream * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Stream_NullStream_Flush, (Stream_NullStream * __this, MethodInfo * method));
DO_APP_FUNC(0x0237E790, Task *, Stream_NullStream_FlushAsync, (Stream_NullStream * __this, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x0237E870, IAsyncResult *, Stream_NullStream_BeginRead, (Stream_NullStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x0237E8E0, int32_t, Stream_NullStream_EndRead, (Stream_NullStream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x0237E9B0, IAsyncResult *, Stream_NullStream_BeginWrite, (Stream_NullStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x0237EA20, void, Stream_NullStream_EndWrite, (Stream_NullStream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, int32_t, Stream_NullStream_Read, (Stream_NullStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0237EAF0, Task_1_System_Int32_ *, Stream_NullStream_ReadAsync, (Stream_NullStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x00597B10, int32_t, Stream_NullStream_ReadByte, (Stream_NullStream * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Stream_NullStream_Write, (Stream_NullStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0237ED10, Task *, Stream_NullStream_WriteAsync, (Stream_NullStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Stream_NullStream_WriteByte, (Stream_NullStream * __this, uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, int64_t, Stream_NullStream_Seek, (Stream_NullStream * __this, int64_t offset, SeekOrigin__Enum origin, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Stream_NullStream_SetLength, (Stream_NullStream * __this, int64_t length, MethodInfo * method));
DO_APP_FUNC(0x0237F2D0, void, Stream_SynchronousAsyncResult__ctor, (Stream_SynchronousAsyncResult * __this, int32_t bytesRead, Object * asyncStateObject, MethodInfo * method));
DO_APP_FUNC(0x020D0390, void, Stream_SynchronousAsyncResult__ctor_1, (Stream_SynchronousAsyncResult * __this, Object * asyncStateObject, MethodInfo * method));
DO_APP_FUNC(0x0237F2E0, void, Stream_SynchronousAsyncResult__ctor_2, (Stream_SynchronousAsyncResult * __this, Exception * ex, Object * asyncStateObject, bool isWrite, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, Stream_SynchronousAsyncResult_get_IsCompleted, (Stream_SynchronousAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x0237F330, WaitHandle *, Stream_SynchronousAsyncResult_get_AsyncWaitHandle, (Stream_SynchronousAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Object *, Stream_SynchronousAsyncResult_get_AsyncState, (Stream_SynchronousAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, Stream_SynchronousAsyncResult_get_CompletedSynchronously, (Stream_SynchronousAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x0237F530, void, Stream_SynchronousAsyncResult_ThrowIfError, (Stream_SynchronousAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x0237D910, int32_t, Stream_SynchronousAsyncResult_EndRead, (IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x0237DC70, void, Stream_SynchronousAsyncResult_EndWrite, (IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x0237F570, void, Stream_SynchronousAsyncResult_c__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Stream_SynchronousAsyncResult_c__ctor, (Stream_SynchronousAsyncResult_c * __this, MethodInfo * method));
DO_APP_FUNC(0x0237F6B0, ManualResetEvent *, Stream_SynchronousAsyncResult_c__get_AsyncWaitHandle_b__12_0, (Stream_SynchronousAsyncResult_c * __this, MethodInfo * method));
DO_APP_FUNC(0x0237DF10, void, Stream_c__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Stream_c__ctor, (Stream_c * __this, MethodInfo * method));
DO_APP_FUNC(0x0237E050, SemaphoreSlim *, Stream_c__EnsureAsyncActiveSemaphoreInitialized_b__4_0, (Stream_c * __this, MethodInfo * method));
DO_APP_FUNC(0x0237E1A0, void, Stream_c__FlushAsync_b__36_0, (Stream_c * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x0237E2C0, int32_t, Stream_c__BeginReadInternal_b__39_0, (Stream_c * __this, Object * _p0_, MethodInfo * method));
DO_APP_FUNC(0x0237E3C0, IAsyncResult *, Stream_c__BeginEndReadAsync_b__43_0, (Stream_c * __this, Stream * stream, Stream_ReadWriteParameters args, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x0237E430, int32_t, Stream_c__BeginEndReadAsync_b__43_1, (Stream_c * __this, Stream * stream, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x0237E460, int32_t, Stream_c__BeginWriteInternal_b__46_0, (Stream_c * __this, Object * _p0_, MethodInfo * method));
DO_APP_FUNC(0x0237E560, void, Stream_c__RunReadWriteTaskWhenReady_b__47_0, (Stream_c * __this, Task * t, Object * state, MethodInfo * method));
DO_APP_FUNC(0x0237E650, IAsyncResult *, Stream_c__BeginEndWriteAsync_b__53_0, (Stream_c * __this, Stream * stream, Stream_ReadWriteParameters args, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x0237E6C0, VoidTaskResult, Stream_c__BeginEndWriteAsync_b__53_1, (Stream_c * __this, Stream * stream, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x012EE6D0, int32_t, StreamReader_get_DefaultBufferSize, (MethodInfo * method));
DO_APP_FUNC(0x0237F810, void, StreamReader_CheckAsyncTaskInProgress, (StreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0237F8F0, void, StreamReader__ctor, (StreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0237F980, void, StreamReader__ctor_1, (StreamReader * __this, Stream * stream, MethodInfo * method));
DO_APP_FUNC(0x0237FA60, void, StreamReader__ctor_2, (StreamReader * __this, Stream * stream, bool detectEncodingFromByteOrderMarks, MethodInfo * method));
DO_APP_FUNC(0x0237FB50, void, StreamReader__ctor_3, (StreamReader * __this, Stream * stream, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x0237FC30, void, StreamReader__ctor_4, (StreamReader * __this, Stream * stream, Encoding * encoding, bool detectEncodingFromByteOrderMarks, MethodInfo * method));
DO_APP_FUNC(0x0237FD20, void, StreamReader__ctor_5, (StreamReader * __this, Stream * stream, Encoding * encoding, bool detectEncodingFromByteOrderMarks, int32_t bufferSize, bool leaveOpen, MethodInfo * method));
DO_APP_FUNC(0x0237FF00, void, StreamReader__ctor_6, (StreamReader * __this, String * path, MethodInfo * method));
DO_APP_FUNC(0x0237FFE0, void, StreamReader__ctor_7, (StreamReader * __this, String * path, bool detectEncodingFromByteOrderMarks, MethodInfo * method));
DO_APP_FUNC(0x023800D0, void, StreamReader__ctor_8, (StreamReader * __this, String * path, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x023801B0, void, StreamReader__ctor_9, (StreamReader * __this, String * path, Encoding * encoding, bool detectEncodingFromByteOrderMarks, int32_t bufferSize, MethodInfo * method));
DO_APP_FUNC(0x023801E0, void, StreamReader__ctor_10, (StreamReader * __this, String * path, Encoding * encoding, bool detectEncodingFromByteOrderMarks, int32_t bufferSize, bool checkHost, MethodInfo * method));
DO_APP_FUNC(0x023804E0, void, StreamReader_Init, (StreamReader * __this, Stream * stream, Encoding * encoding, bool detectEncodingFromByteOrderMarks, int32_t bufferSize, bool leaveOpen, MethodInfo * method));
DO_APP_FUNC(0x02380640, void, StreamReader_Init_1, (StreamReader * __this, Stream * stream, MethodInfo * method));
DO_APP_FUNC(0x02380650, void, StreamReader_Close, (StreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02380670, void, StreamReader_Dispose, (StreamReader * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x002FB950, Encoding *, StreamReader_get_CurrentEncoding, (StreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Stream *, StreamReader_get_BaseStream, (StreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02380750, bool, StreamReader_get_LeaveOpen, (StreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02380760, bool, StreamReader_get_EndOfStream, (StreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x023807B0, int32_t, StreamReader_Peek, (StreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02380840, bool, StreamReader_DataAvailable, (StreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02380850, int32_t, StreamReader_Read, (StreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x023808E0, int32_t, StreamReader_Read_1, (StreamReader * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02380B40, String *, StreamReader_ReadToEnd, (StreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02380D20, void, StreamReader_CompressBuffer, (StreamReader * __this, int32_t n, MethodInfo * method));
DO_APP_FUNC(0x02380D60, void, StreamReader_DetectEncoding, (StreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x023813E0, bool, StreamReader_IsPreamble, (StreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02381530, int32_t, StreamReader_ReadBuffer, (StreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02381710, int32_t, StreamReader_ReadBuffer_1, (StreamReader * __this, Char__Array * userBuffer, int32_t userOffset, int32_t desiredChars, bool * readToUserBuffer, MethodInfo * method));
DO_APP_FUNC(0x02381990, String *, StreamReader_ReadLine, (StreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02381C90, void, StreamReader__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02381F00, void, StreamReader_NullStreamReader__ctor, (StreamReader_NullStreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02382050, Stream *, StreamReader_NullStreamReader_get_BaseStream, (StreamReader_NullStreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x023820F0, Encoding *, StreamReader_NullStreamReader_get_CurrentEncoding, (StreamReader_NullStreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, StreamReader_NullStreamReader_Dispose, (StreamReader_NullStreamReader * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x00597B10, int32_t, StreamReader_NullStreamReader_Peek, (StreamReader_NullStreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x00597B10, int32_t, StreamReader_NullStreamReader_Read, (StreamReader_NullStreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, int32_t, StreamReader_NullStreamReader_Read_1, (StreamReader_NullStreamReader * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, String *, StreamReader_NullStreamReader_ReadLine, (StreamReader_NullStreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02382100, String *, StreamReader_NullStreamReader_ReadToEnd, (StreamReader_NullStreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, int32_t, StreamReader_NullStreamReader_ReadBuffer, (StreamReader_NullStreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02382180, void, StreamWriter_CheckAsyncTaskInProgress, (StreamWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x02382260, Encoding *, StreamWriter_get_UTF8NoBOM, (MethodInfo * method));
DO_APP_FUNC(0x02382460, void, StreamWriter__ctor, (StreamWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x02382500, void, StreamWriter__ctor_1, (StreamWriter * __this, Stream * stream, MethodInfo * method));
DO_APP_FUNC(0x023825D0, void, StreamWriter__ctor_2, (StreamWriter * __this, Stream * stream, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x02382600, void, StreamWriter__ctor_3, (StreamWriter * __this, Stream * stream, Encoding * encoding, int32_t bufferSize, MethodInfo * method));
DO_APP_FUNC(0x02382620, void, StreamWriter__ctor_4, (StreamWriter * __this, Stream * stream, Encoding * encoding, int32_t bufferSize, bool leaveOpen, MethodInfo * method));
DO_APP_FUNC(0x02382810, void, StreamWriter__ctor_5, (StreamWriter * __this, String * path, MethodInfo * method));
DO_APP_FUNC(0x023828E0, void, StreamWriter__ctor_6, (StreamWriter * __this, String * path, bool append, MethodInfo * method));
DO_APP_FUNC(0x023829C0, void, StreamWriter__ctor_7, (StreamWriter * __this, String * path, bool append, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x023829F0, void, StreamWriter__ctor_8, (StreamWriter * __this, String * path, bool append, Encoding * encoding, int32_t bufferSize, MethodInfo * method));
DO_APP_FUNC(0x02382A20, void, StreamWriter__ctor_9, (StreamWriter * __this, String * path, bool append, Encoding * encoding, int32_t bufferSize, bool checkHost, MethodInfo * method));
DO_APP_FUNC(0x02382C60, void, StreamWriter_Init, (StreamWriter * __this, Stream * streamArg, Encoding * encodingArg, int32_t bufferSize, bool shouldLeaveOpen, MethodInfo * method));
DO_APP_FUNC(0x02382DD0, Stream *, StreamWriter_CreateFile, (String * path, bool append, bool checkHost, MethodInfo * method));
DO_APP_FUNC(0x02382F90, void, StreamWriter_Close, (StreamWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x02383040, void, StreamWriter_Dispose, (StreamWriter * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x023831B0, void, StreamWriter_Flush, (StreamWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x023831E0, void, StreamWriter_Flush_1, (StreamWriter * __this, bool flushStream, bool flushEncoder, MethodInfo * method));
DO_APP_FUNC(0x023833F0, void, StreamWriter_set_AutoFlush, (StreamWriter * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, Stream *, StreamWriter_get_BaseStream, (StreamWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x02383430, bool, StreamWriter_get_LeaveOpen, (StreamWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, Encoding *, StreamWriter_get_Encoding, (StreamWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x02383440, void, StreamWriter_Write, (StreamWriter * __this, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x023834D0, void, StreamWriter_Write_1, (StreamWriter * __this, Char__Array * buffer, MethodInfo * method));
DO_APP_FUNC(0x023835A0, void, StreamWriter_Write_2, (StreamWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x023837F0, void, StreamWriter_Write_3, (StreamWriter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x023838C0, void, StreamWriter__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02383B30, void, StringReader__ctor, (StringReader * __this, String * s, MethodInfo * method));
DO_APP_FUNC(0x02380650, void, StringReader_Close, (StringReader * __this, MethodInfo * method));
DO_APP_FUNC(0x016644A0, void, StringReader_Dispose, (StringReader * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x02383C10, int32_t, StringReader_Peek, (StringReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02383C50, int32_t, StringReader_Read, (StringReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02383C90, int32_t, StringReader_Read_1, (StringReader * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02383EA0, String *, StringReader_ReadToEnd, (StringReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02383EE0, String *, StringReader_ReadLine, (StringReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02384120, void, StringWriter__ctor, (StringWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x023842C0, void, StringWriter__ctor_1, (StringWriter * __this, IFormatProvider * formatProvider, MethodInfo * method));
DO_APP_FUNC(0x02384420, void, StringWriter__ctor_2, (StringWriter * __this, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x023844F0, void, StringWriter__ctor_3, (StringWriter * __this, StringBuilder * sb, IFormatProvider * formatProvider, MethodInfo * method));
DO_APP_FUNC(0x02384600, void, StringWriter_Close, (StringWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0089F980, void, StringWriter_Dispose, (StringWriter * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x02384620, Encoding *, StringWriter_get_Encoding, (StringWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x02384820, void, StringWriter_Write, (StringWriter * __this, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x02384850, void, StringWriter_Write_1, (StringWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02384A60, void, StringWriter_Write_2, (StringWriter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x02384AA0, String *, StringWriter_ToString, (StringWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, StringWriter__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextReader__ctor, (TextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02384AD0, void, TextReader_Close, (TextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02384B80, void, TextReader_Dispose, (TextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextReader_Dispose_1, (TextReader * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x00597B10, int32_t, TextReader_Peek, (TextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x00597B10, int32_t, TextReader_Read, (TextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02384C30, int32_t, TextReader_Read_1, (TextReader * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02384E50, String *, TextReader_ReadToEnd, (TextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02385040, String *, TextReader_ReadLine, (TextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02385370, TextReader *, TextReader_Synchronized, (TextReader * reader, MethodInfo * method));
DO_APP_FUNC(0x02385590, void, TextReader__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02385CC0, void, TextReader_NullTextReader__ctor, (TextReader_NullTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, int32_t, TextReader_NullTextReader_Read, (TextReader_NullTextReader * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, String *, TextReader_NullTextReader_ReadLine, (TextReader_NullTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02385D50, void, TextReader_SyncTextReader__ctor, (TextReader_SyncTextReader * __this, TextReader * t, MethodInfo * method));
DO_APP_FUNC(0x01F3EDB0, void, TextReader_SyncTextReader_Close, (TextReader_SyncTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02385E00, void, TextReader_SyncTextReader_Dispose, (TextReader_SyncTextReader * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x02287F30, int32_t, TextReader_SyncTextReader_Peek, (TextReader_SyncTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01F3EE40, int32_t, TextReader_SyncTextReader_Read, (TextReader_SyncTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02385EA0, int32_t, TextReader_SyncTextReader_Read_1, (TextReader_SyncTextReader * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01F3EED0, String *, TextReader_SyncTextReader_ReadLine, (TextReader_SyncTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02385ED0, String *, TextReader_SyncTextReader_ReadToEnd, (TextReader_SyncTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02385960, void, TextReader_c__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextReader_c__ctor, (TextReader_c * __this, MethodInfo * method));
DO_APP_FUNC(0x02385AA0, String *, TextReader_c___cctor_b__22_0, (TextReader_c * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x02385BC0, int32_t, TextReader_c___cctor_b__22_1, (TextReader_c * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x02385F00, String *, TextWriter_get_InitialNewLine, (MethodInfo * method));
DO_APP_FUNC(0x02385F10, void, TextWriter__ctor, (TextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x02385FD0, void, TextWriter__ctor_1, (TextWriter * __this, IFormatProvider * formatProvider, MethodInfo * method));
DO_APP_FUNC(0x023860A0, IFormatProvider *, TextWriter_get_FormatProvider, (TextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x023860E0, void, TextWriter_Close, (TextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextWriter_Dispose, (TextWriter * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x02386190, void, TextWriter_Dispose_1, (TextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextWriter_Flush, (TextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x02386240, String *, TextWriter_get_NewLine, (TextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x02386250, TextWriter *, TextWriter_Synchronized, (TextWriter * writer, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextWriter_Write, (TextWriter * __this, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x02386490, void, TextWriter_Write_1, (TextWriter * __this, Char__Array * buffer, MethodInfo * method));
DO_APP_FUNC(0x023864C0, void, TextWriter_Write_2, (TextWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x023866E0, void, TextWriter_Write_3, (TextWriter * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x02386740, void, TextWriter_Write_4, (TextWriter * __this, uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x023867A0, void, TextWriter_Write_5, (TextWriter * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x02386800, void, TextWriter_Write_6, (TextWriter * __this, uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x02386860, void, TextWriter_Write_7, (TextWriter * __this, float value, MethodInfo * method));
DO_APP_FUNC(0x023868C0, void, TextWriter_Write_8, (TextWriter * __this, double value, MethodInfo * method));
DO_APP_FUNC(0x02386920, void, TextWriter_Write_9, (TextWriter * __this, Decimal value, MethodInfo * method));
DO_APP_FUNC(0x02386990, void, TextWriter_Write_10, (TextWriter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x023869D0, void, TextWriter_Write_11, (TextWriter * __this, String * format, Object * arg0, MethodInfo * method));
DO_APP_FUNC(0x02386A80, void, TextWriter_Write_12, (TextWriter * __this, String * format, Object * arg0, Object * arg1, Object * arg2, MethodInfo * method));
DO_APP_FUNC(0x02386B10, void, TextWriter_Write_13, (TextWriter * __this, String * format, Object__Array * arg, MethodInfo * method));
DO_APP_FUNC(0x02386B70, void, TextWriter_WriteLine, (TextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x02386B90, void, TextWriter_WriteLine_1, (TextWriter * __this, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x02386BD0, void, TextWriter_WriteLine_2, (TextWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02386C10, void, TextWriter_WriteLine_3, (TextWriter * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x02386C50, void, TextWriter_WriteLine_4, (TextWriter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x02386ED0, void, TextWriter_WriteLine_5, (TextWriter * __this, String * format, Object * arg0, MethodInfo * method));
DO_APP_FUNC(0x02386F80, void, TextWriter_WriteLine_6, (TextWriter * __this, String * format, Object * arg0, Object * arg1, MethodInfo * method));
DO_APP_FUNC(0x02387040, void, TextWriter_WriteLine_7, (TextWriter * __this, String * format, Object * arg0, Object * arg1, Object * arg2, MethodInfo * method));
DO_APP_FUNC(0x023870D0, void, TextWriter_WriteLine_8, (TextWriter * __this, String * format, Object__Array * arg, MethodInfo * method));
DO_APP_FUNC(0x02387130, void, TextWriter__cctor, (MethodInfo * method));
DO_APP_FUNC(0x023881E0, void, TextWriter_NullTextWriter__ctor, (TextWriter_NullTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x023882B0, Encoding *, TextWriter_NullTextWriter_get_Encoding, (TextWriter_NullTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextWriter_NullTextWriter_Write, (TextWriter_NullTextWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextWriter_NullTextWriter_Write_1, (TextWriter_NullTextWriter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextWriter_NullTextWriter_WriteLine, (TextWriter_NullTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextWriter_NullTextWriter_WriteLine_1, (TextWriter_NullTextWriter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x023882C0, void, TextWriter_SyncTextWriter__ctor, (TextWriter_SyncTextWriter * __this, TextWriter * t, MethodInfo * method));
DO_APP_FUNC(0x01706DD0, Encoding *, TextWriter_SyncTextWriter_get_Encoding, (TextWriter_SyncTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01706D40, IFormatProvider *, TextWriter_SyncTextWriter_get_FormatProvider, (TextWriter_SyncTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01706E00, String *, TextWriter_SyncTextWriter_get_NewLine, (TextWriter_SyncTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01706D70, void, TextWriter_SyncTextWriter_Close, (TextWriter_SyncTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x02388390, void, TextWriter_SyncTextWriter_Dispose, (TextWriter_SyncTextWriter * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01706DA0, void, TextWriter_SyncTextWriter_Flush, (TextWriter_SyncTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01706E30, void, TextWriter_SyncTextWriter_Write, (TextWriter_SyncTextWriter * __this, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x0199EFC0, void, TextWriter_SyncTextWriter_Write_1, (TextWriter_SyncTextWriter * __this, Char__Array * buffer, MethodInfo * method));
DO_APP_FUNC(0x02388430, void, TextWriter_SyncTextWriter_Write_2, (TextWriter_SyncTextWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02388460, void, TextWriter_SyncTextWriter_Write_3, (TextWriter_SyncTextWriter * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x02181070, void, TextWriter_SyncTextWriter_Write_4, (TextWriter_SyncTextWriter * __this, uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x02388490, void, TextWriter_SyncTextWriter_Write_5, (TextWriter_SyncTextWriter * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x023884C0, void, TextWriter_SyncTextWriter_Write_6, (TextWriter_SyncTextWriter * __this, uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x023884F0, void, TextWriter_SyncTextWriter_Write_7, (TextWriter_SyncTextWriter * __this, float value, MethodInfo * method));
DO_APP_FUNC(0x01BD2820, void, TextWriter_SyncTextWriter_Write_8, (TextWriter_SyncTextWriter * __this, double value, MethodInfo * method));
DO_APP_FUNC(0x02388520, void, TextWriter_SyncTextWriter_Write_9, (TextWriter_SyncTextWriter * __this, Decimal value, MethodInfo * method));
DO_APP_FUNC(0x01706B90, void, TextWriter_SyncTextWriter_Write_10, (TextWriter_SyncTextWriter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x02388560, void, TextWriter_SyncTextWriter_Write_11, (TextWriter_SyncTextWriter * __this, String * format, Object * arg0, MethodInfo * method));
DO_APP_FUNC(0x02388590, void, TextWriter_SyncTextWriter_Write_12, (TextWriter_SyncTextWriter * __this, String * format, Object * arg0, Object * arg1, Object * arg2, MethodInfo * method));
DO_APP_FUNC(0x023885C0, void, TextWriter_SyncTextWriter_Write_13, (TextWriter_SyncTextWriter * __this, String * format, Object__Array * arg, MethodInfo * method));
DO_APP_FUNC(0x023885F0, void, TextWriter_SyncTextWriter_WriteLine, (TextWriter_SyncTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x02388620, void, TextWriter_SyncTextWriter_WriteLine_1, (TextWriter_SyncTextWriter * __this, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x02388650, void, TextWriter_SyncTextWriter_WriteLine_2, (TextWriter_SyncTextWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02388680, void, TextWriter_SyncTextWriter_WriteLine_3, (TextWriter_SyncTextWriter * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x023886B0, void, TextWriter_SyncTextWriter_WriteLine_4, (TextWriter_SyncTextWriter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x023886E0, void, TextWriter_SyncTextWriter_WriteLine_5, (TextWriter_SyncTextWriter * __this, String * format, Object * arg0, MethodInfo * method));
DO_APP_FUNC(0x02388710, void, TextWriter_SyncTextWriter_WriteLine_6, (TextWriter_SyncTextWriter * __this, String * format, Object * arg0, Object * arg1, MethodInfo * method));
DO_APP_FUNC(0x02388740, void, TextWriter_SyncTextWriter_WriteLine_7, (TextWriter_SyncTextWriter * __this, String * format, Object * arg0, Object * arg1, Object * arg2, MethodInfo * method));
DO_APP_FUNC(0x0201CA50, void, TextWriter_SyncTextWriter_WriteLine_8, (TextWriter_SyncTextWriter * __this, String * format, Object__Array * arg, MethodInfo * method));
DO_APP_FUNC(0x023879C0, void, TextWriter_c__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextWriter_c__ctor, (TextWriter_c * __this, MethodInfo * method));
DO_APP_FUNC(0x02387B00, void, TextWriter_c___cctor_b__73_0, (TextWriter_c * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x02387BF0, void, TextWriter_c___cctor_b__73_1, (TextWriter_c * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x02387CE0, void, TextWriter_c___cctor_b__73_2, (TextWriter_c * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x02387DE0, void, TextWriter_c___cctor_b__73_3, (TextWriter_c * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x02387ED0, void, TextWriter_c___cctor_b__73_4, (TextWriter_c * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x02387FC0, void, TextWriter_c___cctor_b__73_5, (TextWriter_c * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x023880C0, void, TextWriter_c___cctor_b__73_6, (TextWriter_c * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x02389540, void, UnmanagedMemoryStream__ctor, (UnmanagedMemoryStream * __this, MethodInfo * method));
DO_APP_FUNC(0x023895E0, void, UnmanagedMemoryStream__ctor_1, (UnmanagedMemoryStream * __this, uint8_t * pointer, int64_t length, MethodInfo * method));
DO_APP_FUNC(0x023896C0, void, UnmanagedMemoryStream__ctor_2, (UnmanagedMemoryStream * __this, uint8_t * pointer, int64_t length, int64_t capacity, FileAccess__Enum access, bool skipSecurityCheck, MethodInfo * method));
DO_APP_FUNC(0x023897B0, void, UnmanagedMemoryStream_Initialize, (UnmanagedMemoryStream * __this, uint8_t * pointer, int64_t length, int64_t capacity, FileAccess__Enum access, bool skipSecurityCheck, MethodInfo * method));
DO_APP_FUNC(0x02389A40, bool, UnmanagedMemoryStream_get_CanRead, (UnmanagedMemoryStream * __this, MethodInfo * method));
DO_APP_FUNC(0x004F2320, bool, UnmanagedMemoryStream_get_CanSeek, (UnmanagedMemoryStream * __this, MethodInfo * method));
DO_APP_FUNC(0x02389A50, bool, UnmanagedMemoryStream_get_CanWrite, (UnmanagedMemoryStream * __this, MethodInfo * method));
DO_APP_FUNC(0x02389A70, void, UnmanagedMemoryStream_Dispose, (UnmanagedMemoryStream * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x02389A80, void, UnmanagedMemoryStream_Flush, (UnmanagedMemoryStream * __this, MethodInfo * method));
DO_APP_FUNC(0x02389AA0, Task *, UnmanagedMemoryStream_FlushAsync, (UnmanagedMemoryStream * __this, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x02389BE0, int64_t, UnmanagedMemoryStream_get_Length, (UnmanagedMemoryStream * __this, MethodInfo * method));
DO_APP_FUNC(0x02389C10, int64_t, UnmanagedMemoryStream_get_Position, (UnmanagedMemoryStream * __this, MethodInfo * method));
DO_APP_FUNC(0x02389C50, void, UnmanagedMemoryStream_set_Position, (UnmanagedMemoryStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x02389D40, uint8_t *, UnmanagedMemoryStream_get_PositionPointer, (UnmanagedMemoryStream * __this, MethodInfo * method));
DO_APP_FUNC(0x02389E70, int32_t, UnmanagedMemoryStream_Read, (UnmanagedMemoryStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0238A230, Task_1_System_Int32_ *, UnmanagedMemoryStream_ReadAsync, (UnmanagedMemoryStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x0238A600, int32_t, UnmanagedMemoryStream_ReadByte, (UnmanagedMemoryStream * __this, MethodInfo * method));
DO_APP_FUNC(0x0238A790, int64_t, UnmanagedMemoryStream_Seek, (UnmanagedMemoryStream * __this, int64_t offset, SeekOrigin__Enum loc, MethodInfo * method));
DO_APP_FUNC(0x0238A980, void, UnmanagedMemoryStream_SetLength, (UnmanagedMemoryStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x0238AB70, void, UnmanagedMemoryStream_Write, (UnmanagedMemoryStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0238B020, Task *, UnmanagedMemoryStream_WriteAsync, (UnmanagedMemoryStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x0238B2B0, void, UnmanagedMemoryStream_WriteByte, (UnmanagedMemoryStream * __this, uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, PathInternal_IsPartiallyQualified, (String * path, MethodInfo * method));
DO_APP_FUNC(0x0237AF80, bool, PathInternal_HasIllegalCharacters, (String * path, bool checkAdditional, MethodInfo * method));
DO_APP_FUNC(0x01E03AC0, void, DirectoryInfo__ctor, (DirectoryInfo * __this, String * path, MethodInfo * method));
DO_APP_FUNC(0x01E03AD0, void, DirectoryInfo__ctor_1, (DirectoryInfo * __this, String * path, bool simpleOriginalPath, MethodInfo * method));
DO_APP_FUNC(0x01E03C70, void, DirectoryInfo__ctor_2, (DirectoryInfo * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01E03CA0, void, DirectoryInfo_Initialize, (DirectoryInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01E03F50, bool, DirectoryInfo_get_Exists, (DirectoryInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, String *, DirectoryInfo_get_Name, (DirectoryInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01E03F90, DirectoryInfo *, DirectoryInfo_get_Parent, (DirectoryInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01E04110, void, DirectoryInfo_Create, (DirectoryInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01E04120, FileInfo__Array *, DirectoryInfo_GetFiles, (DirectoryInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01E041B0, FileInfo__Array *, DirectoryInfo_GetFiles_1, (DirectoryInfo * __this, String * searchPattern, MethodInfo * method));
DO_APP_FUNC(0x01E044C0, DirectoryInfo__Array *, DirectoryInfo_GetDirectories, (DirectoryInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01E04550, DirectoryInfo__Array *, DirectoryInfo_GetDirectories_1, (DirectoryInfo * __this, String * searchPattern, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, String *, DirectoryInfo_ToString, (DirectoryInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01E04920, int32_t, DirectoryInfo_GetFilesSubdirs, (DirectoryInfo * __this, ArrayList * l, String * pattern, MethodInfo * method));
DO_APP_FUNC(0x01E04A70, FileInfo__Array *, DirectoryInfo_GetFiles_2, (DirectoryInfo * __this, String * searchPattern, SearchOption__Enum searchOption, MethodInfo * method));
DO_APP_FUNC(0x01E04EB0, void, DirectoryInfo_CheckPath, (DirectoryInfo * __this, String * path, MethodInfo * method));
DO_APP_FUNC(0x01E05270, void, File_Copy, (String * sourceFileName, String * destFileName, MethodInfo * method));
DO_APP_FUNC(0x01E05280, void, File_Copy_1, (String * sourceFileName, String * destFileName, bool overwrite, MethodInfo * method));
DO_APP_FUNC(0x01E059B0, FileStream *, File_Create, (String * path, MethodInfo * method));
DO_APP_FUNC(0x01E05B20, FileStream *, File_Create_1, (String * path, int32_t bufferSize, MethodInfo * method));
DO_APP_FUNC(0x01E05CA0, StreamWriter *, File_CreateText, (String * path, MethodInfo * method));
DO_APP_FUNC(0x01E05DF0, void, File_Delete, (String * path, MethodInfo * method));
DO_APP_FUNC(0x01E06090, bool, File_Exists, (String * path, MethodInfo * method));
DO_APP_FUNC(0x01E06240, FileAttributes__Enum, File_GetAttributes, (String * path, MethodInfo * method));
DO_APP_FUNC(0x01E06360, DateTime, File_GetLastWriteTime, (String * path, MethodInfo * method));
DO_APP_FUNC(0x01E06620, void, File_Move, (String * sourceFileName, String * destFileName, MethodInfo * method));
DO_APP_FUNC(0x01E06B30, FileStream *, File_Open, (String * path, FileMode__Enum mode, MethodInfo * method));
DO_APP_FUNC(0x01E06CC0, FileStream *, File_Open_1, (String * path, FileMode__Enum mode, FileAccess__Enum access, FileShare__Enum share, MethodInfo * method));
DO_APP_FUNC(0x01E06E50, FileStream *, File_OpenRead, (String * path, MethodInfo * method));
DO_APP_FUNC(0x01E06FD0, StreamReader *, File_OpenText, (String * path, MethodInfo * method));
DO_APP_FUNC(0x01E07120, FileStream *, File_OpenWrite, (String * path, MethodInfo * method));
DO_APP_FUNC(0x01E07290, void, File_SetAttributes, (String * path, FileAttributes__Enum fileAttributes, MethodInfo * method));
DO_APP_FUNC(0x01E07490, Byte__Array *, File_ReadAllBytes, (String * path, MethodInfo * method));
DO_APP_FUNC(0x01E076A0, String__Array *, File_ReadAllLines, (String * path, MethodInfo * method));
DO_APP_FUNC(0x01E077D0, String__Array *, File_ReadAllLines_1, (StreamReader * reader, MethodInfo * method));
DO_APP_FUNC(0x01E07A10, String *, File_ReadAllText, (String * path, MethodInfo * method));
DO_APP_FUNC(0x01E07C10, void, File_WriteAllBytes, (String * path, Byte__Array * bytes, MethodInfo * method));
DO_APP_FUNC(0x01E07D50, void, File_WriteAllLines, (String * path, String__Array * contents, MethodInfo * method));
DO_APP_FUNC(0x01E07F70, void, File_WriteAllLines_1, (StreamWriter * writer, String__Array * contents, MethodInfo * method));
DO_APP_FUNC(0x01E07FF0, void, File_WriteAllText, (String * path, String * contents, MethodInfo * method));
DO_APP_FUNC(0x01E080B0, void, File_WriteAllText_1, (String * path, String * contents, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x01E082E0, DateTime, File_get_DefaultLocalFileTime, (MethodInfo * method));
DO_APP_FUNC(0x01E08470, int32_t, File_FillAttributeInfo, (String * path, MonoIOStat * data, bool tryagain, bool returnErrorOnNotFound, MethodInfo * method));
DO_APP_FUNC(0x01E09CF0, void, FileStream__ctor, (FileStream * __this, void * handle, FileAccess__Enum access, bool ownsHandle, int32_t bufferSize, MethodInfo * method));
DO_APP_FUNC(0x01E09D20, void, FileStream__ctor_1, (FileStream * __this, void * handle, FileAccess__Enum access, bool ownsHandle, int32_t bufferSize, bool isAsync, MethodInfo * method));
DO_APP_FUNC(0x01E09D50, void, FileStream__ctor_2, (FileStream * __this, void * handle, FileAccess__Enum access, bool ownsHandle, int32_t bufferSize, bool isAsync, bool isConsoleWrapper, MethodInfo * method));
DO_APP_FUNC(0x01E09FA0, void, FileStream__ctor_3, (FileStream * __this, String * path, FileMode__Enum mode, MethodInfo * method));
DO_APP_FUNC(0x01E09FF0, void, FileStream__ctor_4, (FileStream * __this, String * path, FileMode__Enum mode, FileAccess__Enum access, MethodInfo * method));
DO_APP_FUNC(0x01E0A040, void, FileStream__ctor_5, (FileStream * __this, String * path, FileMode__Enum mode, FileAccess__Enum access, FileShare__Enum share, MethodInfo * method));
DO_APP_FUNC(0x01E0A070, void, FileStream__ctor_6, (FileStream * __this, String * path, FileMode__Enum mode, FileAccess__Enum access, FileShare__Enum share, int32_t bufferSize, MethodInfo * method));
DO_APP_FUNC(0x01E0A0B0, void, FileStream__ctor_7, (FileStream * __this, String * path, FileMode__Enum mode, FileAccess__Enum access, FileShare__Enum share, int32_t bufferSize, bool useAsync, MethodInfo * method));
DO_APP_FUNC(0x01E0A100, void, FileStream__ctor_8, (FileStream * __this, String * path, FileMode__Enum mode, FileAccess__Enum access, FileShare__Enum share, int32_t bufferSize, FileOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x01E0A140, void, FileStream__ctor_9, (FileStream * __this, String * path, FileMode__Enum mode, FileAccess__Enum access, FileShare__Enum share, int32_t bufferSize, FileOptions__Enum options, String * msgPath, bool bFromProxy, bool useLongPath, bool checkHost, MethodInfo * method));
DO_APP_FUNC(0x01E0A160, void, FileStream__ctor_10, (FileStream * __this, String * path, FileMode__Enum mode, FileAccess__Enum access, FileShare__Enum share, int32_t bufferSize, bool isAsync, bool anonymous, MethodInfo * method));
DO_APP_FUNC(0x01E0A1C0, void, FileStream__ctor_11, (FileStream * __this, String * path, FileMode__Enum mode, FileAccess__Enum access, FileShare__Enum share, int32_t bufferSize, bool anonymous, FileOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x01E0AB00, void, FileStream_Init, (FileStream * __this, SafeFileHandle * safeHandle, FileAccess__Enum access, bool ownsHandle, int32_t bufferSize, bool isAsync, bool isConsoleWrapper, MethodInfo * method));
DO_APP_FUNC(0x01E0AE50, bool, FileStream_get_CanRead, (FileStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E0AE60, bool, FileStream_get_CanWrite, (FileStream * __this, MethodInfo * method));
DO_APP_FUNC(0x00F83F60, bool, FileStream_get_CanSeek, (FileStream * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, FileStream_get_Name, (FileStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E0AE80, int64_t, FileStream_get_Length, (FileStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E0B030, int64_t, FileStream_get_Position, (FileStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E0B1F0, void, FileStream_set_Position, (FileStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01E0B2E0, SafeFileHandle *, FileStream_get_SafeFileHandle, (FileStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E0B320, void, FileStream_ExposeHandle, (FileStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E0B350, int32_t, FileStream_ReadByte, (FileStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E0B530, void, FileStream_WriteByte, (FileStream * __this, uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x01E0B700, int32_t, FileStream_Read, (FileStream * __this, Byte__Array * array, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E0BA50, int32_t, FileStream_ReadInternal, (FileStream * __this, Byte__Array * dest, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E0BB20, IAsyncResult *, FileStream_BeginRead, (FileStream * __this, Byte__Array * array, int32_t offset, int32_t numBytes, AsyncCallback * userCallback, Object * stateObject, MethodInfo * method));
DO_APP_FUNC(0x01E0BF20, int32_t, FileStream_EndRead, (FileStream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01E0C120, void, FileStream_Write, (FileStream * __this, Byte__Array * array, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E0C3B0, void, FileStream_WriteInternal, (FileStream * __this, Byte__Array * src, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E0C640, IAsyncResult *, FileStream_BeginWrite, (FileStream * __this, Byte__Array * array, int32_t offset, int32_t numBytes, AsyncCallback * userCallback, Object * stateObject, MethodInfo * method));
DO_APP_FUNC(0x01E0CB30, void, FileStream_EndWrite, (FileStream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01E0CD10, int64_t, FileStream_Seek, (FileStream * __this, int64_t offset, SeekOrigin__Enum origin, MethodInfo * method));
DO_APP_FUNC(0x01E0CFD0, void, FileStream_SetLength, (FileStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01E0D240, void, FileStream_Flush, (FileStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E0D300, void, FileStream_Finalize, (FileStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E0D380, void, FileStream_Dispose, (FileStream * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01E0D730, Task *, FileStream_FlushAsync, (FileStream * __this, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x01E0D810, Task_1_System_Int32_ *, FileStream_ReadAsync, (FileStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x01E0D820, Task *, FileStream_WriteAsync, (FileStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x01E0D830, int32_t, FileStream_ReadSegment, (FileStream * __this, Byte__Array * dest, int32_t dest_offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E0D930, int32_t, FileStream_WriteSegment, (FileStream * __this, Byte__Array * src, int32_t src_offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E0D9A0, void, FileStream_FlushBuffer, (FileStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E0DBD0, void, FileStream_FlushBufferIfDirty, (FileStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E0DBE0, void, FileStream_RefillBuffer, (FileStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E0DC20, int32_t, FileStream_ReadData, (FileStream * __this, SafeHandle * safeHandle, Byte__Array * buf, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E0DD90, void, FileStream_InitBuffer, (FileStream * __this, int32_t size, bool isZeroSize, MethodInfo * method));
DO_APP_FUNC(0x01E0E080, String *, FileStream_GetSecureFileName, (FileStream * __this, String * filename, MethodInfo * method));
DO_APP_FUNC(0x01E0E160, String *, FileStream_GetSecureFileName_1, (FileStream * __this, String * filename, bool full, MethodInfo * method));
DO_APP_FUNC(0x01E0E270, void, FileStream__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00611810, void, FileStream_ReadDelegate__ctor, (FileStream_ReadDelegate * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01D2E1F0, int32_t, FileStream_ReadDelegate_Invoke, (FileStream_ReadDelegate * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0236EEE0, IAsyncResult *, FileStream_ReadDelegate_BeginInvoke, (FileStream_ReadDelegate * __this, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00F550D0, int32_t, FileStream_ReadDelegate_EndInvoke, (FileStream_ReadDelegate * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, FileStream_WriteDelegate__ctor, (FileStream_WriteDelegate * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01D2E820, void, FileStream_WriteDelegate_Invoke, (FileStream_WriteDelegate * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0236EFC0, IAsyncResult *, FileStream_WriteDelegate_BeginInvoke, (FileStream_WriteDelegate * __this, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, FileStream_WriteDelegate_EndInvoke, (FileStream_WriteDelegate * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x0236F0A0, void, FileStreamAsyncResult__ctor, (FileStreamAsyncResult * __this, AsyncCallback * cb, Object * state, MethodInfo * method));
DO_APP_FUNC(0x0236F2E0, void, FileStreamAsyncResult_CBWrapper, (IAsyncResult * ares, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Object *, FileStreamAsyncResult_get_AsyncState, (FileStreamAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A050, bool, FileStreamAsyncResult_get_CompletedSynchronously, (FileStreamAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, WaitHandle *, FileStreamAsyncResult_get_AsyncWaitHandle, (FileStreamAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A280, bool, FileStreamAsyncResult_get_IsCompleted, (FileStreamAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x023721F0, Exception *, MonoIO_GetException, (MonoIOError__Enum error, MethodInfo * method));
DO_APP_FUNC(0x02372480, Exception *, MonoIO_GetException_1, (String * path, MonoIOError__Enum error, MethodInfo * method));
DO_APP_FUNC(0x02373560, bool, MonoIO_CreateDirectory, (uint16_t * path, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x023735E0, bool, MonoIO_CreateDirectory_1, (String * path, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02373700, bool, MonoIO_RemoveDirectory, (uint16_t * path, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02373780, bool, MonoIO_RemoveDirectory_1, (String * path, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x023738A0, String *, MonoIO_GetCurrentDirectory, (MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02373930, bool, MonoIO_MoveFile, (uint16_t * path, uint16_t * dest, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02373A30, bool, MonoIO_MoveFile_1, (String * path, String * dest, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02373BD0, bool, MonoIO_CopyFile, (uint16_t * path, uint16_t * dest, bool overwrite, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02373CE0, bool, MonoIO_CopyFile_1, (String * path, String * dest, bool overwrite, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02373E90, bool, MonoIO_DeleteFile, (uint16_t * path, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02373F10, bool, MonoIO_DeleteFile_1, (String * path, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02374030, FileAttributes__Enum, MonoIO_GetFileAttributes, (uint16_t * path, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x023740B0, FileAttributes__Enum, MonoIO_GetFileAttributes_1, (String * path, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x023741D0, bool, MonoIO_SetFileAttributes, (uint16_t * path, FileAttributes__Enum attrs, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02374260, bool, MonoIO_SetFileAttributes_1, (String * path, FileAttributes__Enum attrs, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02374390, MonoFileType__Enum, MonoIO_GetFileType, (void * handle, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x023743A0, MonoFileType__Enum, MonoIO_GetFileType_1, (SafeHandle * safeHandle, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02374510, void *, MonoIO_FindFirstFile, (uint16_t * pathWithPattern, String * * fileName, int32_t * fileAttr, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x02374520, void *, MonoIO_FindFirstFile_1, (String * pathWithPattern, String * * fileName, int32_t * fileAttr, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x02374600, bool, MonoIO_FindNextFile, (void * hnd, String * * fileName, int32_t * fileAttr, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x02374610, bool, MonoIO_FindCloseFile, (void * hnd, MethodInfo * method));
DO_APP_FUNC(0x02374630, bool, MonoIO_Exists, (String * path, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x023746F0, bool, MonoIO_ExistsFile, (String * path, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x023747C0, bool, MonoIO_ExistsDirectory, (String * path, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02374890, bool, MonoIO_ExistsSymlink, (String * path, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02374960, bool, MonoIO_GetFileStat, (uint16_t * path, MonoIOStat * stat, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02374A60, bool, MonoIO_GetFileStat_1, (String * path, MonoIOStat * stat, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02374C00, void *, MonoIO_Open, (uint16_t * filename, FileMode__Enum mode, FileAccess__Enum access, FileShare__Enum share, FileOptions__Enum options, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02374CC0, void *, MonoIO_Open_1, (String * filename, FileMode__Enum mode, FileAccess__Enum access, FileShare__Enum share, FileOptions__Enum options, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02374E10, bool, MonoIO_Close, (void * handle, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02374E50, int32_t, MonoIO_Read, (void * handle, Byte__Array * dest, int32_t dest_offset, int32_t count, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02374EE0, int32_t, MonoIO_Read_1, (SafeHandle * safeHandle, Byte__Array * dest, int32_t dest_offset, int32_t count, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x023750D0, int32_t, MonoIO_Write, (void * handle, Byte__Array * src, int32_t src_offset, int32_t count, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02375100, int32_t, MonoIO_Write_1, (SafeHandle * safeHandle, Byte__Array * src, int32_t src_offset, int32_t count, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x023752C0, int64_t, MonoIO_Seek, (void * handle, int64_t offset, SeekOrigin__Enum origin, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02375300, int64_t, MonoIO_Seek_1, (SafeHandle * safeHandle, int64_t offset, SeekOrigin__Enum origin, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x023754B0, int64_t, MonoIO_GetLength, (void * handle, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x023754F0, int64_t, MonoIO_GetLength_1, (SafeHandle * safeHandle, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02375680, bool, MonoIO_SetLength, (void * handle, int64_t length, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02375690, bool, MonoIO_SetLength_1, (SafeHandle * safeHandle, int64_t length, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02375810, void *, MonoIO_get_ConsoleOutput, (MethodInfo * method));
DO_APP_FUNC(0x02375820, void *, MonoIO_get_ConsoleInput, (MethodInfo * method));
DO_APP_FUNC(0x02375830, void *, MonoIO_get_ConsoleError, (MethodInfo * method));
DO_APP_FUNC(0x02375840, bool, MonoIO_CreatePipe, (void * * read_handle, void * * write_handle, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x02375890, bool, MonoIO_DuplicateHandle, (void * source_process_handle, void * source_handle, void * target_process_handle, void * * target_handle, int32_t access, int32_t inherit, int32_t options, MonoIOError__Enum * error, MethodInfo * method));
DO_APP_FUNC(0x00E3F290, uint16_t, MonoIO_get_VolumeSeparatorChar, (MethodInfo * method));
DO_APP_FUNC(0x023758E0, uint16_t, MonoIO_get_DirectorySeparatorChar, (MethodInfo * method));
DO_APP_FUNC(0x00E3AD20, uint16_t, MonoIO_get_AltDirectorySeparatorChar, (MethodInfo * method));
DO_APP_FUNC(0x00E40920, uint16_t, MonoIO_get_PathSeparator, (MethodInfo * method));
DO_APP_FUNC(0x0173D7D0, void, MonoIO_DumpHandles, (MethodInfo * method));
DO_APP_FUNC(0x023758F0, bool, MonoIO_RemapPath, (String * path, String * * newPath, MethodInfo * method));
DO_APP_FUNC(0x02375900, void, MonoIO__cctor, (MethodInfo * method));
DO_APP_FUNC(0x023759B0, String *, Path_ChangeExtension, (String * path, String * extension, MethodInfo * method));
DO_APP_FUNC(0x02375C20, String *, Path_Combine, (String * path1, String * path2, MethodInfo * method));
DO_APP_FUNC(0x02375F90, String *, Path_CleanPath, (String * s, MethodInfo * method));
DO_APP_FUNC(0x023764A0, String *, Path_GetDirectoryName, (String * path, MethodInfo * method));
DO_APP_FUNC(0x02376920, String *, Path_GetExtension, (String * path, MethodInfo * method));
DO_APP_FUNC(0x02376A90, String *, Path_GetFileName, (String * path, MethodInfo * method));
DO_APP_FUNC(0x02376C10, String *, Path_GetFileNameWithoutExtension, (String * path, MethodInfo * method));
DO_APP_FUNC(0x02376CC0, String *, Path_GetFullPath, (String * path, MethodInfo * method));
DO_APP_FUNC(0x02376D60, String *, Path_GetFullPathInternal, (String * path, MethodInfo * method));
DO_APP_FUNC(0x02376E00, int32_t, Path_GetFullPathName, (String * path, int32_t numBufferChars, StringBuilder * buffer, void * * lpFilePartOrNull, MethodInfo * method));
DO_APP_FUNC(0x02377050, String *, Path_GetFullPathName_1, (String * path, MethodInfo * method));
DO_APP_FUNC(0x023773A0, String *, Path_WindowsDriveAdjustment, (String * path, MethodInfo * method));
DO_APP_FUNC(0x023776B0, String *, Path_InsecureGetFullPath, (String * path, MethodInfo * method));
DO_APP_FUNC(0x02377D50, bool, Path_IsDirectorySeparator, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x02377E30, String *, Path_GetPathRoot, (String * path, MethodInfo * method));
DO_APP_FUNC(0x02378350, String *, Path_GetTempFileName, (MethodInfo * method));
DO_APP_FUNC(0x02378810, String *, Path_GetTempPath, (MethodInfo * method));
DO_APP_FUNC(0x02378970, String *, Path_get_temp_path, (MethodInfo * method));
DO_APP_FUNC(0x02378980, bool, Path_IsPathRooted, (String * path, MethodInfo * method));
DO_APP_FUNC(0x02378BA0, Char__Array *, Path_GetInvalidFileNameChars, (MethodInfo * method));
DO_APP_FUNC(0x02378C40, Char__Array *, Path_GetInvalidPathChars, (MethodInfo * method));
DO_APP_FUNC(0x02378CE0, int32_t, Path_findExtension, (String * path, MethodInfo * method));
DO_APP_FUNC(0x02378DD0, void, Path__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02379040, String *, Path_GetServerAndShare, (String * path, MethodInfo * method));
DO_APP_FUNC(0x023791D0, bool, Path_SameRoot, (String * root, String * path, MethodInfo * method));
DO_APP_FUNC(0x02379520, String *, Path_CanonicalizePath, (String * path, MethodInfo * method));
DO_APP_FUNC(0x02379E70, String *, Path_Combine_1, (String__Array * paths, MethodInfo * method));
DO_APP_FUNC(0x0237A2D0, String *, Path_Combine_2, (String * path1, String * path2, String * path3, MethodInfo * method));
DO_APP_FUNC(0x0237A530, void, Path_Validate, (String * path, MethodInfo * method));
DO_APP_FUNC(0x0237A5D0, void, Path_Validate_1, (String * path, String * parameterName, MethodInfo * method));
DO_APP_FUNC(0x0237A7C0, String *, Path_get_DirectorySeparatorCharAsString, (MethodInfo * method));
DO_APP_FUNC(0x0237A860, Char__Array *, Path_get_TrimEndChars, (MethodInfo * method));
DO_APP_FUNC(0x0237A900, void, Path_CheckSearchPattern, (String * searchPattern, MethodInfo * method));
DO_APP_FUNC(0x0237AB00, void, Path_CheckInvalidPathChars, (String * path, bool checkAdditional, MethodInfo * method));
DO_APP_FUNC(0x0237ACA0, String *, Path_InternalCombine, (String * path1, String * path2, MethodInfo * method));
DO_APP_FUNC(0x02388770, void, UnexceptionalStreamReader__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02388850, void, UnexceptionalStreamReader__ctor, (UnexceptionalStreamReader * __this, Stream * stream, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x02388910, int32_t, UnexceptionalStreamReader_Peek, (UnexceptionalStreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x023889B0, int32_t, UnexceptionalStreamReader_Read, (UnexceptionalStreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02388A50, int32_t, UnexceptionalStreamReader_Read_1, (UnexceptionalStreamReader * __this, Char__Array * dest_buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02388CB0, bool, UnexceptionalStreamReader_CheckEOL, (UnexceptionalStreamReader * __this, uint16_t current, MethodInfo * method));
DO_APP_FUNC(0x02388F50, String *, UnexceptionalStreamReader_ReadLine, (UnexceptionalStreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02388FF0, String *, UnexceptionalStreamReader_ReadToEnd, (UnexceptionalStreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02389090, void, UnexceptionalStreamWriter__ctor, (UnexceptionalStreamWriter * __this, Stream * stream, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x02389160, void, UnexceptionalStreamWriter_Flush, (UnexceptionalStreamWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x02389210, void, UnexceptionalStreamWriter_Write, (UnexceptionalStreamWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x023892D0, void, UnexceptionalStreamWriter_Write_1, (UnexceptionalStreamWriter * __this, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x02389370, void, UnexceptionalStreamWriter_Write_2, (UnexceptionalStreamWriter * __this, Char__Array * value, MethodInfo * method));
DO_APP_FUNC(0x023894A0, void, UnexceptionalStreamWriter_Write_3, (UnexceptionalStreamWriter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E00E50, void, CStreamReader__ctor, (CStreamReader * __this, Stream * stream, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x01E00F90, int32_t, CStreamReader_Peek, (CStreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01E01030, int32_t, CStreamReader_Read, (CStreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01E01170, int32_t, CStreamReader_Read_1, (CStreamReader * __this, Char__Array * dest, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E01340, String *, CStreamReader_ReadLine, (CStreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01E013F0, String *, CStreamReader_ReadToEnd, (CStreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01E014A0, void, CStreamWriter__ctor, (CStreamWriter * __this, Stream * stream, Encoding * encoding, bool leaveOpen, MethodInfo * method));
DO_APP_FUNC(0x01E01600, void, CStreamWriter_Write, (CStreamWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E018F0, void, CStreamWriter_Write_1, (CStreamWriter * __this, uint16_t val, MethodInfo * method));
DO_APP_FUNC(0x01E01AE0, void, CStreamWriter_InternalWriteString, (CStreamWriter * __this, String * val, MethodInfo * method));
DO_APP_FUNC(0x01E01B80, void, CStreamWriter_InternalWriteChar, (CStreamWriter * __this, uint16_t val, MethodInfo * method));
DO_APP_FUNC(0x01E01C20, void, CStreamWriter_InternalWriteChars, (CStreamWriter * __this, Char__Array * buffer, int32_t n, MethodInfo * method));
DO_APP_FUNC(0x01E01CE0, void, CStreamWriter_Write_2, (CStreamWriter * __this, Char__Array * val, MethodInfo * method));
DO_APP_FUNC(0x01E01D20, void, CStreamWriter_Write_3, (CStreamWriter * __this, String * val, MethodInfo * method));
DO_APP_FUNC(0x01A21B10, int32_t, CharUnicodeInfo_InternalConvertToUtf32, (String * s, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01A21C30, bool, CharUnicodeInfo_IsWhiteSpace, (String * s, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01A21D00, bool, CharUnicodeInfo_IsWhiteSpace_1, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x01A21DB0, UnicodeCategory__Enum, CharUnicodeInfo_GetUnicodeCategory, (uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x01A21E50, UnicodeCategory__Enum, CharUnicodeInfo_GetUnicodeCategory_1, (String * s, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01A21F70, UnicodeCategory__Enum, CharUnicodeInfo_InternalGetUnicodeCategory, (int32_t ch, MethodInfo * method));
DO_APP_FUNC(0x01A22010, uint8_t, CharUnicodeInfo_InternalGetCategoryValue, (int32_t ch, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x01A22190, UnicodeCategory__Enum, CharUnicodeInfo_InternalGetUnicodeCategory_1, (String * value, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01A22300, void, CharUnicodeInfo__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CharUnicodeInfo_Debug_Assert, (bool condition, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A1E410, DateTime, Calendar_get_MinSupportedDateTime, (Calendar * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1E4B0, DateTime, Calendar_get_MaxSupportedDateTime, (Calendar * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1E550, void, Calendar__ctor, (Calendar * __this, MethodInfo * method));
DO_APP_FUNC(0x00597B10, int32_t, Calendar_get_ID, (Calendar * __this, MethodInfo * method));
DO_APP_FUNC(0x0173D7B0, int32_t, Calendar_get_BaseCalendarID, (Calendar * __this, MethodInfo * method));
DO_APP_FUNC(0x00724AE0, bool, Calendar_get_IsReadOnly, (Calendar * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1E560, Object *, Calendar_Clone, (Calendar * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1E700, Calendar *, Calendar_ReadOnly, (Calendar * calendar, MethodInfo * method));
DO_APP_FUNC(0x007EA280, void, Calendar_SetReadOnlyState, (Calendar * __this, bool readOnly, MethodInfo * method));
DO_APP_FUNC(0x01A1E880, int32_t, Calendar_get_CurrentEraValue, (Calendar * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1E960, bool, Calendar_IsLeapYear, (Calendar * __this, int32_t year, MethodInfo * method));
DO_APP_FUNC(0x01A1E980, DateTime, Calendar_ToDateTime, (Calendar * __this, int32_t year, int32_t month, int32_t day, int32_t hour, int32_t minute, int32_t second, int32_t millisecond, MethodInfo * method));
DO_APP_FUNC(0x01A1E9E0, bool, Calendar_TryToDateTime, (Calendar * __this, int32_t year, int32_t month, int32_t day, int32_t hour, int32_t minute, int32_t second, int32_t millisecond, int32_t era, DateTime * result, MethodInfo * method));
DO_APP_FUNC(0x01A1EB20, bool, Calendar_IsValidYear, (Calendar * __this, int32_t year, int32_t era, MethodInfo * method));
DO_APP_FUNC(0x01A1EBB0, bool, Calendar_IsValidMonth, (Calendar * __this, int32_t year, int32_t month, int32_t era, MethodInfo * method));
DO_APP_FUNC(0x01A1EC30, bool, Calendar_IsValidDay, (Calendar * __this, int32_t year, int32_t month, int32_t day, int32_t era, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, Calendar_get_TwoDigitYearMax, (Calendar * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1ECC0, int32_t, Calendar_ToFourDigitYear, (Calendar * __this, int32_t year, MethodInfo * method));
DO_APP_FUNC(0x01A1EE10, int32_t, Calendar_GetSystemTwoDigitYearSetting, (int32_t CalID, int32_t defaultYearValue, MethodInfo * method));
DO_APP_FUNC(0x01A1EEA0, void, CalendarData__ctor, (CalendarData * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1EEB0, void, CalendarData__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01A20530, void, CalendarData__ctor_1, (CalendarData * __this, String * localeName, int32_t calendarId, bool bUseUserOverrides, MethodInfo * method));
DO_APP_FUNC(0x01A20C00, void, CalendarData_InitializeEraNames, (CalendarData * __this, String * localeName, int32_t calendarId, MethodInfo * method));
DO_APP_FUNC(0x01A212A0, void, CalendarData_InitializeAbbreviatedEraNames, (CalendarData * __this, String * localeName, int32_t calendarId, MethodInfo * method));
DO_APP_FUNC(0x01A21730, CalendarData *, CalendarData_GetCalendarData, (int32_t calendarId, MethodInfo * method));
DO_APP_FUNC(0x01A21940, String *, CalendarData_CalendarIdToCultureName, (int32_t calendarId, MethodInfo * method));
DO_APP_FUNC(0x00597B10, int32_t, CalendarData_nativeGetTwoDigitYearMax, (int32_t calID, MethodInfo * method));
DO_APP_FUNC(0x01A21AB0, bool, CalendarData_nativeGetCalendarData, (CalendarData * data, String * localeName, int32_t calendarId, MethodInfo * method));
DO_APP_FUNC(0x01A21B00, bool, CalendarData_fill_calendar_data, (CalendarData * __this, String * localeName, int32_t datetimeIndex, MethodInfo * method));
DO_APP_FUNC(0x01A229B0, void, CompareInfo__ctor, (CompareInfo * __this, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x01A229E0, CompareInfo *, CompareInfo_GetCompareInfo, (String * name, MethodInfo * method));
DO_APP_FUNC(0x0063D180, void, CompareInfo_OnDeserializing, (CompareInfo * __this, StreamingContext ctx, MethodInfo * method));
DO_APP_FUNC(0x01A22AD0, void, CompareInfo_OnDeserialized, (CompareInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01A22BD0, void, CompareInfo_OnDeserialized_1, (CompareInfo * __this, StreamingContext ctx, MethodInfo * method));
DO_APP_FUNC(0x01A22BE0, void, CompareInfo_OnSerializing, (CompareInfo * __this, StreamingContext ctx, MethodInfo * method));
DO_APP_FUNC(0x01A22BD0, void, CompareInfo_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization, (CompareInfo * __this, Object * sender, MethodInfo * method));
DO_APP_FUNC(0x01A22CC0, String *, CompareInfo_get_Name, (CompareInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01A22DA0, int32_t, CompareInfo_Compare, (CompareInfo * __this, String * string1, String * string2, MethodInfo * method));
DO_APP_FUNC(0x01A22DD0, int32_t, CompareInfo_Compare_1, (CompareInfo * __this, String * string1, String * string2, CompareOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x01A230A0, int32_t, CompareInfo_Compare_2, (CompareInfo * __this, String * string1, int32_t offset1, int32_t length1, String * string2, int32_t offset2, int32_t length2, CompareOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x01A23440, int32_t, CompareInfo_CompareOrdinal, (String * string1, int32_t offset1, int32_t length1, String * string2, int32_t offset2, int32_t length2, MethodInfo * method));
DO_APP_FUNC(0x01A234A0, bool, CompareInfo_IsPrefix, (CompareInfo * __this, String * source, String * prefix, CompareOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x01A237C0, bool, CompareInfo_IsSuffix, (CompareInfo * __this, String * source, String * suffix, CompareOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x01A23B30, int32_t, CompareInfo_IndexOf, (CompareInfo * __this, String * source, String * value, CompareOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x01A23C30, int32_t, CompareInfo_IndexOf_1, (CompareInfo * __this, String * source, String * value, int32_t startIndex, int32_t count, CompareOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x01A23F00, int32_t, CompareInfo_LastIndexOf, (CompareInfo * __this, String * source, String * value, int32_t startIndex, int32_t count, CompareOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x01A241D0, SortKey *, CompareInfo_GetSortKey, (CompareInfo * __this, String * source, CompareOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x01A241D0, SortKey *, CompareInfo_CreateSortKey, (CompareInfo * __this, String * source, CompareOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x01A24300, bool, CompareInfo_Equals, (CompareInfo * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01A24440, int32_t, CompareInfo_GetHashCode, (CompareInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01A24480, int32_t, CompareInfo_GetHashCodeOfString, (CompareInfo * __this, String * source, CompareOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x01A245E0, int32_t, CompareInfo_GetHashCodeOfString_1, (CompareInfo * __this, String * source, CompareOptions__Enum options, bool forceRandomizedHashing, int64_t additionalEntropy, MethodInfo * method));
DO_APP_FUNC(0x01A24750, String *, CompareInfo_ToString, (CompareInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01A247F0, bool, CompareInfo_get_UseManagedCollation, (MethodInfo * method));
DO_APP_FUNC(0x01A24920, SimpleCollator *, CompareInfo_GetCollator, (CompareInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01A24D60, SortKey *, CompareInfo_CreateSortKeyCore, (CompareInfo * __this, String * source, CompareOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x01A24FD0, int32_t, CompareInfo_internal_index_switch, (CompareInfo * __this, String * s1, int32_t sindex, int32_t count, String * s2, CompareOptions__Enum opt, bool first, MethodInfo * method));
DO_APP_FUNC(0x01A251B0, int32_t, CompareInfo_internal_compare_switch, (CompareInfo * __this, String * str1, int32_t offset1, int32_t length1, String * str2, int32_t offset2, int32_t length2, CompareOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x01A25290, int32_t, CompareInfo_internal_compare_managed, (CompareInfo * __this, String * str1, int32_t offset1, int32_t length1, String * str2, int32_t offset2, int32_t length2, CompareOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x01A252F0, int32_t, CompareInfo_internal_index_managed, (CompareInfo * __this, String * s1, int32_t sindex, int32_t count, String * s2, CompareOptions__Enum opt, bool first, MethodInfo * method));
DO_APP_FUNC(0x01A25390, void, CompareInfo_assign_sortkey, (CompareInfo * __this, Object * key, String * source, CompareOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x01A25480, int32_t, CompareInfo_internal_compare, (CompareInfo * __this, String * str1, int32_t offset1, int32_t length1, String * str2, int32_t offset2, int32_t length2, CompareOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x01A25490, int32_t, CompareInfo_internal_index, (CompareInfo * __this, String * source, int32_t sindex, int32_t count, String * value, CompareOptions__Enum options, bool first, MethodInfo * method));
DO_APP_FUNC(0x01A25580, void, CompareInfo__ctor_1, (CompareInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FC0F0, void, CultureNotFoundException__ctor, (CultureNotFoundException * __this, MethodInfo * method));
DO_APP_FUNC(0x025FC180, void, CultureNotFoundException__ctor_1, (CultureNotFoundException * __this, String * paramName, String * message, MethodInfo * method));
DO_APP_FUNC(0x025FC1C0, void, CultureNotFoundException__ctor_2, (CultureNotFoundException * __this, String * paramName, String * invalidCultureName, String * message, MethodInfo * method));
DO_APP_FUNC(0x025FC210, void, CultureNotFoundException__ctor_3, (CultureNotFoundException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x025FC390, void, CultureNotFoundException_GetObjectData, (CultureNotFoundException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FBC60, Nullable_1_Int32_, CultureNotFoundException_get_InvalidCultureId, (CultureNotFoundException * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC40, String *, CultureNotFoundException_get_InvalidCultureName, (CultureNotFoundException * __this, MethodInfo * method));
DO_APP_FUNC(0x025FC520, String *, CultureNotFoundException_get_DefaultMessage, (MethodInfo * method));
DO_APP_FUNC(0x025FC5A0, String *, CultureNotFoundException_get_FormatedInvalidCultureId, (CultureNotFoundException * __this, MethodInfo * method));
DO_APP_FUNC(0x025FC7B0, String *, CultureNotFoundException_get_Message, (CultureNotFoundException * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, DateTimeFormatInfo_InitPreferExistingTokens, (MethodInfo * method));
DO_APP_FUNC(0x025FC900, String *, DateTimeFormatInfo_get_CultureName, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FC930, CultureInfo *, DateTimeFormatInfo_get_Culture, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FCA10, String *, DateTimeFormatInfo_get_LanguageName, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FCA40, String__Array *, DateTimeFormatInfo_internalGetAbbreviatedDayOfWeekNames, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FCAC0, String__Array *, DateTimeFormatInfo_internalGetDayOfWeekNames, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FCB40, String__Array *, DateTimeFormatInfo_internalGetAbbreviatedMonthNames, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FCBC0, String__Array *, DateTimeFormatInfo_internalGetMonthNames, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FCC40, void, DateTimeFormatInfo__ctor, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FCD40, void, DateTimeFormatInfo__ctor_1, (DateTimeFormatInfo * __this, CultureData * cultureData, Calendar * cal, MethodInfo * method));
DO_APP_FUNC(0x025FCD70, void, DateTimeFormatInfo_InitializeOverridableProperties, (DateTimeFormatInfo * __this, CultureData * cultureData, int32_t calendarID, MethodInfo * method));
DO_APP_FUNC(0x025FCF70, void, DateTimeFormatInfo_OnDeserialized, (DateTimeFormatInfo * __this, StreamingContext ctx, MethodInfo * method));
DO_APP_FUNC(0x025FD710, void, DateTimeFormatInfo_OnSerializing, (DateTimeFormatInfo * __this, StreamingContext ctx, MethodInfo * method));
DO_APP_FUNC(0x025FDA30, DateTimeFormatInfo *, DateTimeFormatInfo_get_InvariantInfo, (MethodInfo * method));
DO_APP_FUNC(0x025FDC50, DateTimeFormatInfo *, DateTimeFormatInfo_get_CurrentInfo, (MethodInfo * method));
DO_APP_FUNC(0x025FDD80, DateTimeFormatInfo *, DateTimeFormatInfo_GetInstance, (IFormatProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x025FDF20, Object *, DateTimeFormatInfo_GetFormat, (DateTimeFormatInfo * __this, Type * formatType, MethodInfo * method));
DO_APP_FUNC(0x025FDFF0, Object *, DateTimeFormatInfo_Clone, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, String *, DateTimeFormatInfo_get_AMDesignator, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBE0, Calendar *, DateTimeFormatInfo_get_Calendar, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FE1A0, void, DateTimeFormatInfo_set_Calendar, (DateTimeFormatInfo * __this, Calendar * value, MethodInfo * method));
DO_APP_FUNC(0x025FE4D0, Int32__Array *, DateTimeFormatInfo_get_OptionalCalendars, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FE510, String__Array *, DateTimeFormatInfo_get_EraNames, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FE590, String *, DateTimeFormatInfo_GetEraName, (DateTimeFormatInfo * __this, int32_t era, MethodInfo * method));
DO_APP_FUNC(0x025FE730, String__Array *, DateTimeFormatInfo_get_AbbreviatedEraNames, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FE7B0, String *, DateTimeFormatInfo_GetAbbreviatedEraName, (DateTimeFormatInfo * __this, int32_t era, MethodInfo * method));
DO_APP_FUNC(0x025FE980, String__Array *, DateTimeFormatInfo_get_AbbreviatedEnglishEraNames, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, String *, DateTimeFormatInfo_get_DateSeparator, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FEA00, String *, DateTimeFormatInfo_get_FullDateTimePattern, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FEB00, String *, DateTimeFormatInfo_get_LongDatePattern, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FEB50, void, DateTimeFormatInfo_set_LongDatePattern, (DateTimeFormatInfo * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x025FEC90, String *, DateTimeFormatInfo_get_LongTimePattern, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FED00, void, DateTimeFormatInfo_set_LongTimePattern, (DateTimeFormatInfo * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x025FEE40, String *, DateTimeFormatInfo_get_MonthDayPattern, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, String *, DateTimeFormatInfo_get_PMDesignator, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FEEB0, String *, DateTimeFormatInfo_get_RFC1123Pattern, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FEF30, String *, DateTimeFormatInfo_get_ShortDatePattern, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FEF80, void, DateTimeFormatInfo_set_ShortDatePattern, (DateTimeFormatInfo * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x025FF0C0, String *, DateTimeFormatInfo_get_ShortTimePattern, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FF130, void, DateTimeFormatInfo_set_ShortTimePattern, (DateTimeFormatInfo * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x025FF270, String *, DateTimeFormatInfo_get_SortableDateTimePattern, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FF2F0, String *, DateTimeFormatInfo_get_GeneralShortTimePattern, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FF3E0, String *, DateTimeFormatInfo_get_GeneralLongTimePattern, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FF4D0, String *, DateTimeFormatInfo_get_DateTimeOffsetPattern, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, String *, DateTimeFormatInfo_get_TimeSeparator, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FF740, String *, DateTimeFormatInfo_get_UniversalSortableDateTimePattern, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FF7C0, String *, DateTimeFormatInfo_get_YearMonthPattern, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FF810, void, DateTimeFormatInfo_set_YearMonthPattern, (DateTimeFormatInfo * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x025FF940, String__Array *, DateTimeFormatInfo_get_AbbreviatedDayNames, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FFA90, String__Array *, DateTimeFormatInfo_get_DayNames, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FFBE0, String__Array *, DateTimeFormatInfo_get_AbbreviatedMonthNames, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FFD30, String__Array *, DateTimeFormatInfo_get_MonthNames, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FFE80, bool, DateTimeFormatInfo_get_HasSpacesInMonthNames, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FFEA0, bool, DateTimeFormatInfo_get_HasSpacesInDayNames, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FFEC0, String *, DateTimeFormatInfo_internalGetMonthName, (DateTimeFormatInfo * __this, int32_t month, MonthNameStyles__Enum style, bool abbreviated, MethodInfo * method));
DO_APP_FUNC(0x026000B0, String__Array *, DateTimeFormatInfo_internalGetGenitiveMonthNames, (DateTimeFormatInfo * __this, bool abbreviated, MethodInfo * method));
DO_APP_FUNC(0x026001A0, String__Array *, DateTimeFormatInfo_internalGetLeapYearMonthNames, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02600220, String *, DateTimeFormatInfo_GetAbbreviatedDayName, (DateTimeFormatInfo * __this, DayOfWeek__Enum dayofweek, MethodInfo * method));
DO_APP_FUNC(0x026003C0, String__Array *, DateTimeFormatInfo_GetCombinedPatterns, (String__Array * patterns1, String__Array * patterns2, String * connectString, MethodInfo * method));
DO_APP_FUNC(0x02600570, String__Array *, DateTimeFormatInfo_GetAllDateTimePatterns, (DateTimeFormatInfo * __this, uint16_t format, MethodInfo * method));
DO_APP_FUNC(0x02600A20, String *, DateTimeFormatInfo_GetDayName, (DateTimeFormatInfo * __this, DayOfWeek__Enum dayofweek, MethodInfo * method));
DO_APP_FUNC(0x02600BC0, String *, DateTimeFormatInfo_GetAbbreviatedMonthName, (DateTimeFormatInfo * __this, int32_t month, MethodInfo * method));
DO_APP_FUNC(0x02600D60, String *, DateTimeFormatInfo_GetMonthName, (DateTimeFormatInfo * __this, int32_t month, MethodInfo * method));
DO_APP_FUNC(0x02600F00, String__Array *, DateTimeFormatInfo_GetMergedPatterns, (String__Array * patterns, String * defaultPattern, MethodInfo * method));
DO_APP_FUNC(0x026012C0, String__Array *, DateTimeFormatInfo_get_AllYearMonthPatterns, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x026013C0, String__Array *, DateTimeFormatInfo_get_AllShortDatePatterns, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x026014C0, String__Array *, DateTimeFormatInfo_get_AllShortTimePatterns, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x026015A0, String__Array *, DateTimeFormatInfo_get_AllLongDatePatterns, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x026016A0, String__Array *, DateTimeFormatInfo_get_AllLongTimePatterns, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02601780, String__Array *, DateTimeFormatInfo_get_UnclonedYearMonthPatterns, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02601800, String__Array *, DateTimeFormatInfo_get_UnclonedShortDatePatterns, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02601880, String__Array *, DateTimeFormatInfo_get_UnclonedLongDatePatterns, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02601900, String__Array *, DateTimeFormatInfo_get_UnclonedShortTimePatterns, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02601940, String__Array *, DateTimeFormatInfo_get_UnclonedLongTimePatterns, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02601980, DateTimeFormatInfo *, DateTimeFormatInfo_ReadOnly, (DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x00A5BA30, bool, DateTimeFormatInfo_get_IsReadOnly, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02601C70, String__Array *, DateTimeFormatInfo_get_MonthGenitiveNames, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02601E20, String *, DateTimeFormatInfo_get_FullTimeSpanPositivePattern, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02601FE0, String *, DateTimeFormatInfo_get_FullTimeSpanNegativePattern, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02602080, CompareInfo *, DateTimeFormatInfo_get_CompareInfo, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02602200, void, DateTimeFormatInfo_ValidateStyles, (DateTimeStyles__Enum style, String * parameterName, MethodInfo * method));
DO_APP_FUNC(0x02602370, DateTimeFormatFlags__Enum, DateTimeFormatInfo_get_FormatFlags, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02602920, bool, DateTimeFormatInfo_get_HasForceTwoDigitYears, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02602960, bool, DateTimeFormatInfo_get_HasYearMonthAdjustment, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02602980, bool, DateTimeFormatInfo_YearMonthAdjustment, (DateTimeFormatInfo * __this, int32_t * year, int32_t * month, bool parsedMonthName, MethodInfo * method));
DO_APP_FUNC(0x02602AB0, DateTimeFormatInfo *, DateTimeFormatInfo_GetJapaneseCalendarDTFI, (MethodInfo * method));
DO_APP_FUNC(0x02602CE0, DateTimeFormatInfo *, DateTimeFormatInfo_GetTaiwanCalendarDTFI, (MethodInfo * method));
DO_APP_FUNC(0x02602F10, void, DateTimeFormatInfo_ClearTokenHashTable, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02602F30, TokenHashValue__Array *, DateTimeFormatInfo_CreateTokenHashTable, (DateTimeFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02604320, void, DateTimeFormatInfo_AddMonthNames, (DateTimeFormatInfo * __this, TokenHashValue__Array * temp, String * monthPostfix, MethodInfo * method));
DO_APP_FUNC(0x026043F0, bool, DateTimeFormatInfo_TryParseHebrewNumber, (_DTString * str, bool * badFormat, int32_t * number, MethodInfo * method));
DO_APP_FUNC(0x026046B0, bool, DateTimeFormatInfo_IsHebrewChar, (uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x026046D0, bool, DateTimeFormatInfo_Tokenize, (DateTimeFormatInfo * __this, TokenType__Enum TokenMask, TokenType__Enum * tokenType, int32_t * tokenValue, _DTString * str, MethodInfo * method));
DO_APP_FUNC(0x02604BD0, void, DateTimeFormatInfo_InsertAtCurrentHashNode, (DateTimeFormatInfo * __this, TokenHashValue__Array * hashTable, String * str, uint16_t ch, TokenType__Enum tokenType, int32_t tokenValue, int32_t pos, int32_t hashcode, int32_t hashProbe, MethodInfo * method));
DO_APP_FUNC(0x02604ED0, void, DateTimeFormatInfo_InsertHash, (DateTimeFormatInfo * __this, TokenHashValue__Array * hashTable, String * str, TokenType__Enum tokenType, int32_t tokenValue, MethodInfo * method));
DO_APP_FUNC(0x026053B0, void, DateTimeFormatInfo__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01DF8C80, void, TokenHashValue__ctor, (TokenHashValue * __this, String * tokenString, TokenType__Enum tokenType, int32_t tokenValue, MethodInfo * method));
DO_APP_FUNC(0x02605430, Dictionary_2_System_String_System_String_ *, DateTimeFormatInfoScanner_get_KnownWords, (MethodInfo * method));
DO_APP_FUNC(0x026059D0, int32_t, DateTimeFormatInfoScanner_SkipWhiteSpacesAndNonLetter, (String * pattern, int32_t currentIndex, MethodInfo * method));
DO_APP_FUNC(0x02605AE0, void, DateTimeFormatInfoScanner_AddDateWordOrPostfix, (DateTimeFormatInfoScanner * __this, String * formatPostfix, String * str, MethodInfo * method));
DO_APP_FUNC(0x02605E50, int32_t, DateTimeFormatInfoScanner_AddDateWords, (DateTimeFormatInfoScanner * __this, String * pattern, int32_t index, String * formatPostfix, MethodInfo * method));
DO_APP_FUNC(0x026061D0, int32_t, DateTimeFormatInfoScanner_ScanRepeatChar, (String * pattern, uint16_t ch, int32_t index, int32_t * count, MethodInfo * method));
DO_APP_FUNC(0x02606240, void, DateTimeFormatInfoScanner_AddIgnorableSymbols, (DateTimeFormatInfoScanner * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x026063F0, void, DateTimeFormatInfoScanner_ScanDateWord, (DateTimeFormatInfoScanner * __this, String * pattern, MethodInfo * method));
DO_APP_FUNC(0x02606670, String__Array *, DateTimeFormatInfoScanner_GetDateWordsOfDTFI, (DateTimeFormatInfoScanner * __this, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x02606A60, FORMATFLAGS__Enum, DateTimeFormatInfoScanner_GetFormatFlagGenitiveMonth, (String__Array * monthNames, String__Array * genitveMonthNames, String__Array * abbrevMonthNames, String__Array * genetiveAbbrevMonthNames, MethodInfo * method));
DO_APP_FUNC(0x02606AB0, FORMATFLAGS__Enum, DateTimeFormatInfoScanner_GetFormatFlagUseSpaceInMonthNames, (String__Array * monthNames, String__Array * genitveMonthNames, String__Array * abbrevMonthNames, String__Array * genetiveAbbrevMonthNames, MethodInfo * method));
DO_APP_FUNC(0x02606B70, FORMATFLAGS__Enum, DateTimeFormatInfoScanner_GetFormatFlagUseSpaceInDayNames, (String__Array * dayNames, String__Array * abbrevDayNames, MethodInfo * method));
DO_APP_FUNC(0x02606BB0, FORMATFLAGS__Enum, DateTimeFormatInfoScanner_GetFormatFlagUseHebrewCalendar, (int32_t calID, MethodInfo * method));
DO_APP_FUNC(0x02606BC0, bool, DateTimeFormatInfoScanner_EqualStringArrays, (String__Array * array1, String__Array * array2, MethodInfo * method));
DO_APP_FUNC(0x02606C90, bool, DateTimeFormatInfoScanner_ArrayElementsHaveSpace, (String__Array * array, MethodInfo * method));
DO_APP_FUNC(0x02606DD0, bool, DateTimeFormatInfoScanner_ArrayElementsBeginWithDigit, (String__Array * array, MethodInfo * method));
DO_APP_FUNC(0x02607110, void, DateTimeFormatInfoScanner__ctor, (DateTimeFormatInfoScanner * __this, MethodInfo * method));
DO_APP_FUNC(0x02610650, void, GregorianCalendar_OnDeserialized, (GregorianCalendar * __this, StreamingContext ctx, MethodInfo * method));
DO_APP_FUNC(0x02610770, DateTime, GregorianCalendar_get_MinSupportedDateTime, (GregorianCalendar * __this, MethodInfo * method));
DO_APP_FUNC(0x02610810, DateTime, GregorianCalendar_get_MaxSupportedDateTime, (GregorianCalendar * __this, MethodInfo * method));
DO_APP_FUNC(0x026108B0, Calendar *, GregorianCalendar_GetDefaultInstance, (MethodInfo * method));
DO_APP_FUNC(0x02610AA0, void, GregorianCalendar__ctor, (GregorianCalendar * __this, MethodInfo * method));
DO_APP_FUNC(0x02610AB0, void, GregorianCalendar__ctor_1, (GregorianCalendar * __this, GregorianCalendarTypes__Enum type, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, int32_t, GregorianCalendar_get_ID, (GregorianCalendar * __this, MethodInfo * method));
DO_APP_FUNC(0x02610C20, int32_t, GregorianCalendar_GetDatePart, (GregorianCalendar * __this, int64_t ticks, int32_t part, MethodInfo * method));
DO_APP_FUNC(0x02610E50, int32_t, GregorianCalendar_GetDayOfMonth, (GregorianCalendar * __this, DateTime time, MethodInfo * method));
DO_APP_FUNC(0x02610E80, DayOfWeek__Enum, GregorianCalendar_GetDayOfWeek, (GregorianCalendar * __this, DateTime time, MethodInfo * method));
DO_APP_FUNC(0x02610ED0, int32_t, GregorianCalendar_GetDaysInMonth, (GregorianCalendar * __this, int32_t year, int32_t month, int32_t era, MethodInfo * method));
DO_APP_FUNC(0x00417920, int32_t, GregorianCalendar_GetEra, (GregorianCalendar * __this, DateTime time, MethodInfo * method));
DO_APP_FUNC(0x026111E0, Int32__Array *, GregorianCalendar_get_Eras, (GregorianCalendar * __this, MethodInfo * method));
DO_APP_FUNC(0x02611290, int32_t, GregorianCalendar_GetMonth, (GregorianCalendar * __this, DateTime time, MethodInfo * method));
DO_APP_FUNC(0x026112C0, int32_t, GregorianCalendar_GetMonthsInYear, (GregorianCalendar * __this, int32_t year, int32_t era, MethodInfo * method));
DO_APP_FUNC(0x02611470, int32_t, GregorianCalendar_GetYear, (GregorianCalendar * __this, DateTime time, MethodInfo * method));
DO_APP_FUNC(0x026114A0, bool, GregorianCalendar_IsLeapYear, (GregorianCalendar * __this, int32_t year, int32_t era, MethodInfo * method));
DO_APP_FUNC(0x026116A0, DateTime, GregorianCalendar_ToDateTime, (GregorianCalendar * __this, int32_t year, int32_t month, int32_t day, int32_t hour, int32_t minute, int32_t second, int32_t millisecond, int32_t era, MethodInfo * method));
DO_APP_FUNC(0x026117E0, bool, GregorianCalendar_TryToDateTime, (GregorianCalendar * __this, int32_t year, int32_t month, int32_t day, int32_t hour, int32_t minute, int32_t second, int32_t millisecond, int32_t era, DateTime * result, MethodInfo * method));
DO_APP_FUNC(0x02611930, int32_t, GregorianCalendar_get_TwoDigitYearMax, (GregorianCalendar * __this, MethodInfo * method));
DO_APP_FUNC(0x02611970, int32_t, GregorianCalendar_ToFourDigitYear, (GregorianCalendar * __this, int32_t year, MethodInfo * method));
DO_APP_FUNC(0x02611BE0, void, GregorianCalendar__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02610550, void, EraInfo__ctor, (EraInfo * __this, int32_t era, int32_t startYear, int32_t startMonth, int32_t startDay, int32_t yearOffset, int32_t minEraYear, int32_t maxEraYear, MethodInfo * method));
DO_APP_FUNC(0x026105C0, void, EraInfo__ctor_1, (EraInfo * __this, int32_t era, int32_t startYear, int32_t startMonth, int32_t startDay, int32_t yearOffset, int32_t minEraYear, int32_t maxEraYear, String * eraName, String * abbrevEraName, String * englishEraName, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, GregorianCalendarHelper_get_MaxYear, (GregorianCalendarHelper * __this, MethodInfo * method));
DO_APP_FUNC(0x02611CC0, void, GregorianCalendarHelper__ctor, (GregorianCalendarHelper * __this, Calendar * cal, EraInfo__Array * eraInfo, MethodInfo * method));
DO_APP_FUNC(0x02611D80, int32_t, GregorianCalendarHelper_GetGregorianYear, (GregorianCalendarHelper * __this, int32_t year, int32_t era, MethodInfo * method));
DO_APP_FUNC(0x026120C0, bool, GregorianCalendarHelper_IsValidYear, (GregorianCalendarHelper * __this, int32_t year, int32_t era, MethodInfo * method));
DO_APP_FUNC(0x026121B0, int32_t, GregorianCalendarHelper_GetDatePart, (GregorianCalendarHelper * __this, int64_t ticks, int32_t part, MethodInfo * method));
DO_APP_FUNC(0x02612410, int64_t, GregorianCalendarHelper_GetAbsoluteDate, (int32_t year, int32_t month, int32_t day, MethodInfo * method));
DO_APP_FUNC(0x02612660, int64_t, GregorianCalendarHelper_DateToTicks, (int32_t year, int32_t month, int32_t day, MethodInfo * method));
DO_APP_FUNC(0x02612720, int64_t, GregorianCalendarHelper_TimeToTicks, (int32_t hour, int32_t minute, int32_t second, int32_t millisecond, MethodInfo * method));
DO_APP_FUNC(0x02612910, void, GregorianCalendarHelper_CheckTicksRange, (GregorianCalendarHelper * __this, int64_t ticks, MethodInfo * method));
DO_APP_FUNC(0x02612B00, int32_t, GregorianCalendarHelper_GetDayOfMonth, (GregorianCalendarHelper * __this, DateTime time, MethodInfo * method));
DO_APP_FUNC(0x02612B30, DayOfWeek__Enum, GregorianCalendarHelper_GetDayOfWeek, (GregorianCalendarHelper * __this, DateTime time, MethodInfo * method));
DO_APP_FUNC(0x02612BA0, int32_t, GregorianCalendarHelper_GetDaysInMonth, (GregorianCalendarHelper * __this, int32_t year, int32_t month, int32_t era, MethodInfo * method));
DO_APP_FUNC(0x02612DA0, int32_t, GregorianCalendarHelper_GetEra, (GregorianCalendarHelper * __this, DateTime time, MethodInfo * method));
DO_APP_FUNC(0x02612EF0, Int32__Array *, GregorianCalendarHelper_get_Eras, (GregorianCalendarHelper * __this, MethodInfo * method));
DO_APP_FUNC(0x02613160, int32_t, GregorianCalendarHelper_GetMonth, (GregorianCalendarHelper * __this, DateTime time, MethodInfo * method));
DO_APP_FUNC(0x02613190, int32_t, GregorianCalendarHelper_GetMonthsInYear, (GregorianCalendarHelper * __this, int32_t year, int32_t era, MethodInfo * method));
DO_APP_FUNC(0x026131B0, int32_t, GregorianCalendarHelper_GetYear, (GregorianCalendarHelper * __this, DateTime time, MethodInfo * method));
DO_APP_FUNC(0x02613320, bool, GregorianCalendarHelper_IsLeapYear, (GregorianCalendarHelper * __this, int32_t year, int32_t era, MethodInfo * method));
DO_APP_FUNC(0x026133A0, DateTime, GregorianCalendarHelper_ToDateTime, (GregorianCalendarHelper * __this, int32_t year, int32_t month, int32_t day, int32_t hour, int32_t minute, int32_t second, int32_t millisecond, int32_t era, MethodInfo * method));
DO_APP_FUNC(0x02613570, void, GregorianCalendarHelper__cctor, (MethodInfo * method));
DO_APP_FUNC(0x001FB360, void, HebrewNumberParsingContext__ctor, (HebrewNumberParsingContext__Boxed * __this, int32_t result, MethodInfo * method));
DO_APP_FUNC(0x02613650, String *, HebrewNumber_ToString, (int32_t Number, MethodInfo * method));
DO_APP_FUNC(0x02613FB0, HebrewNumberParsingState__Enum, HebrewNumber_ParseByChar, (uint16_t ch, HebrewNumberParsingContext * context, MethodInfo * method));
DO_APP_FUNC(0x02614260, bool, HebrewNumber_IsDigit, (uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x026143B0, void, HebrewNumber__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01857090, void, HebrewNumber_HebrewValue__ctor, (HebrewNumber_HebrewValue * __this, HebrewNumber_HebrewToken__Enum token, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x02618350, DateTime, JapaneseCalendar_get_MinSupportedDateTime, (JapaneseCalendar * __this, MethodInfo * method));
DO_APP_FUNC(0x026183F0, DateTime, JapaneseCalendar_get_MaxSupportedDateTime, (JapaneseCalendar * __this, MethodInfo * method));
DO_APP_FUNC(0x02618490, EraInfo__Array *, JapaneseCalendar_GetEraInfo, (MethodInfo * method));
DO_APP_FUNC(0x00420EE0, EraInfo__Array *, JapaneseCalendar_GetErasFromRegistry, (MethodInfo * method));
DO_APP_FUNC(0x02618C00, Calendar *, JapaneseCalendar_GetDefaultInstance, (MethodInfo * method));
DO_APP_FUNC(0x02618DF0, void, JapaneseCalendar__ctor, (JapaneseCalendar * __this, MethodInfo * method));
DO_APP_FUNC(0x00420230, int32_t, JapaneseCalendar_get_ID, (JapaneseCalendar * __this, MethodInfo * method));
DO_APP_FUNC(0x01DECE80, int32_t, JapaneseCalendar_GetDaysInMonth, (JapaneseCalendar * __this, int32_t year, int32_t month, int32_t era, MethodInfo * method));
DO_APP_FUNC(0x01DECEB0, int32_t, JapaneseCalendar_GetDayOfMonth, (JapaneseCalendar * __this, DateTime time, MethodInfo * method));
DO_APP_FUNC(0x01DECEF0, DayOfWeek__Enum, JapaneseCalendar_GetDayOfWeek, (JapaneseCalendar * __this, DateTime time, MethodInfo * method));
DO_APP_FUNC(0x01DECF60, int32_t, JapaneseCalendar_GetMonthsInYear, (JapaneseCalendar * __this, int32_t year, int32_t era, MethodInfo * method));
DO_APP_FUNC(0x01DECF90, int32_t, JapaneseCalendar_GetEra, (JapaneseCalendar * __this, DateTime time, MethodInfo * method));
DO_APP_FUNC(0x01DECFB0, int32_t, JapaneseCalendar_GetMonth, (JapaneseCalendar * __this, DateTime time, MethodInfo * method));
DO_APP_FUNC(0x01DECFF0, int32_t, JapaneseCalendar_GetYear, (JapaneseCalendar * __this, DateTime time, MethodInfo * method));
DO_APP_FUNC(0x01DED010, bool, JapaneseCalendar_IsLeapYear, (JapaneseCalendar * __this, int32_t year, int32_t era, MethodInfo * method));
DO_APP_FUNC(0x01DED030, DateTime, JapaneseCalendar_ToDateTime, (JapaneseCalendar * __this, int32_t year, int32_t month, int32_t day, int32_t hour, int32_t minute, int32_t second, int32_t millisecond, int32_t era, MethodInfo * method));
DO_APP_FUNC(0x026190B0, int32_t, JapaneseCalendar_ToFourDigitYear, (JapaneseCalendar * __this, int32_t year, MethodInfo * method));
DO_APP_FUNC(0x01DED060, Int32__Array *, JapaneseCalendar_get_Eras, (JapaneseCalendar * __this, MethodInfo * method));
DO_APP_FUNC(0x02619280, String__Array *, JapaneseCalendar_EraNames, (MethodInfo * method));
DO_APP_FUNC(0x026193F0, String__Array *, JapaneseCalendar_AbbrevEraNames, (MethodInfo * method));
DO_APP_FUNC(0x02619560, String__Array *, JapaneseCalendar_EnglishEraNames, (MethodInfo * method));
DO_APP_FUNC(0x026196D0, bool, JapaneseCalendar_IsValidYear, (JapaneseCalendar * __this, int32_t year, int32_t era, MethodInfo * method));
DO_APP_FUNC(0x01DED080, int32_t, JapaneseCalendar_get_TwoDigitYearMax, (JapaneseCalendar * __this, MethodInfo * method));
DO_APP_FUNC(0x026197D0, void, JapaneseCalendar__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01DE9EB0, void, NumberFormatInfo__ctor, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01DE9EC0, void, NumberFormatInfo_OnSerializing, (NumberFormatInfo * __this, StreamingContext ctx, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, NumberFormatInfo_OnDeserializing, (NumberFormatInfo * __this, StreamingContext ctx, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, NumberFormatInfo_OnDeserialized, (NumberFormatInfo * __this, StreamingContext ctx, MethodInfo * method));
DO_APP_FUNC(0x01DE9FE0, void, NumberFormatInfo__ctor_1, (NumberFormatInfo * __this, CultureData * cultureData, MethodInfo * method));
DO_APP_FUNC(0x01DEA630, NumberFormatInfo *, NumberFormatInfo_get_InvariantInfo, (MethodInfo * method));
DO_APP_FUNC(0x01DEA7E0, NumberFormatInfo *, NumberFormatInfo_GetInstance, (IFormatProvider * formatProvider, MethodInfo * method));
DO_APP_FUNC(0x01DEA970, Object *, NumberFormatInfo_Clone, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0063D090, int32_t, NumberFormatInfo_get_CurrencyDecimalDigits, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, String *, NumberFormatInfo_get_CurrencyDecimalSeparator, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x006B8960, bool, NumberFormatInfo_get_IsReadOnly, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01DEAAB0, Int32__Array *, NumberFormatInfo_get_CurrencyGroupSizes, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01DEABF0, Int32__Array *, NumberFormatInfo_get_NumberGroupSizes, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01DEAD30, Int32__Array *, NumberFormatInfo_get_PercentGroupSizes, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, String *, NumberFormatInfo_get_CurrencyGroupSeparator, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, String *, NumberFormatInfo_get_CurrencySymbol, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01DEAE70, NumberFormatInfo *, NumberFormatInfo_get_CurrentInfo, (MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, String *, NumberFormatInfo_get_NaNSymbol, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0073EDA0, int32_t, NumberFormatInfo_get_CurrencyNegativePattern, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00855600, int32_t, NumberFormatInfo_get_NumberNegativePattern, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x008519C0, int32_t, NumberFormatInfo_get_PercentPositivePattern, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFCE0, int32_t, NumberFormatInfo_get_PercentNegativePattern, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBE0, String *, NumberFormatInfo_get_NegativeInfinitySymbol, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, NumberFormatInfo_get_NegativeSign, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x005035C0, int32_t, NumberFormatInfo_get_NumberDecimalDigits, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, String *, NumberFormatInfo_get_NumberDecimalSeparator, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, String *, NumberFormatInfo_get_NumberGroupSeparator, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0062C500, int32_t, NumberFormatInfo_get_CurrencyPositivePattern, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, String *, NumberFormatInfo_get_PositiveInfinitySymbol, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, NumberFormatInfo_get_PositiveSign, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x008468B0, int32_t, NumberFormatInfo_get_PercentDecimalDigits, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC00, String *, NumberFormatInfo_get_PercentDecimalSeparator, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC20, String *, NumberFormatInfo_get_PercentGroupSeparator, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC40, String *, NumberFormatInfo_get_PercentSymbol, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC60, String *, NumberFormatInfo_get_PerMilleSymbol, (NumberFormatInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01DEAFA0, Object *, NumberFormatInfo_GetFormat, (NumberFormatInfo * __this, Type * formatType, MethodInfo * method));
DO_APP_FUNC(0x01DEB070, NumberFormatInfo *, NumberFormatInfo_ReadOnly, (NumberFormatInfo * nfi, MethodInfo * method));
DO_APP_FUNC(0x01DEB200, void, NumberFormatInfo_ValidateParseStyleInteger, (NumberStyles__Enum style, MethodInfo * method));
DO_APP_FUNC(0x01DEB320, void, NumberFormatInfo_ValidateParseStyleFloatingPoint, (NumberStyles__Enum style, MethodInfo * method));
DO_APP_FUNC(0x01DEC630, bool, SortVersion_Equals, (SortVersion * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01DEC700, bool, SortVersion_Equals_1, (SortVersion * __this, SortVersion * other, MethodInfo * method));
DO_APP_FUNC(0x01DEC800, int32_t, SortVersion_GetHashCode, (SortVersion * __this, MethodInfo * method));
DO_APP_FUNC(0x01DEC830, bool, SortVersion_op_Equality, (SortVersion * left, SortVersion * right, MethodInfo * method));
DO_APP_FUNC(0x01DEC850, bool, SortVersion_op_Inequality, (SortVersion * left, SortVersion * right, MethodInfo * method));
DO_APP_FUNC(0x01DEC880, Calendar *, TaiwanCalendar_GetDefaultInstance, (MethodInfo * method));
DO_APP_FUNC(0x01DECA70, DateTime, TaiwanCalendar_get_MinSupportedDateTime, (TaiwanCalendar * __this, MethodInfo * method));
DO_APP_FUNC(0x01DECB10, DateTime, TaiwanCalendar_get_MaxSupportedDateTime, (TaiwanCalendar * __this, MethodInfo * method));
DO_APP_FUNC(0x01DECBB0, void, TaiwanCalendar__ctor, (TaiwanCalendar * __this, MethodInfo * method));
DO_APP_FUNC(0x00910BD0, int32_t, TaiwanCalendar_get_ID, (TaiwanCalendar * __this, MethodInfo * method));
DO_APP_FUNC(0x01DECE80, int32_t, TaiwanCalendar_GetDaysInMonth, (TaiwanCalendar * __this, int32_t year, int32_t month, int32_t era, MethodInfo * method));
DO_APP_FUNC(0x01DECEB0, int32_t, TaiwanCalendar_GetDayOfMonth, (TaiwanCalendar * __this, DateTime time, MethodInfo * method));
DO_APP_FUNC(0x01DECEF0, DayOfWeek__Enum, TaiwanCalendar_GetDayOfWeek, (TaiwanCalendar * __this, DateTime time, MethodInfo * method));
DO_APP_FUNC(0x01DECF60, int32_t, TaiwanCalendar_GetMonthsInYear, (TaiwanCalendar * __this, int32_t year, int32_t era, MethodInfo * method));
DO_APP_FUNC(0x01DECF90, int32_t, TaiwanCalendar_GetEra, (TaiwanCalendar * __this, DateTime time, MethodInfo * method));
DO_APP_FUNC(0x01DECFB0, int32_t, TaiwanCalendar_GetMonth, (TaiwanCalendar * __this, DateTime time, MethodInfo * method));
DO_APP_FUNC(0x01DECFF0, int32_t, TaiwanCalendar_GetYear, (TaiwanCalendar * __this, DateTime time, MethodInfo * method));
DO_APP_FUNC(0x01DED010, bool, TaiwanCalendar_IsLeapYear, (TaiwanCalendar * __this, int32_t year, int32_t era, MethodInfo * method));
DO_APP_FUNC(0x01DED030, DateTime, TaiwanCalendar_ToDateTime, (TaiwanCalendar * __this, int32_t year, int32_t month, int32_t day, int32_t hour, int32_t minute, int32_t second, int32_t millisecond, int32_t era, MethodInfo * method));
DO_APP_FUNC(0x01DED060, Int32__Array *, TaiwanCalendar_get_Eras, (TaiwanCalendar * __this, MethodInfo * method));
DO_APP_FUNC(0x01DED080, int32_t, TaiwanCalendar_get_TwoDigitYearMax, (TaiwanCalendar * __this, MethodInfo * method));
DO_APP_FUNC(0x01DED0C0, int32_t, TaiwanCalendar_ToFourDigitYear, (TaiwanCalendar * __this, int32_t year, MethodInfo * method));
DO_APP_FUNC(0x01DED290, void, TaiwanCalendar__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01DED530, TextInfo *, TextInfo_get_Invariant, (MethodInfo * method));
DO_APP_FUNC(0x01DED6E0, void, TextInfo__ctor, (TextInfo * __this, CultureData * cultureData, MethodInfo * method));
DO_APP_FUNC(0x01DED710, void, TextInfo_OnDeserializing, (TextInfo * __this, StreamingContext ctx, MethodInfo * method));
DO_APP_FUNC(0x01DED720, void, TextInfo_OnDeserialized, (TextInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01DED880, void, TextInfo_OnDeserialized_1, (TextInfo * __this, StreamingContext ctx, MethodInfo * method));
DO_APP_FUNC(0x01DED890, void, TextInfo_OnSerializing, (TextInfo * __this, StreamingContext ctx, MethodInfo * method));
DO_APP_FUNC(0x01DED970, int32_t, TextInfo_GetHashCodeOrdinalIgnoreCase, (String * s, MethodInfo * method));
DO_APP_FUNC(0x01DED9B0, int32_t, TextInfo_GetHashCodeOrdinalIgnoreCase_1, (String * s, bool forceRandomizedHashing, int64_t additionalEntropy, MethodInfo * method));
DO_APP_FUNC(0x01DEDA10, int32_t, TextInfo_CompareOrdinalIgnoreCase, (String * str1, String * str2, MethodInfo * method));
DO_APP_FUNC(0x01DEDA60, int32_t, TextInfo_CompareOrdinalIgnoreCaseEx, (String * strA, int32_t indexA, String * strB, int32_t indexB, int32_t lengthA, int32_t lengthB, MethodInfo * method));
DO_APP_FUNC(0x01DEDA70, int32_t, TextInfo_IndexOfStringOrdinalIgnoreCase, (String * source, String * value, int32_t startIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01DEDB40, int32_t, TextInfo_LastIndexOfStringOrdinalIgnoreCase, (String * source, String * value, int32_t startIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, TextInfo_get_CultureName, (TextInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A280, bool, TextInfo_get_IsReadOnly, (TextInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01DEDC00, Object *, TextInfo_Clone, (TextInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01DEDDA0, TextInfo *, TextInfo_ReadOnly, (TextInfo * textInfo, MethodInfo * method));
DO_APP_FUNC(0x00533150, void, TextInfo_SetReadOnlyState, (TextInfo * __this, bool readOnly, MethodInfo * method));
DO_APP_FUNC(0x01DEDF20, uint16_t, TextInfo_ToLower, (TextInfo * __this, uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x01DEDF80, String *, TextInfo_ToLower_1, (TextInfo * __this, String * str, MethodInfo * method));
DO_APP_FUNC(0x01DEE110, uint16_t, TextInfo_ToLowerAsciiInvariant, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x01DEE130, uint16_t, TextInfo_ToUpper, (TextInfo * __this, uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x01DEE190, String *, TextInfo_ToUpper_1, (TextInfo * __this, String * str, MethodInfo * method));
DO_APP_FUNC(0x01DEE320, uint16_t, TextInfo_ToUpperAsciiInvariant, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x01DEE340, bool, TextInfo_IsAscii, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x01DEE350, bool, TextInfo_get_IsAsciiCasingSameAsInvariant, (TextInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01DEE510, bool, TextInfo_Equals, (TextInfo * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01950620, int32_t, TextInfo_GetHashCode, (TextInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01DEE600, String *, TextInfo_ToString, (TextInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01DED880, void, TextInfo_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization, (TextInfo * __this, Object * sender, MethodInfo * method));
DO_APP_FUNC(0x01DEE6A0, int32_t, TextInfo_GetCaseInsensitiveHashCode, (TextInfo * __this, String * str, MethodInfo * method));
DO_APP_FUNC(0x01DEE6C0, int32_t, TextInfo_GetCaseInsensitiveHashCode_1, (TextInfo * __this, String * str, bool forceRandomizedHashing, int64_t additionalEntropy, MethodInfo * method));
DO_APP_FUNC(0x01DEE8F0, int32_t, TextInfo_GetInvariantCaseInsensitiveHashCode, (TextInfo * __this, String * str, MethodInfo * method));
DO_APP_FUNC(0x01DEEA40, String *, TextInfo_ToUpperInternal, (TextInfo * __this, String * str, MethodInfo * method));
DO_APP_FUNC(0x01DEEB50, String *, TextInfo_ToLowerInternal, (TextInfo * __this, String * str, MethodInfo * method));
DO_APP_FUNC(0x01DEEC60, uint16_t, TextInfo_ToUpperInternal_1, (TextInfo * __this, uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x01DEF400, uint16_t, TextInfo_ToLowerInternal_1, (TextInfo * __this, uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x01DEFAF0, int32_t, TextInfo_InternalCompareStringOrdinalIgnoreCase, (String * strA, int32_t indexA, String * strB, int32_t indexB, int32_t lenA, int32_t lenB, MethodInfo * method));
DO_APP_FUNC(0x01DEFCC0, void, TextInfo__ctor_1, (TextInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01DF0190, String *, TimeSpanFormat_IntToString, (int32_t n, int32_t digits, MethodInfo * method));
DO_APP_FUNC(0x01DF01C0, String *, TimeSpanFormat_Format, (TimeSpan value, String * format, IFormatProvider * formatProvider, MethodInfo * method));
DO_APP_FUNC(0x01DF0430, String *, TimeSpanFormat_FormatStandard, (TimeSpan value, bool isInvariant, String * format, TimeSpanFormat_Pattern__Enum pattern, MethodInfo * method));
DO_APP_FUNC(0x01DF0A90, String *, TimeSpanFormat_FormatCustomized, (TimeSpan value, String * format, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x01DF1760, void, TimeSpanFormat__cctor, (MethodInfo * method));
DO_APP_FUNC(0x001D3A80, String *, TimeSpanFormat_FormatLiterals_get_Start, (TimeSpanFormat_FormatLiterals__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D3AC0, String *, TimeSpanFormat_FormatLiterals_get_DayHourSep, (TimeSpanFormat_FormatLiterals__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D3B00, String *, TimeSpanFormat_FormatLiterals_get_HourMinuteSep, (TimeSpanFormat_FormatLiterals__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D3B40, String *, TimeSpanFormat_FormatLiterals_get_MinuteSecondSep, (TimeSpanFormat_FormatLiterals__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D3B80, String *, TimeSpanFormat_FormatLiterals_get_SecondFractionSep, (TimeSpanFormat_FormatLiterals__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D3BC0, String *, TimeSpanFormat_FormatLiterals_get_End, (TimeSpanFormat_FormatLiterals__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01DF1840, TimeSpanFormat_FormatLiterals, TimeSpanFormat_FormatLiterals_InitInvariant, (bool isNegative, MethodInfo * method));
DO_APP_FUNC(0x001D3C00, void, TimeSpanFormat_FormatLiterals_Init, (TimeSpanFormat_FormatLiterals__Boxed * __this, String * format, bool useInvariantFieldLengths, MethodInfo * method));
DO_APP_FUNC(0x01DF2000, bool, TimeSpanParse_TryTimeToTicks, (bool positive, TimeSpanParse_TimeSpanToken days, TimeSpanParse_TimeSpanToken hours, TimeSpanParse_TimeSpanToken minutes, TimeSpanParse_TimeSpanToken seconds, TimeSpanParse_TimeSpanToken fraction, int64_t * result, MethodInfo * method));
DO_APP_FUNC(0x01DF2350, TimeSpan, TimeSpanParse_Parse, (String * input, IFormatProvider * formatProvider, MethodInfo * method));
DO_APP_FUNC(0x01DF2450, bool, TimeSpanParse_TryParse, (String * input, IFormatProvider * formatProvider, TimeSpan * result, MethodInfo * method));
DO_APP_FUNC(0x01DF2550, bool, TimeSpanParse_TryParseTimeSpan, (String * input, TimeSpanParse_TimeSpanStandardStyles__Enum style, IFormatProvider * formatProvider, TimeSpanParse_TimeSpanResult * result, MethodInfo * method));
DO_APP_FUNC(0x01DF27C0, bool, TimeSpanParse_ProcessTerminalState, (TimeSpanParse_TimeSpanRawInfo * raw, TimeSpanParse_TimeSpanStandardStyles__Enum style, TimeSpanParse_TimeSpanResult * result, MethodInfo * method));
DO_APP_FUNC(0x01DF29D0, bool, TimeSpanParse_ProcessTerminal_DHMSF, (TimeSpanParse_TimeSpanRawInfo * raw, TimeSpanParse_TimeSpanStandardStyles__Enum style, TimeSpanParse_TimeSpanResult * result, MethodInfo * method));
DO_APP_FUNC(0x01DF2E50, bool, TimeSpanParse_ProcessTerminal_HMS_F_D, (TimeSpanParse_TimeSpanRawInfo * raw, TimeSpanParse_TimeSpanStandardStyles__Enum style, TimeSpanParse_TimeSpanResult * result, MethodInfo * method));
DO_APP_FUNC(0x01DF4850, bool, TimeSpanParse_ProcessTerminal_HM_S_D, (TimeSpanParse_TimeSpanRawInfo * raw, TimeSpanParse_TimeSpanStandardStyles__Enum style, TimeSpanParse_TimeSpanResult * result, MethodInfo * method));
DO_APP_FUNC(0x01DF5ED0, bool, TimeSpanParse_ProcessTerminal_HM, (TimeSpanParse_TimeSpanRawInfo * raw, TimeSpanParse_TimeSpanStandardStyles__Enum style, TimeSpanParse_TimeSpanResult * result, MethodInfo * method));
DO_APP_FUNC(0x01DF6280, bool, TimeSpanParse_ProcessTerminal_D, (TimeSpanParse_TimeSpanRawInfo * raw, TimeSpanParse_TimeSpanStandardStyles__Enum style, TimeSpanParse_TimeSpanResult * result, MethodInfo * method));
DO_APP_FUNC(0x01DF6610, void, TimeSpanParse__cctor, (MethodInfo * method));
DO_APP_FUNC(0x001D4560, void, TimeSpanParse_TimeSpanToken__ctor, (TimeSpanParse_TimeSpanToken__Boxed * __this, int32_t number, MethodInfo * method));
DO_APP_FUNC(0x001D4580, bool, TimeSpanParse_TimeSpanToken_IsInvalidNumber, (TimeSpanParse_TimeSpanToken__Boxed * __this, int32_t maxValue, int32_t maxPrecision, MethodInfo * method));
DO_APP_FUNC(0x001D4590, void, TimeSpanParse_TimeSpanTokenizer_Init, (TimeSpanParse_TimeSpanTokenizer__Boxed * __this, String * input, MethodInfo * method));
DO_APP_FUNC(0x001D45A0, void, TimeSpanParse_TimeSpanTokenizer_Init_1, (TimeSpanParse_TimeSpanTokenizer__Boxed * __this, String * input, int32_t startPosition, MethodInfo * method));
DO_APP_FUNC(0x001D45B0, TimeSpanParse_TimeSpanToken, TimeSpanParse_TimeSpanTokenizer_GetNextToken, (TimeSpanParse_TimeSpanTokenizer__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D45E0, bool, TimeSpanParse_TimeSpanTokenizer_get_EOL, (TimeSpanParse_TimeSpanTokenizer__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D4610, uint16_t, TimeSpanParse_TimeSpanTokenizer_get_NextChar, (TimeSpanParse_TimeSpanTokenizer__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D4660, uint16_t, TimeSpanParse_TimeSpanTokenizer_get_CurrentChar, (TimeSpanParse_TimeSpanTokenizer__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D3C30, TimeSpanFormat_FormatLiterals, TimeSpanParse_TimeSpanRawInfo_get_PositiveInvariant, (TimeSpanParse_TimeSpanRawInfo__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D3C70, TimeSpanFormat_FormatLiterals, TimeSpanParse_TimeSpanRawInfo_get_NegativeInvariant, (TimeSpanParse_TimeSpanRawInfo__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D3CB0, TimeSpanFormat_FormatLiterals, TimeSpanParse_TimeSpanRawInfo_get_PositiveLocalized, (TimeSpanParse_TimeSpanRawInfo__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D3D20, TimeSpanFormat_FormatLiterals, TimeSpanParse_TimeSpanRawInfo_get_NegativeLocalized, (TimeSpanParse_TimeSpanRawInfo__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D3D90, bool, TimeSpanParse_TimeSpanRawInfo_FullAppCompatMatch, (TimeSpanParse_TimeSpanRawInfo__Boxed * __this, TimeSpanFormat_FormatLiterals pattern, MethodInfo * method));
DO_APP_FUNC(0x001D3DD0, bool, TimeSpanParse_TimeSpanRawInfo_PartialAppCompatMatch, (TimeSpanParse_TimeSpanRawInfo__Boxed * __this, TimeSpanFormat_FormatLiterals pattern, MethodInfo * method));
DO_APP_FUNC(0x001D3E10, bool, TimeSpanParse_TimeSpanRawInfo_FullMatch, (TimeSpanParse_TimeSpanRawInfo__Boxed * __this, TimeSpanFormat_FormatLiterals pattern, MethodInfo * method));
DO_APP_FUNC(0x001D3E50, bool, TimeSpanParse_TimeSpanRawInfo_FullDMatch, (TimeSpanParse_TimeSpanRawInfo__Boxed * __this, TimeSpanFormat_FormatLiterals pattern, MethodInfo * method));
DO_APP_FUNC(0x001D3E90, bool, TimeSpanParse_TimeSpanRawInfo_FullHMMatch, (TimeSpanParse_TimeSpanRawInfo__Boxed * __this, TimeSpanFormat_FormatLiterals pattern, MethodInfo * method));
DO_APP_FUNC(0x001D3ED0, bool, TimeSpanParse_TimeSpanRawInfo_FullDHMMatch, (TimeSpanParse_TimeSpanRawInfo__Boxed * __this, TimeSpanFormat_FormatLiterals pattern, MethodInfo * method));
DO_APP_FUNC(0x001D3F10, bool, TimeSpanParse_TimeSpanRawInfo_FullHMSMatch, (TimeSpanParse_TimeSpanRawInfo__Boxed * __this, TimeSpanFormat_FormatLiterals pattern, MethodInfo * method));
DO_APP_FUNC(0x001D3F50, bool, TimeSpanParse_TimeSpanRawInfo_FullDHMSMatch, (TimeSpanParse_TimeSpanRawInfo__Boxed * __this, TimeSpanFormat_FormatLiterals pattern, MethodInfo * method));
DO_APP_FUNC(0x001D3F90, bool, TimeSpanParse_TimeSpanRawInfo_FullHMSFMatch, (TimeSpanParse_TimeSpanRawInfo__Boxed * __this, TimeSpanFormat_FormatLiterals pattern, MethodInfo * method));
DO_APP_FUNC(0x001D3FD0, void, TimeSpanParse_TimeSpanRawInfo_Init, (TimeSpanParse_TimeSpanRawInfo__Boxed * __this, DateTimeFormatInfo * dtfi, MethodInfo * method));
DO_APP_FUNC(0x001D3FE0, bool, TimeSpanParse_TimeSpanRawInfo_ProcessToken, (TimeSpanParse_TimeSpanRawInfo__Boxed * __this, TimeSpanParse_TimeSpanToken * tok, TimeSpanParse_TimeSpanResult * result, MethodInfo * method));
DO_APP_FUNC(0x001D3FF0, bool, TimeSpanParse_TimeSpanRawInfo_AddSep, (TimeSpanParse_TimeSpanRawInfo__Boxed * __this, String * sep, TimeSpanParse_TimeSpanResult * result, MethodInfo * method));
DO_APP_FUNC(0x001D4000, bool, TimeSpanParse_TimeSpanRawInfo_AddNum, (TimeSpanParse_TimeSpanRawInfo__Boxed * __this, TimeSpanParse_TimeSpanToken num, TimeSpanParse_TimeSpanResult * result, MethodInfo * method));
DO_APP_FUNC(0x001D43C0, void, TimeSpanParse_TimeSpanResult_Init, (TimeSpanParse_TimeSpanResult__Boxed * __this, TimeSpanParse_TimeSpanThrowStyle__Enum canThrow, MethodInfo * method));
DO_APP_FUNC(0x001D43D0, void, TimeSpanParse_TimeSpanResult_SetFailure, (TimeSpanParse_TimeSpanResult__Boxed * __this, TimeSpanParse_ParseFailureKind__Enum failure, String * failureMessageID, MethodInfo * method));
DO_APP_FUNC(0x001D43F0, void, TimeSpanParse_TimeSpanResult_SetFailure_1, (TimeSpanParse_TimeSpanResult__Boxed * __this, TimeSpanParse_ParseFailureKind__Enum failure, String * failureMessageID, Object * failureMessageFormatArgument, MethodInfo * method));
DO_APP_FUNC(0x001D4410, void, TimeSpanParse_TimeSpanResult_SetFailure_2, (TimeSpanParse_TimeSpanResult__Boxed * __this, TimeSpanParse_ParseFailureKind__Enum failure, String * failureMessageID, Object * failureMessageFormatArgument, String * failureArgumentName, MethodInfo * method));
DO_APP_FUNC(0x001D4420, Exception *, TimeSpanParse_TimeSpanResult_GetTimeSpanParseException, (TimeSpanParse_TimeSpanResult__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01DEBF40, int32_t, SortKey_Compare, (SortKey * sortkey1, SortKey * sortkey2, MethodInfo * method));
DO_APP_FUNC(0x01DEC160, void, SortKey__ctor, (SortKey * __this, int32_t lcid, String * source, CompareOptions__Enum opt, MethodInfo * method));
DO_APP_FUNC(0x01DEC170, void, SortKey__ctor_1, (SortKey * __this, int32_t lcid, String * source, Byte__Array * buffer, CompareOptions__Enum opt, int32_t lv1Length, int32_t lv2Length, int32_t lv3Length, int32_t kanaSmallLength, int32_t markTypeLength, int32_t katakanaLength, int32_t kanaWidthLength, int32_t identLength, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, SortKey_get_OriginalString, (SortKey * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Byte__Array *, SortKey_get_KeyData, (SortKey * __this, MethodInfo * method));
DO_APP_FUNC(0x01DEC190, bool, SortKey_Equals, (SortKey * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01DEC290, int32_t, SortKey_GetHashCode, (SortKey * __this, MethodInfo * method));
DO_APP_FUNC(0x01DEC320, String *, SortKey_ToString, (SortKey * __this, MethodInfo * method));
DO_APP_FUNC(0x01DEC600, void, SortKey__ctor_2, (SortKey * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB70, void, CultureData__ctor, (CultureData * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x025F3860, CultureData *, CultureData_get_Invariant, (MethodInfo * method));
DO_APP_FUNC(0x025F3D40, CultureData *, CultureData_GetCultureData, (String * cultureName, bool useUserOverride, MethodInfo * method));
DO_APP_FUNC(0x025F3ED0, CultureData *, CultureData_GetCultureData_1, (String * cultureName, bool useUserOverride, int32_t datetimeIndex, int32_t calendarId, int32_t numberIndex, String * iso2lang, int32_t ansiCodePage, int32_t oemCodePage, int32_t macCodePage, int32_t ebcdicCodePage, bool rightToLeft, String * listSeparator, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, CultureData *, CultureData_GetCultureData_2, (int32_t culture, bool bUseUserOverride, MethodInfo * method));
DO_APP_FUNC(0x025F4170, void, CultureData_fill_culture_data, (CultureData * __this, int32_t datetimeIndex, MethodInfo * method));
DO_APP_FUNC(0x025F4270, CalendarData *, CultureData_GetCalendar, (CultureData * __this, int32_t calendarId, MethodInfo * method));
DO_APP_FUNC(0x025F4490, String__Array *, CultureData_get_LongTimes, (CultureData * __this, MethodInfo * method));
DO_APP_FUNC(0x025F44A0, String__Array *, CultureData_get_ShortTimes, (CultureData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, String *, CultureData_get_SISO639LANGNAME, (CultureData * __this, MethodInfo * method));
DO_APP_FUNC(0x003FC7F0, int32_t, CultureData_get_IFIRSTDAYOFWEEK, (CultureData * __this, MethodInfo * method));
DO_APP_FUNC(0x003FC830, int32_t, CultureData_get_IFIRSTWEEKOFYEAR, (CultureData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, CultureData_get_SAM1159, (CultureData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, CultureData_get_SPM2359, (CultureData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, CultureData_get_TimeSeparator, (CultureData * __this, MethodInfo * method));
DO_APP_FUNC(0x025F44B0, Int32__Array *, CultureData_get_CalendarIds, (CultureData * __this, MethodInfo * method));
DO_APP_FUNC(0x025F46B0, bool, CultureData_get_IsInvariantCulture, (CultureData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, String *, CultureData_get_CultureName, (CultureData * __this, MethodInfo * method));
DO_APP_FUNC(0x025F46D0, String *, CultureData_get_SCOMPAREINFO, (CultureData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, String *, CultureData_get_STEXTINFO, (CultureData * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, int32_t, CultureData_get_ILANGUAGE, (CultureData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FCE30, bool, CultureData_get_UseUserOverride, (CultureData * __this, MethodInfo * method));
DO_APP_FUNC(0x025F4750, String__Array *, CultureData_EraNames, (CultureData * __this, int32_t calendarId, MethodInfo * method));
DO_APP_FUNC(0x025F4770, String__Array *, CultureData_AbbrevEraNames, (CultureData * __this, int32_t calendarId, MethodInfo * method));
DO_APP_FUNC(0x025F4790, String__Array *, CultureData_AbbreviatedEnglishEraNames, (CultureData * __this, int32_t calendarId, MethodInfo * method));
DO_APP_FUNC(0x025F47B0, String__Array *, CultureData_ShortDates, (CultureData * __this, int32_t calendarId, MethodInfo * method));
DO_APP_FUNC(0x025F47D0, String__Array *, CultureData_LongDates, (CultureData * __this, int32_t calendarId, MethodInfo * method));
DO_APP_FUNC(0x025F47F0, String__Array *, CultureData_YearMonths, (CultureData * __this, int32_t calendarId, MethodInfo * method));
DO_APP_FUNC(0x025F4810, String__Array *, CultureData_DayNames, (CultureData * __this, int32_t calendarId, MethodInfo * method));
DO_APP_FUNC(0x025F4830, String__Array *, CultureData_AbbreviatedDayNames, (CultureData * __this, int32_t calendarId, MethodInfo * method));
DO_APP_FUNC(0x025F4850, String__Array *, CultureData_MonthNames, (CultureData * __this, int32_t calendarId, MethodInfo * method));
DO_APP_FUNC(0x025F4870, String__Array *, CultureData_GenitiveMonthNames, (CultureData * __this, int32_t calendarId, MethodInfo * method));
DO_APP_FUNC(0x025F4890, String__Array *, CultureData_AbbreviatedMonthNames, (CultureData * __this, int32_t calendarId, MethodInfo * method));
DO_APP_FUNC(0x025F48B0, String__Array *, CultureData_AbbreviatedGenitiveMonthNames, (CultureData * __this, int32_t calendarId, MethodInfo * method));
DO_APP_FUNC(0x025F48E0, String__Array *, CultureData_LeapYearMonthNames, (CultureData * __this, int32_t calendarId, MethodInfo * method));
DO_APP_FUNC(0x025F4910, String *, CultureData_MonthDay, (CultureData * __this, int32_t calendarId, MethodInfo * method));
DO_APP_FUNC(0x025F4930, String *, CultureData_DateSeparator, (CultureData * __this, int32_t calendarId, MethodInfo * method));
DO_APP_FUNC(0x025F4980, String *, CultureData_GetDateSeparator, (String * format, MethodInfo * method));
DO_APP_FUNC(0x025F4B00, String *, CultureData_GetSeparator, (String * format, String * timeParts, MethodInfo * method));
DO_APP_FUNC(0x025F4C30, int32_t, CultureData_IndexOfTimePart, (String * format, int32_t startIndex, String * timeParts, MethodInfo * method));
DO_APP_FUNC(0x025F4D30, String *, CultureData_UnescapeNlsString, (String * str, int32_t start, int32_t end, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, String__Array *, CultureData_ReescapeWin32Strings, (String__Array * array, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, String *, CultureData_ReescapeWin32String, (String * str, MethodInfo * method));
DO_APP_FUNC(0x025F5090, void, CultureData_GetNFIValues, (CultureData * __this, NumberFormatInfo * nfi, MethodInfo * method));
DO_APP_FUNC(0x025F50F0, void, CultureData_fill_number_data, (NumberFormatInfo * nfi, int32_t numberIndex, MethodInfo * method));
DO_APP_FUNC(0x01A22490, void, CodePageDataItem__ctor, (CodePageDataItem * __this, int32_t dataIndex, MethodInfo * method));
DO_APP_FUNC(0x01A225B0, String *, CodePageDataItem_CreateString, (String * pStrings, uint32_t index, MethodInfo * method));
DO_APP_FUNC(0x01A226E0, String *, CodePageDataItem_get_WebName, (CodePageDataItem * __this, MethodInfo * method));
DO_APP_FUNC(0x01A228F0, void, CodePageDataItem__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02607260, int32_t, EncodingTable_GetNumEncodingItems, (MethodInfo * method));
DO_APP_FUNC(0x02607310, InternalEncodingDataItem, EncodingTable_ENC, (String * name, uint16_t cp, MethodInfo * method));
DO_APP_FUNC(0x02607340, InternalCodePageDataItem, EncodingTable_MapCodePageDataItem, (uint16_t cp, uint16_t fcp, String * names, uint32_t flags, MethodInfo * method));
DO_APP_FUNC(0x02607370, void, EncodingTable__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0260FB60, int32_t, EncodingTable_internalGetCodePageFromName, (String * name, MethodInfo * method));
DO_APP_FUNC(0x02610060, int32_t, EncodingTable_GetCodePageFromName, (String * name, MethodInfo * method));
DO_APP_FUNC(0x02610230, CodePageDataItem *, EncodingTable_GetCodePageDataItem, (int32_t codepage, MethodInfo * method));
DO_APP_FUNC(0x01DEFF60, void, TextInfoToUpperData__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01DEFCF0, void, TextInfoToLowerData__cctor, (MethodInfo * method));
DO_APP_FUNC(0x025F5100, CultureInfo *, CultureInfo_get_InvariantCulture, (MethodInfo * method));
DO_APP_FUNC(0x025F51B0, CultureInfo *, CultureInfo_get_CurrentCulture, (MethodInfo * method));
DO_APP_FUNC(0x025F51E0, CultureInfo *, CultureInfo_get_CurrentUICulture, (MethodInfo * method));
DO_APP_FUNC(0x025F5210, CultureInfo *, CultureInfo_ConstructCurrentCulture, (MethodInfo * method));
DO_APP_FUNC(0x025F5450, CultureInfo *, CultureInfo_ConstructCurrentUICulture, (MethodInfo * method));
DO_APP_FUNC(0x002FBBE0, String *, CultureInfo_get_Territory, (CultureInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00CC59E0, int32_t, CultureInfo_get_LCID, (CultureInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, String *, CultureInfo_get_Name, (CultureInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025F54E0, Calendar *, CultureInfo_get_Calendar, (CultureInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025F55B0, CultureInfo *, CultureInfo_get_Parent, (CultureInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025F5B00, TextInfo *, CultureInfo_get_TextInfo, (CultureInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025F5D70, Object *, CultureInfo_Clone, (CultureInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025F6020, bool, CultureInfo_Equals, (CultureInfo * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x025F6140, CultureInfo__Array *, CultureInfo_GetCultures, (CultureTypes__Enum types, MethodInfo * method));
DO_APP_FUNC(0x025F6680, CultureInfo_Data, CultureInfo_GetTextInfoData, (CultureInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00CC59E0, int32_t, CultureInfo_GetHashCode, (CultureInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025F66A0, CultureInfo *, CultureInfo_ReadOnly, (CultureInfo * ci, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, String *, CultureInfo_ToString, (CultureInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025F6990, CompareInfo *, CultureInfo_get_CompareInfo, (CultureInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025F6BE0, bool, CultureInfo_get_IsNeutralCulture, (CultureInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CultureInfo_CheckNeutral, (CultureInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025F6C20, NumberFormatInfo *, CultureInfo_get_NumberFormat, (CultureInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025F6DB0, void, CultureInfo_set_NumberFormat, (CultureInfo * __this, NumberFormatInfo * value, MethodInfo * method));
DO_APP_FUNC(0x025F6F00, DateTimeFormatInfo *, CultureInfo_get_DateTimeFormat, (CultureInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025F70E0, void, CultureInfo_set_DateTimeFormat, (CultureInfo * __this, DateTimeFormatInfo * value, MethodInfo * method));
DO_APP_FUNC(0x025F7230, String *, CultureInfo_get_EnglishName, (CultureInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, CultureInfo_get_IsReadOnly, (CultureInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025F72A0, Object *, CultureInfo_GetFormat, (CultureInfo * __this, Type * formatType, MethodInfo * method));
DO_APP_FUNC(0x025F73E0, void, CultureInfo_Construct, (CultureInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025F7440, bool, CultureInfo_construct_internal_locale_from_lcid, (CultureInfo * __this, int32_t lcid, MethodInfo * method));
DO_APP_FUNC(0x025F74A0, bool, CultureInfo_construct_internal_locale_from_name, (CultureInfo * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x025F75C0, String *, CultureInfo_get_current_locale_name, (MethodInfo * method));
DO_APP_FUNC(0x025F7650, CultureInfo__Array *, CultureInfo_internal_get_cultures, (bool neutral, bool specific, bool installed, MethodInfo * method));
DO_APP_FUNC(0x025F7770, void, CultureInfo_ConstructInvariant, (CultureInfo * __this, bool read_only, MethodInfo * method));
DO_APP_FUNC(0x025F78C0, TextInfo *, CultureInfo_CreateTextInfo, (CultureInfo * __this, bool readOnly, MethodInfo * method));
DO_APP_FUNC(0x025F7A30, void, CultureInfo__ctor, (CultureInfo * __this, int32_t culture, MethodInfo * method));
DO_APP_FUNC(0x025F7A50, void, CultureInfo__ctor_1, (CultureInfo * __this, int32_t culture, bool useUserOverride, MethodInfo * method));
DO_APP_FUNC(0x025F7A70, void, CultureInfo__ctor_2, (CultureInfo * __this, int32_t culture, bool useUserOverride, bool read_only, MethodInfo * method));
DO_APP_FUNC(0x025F7D70, void, CultureInfo__ctor_3, (CultureInfo * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x025F7D90, void, CultureInfo__ctor_4, (CultureInfo * __this, String * name, bool useUserOverride, MethodInfo * method));
DO_APP_FUNC(0x025F7DB0, void, CultureInfo__ctor_5, (CultureInfo * __this, String * name, bool useUserOverride, bool read_only, MethodInfo * method));
DO_APP_FUNC(0x025F8150, void, CultureInfo__ctor_6, (CultureInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025F8160, void, CultureInfo_insert_into_shared_tables, (CultureInfo * c, MethodInfo * method));
DO_APP_FUNC(0x025F84F0, CultureInfo *, CultureInfo_GetCultureInfo, (int32_t culture, MethodInfo * method));
DO_APP_FUNC(0x025F88B0, CultureInfo *, CultureInfo_GetCultureInfo_1, (String * name, MethodInfo * method));
DO_APP_FUNC(0x025F8C60, CultureInfo *, CultureInfo_CreateCulture, (String * name, bool reference, MethodInfo * method));
DO_APP_FUNC(0x025F8DE0, CultureInfo *, CultureInfo_CreateSpecificCulture, (String * name, MethodInfo * method));
DO_APP_FUNC(0x025F9340, CultureInfo *, CultureInfo_CreateSpecificCultureFromNeutral, (String * name, MethodInfo * method));
DO_APP_FUNC(0x025FAE50, int32_t, CultureInfo_get_CalendarType, (CultureInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FAF30, Calendar *, CultureInfo_CreateCalendar, (int32_t calendarType, MethodInfo * method));
DO_APP_FUNC(0x025FB250, Exception *, CultureInfo_CreateNotFoundException, (String * name, MethodInfo * method));
DO_APP_FUNC(0x025FB3D0, CultureInfo *, CultureInfo_get_DefaultThreadCurrentCulture, (MethodInfo * method));
DO_APP_FUNC(0x025FB480, CultureInfo *, CultureInfo_get_DefaultThreadCurrentUICulture, (MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, String *, CultureInfo_get_SortName, (CultureInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FB530, CultureInfo *, CultureInfo_get_UserDefaultUICulture, (MethodInfo * method));
DO_APP_FUNC(0x025FB5C0, CultureInfo *, CultureInfo_get_UserDefaultCulture, (MethodInfo * method));
DO_APP_FUNC(0x025FB650, void, CultureInfo_CheckDomainSafetyObject, (Object * obj, Object * container, MethodInfo * method));
DO_APP_FUNC(0x025FB870, bool, CultureInfo_get_HasInvariantCultureName, (CultureInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025FB970, bool, CultureInfo_VerifyCultureName, (String * cultureName, bool throwException, MethodInfo * method));
DO_APP_FUNC(0x025FBAF0, bool, CultureInfo_VerifyCultureName_1, (CultureInfo * culture, bool throwException, MethodInfo * method));
DO_APP_FUNC(0x025FBBE0, void, CultureInfo__cctor, (MethodInfo * method));
DO_APP_FUNC(0x026168E0, void, IdnMapping__ctor, (IdnMapping * __this, MethodInfo * method));
DO_APP_FUNC(0x02616A60, bool, IdnMapping_Equals, (IdnMapping * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x02616B20, int32_t, IdnMapping_GetHashCode, (IdnMapping * __this, MethodInfo * method));
DO_APP_FUNC(0x02616B40, String *, IdnMapping_GetAscii, (IdnMapping * __this, String * unicode, MethodInfo * method));
DO_APP_FUNC(0x02616CC0, String *, IdnMapping_GetAscii_1, (IdnMapping * __this, String * unicode, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02616E30, String *, IdnMapping_Convert, (IdnMapping * __this, String * input, int32_t index, int32_t count, bool toAscii, MethodInfo * method));
DO_APP_FUNC(0x026170D0, String *, IdnMapping_ToAscii, (IdnMapping * __this, String * s, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x02617550, void, IdnMapping_VerifyLength, (IdnMapping * __this, String * s, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x026176A0, String *, IdnMapping_NamePrep, (IdnMapping * __this, String * s, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x02617820, void, IdnMapping_VerifyProhibitedCharacters, (IdnMapping * __this, String * s, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x02617A60, void, IdnMapping_VerifyStd3AsciiRules, (IdnMapping * __this, String * s, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x02617CC0, String *, IdnMapping_GetUnicode, (IdnMapping * __this, String * ascii, MethodInfo * method));
DO_APP_FUNC(0x02617E40, String *, IdnMapping_GetUnicode_1, (IdnMapping * __this, String * ascii, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02617FB0, String *, IdnMapping_ToUnicode, (IdnMapping * __this, String * s, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x01A1D930, void, Bootstring__ctor, (Bootstring * __this, uint16_t delimiter, int32_t baseNum, int32_t tmin, int32_t tmax, int32_t skew, int32_t damp, int32_t initialBias, int32_t initialN, MethodInfo * method));
DO_APP_FUNC(0x01A1D960, String *, Bootstring_Encode, (Bootstring * __this, String * s, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x01A1DF90, uint16_t, Bootstring_EncodeDigit, (Bootstring * __this, int32_t d, MethodInfo * method));
DO_APP_FUNC(0x01A1DFB0, int32_t, Bootstring_DecodeDigit, (Bootstring * __this, uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x01A1DFE0, int32_t, Bootstring_Adapt, (Bootstring * __this, int32_t delta, int32_t numPoints, bool firstTime, MethodInfo * method));
DO_APP_FUNC(0x01A1E050, String *, Bootstring_Decode, (Bootstring * __this, String * s, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x01DEB430, void, Punycode__ctor, (Punycode * __this, MethodInfo * method));
DO_APP_FUNC(0x01DEB470, RegionInfo *, RegionInfo_get_CurrentRegion, (MethodInfo * method));
DO_APP_FUNC(0x01DEB760, void, RegionInfo__ctor, (RegionInfo * __this, int32_t culture, MethodInfo * method));
DO_APP_FUNC(0x01DEB880, void, RegionInfo__ctor_1, (RegionInfo * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01DEB9D0, void, RegionInfo__ctor_2, (RegionInfo * __this, CultureInfo * ci, MethodInfo * method));
DO_APP_FUNC(0x01DEBB30, bool, RegionInfo_GetByTerritory, (RegionInfo * __this, CultureInfo * ci, MethodInfo * method));
DO_APP_FUNC(0x01DEBC30, bool, RegionInfo_construct_internal_region_from_name, (RegionInfo * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, String *, RegionInfo_get_CurrencyEnglishName, (RegionInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, String *, RegionInfo_get_CurrencySymbol, (RegionInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, RegionInfo_get_DisplayName, (RegionInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, RegionInfo_get_EnglishName, (RegionInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, RegionInfo_get_GeoId, (RegionInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01DEBC40, bool, RegionInfo_get_IsMetric, (RegionInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, String *, RegionInfo_get_ISOCurrencySymbol, (RegionInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, String *, RegionInfo_get_NativeName, (RegionInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, String *, RegionInfo_get_CurrencyNativeName, (RegionInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, RegionInfo_get_Name, (RegionInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, RegionInfo_get_ThreeLetterISORegionName, (RegionInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, RegionInfo_get_ThreeLetterWindowsRegionName, (RegionInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, RegionInfo_get_TwoLetterISORegionName, (RegionInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01DEBD20, bool, RegionInfo_Equals, (RegionInfo * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01DEBE60, int32_t, RegionInfo_GetHashCode, (RegionInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01DEBEA0, String *, RegionInfo_ToString, (RegionInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01DEBEC0, void, RegionInfo_ClearCachedData, (MethodInfo * method));
DO_APP_FUNC(0x0227B260, int32_t, HashHelpers_Combine, (int32_t h1, int32_t h2, MethodInfo * method));
DO_APP_FUNC(0x0227B280, void, HashHelpers__cctor, (MethodInfo * method));
DO_APP_FUNC(0x027D82B0, bool, AtomicBoolean_TryRelaxedSet, (AtomicBoolean * __this, MethodInfo * method));
DO_APP_FUNC(0x027D82D0, bool, AtomicBoolean_Exchange, (AtomicBoolean * __this, bool newVal, MethodInfo * method));
DO_APP_FUNC(0x027D82E0, bool, AtomicBoolean_Equals, (AtomicBoolean * __this, AtomicBoolean * rhs, MethodInfo * method));
DO_APP_FUNC(0x027D8300, bool, AtomicBoolean_Equals_1, (AtomicBoolean * __this, Object * rhs, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, AtomicBoolean_GetHashCode, (AtomicBoolean * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AtomicBoolean__ctor, (AtomicBoolean * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, CancellationToken, CancellationToken_get_None, (MethodInfo * method));
DO_APP_FUNC(0x00206AE0, bool, CancellationToken_get_IsCancellationRequested, (CancellationToken__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00206B00, bool, CancellationToken_get_CanBeCanceled, (CancellationToken__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, CancellationToken__ctor, (CancellationToken__Boxed * __this, CancellationTokenSource * source, MethodInfo * method));
DO_APP_FUNC(0x027D87E0, void, CancellationToken_ActionToActionObjShunt, (Object * obj, MethodInfo * method));
DO_APP_FUNC(0x00206B20, CancellationTokenRegistration, CancellationToken_Register, (CancellationToken__Boxed * __this, Action * callback, MethodInfo * method));
DO_APP_FUNC(0x00206B50, CancellationTokenRegistration, CancellationToken_InternalRegisterWithoutEC, (CancellationToken__Boxed * __this, Action_1_Object_ * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x00206B90, CancellationTokenRegistration, CancellationToken_Register_1, (CancellationToken__Boxed * __this, Action_1_Object_ * callback, Object * state, bool useSynchronizationContext, bool useExecutionContext, MethodInfo * method));
DO_APP_FUNC(0x00206BE0, bool, CancellationToken_Equals, (CancellationToken__Boxed * __this, CancellationToken other, MethodInfo * method));
DO_APP_FUNC(0x00206BF0, bool, CancellationToken_Equals_1, (CancellationToken__Boxed * __this, Object * other, MethodInfo * method));
DO_APP_FUNC(0x00206C00, int32_t, CancellationToken_GetHashCode, (CancellationToken__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x027D8D80, bool, CancellationToken_op_Equality, (CancellationToken left, CancellationToken right, MethodInfo * method));
DO_APP_FUNC(0x027D8DA0, bool, CancellationToken_op_Inequality, (CancellationToken left, CancellationToken right, MethodInfo * method));
DO_APP_FUNC(0x00206CE0, void, CancellationToken_ThrowIfCancellationRequested, (CancellationToken__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00206D10, void, CancellationToken_ThrowIfSourceDisposed, (CancellationToken__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00206D20, void, CancellationToken_ThrowOperationCanceledException, (CancellationToken__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x027D8EE0, void, CancellationToken_ThrowObjectDisposedException, (MethodInfo * method));
DO_APP_FUNC(0x027D8F50, void, CancellationToken__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00151540, void, CancellationTokenRegistration__ctor, (CancellationTokenRegistration__Boxed * __this, CancellationCallbackInfo * callbackInfo, SparselyPopulatedArrayAddInfo_1_CancellationCallbackInfo_ registrationInfo, MethodInfo * method));
DO_APP_FUNC(0x00206D50, bool, CancellationTokenRegistration_TryDeregister, (CancellationTokenRegistration__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00206D60, void, CancellationTokenRegistration_Dispose, (CancellationTokenRegistration__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00206D70, bool, CancellationTokenRegistration_Equals, (CancellationTokenRegistration__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x00206D80, bool, CancellationTokenRegistration_Equals_1, (CancellationTokenRegistration__Boxed * __this, CancellationTokenRegistration other, MethodInfo * method));
DO_APP_FUNC(0x00206DB0, int32_t, CancellationTokenRegistration_GetHashCode, (CancellationTokenRegistration__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x027D94A0, void, CancellationTokenSource_LinkedTokenCancelDelegate, (Object * source, MethodInfo * method));
DO_APP_FUNC(0x027D95B0, bool, CancellationTokenSource_get_IsCancellationRequested, (CancellationTokenSource * __this, MethodInfo * method));
DO_APP_FUNC(0x027D95C0, bool, CancellationTokenSource_get_IsCancellationCompleted, (CancellationTokenSource * __this, MethodInfo * method));
DO_APP_FUNC(0x004F4CE0, bool, CancellationTokenSource_get_IsDisposed, (CancellationTokenSource * __this, MethodInfo * method));
DO_APP_FUNC(0x027D95D0, void, CancellationTokenSource_set_ThreadIDExecutingCallbacks, (CancellationTokenSource * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x027D95E0, int32_t, CancellationTokenSource_get_ThreadIDExecutingCallbacks, (CancellationTokenSource * __this, MethodInfo * method));
DO_APP_FUNC(0x027D95F0, CancellationToken, CancellationTokenSource_get_Token, (CancellationTokenSource * __this, MethodInfo * method));
DO_APP_FUNC(0x027D9610, bool, CancellationTokenSource_get_CanBeCanceled, (CancellationTokenSource * __this, MethodInfo * method));
DO_APP_FUNC(0x027D9620, CancellationCallbackInfo *, CancellationTokenSource_get_ExecutingCallback, (CancellationTokenSource * __this, MethodInfo * method));
DO_APP_FUNC(0x027D9630, void, CancellationTokenSource__ctor, (CancellationTokenSource * __this, MethodInfo * method));
DO_APP_FUNC(0x027D9650, void, CancellationTokenSource__ctor_1, (CancellationTokenSource * __this, bool set, MethodInfo * method));
DO_APP_FUNC(0x027D9670, void, CancellationTokenSource_Cancel, (CancellationTokenSource * __this, MethodInfo * method));
DO_APP_FUNC(0x027D96A0, void, CancellationTokenSource_Cancel_1, (CancellationTokenSource * __this, bool throwOnFirstException, MethodInfo * method));
DO_APP_FUNC(0x027D96D0, void, CancellationTokenSource_TimerCallbackLogic, (Object * obj, MethodInfo * method));
DO_APP_FUNC(0x027D97F0, void, CancellationTokenSource_Dispose, (CancellationTokenSource * __this, MethodInfo * method));
DO_APP_FUNC(0x027D98A0, void, CancellationTokenSource_Dispose_1, (CancellationTokenSource * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x027D9990, void, CancellationTokenSource_ThrowIfDisposed, (CancellationTokenSource * __this, MethodInfo * method));
DO_APP_FUNC(0x027D9A30, void, CancellationTokenSource_ThrowObjectDisposedException, (MethodInfo * method));
DO_APP_FUNC(0x027D9AA0, CancellationTokenSource *, CancellationTokenSource_InternalGetStaticSource, (bool set, MethodInfo * method));
DO_APP_FUNC(0x027D9B80, CancellationTokenRegistration, CancellationTokenSource_InternalRegister, (CancellationTokenSource * __this, Action_1_Object_ * callback, Object * stateForCallback, SynchronizationContext * targetSyncContext, ExecutionContext * executionContext, MethodInfo * method));
DO_APP_FUNC(0x027DA160, void, CancellationTokenSource_NotifyCancellation, (CancellationTokenSource * __this, bool throwOnFirstException, MethodInfo * method));
DO_APP_FUNC(0x027DA2D0, void, CancellationTokenSource_ExecuteCallbackHandlers, (CancellationTokenSource * __this, bool throwOnFirstException, MethodInfo * method));
DO_APP_FUNC(0x027DA880, void, CancellationTokenSource_CancellationCallbackCoreWork_OnSyncContext, (CancellationTokenSource * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x027DA940, void, CancellationTokenSource_CancellationCallbackCoreWork, (CancellationTokenSource * __this, CancellationCallbackCoreWorkArguments args, MethodInfo * method));
DO_APP_FUNC(0x027DAA70, CancellationTokenSource *, CancellationTokenSource_CreateLinkedTokenSource, (CancellationToken token1, CancellationToken token2, MethodInfo * method));
DO_APP_FUNC(0x027DAD80, CancellationTokenSource *, CancellationTokenSource_CreateLinkedTokenSource_1, (CancellationToken__Array * tokens, MethodInfo * method));
DO_APP_FUNC(0x027DB080, void, CancellationTokenSource_WaitForCallbackToComplete, (CancellationTokenSource * __this, CancellationCallbackInfo * callbackInfo, MethodInfo * method));
DO_APP_FUNC(0x027DB160, void, CancellationTokenSource__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0011D2D0, void, CancellationCallbackCoreWorkArguments__ctor, (CancellationCallbackCoreWorkArguments__Boxed * __this, SparselyPopulatedArrayFragment_1_CancellationCallbackInfo_ * currArrayFragment, int32_t currArrayIndex, MethodInfo * method));
DO_APP_FUNC(0x00F70AB0, void, CancellationCallbackInfo__ctor, (CancellationCallbackInfo * __this, Action_1_Object_ * callback, Object * stateForCallback, SynchronizationContext * targetSyncContext, ExecutionContext * targetExecutionContext, CancellationTokenSource * cancellationTokenSource, MethodInfo * method));
DO_APP_FUNC(0x027D8450, void, CancellationCallbackInfo_ExecuteCallback, (CancellationCallbackInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x027D86E0, void, CancellationCallbackInfo_ExecutionContextCallback, (Object * obj, MethodInfo * method));
DO_APP_FUNC(0x027DE960, WaitHandle *, ManualResetEventSlim_get_WaitHandle, (ManualResetEventSlim * __this, MethodInfo * method));
DO_APP_FUNC(0x027DE9A0, bool, ManualResetEventSlim_get_IsSet, (ManualResetEventSlim * __this, MethodInfo * method));
DO_APP_FUNC(0x027DEA40, void, ManualResetEventSlim_set_IsSet, (ManualResetEventSlim * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x027DEA70, int32_t, ManualResetEventSlim_get_SpinCount, (ManualResetEventSlim * __this, MethodInfo * method));
DO_APP_FUNC(0x027DEB20, void, ManualResetEventSlim_set_SpinCount, (ManualResetEventSlim * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x027DEB40, int32_t, ManualResetEventSlim_get_Waiters, (ManualResetEventSlim * __this, MethodInfo * method));
DO_APP_FUNC(0x027DEBE0, void, ManualResetEventSlim_set_Waiters, (ManualResetEventSlim * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x027DECE0, void, ManualResetEventSlim__ctor, (ManualResetEventSlim * __this, bool initialState, MethodInfo * method));
DO_APP_FUNC(0x027DED40, void, ManualResetEventSlim__ctor_1, (ManualResetEventSlim * __this, bool initialState, int32_t spinCount, MethodInfo * method));
DO_APP_FUNC(0x027DEE90, void, ManualResetEventSlim_Initialize, (ManualResetEventSlim * __this, bool initialState, int32_t spinCount, MethodInfo * method));
DO_APP_FUNC(0x027DEF00, void, ManualResetEventSlim_EnsureLockObjectCreated, (ManualResetEventSlim * __this, MethodInfo * method));
DO_APP_FUNC(0x027DF060, bool, ManualResetEventSlim_LazyInitializeEvent, (ManualResetEventSlim * __this, MethodInfo * method));
DO_APP_FUNC(0x0233B680, void, ManualResetEventSlim_Set, (ManualResetEventSlim * __this, MethodInfo * method));
DO_APP_FUNC(0x027DF2F0, void, ManualResetEventSlim_Set_1, (ManualResetEventSlim * __this, bool duringCancellation, MethodInfo * method));
DO_APP_FUNC(0x027DF510, bool, ManualResetEventSlim_Wait, (ManualResetEventSlim * __this, int32_t millisecondsTimeout, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x027DFC60, void, ManualResetEventSlim_Dispose, (ManualResetEventSlim * __this, MethodInfo * method));
DO_APP_FUNC(0x027DFD10, void, ManualResetEventSlim_Dispose_1, (ManualResetEventSlim * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x027DFE20, void, ManualResetEventSlim_ThrowIfDisposed, (ManualResetEventSlim * __this, MethodInfo * method));
DO_APP_FUNC(0x027DFEF0, void, ManualResetEventSlim_CancellationTokenCallback, (Object * obj, MethodInfo * method));
DO_APP_FUNC(0x027E0080, void, ManualResetEventSlim_UpdateStateAtomically, (ManualResetEventSlim * __this, int32_t newBits, int32_t updateBitsMask, MethodInfo * method));
DO_APP_FUNC(0x027E0180, int32_t, ManualResetEventSlim_ExtractStatePortionAndShiftRight, (int32_t state, int32_t mask, int32_t rightBitShiftCount, MethodInfo * method));
DO_APP_FUNC(0x027E0190, int32_t, ManualResetEventSlim_ExtractStatePortion, (int32_t state, int32_t mask, MethodInfo * method));
DO_APP_FUNC(0x027E01A0, void, ManualResetEventSlim__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0232AD00, int32_t, SemaphoreSlim_get_CurrentCount, (SemaphoreSlim * __this, MethodInfo * method));
DO_APP_FUNC(0x0232AD10, void, SemaphoreSlim__ctor, (SemaphoreSlim * __this, int32_t initialCount, MethodInfo * method));
DO_APP_FUNC(0x0232AD20, void, SemaphoreSlim__ctor_1, (SemaphoreSlim * __this, int32_t initialCount, int32_t maxCount, MethodInfo * method));
DO_APP_FUNC(0x0232AFA0, void, SemaphoreSlim_Wait, (SemaphoreSlim * __this, MethodInfo * method));
DO_APP_FUNC(0x0232AFB0, bool, SemaphoreSlim_Wait_1, (SemaphoreSlim * __this, int32_t millisecondsTimeout, MethodInfo * method));
DO_APP_FUNC(0x0232AFC0, bool, SemaphoreSlim_Wait_2, (SemaphoreSlim * __this, int32_t millisecondsTimeout, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x0232B5C0, bool, SemaphoreSlim_WaitUntilCountOrTimeout, (SemaphoreSlim * __this, int32_t millisecondsTimeout, uint32_t startTime, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x0232B670, Task *, SemaphoreSlim_WaitAsync, (SemaphoreSlim * __this, MethodInfo * method));
DO_APP_FUNC(0x0232B680, Task_1_System_Boolean_ *, SemaphoreSlim_WaitAsync_1, (SemaphoreSlim * __this, int32_t millisecondsTimeout, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x0232BAB0, SemaphoreSlim_TaskNode *, SemaphoreSlim_CreateAndAddAsyncWaiter, (SemaphoreSlim * __this, MethodInfo * method));
DO_APP_FUNC(0x0232BD20, bool, SemaphoreSlim_RemoveAsyncWaiter, (SemaphoreSlim * __this, SemaphoreSlim_TaskNode * task, MethodInfo * method));
DO_APP_FUNC(0x0232BDB0, Task_1_System_Boolean_ *, SemaphoreSlim_WaitUntilCountOrTimeoutAsync, (SemaphoreSlim * __this, SemaphoreSlim_TaskNode * asyncWaiter, int32_t millisecondsTimeout, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x0232BEF0, int32_t, SemaphoreSlim_Release, (SemaphoreSlim * __this, MethodInfo * method));
DO_APP_FUNC(0x0232BF00, int32_t, SemaphoreSlim_Release_1, (SemaphoreSlim * __this, int32_t releaseCount, MethodInfo * method));
DO_APP_FUNC(0x0232C210, void, SemaphoreSlim_QueueWaiterTask, (SemaphoreSlim_TaskNode * waiterTask, MethodInfo * method));
DO_APP_FUNC(0x0232C220, void, SemaphoreSlim_Dispose, (SemaphoreSlim * __this, MethodInfo * method));
DO_APP_FUNC(0x0232C2D0, void, SemaphoreSlim_Dispose_1, (SemaphoreSlim * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x0232C340, void, SemaphoreSlim_CancellationTokenCanceledEventHandler, (Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0232C4D0, void, SemaphoreSlim_CheckDispose, (SemaphoreSlim * __this, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, String *, SemaphoreSlim_GetResourceString, (String * str, MethodInfo * method));
DO_APP_FUNC(0x0232C5B0, void, SemaphoreSlim__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0232D090, void, SemaphoreSlim_TaskNode__ctor, (SemaphoreSlim_TaskNode * __this, MethodInfo * method));
DO_APP_FUNC(0x0232D1C0, void, SemaphoreSlim_TaskNode_System_Threading_IThreadPoolWorkItem_ExecuteWorkItem, (SemaphoreSlim_TaskNode * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SemaphoreSlim_TaskNode_System_Threading_IThreadPoolWorkItem_MarkAborted, (SemaphoreSlim_TaskNode * __this, ThreadAbortException * tae, MethodInfo * method));
DO_APP_FUNC(0x001E6A20, void, SemaphoreSlim_WaitUntilCountOrTimeoutAsync_d_31_MoveNext, (SemaphoreSlim_WaitUntilCountOrTimeoutAsync_d_31__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E6A30, void, SemaphoreSlim_WaitUntilCountOrTimeoutAsync_d_31_SetStateMachine, (SemaphoreSlim_WaitUntilCountOrTimeoutAsync_d_31__Boxed * __this, IAsyncStateMachine * stateMachine, MethodInfo * method));
DO_APP_FUNC(0x001E6AC0, void, SpinLock__ctor, (SpinLock__Boxed * __this, bool enableThreadOwnerTracking, MethodInfo * method));
DO_APP_FUNC(0x001E6AF0, void, SpinLock_Enter, (SpinLock__Boxed * __this, bool * lockTaken, MethodInfo * method));
DO_APP_FUNC(0x001E6B00, void, SpinLock_TryEnter, (SpinLock__Boxed * __this, int32_t millisecondsTimeout, bool * lockTaken, MethodInfo * method));
DO_APP_FUNC(0x001E6B10, void, SpinLock_ContinueTryEnter, (SpinLock__Boxed * __this, int32_t millisecondsTimeout, bool * lockTaken, MethodInfo * method));
DO_APP_FUNC(0x001E6B20, void, SpinLock_DecrementWaiters, (SpinLock__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E6B30, void, SpinLock_ContinueTryEnterWithThreadTracking, (SpinLock__Boxed * __this, int32_t millisecondsTimeout, uint32_t startTime, bool * lockTaken, MethodInfo * method));
DO_APP_FUNC(0x001E6B40, void, SpinLock_Exit, (SpinLock__Boxed * __this, bool useMemoryBarrier, MethodInfo * method));
DO_APP_FUNC(0x001E6B50, void, SpinLock_ExitSlowPath, (SpinLock__Boxed * __this, bool useMemoryBarrier, MethodInfo * method));
DO_APP_FUNC(0x001E6B60, bool, SpinLock_get_IsHeld, (SpinLock__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E6B90, bool, SpinLock_get_IsHeldByCurrentThread, (SpinLock__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E6BA0, bool, SpinLock_get_IsThreadOwnerTrackingEnabled, (SpinLock__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0232DF20, void, SpinLock__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, SpinLock_SystemThreading_SpinLockDebugView__ctor, (SpinLock_SystemThreading_SpinLockDebugView * __this, SpinLock spinLock, MethodInfo * method));
DO_APP_FUNC(0x0232DFA0, Nullable_1_Boolean_, SpinLock_SystemThreading_SpinLockDebugView_get_IsHeldByCurrentThread, (SpinLock_SystemThreading_SpinLockDebugView * __this, MethodInfo * method));
DO_APP_FUNC(0x0232E050, Nullable_1_Int32_, SpinLock_SystemThreading_SpinLockDebugView_get_OwnerThreadID, (SpinLock_SystemThreading_SpinLockDebugView * __this, MethodInfo * method));
DO_APP_FUNC(0x0232E100, bool, SpinLock_SystemThreading_SpinLockDebugView_get_IsHeld, (SpinLock_SystemThreading_SpinLockDebugView * __this, MethodInfo * method));
DO_APP_FUNC(0x001E6BB0, bool, SpinWait_get_NextSpinWillYield, (SpinWait__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E6BE0, void, SpinWait_SpinOnce, (SpinWait__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001267F0, void, SpinWait_Reset, (SpinWait__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x023293C0, int32_t, PlatformHelper_get_ProcessorCount, (MethodInfo * method));
DO_APP_FUNC(0x023294F0, bool, PlatformHelper_get_IsSingleProcessor, (MethodInfo * method));
DO_APP_FUNC(0x01A193E0, uint32_t, TimeoutHelper_GetTime, (MethodInfo * method));
DO_APP_FUNC(0x02349810, int32_t, TimeoutHelper_UpdateTimeOut, (uint32_t startTime, int32_t originalWaitMillisecondsTimeout, MethodInfo * method));
DO_APP_FUNC(0x027D7FD0, void, AbandonedMutexException__ctor, (AbandonedMutexException * __this, MethodInfo * method));
DO_APP_FUNC(0x027D8070, void, AbandonedMutexException__ctor_1, (AbandonedMutexException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x027D80A0, void, AbandonedMutexException__ctor_2, (AbandonedMutexException * __this, int32_t location, WaitHandle * handle, MethodInfo * method));
DO_APP_FUNC(0x027D81D0, void, AbandonedMutexException_SetupException, (AbandonedMutexException * __this, int32_t location, WaitHandle * handle, MethodInfo * method));
DO_APP_FUNC(0x027D8280, void, AbandonedMutexException__ctor_3, (AbandonedMutexException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027D8430, void, AutoResetEvent__ctor, (AutoResetEvent * __this, bool initialState, MethodInfo * method));
DO_APP_FUNC(0x027DB590, void, EventWaitHandle__ctor, (EventWaitHandle * __this, bool initialState, EventResetMode__Enum mode, MethodInfo * method));
DO_APP_FUNC(0x027DB5B0, void, EventWaitHandle__ctor_1, (EventWaitHandle * __this, bool initialState, EventResetMode__Enum mode, String * name, MethodInfo * method));
DO_APP_FUNC(0x027DBA20, bool, EventWaitHandle_Reset, (EventWaitHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x027DBAD0, bool, EventWaitHandle_Set, (EventWaitHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, ContextCallback__ctor, (ContextCallback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x00673B90, void, ContextCallback_Invoke, (ContextCallback * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, ContextCallback_BeginInvoke, (ContextCallback * __this, Object * state, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, ContextCallback_EndInvoke, (ContextCallback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00206F70, bool, ExecutionContextSwitcher_UndoNoThrow, (ExecutionContextSwitcher__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00206F80, void, ExecutionContextSwitcher_Undo, (ExecutionContextSwitcher__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x027DBB80, bool, ExecutionContext_get_isNewCapture, (ExecutionContext * __this, MethodInfo * method));
DO_APP_FUNC(0x027DBB90, void, ExecutionContext_set_isNewCapture, (ExecutionContext * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x027DBBB0, bool, ExecutionContext_get_isFlowSuppressed, (ExecutionContext * __this, MethodInfo * method));
DO_APP_FUNC(0x027DBBC0, void, ExecutionContext_set_isFlowSuppressed, (ExecutionContext * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x027DBBE0, ExecutionContext *, ExecutionContext_get_PreAllocatedDefault, (MethodInfo * method));
DO_APP_FUNC(0x027DBC80, bool, ExecutionContext_get_IsPreAllocatedDefault, (ExecutionContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ExecutionContext__ctor, (ExecutionContext * __this, MethodInfo * method));
DO_APP_FUNC(0x027DBC90, void, ExecutionContext__ctor_1, (ExecutionContext * __this, bool isPreAllocatedDefault, MethodInfo * method));
DO_APP_FUNC(0x027DBCA0, Object *, ExecutionContext_GetLocalValue, (IAsyncLocal * local, MethodInfo * method));
DO_APP_FUNC(0x027DBCE0, void, ExecutionContext_SetLocalValue, (IAsyncLocal * local, Object * newValue, bool needChangeNotifications, MethodInfo * method));
DO_APP_FUNC(0x027DC250, void, ExecutionContext_OnAsyncLocalContextChanged, (ExecutionContext * previous, ExecutionContext * current, MethodInfo * method));
DO_APP_FUNC(0x027DC710, LogicalCallContext *, ExecutionContext_get_LogicalCallContext, (ExecutionContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, ExecutionContext_set_LogicalCallContext, (ExecutionContext * __this, LogicalCallContext * value, MethodInfo * method));
DO_APP_FUNC(0x027DC860, IllogicalCallContext *, ExecutionContext_get_IllogicalCallContext, (ExecutionContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB10, void, ExecutionContext_set_IllogicalCallContext, (ExecutionContext * __this, IllogicalCallContext * value, MethodInfo * method));
DO_APP_FUNC(0x002FA280, SynchronizationContext *, ExecutionContext_get_SynchronizationContext, (ExecutionContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, ExecutionContext_set_SynchronizationContext, (ExecutionContext * __this, SynchronizationContext * value, MethodInfo * method));
DO_APP_FUNC(0x002FB930, SynchronizationContext *, ExecutionContext_get_SynchronizationContextNoFlow, (ExecutionContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, ExecutionContext_set_SynchronizationContextNoFlow, (ExecutionContext * __this, SynchronizationContext * value, MethodInfo * method));
DO_APP_FUNC(0x003F8E90, void, ExecutionContext_Dispose, (ExecutionContext * __this, MethodInfo * method));
DO_APP_FUNC(0x027DC9B0, void, ExecutionContext_Run, (ExecutionContext * executionContext, ContextCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x027DCB00, void, ExecutionContext_Run_1, (ExecutionContext * executionContext, ContextCallback * callback, Object * state, bool preserveSyncCtx, MethodInfo * method));
DO_APP_FUNC(0x027DCBE0, void, ExecutionContext_RunInternal, (ExecutionContext * executionContext, ContextCallback * callback, Object * state, bool preserveSyncCtx, MethodInfo * method));
DO_APP_FUNC(0x027DCEE0, void, ExecutionContext_EstablishCopyOnWriteScope, (ExecutionContextSwitcher * ecsw, MethodInfo * method));
DO_APP_FUNC(0x027DCFB0, void, ExecutionContext_EstablishCopyOnWriteScope_1, (Thread * currentThread, bool knownNullWindowsIdentity, ExecutionContextSwitcher * ecsw, MethodInfo * method));
DO_APP_FUNC(0x027DCFE0, ExecutionContextSwitcher, ExecutionContext_SetExecutionContext, (ExecutionContext * executionContext, bool preserveSyncCtx, MethodInfo * method));
DO_APP_FUNC(0x027DD160, ExecutionContext *, ExecutionContext_CreateCopy, (ExecutionContext * __this, MethodInfo * method));
DO_APP_FUNC(0x027DD380, ExecutionContext *, ExecutionContext_CreateMutableCopy, (ExecutionContext * __this, MethodInfo * method));
DO_APP_FUNC(0x027DD6B0, bool, ExecutionContext_IsFlowSuppressed, (MethodInfo * method));
DO_APP_FUNC(0x027DD6E0, ExecutionContext *, ExecutionContext_Capture, (MethodInfo * method));
DO_APP_FUNC(0x027DD780, ExecutionContext *, ExecutionContext_FastCapture, (MethodInfo * method));
DO_APP_FUNC(0x027DD820, ExecutionContext *, ExecutionContext_Capture_1, (StackCrawlMark__Enum * stackMark, ExecutionContext_CaptureOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x027DDAD0, void, ExecutionContext_GetObjectData, (ExecutionContext * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027DDBF0, void, ExecutionContext__ctor_2, (ExecutionContext * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027DDD20, bool, ExecutionContext_IsDefaultFTContext, (ExecutionContext * __this, bool ignoreSyncCtx, MethodInfo * method));
DO_APP_FUNC(0x027DDDC0, void, ExecutionContext__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, ExecutionContext_Reader__ctor, (ExecutionContext_Reader__Boxed * __this, ExecutionContext * ec, MethodInfo * method));
DO_APP_FUNC(0x00107C00, ExecutionContext *, ExecutionContext_Reader_DangerousGetRawExecutionContext, (ExecutionContext_Reader__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D5C40, bool, ExecutionContext_Reader_get_IsNull, (ExecutionContext_Reader__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00206E90, bool, ExecutionContext_Reader_IsDefaultFTContext, (ExecutionContext_Reader__Boxed * __this, bool ignoreSyncCtx, MethodInfo * method));
DO_APP_FUNC(0x00206EB0, bool, ExecutionContext_Reader_get_IsFlowSuppressed, (ExecutionContext_Reader__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00206ED0, SynchronizationContext *, ExecutionContext_Reader_get_SynchronizationContext, (ExecutionContext_Reader__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00206EE0, SynchronizationContext *, ExecutionContext_Reader_get_SynchronizationContextNoFlow, (ExecutionContext_Reader__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00206EF0, LogicalCallContext_Reader, ExecutionContext_Reader_get_LogicalCallContext, (ExecutionContext_Reader__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00206F10, Object *, ExecutionContext_Reader_GetLocalValue, (ExecutionContext_Reader__Boxed * __this, IAsyncLocal * local, MethodInfo * method));
DO_APP_FUNC(0x00206F20, bool, ExecutionContext_Reader_HasSameLocalValues, (ExecutionContext_Reader__Boxed * __this, ExecutionContext * other, MethodInfo * method));
DO_APP_FUNC(0x027DE730, void, LockRecursionException__ctor, (LockRecursionException * __this, MethodInfo * method));
DO_APP_FUNC(0x027DE7D0, void, LockRecursionException__ctor_1, (LockRecursionException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x027DE880, void, LockRecursionException__ctor_2, (LockRecursionException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027DE940, void, ManualResetEvent__ctor, (ManualResetEvent * __this, bool initialState, MethodInfo * method));
DO_APP_FUNC(0x027E0300, void, Monitor_Enter, (Object * obj, MethodInfo * method));
DO_APP_FUNC(0x027E0330, void, Monitor_Enter_1, (Object * obj, bool * lockTaken, MethodInfo * method));
DO_APP_FUNC(0x027E0360, void, Monitor_ThrowLockTakenException, (MethodInfo * method));
DO_APP_FUNC(0x027E03D0, void, Monitor_Exit, (Object * obj, MethodInfo * method));
DO_APP_FUNC(0x027E0400, void, Monitor_TryEnter, (Object * obj, bool * lockTaken, MethodInfo * method));
DO_APP_FUNC(0x027E0430, bool, Monitor_Wait, (Object * obj, int32_t millisecondsTimeout, bool exitContext, MethodInfo * method));
DO_APP_FUNC(0x027E05E0, bool, Monitor_Wait_1, (Object * obj, int32_t millisecondsTimeout, MethodInfo * method));
DO_APP_FUNC(0x027E05F0, void, Monitor_Pulse, (Object * obj, MethodInfo * method));
DO_APP_FUNC(0x027E0790, void, Monitor_PulseAll, (Object * obj, MethodInfo * method));
DO_APP_FUNC(0x027E0930, bool, Monitor_Monitor_test_synchronised, (Object * obj, MethodInfo * method));
DO_APP_FUNC(0x027E0980, void, Monitor_Monitor_pulse, (Object * obj, MethodInfo * method));
DO_APP_FUNC(0x027E0A00, void, Monitor_ObjPulse, (Object * obj, MethodInfo * method));
DO_APP_FUNC(0x027E0B30, void, Monitor_Monitor_pulse_all, (Object * obj, MethodInfo * method));
DO_APP_FUNC(0x027E0BB0, void, Monitor_ObjPulseAll, (Object * obj, MethodInfo * method));
DO_APP_FUNC(0x027E0CD0, bool, Monitor_Monitor_wait, (Object * obj, int32_t ms, MethodInfo * method));
DO_APP_FUNC(0x027E0D00, bool, Monitor_ObjWait, (bool exitContext, int32_t millisecondsTimeout, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x027E0E30, void, Monitor_try_enter_with_atomic_var, (Object * obj, int32_t millisecondsTimeout, bool * lockTaken, MethodInfo * method));
DO_APP_FUNC(0x027E0E90, void, Monitor_ReliableEnterTimeout, (Object * obj, int32_t timeout, bool * lockTaken, MethodInfo * method));
DO_APP_FUNC(0x027E0FC0, void, Monitor_ReliableEnter, (Object * obj, bool * lockTaken, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, ParameterizedThreadStart__ctor, (ParameterizedThreadStart * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x00673B90, void, ParameterizedThreadStart_Invoke, (ParameterizedThreadStart * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, ParameterizedThreadStart_BeginInvoke, (ParameterizedThreadStart * __this, Object * obj, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, ParameterizedThreadStart_EndInvoke, (ParameterizedThreadStart * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x0232AC70, void, SemaphoreFullException__ctor, (SemaphoreFullException * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, SemaphoreFullException__ctor_1, (SemaphoreFullException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, SendOrPostCallback__ctor, (SendOrPostCallback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x00673B90, void, SendOrPostCallback_Invoke, (SendOrPostCallback * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, SendOrPostCallback_BeginInvoke, (SendOrPostCallback * __this, Object * state, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, SendOrPostCallback_EndInvoke, (SendOrPostCallback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SynchronizationContext__ctor, (SynchronizationContext * __this, MethodInfo * method));
DO_APP_FUNC(0x0232E1D0, void, SynchronizationContext_Send, (SynchronizationContext * __this, SendOrPostCallback * d, Object * state, MethodInfo * method));
DO_APP_FUNC(0x0232E200, void, SynchronizationContext_Post, (SynchronizationContext * __this, SendOrPostCallback * d, Object * state, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SynchronizationContext_OperationStarted, (SynchronizationContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SynchronizationContext_OperationCompleted, (SynchronizationContext * __this, MethodInfo * method));
DO_APP_FUNC(0x0232E360, void, SynchronizationContext_SetSynchronizationContext, (SynchronizationContext * syncContext, MethodInfo * method));
DO_APP_FUNC(0x0232E3A0, SynchronizationContext *, SynchronizationContext_get_Current, (MethodInfo * method));
DO_APP_FUNC(0x0232E3D0, SynchronizationContext *, SynchronizationContext_get_CurrentNoFlow, (MethodInfo * method));
DO_APP_FUNC(0x00420EE0, SynchronizationContext *, SynchronizationContext_GetThreadLocalContext, (MethodInfo * method));
DO_APP_FUNC(0x0232E400, SynchronizationContext *, SynchronizationContext_CreateCopy, (SynchronizationContext * __this, MethodInfo * method));
DO_APP_FUNC(0x0232E540, void, SynchronizationLockException__ctor, (SynchronizationLockException * __this, MethodInfo * method));
DO_APP_FUNC(0x0232E5D0, void, SynchronizationLockException__ctor_1, (SynchronizationLockException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, SynchronizationLockException__ctor_2, (SynchronizationLockException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x023443E0, void, ThreadHelper__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, ThreadHelper__ctor, (ThreadHelper * __this, Delegate * start, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, ThreadHelper_SetExecutionContextHelper, (ThreadHelper * __this, ExecutionContext * ec, MethodInfo * method));
DO_APP_FUNC(0x02344540, void, ThreadHelper_ThreadStart_Context, (Object * state, MethodInfo * method));
DO_APP_FUNC(0x023446A0, void, ThreadHelper_ThreadStart, (ThreadHelper * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x023447E0, void, ThreadHelper_ThreadStart_1, (ThreadHelper * __this, MethodInfo * method));
DO_APP_FUNC(0x023417A0, void, Thread_AsyncLocalSetCurrentCulture, (AsyncLocalValueChangedArgs_1_System_Globalization_CultureInfo_ args, MethodInfo * method));
DO_APP_FUNC(0x02341860, void, Thread_AsyncLocalSetCurrentUICulture, (AsyncLocalValueChangedArgs_1_System_Globalization_CultureInfo_ args, MethodInfo * method));
DO_APP_FUNC(0x02341920, void, Thread__ctor, (Thread * __this, ThreadStart * start, MethodInfo * method));
DO_APP_FUNC(0x023419F0, void, Thread__ctor_1, (Thread * __this, ParameterizedThreadStart * start, MethodInfo * method));
DO_APP_FUNC(0x02341AC0, void, Thread_Start, (Thread * __this, MethodInfo * method));
DO_APP_FUNC(0x02341AE0, void, Thread_Start_1, (Thread * __this, Object * parameter, MethodInfo * method));
DO_APP_FUNC(0x02341BE0, void, Thread_Start_2, (Thread * __this, StackCrawlMark__Enum * stackMark, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, ExecutionContext_Reader, Thread_GetExecutionContextReader, (Thread * __this, MethodInfo * method));
DO_APP_FUNC(0x02341DF0, bool, Thread_get_ExecutionContextBelongsToCurrentScope, (Thread * __this, MethodInfo * method));
DO_APP_FUNC(0x02341E00, void, Thread_set_ExecutionContextBelongsToCurrentScope, (Thread * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x02341E10, ExecutionContext *, Thread_GetMutableExecutionContext, (Thread * __this, MethodInfo * method));
DO_APP_FUNC(0x02341F80, void, Thread_SetExecutionContext, (Thread * __this, ExecutionContext * value, bool belongsToCurrentScope, MethodInfo * method));
DO_APP_FUNC(0x02341F80, void, Thread_SetExecutionContext_1, (Thread * __this, ExecutionContext_Reader value, bool belongsToCurrentScope, MethodInfo * method));
DO_APP_FUNC(0x02341F90, void, Thread_Interrupt, (Thread * __this, MethodInfo * method));
DO_APP_FUNC(0x02341F90, void, Thread_InterruptInternal, (Thread * __this, MethodInfo * method));
DO_APP_FUNC(0x02341FA0, void, Thread_set_Priority, (Thread * __this, ThreadPriority__Enum value, MethodInfo * method));
DO_APP_FUNC(0x02341FA0, void, Thread_SetPriorityNative, (Thread * __this, int32_t priority, MethodInfo * method));
DO_APP_FUNC(0x02341FB0, bool, Thread_JoinInternal, (Thread * __this, int32_t millisecondsTimeout, MethodInfo * method));
DO_APP_FUNC(0x023420B0, void, Thread_Join, (Thread * __this, MethodInfo * method));
DO_APP_FUNC(0x02342180, bool, Thread_Join_1, (Thread * __this, int32_t millisecondsTimeout, MethodInfo * method));
DO_APP_FUNC(0x02342320, void, Thread_SleepInternal, (int32_t millisecondsTimeout, MethodInfo * method));
DO_APP_FUNC(0x023423E0, void, Thread_Sleep, (int32_t millisecondsTimeout, MethodInfo * method));
DO_APP_FUNC(0x02342540, bool, Thread_YieldInternal, (MethodInfo * method));
DO_APP_FUNC(0x02342540, bool, Thread_Yield, (MethodInfo * method));
DO_APP_FUNC(0x02342560, void, Thread_SetStartHelper, (Thread * __this, Delegate * start, int32_t maxStackSize, MethodInfo * method));
DO_APP_FUNC(0x02342990, CultureInfo *, Thread_get_CurrentUICulture, (Thread * __this, MethodInfo * method));
DO_APP_FUNC(0x023429A0, void, Thread_set_CurrentUICulture, (Thread * __this, CultureInfo * value, MethodInfo * method));
DO_APP_FUNC(0x02342E20, CultureInfo *, Thread_GetCurrentUICultureNoAppX, (Thread * __this, MethodInfo * method));
DO_APP_FUNC(0x02343090, CultureInfo *, Thread_get_CurrentCulture, (Thread * __this, MethodInfo * method));
DO_APP_FUNC(0x023430A0, void, Thread_set_CurrentCulture, (Thread * __this, CultureInfo * value, MethodInfo * method));
DO_APP_FUNC(0x02343450, CultureInfo *, Thread_GetCurrentCultureNoAppX, (Thread * __this, MethodInfo * method));
DO_APP_FUNC(0x023436C0, void, Thread_nativeInitCultureAccessors, (MethodInfo * method));
DO_APP_FUNC(0x023437F0, void, Thread_MemoryBarrier, (MethodInfo * method));
DO_APP_FUNC(0x02343800, void, Thread_ConstructInternalThread, (Thread * __this, MethodInfo * method));
DO_APP_FUNC(0x02343810, InternalThread *, Thread_get_Internal, (Thread * __this, MethodInfo * method));
DO_APP_FUNC(0x0228D860, Context *, Thread_get_CurrentContext, (MethodInfo * method));
DO_APP_FUNC(0x02343840, Thread *, Thread_GetCurrentThread, (MethodInfo * method));
DO_APP_FUNC(0x02343870, Thread *, Thread_get_CurrentThread, (MethodInfo * method));
DO_APP_FUNC(0x0228DA50, int32_t, Thread_get_CurrentThreadId, (MethodInfo * method));
DO_APP_FUNC(0x0228DA20, int32_t, Thread_GetDomainID, (MethodInfo * method));
DO_APP_FUNC(0x02343950, void *, Thread_Thread_internal, (Thread * __this, MulticastDelegate * start, MethodInfo * method));
DO_APP_FUNC(0x02329BB0, void, Thread_Finalize, (Thread * __this, MethodInfo * method));
DO_APP_FUNC(0x02343960, bool, Thread_get_IsThreadPoolThread, (Thread * __this, MethodInfo * method));
DO_APP_FUNC(0x02343960, bool, Thread_get_IsThreadPoolThreadInternal, (Thread * __this, MethodInfo * method));
DO_APP_FUNC(0x023439A0, bool, Thread_get_IsAlive, (Thread * __this, MethodInfo * method));
DO_APP_FUNC(0x02343A00, void, Thread_set_IsBackground, (Thread * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x02343B60, void, Thread_SetName_internal, (InternalThread * thread, String * name, MethodInfo * method));
DO_APP_FUNC(0x02343C80, void, Thread_set_Name, (Thread * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x02343DB0, ThreadState__Enum, Thread_get_ThreadState, (Thread * __this, MethodInfo * method));
DO_APP_FUNC(0x02343E10, void, Thread_Abort_internal, (InternalThread * thread, Object * stateInfo, MethodInfo * method));
DO_APP_FUNC(0x02343E20, void, Thread_Abort, (Thread * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Thread_SpinWait_nop, (MethodInfo * method));
DO_APP_FUNC(0x02343E50, void, Thread_SpinWait, (int32_t iterations, MethodInfo * method));
DO_APP_FUNC(0x02343E60, void, Thread_StartInternal, (Thread * __this, IPrincipal * principal, StackCrawlMark__Enum * stackMark, MethodInfo * method));
DO_APP_FUNC(0x02343F20, void, Thread_SetState, (InternalThread * thread, ThreadState__Enum set, MethodInfo * method));
DO_APP_FUNC(0x02343F70, void, Thread_ClrState, (InternalThread * thread, ThreadState__Enum clr, MethodInfo * method));
DO_APP_FUNC(0x02343FC0, ThreadState__Enum, Thread_GetState, (InternalThread * thread, MethodInfo * method));
DO_APP_FUNC(0x0215A2D0, int32_t, Thread_SystemMaxStackStize, (MethodInfo * method));
DO_APP_FUNC(0x02344010, int32_t, Thread_GetProcessDefaultStackSize, (int32_t maxStackSize, MethodInfo * method));
DO_APP_FUNC(0x023440F0, void, Thread_SetStart, (Thread * __this, MulticastDelegate * start, int32_t maxStackSize, MethodInfo * method));
DO_APP_FUNC(0x02344140, int32_t, Thread_get_ManagedThreadId, (Thread * __this, MethodInfo * method));
DO_APP_FUNC(0x02344180, void, Thread_BeginCriticalRegion, (MethodInfo * method));
DO_APP_FUNC(0x023441E0, void, Thread_EndCriticalRegion, (MethodInfo * method));
DO_APP_FUNC(0x02344140, int32_t, Thread_GetHashCode, (Thread * __this, MethodInfo * method));
DO_APP_FUNC(0x02344240, ThreadState__Enum, Thread_ValidateThreadState, (Thread * __this, MethodInfo * method));
DO_APP_FUNC(0x02344330, void, ThreadAbortException__ctor, (ThreadAbortException * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, ThreadAbortException__ctor_1, (ThreadAbortException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02344910, void, ThreadInterruptedException__ctor, (ThreadInterruptedException * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, ThreadInterruptedException__ctor_1, (ThreadInterruptedException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, WaitCallback__ctor, (WaitCallback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x00673B90, void, WaitCallback_Invoke, (WaitCallback * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, WaitCallback_BeginInvoke, (WaitCallback * __this, Object * state, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, WaitCallback_EndInvoke, (WaitCallback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, WaitOrTimerCallback__ctor, (WaitOrTimerCallback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01D19FD0, void, WaitOrTimerCallback_Invoke, (WaitOrTimerCallback * __this, Object * state, bool timedOut, MethodInfo * method));
DO_APP_FUNC(0x027AB930, IAsyncResult *, WaitOrTimerCallback_BeginInvoke, (WaitOrTimerCallback * __this, Object * state, bool timedOut, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, WaitOrTimerCallback_EndInvoke, (WaitOrTimerCallback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x023468E0, void, ThreadPoolGlobals__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02346BA0, void, ThreadPoolWorkQueue__ctor, (ThreadPoolWorkQueue * __this, MethodInfo * method));
DO_APP_FUNC(0x02346D00, ThreadPoolWorkQueueThreadLocals *, ThreadPoolWorkQueue_EnsureCurrentThreadHasQueue, (ThreadPoolWorkQueue * __this, MethodInfo * method));
DO_APP_FUNC(0x02346F00, void, ThreadPoolWorkQueue_EnsureThreadRequested, (ThreadPoolWorkQueue * __this, MethodInfo * method));
DO_APP_FUNC(0x02347000, void, ThreadPoolWorkQueue_MarkThreadRequestSatisfied, (ThreadPoolWorkQueue * __this, MethodInfo * method));
DO_APP_FUNC(0x02347030, void, ThreadPoolWorkQueue_Enqueue, (ThreadPoolWorkQueue * __this, IThreadPoolWorkItem * callback, bool forceGlobal, MethodInfo * method));
DO_APP_FUNC(0x02347310, bool, ThreadPoolWorkQueue_LocalFindAndPop, (ThreadPoolWorkQueue * __this, IThreadPoolWorkItem * callback, MethodInfo * method));
DO_APP_FUNC(0x02347400, void, ThreadPoolWorkQueue_Dequeue, (ThreadPoolWorkQueue * __this, ThreadPoolWorkQueueThreadLocals * tl, IThreadPoolWorkItem * * callback, bool * missedSteal, MethodInfo * method));
DO_APP_FUNC(0x02347680, bool, ThreadPoolWorkQueue_Dispatch, (MethodInfo * method));
DO_APP_FUNC(0x02347AB0, void, ThreadPoolWorkQueue__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02347FE0, void, ThreadPoolWorkQueue_WorkStealingQueue_LocalPush, (ThreadPoolWorkQueue_WorkStealingQueue * __this, IThreadPoolWorkItem * obj, MethodInfo * method));
DO_APP_FUNC(0x02348530, bool, ThreadPoolWorkQueue_WorkStealingQueue_LocalFindAndPop, (ThreadPoolWorkQueue_WorkStealingQueue * __this, IThreadPoolWorkItem * obj, MethodInfo * method));
DO_APP_FUNC(0x02348810, bool, ThreadPoolWorkQueue_WorkStealingQueue_LocalPop, (ThreadPoolWorkQueue_WorkStealingQueue * __this, IThreadPoolWorkItem * * obj, MethodInfo * method));
DO_APP_FUNC(0x02348BF0, bool, ThreadPoolWorkQueue_WorkStealingQueue_TrySteal, (ThreadPoolWorkQueue_WorkStealingQueue * __this, IThreadPoolWorkItem * * obj, bool * missedSteal, MethodInfo * method));
DO_APP_FUNC(0x02348C10, bool, ThreadPoolWorkQueue_WorkStealingQueue_TrySteal_1, (ThreadPoolWorkQueue_WorkStealingQueue * __this, IThreadPoolWorkItem * * obj, bool * missedSteal, int32_t millisecondsTimeout, MethodInfo * method));
DO_APP_FUNC(0x02348F60, void, ThreadPoolWorkQueue_WorkStealingQueue__ctor, (ThreadPoolWorkQueue_WorkStealingQueue * __this, MethodInfo * method));
DO_APP_FUNC(0x02347C40, void, ThreadPoolWorkQueue_QueueSegment_GetIndexes, (ThreadPoolWorkQueue_QueueSegment * __this, int32_t * upper, int32_t * lower, MethodInfo * method));
DO_APP_FUNC(0x02347C60, bool, ThreadPoolWorkQueue_QueueSegment_CompareExchangeIndexes, (ThreadPoolWorkQueue_QueueSegment * __this, int32_t * prevUpper, int32_t newUpper, int32_t * prevLower, int32_t newLower, MethodInfo * method));
DO_APP_FUNC(0x02347CA0, void, ThreadPoolWorkQueue_QueueSegment__ctor, (ThreadPoolWorkQueue_QueueSegment * __this, MethodInfo * method));
DO_APP_FUNC(0x02347D30, bool, ThreadPoolWorkQueue_QueueSegment_IsUsedUp, (ThreadPoolWorkQueue_QueueSegment * __this, MethodInfo * method));
DO_APP_FUNC(0x02347D80, bool, ThreadPoolWorkQueue_QueueSegment_TryEnqueue, (ThreadPoolWorkQueue_QueueSegment * __this, IThreadPoolWorkItem * node, MethodInfo * method));
DO_APP_FUNC(0x02347E30, bool, ThreadPoolWorkQueue_QueueSegment_TryDequeue, (ThreadPoolWorkQueue_QueueSegment * __this, IThreadPoolWorkItem * * node, MethodInfo * method));
DO_APP_FUNC(0x02349010, void, ThreadPoolWorkQueueThreadLocals__ctor, (ThreadPoolWorkQueueThreadLocals * __this, ThreadPoolWorkQueue * tpq, MethodInfo * method));
DO_APP_FUNC(0x02349360, void, ThreadPoolWorkQueueThreadLocals_CleanUp, (ThreadPoolWorkQueueThreadLocals * __this, MethodInfo * method));
DO_APP_FUNC(0x023494F0, void, ThreadPoolWorkQueueThreadLocals_Finalize, (ThreadPoolWorkQueueThreadLocals * __this, MethodInfo * method));
DO_APP_FUNC(0x027ABA00, bool, _ThreadPoolWaitCallback_PerformWaitCallback, (MethodInfo * method));
DO_APP_FUNC(0x02329510, void, QueueUserWorkItemCallback__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02329670, void, QueueUserWorkItemCallback__ctor, (QueueUserWorkItemCallback * __this, WaitCallback * waitCallback, Object * stateObj, bool compressStack, StackCrawlMark__Enum * stackMark, MethodInfo * method));
DO_APP_FUNC(0x02329790, void, QueueUserWorkItemCallback_System_Threading_IThreadPoolWorkItem_ExecuteWorkItem, (QueueUserWorkItemCallback * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, QueueUserWorkItemCallback_System_Threading_IThreadPoolWorkItem_MarkAborted, (QueueUserWorkItemCallback * __this, ThreadAbortException * tae, MethodInfo * method));
DO_APP_FUNC(0x023298B0, void, QueueUserWorkItemCallback_WaitCallback_Context, (Object * state, MethodInfo * method));
DO_APP_FUNC(0x023449C0, void, ThreadPool_GetAvailableThreads, (int32_t * workerThreads, int32_t * completionPortThreads, MethodInfo * method));
DO_APP_FUNC(0x023449D0, RegisteredWaitHandle *, ThreadPool_RegisterWaitForSingleObject, (WaitHandle * waitObject, WaitOrTimerCallback * callBack, Object * state, uint32_t millisecondsTimeOutInterval, bool executeOnlyOnce, StackCrawlMark__Enum * stackMark, bool compressStack, MethodInfo * method));
DO_APP_FUNC(0x02344F20, RegisteredWaitHandle *, ThreadPool_RegisterWaitForSingleObject_1, (WaitHandle * waitObject, WaitOrTimerCallback * callBack, Object * state, int32_t millisecondsTimeOutInterval, bool executeOnlyOnce, MethodInfo * method));
DO_APP_FUNC(0x02345040, RegisteredWaitHandle *, ThreadPool_RegisterWaitForSingleObject_2, (WaitHandle * waitObject, WaitOrTimerCallback * callBack, Object * state, TimeSpan timeout, bool executeOnlyOnce, MethodInfo * method));
DO_APP_FUNC(0x023451E0, bool, ThreadPool_QueueUserWorkItem, (WaitCallback * callBack, Object * state, MethodInfo * method));
DO_APP_FUNC(0x02345210, bool, ThreadPool_QueueUserWorkItem_1, (WaitCallback * callBack, MethodInfo * method));
DO_APP_FUNC(0x02345240, bool, ThreadPool_UnsafeQueueUserWorkItem, (WaitCallback * callBack, Object * state, MethodInfo * method));
DO_APP_FUNC(0x02345270, bool, ThreadPool_QueueUserWorkItemHelper, (WaitCallback * callBack, Object * state, StackCrawlMark__Enum * stackMark, bool compressStack, MethodInfo * method));
DO_APP_FUNC(0x02345550, void, ThreadPool_UnsafeQueueCustomWorkItem, (IThreadPoolWorkItem * workItem, bool forceGlobal, MethodInfo * method));
DO_APP_FUNC(0x02345650, bool, ThreadPool_TryPopCustomWorkItem, (IThreadPoolWorkItem * workItem, MethodInfo * method));
DO_APP_FUNC(0x02345810, IEnumerable_1_System_Threading_IThreadPoolWorkItem_ *, ThreadPool_GetQueuedWorkItems, (MethodInfo * method));
DO_APP_FUNC(0x02345920, IEnumerable_1_System_Threading_IThreadPoolWorkItem_ *, ThreadPool_EnumerateQueuedWorkItems, (ThreadPoolWorkQueue_WorkStealingQueue__Array * wsQueues, ThreadPoolWorkQueue_QueueSegment * globalQueueTail, MethodInfo * method));
DO_APP_FUNC(0x02345AC0, bool, ThreadPool_RequestWorkerThread, (MethodInfo * method));
DO_APP_FUNC(0x02345AF0, void, ThreadPool_EnsureVMInitialized, (MethodInfo * method));
DO_APP_FUNC(0x023449C0, void, ThreadPool_GetAvailableThreadsNative, (int32_t * workerThreads, int32_t * completionPortThreads, MethodInfo * method));
DO_APP_FUNC(0x02345DF0, bool, ThreadPool_NotifyWorkItemComplete, (MethodInfo * method));
DO_APP_FUNC(0x0173D7D0, void, ThreadPool_ReportThreadStatus, (bool isWorking, MethodInfo * method));
DO_APP_FUNC(0x02345E70, void, ThreadPool_NotifyWorkItemProgress, (MethodInfo * method));
DO_APP_FUNC(0x023461E0, void, ThreadPool_NotifyWorkItemProgressNative, (MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, ThreadPool_IsThreadPoolHosted, (MethodInfo * method));
DO_APP_FUNC(0x02346270, void, ThreadPool_InitializeVMTp, (bool * enableWorkerTracking, MethodInfo * method));
DO_APP_FUNC(0x006389F0, void, ThreadPool_EnumerateQueuedWorkItems_d_21__ctor, (ThreadPool_EnumerateQueuedWorkItems_d_21 * __this, int32_t __1__state, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ThreadPool_EnumerateQueuedWorkItems_d_21_System_IDisposable_Dispose, (ThreadPool_EnumerateQueuedWorkItems_d_21 * __this, MethodInfo * method));
DO_APP_FUNC(0x023464A0, bool, ThreadPool_EnumerateQueuedWorkItems_d_21_MoveNext, (ThreadPool_EnumerateQueuedWorkItems_d_21 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, IThreadPoolWorkItem *, ThreadPool_EnumerateQueuedWorkItems_d_21_System_Collections_Generic_IEnumerator_System_Threading_IThreadPoolWorkItem__get_Current, (ThreadPool_EnumerateQueuedWorkItems_d_21 * __this, MethodInfo * method));
DO_APP_FUNC(0x02346680, void, ThreadPool_EnumerateQueuedWorkItems_d_21_System_Collections_IEnumerator_Reset, (ThreadPool_EnumerateQueuedWorkItems_d_21 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Object *, ThreadPool_EnumerateQueuedWorkItems_d_21_System_Collections_IEnumerator_get_Current, (ThreadPool_EnumerateQueuedWorkItems_d_21 * __this, MethodInfo * method));
DO_APP_FUNC(0x023466D0, IEnumerator_1_System_Threading_IThreadPoolWorkItem_ *, ThreadPool_EnumerateQueuedWorkItems_d_21_System_Collections_Generic_IEnumerable_System_Threading_IThreadPoolWorkItem__GetEnumerator, (ThreadPool_EnumerateQueuedWorkItems_d_21 * __this, MethodInfo * method));
DO_APP_FUNC(0x023468D0, IEnumerator *, ThreadPool_EnumerateQueuedWorkItems_d_21_System_Collections_IEnumerable_GetEnumerator, (ThreadPool_EnumerateQueuedWorkItems_d_21 * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, ThreadStart__ctor, (ThreadStart * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x00611820, void, ThreadStart_Invoke, (ThreadStart * __this, MethodInfo * method));
DO_APP_FUNC(0x00611B10, IAsyncResult *, ThreadStart_BeginInvoke, (ThreadStart * __this, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, ThreadStart_EndInvoke, (ThreadStart * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x023496B0, void, ThreadStateException__ctor, (ThreadStateException * __this, MethodInfo * method));
DO_APP_FUNC(0x02349740, void, ThreadStateException__ctor_1, (ThreadStateException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, ThreadStateException__ctor_2, (ThreadStateException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02349760, void, Timeout__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0234B740, void, WaitHandle__ctor, (WaitHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x0234B740, void, WaitHandle_Init, (WaitHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x0234B800, void *, WaitHandle_get_Handle, (WaitHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x0234B8D0, void, WaitHandle_set_Handle, (WaitHandle * __this, void * value, MethodInfo * method));
DO_APP_FUNC(0x0234BAB0, SafeWaitHandle *, WaitHandle_get_SafeWaitHandle, (WaitHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x0234BC60, void, WaitHandle_set_SafeWaitHandle, (WaitHandle * __this, SafeWaitHandle * value, MethodInfo * method));
DO_APP_FUNC(0x0234BD70, void, WaitHandle_SetHandleInternal, (WaitHandle * __this, SafeWaitHandle * handle, MethodInfo * method));
DO_APP_FUNC(0x0234BDA0, bool, WaitHandle_WaitOne, (WaitHandle * __this, int32_t millisecondsTimeout, bool exitContext, MethodInfo * method));
DO_APP_FUNC(0x0234BE90, bool, WaitHandle_WaitOne_1, (WaitHandle * __this, TimeSpan timeout, bool exitContext, MethodInfo * method));
DO_APP_FUNC(0x0234BFB0, bool, WaitHandle_WaitOne_2, (WaitHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x01F938C0, bool, WaitHandle_WaitOne_3, (WaitHandle * __this, int32_t millisecondsTimeout, MethodInfo * method));
DO_APP_FUNC(0x0234BFD0, bool, WaitHandle_WaitOne_4, (WaitHandle * __this, TimeSpan timeout, MethodInfo * method));
DO_APP_FUNC(0x0234BFF0, bool, WaitHandle_WaitOne_5, (WaitHandle * __this, int64_t timeout, bool exitContext, MethodInfo * method));
DO_APP_FUNC(0x0234C1E0, bool, WaitHandle_InternalWaitOne, (SafeHandle * waitableSafeHandle, int64_t millisecondsTimeout, bool hasThreadAffinity, bool exitContext, MethodInfo * method));
DO_APP_FUNC(0x0234C340, int32_t, WaitHandle_WaitAny, (WaitHandle__Array * waitHandles, int32_t millisecondsTimeout, bool exitContext, MethodInfo * method));
DO_APP_FUNC(0x0234C6E0, int32_t, WaitHandle_WaitAny_1, (WaitHandle__Array * waitHandles, TimeSpan timeout, bool exitContext, MethodInfo * method));
DO_APP_FUNC(0x0234C820, void, WaitHandle_ThrowAbandonedMutexException, (MethodInfo * method));
DO_APP_FUNC(0x0234C870, void, WaitHandle_ThrowAbandonedMutexException_1, (int32_t location, WaitHandle * handle, MethodInfo * method));
DO_APP_FUNC(0x0234C8D0, void, WaitHandle_Close, (WaitHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x0234C980, void, WaitHandle_Dispose, (WaitHandle * __this, bool explicitDisposing, MethodInfo * method));
DO_APP_FUNC(0x0234C9D0, void, WaitHandle_Dispose_1, (WaitHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x0234CA80, int32_t, WaitHandle_WaitMultiple, (WaitHandle__Array * waitHandles, int32_t millisecondsTimeout, bool exitContext, bool WaitAll, MethodInfo * method));
DO_APP_FUNC(0x0234CDA0, int32_t, WaitHandle_WaitOneNative, (SafeHandle * waitableSafeHandle, uint32_t millisecondsTimeout, bool hasThreadAffinity, bool exitContext, MethodInfo * method));
DO_APP_FUNC(0x0234CF30, int32_t, WaitHandle_Wait_internal, (void * * handles, int32_t numHandles, bool waitAll, int32_t ms, MethodInfo * method));
DO_APP_FUNC(0x0234CF40, void, WaitHandle__cctor, (MethodInfo * method));
DO_APP_FUNC(0x027AB880, void, WaitHandleCannotBeOpenedException__ctor, (WaitHandleCannotBeOpenedException * __this, MethodInfo * method));
DO_APP_FUNC(0x027AB910, void, WaitHandleCannotBeOpenedException__ctor_1, (WaitHandleCannotBeOpenedException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x0268AE20, void, WaitHandleCannotBeOpenedException__ctor_2, (WaitHandleCannotBeOpenedException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x027DE190, int32_t, Interlocked_CompareExchange, (int32_t * location1, int32_t value, int32_t comparand, MethodInfo * method));
DO_APP_FUNC(0x027DE1A0, int32_t, Interlocked_CompareExchange_1, (int32_t * location1, int32_t value, int32_t comparand, bool * succeeded, MethodInfo * method));
DO_APP_FUNC(0x027DE1B0, Object *, Interlocked_CompareExchange_2, (Object * * location1, Object * value, Object * comparand, MethodInfo * method));
DO_APP_FUNC(0x027DE1C0, float, Interlocked_CompareExchange_3, (float * location1, float value, float comparand, MethodInfo * method));
DO_APP_FUNC(0x027DE1F0, int32_t, Interlocked_Decrement, (int32_t * location, MethodInfo * method));
DO_APP_FUNC(0x027DE200, int32_t, Interlocked_Increment, (int32_t * location, MethodInfo * method));
DO_APP_FUNC(0x027DE210, int64_t, Interlocked_Increment_1, (int64_t * location, MethodInfo * method));
DO_APP_FUNC(0x027DE220, int32_t, Interlocked_Exchange, (int32_t * location1, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x027DE230, Object *, Interlocked_Exchange_1, (Object * * location1, Object * value, MethodInfo * method));
DO_APP_FUNC(0x027DE240, float, Interlocked_Exchange_2, (float * location1, float value, MethodInfo * method));
DO_APP_FUNC(0x027DE1B0, int64_t, Interlocked_CompareExchange_4, (int64_t * location1, int64_t value, int64_t comparand, MethodInfo * method));
DO_APP_FUNC(0x027DE1B0, void *, Interlocked_CompareExchange_5, (void * * location1, void * value, void * comparand, MethodInfo * method));
DO_APP_FUNC(0x027DE260, double, Interlocked_CompareExchange_6, (double * location1, double value, double comparand, MethodInfo * method));
DO_APP_FUNC(0x027DE230, int64_t, Interlocked_Exchange_3, (int64_t * location1, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x027DE230, void *, Interlocked_Exchange_4, (void * * location1, void * value, MethodInfo * method));
DO_APP_FUNC(0x027DE290, double, Interlocked_Exchange_5, (double * location1, double value, MethodInfo * method));
DO_APP_FUNC(0x027DE2B0, int64_t, Interlocked_Read, (int64_t * location, MethodInfo * method));
DO_APP_FUNC(0x027DE2C0, int32_t, Interlocked_Add, (int32_t * location1, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x023437F0, void, Interlocked_MemoryBarrier, (MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, LockQueue__ctor, (LockQueue * __this, ReaderWriterLock * rwlock, MethodInfo * method));
DO_APP_FUNC(0x027DE3E0, bool, LockQueue_Wait, (LockQueue * __this, int32_t timeout, MethodInfo * method));
DO_APP_FUNC(0x027DE570, bool, LockQueue_get_IsEmpty, (LockQueue * __this, MethodInfo * method));
DO_APP_FUNC(0x027DE660, void, LockQueue_Pulse, (LockQueue * __this, MethodInfo * method));
DO_APP_FUNC(0x027E0FD0, bool, Mutex_ReleaseMutex_internal, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x027E0FF0, void *, Mutex_CreateMutex_internal, (bool initiallyOwned, String * name, bool * created, MethodInfo * method));
DO_APP_FUNC(0x027E10C0, void, Mutex__ctor, (Mutex * __this, MethodInfo * method));
DO_APP_FUNC(0x027E11B0, void, Mutex_ReleaseMutex, (Mutex * __this, MethodInfo * method));
DO_APP_FUNC(0x027E1250, void *, NativeEventCalls_CreateEvent_internal, (bool manual, bool initial, String * name, int32_t * errorCode, MethodInfo * method));
DO_APP_FUNC(0x027E12E0, bool, NativeEventCalls_SetEvent, (SafeWaitHandle * handle, MethodInfo * method));
DO_APP_FUNC(0x027E13E0, bool, NativeEventCalls_SetEvent_internal, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x027E1410, bool, NativeEventCalls_ResetEvent, (SafeWaitHandle * handle, MethodInfo * method));
DO_APP_FUNC(0x027E1510, bool, NativeEventCalls_ResetEvent_internal, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x027E1540, void, NativeEventCalls_CloseEvent_internal, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x02329970, void, ReaderWriterLock__ctor, (ReaderWriterLock * __this, MethodInfo * method));
DO_APP_FUNC(0x02329BB0, void, ReaderWriterLock_Finalize, (ReaderWriterLock * __this, MethodInfo * method));
DO_APP_FUNC(0x02329BE0, void, ReaderWriterLock_AcquireWriterLock, (ReaderWriterLock * __this, int32_t millisecondsTimeout, MethodInfo * method));
DO_APP_FUNC(0x02329BF0, void, ReaderWriterLock_AcquireWriterLock_1, (ReaderWriterLock * __this, int32_t millisecondsTimeout, int32_t initialLockCount, MethodInfo * method));
DO_APP_FUNC(0x02329E50, void, ReaderWriterLock_ReleaseWriterLock, (ReaderWriterLock * __this, MethodInfo * method));
DO_APP_FUNC(0x0232A040, void, ReaderWriterLock_ReleaseWriterLock_1, (ReaderWriterLock * __this, int32_t releaseCount, MethodInfo * method));
DO_APP_FUNC(0x0232A0A0, bool, ReaderWriterLock_HasWriterLock, (ReaderWriterLock * __this, MethodInfo * method));
DO_APP_FUNC(0x0232A0F0, void, RegisteredWaitHandle__ctor, (RegisteredWaitHandle * __this, WaitHandle * waitObject, WaitOrTimerCallback * callback, Object * state, TimeSpan timeout, bool executeOnlyOnce, MethodInfo * method));
DO_APP_FUNC(0x0232A290, void, RegisteredWaitHandle_Wait, (RegisteredWaitHandle * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x0232A960, void, RegisteredWaitHandle_DoCallBack, (RegisteredWaitHandle * __this, Object * timedOut, MethodInfo * method));
DO_APP_FUNC(0x0232AB40, bool, RegisteredWaitHandle_Unregister, (RegisteredWaitHandle * __this, WaitHandle * waitObject, MethodInfo * method));
DO_APP_FUNC(0x027DE2D0, void, InternalThread_Thread_free_internal, (InternalThread * __this, MethodInfo * method));
DO_APP_FUNC(0x027DE320, void, InternalThread_Finalize, (InternalThread * __this, MethodInfo * method));
DO_APP_FUNC(0x02349880, void, Timer__ctor, (Timer * __this, TimerCallback * callback, Object * state, int32_t dueTime, int32_t period, MethodInfo * method));
DO_APP_FUNC(0x023498A0, void, Timer__ctor_1, (Timer * __this, TimerCallback * callback, Object * state, TimeSpan dueTime, TimeSpan period, MethodInfo * method));
DO_APP_FUNC(0x02349920, void, Timer_Init, (Timer * __this, TimerCallback * callback, Object * state, int64_t dueTime, int64_t period, MethodInfo * method));
DO_APP_FUNC(0x02349A20, bool, Timer_Change, (Timer * __this, int32_t dueTime, int32_t period, MethodInfo * method));
DO_APP_FUNC(0x02349A40, bool, Timer_Change_1, (Timer * __this, TimeSpan dueTime, TimeSpan period, MethodInfo * method));
DO_APP_FUNC(0x02349AC0, void, Timer_Dispose, (Timer * __this, MethodInfo * method));
DO_APP_FUNC(0x02349B90, bool, Timer_Change_2, (Timer * __this, int64_t dueTime, int64_t period, bool first, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Timer_KeepRootedWhileScheduled, (Timer * __this, MethodInfo * method));
DO_APP_FUNC(0x02004240, int64_t, Timer_GetTimeMonotonic, (MethodInfo * method));
DO_APP_FUNC(0x02349E20, void, Timer__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0234B600, int32_t, Timer_TimerComparer_Compare, (Timer_TimerComparer * __this, Object * x, Object * y, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Timer_TimerComparer__ctor, (Timer_TimerComparer * __this, MethodInfo * method));
DO_APP_FUNC(0x02349F50, void, Timer_Scheduler__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0234A0A0, Timer_Scheduler *, Timer_Scheduler_get_Instance, (MethodInfo * method));
DO_APP_FUNC(0x0234A140, void, Timer_Scheduler__ctor, (Timer_Scheduler * __this, MethodInfo * method));
DO_APP_FUNC(0x0234A600, void, Timer_Scheduler_Remove, (Timer_Scheduler * __this, Timer * timer, MethodInfo * method));
DO_APP_FUNC(0x0234A700, void, Timer_Scheduler_Change, (Timer_Scheduler * __this, Timer * timer, int64_t new_next_run, MethodInfo * method));
DO_APP_FUNC(0x0234A8E0, int32_t, Timer_Scheduler_FindByDueTime, (Timer_Scheduler * __this, int64_t nr, MethodInfo * method));
DO_APP_FUNC(0x0234AAB0, void, Timer_Scheduler_Add, (Timer_Scheduler * __this, Timer * timer, MethodInfo * method));
DO_APP_FUNC(0x0234AC50, int32_t, Timer_Scheduler_InternalRemove, (Timer_Scheduler * __this, Timer * timer, MethodInfo * method));
DO_APP_FUNC(0x0234ACC0, void, Timer_Scheduler_TimerCB, (Object * o, MethodInfo * method));
DO_APP_FUNC(0x0234AD80, void, Timer_Scheduler_SchedulerThread, (Timer_Scheduler * __this, MethodInfo * method));
DO_APP_FUNC(0x0234B540, void, Timer_Scheduler_ShrinkIfNeeded, (Timer_Scheduler * __this, List_1_System_Threading_Timer_ * list, int32_t initial, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, TimerCallback__ctor, (TimerCallback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x00673B90, void, TimerCallback_Invoke, (TimerCallback * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, TimerCallback_BeginInvoke, (TimerCallback * __this, Object * state, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, TimerCallback_EndInvoke, (TimerCallback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x0234B710, bool, Volatile_Read, (bool * location, MethodInfo * method));
DO_APP_FUNC(0x0234B720, int32_t, Volatile_Read_1, (int32_t * location, MethodInfo * method));
DO_APP_FUNC(0x0234B730, void, Volatile_Write, (int32_t * location, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, AsyncCausalityTracer_get_LoggingOn, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AsyncCausalityTracer_TraceOperationCreation, (CausalityTraceLevel__Enum traceLevel, int32_t taskId, String * operationName, uint64_t relatedContext, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AsyncCausalityTracer_TraceOperationCompletion, (CausalityTraceLevel__Enum traceLevel, int32_t taskId, AsyncCausalityStatus__Enum status, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AsyncCausalityTracer_TraceOperationRelation, (CausalityTraceLevel__Enum traceLevel, int32_t taskId, CausalityRelation__Enum relation, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AsyncCausalityTracer_TraceSynchronousWorkStart, (CausalityTraceLevel__Enum traceLevel, int32_t taskId, CausalitySynchronousWork__Enum work, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AsyncCausalityTracer_TraceSynchronousWorkCompletion, (CausalityTraceLevel__Enum traceLevel, CausalitySynchronousWork__Enum work, MethodInfo * method));
DO_APP_FUNC(0x02330800, bool, Task_AddToActiveTasks, (Task * task, MethodInfo * method));
DO_APP_FUNC(0x023309F0, void, Task_RemoveFromActiveTasks, (int32_t taskId, MethodInfo * method));
DO_APP_FUNC(0x02330B90, void, Task__ctor, (Task * __this, bool canceled, TaskCreationOptions__Enum creationOptions, CancellationToken ct, MethodInfo * method));
DO_APP_FUNC(0x02330D30, void, Task__ctor_1, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02330D40, void, Task__ctor_2, (Task * __this, Object * state, TaskCreationOptions__Enum creationOptions, bool promiseStyle, MethodInfo * method));
DO_APP_FUNC(0x02330E60, void, Task__ctor_3, (Task * __this, Delegate * action, Object * state, Task * parent, CancellationToken cancellationToken, TaskCreationOptions__Enum creationOptions, InternalTaskOptions__Enum internalOptions, TaskScheduler * scheduler, MethodInfo * method));
DO_APP_FUNC(0x02330F90, void, Task_TaskConstructorCore, (Task * __this, Object * action, Object * state, CancellationToken cancellationToken, TaskCreationOptions__Enum creationOptions, InternalTaskOptions__Enum internalOptions, TaskScheduler * scheduler, MethodInfo * method));
DO_APP_FUNC(0x023311C0, void, Task_AssignCancellationToken, (Task * __this, CancellationToken cancellationToken, Task * antecedent, TaskContinuation * continuation, MethodInfo * method));
DO_APP_FUNC(0x02331610, void, Task_TaskCancelCallback, (Object * o, MethodInfo * method));
DO_APP_FUNC(0x02331750, String *, Task_get_DebuggerDisplayMethodDescription, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02331860, void, Task_PossiblyCaptureContext, (Task * __this, StackCrawlMark__Enum * stackMark, MethodInfo * method));
DO_APP_FUNC(0x02331970, TaskCreationOptions__Enum, Task_get_Options, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x015FAE60, TaskCreationOptions__Enum, Task_OptionsMethod, (int32_t flags, MethodInfo * method));
DO_APP_FUNC(0x02331A10, bool, Task_AtomicStateUpdate, (Task * __this, int32_t newBits, int32_t illegalBits, MethodInfo * method));
DO_APP_FUNC(0x02331B10, bool, Task_AtomicStateUpdate_1, (Task * __this, int32_t newBits, int32_t illegalBits, int32_t * oldFlags, MethodInfo * method));
DO_APP_FUNC(0x02331C30, void, Task_SetNotificationForWaitCompletion, (Task * __this, bool enabled, MethodInfo * method));
DO_APP_FUNC(0x02331D40, bool, Task_NotifyDebuggerOfWaitCompletionIfNecessary, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02331D90, bool, Task_AnyTaskRequiresNotifyDebuggerOfWaitCompletion, (Task__Array * tasks, MethodInfo * method));
DO_APP_FUNC(0x02331E20, bool, Task_get_IsWaitNotificationEnabledOrNotRanToCompletion, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02331E40, bool, Task_get_ShouldNotifyDebuggerOfWaitCompletion, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02331E40, bool, Task_get_IsWaitNotificationEnabled, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02331E60, void, Task_NotifyDebuggerOfWaitCompletion, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02331E90, bool, Task_MarkStarted, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Task_FireTaskScheduledIfNeeded, (Task * __this, TaskScheduler * ts, MethodInfo * method));
DO_APP_FUNC(0x02331EB0, void, Task_AddNewChild, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02331F40, void, Task_DisregardChild, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02331F80, Task *, Task_InternalStartNew, (Task * creatingTask, Delegate * action, Object * state, CancellationToken cancellationToken, TaskScheduler * scheduler, TaskCreationOptions__Enum options, InternalTaskOptions__Enum internalOptions, StackCrawlMark__Enum * stackMark, MethodInfo * method));
DO_APP_FUNC(0x02332190, int32_t, Task_NewId, (MethodInfo * method));
DO_APP_FUNC(0x02332250, int32_t, Task_get_Id, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x023323B0, Task *, Task_get_InternalCurrent, (MethodInfo * method));
DO_APP_FUNC(0x02332490, Task *, Task_InternalCurrentIfAttached, (TaskCreationOptions__Enum creationOptions, MethodInfo * method));
DO_APP_FUNC(0x02332540, StackGuard *, Task_get_CurrentStackGuard, (MethodInfo * method));
DO_APP_FUNC(0x02332740, AggregateException *, Task_get_Exception, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02332770, TaskStatus__Enum, Task_get_Status, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x023327D0, bool, Task_get_IsCanceled, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x023327F0, bool, Task_get_IsCancellationRequested, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02332830, Task_ContingentProperties *, Task_EnsureContingentPropertiesInitialized, (Task * __this, bool needsProtection, MethodInfo * method));
DO_APP_FUNC(0x02332860, Task_ContingentProperties *, Task_EnsureContingentPropertiesInitializedCore, (Task * __this, bool needsProtection, MethodInfo * method));
DO_APP_FUNC(0x02332A50, CancellationToken, Task_get_CancellationToken, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02332A70, bool, Task_get_IsCancellationAcknowledged, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02332A90, bool, Task_get_IsCompleted, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02332B30, bool, Task_IsCompletedMethod, (int32_t flags, MethodInfo * method));
DO_APP_FUNC(0x02332B40, bool, Task_get_IsRanToCompletion, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02332B60, TaskCreationOptions__Enum, Task_get_CreationOptions, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02332B80, WaitHandle *, Task_System_IAsyncResult_get_AsyncWaitHandle, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, Object *, Task_get_AsyncState, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Task_System_IAsyncResult_get_CompletedSynchronously, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, TaskScheduler *, Task_get_ExecutingTaskScheduler, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02332C90, TaskFactory *, Task_get_Factory, (MethodInfo * method));
DO_APP_FUNC(0x02332D30, Task *, Task_get_CompletedTask, (MethodInfo * method));
DO_APP_FUNC(0x02332F40, ManualResetEventSlim *, Task_get_CompletedEvent, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02333160, bool, Task_get_IsSelfReplicatingRoot, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02333180, bool, Task_get_IsChildReplica, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x023331A0, bool, Task_get_ExceptionRecorded, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x023331F0, bool, Task_get_IsFaulted, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02333210, ExecutionContext *, Task_get_CapturedContext, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x023332E0, void, Task_set_CapturedContext, (Task * __this, ExecutionContext * value, MethodInfo * method));
DO_APP_FUNC(0x02333340, ExecutionContext *, Task_CopyExecutionContext, (ExecutionContext * capturedContext, MethodInfo * method));
DO_APP_FUNC(0x02333400, void, Task_Dispose, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x023334B0, void, Task_Dispose_1, (Task * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x02333600, void, Task_ScheduleAndStart, (Task * __this, bool needsProtection, MethodInfo * method));
DO_APP_FUNC(0x02333910, void, Task_AddException, (Task * __this, Object * exceptionObject, MethodInfo * method));
DO_APP_FUNC(0x02333920, void, Task_AddException_1, (Task * __this, Object * exceptionObject, bool representsCancellation, MethodInfo * method));
DO_APP_FUNC(0x02333CE0, AggregateException *, Task_GetExceptions, (Task * __this, bool includeTaskCanceledExceptions, MethodInfo * method));
DO_APP_FUNC(0x02334030, ReadOnlyCollection_1_System_Runtime_ExceptionServices_ExceptionDispatchInfo_ *, Task_GetExceptionDispatchInfos, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02334240, ExceptionDispatchInfo *, Task_GetCancellationExceptionDispatchInfo, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02334270, void, Task_ThrowIfExceptional, (Task * __this, bool includeTaskCanceledExceptions, MethodInfo * method));
DO_APP_FUNC(0x02334320, void, Task_UpdateExceptionObservedStatus, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02334400, bool, Task_get_IsExceptionObservedByParent, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02334420, bool, Task_get_IsDelegateInvoked, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02334440, void, Task_Finish, (Task * __this, bool bUserDelegateExecuted, MethodInfo * method));
DO_APP_FUNC(0x02334630, void, Task_FinishStageTwo, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02334800, void, Task_FinishStageThree, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02334860, void, Task_ProcessChildCompletion, (Task * __this, Task * childTask, MethodInfo * method));
DO_APP_FUNC(0x02334B30, void, Task_AddExceptionsFromChildren, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02334DE0, void, Task_FinishThreadAbortedTask, (Task * __this, bool bTAEAddedToExceptionHolder, bool delegateRan, MethodInfo * method));
DO_APP_FUNC(0x02334E60, void, Task_Execute, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, Task_ShouldReplicate, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02334FF0, Task *, Task_CreateReplicaTask, (Task * __this, Action_1_Object_ * taskReplicaDelegate, Object * stateObject, Task * parentTask, TaskScheduler * taskScheduler, TaskCreationOptions__Enum creationOptionsForReplica, InternalTaskOptions__Enum internalOptionsForReplica, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Object *, Task_get_SavedStateForNextReplica, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Task_set_SavedStateFromPreviousReplica, (Task * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Task *, Task_get_HandedOverChildReplica, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Task_set_HandedOverChildReplica, (Task * __this, Task * value, MethodInfo * method));
DO_APP_FUNC(0x02335190, void, Task_ExecuteSelfReplicating, (Task * root, MethodInfo * method));
DO_APP_FUNC(0x02335400, void, Task_System_Threading_IThreadPoolWorkItem_ExecuteWorkItem, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02335410, void, Task_System_Threading_IThreadPoolWorkItem_MarkAborted, (Task * __this, ThreadAbortException * tae, MethodInfo * method));
DO_APP_FUNC(0x023354A0, bool, Task_ExecuteEntry, (Task * __this, bool bPreventDoubleExecution, MethodInfo * method));
DO_APP_FUNC(0x023356A0, void, Task_ExecuteWithThreadLocal, (Task * __this, Task * * currentTaskSlot, MethodInfo * method));
DO_APP_FUNC(0x023359C0, void, Task_ExecutionContextCallback, (Object * obj, MethodInfo * method));
DO_APP_FUNC(0x02335AC0, void, Task_InnerInvoke, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02335BA0, void, Task_InnerInvokeWithArg, (Task * __this, Task * childTask, MethodInfo * method));
DO_APP_FUNC(0x02335BD0, void, Task_HandleException, (Task * __this, Exception * unhandledException, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, TaskAwaiter, Task_GetAwaiter, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02335D60, ConfiguredTaskAwaitable, Task_ConfigureAwait, (Task * __this, bool continueOnCapturedContext, MethodInfo * method));
DO_APP_FUNC(0x02335D90, void, Task_SetContinuationForAwait, (Task * __this, Action * continuationAction, bool continueOnCapturedContext, bool flowExecutionContext, StackCrawlMark__Enum * stackMark, MethodInfo * method));
DO_APP_FUNC(0x00417870, YieldAwaitable, Task_Yield, (MethodInfo * method));
DO_APP_FUNC(0x023361F0, void, Task_Wait, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02336200, void, Task_Wait_1, (Task * __this, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x02336210, bool, Task_Wait_2, (Task * __this, int32_t millisecondsTimeout, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x02336370, bool, Task_WrappedTryRunInline, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02336490, bool, Task_InternalWait, (Task * __this, int32_t millisecondsTimeout, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x02336600, bool, Task_SpinThenBlockingWait, (Task * __this, int32_t millisecondsTimeout, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x02336A50, bool, Task_SpinWait, (Task * __this, int32_t millisecondsTimeout, MethodInfo * method));
DO_APP_FUNC(0x02336AF0, bool, Task_InternalCancel, (Task * __this, bool bCancelNonExecutingOnly, MethodInfo * method));
DO_APP_FUNC(0x02336E20, void, Task_RecordInternalCancellationRequest, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02336E60, void, Task_RecordInternalCancellationRequest_1, (Task * __this, CancellationToken tokenToRecord, MethodInfo * method));
DO_APP_FUNC(0x02336F70, void, Task_RecordInternalCancellationRequest_2, (Task * __this, CancellationToken tokenToRecord, Object * cancellationException, MethodInfo * method));
DO_APP_FUNC(0x023370A0, void, Task_CancellationCleanupLogic, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02337220, void, Task_SetCancellationAcknowledged, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x02337240, void, Task_FinishContinuations, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x003F8E90, void, Task_LogFinishCompletionNotification, (Task * __this, MethodInfo * method));
DO_APP_FUNC(0x023378D0, Task *, Task_ContinueWith, (Task * __this, Action_1_System_Threading_Tasks_Task_ * continuationAction, MethodInfo * method));
DO_APP_FUNC(0x023379B0, Task *, Task_ContinueWith_1, (Task * __this, Action_1_System_Threading_Tasks_Task_ * continuationAction, TaskScheduler * scheduler, CancellationToken cancellationToken, TaskContinuationOptions__Enum continuationOptions, StackCrawlMark__Enum * stackMark, MethodInfo * method));
DO_APP_FUNC(0x02337C30, Task *, Task_ContinueWith_2, (Task * __this, Action_2_System_Threading_Tasks_Task_Object_ * continuationAction, Object * state, CancellationToken cancellationToken, TaskContinuationOptions__Enum continuationOptions, TaskScheduler * scheduler, MethodInfo * method));
DO_APP_FUNC(0x02337C70, Task *, Task_ContinueWith_3, (Task * __this, Action_2_System_Threading_Tasks_Task_Object_ * continuationAction, Object * state, TaskScheduler * scheduler, CancellationToken cancellationToken, TaskContinuationOptions__Enum continuationOptions, StackCrawlMark__Enum * stackMark, MethodInfo * method));
DO_APP_FUNC(0x02337EF0, void, Task_CreationOptionsFromContinuationOptions, (TaskContinuationOptions__Enum continuationOptions, TaskCreationOptions__Enum * creationOptions, InternalTaskOptions__Enum * internalOptions, MethodInfo * method));
DO_APP_FUNC(0x02338080, void, Task_ContinueWithCore, (Task * __this, Task * continuationTask, TaskScheduler * scheduler, CancellationToken cancellationToken, TaskContinuationOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x02338350, void, Task_AddCompletionAction, (Task * __this, ITaskCompletionAction * action, MethodInfo * method));
DO_APP_FUNC(0x02338360, void, Task_AddCompletionAction_1, (Task * __this, ITaskCompletionAction * action, bool addBeforeOthers, MethodInfo * method));
DO_APP_FUNC(0x02338420, bool, Task_AddTaskContinuationComplex, (Task * __this, Object * tc, bool addBeforeOthers, MethodInfo * method));
DO_APP_FUNC(0x02338820, bool, Task_AddTaskContinuation, (Task * __this, Object * tc, bool addBeforeOthers, MethodInfo * method));
DO_APP_FUNC(0x023388B0, void, Task_RemoveContinuation, (Task * __this, Object * continuationObject, MethodInfo * method));
DO_APP_FUNC(0x02338C30, Task *, Task_FromException, (Exception * exception, MethodInfo * method));
DO_APP_FUNC(0x02338CD0, Task *, Task_FromCancellation, (CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x02338E70, Task *, Task_Run, (Action * action, MethodInfo * method));
DO_APP_FUNC(0x02338F80, Task *, Task_Run_1, (Func_1_System_Threading_Tasks_Task_ * function, MethodInfo * method));
DO_APP_FUNC(0x02339030, Task *, Task_Run_2, (Func_1_System_Threading_Tasks_Task_ * function, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x023392D0, Task *, Task_Delay, (TimeSpan delay, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x02339400, Task *, Task_Delay_1, (int32_t millisecondsDelay, MethodInfo * method));
DO_APP_FUNC(0x023394B0, Task *, Task_Delay_2, (int32_t millisecondsDelay, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x02339BE0, Task *, Task_WhenAll, (Task__Array * tasks, MethodInfo * method));
DO_APP_FUNC(0x02339DD0, Task *, Task_InternalWhenAll, (Task__Array * tasks, MethodInfo * method));
DO_APP_FUNC(0x02339F70, Task_1_Task_ *, Task_WhenAny, (Task__Array * tasks, MethodInfo * method));
DO_APP_FUNC(0x0233A160, void, Task__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0233B130, void, Task_ContingentProperties_SetCompleted, (Task_ContingentProperties * __this, MethodInfo * method));
DO_APP_FUNC(0x0233B160, void, Task_ContingentProperties_DeregisterCancellationCallback, (Task_ContingentProperties * __this, MethodInfo * method));
DO_APP_FUNC(0x0233B220, void, Task_ContingentProperties__ctor, (Task_ContingentProperties * __this, MethodInfo * method));
DO_APP_FUNC(0x0233B580, void, Task_SetOnInvokeMres__ctor, (Task_SetOnInvokeMres * __this, MethodInfo * method));
DO_APP_FUNC(0x0233B680, void, Task_SetOnInvokeMres_Invoke, (Task_SetOnInvokeMres * __this, Task * completingTask, MethodInfo * method));
DO_APP_FUNC(0x0233B230, void, Task_DelayPromise__ctor, (Task_DelayPromise * __this, CancellationToken token, MethodInfo * method));
DO_APP_FUNC(0x0233B3C0, void, Task_DelayPromise_Complete, (Task_DelayPromise * __this, MethodInfo * method));
DO_APP_FUNC(0x0233B690, void, Task_WhenAllPromise__ctor, (Task_WhenAllPromise * __this, Task__Array * tasks, MethodInfo * method));
DO_APP_FUNC(0x0233B8A0, void, Task_WhenAllPromise_Invoke, (Task_WhenAllPromise * __this, Task * completedTask, MethodInfo * method));
DO_APP_FUNC(0x0233BD80, bool, Task_WhenAllPromise_get_ShouldNotifyDebuggerOfWaitCompletion, (Task_WhenAllPromise * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Task_c_DisplayClass178_0__ctor, (Task_c_DisplayClass178_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x0233AD40, void, Task_c_DisplayClass178_0__ExecuteSelfReplicating_b__0, (Task_c_DisplayClass178_0 * __this, Object * _p0_, MethodInfo * method));
DO_APP_FUNC(0x0233A930, void, Task_c__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Task_c__ctor, (Task_c * __this, MethodInfo * method));
DO_APP_FUNC(0x0233AA70, void, Task_c__Delay_b__276_0, (Task_c * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x0233AB20, void, Task_c__Delay_b__276_1, (Task_c * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x0233ABD0, Task_ContingentProperties *, Task_c___cctor_b__295_0, (Task_c * __this, MethodInfo * method));
DO_APP_FUNC(0x0233AD10, bool, Task_c___cctor_b__295_1, (Task_c * __this, Task * t, MethodInfo * method));
DO_APP_FUNC(0x00D4A040, bool, Task_c___cctor_b__295_2, (Task_c * __this, Object * tc, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, CompletionActionInvoker__ctor, (CompletionActionInvoker * __this, ITaskCompletionAction * action, Task * completingTask, MethodInfo * method));
DO_APP_FUNC(0x0232F8A0, void, CompletionActionInvoker_ExecuteWorkItem, (CompletionActionInvoker * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CompletionActionInvoker_MarkAborted, (CompletionActionInvoker * __this, ThreadAbortException * tae, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, SystemThreadingTasks_TaskDebugView__ctor, (SystemThreadingTasks_TaskDebugView * __this, Task * task, MethodInfo * method));
DO_APP_FUNC(0x00571730, Object *, SystemThreadingTasks_TaskDebugView_get_AsyncState, (SystemThreadingTasks_TaskDebugView * __this, MethodInfo * method));
DO_APP_FUNC(0x02330660, TaskCreationOptions__Enum, SystemThreadingTasks_TaskDebugView_get_CreationOptions, (SystemThreadingTasks_TaskDebugView * __this, MethodInfo * method));
DO_APP_FUNC(0x02330690, Exception *, SystemThreadingTasks_TaskDebugView_get_Exception, (SystemThreadingTasks_TaskDebugView * __this, MethodInfo * method));
DO_APP_FUNC(0x023306D0, int32_t, SystemThreadingTasks_TaskDebugView_get_Id, (SystemThreadingTasks_TaskDebugView * __this, MethodInfo * method));
DO_APP_FUNC(0x023306F0, bool, SystemThreadingTasks_TaskDebugView_get_CancellationPending, (SystemThreadingTasks_TaskDebugView * __this, MethodInfo * method));
DO_APP_FUNC(0x02330770, TaskStatus__Enum, SystemThreadingTasks_TaskDebugView_get_Status, (SystemThreadingTasks_TaskDebugView * __this, MethodInfo * method));
DO_APP_FUNC(0x0232FB80, bool, StackGuard_TryBeginInliningScope, (StackGuard * __this, MethodInfo * method));
DO_APP_FUNC(0x0232FB90, void, StackGuard_EndInliningScope, (StackGuard * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, StackGuard_CheckForSufficientStack, (StackGuard * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, StackGuard__ctor, (StackGuard * __this, MethodInfo * method));
DO_APP_FUNC(0x0233BE40, void, TaskCanceledException__ctor, (TaskCanceledException * __this, MethodInfo * method));
DO_APP_FUNC(0x0233BED0, void, TaskCanceledException__ctor_1, (TaskCanceledException * __this, Task * task, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, TaskCanceledException__ctor_2, (TaskCanceledException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0232F930, void, ContinuationTaskFromTask__ctor, (ContinuationTaskFromTask * __this, Task * antecedent, Delegate * action, Object * state, TaskCreationOptions__Enum creationOptions, InternalTaskOptions__Enum internalOptions, StackCrawlMark__Enum * stackMark, MethodInfo * method));
DO_APP_FUNC(0x0232FA40, void, ContinuationTaskFromTask_InnerInvoke, (ContinuationTaskFromTask * __this, MethodInfo * method));
DO_APP_FUNC(0x0233BFA0, void, TaskContinuation_InlineIfPossibleOrElseQueue, (Task * task, bool needsProtection, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TaskContinuation__ctor, (TaskContinuation * __this, MethodInfo * method));
DO_APP_FUNC(0x0232FBB0, void, StandardTaskContinuation__ctor, (StandardTaskContinuation * __this, Task * task, TaskContinuationOptions__Enum options, TaskScheduler * scheduler, MethodInfo * method));
DO_APP_FUNC(0x0232FCB0, void, StandardTaskContinuation_Run, (StandardTaskContinuation * __this, Task * completedTask, bool bCanInlineContinuationTask, MethodInfo * method));
DO_APP_FUNC(0x0232FE20, void, SynchronizationContextAwaitTaskContinuation__ctor, (SynchronizationContextAwaitTaskContinuation * __this, SynchronizationContext * context, Action * action, bool flowExecutionContext, StackCrawlMark__Enum * stackMark, MethodInfo * method));
DO_APP_FUNC(0x0232FE60, void, SynchronizationContextAwaitTaskContinuation_Run, (SynchronizationContextAwaitTaskContinuation * __this, Task * task, bool canInlineContinuationTask, MethodInfo * method));
DO_APP_FUNC(0x02330020, void, SynchronizationContextAwaitTaskContinuation_PostAction, (Object * state, MethodInfo * method));
DO_APP_FUNC(0x02330120, ContextCallback *, SynchronizationContextAwaitTaskContinuation_GetPostActionCallback, (MethodInfo * method));
DO_APP_FUNC(0x023302E0, void, SynchronizationContextAwaitTaskContinuation__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02330470, void, SynchronizationContextAwaitTaskContinuation_c__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SynchronizationContextAwaitTaskContinuation_c__ctor, (SynchronizationContextAwaitTaskContinuation_c * __this, MethodInfo * method));
DO_APP_FUNC(0x023305B0, void, SynchronizationContextAwaitTaskContinuation_c___cctor_b__7_0, (SynchronizationContextAwaitTaskContinuation_c * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x0232FE20, void, TaskSchedulerAwaitTaskContinuation__ctor, (TaskSchedulerAwaitTaskContinuation * __this, TaskScheduler * scheduler, Action * action, bool flowExecutionContext, StackCrawlMark__Enum * stackMark, MethodInfo * method));
DO_APP_FUNC(0x0233F990, void, TaskSchedulerAwaitTaskContinuation_Run, (TaskSchedulerAwaitTaskContinuation * __this, Task * ignored, bool canInlineContinuationTask, MethodInfo * method));
DO_APP_FUNC(0x0233FD70, void, TaskSchedulerAwaitTaskContinuation_c__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TaskSchedulerAwaitTaskContinuation_c__ctor, (TaskSchedulerAwaitTaskContinuation_c * __this, MethodInfo * method));
DO_APP_FUNC(0x0233FEB0, void, TaskSchedulerAwaitTaskContinuation_c__Run_b__2_0, (TaskSchedulerAwaitTaskContinuation_c * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x0232E5F0, void, AwaitTaskContinuation__ctor, (AwaitTaskContinuation * __this, Action * action, bool flowExecutionContext, StackCrawlMark__Enum * stackMark, MethodInfo * method));
DO_APP_FUNC(0x0232E6C0, void, AwaitTaskContinuation__ctor_1, (AwaitTaskContinuation * __this, Action * action, bool flowExecutionContext, MethodInfo * method));
DO_APP_FUNC(0x0232E780, Task *, AwaitTaskContinuation_CreateTask, (AwaitTaskContinuation * __this, Action_1_Object_ * action, Object * state, TaskScheduler * scheduler, MethodInfo * method));
DO_APP_FUNC(0x0232E960, void, AwaitTaskContinuation_Run, (AwaitTaskContinuation * __this, Task * task, bool canInlineContinuationTask, MethodInfo * method));
DO_APP_FUNC(0x0232EAA0, bool, AwaitTaskContinuation_get_IsValidLocationForInlining, (MethodInfo * method));
DO_APP_FUNC(0x0232EC00, void, AwaitTaskContinuation_ExecuteWorkItemHelper, (AwaitTaskContinuation * __this, MethodInfo * method));
DO_APP_FUNC(0x0232ED60, void, AwaitTaskContinuation_System_Threading_IThreadPoolWorkItem_ExecuteWorkItem, (AwaitTaskContinuation * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AwaitTaskContinuation_System_Threading_IThreadPoolWorkItem_MarkAborted, (AwaitTaskContinuation * __this, ThreadAbortException * tae, MethodInfo * method));
DO_APP_FUNC(0x0232ED90, void, AwaitTaskContinuation_InvokeAction, (Object * state, MethodInfo * method));
DO_APP_FUNC(0x0232EE40, ContextCallback *, AwaitTaskContinuation_GetInvokeActionCallback, (MethodInfo * method));
DO_APP_FUNC(0x0232EFC0, void, AwaitTaskContinuation_RunCallback, (AwaitTaskContinuation * __this, ContextCallback * callback, Object * state, Task * * currentTask, MethodInfo * method));
DO_APP_FUNC(0x0232F180, void, AwaitTaskContinuation_RunOrScheduleAction, (Action * action, bool allowInlining, Task * * currentTask, MethodInfo * method));
DO_APP_FUNC(0x0232F320, void, AwaitTaskContinuation_UnsafeScheduleAction, (Action * action, Task * task, MethodInfo * method));
DO_APP_FUNC(0x0232F4C0, void, AwaitTaskContinuation_ThrowAsyncIfNecessary, (Exception * exc, MethodInfo * method));
DO_APP_FUNC(0x0232F700, void, AwaitTaskContinuation_c__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AwaitTaskContinuation_c__ctor, (AwaitTaskContinuation_c * __this, MethodInfo * method));
DO_APP_FUNC(0x0232F840, void, AwaitTaskContinuation_c__ThrowAsyncIfNecessary_b__17_0, (AwaitTaskContinuation_c * __this, Object * s, MethodInfo * method));
DO_APP_FUNC(0x0233C210, void, TaskExceptionHolder__ctor, (TaskExceptionHolder * __this, Task * task, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, TaskExceptionHolder_ShouldFailFastOnUnobservedException, (MethodInfo * method));
DO_APP_FUNC(0x0233C2C0, void, TaskExceptionHolder_EnsureADUnloadCallbackRegistered, (MethodInfo * method));
DO_APP_FUNC(0x0233C5C0, void, TaskExceptionHolder_AppDomainUnloadCallback, (Object * sender, EventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x0233C660, void, TaskExceptionHolder_Finalize, (TaskExceptionHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x0233CE60, bool, TaskExceptionHolder_get_ContainsFaultList, (TaskExceptionHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x0233CE70, void, TaskExceptionHolder_Add, (TaskExceptionHolder * __this, Object * exceptionObject, bool representsCancellation, MethodInfo * method));
DO_APP_FUNC(0x0233CF80, void, TaskExceptionHolder_SetCancellationException, (TaskExceptionHolder * __this, Object * exceptionObject, MethodInfo * method));
DO_APP_FUNC(0x0233D070, void, TaskExceptionHolder_AddFaultException, (TaskExceptionHolder * __this, Object * exceptionObject, MethodInfo * method));
DO_APP_FUNC(0x0233D5A0, void, TaskExceptionHolder_MarkAsUnhandled, (TaskExceptionHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x0233D790, void, TaskExceptionHolder_MarkAsHandled, (TaskExceptionHolder * __this, bool calledFromFinalizer, MethodInfo * method));
DO_APP_FUNC(0x0233D860, AggregateException *, TaskExceptionHolder_CreateExceptionObject, (TaskExceptionHolder * __this, bool calledFromFinalizer, Exception * includeThisException, MethodInfo * method));
DO_APP_FUNC(0x0233DCC0, ReadOnlyCollection_1_System_Runtime_ExceptionServices_ExceptionDispatchInfo_ *, TaskExceptionHolder_GetExceptionDispatchInfos, (TaskExceptionHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, ExceptionDispatchInfo *, TaskExceptionHolder_GetCancellationExceptionDispatchInfo, (TaskExceptionHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x0233DE30, void, TaskExceptionHolder__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0233DEB0, void, TaskFactory__ctor, (TaskFactory * __this, MethodInfo * method));
DO_APP_FUNC(0x0233DEE0, void, TaskFactory__ctor_1, (TaskFactory * __this, CancellationToken cancellationToken, TaskCreationOptions__Enum creationOptions, TaskContinuationOptions__Enum continuationOptions, TaskScheduler * scheduler, MethodInfo * method));
DO_APP_FUNC(0x0233DF40, void, TaskFactory_CheckCreationOptions, (TaskCreationOptions__Enum creationOptions, MethodInfo * method));
DO_APP_FUNC(0x0233DFF0, Task *, TaskFactory_StartNew, (TaskFactory * __this, Action * action, CancellationToken cancellationToken, TaskCreationOptions__Enum creationOptions, TaskScheduler * scheduler, MethodInfo * method));
DO_APP_FUNC(0x0233E0F0, Task *, TaskFactory_StartNew_1, (TaskFactory * __this, Action_1_Object_ * action, Object * state, CancellationToken cancellationToken, TaskCreationOptions__Enum creationOptions, TaskScheduler * scheduler, MethodInfo * method));
DO_APP_FUNC(0x0233E1F0, void, TaskFactory_CheckFromAsyncOptions, (TaskCreationOptions__Enum creationOptions, bool hasBeginMethod, MethodInfo * method));
DO_APP_FUNC(0x0233E350, Task_1_Task_ *, TaskFactory_CommonCWAnyLogic, (IList_1_System_Threading_Tasks_Task_ * tasks, MethodInfo * method));
DO_APP_FUNC(0x0233E6F0, void, TaskFactory_CheckMultiTaskContinuationOptions, (TaskContinuationOptions__Enum continuationOptions, MethodInfo * method));
DO_APP_FUNC(0x0233E850, void, TaskFactory_CompleteOnInvokePromise__ctor, (TaskFactory_CompleteOnInvokePromise * __this, IList_1_System_Threading_Tasks_Task_ * tasks, MethodInfo * method));
DO_APP_FUNC(0x0233E9E0, void, TaskFactory_CompleteOnInvokePromise_Invoke, (TaskFactory_CompleteOnInvokePromise * __this, Task * completingTask, MethodInfo * method));
DO_APP_FUNC(0x0233EC50, bool, TaskScheduler_TryRunInline, (TaskScheduler * __this, Task * task, bool taskWasPreviouslyQueued, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, TaskScheduler_TryDequeue, (TaskScheduler * __this, Task * task, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TaskScheduler_NotifyWorkItemProgress, (TaskScheduler * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, TaskScheduler_get_RequiresAtomicStartTransition, (TaskScheduler * __this, MethodInfo * method));
DO_APP_FUNC(0x0233EED0, void, TaskScheduler_InternalQueueTask, (TaskScheduler * __this, Task * task, MethodInfo * method));
DO_APP_FUNC(0x0233EF00, void, TaskScheduler__ctor, (TaskScheduler * __this, MethodInfo * method));
DO_APP_FUNC(0x0233EFB0, void, TaskScheduler_AddToActiveTaskSchedulers, (TaskScheduler * __this, MethodInfo * method));
DO_APP_FUNC(0x0233F190, TaskScheduler *, TaskScheduler_get_Default, (MethodInfo * method));
DO_APP_FUNC(0x0233F230, TaskScheduler *, TaskScheduler_get_Current, (MethodInfo * method));
DO_APP_FUNC(0x0233F2F0, TaskScheduler *, TaskScheduler_get_InternalCurrent, (MethodInfo * method));
DO_APP_FUNC(0x0233F3B0, int32_t, TaskScheduler_get_Id, (TaskScheduler * __this, MethodInfo * method));
DO_APP_FUNC(0x0233F490, void, TaskScheduler_PublishUnobservedTaskException, (Object * sender, UnobservedTaskExceptionEventArgs * ueea, MethodInfo * method));
DO_APP_FUNC(0x0233F650, void, TaskScheduler__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, TaskScheduler_SystemThreadingTasks_TaskSchedulerDebugView__ctor, (TaskScheduler_SystemThreadingTasks_TaskSchedulerDebugView * __this, TaskScheduler * scheduler, MethodInfo * method));
DO_APP_FUNC(0x0233F970, int32_t, TaskScheduler_SystemThreadingTasks_TaskSchedulerDebugView_get_Id, (TaskScheduler_SystemThreadingTasks_TaskSchedulerDebugView * __this, MethodInfo * method));
DO_APP_FUNC(0x016D9400, IEnumerable_1_System_Threading_Tasks_Task_ *, TaskScheduler_SystemThreadingTasks_TaskSchedulerDebugView_get_ScheduledTasks, (TaskScheduler_SystemThreadingTasks_TaskSchedulerDebugView * __this, MethodInfo * method));
DO_APP_FUNC(0x023416F0, void, UnobservedTaskExceptionEventArgs__ctor, (UnobservedTaskExceptionEventArgs * __this, AggregateException * exception, MethodInfo * method));
DO_APP_FUNC(0x0233FF80, void, TaskSchedulerException__ctor, (TaskSchedulerException * __this, MethodInfo * method));
DO_APP_FUNC(0x02340030, void, TaskSchedulerException__ctor_1, (TaskSchedulerException * __this, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x023400F0, void, TaskSchedulerException__ctor_2, (TaskSchedulerException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x023401B0, IAsyncResult *, TaskToApm_Begin, (Task * task, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x02340440, void, TaskToApm_End, (IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x02340530, void, TaskToApm_InvokeCallbackWhenTaskCompletes, (Task * antecedent, AsyncCallback * callback, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x010415E0, void, TaskToApm_TaskWrapperAsyncResult__ctor, (TaskToApm_TaskWrapperAsyncResult * __this, Task * task, Object * state, bool completedSynchronously, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Object *, TaskToApm_TaskWrapperAsyncResult_System_IAsyncResult_get_AsyncState, (TaskToApm_TaskWrapperAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A030, bool, TaskToApm_TaskWrapperAsyncResult_System_IAsyncResult_get_CompletedSynchronously, (TaskToApm_TaskWrapperAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x023407D0, bool, TaskToApm_TaskWrapperAsyncResult_System_IAsyncResult_get_IsCompleted, (TaskToApm_TaskWrapperAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x023407F0, WaitHandle *, TaskToApm_TaskWrapperAsyncResult_System_IAsyncResult_get_AsyncWaitHandle, (TaskToApm_TaskWrapperAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TaskToApm_c_DisplayClass3_0__ctor, (TaskToApm_c_DisplayClass3_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x023407A0, void, TaskToApm_c_DisplayClass3_0__InvokeCallbackWhenTaskCompletes_b__0, (TaskToApm_c_DisplayClass3_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x02340880, void, ThreadPoolTaskScheduler__ctor, (ThreadPoolTaskScheduler * __this, MethodInfo * method));
DO_APP_FUNC(0x023409B0, void, ThreadPoolTaskScheduler_LongRunningThreadWork, (Object * obj, MethodInfo * method));
DO_APP_FUNC(0x02340AB0, void, ThreadPoolTaskScheduler_QueueTask, (ThreadPoolTaskScheduler * __this, Task * task, MethodInfo * method));
DO_APP_FUNC(0x02340CA0, bool, ThreadPoolTaskScheduler_TryExecuteTaskInline, (ThreadPoolTaskScheduler * __this, Task * task, bool taskWasPreviouslyQueued, MethodInfo * method));
DO_APP_FUNC(0x02340DA0, bool, ThreadPoolTaskScheduler_TryDequeue, (ThreadPoolTaskScheduler * __this, Task * task, MethodInfo * method));
DO_APP_FUNC(0x02340DB0, IEnumerable_1_System_Threading_Tasks_Task_ *, ThreadPoolTaskScheduler_GetScheduledTasks, (ThreadPoolTaskScheduler * __this, MethodInfo * method));
DO_APP_FUNC(0x02340ED0, IEnumerable_1_System_Threading_Tasks_Task_ *, ThreadPoolTaskScheduler_FilterTasksFromWorkItems, (ThreadPoolTaskScheduler * __this, IEnumerable_1_System_Threading_IThreadPoolWorkItem_ * tpwItems, MethodInfo * method));
DO_APP_FUNC(0x02341060, void, ThreadPoolTaskScheduler_NotifyWorkItemProgress, (ThreadPoolTaskScheduler * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, ThreadPoolTaskScheduler_get_RequiresAtomicStartTransition, (ThreadPoolTaskScheduler * __this, MethodInfo * method));
DO_APP_FUNC(0x02341070, void, ThreadPoolTaskScheduler__cctor, (MethodInfo * method));
DO_APP_FUNC(0x006389F0, void, ThreadPoolTaskScheduler_FilterTasksFromWorkItems_d_7__ctor, (ThreadPoolTaskScheduler_FilterTasksFromWorkItems_d_7 * __this, int32_t __1__state, MethodInfo * method));
DO_APP_FUNC(0x023411D0, void, ThreadPoolTaskScheduler_FilterTasksFromWorkItems_d_7_System_IDisposable_Dispose, (ThreadPoolTaskScheduler_FilterTasksFromWorkItems_d_7 * __this, MethodInfo * method));
DO_APP_FUNC(0x02341210, bool, ThreadPoolTaskScheduler_FilterTasksFromWorkItems_d_7_MoveNext, (ThreadPoolTaskScheduler_FilterTasksFromWorkItems_d_7 * __this, MethodInfo * method));
DO_APP_FUNC(0x02341400, void, ThreadPoolTaskScheduler_FilterTasksFromWorkItems_d_7___m__Finally1, (ThreadPoolTaskScheduler_FilterTasksFromWorkItems_d_7 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Task *, ThreadPoolTaskScheduler_FilterTasksFromWorkItems_d_7_System_Collections_Generic_IEnumerator_System_Threading_Tasks_Task__get_Current, (ThreadPoolTaskScheduler_FilterTasksFromWorkItems_d_7 * __this, MethodInfo * method));
DO_APP_FUNC(0x023414A0, void, ThreadPoolTaskScheduler_FilterTasksFromWorkItems_d_7_System_Collections_IEnumerator_Reset, (ThreadPoolTaskScheduler_FilterTasksFromWorkItems_d_7 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Object *, ThreadPoolTaskScheduler_FilterTasksFromWorkItems_d_7_System_Collections_IEnumerator_get_Current, (ThreadPoolTaskScheduler_FilterTasksFromWorkItems_d_7 * __this, MethodInfo * method));
DO_APP_FUNC(0x023414F0, IEnumerator_1_System_Threading_Tasks_Task_ *, ThreadPoolTaskScheduler_FilterTasksFromWorkItems_d_7_System_Collections_Generic_IEnumerable_System_Threading_Tasks_Task__GetEnumerator, (ThreadPoolTaskScheduler_FilterTasksFromWorkItems_d_7 * __this, MethodInfo * method));
DO_APP_FUNC(0x023416E0, IEnumerator *, ThreadPoolTaskScheduler_FilterTasksFromWorkItems_d_7_System_Collections_IEnumerable_GetEnumerator, (ThreadPoolTaskScheduler_FilterTasksFromWorkItems_d_7 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SuppressUnmanagedCodeSecurityAttribute__ctor, (SuppressUnmanagedCodeSecurityAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, UnverifiableCodeAttribute__ctor, (UnverifiableCodeAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AllowPartiallyTrustedCallersAttribute__ctor, (AllowPartiallyTrustedCallersAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SecurityCriticalAttribute__ctor, (SecurityCriticalAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SecuritySafeCriticalAttribute__ctor, (SecuritySafeCriticalAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, SecurityRulesAttribute__ctor, (SecurityRulesAttribute * __this, SecurityRuleSet__Enum ruleSet, MethodInfo * method));
DO_APP_FUNC(0x0052C660, void, SecurityRulesAttribute_set_SkipVerificationInFullTrust, (SecurityRulesAttribute * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01E1DF90, void, SecurityDocument__ctor, (SecurityDocument * __this, int32_t numData, MethodInfo * method));
DO_APP_FUNC(0x01E1E030, void, SecurityDocument_GuaranteeSize, (SecurityDocument * __this, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01E1E120, void, SecurityDocument_AddString, (SecurityDocument * __this, String * str, int32_t * position, MethodInfo * method));
DO_APP_FUNC(0x01E1E2C0, void, SecurityDocument_AppendString, (SecurityDocument * __this, String * str, int32_t * position, MethodInfo * method));
DO_APP_FUNC(0x01E1E400, int32_t, SecurityDocument_EncodedStringSize, (String * str, MethodInfo * method));
DO_APP_FUNC(0x01E1E420, String *, SecurityDocument_GetString, (SecurityDocument * __this, int32_t * position, bool bCreate, MethodInfo * method));
DO_APP_FUNC(0x01E1E8A0, void, SecurityDocument_AddToken, (SecurityDocument * __this, uint8_t b, int32_t * position, MethodInfo * method));
DO_APP_FUNC(0x01E1E910, SecurityElement *, SecurityDocument_GetRootElement, (SecurityDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1E940, SecurityElement *, SecurityDocument_GetElement, (SecurityDocument * __this, int32_t position, bool bCreate, MethodInfo * method));
DO_APP_FUNC(0x01E1E960, SecurityElement *, SecurityDocument_InternalGetElement, (SecurityDocument * __this, int32_t * position, bool bCreate, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CodeAccessPermission__ctor, (CodeAccessPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x020C7680, void, CodeAccessPermission_Demand, (CodeAccessPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x020C76F0, bool, CodeAccessPermission_Equals, (CodeAccessPermission * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0194D440, int32_t, CodeAccessPermission_GetHashCode, (CodeAccessPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x020C7850, String *, CodeAccessPermission_ToString, (CodeAccessPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x020C7890, IPermission *, CodeAccessPermission_Union, (CodeAccessPermission * __this, IPermission * other, MethodInfo * method));
DO_APP_FUNC(0x020C7930, SecurityElement *, CodeAccessPermission_Element, (CodeAccessPermission * __this, int32_t version, MethodInfo * method));
DO_APP_FUNC(0x020C7B80, PermissionState__Enum, CodeAccessPermission_CheckPermissionState, (PermissionState__Enum state, bool allowUnrestricted, MethodInfo * method));
DO_APP_FUNC(0x020C7C70, int32_t, CodeAccessPermission_CheckSecurityElement, (SecurityElement * se, String * parameterName, int32_t minimumVersion, int32_t maximumVersion, MethodInfo * method));
DO_APP_FUNC(0x020C7F50, bool, CodeAccessPermission_IsUnrestricted, (SecurityElement * se, MethodInfo * method));
DO_APP_FUNC(0x020C8080, void, CodeAccessPermission_ThrowInvalidPermission, (IPermission * target, Type * expected, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CodeAccessPermission_System_Security_IPermission_Demand, (CodeAccessPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01E18EC0, void, NamedPermissionSet__ctor, (NamedPermissionSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01E18F60, void, NamedPermissionSet__ctor_1, (NamedPermissionSet * __this, String * name, PermissionState__Enum state, MethodInfo * method));
DO_APP_FUNC(0x01E19100, void, NamedPermissionSet__ctor_2, (NamedPermissionSet * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, NamedPermissionSet_get_Name, (NamedPermissionSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01E19110, void, NamedPermissionSet_set_Name, (NamedPermissionSet * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E19210, SecurityElement *, NamedPermissionSet_ToXml, (NamedPermissionSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01E192F0, bool, NamedPermissionSet_Equals, (NamedPermissionSet * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01E193E0, int32_t, NamedPermissionSet_GetHashCode, (NamedPermissionSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01E19450, void, PermissionSet__ctor, (PermissionSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01E195A0, void, PermissionSet__ctor_1, (PermissionSet * __this, PermissionState__Enum state, MethodInfo * method));
DO_APP_FUNC(0x01E195D0, void, PermissionSet__ctor_2, (PermissionSet * __this, IPermission * perm, MethodInfo * method));
DO_APP_FUNC(0x01E19620, void, PermissionSet_CopyTo, (PermissionSet * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01E197C0, void, PermissionSet_Demand, (PermissionSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01E19A10, void, PermissionSet_CasOnlyDemand, (PermissionSet * __this, int32_t skip, MethodInfo * method));
DO_APP_FUNC(0x01BDD530, IEnumerator *, PermissionSet_GetEnumerator, (PermissionSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01E19AC0, bool, PermissionSet_IsEmpty, (PermissionSet * __this, MethodInfo * method));
DO_APP_FUNC(0x005150C0, bool, PermissionSet_IsUnrestricted, (PermissionSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01E19D00, String *, PermissionSet_ToString, (PermissionSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01E19D40, SecurityElement *, PermissionSet_ToXml, (PermissionSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1A180, int32_t, PermissionSet_get_Count, (PermissionSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1A1B0, bool, PermissionSet_get_IsSynchronized, (PermissionSet * __this, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, Object *, PermissionSet_get_SyncRoot, (PermissionSet * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, PermissionSet_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization, (PermissionSet * __this, Object * sender, MethodInfo * method));
DO_APP_FUNC(0x01E1A1E0, bool, PermissionSet_Equals, (PermissionSet * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01E1A410, int32_t, PermissionSet_GetHashCode, (PermissionSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1A460, void, PermissionSet__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SecureString__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01E1D750, void, SecureString__ctor, (SecureString * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1D7E0, void, SecureString__ctor_1, (SecureString * __this, uint16_t * value, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01E1D9A0, int32_t, SecureString_get_Length, (SecureString * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1DA50, SecureString *, SecureString_Copy, (SecureString * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1DC80, void, SecureString_Dispose, (SecureString * __this, MethodInfo * method));
DO_APP_FUNC(0x003F8E90, void, SecureString_Encrypt, (SecureString * __this, MethodInfo * method));
DO_APP_FUNC(0x003F8E90, void, SecureString_Decrypt, (SecureString * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1DCC0, void, SecureString_Alloc, (SecureString * __this, int32_t length, bool realloc, MethodInfo * method));
DO_APP_FUNC(0x01E1DE70, Byte__Array *, SecureString_GetBuffer, (SecureString * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1ED30, void, SecurityElement__ctor, (SecurityElement * __this, String * tag, MethodInfo * method));
DO_APP_FUNC(0x01E1ED40, void, SecurityElement__ctor_1, (SecurityElement * __this, String * tag, String * text, MethodInfo * method));
DO_APP_FUNC(0x01E1EF40, Hashtable *, SecurityElement_get_Attributes, (SecurityElement * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, ArrayList *, SecurityElement_get_Children, (SecurityElement * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, SecurityElement_get_Tag, (SecurityElement * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, SecurityElement_get_Text, (SecurityElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1F2C0, void, SecurityElement_set_Text, (SecurityElement * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E1F4A0, void, SecurityElement_AddAttribute, (SecurityElement * __this, String * name, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E1F7D0, void, SecurityElement_AddChild, (SecurityElement * __this, SecurityElement * child, MethodInfo * method));
DO_APP_FUNC(0x01E1F990, String *, SecurityElement_Attribute, (SecurityElement * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01E1FA70, String *, SecurityElement_Escape, (String * str, MethodInfo * method));
DO_APP_FUNC(0x01E1FD70, String *, SecurityElement_Unescape, (String * str, MethodInfo * method));
DO_APP_FUNC(0x01E1FFD0, SecurityElement *, SecurityElement_FromString, (String * xml, MethodInfo * method));
DO_APP_FUNC(0x01E20200, bool, SecurityElement_IsValidAttributeName, (String * name, MethodInfo * method));
DO_APP_FUNC(0x01E202E0, bool, SecurityElement_IsValidAttributeValue, (String * value, MethodInfo * method));
DO_APP_FUNC(0x01E203C0, bool, SecurityElement_IsValidTag, (String * tag, MethodInfo * method));
DO_APP_FUNC(0x01E204A0, bool, SecurityElement_IsValidText, (String * text, MethodInfo * method));
DO_APP_FUNC(0x01E20580, SecurityElement *, SecurityElement_SearchForChildByTag, (SecurityElement * __this, String * tag, MethodInfo * method));
DO_APP_FUNC(0x01E20720, String *, SecurityElement_SearchForTextOfTag, (SecurityElement * __this, String * tag, MethodInfo * method));
DO_APP_FUNC(0x01E208D0, String *, SecurityElement_ToString, (SecurityElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E20A70, void, SecurityElement_ToXml, (SecurityElement * __this, StringBuilder * * s, int32_t level, MethodInfo * method));
DO_APP_FUNC(0x01E21010, SecurityElement_SecurityAttribute *, SecurityElement_GetAttribute, (SecurityElement * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, SecurityElement_set_m_strText, (SecurityElement * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E21210, String *, SecurityElement_SearchForTextOfLocalName, (SecurityElement * __this, String * strLocalName, MethodInfo * method));
DO_APP_FUNC(0x01E214E0, void, SecurityElement__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01E216B0, void, SecurityElement_SecurityAttribute__ctor, (SecurityElement_SecurityAttribute * __this, String * name, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, SecurityElement_SecurityAttribute_get_Name, (SecurityElement_SecurityAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, SecurityElement_SecurityAttribute_get_Value, (SecurityElement_SecurityAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01E219C0, void, SecurityException__ctor, (SecurityException * __this, MethodInfo * method));
DO_APP_FUNC(0x01E21A50, void, SecurityException__ctor_1, (SecurityException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01E21A70, void, SecurityException__ctor_2, (SecurityException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01E21BD0, void, SecurityException__ctor_3, (SecurityException * __this, String * message, Exception * inner, MethodInfo * method));
DO_APP_FUNC(0x01E21BF0, void, SecurityException_GetObjectData, (SecurityException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01A1BAA0, String *, SecurityException_ToString, (SecurityException * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, SecurityManager_get_SecurityEnabled, (MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, SecurityManager_CheckElevatedPermissions, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SecurityManager_EnsureElevatedPermissions, (MethodInfo * method));
DO_APP_FUNC(0x01E25790, void, XmlSyntaxException__ctor, (XmlSyntaxException * __this, MethodInfo * method));
DO_APP_FUNC(0x01E257A0, void, XmlSyntaxException__ctor_1, (XmlSyntaxException * __this, int32_t lineNumber, MethodInfo * method));
DO_APP_FUNC(0x01E258A0, void, XmlSyntaxException__ctor_2, (XmlSyntaxException * __this, int32_t lineNumber, String * message, MethodInfo * method));
DO_APP_FUNC(0x01E259B0, void, XmlSyntaxException__ctor_3, (XmlSyntaxException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01E259C0, void, XmlSyntaxException__ctor_4, (XmlSyntaxException * __this, String * message, Exception * inner, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, XmlSyntaxException__ctor_5, (XmlSyntaxException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Evidence__ctor, (Evidence * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1BCF0, int32_t, Evidence_get_Count, (Evidence * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Evidence_get_IsSynchronized, (Evidence * __this, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, Object *, Evidence_get_SyncRoot, (Evidence * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1BD50, void, Evidence_CopyTo, (Evidence * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01E1BE10, IEnumerator *, Evidence_GetEnumerator, (Evidence * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1BFA0, void, Evidence_EvidenceEnumerator__ctor, (Evidence_EvidenceEnumerator * __this, IEnumerator * hostenum, IEnumerator * assemblyenum, MethodInfo * method));
DO_APP_FUNC(0x01E1BFB0, bool, Evidence_EvidenceEnumerator_MoveNext, (Evidence_EvidenceEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1C070, void, Evidence_EvidenceEnumerator_Reset, (Evidence_EvidenceEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1C130, Object *, Evidence_EvidenceEnumerator_get_Current, (Evidence_EvidenceEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, CodeAccessSecurityAttribute__ctor, (CodeAccessSecurityAttribute * __this, SecurityAction__Enum action, MethodInfo * method));
DO_APP_FUNC(0x01E1A610, void, ReflectionPermission__ctor, (ReflectionPermission * __this, PermissionState__Enum state, MethodInfo * method));
DO_APP_FUNC(0x01E1A640, void, ReflectionPermission__ctor_1, (ReflectionPermission * __this, ReflectionPermissionFlag__Enum flag, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, ReflectionPermissionFlag__Enum, ReflectionPermission_get_Flags, (ReflectionPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1A650, void, ReflectionPermission_set_Flags, (ReflectionPermission * __this, ReflectionPermissionFlag__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01E1A750, IPermission *, ReflectionPermission_Copy, (ReflectionPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1A8A0, void, ReflectionPermission_FromXml, (ReflectionPermission * __this, SecurityElement * esd, MethodInfo * method));
DO_APP_FUNC(0x01E1AA50, IPermission *, ReflectionPermission_Intersect, (ReflectionPermission * __this, IPermission * target, MethodInfo * method));
DO_APP_FUNC(0x01E1ABC0, bool, ReflectionPermission_IsSubsetOf, (ReflectionPermission * __this, IPermission * target, MethodInfo * method));
DO_APP_FUNC(0x01E1AC20, bool, ReflectionPermission_IsUnrestricted, (ReflectionPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1AC30, SecurityElement *, ReflectionPermission_ToXml, (ReflectionPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1ADF0, IPermission *, ReflectionPermission_Union, (ReflectionPermission * __this, IPermission * other, MethodInfo * method));
DO_APP_FUNC(0x01E1B010, ReflectionPermission *, ReflectionPermission_Cast, (ReflectionPermission * __this, IPermission * target, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, SecurityAttribute__ctor, (SecurityAttribute * __this, SecurityAction__Enum action, MethodInfo * method));
DO_APP_FUNC(0x00724AE0, bool, SecurityAttribute_get_Unrestricted, (SecurityAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, SecurityAttribute_set_Action, (SecurityAttribute * __this, SecurityAction__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01E1B0F0, void, SecurityPermission__ctor, (SecurityPermission * __this, PermissionState__Enum state, MethodInfo * method));
DO_APP_FUNC(0x01E1B120, void, SecurityPermission__ctor_1, (SecurityPermission * __this, SecurityPermissionFlag__Enum flag, MethodInfo * method));
DO_APP_FUNC(0x01E1B120, void, SecurityPermission_set_Flags, (SecurityPermission * __this, SecurityPermissionFlag__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01E1B220, bool, SecurityPermission_IsUnrestricted, (SecurityPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1B230, IPermission *, SecurityPermission_Copy, (SecurityPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1B380, IPermission *, SecurityPermission_Intersect, (SecurityPermission * __this, IPermission * target, MethodInfo * method));
DO_APP_FUNC(0x01E1B650, IPermission *, SecurityPermission_Union, (SecurityPermission * __this, IPermission * target, MethodInfo * method));
DO_APP_FUNC(0x01E1B8E0, bool, SecurityPermission_IsSubsetOf, (SecurityPermission * __this, IPermission * target, MethodInfo * method));
DO_APP_FUNC(0x01E1B940, void, SecurityPermission_FromXml, (SecurityPermission * __this, SecurityElement * esd, MethodInfo * method));
DO_APP_FUNC(0x01E1BAD0, SecurityElement *, SecurityPermission_ToXml, (SecurityPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x007A3190, bool, SecurityPermission_IsEmpty, (SecurityPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1BBF0, SecurityPermission *, SecurityPermission_Cast, (SecurityPermission * __this, IPermission * target, MethodInfo * method));
DO_APP_FUNC(0x01E1BCD0, void, SecurityPermissionAttribute_set_SkipVerification, (SecurityPermissionAttribute * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, IPermission *, SecurityPermissionAttribute_CreatePermission, (SecurityPermissionAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01E21CD0, SecurityElement *, Parser_GetTopElement, (Parser * __this, MethodInfo * method));
DO_APP_FUNC(0x01E21D00, void, Parser_GetRequiredSizes, (Parser * __this, TokenizerStream * stream, int32_t * index, MethodInfo * method));
DO_APP_FUNC(0x01E22510, int32_t, Parser_DetermineFormat, (Parser * __this, TokenizerStream * stream, MethodInfo * method));
DO_APP_FUNC(0x01E227D0, void, Parser_ParseContents, (Parser * __this, MethodInfo * method));
DO_APP_FUNC(0x01E22E80, void, Parser__ctor, (Parser * __this, Tokenizer * t, MethodInfo * method));
DO_APP_FUNC(0x01E22FB0, void, Parser__ctor_1, (Parser * __this, String * input, MethodInfo * method));
DO_APP_FUNC(0x01E231C0, void, Tokenizer_BasicInitialization, (Tokenizer * __this, MethodInfo * method));
DO_APP_FUNC(0x01E23290, void, Tokenizer_Recycle, (Tokenizer * __this, MethodInfo * method));
DO_APP_FUNC(0x01E23330, void, Tokenizer__ctor, (Tokenizer * __this, String * input, MethodInfo * method));
DO_APP_FUNC(0x01E23420, void, Tokenizer_ChangeFormat, (Tokenizer * __this, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x01E23880, void, Tokenizer_GetTokens, (Tokenizer * __this, TokenizerStream * stream, int32_t maxNum, bool endAfterKet, MethodInfo * method));
DO_APP_FUNC(0x01E245A0, String *, Tokenizer_GetStringToken, (Tokenizer * __this, MethodInfo * method));
DO_APP_FUNC(0x01E24600, uint32_t, Tokenizer_StringMaker_HashString, (String * str, MethodInfo * method));
DO_APP_FUNC(0x01E24730, uint32_t, Tokenizer_StringMaker_HashCharArray, (Char__Array * a, int32_t l, MethodInfo * method));
DO_APP_FUNC(0x01E24790, void, Tokenizer_StringMaker__ctor, (Tokenizer_StringMaker * __this, MethodInfo * method));
DO_APP_FUNC(0x01E24840, bool, Tokenizer_StringMaker_CompareStringAndChars, (Tokenizer_StringMaker * __this, String * str, Char__Array * a, int32_t l, MethodInfo * method));
DO_APP_FUNC(0x01E248E0, String *, Tokenizer_StringMaker_MakeString, (Tokenizer_StringMaker * __this, MethodInfo * method));
DO_APP_FUNC(0x00E464D0, void, Tokenizer_StreamTokenReader__ctor, (Tokenizer_StreamTokenReader * __this, StreamReader * input, MethodInfo * method));
DO_APP_FUNC(0x01E245C0, int32_t, Tokenizer_StreamTokenReader_Read, (Tokenizer_StreamTokenReader * __this, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, Tokenizer_StreamTokenReader_get_NumCharEncountered, (Tokenizer_StreamTokenReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01E24CF0, void, TokenizerShortBlock__ctor, (TokenizerShortBlock * __this, MethodInfo * method));
DO_APP_FUNC(0x01E25700, void, TokenizerStringBlock__ctor, (TokenizerStringBlock * __this, MethodInfo * method));
DO_APP_FUNC(0x01E24D80, void, TokenizerStream__ctor, (TokenizerStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E24FB0, void, TokenizerStream_AddToken, (TokenizerStream * __this, int16_t token, MethodInfo * method));
DO_APP_FUNC(0x01E251B0, void, TokenizerStream_AddString, (TokenizerStream * __this, String * str, MethodInfo * method));
DO_APP_FUNC(0x01E253E0, void, TokenizerStream_Reset, (TokenizerStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E25400, int16_t, TokenizerStream_GetNextFullToken, (TokenizerStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E25490, int16_t, TokenizerStream_GetNextToken, (TokenizerStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E254B0, String *, TokenizerStream_GetNextString, (TokenizerStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E25540, void, TokenizerStream_ThrowAwayNextString, (TokenizerStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E25550, void, TokenizerStream_TagLastToken, (TokenizerStream * __this, int16_t tag, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, TokenizerStream_GetTokenCount, (TokenizerStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E25610, void, TokenizerStream_GoToPosition, (TokenizerStream * __this, int32_t position, MethodInfo * method));
DO_APP_FUNC(0x01E1C1C0, void, GenericIdentity__ctor, (GenericIdentity * __this, String * name, String * type, MethodInfo * method));
DO_APP_FUNC(0x01E1C300, void, GenericIdentity__ctor_1, (GenericIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1C330, void, GenericIdentity__ctor_2, (GenericIdentity * __this, GenericIdentity * identity, MethodInfo * method));
DO_APP_FUNC(0x01E1C380, ClaimsIdentity *, GenericIdentity_Clone, (GenericIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1C4F0, IEnumerable_1_System_Security_Claims_Claim_ *, GenericIdentity_get_Claims, (GenericIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBE0, String *, GenericIdentity_get_Name, (GenericIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC00, String *, GenericIdentity_get_AuthenticationType, (GenericIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1C500, void, GenericIdentity_OnDeserializedMethod, (GenericIdentity * __this, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01E1C6B0, void, GenericIdentity_AddNameClaim, (GenericIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1C930, void, GenericPrincipal__ctor, (GenericPrincipal * __this, IIdentity * identity, String__Array * roles, MethodInfo * method));
DO_APP_FUNC(0x01E1CBF0, void, WindowsIdentity__ctor, (WindowsIdentity * __this, void * userToken, String * type, WindowsAccountType__Enum acctType, bool isAuthenticated, MethodInfo * method));
DO_APP_FUNC(0x01E1CC80, void, WindowsIdentity__ctor_1, (WindowsIdentity * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01E1CCD0, void, WindowsIdentity__ctor_2, (WindowsIdentity * __this, ClaimsIdentity * claimsIdentity, void * userToken, MethodInfo * method));
DO_APP_FUNC(0x01E1CD80, void, WindowsIdentity_Dispose, (WindowsIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1CE10, WindowsIdentity *, WindowsIdentity_GetCurrent, (MethodInfo * method));
DO_APP_FUNC(0x01E1CFC0, WindowsImpersonationContext *, WindowsIdentity_Impersonate, (WindowsIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC00, String *, WindowsIdentity_get_AuthenticationType, (WindowsIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1D010, String *, WindowsIdentity_get_Name, (WindowsIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1D0C0, void, WindowsIdentity_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization, (WindowsIdentity * __this, Object * sender, MethodInfo * method));
DO_APP_FUNC(0x01E1D3B0, void, WindowsIdentity_System_Runtime_Serialization_ISerializable_GetObjectData, (WindowsIdentity * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01E1D4F0, ClaimsIdentity *, WindowsIdentity_CloneAsBase, (WindowsIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBE0, void *, WindowsIdentity_GetTokenInternal, (WindowsIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1D500, void, WindowsIdentity_SetToken, (WindowsIdentity * __this, void * token, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, void *, WindowsIdentity_GetCurrentToken, (MethodInfo * method));
DO_APP_FUNC(0x00420EE0, String *, WindowsIdentity_GetTokenName, (void * token, MethodInfo * method));
DO_APP_FUNC(0x01E1D610, void, WindowsIdentity__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01E1D690, void, WindowsImpersonationContext__ctor, (WindowsImpersonationContext * __this, void * token, MethodInfo * method));
DO_APP_FUNC(0x01E1D6C0, void, WindowsImpersonationContext_Dispose, (WindowsImpersonationContext * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1D6E0, void, WindowsImpersonationContext_Undo, (WindowsImpersonationContext * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1D710, bool, WindowsImpersonationContext_CloseToken, (void * token, MethodInfo * method));
DO_APP_FUNC(0x01E1D720, void *, WindowsImpersonationContext_DuplicateToken, (void * token, MethodInfo * method));
DO_APP_FUNC(0x01E1D730, bool, WindowsImpersonationContext_SetCurrentToken, (void * token, MethodInfo * method));
DO_APP_FUNC(0x01E1D740, bool, WindowsImpersonationContext_RevertToSelf, (MethodInfo * method));
DO_APP_FUNC(0x020C0D40, void, Claim__ctor, (Claim * __this, String * type, String * value, String * valueType, String * issuer, String * originalIssuer, ClaimsIdentity * subject, MethodInfo * method));
DO_APP_FUNC(0x020C0D90, void, Claim__ctor_1, (Claim * __this, String * type, String * value, String * valueType, String * issuer, String * originalIssuer, ClaimsIdentity * subject, String * propertyKey, String * propertyValue, MethodInfo * method));
DO_APP_FUNC(0x020C1010, void, Claim__ctor_2, (Claim * __this, Claim * other, ClaimsIdentity * subject, MethodInfo * method));
DO_APP_FUNC(0x020C14E0, void, Claim_OnDeserializedMethod, (Claim * __this, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x020C1620, IDictionary_2_System_String_System_String_ *, Claim_get_Properties, (Claim * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, ClaimsIdentity *, Claim_get_Subject, (Claim * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, Claim_set_Subject, (Claim * __this, ClaimsIdentity * value, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, Claim_get_Type, (Claim * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, Claim_get_Value, (Claim * __this, MethodInfo * method));
DO_APP_FUNC(0x020C1880, Claim *, Claim_Clone, (Claim * __this, ClaimsIdentity * identity, MethodInfo * method));
DO_APP_FUNC(0x020C19E0, String *, Claim_ToString, (Claim * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1C300, void, ClaimsIdentity__ctor, (ClaimsIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x020C1AE0, void, ClaimsIdentity__ctor_1, (ClaimsIdentity * __this, IEnumerable_1_System_Security_Claims_Claim_ * claims, MethodInfo * method));
DO_APP_FUNC(0x020C1B10, void, ClaimsIdentity__ctor_2, (ClaimsIdentity * __this, IIdentity * identity, IEnumerable_1_System_Security_Claims_Claim_ * claims, String * authenticationType, String * nameType, String * roleType, MethodInfo * method));
DO_APP_FUNC(0x020C1B40, void, ClaimsIdentity__ctor_3, (ClaimsIdentity * __this, IIdentity * identity, IEnumerable_1_System_Security_Claims_Claim_ * claims, String * authenticationType, String * nameType, String * roleType, bool checkAuthType, MethodInfo * method));
DO_APP_FUNC(0x020C2310, void, ClaimsIdentity__ctor_4, (ClaimsIdentity * __this, ClaimsIdentity * other, MethodInfo * method));
DO_APP_FUNC(0x020C2680, void, ClaimsIdentity__ctor_5, (ClaimsIdentity * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, String *, ClaimsIdentity_get_AuthenticationType, (ClaimsIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, ClaimsIdentity *, ClaimsIdentity_get_Actor, (ClaimsIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x020C2930, void, ClaimsIdentity_set_Actor, (ClaimsIdentity * __this, ClaimsIdentity * value, MethodInfo * method));
DO_APP_FUNC(0x020C2A30, IEnumerable_1_System_Security_Claims_Claim_ *, ClaimsIdentity_get_Claims, (ClaimsIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x020C2BC0, String *, ClaimsIdentity_get_Name, (ClaimsIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, ClaimsIdentity_get_NameClaimType, (ClaimsIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x020C2BF0, ClaimsIdentity *, ClaimsIdentity_Clone, (ClaimsIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x020C2E90, void, ClaimsIdentity_AddClaim, (ClaimsIdentity * __this, Claim * claim, MethodInfo * method));
DO_APP_FUNC(0x020C2FB0, void, ClaimsIdentity_SafeAddClaims, (ClaimsIdentity * __this, IEnumerable_1_System_Security_Claims_Claim_ * claims, MethodInfo * method));
DO_APP_FUNC(0x020C31E0, void, ClaimsIdentity_SafeAddClaim, (ClaimsIdentity * __this, Claim * claim, MethodInfo * method));
DO_APP_FUNC(0x020C32D0, Claim *, ClaimsIdentity_FindFirst, (ClaimsIdentity * __this, String * type, MethodInfo * method));
DO_APP_FUNC(0x020C35C0, void, ClaimsIdentity_OnSerializingMethod, (ClaimsIdentity * __this, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x020C3670, void, ClaimsIdentity_OnDeserializedMethod, (ClaimsIdentity * __this, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x020C3750, void, ClaimsIdentity_OnDeserializingMethod, (ClaimsIdentity * __this, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x020C3990, void, ClaimsIdentity_GetObjectData, (ClaimsIdentity * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x020C4000, void, ClaimsIdentity_DeserializeClaims, (ClaimsIdentity * __this, String * serializedClaims, MethodInfo * method));
DO_APP_FUNC(0x020C44C0, String *, ClaimsIdentity_SerializeClaims, (ClaimsIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x020C4810, bool, ClaimsIdentity_IsCircular, (ClaimsIdentity * __this, ClaimsIdentity * subject, MethodInfo * method));
DO_APP_FUNC(0x020C4860, void, ClaimsIdentity_Deserialize, (ClaimsIdentity * __this, SerializationInfo * info, StreamingContext context, bool useContext, MethodInfo * method));
DO_APP_FUNC(0x006389F0, void, ClaimsIdentity_get_Claims_d_51__ctor, (ClaimsIdentity_get_Claims_d_51 * __this, int32_t __1__state, MethodInfo * method));
DO_APP_FUNC(0x020C52A0, void, ClaimsIdentity_get_Claims_d_51_System_IDisposable_Dispose, (ClaimsIdentity_get_Claims_d_51 * __this, MethodInfo * method));
DO_APP_FUNC(0x020C52E0, bool, ClaimsIdentity_get_Claims_d_51_MoveNext, (ClaimsIdentity_get_Claims_d_51 * __this, MethodInfo * method));
DO_APP_FUNC(0x020C55B0, void, ClaimsIdentity_get_Claims_d_51___m__Finally1, (ClaimsIdentity_get_Claims_d_51 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Claim *, ClaimsIdentity_get_Claims_d_51_System_Collections_Generic_IEnumerator_System_Security_Claims_Claim__get_Current, (ClaimsIdentity_get_Claims_d_51 * __this, MethodInfo * method));
DO_APP_FUNC(0x020C5650, void, ClaimsIdentity_get_Claims_d_51_System_Collections_IEnumerator_Reset, (ClaimsIdentity_get_Claims_d_51 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Object *, ClaimsIdentity_get_Claims_d_51_System_Collections_IEnumerator_get_Current, (ClaimsIdentity_get_Claims_d_51 * __this, MethodInfo * method));
DO_APP_FUNC(0x020C56A0, IEnumerator_1_System_Security_Claims_Claim_ *, ClaimsIdentity_get_Claims_d_51_System_Collections_Generic_IEnumerable_System_Security_Claims_Claim__GetEnumerator, (ClaimsIdentity_get_Claims_d_51 * __this, MethodInfo * method));
DO_APP_FUNC(0x020C5890, IEnumerator *, ClaimsIdentity_get_Claims_d_51_System_Collections_IEnumerable_GetEnumerator, (ClaimsIdentity_get_Claims_d_51 * __this, MethodInfo * method));
DO_APP_FUNC(0x020C58A0, ClaimsIdentity *, ClaimsPrincipal_SelectPrimaryIdentity, (IEnumerable_1_System_Security_Claims_ClaimsIdentity_ * identities, MethodInfo * method));
DO_APP_FUNC(0x020C5B20, Func_1_System_Security_Claims_ClaimsPrincipal_ *, ClaimsPrincipal_get_ClaimsPrincipalSelector, (MethodInfo * method));
DO_APP_FUNC(0x020C5BC0, void, ClaimsPrincipal__ctor, (ClaimsPrincipal * __this, MethodInfo * method));
DO_APP_FUNC(0x020C5D20, void, ClaimsPrincipal__ctor_1, (ClaimsPrincipal * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x020C5EE0, void, ClaimsPrincipal_OnSerializingMethod, (ClaimsPrincipal * __this, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x020C5F80, void, ClaimsPrincipal_OnDeserializedMethod, (ClaimsPrincipal * __this, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x020C6030, void, ClaimsPrincipal_Deserialize, (ClaimsPrincipal * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x020C6230, void, ClaimsPrincipal_DeserializeIdentities, (ClaimsPrincipal * __this, String * identities, MethodInfo * method));
DO_APP_FUNC(0x020C6A70, String *, ClaimsPrincipal_SerializeIdentities, (ClaimsPrincipal * __this, MethodInfo * method));
DO_APP_FUNC(0x020C74B0, void, ClaimsPrincipal__cctor, (MethodInfo * method));
DO_APP_FUNC(0x020DBC10, HashAlgorithmName, HashAlgorithmName_get_MD5, (MethodInfo * method));
DO_APP_FUNC(0x020DBC90, HashAlgorithmName, HashAlgorithmName_get_SHA1, (MethodInfo * method));
DO_APP_FUNC(0x020DBD10, HashAlgorithmName, HashAlgorithmName_get_SHA256, (MethodInfo * method));
DO_APP_FUNC(0x020DBD90, HashAlgorithmName, HashAlgorithmName_get_SHA384, (MethodInfo * method));
DO_APP_FUNC(0x020DBE10, HashAlgorithmName, HashAlgorithmName_get_SHA512, (MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, HashAlgorithmName__ctor, (HashAlgorithmName__Boxed * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x00107C00, String *, HashAlgorithmName_get_Name, (HashAlgorithmName__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DC210, String *, HashAlgorithmName_ToString, (HashAlgorithmName__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DC2A0, bool, HashAlgorithmName_Equals, (HashAlgorithmName__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x001DC3A0, bool, HashAlgorithmName_Equals_1, (HashAlgorithmName__Boxed * __this, HashAlgorithmName other, MethodInfo * method));
DO_APP_FUNC(0x001DC3D0, int32_t, HashAlgorithmName_GetHashCode, (HashAlgorithmName__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01E27CD0, bool, HashAlgorithmName_op_Equality, (HashAlgorithmName left, HashAlgorithmName right, MethodInfo * method));
DO_APP_FUNC(0x01E280E0, bool, HashAlgorithmName_op_Inequality, (HashAlgorithmName left, HashAlgorithmName right, MethodInfo * method));
DO_APP_FUNC(0x028EA3A0, RSAEncryptionPadding *, RSAEncryptionPadding_get_Pkcs1, (MethodInfo * method));
DO_APP_FUNC(0x028EA440, RSAEncryptionPadding *, RSAEncryptionPadding_get_OaepSHA1, (MethodInfo * method));
DO_APP_FUNC(0x028EA4E0, RSAEncryptionPadding *, RSAEncryptionPadding_get_OaepSHA256, (MethodInfo * method));
DO_APP_FUNC(0x028EA580, RSAEncryptionPadding *, RSAEncryptionPadding_get_OaepSHA384, (MethodInfo * method));
DO_APP_FUNC(0x028EA620, RSAEncryptionPadding *, RSAEncryptionPadding_get_OaepSHA512, (MethodInfo * method));
DO_APP_FUNC(0x0091DD30, void, RSAEncryptionPadding__ctor, (RSAEncryptionPadding * __this, RSAEncryptionPaddingMode__Enum mode, HashAlgorithmName oaepHashAlgorithm, MethodInfo * method));
DO_APP_FUNC(0x028EA6C0, RSAEncryptionPadding *, RSAEncryptionPadding_CreateOaep, (HashAlgorithmName hashAlgorithm, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, RSAEncryptionPaddingMode__Enum, RSAEncryptionPadding_get_Mode, (RSAEncryptionPadding * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, HashAlgorithmName, RSAEncryptionPadding_get_OaepHashAlgorithm, (RSAEncryptionPadding * __this, MethodInfo * method));
DO_APP_FUNC(0x028EA860, int32_t, RSAEncryptionPadding_GetHashCode, (RSAEncryptionPadding * __this, MethodInfo * method));
DO_APP_FUNC(0x022916C0, int32_t, RSAEncryptionPadding_CombineHashCodes, (int32_t h1, int32_t h2, MethodInfo * method));
DO_APP_FUNC(0x028EA920, bool, RSAEncryptionPadding_Equals, (RSAEncryptionPadding * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x028EA9D0, bool, RSAEncryptionPadding_Equals_1, (RSAEncryptionPadding * __this, RSAEncryptionPadding * other, MethodInfo * method));
DO_APP_FUNC(0x028EAB60, bool, RSAEncryptionPadding_op_Equality, (RSAEncryptionPadding * left, RSAEncryptionPadding * right, MethodInfo * method));
DO_APP_FUNC(0x028EAB80, bool, RSAEncryptionPadding_op_Inequality, (RSAEncryptionPadding * left, RSAEncryptionPadding * right, MethodInfo * method));
DO_APP_FUNC(0x028EAC50, String *, RSAEncryptionPadding_ToString, (RSAEncryptionPadding * __this, MethodInfo * method));
DO_APP_FUNC(0x028EAD20, void, RSAEncryptionPadding__cctor, (MethodInfo * method));
DO_APP_FUNC(0x028EAF00, void, RSAEncryptionPadding__ctor_1, (RSAEncryptionPadding * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, RSASignaturePadding__ctor, (RSASignaturePadding * __this, RSASignaturePaddingMode__Enum mode, MethodInfo * method));
DO_APP_FUNC(0x028EDC00, RSASignaturePadding *, RSASignaturePadding_get_Pkcs1, (MethodInfo * method));
DO_APP_FUNC(0x028EDCA0, RSASignaturePadding *, RSASignaturePadding_get_Pss, (MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, RSASignaturePaddingMode__Enum, RSASignaturePadding_get_Mode, (RSASignaturePadding * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, RSASignaturePadding_GetHashCode, (RSASignaturePadding * __this, MethodInfo * method));
DO_APP_FUNC(0x028EDD40, bool, RSASignaturePadding_Equals, (RSASignaturePadding * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x028EDDF0, bool, RSASignaturePadding_Equals_1, (RSASignaturePadding * __this, RSASignaturePadding * other, MethodInfo * method));
DO_APP_FUNC(0x028EDEC0, bool, RSASignaturePadding_op_Equality, (RSASignaturePadding * left, RSASignaturePadding * right, MethodInfo * method));
DO_APP_FUNC(0x028EDEE0, bool, RSASignaturePadding_op_Inequality, (RSASignaturePadding * left, RSASignaturePadding * right, MethodInfo * method));
DO_APP_FUNC(0x028EDFB0, String *, RSASignaturePadding_ToString, (RSASignaturePadding * __this, MethodInfo * method));
DO_APP_FUNC(0x028EE060, void, RSASignaturePadding__cctor, (MethodInfo * method));
DO_APP_FUNC(0x028EE280, void, RSASignaturePadding__ctor_1, (RSASignaturePadding * __this, MethodInfo * method));
DO_APP_FUNC(0x020C8120, void, Aes__ctor, (Aes * __this, MethodInfo * method));
DO_APP_FUNC(0x020C8210, Aes *, Aes_Create, (MethodInfo * method));
DO_APP_FUNC(0x020C8390, Aes *, Aes_Create_1, (String * algorithmName, MethodInfo * method));
DO_APP_FUNC(0x020C8490, void, Aes__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AsymmetricAlgorithm__ctor, (AsymmetricAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x020C87A0, void, AsymmetricAlgorithm_Dispose, (AsymmetricAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x020C87B0, void, AsymmetricAlgorithm_Clear, (AsymmetricAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AsymmetricAlgorithm_Dispose_1, (AsymmetricAlgorithm * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, AsymmetricAlgorithm_get_KeySize, (AsymmetricAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x020C8860, void, AsymmetricAlgorithm_set_KeySize, (AsymmetricAlgorithm * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x020C89E0, KeySizes__Array *, AsymmetricAlgorithm_get_LegalKeySizes, (AsymmetricAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x020C8B20, String *, AsymmetricAlgorithm_get_SignatureAlgorithm, (AsymmetricAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x020C8B70, String *, AsymmetricAlgorithm_get_KeyExchangeAlgorithm, (AsymmetricAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x020C8BC0, AsymmetricAlgorithm *, AsymmetricAlgorithm_Create, (MethodInfo * method));
DO_APP_FUNC(0x020C8D10, AsymmetricAlgorithm *, AsymmetricAlgorithm_Create_1, (String * algName, MethodInfo * method));
DO_APP_FUNC(0x020C8DF0, void, AsymmetricAlgorithm_FromXmlString, (AsymmetricAlgorithm * __this, String * xmlString, MethodInfo * method));
DO_APP_FUNC(0x020C8E40, String *, AsymmetricAlgorithm_ToXmlString, (AsymmetricAlgorithm * __this, bool includePrivateParameters, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AsymmetricKeyExchangeDeformatter__ctor, (AsymmetricKeyExchangeDeformatter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AsymmetricKeyExchangeFormatter__ctor, (AsymmetricKeyExchangeFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AsymmetricSignatureDeformatter__ctor, (AsymmetricSignatureDeformatter * __this, MethodInfo * method));
DO_APP_FUNC(0x020C8E90, bool, AsymmetricSignatureDeformatter_VerifySignature, (AsymmetricSignatureDeformatter * __this, HashAlgorithm * hash, Byte__Array * rgbSignature, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AsymmetricSignatureFormatter__ctor, (AsymmetricSignatureFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x020C8FB0, Byte__Array *, AsymmetricSignatureFormatter_CreateSignature, (AsymmetricSignatureFormatter * __this, HashAlgorithm * hash, MethodInfo * method));
DO_APP_FUNC(0x00420230, int32_t, ToBase64Transform_get_InputBlockSize, (ToBase64Transform * __this, MethodInfo * method));
DO_APP_FUNC(0x00910BD0, int32_t, ToBase64Transform_get_OutputBlockSize, (ToBase64Transform * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, ToBase64Transform_get_CanTransformMultipleBlocks, (ToBase64Transform * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, ToBase64Transform_get_CanReuseTransform, (ToBase64Transform * __this, MethodInfo * method));
DO_APP_FUNC(0x01E11A10, int32_t, ToBase64Transform_TransformBlock, (ToBase64Transform * __this, Byte__Array * inputBuffer, int32_t inputOffset, int32_t inputCount, Byte__Array * outputBuffer, int32_t outputOffset, MethodInfo * method));
DO_APP_FUNC(0x01E11CC0, Byte__Array *, ToBase64Transform_TransformFinalBlock, (ToBase64Transform * __this, Byte__Array * inputBuffer, int32_t inputOffset, int32_t inputCount, MethodInfo * method));
DO_APP_FUNC(0x01E11F30, void, ToBase64Transform_Dispose, (ToBase64Transform * __this, MethodInfo * method));
DO_APP_FUNC(0x01E11F30, void, ToBase64Transform_Clear, (ToBase64Transform * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ToBase64Transform_Dispose_1, (ToBase64Transform * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01E11FE0, void, ToBase64Transform_Finalize, (ToBase64Transform * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ToBase64Transform__ctor, (ToBase64Transform * __this, MethodInfo * method));
DO_APP_FUNC(0x020D7E70, void, FromBase64Transform__ctor, (FromBase64Transform * __this, MethodInfo * method));
DO_APP_FUNC(0x020D7F10, void, FromBase64Transform__ctor_1, (FromBase64Transform * __this, FromBase64TransformMode__Enum whitespaces, MethodInfo * method));
DO_APP_FUNC(0x00417920, int32_t, FromBase64Transform_get_InputBlockSize, (FromBase64Transform * __this, MethodInfo * method));
DO_APP_FUNC(0x00420230, int32_t, FromBase64Transform_get_OutputBlockSize, (FromBase64Transform * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, FromBase64Transform_get_CanTransformMultipleBlocks, (FromBase64Transform * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, FromBase64Transform_get_CanReuseTransform, (FromBase64Transform * __this, MethodInfo * method));
DO_APP_FUNC(0x020D7FB0, int32_t, FromBase64Transform_TransformBlock, (FromBase64Transform * __this, Byte__Array * inputBuffer, int32_t inputOffset, int32_t inputCount, Byte__Array * outputBuffer, int32_t outputOffset, MethodInfo * method));
DO_APP_FUNC(0x020D8380, Byte__Array *, FromBase64Transform_TransformFinalBlock, (FromBase64Transform * __this, Byte__Array * inputBuffer, int32_t inputOffset, int32_t inputCount, MethodInfo * method));
DO_APP_FUNC(0x020D8730, Byte__Array *, FromBase64Transform_DiscardWhiteSpaces, (FromBase64Transform * __this, Byte__Array * inputBuffer, int32_t inputOffset, int32_t inputCount, MethodInfo * method));
DO_APP_FUNC(0x020D8950, void, FromBase64Transform_Dispose, (FromBase64Transform * __this, MethodInfo * method));
DO_APP_FUNC(0x008001B0, void, FromBase64Transform_Reset, (FromBase64Transform * __this, MethodInfo * method));
DO_APP_FUNC(0x020D8950, void, FromBase64Transform_Clear, (FromBase64Transform * __this, MethodInfo * method));
DO_APP_FUNC(0x020D8A00, void, FromBase64Transform_Dispose_1, (FromBase64Transform * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x020D8A40, void, FromBase64Transform_Finalize, (FromBase64Transform * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, KeySizes_get_MinSize, (KeySizes * __this, MethodInfo * method));
DO_APP_FUNC(0x00CC59E0, int32_t, KeySizes_get_MaxSize, (KeySizes * __this, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, KeySizes_get_SkipSize, (KeySizes * __this, MethodInfo * method));
DO_APP_FUNC(0x0133CEF0, void, KeySizes__ctor, (KeySizes * __this, int32_t minSize, int32_t maxSize, int32_t skipSize, MethodInfo * method));
DO_APP_FUNC(0x020DBE90, bool, KeySizes_IsLegal, (KeySizes * __this, int32_t keySize, MethodInfo * method));
DO_APP_FUNC(0x020DBEC0, bool, KeySizes_IsLegalKeySize, (KeySizes__Array * legalKeys, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x020CFEC0, void, CryptographicException__ctor, (CryptographicException * __this, MethodInfo * method));
DO_APP_FUNC(0x020CFF50, void, CryptographicException__ctor_1, (CryptographicException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x020CFF70, void, CryptographicException__ctor_2, (CryptographicException * __this, String * format, String * insert, MethodInfo * method));
DO_APP_FUNC(0x020D00B0, void, CryptographicException__ctor_3, (CryptographicException * __this, String * message, Exception * inner, MethodInfo * method));
DO_APP_FUNC(0x020D00D0, void, CryptographicException__ctor_4, (CryptographicException * __this, int32_t hr, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, CryptographicException__ctor_5, (CryptographicException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x020D0120, void, CryptographicException_ThrowCryptographicException, (int32_t hr, MethodInfo * method));
DO_APP_FUNC(0x020D0180, void, CryptographicUnexpectedOperationException__ctor, (CryptographicUnexpectedOperationException * __this, MethodInfo * method));
DO_APP_FUNC(0x020D0210, void, CryptographicUnexpectedOperationException__ctor_1, (CryptographicUnexpectedOperationException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x020D0230, void, CryptographicUnexpectedOperationException__ctor_2, (CryptographicUnexpectedOperationException * __this, String * format, String * insert, MethodInfo * method));
DO_APP_FUNC(0x020D0370, void, CryptographicUnexpectedOperationException__ctor_3, (CryptographicUnexpectedOperationException * __this, String * message, Exception * inner, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, CryptographicUnexpectedOperationException__ctor_4, (CryptographicUnexpectedOperationException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x005C3FF0, CspProviderFlags__Enum, CspParameters_get_Flags, (CspParameters * __this, MethodInfo * method));
DO_APP_FUNC(0x020D0460, void, CspParameters_set_Flags, (CspParameters * __this, CspProviderFlags__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FB990, CryptoKeySecurity *, CspParameters_get_CryptoKeySecurity, (CspParameters * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9A0, void, CspParameters_set_CryptoKeySecurity, (CspParameters * __this, CryptoKeySecurity * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, SecureString *, CspParameters_get_KeyPassword, (CspParameters * __this, MethodInfo * method));
DO_APP_FUNC(0x020D0580, void, CspParameters_set_KeyPassword, (CspParameters * __this, SecureString * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, void *, CspParameters_get_ParentWindowHandle, (CspParameters * __this, MethodInfo * method));
DO_APP_FUNC(0x020D0630, void, CspParameters_set_ParentWindowHandle, (CspParameters * __this, void * value, MethodInfo * method));
DO_APP_FUNC(0x020D0640, void, CspParameters__ctor, (CspParameters * __this, MethodInfo * method));
DO_APP_FUNC(0x020D0670, void, CspParameters__ctor_1, (CspParameters * __this, int32_t dwTypeIn, MethodInfo * method));
DO_APP_FUNC(0x020D0690, void, CspParameters__ctor_2, (CspParameters * __this, int32_t dwTypeIn, String * strProviderNameIn, MethodInfo * method));
DO_APP_FUNC(0x020D06B0, void, CspParameters__ctor_3, (CspParameters * __this, int32_t dwTypeIn, String * strProviderNameIn, String * strContainerNameIn, MethodInfo * method));
DO_APP_FUNC(0x020D06D0, void, CspParameters__ctor_4, (CspParameters * __this, int32_t providerType, String * providerName, String * keyContainerName, CryptoKeySecurity * cryptoKeySecurity, SecureString * keyPassword, MethodInfo * method));
DO_APP_FUNC(0x020D0710, void, CspParameters__ctor_5, (CspParameters * __this, int32_t providerType, String * providerName, String * keyContainerName, CryptoKeySecurity * cryptoKeySecurity, void * parentWindowHandle, MethodInfo * method));
DO_APP_FUNC(0x020D0750, void, CspParameters__ctor_6, (CspParameters * __this, int32_t providerType, String * providerName, String * keyContainerName, CspProviderFlags__Enum flags, MethodInfo * method));
DO_APP_FUNC(0x020D0770, void, CspParameters__ctor_7, (CspParameters * __this, CspParameters * parameters, MethodInfo * method));
DO_APP_FUNC(0x020CCDA0, void, CryptoStream__ctor, (CryptoStream * __this, Stream * stream, ICryptoTransform * transform, CryptoStreamMode__Enum mode, MethodInfo * method));
DO_APP_FUNC(0x004F2320, bool, CryptoStream_get_CanRead, (CryptoStream * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, CryptoStream_get_CanSeek, (CryptoStream * __this, MethodInfo * method));
DO_APP_FUNC(0x020CD0A0, bool, CryptoStream_get_CanWrite, (CryptoStream * __this, MethodInfo * method));
DO_APP_FUNC(0x020CD0B0, int64_t, CryptoStream_get_Length, (CryptoStream * __this, MethodInfo * method));
DO_APP_FUNC(0x020CD120, int64_t, CryptoStream_get_Position, (CryptoStream * __this, MethodInfo * method));
DO_APP_FUNC(0x020CD190, void, CryptoStream_set_Position, (CryptoStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x00CA4070, bool, CryptoStream_get_HasFlushedFinalBlock, (CryptoStream * __this, MethodInfo * method));
DO_APP_FUNC(0x020CD200, void, CryptoStream_FlushFinalBlock, (CryptoStream * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CryptoStream_Flush, (CryptoStream * __this, MethodInfo * method));
DO_APP_FUNC(0x020CD430, Task *, CryptoStream_FlushAsync, (CryptoStream * __this, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x020CD570, int64_t, CryptoStream_Seek, (CryptoStream * __this, int64_t offset, SeekOrigin__Enum origin, MethodInfo * method));
DO_APP_FUNC(0x020CD5E0, void, CryptoStream_SetLength, (CryptoStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x020CD650, int32_t, CryptoStream_Read, (CryptoStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x020CDBD0, Task_1_System_Int32_ *, CryptoStream_ReadAsync, (CryptoStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x020CDF80, Task_1_System_Int32_ *, CryptoStream_ReadAsyncInternal, (CryptoStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x020CE0D0, void, CryptoStream_Write, (CryptoStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x020CE4E0, Task *, CryptoStream_WriteAsync, (CryptoStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x020CE870, Task *, CryptoStream_WriteAsyncInternal, (CryptoStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x01E113B0, void, CryptoStream_Clear, (CryptoStream * __this, MethodInfo * method));
DO_APP_FUNC(0x020CE9B0, void, CryptoStream_Dispose, (CryptoStream * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x020CEB00, void, CryptoStream_InitializeBuffer, (CryptoStream * __this, MethodInfo * method));
DO_APP_FUNC(0x0010E100, CryptoStream_HopToThreadPoolAwaitable, CryptoStream_HopToThreadPoolAwaitable_GetAwaiter, (CryptoStream_HopToThreadPoolAwaitable__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0018F210, bool, CryptoStream_HopToThreadPoolAwaitable_get_IsCompleted, (CryptoStream_HopToThreadPoolAwaitable__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DC200, void, CryptoStream_HopToThreadPoolAwaitable_OnCompleted, (CryptoStream_HopToThreadPoolAwaitable__Boxed * __this, Action * continuation, MethodInfo * method));
DO_APP_FUNC(0x00002890, void, CryptoStream_HopToThreadPoolAwaitable_GetResult, (CryptoStream_HopToThreadPoolAwaitable__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DC150, void, CryptoStream_ReadAsyncInternal_d_34_MoveNext, (CryptoStream_ReadAsyncInternal_d_34__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DC160, void, CryptoStream_ReadAsyncInternal_d_34_SetStateMachine, (CryptoStream_ReadAsyncInternal_d_34__Boxed * __this, IAsyncStateMachine * stateMachine, MethodInfo * method));
DO_APP_FUNC(0x001DC1F0, void, CryptoStream_WriteAsyncInternal_d_37_MoveNext, (CryptoStream_WriteAsyncInternal_d_37__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0011DCA0, void, CryptoStream_WriteAsyncInternal_d_37_SetStateMachine, (CryptoStream_WriteAsyncInternal_d_37__Boxed * __this, IAsyncStateMachine * stateMachine, MethodInfo * method));
DO_APP_FUNC(0x020D7DC0, void, DeriveBytes_Dispose, (DeriveBytes * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DeriveBytes_Dispose_1, (DeriveBytes * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DeriveBytes__ctor, (DeriveBytes * __this, MethodInfo * method));
DO_APP_FUNC(0x020D07E0, void, DES__ctor, (DES * __this, MethodInfo * method));
DO_APP_FUNC(0x020D08C0, Byte__Array *, DES_get_Key, (DES * __this, MethodInfo * method));
DO_APP_FUNC(0x020D0A90, void, DES_set_Key, (DES * __this, Byte__Array * value, MethodInfo * method));
DO_APP_FUNC(0x020D0D30, DES *, DES_Create, (MethodInfo * method));
DO_APP_FUNC(0x020D0E70, DES *, DES_Create_1, (String * algName, MethodInfo * method));
DO_APP_FUNC(0x020D0F50, bool, DES_IsWeakKey, (Byte__Array * rgbKey, MethodInfo * method));
DO_APP_FUNC(0x020D10E0, bool, DES_IsSemiWeakKey, (Byte__Array * rgbKey, MethodInfo * method));
DO_APP_FUNC(0x020D12F0, bool, DES_IsLegalKeySize, (Byte__Array * rgbKey, MethodInfo * method));
DO_APP_FUNC(0x020D1310, uint64_t, DES_QuadWordFromBigEndian, (Byte__Array * block, MethodInfo * method));
DO_APP_FUNC(0x020D1450, void, DES__cctor, (MethodInfo * method));
DO_APP_FUNC(0x020D1750, void, DESCryptoServiceProvider__ctor, (DESCryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x020D18E0, ICryptoTransform *, DESCryptoServiceProvider_CreateEncryptor, (DESCryptoServiceProvider * __this, Byte__Array * rgbKey, Byte__Array * rgbIV, MethodInfo * method));
DO_APP_FUNC(0x020D1B40, ICryptoTransform *, DESCryptoServiceProvider_CreateDecryptor, (DESCryptoServiceProvider * __this, Byte__Array * rgbKey, Byte__Array * rgbIV, MethodInfo * method));
DO_APP_FUNC(0x020D1DA0, void, DESCryptoServiceProvider_GenerateKey, (DESCryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x020D1F20, void, DESCryptoServiceProvider_GenerateIV, (DESCryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DSA__ctor, (DSA * __this, MethodInfo * method));
DO_APP_FUNC(0x020D3E80, DSA *, DSA_Create, (MethodInfo * method));
DO_APP_FUNC(0x020D3FD0, DSA *, DSA_Create_1, (String * algName, MethodInfo * method));
DO_APP_FUNC(0x020D40B0, Byte__Array *, DSA_HashData, (DSA * __this, Byte__Array * data, int32_t offset, int32_t count, HashAlgorithmName hashAlgorithm, MethodInfo * method));
DO_APP_FUNC(0x020D40F0, Byte__Array *, DSA_HashData_1, (DSA * __this, Stream * data, HashAlgorithmName hashAlgorithm, MethodInfo * method));
DO_APP_FUNC(0x020D4130, Byte__Array *, DSA_SignData, (DSA * __this, Byte__Array * data, HashAlgorithmName hashAlgorithm, MethodInfo * method));
DO_APP_FUNC(0x020D4220, Byte__Array *, DSA_SignData_1, (DSA * __this, Byte__Array * data, int32_t offset, int32_t count, HashAlgorithmName hashAlgorithm, MethodInfo * method));
DO_APP_FUNC(0x020D43E0, Byte__Array *, DSA_SignData_2, (DSA * __this, Stream * data, HashAlgorithmName hashAlgorithm, MethodInfo * method));
DO_APP_FUNC(0x020D44F0, bool, DSA_VerifyData, (DSA * __this, Byte__Array * data, Byte__Array * signature, HashAlgorithmName hashAlgorithm, MethodInfo * method));
DO_APP_FUNC(0x020D45F0, bool, DSA_VerifyData_1, (DSA * __this, Byte__Array * data, int32_t offset, int32_t count, Byte__Array * signature, HashAlgorithmName hashAlgorithm, MethodInfo * method));
DO_APP_FUNC(0x020D4800, bool, DSA_VerifyData_2, (DSA * __this, Stream * data, Byte__Array * signature, HashAlgorithmName hashAlgorithm, MethodInfo * method));
DO_APP_FUNC(0x020D4970, void, DSA_FromXmlString, (DSA * __this, String * xmlString, MethodInfo * method));
DO_APP_FUNC(0x020D5350, String *, DSA_ToXmlString, (DSA * __this, bool includePrivateParameters, MethodInfo * method));
DO_APP_FUNC(0x020D5790, Exception *, DSA_DerivedClassMustOverride, (MethodInfo * method));
DO_APP_FUNC(0x020D58F0, Exception *, DSA_HashAlgorithmNameNullOrEmpty, (MethodInfo * method));
DO_APP_FUNC(0x020D72C0, void, DSASignatureDeformatter__ctor, (DSASignatureDeformatter * __this, MethodInfo * method));
DO_APP_FUNC(0x020D7360, void, DSASignatureDeformatter__ctor_1, (DSASignatureDeformatter * __this, AsymmetricAlgorithm * key, MethodInfo * method));
DO_APP_FUNC(0x020D7470, void, DSASignatureDeformatter_SetKey, (DSASignatureDeformatter * __this, AsymmetricAlgorithm * key, MethodInfo * method));
DO_APP_FUNC(0x020D7580, void, DSASignatureDeformatter_SetHashAlgorithm, (DSASignatureDeformatter * __this, String * strName, MethodInfo * method));
DO_APP_FUNC(0x020D7690, bool, DSASignatureDeformatter_VerifySignature, (DSASignatureDeformatter * __this, Byte__Array * rgbHash, Byte__Array * rgbSignature, MethodInfo * method));
DO_APP_FUNC(0x020D7890, void, DSASignatureFormatter__ctor, (DSASignatureFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x020D7930, void, DSASignatureFormatter__ctor_1, (DSASignatureFormatter * __this, AsymmetricAlgorithm * key, MethodInfo * method));
DO_APP_FUNC(0x020D7A40, void, DSASignatureFormatter_SetKey, (DSASignatureFormatter * __this, AsymmetricAlgorithm * key, MethodInfo * method));
DO_APP_FUNC(0x020D7B50, void, DSASignatureFormatter_SetHashAlgorithm, (DSASignatureFormatter * __this, String * strName, MethodInfo * method));
DO_APP_FUNC(0x020D7C60, Byte__Array *, DSASignatureFormatter_CreateSignature, (DSASignatureFormatter * __this, Byte__Array * rgbHash, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, HashAlgorithm__ctor, (HashAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, HashAlgorithm_get_HashSize, (HashAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x020DAAD0, Byte__Array *, HashAlgorithm_get_Hash, (HashAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x020DAC90, HashAlgorithm *, HashAlgorithm_Create, (MethodInfo * method));
DO_APP_FUNC(0x020DADD0, HashAlgorithm *, HashAlgorithm_Create_1, (String * hashName, MethodInfo * method));
DO_APP_FUNC(0x020DAEB0, Byte__Array *, HashAlgorithm_ComputeHash, (HashAlgorithm * __this, Stream * inputStream, MethodInfo * method));
DO_APP_FUNC(0x020DB0D0, Byte__Array *, HashAlgorithm_ComputeHash_1, (HashAlgorithm * __this, Byte__Array * buffer, MethodInfo * method));
DO_APP_FUNC(0x020DB2E0, Byte__Array *, HashAlgorithm_ComputeHash_2, (HashAlgorithm * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x00417920, int32_t, HashAlgorithm_get_InputBlockSize, (HashAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x00417920, int32_t, HashAlgorithm_get_OutputBlockSize, (HashAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, HashAlgorithm_get_CanTransformMultipleBlocks, (HashAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, HashAlgorithm_get_CanReuseTransform, (HashAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x020DB5B0, int32_t, HashAlgorithm_TransformBlock, (HashAlgorithm * __this, Byte__Array * inputBuffer, int32_t inputOffset, int32_t inputCount, Byte__Array * outputBuffer, int32_t outputOffset, MethodInfo * method));
DO_APP_FUNC(0x020DB800, Byte__Array *, HashAlgorithm_TransformFinalBlock, (HashAlgorithm * __this, Byte__Array * inputBuffer, int32_t inputOffset, int32_t inputCount, MethodInfo * method));
DO_APP_FUNC(0x020DBA90, void, HashAlgorithm_Dispose, (HashAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x020DBB40, void, HashAlgorithm_Clear, (HashAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x020DBBD0, void, HashAlgorithm_Dispose_1, (HashAlgorithm * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x00654950, int32_t, HMAC_get_BlockSizeValue, (HMAC * __this, MethodInfo * method));
DO_APP_FUNC(0x00654960, void, HMAC_set_BlockSizeValue, (HMAC * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x020D8AC0, void, HMAC_UpdateIOPadBuffers, (HMAC * __this, MethodInfo * method));
DO_APP_FUNC(0x020D8CE0, void, HMAC_InitializeKey, (HMAC * __this, Byte__Array * key, MethodInfo * method));
DO_APP_FUNC(0x020D8E70, Byte__Array *, HMAC_get_Key, (HMAC * __this, MethodInfo * method));
DO_APP_FUNC(0x020D8FB0, void, HMAC_set_Key, (HMAC * __this, Byte__Array * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, String *, HMAC_get_HashName, (HMAC * __this, MethodInfo * method));
DO_APP_FUNC(0x020D9080, void, HMAC_set_HashName, (HMAC * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x020D9170, HMAC *, HMAC_Create, (MethodInfo * method));
DO_APP_FUNC(0x020D92B0, HMAC *, HMAC_Create_1, (String * algorithmName, MethodInfo * method));
DO_APP_FUNC(0x020D9390, void, HMAC_Initialize, (HMAC * __this, MethodInfo * method));
DO_APP_FUNC(0x020D93F0, void, HMAC_HashCore, (HMAC * __this, Byte__Array * rgb, int32_t ib, int32_t cb, MethodInfo * method));
DO_APP_FUNC(0x020D94A0, Byte__Array *, HMAC_HashFinal, (HMAC * __this, MethodInfo * method));
DO_APP_FUNC(0x020D96A0, void, HMAC_Dispose, (HMAC * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x020D97D0, HashAlgorithm *, HMAC_GetHashAlgorithmWithFipsFallback, (Func_1_System_Security_Cryptography_HashAlgorithm_ * createStandardHashAlgorithmCallback, Func_1_System_Security_Cryptography_HashAlgorithm_ * createFipsHashAlgorithmCallback, MethodInfo * method));
DO_APP_FUNC(0x020D9870, void, HMAC__ctor, (HMAC * __this, MethodInfo * method));
DO_APP_FUNC(0x020D9880, void, HMACMD5__ctor, (HMACMD5 * __this, MethodInfo * method));
DO_APP_FUNC(0x020D9930, void, HMACMD5__ctor_1, (HMACMD5 * __this, Byte__Array * key, MethodInfo * method));
DO_APP_FUNC(0x020D9B70, void, HMACRIPEMD160__ctor, (HMACRIPEMD160 * __this, MethodInfo * method));
DO_APP_FUNC(0x020D9C20, void, HMACRIPEMD160__ctor_1, (HMACRIPEMD160 * __this, Byte__Array * key, MethodInfo * method));
DO_APP_FUNC(0x020D9E60, void, HMACSHA1__ctor, (HMACSHA1 * __this, MethodInfo * method));
DO_APP_FUNC(0x020D9F10, void, HMACSHA1__ctor_1, (HMACSHA1 * __this, Byte__Array * key, MethodInfo * method));
DO_APP_FUNC(0x020D9F20, void, HMACSHA1__ctor_2, (HMACSHA1 * __this, Byte__Array * key, bool useManagedSha1, MethodInfo * method));
DO_APP_FUNC(0x020DA160, void, HMACSHA256__ctor, (HMACSHA256 * __this, MethodInfo * method));
DO_APP_FUNC(0x020DA210, void, HMACSHA256__ctor_1, (HMACSHA256 * __this, Byte__Array * key, MethodInfo * method));
DO_APP_FUNC(0x020DA450, void, HMACSHA384__ctor, (HMACSHA384 * __this, MethodInfo * method));
DO_APP_FUNC(0x020DA500, void, HMACSHA384__ctor_1, (HMACSHA384 * __this, Byte__Array * key, MethodInfo * method));
DO_APP_FUNC(0x020DA770, int32_t, HMACSHA384_get_BlockSize, (HMACSHA384 * __this, MethodInfo * method));
DO_APP_FUNC(0x0051DB40, bool, HMACSHA384_get_ProduceLegacyHmacValues, (HMACSHA384 * __this, MethodInfo * method));
DO_APP_FUNC(0x020DA790, void, HMACSHA384_set_ProduceLegacyHmacValues, (HMACSHA384 * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x020DA7B0, void, HMACSHA512__ctor, (HMACSHA512 * __this, MethodInfo * method));
DO_APP_FUNC(0x020DA860, void, HMACSHA512__ctor_1, (HMACSHA512 * __this, Byte__Array * key, MethodInfo * method));
DO_APP_FUNC(0x020DA770, int32_t, HMACSHA512_get_BlockSize, (HMACSHA512 * __this, MethodInfo * method));
DO_APP_FUNC(0x0051DB40, bool, HMACSHA512_get_ProduceLegacyHmacValues, (HMACSHA512 * __this, MethodInfo * method));
DO_APP_FUNC(0x020DA790, void, HMACSHA512_set_ProduceLegacyHmacValues, (HMACSHA512 * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, KeyedHashAlgorithm__ctor, (KeyedHashAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x020DBF60, void, KeyedHashAlgorithm_Dispose, (KeyedHashAlgorithm * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x020DBFC0, Byte__Array *, KeyedHashAlgorithm_get_Key, (KeyedHashAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x020DC100, void, KeyedHashAlgorithm_set_Key, (KeyedHashAlgorithm * __this, Byte__Array * value, MethodInfo * method));
DO_APP_FUNC(0x020DC2A0, KeyedHashAlgorithm *, KeyedHashAlgorithm_Create, (MethodInfo * method));
DO_APP_FUNC(0x020DC3E0, KeyedHashAlgorithm *, KeyedHashAlgorithm_Create_1, (String * algName, MethodInfo * method));
DO_APP_FUNC(0x020DC4C0, void, MACTripleDES__ctor, (MACTripleDES * __this, MethodInfo * method));
DO_APP_FUNC(0x020DC680, void, MACTripleDES__ctor_1, (MACTripleDES * __this, Byte__Array * rgbKey, MethodInfo * method));
DO_APP_FUNC(0x020DC720, void, MACTripleDES__ctor_2, (MACTripleDES * __this, String * strTripleDES, Byte__Array * rgbKey, MethodInfo * method));
DO_APP_FUNC(0x00650B90, void, MACTripleDES_Initialize, (MACTripleDES * __this, MethodInfo * method));
DO_APP_FUNC(0x020DCA60, PaddingMode__Enum, MACTripleDES_get_Padding, (MACTripleDES * __this, MethodInfo * method));
DO_APP_FUNC(0x020DCA90, void, MACTripleDES_set_Padding, (MACTripleDES * __this, PaddingMode__Enum value, MethodInfo * method));
DO_APP_FUNC(0x020DCB80, void, MACTripleDES_HashCore, (MACTripleDES * __this, Byte__Array * rgbData, int32_t ibStart, int32_t cbSize, MethodInfo * method));
DO_APP_FUNC(0x020DCEA0, Byte__Array *, MACTripleDES_HashFinal, (MACTripleDES * __this, MethodInfo * method));
DO_APP_FUNC(0x020DD2C0, void, MACTripleDES_Dispose, (MACTripleDES * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01E112F0, void, TailStream__ctor, (TailStream * __this, int32_t bufferSize, MethodInfo * method));
DO_APP_FUNC(0x01E113B0, void, TailStream_Clear, (TailStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E113D0, void, TailStream_Dispose, (TailStream * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01E11470, Byte__Array *, TailStream_get_Buffer, (TailStream * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, TailStream_get_CanRead, (TailStream * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, TailStream_get_CanSeek, (TailStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D60150, bool, TailStream_get_CanWrite, (TailStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E115B0, int64_t, TailStream_get_Length, (TailStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E11620, int64_t, TailStream_get_Position, (TailStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E11690, void, TailStream_set_Position, (TailStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TailStream_Flush, (TailStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E11700, int64_t, TailStream_Seek, (TailStream * __this, int64_t offset, SeekOrigin__Enum origin, MethodInfo * method));
DO_APP_FUNC(0x01E11770, void, TailStream_SetLength, (TailStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01E117E0, int32_t, TailStream_Read, (TailStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E11850, void, TailStream_Write, (TailStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MaskGenerationMethod__ctor, (MaskGenerationMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x020DD3E0, void, MD5__ctor, (MD5 * __this, MethodInfo * method));
DO_APP_FUNC(0x020DD3F0, MD5 *, MD5_Create, (MethodInfo * method));
DO_APP_FUNC(0x020DD530, MD5 *, MD5_Create_1, (String * algName, MethodInfo * method));
DO_APP_FUNC(0x020DFA80, void, PasswordDeriveBytes__ctor, (PasswordDeriveBytes * __this, String * strPassword, Byte__Array * rgbSalt, MethodInfo * method));
DO_APP_FUNC(0x020DFC70, void, PasswordDeriveBytes__ctor_1, (PasswordDeriveBytes * __this, Byte__Array * password, Byte__Array * salt, MethodInfo * method));
DO_APP_FUNC(0x020DFE60, void, PasswordDeriveBytes__ctor_2, (PasswordDeriveBytes * __this, String * strPassword, Byte__Array * rgbSalt, String * strHashName, int32_t iterations, MethodInfo * method));
DO_APP_FUNC(0x020E0010, void, PasswordDeriveBytes__ctor_3, (PasswordDeriveBytes * __this, Byte__Array * password, Byte__Array * salt, String * hashName, int32_t iterations, MethodInfo * method));
DO_APP_FUNC(0x020E01C0, void, PasswordDeriveBytes__ctor_4, (PasswordDeriveBytes * __this, String * strPassword, Byte__Array * rgbSalt, CspParameters * cspParams, MethodInfo * method));
DO_APP_FUNC(0x020E0290, void, PasswordDeriveBytes__ctor_5, (PasswordDeriveBytes * __this, Byte__Array * password, Byte__Array * salt, CspParameters * cspParams, MethodInfo * method));
DO_APP_FUNC(0x020E0360, void, PasswordDeriveBytes__ctor_6, (PasswordDeriveBytes * __this, String * strPassword, Byte__Array * rgbSalt, String * strHashName, int32_t iterations, CspParameters * cspParams, MethodInfo * method));
DO_APP_FUNC(0x020E0500, void, PasswordDeriveBytes__ctor_7, (PasswordDeriveBytes * __this, Byte__Array * password, Byte__Array * salt, String * hashName, int32_t iterations, CspParameters * cspParams, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, String *, PasswordDeriveBytes_get_HashName, (PasswordDeriveBytes * __this, MethodInfo * method));
DO_APP_FUNC(0x020E07D0, void, PasswordDeriveBytes_set_HashName, (PasswordDeriveBytes * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, PasswordDeriveBytes_get_IterationCount, (PasswordDeriveBytes * __this, MethodInfo * method));
DO_APP_FUNC(0x020E0940, void, PasswordDeriveBytes_set_IterationCount, (PasswordDeriveBytes * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x020E0AA0, Byte__Array *, PasswordDeriveBytes_get_Salt, (PasswordDeriveBytes * __this, MethodInfo * method));
DO_APP_FUNC(0x020E0BF0, void, PasswordDeriveBytes_set_Salt, (PasswordDeriveBytes * __this, Byte__Array * value, MethodInfo * method));
DO_APP_FUNC(0x020E0DC0, Byte__Array *, PasswordDeriveBytes_GetBytes, (PasswordDeriveBytes * __this, int32_t cb, MethodInfo * method));
DO_APP_FUNC(0x020E0F60, void, PasswordDeriveBytes_Reset, (PasswordDeriveBytes * __this, MethodInfo * method));
DO_APP_FUNC(0x020E0F70, void, PasswordDeriveBytes_Dispose, (PasswordDeriveBytes * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x020E10A0, Byte__Array *, PasswordDeriveBytes_CryptDeriveKey, (PasswordDeriveBytes * __this, String * algname, String * alghashname, int32_t keySize, Byte__Array * rgbIV, MethodInfo * method));
DO_APP_FUNC(0x020E1190, Byte__Array *, PasswordDeriveBytes_ComputeBaseValue, (PasswordDeriveBytes * __this, MethodInfo * method));
DO_APP_FUNC(0x020E13B0, Byte__Array *, PasswordDeriveBytes_ComputeBytes, (PasswordDeriveBytes * __this, int32_t cb, MethodInfo * method));
DO_APP_FUNC(0x020E19A0, void, PasswordDeriveBytes_HashPrefix, (PasswordDeriveBytes * __this, CryptoStream * cs, MethodInfo * method));
DO_APP_FUNC(0x020DF880, void, PKCS1MaskGenerationMethod__ctor, (PKCS1MaskGenerationMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, PKCS1MaskGenerationMethod_get_HashName, (PKCS1MaskGenerationMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x020DF910, void, PKCS1MaskGenerationMethod_set_HashName, (PKCS1MaskGenerationMethod * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x020DF9B0, Byte__Array *, PKCS1MaskGenerationMethod_GenerateMask, (PKCS1MaskGenerationMethod * __this, Byte__Array * rgbSeed, int32_t cbReturn, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RandomNumberGenerator__ctor, (RandomNumberGenerator * __this, MethodInfo * method));
DO_APP_FUNC(0x028EE2B0, RandomNumberGenerator *, RandomNumberGenerator_Create, (MethodInfo * method));
DO_APP_FUNC(0x028EE3F0, RandomNumberGenerator *, RandomNumberGenerator_Create_1, (String * rngName, MethodInfo * method));
DO_APP_FUNC(0x028EE4D0, void, RandomNumberGenerator_Dispose, (RandomNumberGenerator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RandomNumberGenerator_Dispose_1, (RandomNumberGenerator * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x028EE580, void, RandomNumberGenerator_GetBytes, (RandomNumberGenerator * __this, Byte__Array * data, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x028EE780, void, RandomNumberGenerator_GetNonZeroBytes, (RandomNumberGenerator * __this, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x028DDDF0, void, RC2__ctor, (RC2 * __this, MethodInfo * method));
DO_APP_FUNC(0x028DDED0, int32_t, RC2_get_EffectiveKeySize, (RC2 * __this, MethodInfo * method));
DO_APP_FUNC(0x028DDEE0, void, RC2_set_EffectiveKeySize, (RC2 * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x003FC7F0, int32_t, RC2_get_KeySize, (RC2 * __this, MethodInfo * method));
DO_APP_FUNC(0x028DE060, void, RC2_set_KeySize, (RC2 * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x028DE130, RC2 *, RC2_Create, (MethodInfo * method));
DO_APP_FUNC(0x028DE270, RC2 *, RC2_Create_1, (String * AlgName, MethodInfo * method));
DO_APP_FUNC(0x028DE350, void, RC2__cctor, (MethodInfo * method));
DO_APP_FUNC(0x028DE660, void, RC2CryptoServiceProvider__ctor, (RC2CryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x003FC7F0, int32_t, RC2CryptoServiceProvider_get_EffectiveKeySize, (RC2CryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x028DE820, void, RC2CryptoServiceProvider_set_EffectiveKeySize, (RC2CryptoServiceProvider * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x004430B0, bool, RC2CryptoServiceProvider_get_UseSalt, (RC2CryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x0058ED80, void, RC2CryptoServiceProvider_set_UseSalt, (RC2CryptoServiceProvider * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x028DE8F0, ICryptoTransform *, RC2CryptoServiceProvider_CreateEncryptor, (RC2CryptoServiceProvider * __this, Byte__Array * rgbKey, Byte__Array * rgbIV, MethodInfo * method));
DO_APP_FUNC(0x028DEAA0, ICryptoTransform *, RC2CryptoServiceProvider_CreateDecryptor, (RC2CryptoServiceProvider * __this, Byte__Array * rgbKey, Byte__Array * rgbIV, MethodInfo * method));
DO_APP_FUNC(0x028DEC50, void, RC2CryptoServiceProvider_GenerateKey, (RC2CryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x028DED30, void, RC2CryptoServiceProvider_GenerateIV, (RC2CryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x028DEE00, void, RC2CryptoServiceProvider__cctor, (MethodInfo * method));
DO_APP_FUNC(0x028EE7D0, void, Rfc2898DeriveBytes__ctor, (Rfc2898DeriveBytes * __this, String * password, int32_t saltSize, MethodInfo * method));
DO_APP_FUNC(0x028EE7F0, void, Rfc2898DeriveBytes__ctor_1, (Rfc2898DeriveBytes * __this, String * password, int32_t saltSize, int32_t iterations, MethodInfo * method));
DO_APP_FUNC(0x028EEB20, void, Rfc2898DeriveBytes__ctor_2, (Rfc2898DeriveBytes * __this, String * password, Byte__Array * salt, MethodInfo * method));
DO_APP_FUNC(0x028EEB40, void, Rfc2898DeriveBytes__ctor_3, (Rfc2898DeriveBytes * __this, String * password, Byte__Array * salt, int32_t iterations, MethodInfo * method));
DO_APP_FUNC(0x028EECE0, void, Rfc2898DeriveBytes__ctor_4, (Rfc2898DeriveBytes * __this, Byte__Array * password, Byte__Array * salt, int32_t iterations, MethodInfo * method));
DO_APP_FUNC(0x00654950, int32_t, Rfc2898DeriveBytes_get_IterationCount, (Rfc2898DeriveBytes * __this, MethodInfo * method));
DO_APP_FUNC(0x028EEE60, void, Rfc2898DeriveBytes_set_IterationCount, (Rfc2898DeriveBytes * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x028EEF40, Byte__Array *, Rfc2898DeriveBytes_get_Salt, (Rfc2898DeriveBytes * __this, MethodInfo * method));
DO_APP_FUNC(0x028EF080, void, Rfc2898DeriveBytes_set_Salt, (Rfc2898DeriveBytes * __this, Byte__Array * value, MethodInfo * method));
DO_APP_FUNC(0x028EF250, Byte__Array *, Rfc2898DeriveBytes_GetBytes, (Rfc2898DeriveBytes * __this, int32_t cb, MethodInfo * method));
DO_APP_FUNC(0x028EF410, void, Rfc2898DeriveBytes_Reset, (Rfc2898DeriveBytes * __this, MethodInfo * method));
DO_APP_FUNC(0x028EF420, void, Rfc2898DeriveBytes_Dispose, (Rfc2898DeriveBytes * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x028EF4F0, void, Rfc2898DeriveBytes_Initialize, (Rfc2898DeriveBytes * __this, MethodInfo * method));
DO_APP_FUNC(0x028EF5B0, Byte__Array *, Rfc2898DeriveBytes_Func, (Rfc2898DeriveBytes * __this, MethodInfo * method));
DO_APP_FUNC(0x028EF9D0, Byte__Array *, Rfc2898DeriveBytes_CryptDeriveKey, (Rfc2898DeriveBytes * __this, String * algname, String * alghashname, int32_t keySize, Byte__Array * rgbIV, MethodInfo * method));
DO_APP_FUNC(0x028EFAC0, void, Rijndael__ctor, (Rijndael * __this, MethodInfo * method));
DO_APP_FUNC(0x028EFBA0, Rijndael *, Rijndael_Create, (MethodInfo * method));
DO_APP_FUNC(0x028EFCE0, Rijndael *, Rijndael_Create_1, (String * algName, MethodInfo * method));
DO_APP_FUNC(0x028EFDC0, void, Rijndael__cctor, (MethodInfo * method));
DO_APP_FUNC(0x028F00D0, void, RijndaelManaged__ctor, (RijndaelManaged * __this, MethodInfo * method));
DO_APP_FUNC(0x028F0230, ICryptoTransform *, RijndaelManaged_CreateEncryptor, (RijndaelManaged * __this, Byte__Array * rgbKey, Byte__Array * rgbIV, MethodInfo * method));
DO_APP_FUNC(0x028F0260, ICryptoTransform *, RijndaelManaged_CreateDecryptor, (RijndaelManaged * __this, Byte__Array * rgbKey, Byte__Array * rgbIV, MethodInfo * method));
DO_APP_FUNC(0x028F0290, void, RijndaelManaged_GenerateKey, (RijndaelManaged * __this, MethodInfo * method));
DO_APP_FUNC(0x028F0350, void, RijndaelManaged_GenerateIV, (RijndaelManaged * __this, MethodInfo * method));
DO_APP_FUNC(0x028F0410, ICryptoTransform *, RijndaelManaged_NewEncryptor, (RijndaelManaged * __this, Byte__Array * rgbKey, CipherMode__Enum mode, Byte__Array * rgbIV, int32_t feedbackSize, RijndaelManagedTransformMode__Enum encryptMode, MethodInfo * method));
DO_APP_FUNC(0x028F0620, void, RijndaelManagedTransform__ctor, (RijndaelManagedTransform * __this, Byte__Array * rgbKey, CipherMode__Enum mode, Byte__Array * rgbIV, int32_t blockSize, int32_t feedbackSize, PaddingMode__Enum PaddingValue, RijndaelManagedTransformMode__Enum transformMode, MethodInfo * method));
DO_APP_FUNC(0x028F0D10, void, RijndaelManagedTransform_Dispose, (RijndaelManagedTransform * __this, MethodInfo * method));
DO_APP_FUNC(0x028F0D10, void, RijndaelManagedTransform_Clear, (RijndaelManagedTransform * __this, MethodInfo * method));
DO_APP_FUNC(0x028F0D20, void, RijndaelManagedTransform_Dispose_1, (RijndaelManagedTransform * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x0052A010, int32_t, RijndaelManagedTransform_get_BlockSizeValue, (RijndaelManagedTransform * __this, MethodInfo * method));
DO_APP_FUNC(0x00529E80, int32_t, RijndaelManagedTransform_get_InputBlockSize, (RijndaelManagedTransform * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB970, int32_t, RijndaelManagedTransform_get_OutputBlockSize, (RijndaelManagedTransform * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, RijndaelManagedTransform_get_CanTransformMultipleBlocks, (RijndaelManagedTransform * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, RijndaelManagedTransform_get_CanReuseTransform, (RijndaelManagedTransform * __this, MethodInfo * method));
DO_APP_FUNC(0x028F0DF0, int32_t, RijndaelManagedTransform_TransformBlock, (RijndaelManagedTransform * __this, Byte__Array * inputBuffer, int32_t inputOffset, int32_t inputCount, Byte__Array * outputBuffer, int32_t outputOffset, MethodInfo * method));
DO_APP_FUNC(0x028F1190, Byte__Array *, RijndaelManagedTransform_TransformFinalBlock, (RijndaelManagedTransform * __this, Byte__Array * inputBuffer, int32_t inputOffset, int32_t inputCount, MethodInfo * method));
DO_APP_FUNC(0x028F14D0, void, RijndaelManagedTransform_Reset, (RijndaelManagedTransform * __this, MethodInfo * method));
DO_APP_FUNC(0x028F1540, int32_t, RijndaelManagedTransform_EncryptData, (RijndaelManagedTransform * __this, Byte__Array * inputBuffer, int32_t inputOffset, int32_t inputCount, Byte__Array * * outputBuffer, int32_t outputOffset, PaddingMode__Enum paddingMode, bool fLast, MethodInfo * method));
DO_APP_FUNC(0x028F2460, int32_t, RijndaelManagedTransform_DecryptData, (RijndaelManagedTransform * __this, Byte__Array * inputBuffer, int32_t inputOffset, int32_t inputCount, Byte__Array * * outputBuffer, int32_t outputOffset, PaddingMode__Enum paddingMode, bool fLast, MethodInfo * method));
DO_APP_FUNC(0x028F3490, void, RijndaelManagedTransform_Enc, (RijndaelManagedTransform * __this, int32_t * encryptindex, int32_t * encryptKeyExpansion, int32_t * T, int32_t * TF, int32_t * work, int32_t * temp, MethodInfo * method));
DO_APP_FUNC(0x028F3690, void, RijndaelManagedTransform_Dec, (RijndaelManagedTransform * __this, int32_t * decryptindex, int32_t * decryptKeyExpansion, int32_t * iT, int32_t * iTF, int32_t * work, int32_t * temp, MethodInfo * method));
DO_APP_FUNC(0x028F38D0, void, RijndaelManagedTransform_GenerateKeyExpansion, (RijndaelManagedTransform * __this, Byte__Array * rgbKey, MethodInfo * method));
DO_APP_FUNC(0x028F4090, int32_t, RijndaelManagedTransform_rot1, (int32_t val, MethodInfo * method));
DO_APP_FUNC(0x028F40A0, int32_t, RijndaelManagedTransform_rot2, (int32_t val, MethodInfo * method));
DO_APP_FUNC(0x028F40B0, int32_t, RijndaelManagedTransform_rot3, (int32_t val, MethodInfo * method));
DO_APP_FUNC(0x028F40C0, int32_t, RijndaelManagedTransform_SubWord, (int32_t a, MethodInfo * method));
DO_APP_FUNC(0x028F4250, int32_t, RijndaelManagedTransform_MulX, (int32_t x, MethodInfo * method));
DO_APP_FUNC(0x028F4280, void, RijndaelManagedTransform__cctor, (MethodInfo * method));
DO_APP_FUNC(0x028F4440, void, RijndaelManagedTransform__ctor_1, (RijndaelManagedTransform * __this, MethodInfo * method));
DO_APP_FUNC(0x028E0840, void, RIPEMD160__ctor, (RIPEMD160 * __this, MethodInfo * method));
DO_APP_FUNC(0x028E0850, RIPEMD160 *, RIPEMD160_Create, (MethodInfo * method));
DO_APP_FUNC(0x028E0990, RIPEMD160 *, RIPEMD160_Create_1, (String * hashName, MethodInfo * method));
DO_APP_FUNC(0x028E0A70, void, RIPEMD160Managed__ctor, (RIPEMD160Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x028E0B30, void, RIPEMD160Managed_Initialize, (RIPEMD160Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x028E0B80, void, RIPEMD160Managed_HashCore, (RIPEMD160Managed * __this, Byte__Array * rgb, int32_t ibStart, int32_t cbSize, MethodInfo * method));
DO_APP_FUNC(0x028E0B90, Byte__Array *, RIPEMD160Managed_HashFinal, (RIPEMD160Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x028E0BA0, void, RIPEMD160Managed_InitializeState, (RIPEMD160Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x028E0CA0, void, RIPEMD160Managed__HashData, (RIPEMD160Managed * __this, Byte__Array * partIn, int32_t ibStart, int32_t cbSize, MethodInfo * method));
DO_APP_FUNC(0x028E0E40, Byte__Array *, RIPEMD160Managed__EndHash, (RIPEMD160Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x028E10E0, void, RIPEMD160Managed_MDTransform, (uint32_t * blockDWords, uint32_t * state, uint8_t * block, MethodInfo * method));
DO_APP_FUNC(0x028E3D60, uint32_t, RIPEMD160Managed_F, (uint32_t x, uint32_t y, uint32_t z, MethodInfo * method));
DO_APP_FUNC(0x028E3D70, uint32_t, RIPEMD160Managed_G, (uint32_t x, uint32_t y, uint32_t z, MethodInfo * method));
DO_APP_FUNC(0x028E3D80, uint32_t, RIPEMD160Managed_H, (uint32_t x, uint32_t y, uint32_t z, MethodInfo * method));
DO_APP_FUNC(0x028E3D90, uint32_t, RIPEMD160Managed_I, (uint32_t x, uint32_t y, uint32_t z, MethodInfo * method));
DO_APP_FUNC(0x028E3DA0, uint32_t, RIPEMD160Managed_J, (uint32_t x, uint32_t y, uint32_t z, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RSA__ctor, (RSA * __this, MethodInfo * method));
DO_APP_FUNC(0x028E48A0, RSA *, RSA_Create, (MethodInfo * method));
DO_APP_FUNC(0x028E49F0, RSA *, RSA_Create_1, (String * algName, MethodInfo * method));
DO_APP_FUNC(0x028E4AD0, Byte__Array *, RSA_Encrypt, (RSA * __this, Byte__Array * data, RSAEncryptionPadding * padding, MethodInfo * method));
DO_APP_FUNC(0x028E4B10, Byte__Array *, RSA_Decrypt, (RSA * __this, Byte__Array * data, RSAEncryptionPadding * padding, MethodInfo * method));
DO_APP_FUNC(0x028E4B50, Byte__Array *, RSA_SignHash, (RSA * __this, Byte__Array * hash, HashAlgorithmName hashAlgorithm, RSASignaturePadding * padding, MethodInfo * method));
DO_APP_FUNC(0x028E4B90, bool, RSA_VerifyHash, (RSA * __this, Byte__Array * hash, Byte__Array * signature, HashAlgorithmName hashAlgorithm, RSASignaturePadding * padding, MethodInfo * method));
DO_APP_FUNC(0x028E4BD0, Byte__Array *, RSA_HashData, (RSA * __this, Byte__Array * data, int32_t offset, int32_t count, HashAlgorithmName hashAlgorithm, MethodInfo * method));
DO_APP_FUNC(0x028E4C10, Byte__Array *, RSA_HashData_1, (RSA * __this, Stream * data, HashAlgorithmName hashAlgorithm, MethodInfo * method));
DO_APP_FUNC(0x028E4C50, Byte__Array *, RSA_SignData, (RSA * __this, Byte__Array * data, HashAlgorithmName hashAlgorithm, RSASignaturePadding * padding, MethodInfo * method));
DO_APP_FUNC(0x028E4D50, Byte__Array *, RSA_SignData_1, (RSA * __this, Byte__Array * data, int32_t offset, int32_t count, HashAlgorithmName hashAlgorithm, RSASignaturePadding * padding, MethodInfo * method));
DO_APP_FUNC(0x028E4FB0, Byte__Array *, RSA_SignData_2, (RSA * __this, Stream * data, HashAlgorithmName hashAlgorithm, RSASignaturePadding * padding, MethodInfo * method));
DO_APP_FUNC(0x028E5160, bool, RSA_VerifyData, (RSA * __this, Byte__Array * data, Byte__Array * signature, HashAlgorithmName hashAlgorithm, RSASignaturePadding * padding, MethodInfo * method));
DO_APP_FUNC(0x028E5270, bool, RSA_VerifyData_1, (RSA * __this, Byte__Array * data, int32_t offset, int32_t count, Byte__Array * signature, HashAlgorithmName hashAlgorithm, RSASignaturePadding * padding, MethodInfo * method));
DO_APP_FUNC(0x028E5500, bool, RSA_VerifyData_2, (RSA * __this, Stream * data, Byte__Array * signature, HashAlgorithmName hashAlgorithm, RSASignaturePadding * padding, MethodInfo * method));
DO_APP_FUNC(0x028E56F0, Exception *, RSA_DerivedClassMustOverride, (MethodInfo * method));
DO_APP_FUNC(0x028E5850, Exception *, RSA_HashAlgorithmNameNullOrEmpty, (MethodInfo * method));
DO_APP_FUNC(0x028E59C0, Byte__Array *, RSA_DecryptValue, (RSA * __this, Byte__Array * rgb, MethodInfo * method));
DO_APP_FUNC(0x028E5A30, Byte__Array *, RSA_EncryptValue, (RSA * __this, Byte__Array * rgb, MethodInfo * method));
DO_APP_FUNC(0x028E5AA0, String *, RSA_get_KeyExchangeAlgorithm, (RSA * __this, MethodInfo * method));
DO_APP_FUNC(0x028E5B20, String *, RSA_get_SignatureAlgorithm, (RSA * __this, MethodInfo * method));
DO_APP_FUNC(0x028E5BA0, void, RSA_FromXmlString, (RSA * __this, String * xmlString, MethodInfo * method));
DO_APP_FUNC(0x028E62B0, String *, RSA_ToXmlString, (RSA * __this, bool includePrivateParameters, MethodInfo * method));
DO_APP_FUNC(0x028E6670, String *, RSACryptoServiceProvider_get_SignatureAlgorithm, (RSACryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x028E66F0, bool, RSACryptoServiceProvider_get_UseMachineKeyStore, (MethodInfo * method));
DO_APP_FUNC(0x028E67A0, void, RSACryptoServiceProvider_set_UseMachineKeyStore, (bool value, MethodInfo * method));
DO_APP_FUNC(0x028E6850, Byte__Array *, RSACryptoServiceProvider_HashData, (RSACryptoServiceProvider * __this, Byte__Array * data, int32_t offset, int32_t count, HashAlgorithmName hashAlgorithm, MethodInfo * method));
DO_APP_FUNC(0x028E68B0, Byte__Array *, RSACryptoServiceProvider_HashData_1, (RSACryptoServiceProvider * __this, Stream * data, HashAlgorithmName hashAlgorithm, MethodInfo * method));
DO_APP_FUNC(0x028E68F0, int32_t, RSACryptoServiceProvider_GetAlgorithmId, (HashAlgorithmName hashAlgorithm, MethodInfo * method));
DO_APP_FUNC(0x028E6B30, Byte__Array *, RSACryptoServiceProvider_Encrypt, (RSACryptoServiceProvider * __this, Byte__Array * data, RSAEncryptionPadding * padding, MethodInfo * method));
DO_APP_FUNC(0x028E6D20, Byte__Array *, RSACryptoServiceProvider_Decrypt, (RSACryptoServiceProvider * __this, Byte__Array * data, RSAEncryptionPadding * padding, MethodInfo * method));
DO_APP_FUNC(0x028E6F10, Byte__Array *, RSACryptoServiceProvider_SignHash, (RSACryptoServiceProvider * __this, Byte__Array * hash, HashAlgorithmName hashAlgorithm, RSASignaturePadding * padding, MethodInfo * method));
DO_APP_FUNC(0x028E71D0, bool, RSACryptoServiceProvider_VerifyHash, (RSACryptoServiceProvider * __this, Byte__Array * hash, Byte__Array * signature, HashAlgorithmName hashAlgorithm, RSASignaturePadding * padding, MethodInfo * method));
DO_APP_FUNC(0x028E74E0, Exception *, RSACryptoServiceProvider_PaddingModeNotSupported, (MethodInfo * method));
DO_APP_FUNC(0x028E7640, void, RSACryptoServiceProvider__ctor, (RSACryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x028E7660, void, RSACryptoServiceProvider__ctor_1, (RSACryptoServiceProvider * __this, CspParameters * parameters, MethodInfo * method));
DO_APP_FUNC(0x028E76B0, void, RSACryptoServiceProvider__ctor_2, (RSACryptoServiceProvider * __this, int32_t dwKeySize, MethodInfo * method));
DO_APP_FUNC(0x028E76C0, void, RSACryptoServiceProvider__ctor_3, (RSACryptoServiceProvider * __this, int32_t dwKeySize, CspParameters * parameters, MethodInfo * method));
DO_APP_FUNC(0x028E7710, void, RSACryptoServiceProvider_Common, (RSACryptoServiceProvider * __this, int32_t dwKeySize, bool parameters, MethodInfo * method));
DO_APP_FUNC(0x028E7D60, void, RSACryptoServiceProvider_Common_1, (RSACryptoServiceProvider * __this, CspParameters * p, MethodInfo * method));
DO_APP_FUNC(0x028E7F60, void, RSACryptoServiceProvider_Finalize, (RSACryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x028E7FE0, String *, RSACryptoServiceProvider_get_KeyExchangeAlgorithm, (RSACryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x028E8060, int32_t, RSACryptoServiceProvider_get_KeySize, (RSACryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x004F4CE0, bool, RSACryptoServiceProvider_get_PersistKeyInCsp, (RSACryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x028E8090, void, RSACryptoServiceProvider_set_PersistKeyInCsp, (RSACryptoServiceProvider * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x028E8120, bool, RSACryptoServiceProvider_get_PublicOnly, (RSACryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x028E8140, Byte__Array *, RSACryptoServiceProvider_Decrypt_1, (RSACryptoServiceProvider * __this, Byte__Array * rgb, bool fOAEP, MethodInfo * method));
DO_APP_FUNC(0x028E85B0, Byte__Array *, RSACryptoServiceProvider_DecryptValue, (RSACryptoServiceProvider * __this, Byte__Array * rgb, MethodInfo * method));
DO_APP_FUNC(0x028E86A0, Byte__Array *, RSACryptoServiceProvider_Encrypt_1, (RSACryptoServiceProvider * __this, Byte__Array * rgb, bool fOAEP, MethodInfo * method));
DO_APP_FUNC(0x01D61600, Byte__Array *, RSACryptoServiceProvider_EncryptValue, (RSACryptoServiceProvider * __this, Byte__Array * rgb, MethodInfo * method));
DO_APP_FUNC(0x028E89D0, RSAParameters, RSACryptoServiceProvider_ExportParameters, (RSACryptoServiceProvider * __this, bool includePrivateParameters, MethodInfo * method));
DO_APP_FUNC(0x028E8BC0, void, RSACryptoServiceProvider_ImportParameters, (RSACryptoServiceProvider * __this, RSAParameters parameters, MethodInfo * method));
DO_APP_FUNC(0x028E8C10, HashAlgorithm *, RSACryptoServiceProvider_GetHash, (RSACryptoServiceProvider * __this, Object * halg, MethodInfo * method));
DO_APP_FUNC(0x028E8EC0, HashAlgorithm *, RSACryptoServiceProvider_GetHashFromString, (RSACryptoServiceProvider * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x028E8FD0, Byte__Array *, RSACryptoServiceProvider_SignData, (RSACryptoServiceProvider * __this, Byte__Array * buffer, Object * halg, MethodInfo * method));
DO_APP_FUNC(0x028E9170, Byte__Array *, RSACryptoServiceProvider_SignData_1, (RSACryptoServiceProvider * __this, Stream * inputStream, Object * halg, MethodInfo * method));
DO_APP_FUNC(0x028E9260, Byte__Array *, RSACryptoServiceProvider_SignData_2, (RSACryptoServiceProvider * __this, Byte__Array * buffer, int32_t offset, int32_t count, Object * halg, MethodInfo * method));
DO_APP_FUNC(0x028E9370, String *, RSACryptoServiceProvider_GetHashNameFromOID, (RSACryptoServiceProvider * __this, String * oid, MethodInfo * method));
DO_APP_FUNC(0x028E9570, Byte__Array *, RSACryptoServiceProvider_SignHash_1, (RSACryptoServiceProvider * __this, Byte__Array * rgbHash, String * str, MethodInfo * method));
DO_APP_FUNC(0x028E9690, Byte__Array *, RSACryptoServiceProvider_SignHash_2, (RSACryptoServiceProvider * __this, Byte__Array * rgbHash, int32_t calgHash, MethodInfo * method));
DO_APP_FUNC(0x028E9770, HashAlgorithm *, RSACryptoServiceProvider_InternalHashToHashAlgorithm, (int32_t calgHash, MethodInfo * method));
DO_APP_FUNC(0x028E98A0, bool, RSACryptoServiceProvider_VerifyData, (RSACryptoServiceProvider * __this, Byte__Array * buffer, Object * halg, Byte__Array * signature, MethodInfo * method));
DO_APP_FUNC(0x028E9A20, bool, RSACryptoServiceProvider_VerifyHash_1, (RSACryptoServiceProvider * __this, Byte__Array * rgbHash, String * str, Byte__Array * rgbSignature, MethodInfo * method));
DO_APP_FUNC(0x028E9B90, bool, RSACryptoServiceProvider_VerifyHash_2, (RSACryptoServiceProvider * __this, Byte__Array * rgbHash, int32_t calgHash, Byte__Array * rgbSignature, MethodInfo * method));
DO_APP_FUNC(0x020D6E70, void, RSACryptoServiceProvider_Dispose, (RSACryptoServiceProvider * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x028E9C90, void, RSACryptoServiceProvider_OnKeyGenerated, (RSACryptoServiceProvider * __this, Object * sender, EventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x028E9D20, CspKeyContainerInfo *, RSACryptoServiceProvider_get_CspKeyContainerInfo, (RSACryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x028E9E90, Byte__Array *, RSACryptoServiceProvider_ExportCspBlob, (RSACryptoServiceProvider * __this, bool includePrivateParameters, MethodInfo * method));
DO_APP_FUNC(0x028E9F20, void, RSACryptoServiceProvider_ImportCspBlob, (RSACryptoServiceProvider * __this, Byte__Array * keyBlob, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RSACryptoServiceProvider__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RSAOAEPKeyExchangeDeformatter__ctor, (RSAOAEPKeyExchangeDeformatter * __this, MethodInfo * method));
DO_APP_FUNC(0x028EAF30, void, RSAOAEPKeyExchangeDeformatter__ctor_1, (RSAOAEPKeyExchangeDeformatter * __this, AsymmetricAlgorithm * key, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, String *, RSAOAEPKeyExchangeDeformatter_get_Parameters, (RSAOAEPKeyExchangeDeformatter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RSAOAEPKeyExchangeDeformatter_set_Parameters, (RSAOAEPKeyExchangeDeformatter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x028EB040, Byte__Array *, RSAOAEPKeyExchangeDeformatter_DecryptKeyExchange, (RSAOAEPKeyExchangeDeformatter * __this, Byte__Array * rgbData, MethodInfo * method));
DO_APP_FUNC(0x028EB330, void, RSAOAEPKeyExchangeDeformatter_SetKey, (RSAOAEPKeyExchangeDeformatter * __this, AsymmetricAlgorithm * key, MethodInfo * method));
DO_APP_FUNC(0x028EB440, bool, RSAOAEPKeyExchangeDeformatter_get_OverridesDecrypt, (RSAOAEPKeyExchangeDeformatter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RSAOAEPKeyExchangeFormatter__ctor, (RSAOAEPKeyExchangeFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x028EB6B0, void, RSAOAEPKeyExchangeFormatter__ctor_1, (RSAOAEPKeyExchangeFormatter * __this, AsymmetricAlgorithm * key, MethodInfo * method));
DO_APP_FUNC(0x028EB7C0, Byte__Array *, RSAOAEPKeyExchangeFormatter_get_Parameter, (RSAOAEPKeyExchangeFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x028EB910, void, RSAOAEPKeyExchangeFormatter_set_Parameter, (RSAOAEPKeyExchangeFormatter * __this, Byte__Array * value, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, String *, RSAOAEPKeyExchangeFormatter_get_Parameters, (RSAOAEPKeyExchangeFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, RandomNumberGenerator *, RSAOAEPKeyExchangeFormatter_get_Rng, (RSAOAEPKeyExchangeFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB10, void, RSAOAEPKeyExchangeFormatter_set_Rng, (RSAOAEPKeyExchangeFormatter * __this, RandomNumberGenerator * value, MethodInfo * method));
DO_APP_FUNC(0x028EBA60, void, RSAOAEPKeyExchangeFormatter_SetKey, (RSAOAEPKeyExchangeFormatter * __this, AsymmetricAlgorithm * key, MethodInfo * method));
DO_APP_FUNC(0x028EBB70, Byte__Array *, RSAOAEPKeyExchangeFormatter_CreateKeyExchange, (RSAOAEPKeyExchangeFormatter * __this, Byte__Array * rgbData, MethodInfo * method));
DO_APP_FUNC(0x01DC7CD0, Byte__Array *, RSAOAEPKeyExchangeFormatter_CreateKeyExchange_1, (RSAOAEPKeyExchangeFormatter * __this, Byte__Array * rgbData, Type * symAlgType, MethodInfo * method));
DO_APP_FUNC(0x028EBE30, bool, RSAOAEPKeyExchangeFormatter_get_OverridesEncrypt, (RSAOAEPKeyExchangeFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RSAPKCS1KeyExchangeDeformatter__ctor, (RSAPKCS1KeyExchangeDeformatter * __this, MethodInfo * method));
DO_APP_FUNC(0x028EC0A0, void, RSAPKCS1KeyExchangeDeformatter__ctor_1, (RSAPKCS1KeyExchangeDeformatter * __this, AsymmetricAlgorithm * key, MethodInfo * method));
DO_APP_FUNC(0x002FB950, RandomNumberGenerator *, RSAPKCS1KeyExchangeDeformatter_get_RNG, (RSAPKCS1KeyExchangeDeformatter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, RSAPKCS1KeyExchangeDeformatter_set_RNG, (RSAPKCS1KeyExchangeDeformatter * __this, RandomNumberGenerator * value, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, String *, RSAPKCS1KeyExchangeDeformatter_get_Parameters, (RSAPKCS1KeyExchangeDeformatter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RSAPKCS1KeyExchangeDeformatter_set_Parameters, (RSAPKCS1KeyExchangeDeformatter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x028EC1B0, Byte__Array *, RSAPKCS1KeyExchangeDeformatter_DecryptKeyExchange, (RSAPKCS1KeyExchangeDeformatter * __this, Byte__Array * rgbIn, MethodInfo * method));
DO_APP_FUNC(0x028EC3F0, void, RSAPKCS1KeyExchangeDeformatter_SetKey, (RSAPKCS1KeyExchangeDeformatter * __this, AsymmetricAlgorithm * key, MethodInfo * method));
DO_APP_FUNC(0x028EC500, bool, RSAPKCS1KeyExchangeDeformatter_get_OverridesDecrypt, (RSAPKCS1KeyExchangeDeformatter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RSAPKCS1KeyExchangeFormatter__ctor, (RSAPKCS1KeyExchangeFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x028EC770, void, RSAPKCS1KeyExchangeFormatter__ctor_1, (RSAPKCS1KeyExchangeFormatter * __this, AsymmetricAlgorithm * key, MethodInfo * method));
DO_APP_FUNC(0x028EC880, String *, RSAPKCS1KeyExchangeFormatter_get_Parameters, (RSAPKCS1KeyExchangeFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, RandomNumberGenerator *, RSAPKCS1KeyExchangeFormatter_get_Rng, (RSAPKCS1KeyExchangeFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, RSAPKCS1KeyExchangeFormatter_set_Rng, (RSAPKCS1KeyExchangeFormatter * __this, RandomNumberGenerator * value, MethodInfo * method));
DO_APP_FUNC(0x028EC900, void, RSAPKCS1KeyExchangeFormatter_SetKey, (RSAPKCS1KeyExchangeFormatter * __this, AsymmetricAlgorithm * key, MethodInfo * method));
DO_APP_FUNC(0x028ECA10, Byte__Array *, RSAPKCS1KeyExchangeFormatter_CreateKeyExchange, (RSAPKCS1KeyExchangeFormatter * __this, Byte__Array * rgbData, MethodInfo * method));
DO_APP_FUNC(0x01DC7CD0, Byte__Array *, RSAPKCS1KeyExchangeFormatter_CreateKeyExchange_1, (RSAPKCS1KeyExchangeFormatter * __this, Byte__Array * rgbData, Type * symAlgType, MethodInfo * method));
DO_APP_FUNC(0x028ECD60, bool, RSAPKCS1KeyExchangeFormatter_get_OverridesEncrypt, (RSAPKCS1KeyExchangeFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x028E0840, void, SHA1__ctor, (SHA1 * __this, MethodInfo * method));
DO_APP_FUNC(0x028F4470, SHA1 *, SHA1_Create, (MethodInfo * method));
DO_APP_FUNC(0x028F45B0, SHA1 *, SHA1_Create_1, (String * hashName, MethodInfo * method));
DO_APP_FUNC(0x028F6F80, void, SHA1Managed__ctor, (SHA1Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x028F7040, void, SHA1Managed_Initialize, (SHA1Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x028F7090, void, SHA1Managed_HashCore, (SHA1Managed * __this, Byte__Array * rgb, int32_t ibStart, int32_t cbSize, MethodInfo * method));
DO_APP_FUNC(0x028F70A0, Byte__Array *, SHA1Managed_HashFinal, (SHA1Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x028E0BA0, void, SHA1Managed_InitializeState, (SHA1Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x028F70B0, void, SHA1Managed__HashData, (SHA1Managed * __this, Byte__Array * partIn, int32_t ibStart, int32_t cbSize, MethodInfo * method));
DO_APP_FUNC(0x028F7250, Byte__Array *, SHA1Managed__EndHash, (SHA1Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x028F74F0, void, SHA1Managed_SHATransform, (uint32_t * expandedBuffer, uint32_t * state, uint8_t * block, MethodInfo * method));
DO_APP_FUNC(0x028F7B30, void, SHA1Managed_SHAExpand, (uint32_t * x, MethodInfo * method));
DO_APP_FUNC(0x028F7B70, void, SHA256__ctor, (SHA256 * __this, MethodInfo * method));
DO_APP_FUNC(0x028F7B80, SHA256 *, SHA256_Create, (MethodInfo * method));
DO_APP_FUNC(0x028F7CC0, SHA256 *, SHA256_Create_1, (String * hashName, MethodInfo * method));
DO_APP_FUNC(0x028F7DA0, void, SHA256Managed__ctor, (SHA256Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x028F7E60, void, SHA256Managed_Initialize, (SHA256Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x028F7EB0, void, SHA256Managed_HashCore, (SHA256Managed * __this, Byte__Array * rgb, int32_t ibStart, int32_t cbSize, MethodInfo * method));
DO_APP_FUNC(0x028F7EC0, Byte__Array *, SHA256Managed_HashFinal, (SHA256Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x028F7ED0, void, SHA256Managed_InitializeState, (SHA256Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x028F8090, void, SHA256Managed__HashData, (SHA256Managed * __this, Byte__Array * partIn, int32_t ibStart, int32_t cbSize, MethodInfo * method));
DO_APP_FUNC(0x028F82B0, Byte__Array *, SHA256Managed__EndHash, (SHA256Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x028F8550, void, SHA256Managed_SHATransform, (uint32_t * expandedBuffer, uint32_t * state, uint8_t * block, MethodInfo * method));
DO_APP_FUNC(0x028F8D50, uint32_t, SHA256Managed_RotateRight, (uint32_t x, int32_t n, MethodInfo * method));
DO_APP_FUNC(0x028F8D70, uint32_t, SHA256Managed_Ch, (uint32_t x, uint32_t y, uint32_t z, MethodInfo * method));
DO_APP_FUNC(0x028F8D80, uint32_t, SHA256Managed_Maj, (uint32_t x, uint32_t y, uint32_t z, MethodInfo * method));
DO_APP_FUNC(0x028F8D90, uint32_t, SHA256Managed_sigma_0, (uint32_t x, MethodInfo * method));
DO_APP_FUNC(0x028F8E40, uint32_t, SHA256Managed_sigma_1, (uint32_t x, MethodInfo * method));
DO_APP_FUNC(0x028F8EF0, uint32_t, SHA256Managed_Sigma_0, (uint32_t x, MethodInfo * method));
DO_APP_FUNC(0x028F8FB0, uint32_t, SHA256Managed_Sigma_1, (uint32_t x, MethodInfo * method));
DO_APP_FUNC(0x028F9070, void, SHA256Managed_SHA256Expand, (uint32_t * x, MethodInfo * method));
DO_APP_FUNC(0x028F9160, void, SHA256Managed__cctor, (MethodInfo * method));
DO_APP_FUNC(0x028F9210, void, SHA384__ctor, (SHA384 * __this, MethodInfo * method));
DO_APP_FUNC(0x028F9220, SHA384 *, SHA384_Create, (MethodInfo * method));
DO_APP_FUNC(0x028F9360, SHA384 *, SHA384_Create_1, (String * hashName, MethodInfo * method));
DO_APP_FUNC(0x028F9440, void, SHA384Managed__ctor, (SHA384Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x028F9500, void, SHA384Managed_Initialize, (SHA384Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x028F9550, void, SHA384Managed_HashCore, (SHA384Managed * __this, Byte__Array * rgb, int32_t ibStart, int32_t cbSize, MethodInfo * method));
DO_APP_FUNC(0x028F9560, Byte__Array *, SHA384Managed_HashFinal, (SHA384Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x028F9570, void, SHA384Managed_InitializeState, (SHA384Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x028F9770, void, SHA384Managed__HashData, (SHA384Managed * __this, Byte__Array * partIn, int32_t ibStart, int32_t cbSize, MethodInfo * method));
DO_APP_FUNC(0x028F99A0, Byte__Array *, SHA384Managed__EndHash, (SHA384Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x028F9C40, void, SHA384Managed_SHATransform, (uint64_t * expandedBuffer, uint64_t * state, uint8_t * block, MethodInfo * method));
DO_APP_FUNC(0x01E0F690, uint64_t, SHA384Managed_RotateRight, (uint64_t x, int32_t n, MethodInfo * method));
DO_APP_FUNC(0x01E0F6B0, uint64_t, SHA384Managed_Ch, (uint64_t x, uint64_t y, uint64_t z, MethodInfo * method));
DO_APP_FUNC(0x01E0F6C0, uint64_t, SHA384Managed_Maj, (uint64_t x, uint64_t y, uint64_t z, MethodInfo * method));
DO_APP_FUNC(0x028FA4E0, uint64_t, SHA384Managed_Sigma_0, (uint64_t x, MethodInfo * method));
DO_APP_FUNC(0x028FA5B0, uint64_t, SHA384Managed_Sigma_1, (uint64_t x, MethodInfo * method));
DO_APP_FUNC(0x028FA680, uint64_t, SHA384Managed_sigma_0, (uint64_t x, MethodInfo * method));
DO_APP_FUNC(0x028FA740, uint64_t, SHA384Managed_sigma_1, (uint64_t x, MethodInfo * method));
DO_APP_FUNC(0x028FA800, void, SHA384Managed_SHA384Expand, (uint64_t * x, MethodInfo * method));
DO_APP_FUNC(0x028FA8F0, void, SHA384Managed__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01E0E3C0, void, SHA512__ctor, (SHA512 * __this, MethodInfo * method));
DO_APP_FUNC(0x01E0E3D0, SHA512 *, SHA512_Create, (MethodInfo * method));
DO_APP_FUNC(0x01E0E510, SHA512 *, SHA512_Create_1, (String * hashName, MethodInfo * method));
DO_APP_FUNC(0x01E0E5F0, void, SHA512Managed__ctor, (SHA512Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x01E0E6B0, void, SHA512Managed_Initialize, (SHA512Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x01E0E700, void, SHA512Managed_HashCore, (SHA512Managed * __this, Byte__Array * rgb, int32_t ibStart, int32_t cbSize, MethodInfo * method));
DO_APP_FUNC(0x01E0E710, Byte__Array *, SHA512Managed_HashFinal, (SHA512Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x01E0E720, void, SHA512Managed_InitializeState, (SHA512Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x01E0E920, void, SHA512Managed__HashData, (SHA512Managed * __this, Byte__Array * partIn, int32_t ibStart, int32_t cbSize, MethodInfo * method));
DO_APP_FUNC(0x01E0EB50, Byte__Array *, SHA512Managed__EndHash, (SHA512Managed * __this, MethodInfo * method));
DO_APP_FUNC(0x01E0EDF0, void, SHA512Managed_SHATransform, (uint64_t * expandedBuffer, uint64_t * state, uint8_t * block, MethodInfo * method));
DO_APP_FUNC(0x01E0F690, uint64_t, SHA512Managed_RotateRight, (uint64_t x, int32_t n, MethodInfo * method));
DO_APP_FUNC(0x01E0F6B0, uint64_t, SHA512Managed_Ch, (uint64_t x, uint64_t y, uint64_t z, MethodInfo * method));
DO_APP_FUNC(0x01E0F6C0, uint64_t, SHA512Managed_Maj, (uint64_t x, uint64_t y, uint64_t z, MethodInfo * method));
DO_APP_FUNC(0x01E0F6D0, uint64_t, SHA512Managed_Sigma_0, (uint64_t x, MethodInfo * method));
DO_APP_FUNC(0x01E0F7A0, uint64_t, SHA512Managed_Sigma_1, (uint64_t x, MethodInfo * method));
DO_APP_FUNC(0x01E0F870, uint64_t, SHA512Managed_sigma_0, (uint64_t x, MethodInfo * method));
DO_APP_FUNC(0x01E0F930, uint64_t, SHA512Managed_sigma_1, (uint64_t x, MethodInfo * method));
DO_APP_FUNC(0x01E0F9F0, void, SHA512Managed_SHA512Expand, (uint64_t * x, MethodInfo * method));
DO_APP_FUNC(0x01E0FAE0, void, SHA512Managed__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SignatureDescription__ctor, (SignatureDescription * __this, MethodInfo * method));
DO_APP_FUNC(0x01E0FB90, void, SignatureDescription__ctor_1, (SignatureDescription * __this, SecurityElement * el, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, SignatureDescription_get_KeyAlgorithm, (SignatureDescription * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, SignatureDescription_set_KeyAlgorithm, (SignatureDescription * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, SignatureDescription_get_DigestAlgorithm, (SignatureDescription * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, SignatureDescription_set_DigestAlgorithm, (SignatureDescription * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, SignatureDescription_get_FormatterAlgorithm, (SignatureDescription * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, SignatureDescription_set_FormatterAlgorithm, (SignatureDescription * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, SignatureDescription_get_DeformatterAlgorithm, (SignatureDescription * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB10, void, SignatureDescription_set_DeformatterAlgorithm, (SignatureDescription * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E0FCA0, AsymmetricSignatureDeformatter *, SignatureDescription_CreateDeformatter, (SignatureDescription * __this, AsymmetricAlgorithm * key, MethodInfo * method));
DO_APP_FUNC(0x01E0FDA0, AsymmetricSignatureFormatter *, SignatureDescription_CreateFormatter, (SignatureDescription * __this, AsymmetricAlgorithm * key, MethodInfo * method));
DO_APP_FUNC(0x01E0FEA0, HashAlgorithm *, SignatureDescription_CreateDigest, (SignatureDescription * __this, MethodInfo * method));
DO_APP_FUNC(0x028ED5C0, void, RSAPKCS1SignatureDescription__ctor, (RSAPKCS1SignatureDescription * __this, String * hashAlgorithm, String * digestAlgorithm, MethodInfo * method));
DO_APP_FUNC(0x028ED670, AsymmetricSignatureDeformatter *, RSAPKCS1SignatureDescription_CreateDeformatter, (RSAPKCS1SignatureDescription * __this, AsymmetricAlgorithm * key, MethodInfo * method));
DO_APP_FUNC(0x028ED790, AsymmetricSignatureFormatter *, RSAPKCS1SignatureDescription_CreateFormatter, (RSAPKCS1SignatureDescription * __this, AsymmetricAlgorithm * key, MethodInfo * method));
DO_APP_FUNC(0x028ECFD0, void, RSAPKCS1SHA1SignatureDescription__ctor, (RSAPKCS1SHA1SignatureDescription * __this, MethodInfo * method));
DO_APP_FUNC(0x028ED060, void, RSAPKCS1SHA256SignatureDescription__ctor, (RSAPKCS1SHA256SignatureDescription * __this, MethodInfo * method));
DO_APP_FUNC(0x028ED0F0, void, RSAPKCS1SHA384SignatureDescription__ctor, (RSAPKCS1SHA384SignatureDescription * __this, MethodInfo * method));
DO_APP_FUNC(0x028ED180, void, RSAPKCS1SHA512SignatureDescription__ctor, (RSAPKCS1SHA512SignatureDescription * __this, MethodInfo * method));
DO_APP_FUNC(0x020D77F0, void, DSASignatureDescription__ctor, (DSASignatureDescription * __this, MethodInfo * method));
DO_APP_FUNC(0x01E0FF80, void, SymmetricAlgorithm__ctor, (SymmetricAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x01E0FF90, void, SymmetricAlgorithm_Dispose, (SymmetricAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x01E10040, void, SymmetricAlgorithm_Clear, (SymmetricAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x01E100D0, void, SymmetricAlgorithm_Dispose_1, (SymmetricAlgorithm * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, SymmetricAlgorithm_get_BlockSize, (SymmetricAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x01E10120, void, SymmetricAlgorithm_set_BlockSize, (SymmetricAlgorithm * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x00CC59E0, int32_t, SymmetricAlgorithm_get_FeedbackSize, (SymmetricAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x01E102C0, void, SymmetricAlgorithm_set_FeedbackSize, (SymmetricAlgorithm * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01E103A0, Byte__Array *, SymmetricAlgorithm_get_IV, (SymmetricAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x01E10500, void, SymmetricAlgorithm_set_IV, (SymmetricAlgorithm * __this, Byte__Array * value, MethodInfo * method));
DO_APP_FUNC(0x01E106D0, Byte__Array *, SymmetricAlgorithm_get_Key, (SymmetricAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x01E10830, void, SymmetricAlgorithm_set_Key, (SymmetricAlgorithm * __this, Byte__Array * value, MethodInfo * method));
DO_APP_FUNC(0x01E10A10, KeySizes__Array *, SymmetricAlgorithm_get_LegalBlockSizes, (SymmetricAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x01E10B50, KeySizes__Array *, SymmetricAlgorithm_get_LegalKeySizes, (SymmetricAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x003FC7F0, int32_t, SymmetricAlgorithm_get_KeySize, (SymmetricAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x01E10C90, void, SymmetricAlgorithm_set_KeySize, (SymmetricAlgorithm * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x003FC830, CipherMode__Enum, SymmetricAlgorithm_get_Mode, (SymmetricAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x01E10D70, void, SymmetricAlgorithm_set_Mode, (SymmetricAlgorithm * __this, CipherMode__Enum value, MethodInfo * method));
DO_APP_FUNC(0x004E57A0, PaddingMode__Enum, SymmetricAlgorithm_get_Padding, (SymmetricAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x01E10E40, void, SymmetricAlgorithm_set_Padding, (SymmetricAlgorithm * __this, PaddingMode__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01E10F10, bool, SymmetricAlgorithm_ValidKeySize, (SymmetricAlgorithm * __this, int32_t bitLength, MethodInfo * method));
DO_APP_FUNC(0x01E11010, SymmetricAlgorithm *, SymmetricAlgorithm_Create, (MethodInfo * method));
DO_APP_FUNC(0x01E11150, SymmetricAlgorithm *, SymmetricAlgorithm_Create_1, (String * algName, MethodInfo * method));
DO_APP_FUNC(0x01E11230, ICryptoTransform *, SymmetricAlgorithm_CreateEncryptor, (SymmetricAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x01E11290, ICryptoTransform *, SymmetricAlgorithm_CreateDecryptor, (SymmetricAlgorithm * __this, MethodInfo * method));
DO_APP_FUNC(0x01E12060, void, TripleDES__ctor, (TripleDES * __this, MethodInfo * method));
DO_APP_FUNC(0x01E12140, Byte__Array *, TripleDES_get_Key, (TripleDES * __this, MethodInfo * method));
DO_APP_FUNC(0x01E122E0, void, TripleDES_set_Key, (TripleDES * __this, Byte__Array * value, MethodInfo * method));
DO_APP_FUNC(0x01E12530, TripleDES *, TripleDES_Create, (MethodInfo * method));
DO_APP_FUNC(0x01E12670, TripleDES *, TripleDES_Create_1, (String * str, MethodInfo * method));
DO_APP_FUNC(0x01E12750, bool, TripleDES_IsWeakKey, (Byte__Array * rgbKey, MethodInfo * method));
DO_APP_FUNC(0x01E12900, bool, TripleDES_EqualBytes, (Byte__Array * rgbKey, int32_t start1, int32_t start2, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01E12B40, bool, TripleDES_IsLegalKeySize, (Byte__Array * rgbKey, MethodInfo * method));
DO_APP_FUNC(0x01E12B60, void, TripleDES__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01E12E70, void, TripleDESCryptoServiceProvider__ctor, (TripleDESCryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01E13000, ICryptoTransform *, TripleDESCryptoServiceProvider_CreateEncryptor, (TripleDESCryptoServiceProvider * __this, Byte__Array * rgbKey, Byte__Array * rgbIV, MethodInfo * method));
DO_APP_FUNC(0x01E131F0, ICryptoTransform *, TripleDESCryptoServiceProvider_CreateDecryptor, (TripleDESCryptoServiceProvider * __this, Byte__Array * rgbKey, Byte__Array * rgbIV, MethodInfo * method));
DO_APP_FUNC(0x01E133E0, void, TripleDESCryptoServiceProvider_GenerateKey, (TripleDESCryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01E13530, void, TripleDESCryptoServiceProvider_GenerateIV, (TripleDESCryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Utils__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01E14140, RNGCryptoServiceProvider *, Utils_get_StaticRandomNumberGenerator, (MethodInfo * method));
DO_APP_FUNC(0x01E14330, Byte__Array *, Utils_GenerateRandom, (int32_t keySize, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, Utils_HasAlgorithm, (int32_t dwCalg, int32_t dwKeySize, MethodInfo * method));
DO_APP_FUNC(0x01E14400, String *, Utils_DiscardWhiteSpaces, (String * inputBuffer, MethodInfo * method));
DO_APP_FUNC(0x01E144C0, String *, Utils_DiscardWhiteSpaces_1, (String * inputBuffer, int32_t inputOffset, int32_t inputCount, MethodInfo * method));
DO_APP_FUNC(0x01E14690, int32_t, Utils_ConvertByteArrayToInt, (Byte__Array * input, MethodInfo * method));
DO_APP_FUNC(0x01E146F0, Byte__Array *, Utils_ConvertIntToByteArray, (int32_t dwInput, MethodInfo * method));
DO_APP_FUNC(0x01E14890, void, Utils_ConvertIntToByteArray_1, (uint32_t dwInput, Byte__Array * * counter, MethodInfo * method));
DO_APP_FUNC(0x01E14910, Byte__Array *, Utils_FixupKeyParity, (Byte__Array * key, MethodInfo * method));
DO_APP_FUNC(0x01E14A60, void, Utils_DWORDFromLittleEndian, (uint32_t * x, int32_t digits, uint8_t * block, MethodInfo * method));
DO_APP_FUNC(0x01E14AC0, void, Utils_DWORDToLittleEndian, (Byte__Array * block, UInt32__Array * x, int32_t digits, MethodInfo * method));
DO_APP_FUNC(0x01E14C30, void, Utils_DWORDFromBigEndian, (uint32_t * x, int32_t digits, uint8_t * block, MethodInfo * method));
DO_APP_FUNC(0x01E14C90, void, Utils_DWORDToBigEndian, (Byte__Array * block, UInt32__Array * x, int32_t digits, MethodInfo * method));
DO_APP_FUNC(0x01E14E00, void, Utils_QuadWordFromBigEndian, (uint64_t * x, int32_t digits, uint8_t * block, MethodInfo * method));
DO_APP_FUNC(0x01E14E90, void, Utils_QuadWordToBigEndian, (Byte__Array * block, UInt64__Array * x, int32_t digits, MethodInfo * method));
DO_APP_FUNC(0x01E15120, Byte__Array *, Utils_Int, (uint32_t i, MethodInfo * method));
DO_APP_FUNC(0x01E15230, Byte__Array *, Utils_RsaOaepEncrypt, (RSA * rsa, HashAlgorithm * hash, PKCS1MaskGenerationMethod * mgf, RandomNumberGenerator * rng, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x01E15300, Byte__Array *, Utils_RsaOaepDecrypt, (RSA * rsa, HashAlgorithm * hash, PKCS1MaskGenerationMethod * mgf, Byte__Array * encryptedData, MethodInfo * method));
DO_APP_FUNC(0x01E15400, Byte__Array *, Utils_RsaPkcs1Padding, (RSA * rsa, Byte__Array * oid, Byte__Array * hash, MethodInfo * method));
DO_APP_FUNC(0x01E157A0, bool, Utils_CompareBigIntArrays, (Byte__Array * lhs, Byte__Array * rhs, MethodInfo * method));
DO_APP_FUNC(0x01E158F0, HashAlgorithmName, Utils_OidToHashAlgorithmName, (String * oid, MethodInfo * method));
DO_APP_FUNC(0x01E15A80, bool, Utils_DoesRsaKeyOverride, (RSA * rsaKey, String * methodName, Type__Array * parameterTypes, MethodInfo * method));
DO_APP_FUNC(0x01E15CA0, bool, Utils_DoesRsaKeyOverrideSlowPath, (Type * t, String * methodName, Type__Array * parameterTypes, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Utils__ProduceLegacyHmacValues, (MethodInfo * method));
DO_APP_FUNC(0x00531660, void, CryptoAPITransform__ctor, (CryptoAPITransform * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, CryptoAPITransform_get_CanReuseTransform, (CryptoAPITransform * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, CryptoAPITransform_get_CanTransformMultipleBlocks, (CryptoAPITransform * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, int32_t, CryptoAPITransform_get_InputBlockSize, (CryptoAPITransform * __this, MethodInfo * method));
DO_APP_FUNC(0x020C90C0, void *, CryptoAPITransform_get_KeyHandle, (CryptoAPITransform * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, int32_t, CryptoAPITransform_get_OutputBlockSize, (CryptoAPITransform * __this, MethodInfo * method));
DO_APP_FUNC(0x020C9130, void, CryptoAPITransform_Dispose, (CryptoAPITransform * __this, MethodInfo * method));
DO_APP_FUNC(0x020C91E0, void, CryptoAPITransform_Clear, (CryptoAPITransform * __this, MethodInfo * method));
DO_APP_FUNC(0x020C91E0, void, CryptoAPITransform_Dispose_1, (CryptoAPITransform * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, int32_t, CryptoAPITransform_TransformBlock, (CryptoAPITransform * __this, Byte__Array * inputBuffer, int32_t inputOffset, int32_t inputCount, Byte__Array * outputBuffer, int32_t outputOffset, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Byte__Array *, CryptoAPITransform_TransformFinalBlock, (CryptoAPITransform * __this, Byte__Array * inputBuffer, int32_t inputOffset, int32_t inputCount, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CryptoAPITransform_Reset, (CryptoAPITransform * __this, MethodInfo * method));
DO_APP_FUNC(0x020C91F0, Byte__Array *, CryptoConfig_EncodeOID, (String * str, MethodInfo * method));
DO_APP_FUNC(0x020C9690, Byte__Array *, CryptoConfig_EncodeLongNumber, (int64_t x, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, CryptoConfig_get_AllowOnlyFipsAlgorithms, (MethodInfo * method));
DO_APP_FUNC(0x020C9840, void, CryptoConfig_AddAlgorithm, (Type * algorithm, String__Array * names, MethodInfo * method));
DO_APP_FUNC(0x020C9890, void, CryptoConfig_AddOID, (String * oid, String__Array * names, MethodInfo * method));
DO_APP_FUNC(0x020C98E0, Object *, CryptoConfig_CreateFromName, (String * name, MethodInfo * method));
DO_APP_FUNC(0x020C98F0, Object *, CryptoConfig_CreateFromName_1, (String * name, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x020CC640, String *, CryptoConfig_MapNameToOID, (String * name, Object * arg, MethodInfo * method));
DO_APP_FUNC(0x020CC650, String *, CryptoConfig_MapNameToOID_1, (String * name, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CryptoConfig__ctor, (CryptoConfig * __this, MethodInfo * method));
DO_APP_FUNC(0x020D0390, void, CspKeyContainerInfo__ctor, (CspKeyContainerInfo * __this, CspParameters * parameters, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, CspKeyContainerInfo_get_Accessible, (CspKeyContainerInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, CryptoKeySecurity *, CspKeyContainerInfo_get_CryptoKeySecurity, (CspKeyContainerInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, CspKeyContainerInfo_get_Exportable, (CspKeyContainerInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, CspKeyContainerInfo_get_HardwareDevice, (CspKeyContainerInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00571730, String *, CspKeyContainerInfo_get_KeyContainerName, (CspKeyContainerInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01E83750, KeyNumber__Enum, CspKeyContainerInfo_get_KeyNumber, (CspKeyContainerInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, CspKeyContainerInfo_get_MachineKeyStore, (CspKeyContainerInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, CspKeyContainerInfo_get_Protected, (CspKeyContainerInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x004173F0, String *, CspKeyContainerInfo_get_ProviderName, (CspKeyContainerInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x020D03A0, int32_t, CspKeyContainerInfo_get_ProviderType, (CspKeyContainerInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A280, bool, CspKeyContainerInfo_get_RandomlyGenerated, (CspKeyContainerInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, CspKeyContainerInfo_get_Removable, (CspKeyContainerInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x020D03C0, String *, CspKeyContainerInfo_get_UniqueKeyContainerName, (CspKeyContainerInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x020D1FF0, void, DESTransform__ctor, (DESTransform * __this, SymmetricAlgorithm * symmAlgo, bool encryption, Byte__Array * key, Byte__Array * iv, MethodInfo * method));
DO_APP_FUNC(0x020D2410, uint32_t, DESTransform_CipherFunct, (DESTransform * __this, uint32_t r, int32_t n, MethodInfo * method));
DO_APP_FUNC(0x020D2850, void, DESTransform_Permutation, (Byte__Array * input, Byte__Array * output, UInt32__Array * permTab, bool preSwap, MethodInfo * method));
DO_APP_FUNC(0x020D2E10, void, DESTransform_BSwap, (Byte__Array * byteBuff, MethodInfo * method));
DO_APP_FUNC(0x020D2FB0, void, DESTransform_SetKey, (DESTransform * __this, Byte__Array * key, MethodInfo * method));
DO_APP_FUNC(0x020D34E0, void, DESTransform_ProcessBlock, (DESTransform * __this, Byte__Array * input, Byte__Array * output, MethodInfo * method));
DO_APP_FUNC(0x020D3A00, void, DESTransform_ECB, (DESTransform * __this, Byte__Array * input, Byte__Array * output, MethodInfo * method));
DO_APP_FUNC(0x020D3B10, Byte__Array *, DESTransform_GetStrongKey, (MethodInfo * method));
DO_APP_FUNC(0x020D3C60, void, DESTransform__cctor, (MethodInfo * method));
DO_APP_FUNC(0x020D5A60, void, DSACryptoServiceProvider__ctor, (DSACryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x020D5A80, void, DSACryptoServiceProvider__ctor_1, (DSACryptoServiceProvider * __this, CspParameters * parameters, MethodInfo * method));
DO_APP_FUNC(0x020D5AD0, void, DSACryptoServiceProvider__ctor_2, (DSACryptoServiceProvider * __this, int32_t dwKeySize, MethodInfo * method));
DO_APP_FUNC(0x020D5AE0, void, DSACryptoServiceProvider__ctor_3, (DSACryptoServiceProvider * __this, int32_t dwKeySize, CspParameters * parameters, MethodInfo * method));
DO_APP_FUNC(0x020D5B30, void, DSACryptoServiceProvider_Common, (DSACryptoServiceProvider * __this, int32_t dwKeySize, bool parameters, MethodInfo * method));
DO_APP_FUNC(0x020D6160, void, DSACryptoServiceProvider_Common_1, (DSACryptoServiceProvider * __this, CspParameters * parameters, MethodInfo * method));
DO_APP_FUNC(0x020D6320, void, DSACryptoServiceProvider_Finalize, (DSACryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, String *, DSACryptoServiceProvider_get_KeyExchangeAlgorithm, (DSACryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x020D63A0, int32_t, DSACryptoServiceProvider_get_KeySize, (DSACryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x004F4CE0, bool, DSACryptoServiceProvider_get_PersistKeyInCsp, (DSACryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x004F4CF0, void, DSACryptoServiceProvider_set_PersistKeyInCsp, (DSACryptoServiceProvider * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x020D63D0, bool, DSACryptoServiceProvider_get_PublicOnly, (DSACryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x020D63F0, String *, DSACryptoServiceProvider_get_SignatureAlgorithm, (DSACryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x020D6470, bool, DSACryptoServiceProvider_get_UseMachineKeyStore, (MethodInfo * method));
DO_APP_FUNC(0x020D64F0, void, DSACryptoServiceProvider_set_UseMachineKeyStore, (bool value, MethodInfo * method));
DO_APP_FUNC(0x020D6580, DSAParameters, DSACryptoServiceProvider_ExportParameters, (DSACryptoServiceProvider * __this, bool includePrivateParameters, MethodInfo * method));
DO_APP_FUNC(0x020D66B0, void, DSACryptoServiceProvider_ImportParameters, (DSACryptoServiceProvider * __this, DSAParameters parameters, MethodInfo * method));
DO_APP_FUNC(0x01D61480, Byte__Array *, DSACryptoServiceProvider_CreateSignature, (DSACryptoServiceProvider * __this, Byte__Array * rgbHash, MethodInfo * method));
DO_APP_FUNC(0x020D6700, Byte__Array *, DSACryptoServiceProvider_SignData, (DSACryptoServiceProvider * __this, Byte__Array * buffer, MethodInfo * method));
DO_APP_FUNC(0x020D6760, Byte__Array *, DSACryptoServiceProvider_SignData_1, (DSACryptoServiceProvider * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x020D67F0, Byte__Array *, DSACryptoServiceProvider_SignData_2, (DSACryptoServiceProvider * __this, Stream * inputStream, MethodInfo * method));
DO_APP_FUNC(0x020D6850, Byte__Array *, DSACryptoServiceProvider_SignHash, (DSACryptoServiceProvider * __this, Byte__Array * rgbHash, String * str, MethodInfo * method));
DO_APP_FUNC(0x020D6990, bool, DSACryptoServiceProvider_VerifyData, (DSACryptoServiceProvider * __this, Byte__Array * rgbData, Byte__Array * rgbSignature, MethodInfo * method));
DO_APP_FUNC(0x020D6A00, bool, DSACryptoServiceProvider_VerifyHash, (DSACryptoServiceProvider * __this, Byte__Array * rgbHash, String * str, Byte__Array * rgbSignature, MethodInfo * method));
DO_APP_FUNC(0x020D6B50, bool, DSACryptoServiceProvider_VerifySignature, (DSACryptoServiceProvider * __this, Byte__Array * rgbHash, Byte__Array * rgbSignature, MethodInfo * method));
DO_APP_FUNC(0x020D6B80, Byte__Array *, DSACryptoServiceProvider_HashData, (DSACryptoServiceProvider * __this, Byte__Array * data, int32_t offset, int32_t count, HashAlgorithmName hashAlgorithm, MethodInfo * method));
DO_APP_FUNC(0x020D6D10, Byte__Array *, DSACryptoServiceProvider_HashData_1, (DSACryptoServiceProvider * __this, Stream * data, HashAlgorithmName hashAlgorithm, MethodInfo * method));
DO_APP_FUNC(0x020D6E70, void, DSACryptoServiceProvider_Dispose, (DSACryptoServiceProvider * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x020D6ED0, void, DSACryptoServiceProvider_OnKeyGenerated, (DSACryptoServiceProvider * __this, Object * sender, EventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, CspKeyContainerInfo *, DSACryptoServiceProvider_get_CspKeyContainerInfo, (DSACryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x020D6F60, Byte__Array *, DSACryptoServiceProvider_ExportCspBlob, (DSACryptoServiceProvider * __this, bool includePrivateParameters, MethodInfo * method));
DO_APP_FUNC(0x020D6F80, void, DSACryptoServiceProvider_ImportCspBlob, (DSACryptoServiceProvider * __this, Byte__Array * keyBlob, MethodInfo * method));
DO_APP_FUNC(0x020DD610, void, MD5CryptoServiceProvider__ctor, (MD5CryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x020DD6E0, void, MD5CryptoServiceProvider_Finalize, (MD5CryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x020DD760, void, MD5CryptoServiceProvider_Dispose, (MD5CryptoServiceProvider * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x020DD7F0, void, MD5CryptoServiceProvider_HashCore, (MD5CryptoServiceProvider * __this, Byte__Array * rgb, int32_t ibStart, int32_t cbSize, MethodInfo * method));
DO_APP_FUNC(0x020DD910, Byte__Array *, MD5CryptoServiceProvider_HashFinal, (MD5CryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x020DDA60, void, MD5CryptoServiceProvider_Initialize, (MD5CryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x020DDB30, void, MD5CryptoServiceProvider_ProcessBlock, (MD5CryptoServiceProvider * __this, Byte__Array * inputBuffer, int32_t inputOffset, MethodInfo * method));
DO_APP_FUNC(0x020DF460, void, MD5CryptoServiceProvider_ProcessFinalBlock, (MD5CryptoServiceProvider * __this, Byte__Array * inputBuffer, int32_t inputOffset, int32_t inputCount, MethodInfo * method));
DO_APP_FUNC(0x020DF660, void, MD5CryptoServiceProvider_AddLength, (MD5CryptoServiceProvider * __this, uint64_t length, Byte__Array * buffer, int32_t position, MethodInfo * method));
DO_APP_FUNC(0x020DF7D0, void, MD5CryptoServiceProvider__cctor, (MethodInfo * method));
DO_APP_FUNC(0x028DEFC0, void, RC2Transform__ctor, (RC2Transform * __this, RC2 * rc2Algo, bool encryption, Byte__Array * key, Byte__Array * iv, MethodInfo * method));
DO_APP_FUNC(0x028DF770, void, RC2Transform_ECB, (RC2Transform * __this, Byte__Array * input, Byte__Array * output, MethodInfo * method));
DO_APP_FUNC(0x028E0790, void, RC2Transform__cctor, (MethodInfo * method));
DO_APP_FUNC(0x028E3DB0, void, RNGCryptoServiceProvider__cctor, (MethodInfo * method));
DO_APP_FUNC(0x028E3E20, void, RNGCryptoServiceProvider__ctor, (RNGCryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x028E3ED0, void, RNGCryptoServiceProvider__ctor_1, (RNGCryptoServiceProvider * __this, Byte__Array * rgb, MethodInfo * method));
DO_APP_FUNC(0x028E3F90, void, RNGCryptoServiceProvider__ctor_2, (RNGCryptoServiceProvider * __this, CspParameters * cspParams, MethodInfo * method));
DO_APP_FUNC(0x028E4040, void, RNGCryptoServiceProvider__ctor_3, (RNGCryptoServiceProvider * __this, String * str, MethodInfo * method));
DO_APP_FUNC(0x028E4150, void, RNGCryptoServiceProvider_Check, (RNGCryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, RNGCryptoServiceProvider_RngOpen, (MethodInfo * method));
DO_APP_FUNC(0x028E4210, void *, RNGCryptoServiceProvider_RngInitialize, (Byte__Array * seed, MethodInfo * method));
DO_APP_FUNC(0x028E4220, void *, RNGCryptoServiceProvider_RngGetBytes, (void * handle, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x028E42A0, void, RNGCryptoServiceProvider_RngClose, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x028E42B0, void, RNGCryptoServiceProvider_GetBytes, (RNGCryptoServiceProvider * __this, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x028E45A0, void, RNGCryptoServiceProvider_GetNonZeroBytes, (RNGCryptoServiceProvider * __this, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x028E47A0, void, RNGCryptoServiceProvider_Finalize, (RNGCryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RNGCryptoServiceProvider_Dispose, (RNGCryptoServiceProvider * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RSAPKCS1SignatureDeformatter__ctor, (RSAPKCS1SignatureDeformatter * __this, MethodInfo * method));
DO_APP_FUNC(0x01F76900, void, RSAPKCS1SignatureDeformatter__ctor_1, (RSAPKCS1SignatureDeformatter * __this, AsymmetricAlgorithm * key, MethodInfo * method));
DO_APP_FUNC(0x028ED210, void, RSAPKCS1SignatureDeformatter_SetHashAlgorithm, (RSAPKCS1SignatureDeformatter * __this, String * strName, MethodInfo * method));
DO_APP_FUNC(0x028ED2D0, void, RSAPKCS1SignatureDeformatter_SetKey, (RSAPKCS1SignatureDeformatter * __this, AsymmetricAlgorithm * key, MethodInfo * method));
DO_APP_FUNC(0x028ED3E0, bool, RSAPKCS1SignatureDeformatter_VerifySignature, (RSAPKCS1SignatureDeformatter * __this, Byte__Array * rgbHash, Byte__Array * rgbSignature, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RSAPKCS1SignatureFormatter__ctor, (RSAPKCS1SignatureFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x01F76900, void, RSAPKCS1SignatureFormatter__ctor_1, (RSAPKCS1SignatureFormatter * __this, AsymmetricAlgorithm * key, MethodInfo * method));
DO_APP_FUNC(0x028ED8B0, Byte__Array *, RSAPKCS1SignatureFormatter_CreateSignature, (RSAPKCS1SignatureFormatter * __this, Byte__Array * rgbHash, MethodInfo * method));
DO_APP_FUNC(0x028EDA30, void, RSAPKCS1SignatureFormatter_SetHashAlgorithm, (RSAPKCS1SignatureFormatter * __this, String * strName, MethodInfo * method));
DO_APP_FUNC(0x028EDAF0, void, RSAPKCS1SignatureFormatter_SetKey, (RSAPKCS1SignatureFormatter * __this, AsymmetricAlgorithm * key, MethodInfo * method));
DO_APP_FUNC(0x028F4BC0, void, SHA1Internal__ctor, (SHA1Internal * __this, MethodInfo * method));
DO_APP_FUNC(0x028F4C80, void, SHA1Internal_HashCore, (SHA1Internal * __this, Byte__Array * rgb, int32_t ibStart, int32_t cbSize, MethodInfo * method));
DO_APP_FUNC(0x028F4DA0, Byte__Array *, SHA1Internal_HashFinal, (SHA1Internal * __this, MethodInfo * method));
DO_APP_FUNC(0x028F4F00, void, SHA1Internal_Initialize, (SHA1Internal * __this, MethodInfo * method));
DO_APP_FUNC(0x028F5000, void, SHA1Internal_ProcessBlock, (SHA1Internal * __this, Byte__Array * inputBuffer, uint32_t inputOffset, MethodInfo * method));
DO_APP_FUNC(0x028F58E0, void, SHA1Internal_InitialiseBuff, (UInt32__Array * buff, Byte__Array * input, uint32_t inputOffset, MethodInfo * method));
DO_APP_FUNC(0x028F65E0, void, SHA1Internal_FillBuff, (UInt32__Array * buff, MethodInfo * method));
DO_APP_FUNC(0x028F6BF0, void, SHA1Internal_ProcessFinalBlock, (SHA1Internal * __this, Byte__Array * inputBuffer, int32_t inputOffset, int32_t inputCount, MethodInfo * method));
DO_APP_FUNC(0x028F6E10, void, SHA1Internal_AddLength, (SHA1Internal * __this, uint64_t length, Byte__Array * buffer, int32_t position, MethodInfo * method));
DO_APP_FUNC(0x028F4690, void, SHA1CryptoServiceProvider__ctor, (SHA1CryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x028F4880, void, SHA1CryptoServiceProvider_Finalize, (SHA1CryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x020DBBD0, void, SHA1CryptoServiceProvider_Dispose, (SHA1CryptoServiceProvider * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x028F4900, void, SHA1CryptoServiceProvider_HashCore, (SHA1CryptoServiceProvider * __this, Byte__Array * rgb, int32_t ibStart, int32_t cbSize, MethodInfo * method));
DO_APP_FUNC(0x028F4A30, Byte__Array *, SHA1CryptoServiceProvider_HashFinal, (SHA1CryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x028F4BA0, void, SHA1CryptoServiceProvider_Initialize, (SHA1CryptoServiceProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01E13600, void, TripleDESTransform__ctor, (TripleDESTransform * __this, TripleDES * algo, bool encryption, Byte__Array * key, Byte__Array * iv, MethodInfo * method));
DO_APP_FUNC(0x01E13E60, void, TripleDESTransform_ECB, (TripleDESTransform * __this, Byte__Array * input, Byte__Array * output, MethodInfo * method));
DO_APP_FUNC(0x01E14050, Byte__Array *, TripleDESTransform_GetStrongKey, (MethodInfo * method));
DO_APP_FUNC(0x01E15DC0, void, X509Certificate_1__ctor, (X509Certificate_1 * __this, Byte__Array * data, bool dates, MethodInfo * method));
DO_APP_FUNC(0x01E15E10, void, X509Certificate_1__ctor_1, (X509Certificate_1 * __this, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x01E15E50, void, X509Certificate_1__ctor_2, (X509Certificate_1 * __this, X509CertificateImpl * impl, MethodInfo * method));
DO_APP_FUNC(0x01E15F20, void, X509Certificate_1__ctor_3, (X509Certificate_1 * __this, X509Certificate_1 * cert, MethodInfo * method));
DO_APP_FUNC(0x01E160E0, void, X509Certificate_1_ImportHandle, (X509Certificate_1 * __this, X509CertificateImpl * impl, MethodInfo * method));
DO_APP_FUNC(0x01E16110, X509CertificateImpl *, X509Certificate_1_get_Impl, (X509Certificate_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01E16130, bool, X509Certificate_1_get_IsValid, (X509Certificate_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01E16150, bool, X509Certificate_1_Equals, (X509Certificate_1 * __this, X509Certificate_1 * other, MethodInfo * method));
DO_APP_FUNC(0x01E16290, Byte__Array *, X509Certificate_1_GetCertHash, (X509Certificate_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01E162F0, String *, X509Certificate_1_GetCertHashString, (X509Certificate_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01E16320, int32_t, X509Certificate_1_GetHashCode, (X509Certificate_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01E16380, String *, X509Certificate_1_GetIssuerName, (X509Certificate_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01E163C0, String *, X509Certificate_1_GetName, (X509Certificate_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01E16400, Byte__Array *, X509Certificate_1_GetPublicKey, (X509Certificate_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01E16440, Byte__Array *, X509Certificate_1_GetRawCertData, (X509Certificate_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01E16480, Byte__Array *, X509Certificate_1_GetSerialNumber, (X509Certificate_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01E164C0, String *, X509Certificate_1_GetSerialNumberString, (X509Certificate_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01E16610, String *, X509Certificate_1_ToString, (X509Certificate_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01E16650, String *, X509Certificate_1_ToString_1, (X509Certificate_1 * __this, bool fVerbose, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, X509Certificate_1__ctor_4, (X509Certificate_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01E166E0, void, X509Certificate_1__ctor_5, (X509Certificate_1 * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01E16810, String *, X509Certificate_1_get_Issuer, (X509Certificate_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01E16860, String *, X509Certificate_1_get_Subject, (X509Certificate_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01E168B0, bool, X509Certificate_1_Equals_1, (X509Certificate_1 * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01E169A0, void, X509Certificate_1_Import, (X509Certificate_1 * __this, Byte__Array * rawData, String * password, X509KeyStorageFlags__Enum keyStorageFlags, MethodInfo * method));
DO_APP_FUNC(0x01E16A00, void, X509Certificate_1_Import_1, (X509Certificate_1 * __this, String * fileName, String * password, X509KeyStorageFlags__Enum keyStorageFlags, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, X509Certificate_1_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization, (X509Certificate_1 * __this, Object * sender, MethodInfo * method));
DO_APP_FUNC(0x01E16A60, void, X509Certificate_1_System_Runtime_Serialization_ISerializable_GetObjectData, (X509Certificate_1 * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01D2CEB0, void, X509Certificate_1_Dispose, (X509Certificate_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01E16B70, void, X509Certificate_1_Dispose_1, (X509Certificate_1 * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01E16B90, void, X509Certificate_1_Reset, (X509Certificate_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01E16BD0, void, X509CertificateImpl_ThrowIfContextInvalid, (X509CertificateImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01E16C70, Byte__Array *, X509CertificateImpl_GetCertHash, (X509CertificateImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01E16CB0, int32_t, X509CertificateImpl_GetHashCode, (X509CertificateImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01E16D90, bool, X509CertificateImpl_Equals, (X509CertificateImpl * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01E16F60, void, X509CertificateImpl_Dispose, (X509CertificateImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0063D180, void, X509CertificateImpl_Dispose_1, (X509CertificateImpl * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01E17010, void, X509CertificateImpl_Finalize, (X509CertificateImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, X509CertificateImpl__ctor, (X509CertificateImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, X509CertificateImplMono__ctor, (X509CertificateImplMono * __this, X509Certificate * x509, MethodInfo * method));
DO_APP_FUNC(0x009B3690, bool, X509CertificateImplMono_get_IsValid, (X509CertificateImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x01E17090, X509CertificateImpl *, X509CertificateImplMono_Clone, (X509CertificateImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x01E171E0, String *, X509CertificateImplMono_GetIssuerName, (X509CertificateImplMono * __this, bool legacyV1Mode, MethodInfo * method));
DO_APP_FUNC(0x01E172F0, String *, X509CertificateImplMono_GetSubjectName, (X509CertificateImplMono * __this, bool legacyV1Mode, MethodInfo * method));
DO_APP_FUNC(0x01E17400, Byte__Array *, X509CertificateImplMono_GetRawCertData, (X509CertificateImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x01E17440, Byte__Array *, X509CertificateImplMono_GetCertHash, (X509CertificateImplMono * __this, bool lazy, MethodInfo * method));
DO_APP_FUNC(0x01E174B0, DateTime, X509CertificateImplMono_GetValidFrom, (X509CertificateImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x01E174F0, DateTime, X509CertificateImplMono_GetValidUntil, (X509CertificateImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x01E17530, bool, X509CertificateImplMono_Equals, (X509CertificateImplMono * __this, X509CertificateImpl * other, bool * result, MethodInfo * method));
DO_APP_FUNC(0x01E17540, Byte__Array *, X509CertificateImplMono_GetPublicKey, (X509CertificateImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x01E17580, Byte__Array *, X509CertificateImplMono_GetSerialNumber, (X509CertificateImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x01E175C0, String *, X509CertificateImplMono_ToString, (X509CertificateImplMono * __this, bool full, MethodInfo * method));
DO_APP_FUNC(0x002FBAF0, void, X509CertificateImplMono_Dispose, (X509CertificateImplMono * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01E178B0, void, X509Helper_InstallNativeHelper, (INativeCertificateHelper * helper, MethodInfo * method));
DO_APP_FUNC(0x01E17940, X509CertificateImpl *, X509Helper_Import, (Byte__Array * rawData, MethodInfo * method));
DO_APP_FUNC(0x01E17950, X509CertificateImpl *, X509Helper_InitFromCertificate, (X509Certificate_1 * cert, MethodInfo * method));
DO_APP_FUNC(0x01E17A80, X509CertificateImpl *, X509Helper_InitFromCertificate_1, (X509CertificateImpl * impl, MethodInfo * method));
DO_APP_FUNC(0x01E17CF0, bool, X509Helper_IsValid, (X509CertificateImpl * impl, MethodInfo * method));
DO_APP_FUNC(0x01E17D10, void, X509Helper_ThrowIfContextInvalid, (X509CertificateImpl * impl, MethodInfo * method));
DO_APP_FUNC(0x01E17DC0, Exception *, X509Helper_GetInvalidContextException, (MethodInfo * method));
DO_APP_FUNC(0x01E17F20, X509Certificate *, X509Helper_ImportPkcs12, (Byte__Array * rawData, String * password, MethodInfo * method));
DO_APP_FUNC(0x01E18530, Byte__Array *, X509Helper_PEM, (String * type, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x01E18730, Byte__Array *, X509Helper_ConvertData, (Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x01E18810, X509CertificateImpl *, X509Helper_ImportCore, (Byte__Array * rawData, MethodInfo * method));
DO_APP_FUNC(0x01E18A80, X509CertificateImpl *, X509Helper_Import_1, (Byte__Array * rawData, String * password, X509KeyStorageFlags__Enum keyStorageFlags, MethodInfo * method));
DO_APP_FUNC(0x01E18CD0, String *, X509Helper_ToHexString, (Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x01EE21A0, void, TargetFrameworkAttribute__ctor, (TargetFrameworkAttribute * __this, String * frameworkName, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, TargetFrameworkAttribute_set_FrameworkDisplayName, (TargetFrameworkAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01EE2100, void, BinaryCompatibility__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00611810, void, DeserializationEventHandler__ctor, (DeserializationEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x00673B90, void, DeserializationEventHandler_Invoke, (DeserializationEventHandler * __this, Object * sender, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, DeserializationEventHandler_BeginInvoke, (DeserializationEventHandler * __this, Object * sender, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, DeserializationEventHandler_EndInvoke, (DeserializationEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, SerializationEventHandler__ctor, (SerializationEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01D247B0, void, SerializationEventHandler_Invoke, (SerializationEventHandler * __this, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01EDCAA0, IAsyncResult *, SerializationEventHandler_BeginInvoke, (SerializationEventHandler * __this, StreamingContext context, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, SerializationEventHandler_EndInvoke, (SerializationEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, FormatterConverter__ctor, (FormatterConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x01D88010, Object *, FormatterConverter_Convert, (FormatterConverter * __this, Object * value, Type * type, MethodInfo * method));
DO_APP_FUNC(0x01D88120, bool, FormatterConverter_ToBoolean, (FormatterConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01D88230, int32_t, FormatterConverter_ToInt32, (FormatterConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01D88340, int64_t, FormatterConverter_ToInt64, (FormatterConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01D88450, float, FormatterConverter_ToSingle, (FormatterConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01D88560, String *, FormatterConverter_ToString, (FormatterConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01D88670, void, FormatterServices__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01D888B0, MemberInfo_1__Array *, FormatterServices_GetSerializableMembers, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x01D88AB0, bool, FormatterServices_CheckSerializable, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x01D88AE0, MemberInfo_1__Array *, FormatterServices_InternalGetSerializableMembers, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x01D89290, bool, FormatterServices_GetParentTypes, (RuntimeType * parentType, RuntimeType__Array * * parentTypes, int32_t * parentTypeCount, MethodInfo * method));
DO_APP_FUNC(0x01D89620, MemberInfo_1__Array *, FormatterServices_GetSerializableMembers_1, (Type * type, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01D89A90, Object *, FormatterServices_GetUninitializedObject, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x01D89CB0, Object *, FormatterServices_GetSafeUninitializedObject, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x01A98CD0, Object *, FormatterServices_nativeGetUninitializedObject, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x01A98CD0, Object *, FormatterServices_nativeGetSafeUninitializedObject, (RuntimeType * type, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, FormatterServices_GetEnableUnsafeTypeForwarders, (MethodInfo * method));
DO_APP_FUNC(0x01D89F70, bool, FormatterServices_UnsafeTypeForwardersIsEnabled, (MethodInfo * method));
DO_APP_FUNC(0x01D8A0A0, void, FormatterServices_SerializationSetValue, (MemberInfo_1 * fi, Object * target, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01D8A360, Object *, FormatterServices_PopulateObjectMembers, (Object * obj, MemberInfo_1__Array * members, Object__Array * data, MethodInfo * method));
DO_APP_FUNC(0x01D8A6C0, Object__Array *, FormatterServices_GetObjectData, (Object * obj, MemberInfo_1__Array * members, MethodInfo * method));
DO_APP_FUNC(0x01D8AAB0, Type *, FormatterServices_GetTypeFromAssembly, (Assembly * assem, String * name, MethodInfo * method));
DO_APP_FUNC(0x01D8AB90, Assembly *, FormatterServices_LoadAssemblyFromString, (String * assemblyName, MethodInfo * method));
DO_APP_FUNC(0x01D8ABA0, Assembly *, FormatterServices_LoadAssemblyFromStringNoThrow, (String * assemblyName, MethodInfo * method));
DO_APP_FUNC(0x01D8AC60, String *, FormatterServices_GetClrAssemblyName, (Type * type, bool * hasTypeForwardedFrom, MethodInfo * method));
DO_APP_FUNC(0x01D8AE10, String *, FormatterServices_GetClrTypeFullName, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x01D8AEF0, String *, FormatterServices_GetClrTypeFullNameForArray, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x01D8B1E0, String *, FormatterServices_GetClrTypeFullNameForNonArrayTypes, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, FormatterServices_c_DisplayClass9_0__ctor, (FormatterServices_c_DisplayClass9_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x01D8B580, MemberInfo_1__Array *, FormatterServices_c_DisplayClass9_0__GetSerializableMembers_b__0, (FormatterServices_c_DisplayClass9_0 * __this, MemberHolder * _, MethodInfo * method));
DO_APP_FUNC(0x01EE1DA0, void, SurrogateForCyclicalReference_GetObjectData, (SurrogateForCyclicalReference * __this, Object * obj, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01EE1E70, Object *, SurrogateForCyclicalReference_SetObjectData, (SurrogateForCyclicalReference * __this, Object * obj, SerializationInfo * info, StreamingContext context, ISurrogateSelector * selector, MethodInfo * method));
DO_APP_FUNC(0x01ED5870, void, MemberHolder__ctor, (MemberHolder * __this, Type * type, StreamingContext ctx, MethodInfo * method));
DO_APP_FUNC(0x0150BDE0, int32_t, MemberHolder_GetHashCode, (MemberHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED5880, bool, MemberHolder_Equals, (MemberHolder * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01ED7280, void, ObjectIDGenerator__ctor, (ObjectIDGenerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED7390, int32_t, ObjectIDGenerator_FindElement, (ObjectIDGenerator * __this, Object * obj, bool * found, MethodInfo * method));
DO_APP_FUNC(0x01ED7460, int64_t, ObjectIDGenerator_GetId, (ObjectIDGenerator * __this, Object * obj, bool * firstTime, MethodInfo * method));
DO_APP_FUNC(0x01ED7690, int64_t, ObjectIDGenerator_HasId, (ObjectIDGenerator * __this, Object * obj, bool * firstTime, MethodInfo * method));
DO_APP_FUNC(0x01ED77D0, void, ObjectIDGenerator_Rehash, (ObjectIDGenerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED7B60, void, ObjectIDGenerator__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01ED7C10, void, ObjectManager__ctor, (ObjectManager * __this, ISurrogateSelector * selector, StreamingContext context, bool checkSecurity, bool isCrossAppDomain, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, ObjectManager_CanCallGetType, (ObjectManager * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x002FBB10, void, ObjectManager_set_TopObject, (ObjectManager * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, Object *, ObjectManager_get_TopObject, (ObjectManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED7CC0, ObjectHolderList *, ObjectManager_get_SpecialFixupObjects, (ObjectManager * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ObjectManager__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01ED7E80, ObjectHolder *, ObjectManager_FindObjectHolder, (ObjectManager * __this, int64_t objectID, MethodInfo * method));
DO_APP_FUNC(0x01ED7EF0, ObjectHolder *, ObjectManager_FindOrCreateObjectHolder, (ObjectManager * __this, int64_t objectID, MethodInfo * method));
DO_APP_FUNC(0x01ED80F0, void, ObjectManager_AddObjectHolder, (ObjectManager * __this, ObjectHolder * holder, MethodInfo * method));
DO_APP_FUNC(0x01ED82C0, bool, ObjectManager_GetCompletionInfo, (ObjectManager * __this, FixupHolder * fixup, ObjectHolder * * holder, Object * * member, bool bThrowIfMissing, MethodInfo * method));
DO_APP_FUNC(0x01ED8670, void, ObjectManager_FixupSpecialObject, (ObjectManager * __this, ObjectHolder * holder, MethodInfo * method));
DO_APP_FUNC(0x01ED88C0, bool, ObjectManager_ResolveObjectReference, (ObjectManager * __this, ObjectHolder * holder, MethodInfo * method));
DO_APP_FUNC(0x01ED8B30, bool, ObjectManager_DoValueTypeFixup, (ObjectManager * __this, FieldInfo_1 * memberToFix, ObjectHolder * holder, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01ED9120, void, ObjectManager_CompleteObject, (ObjectManager * __this, ObjectHolder * holder, bool bObjectFullyComplete, MethodInfo * method));
DO_APP_FUNC(0x01ED98E0, void, ObjectManager_DoNewlyRegisteredObjectFixups, (ObjectManager * __this, ObjectHolder * holder, MethodInfo * method));
DO_APP_FUNC(0x01ED9AF0, Object *, ObjectManager_GetObject, (ObjectManager * __this, int64_t objectID, MethodInfo * method));
DO_APP_FUNC(0x01ED9C00, void, ObjectManager_RegisterString, (ObjectManager * __this, String * obj, int64_t objectID, SerializationInfo * info, int64_t idOfContainingObj, MemberInfo_1 * member, MethodInfo * method));
DO_APP_FUNC(0x01ED9E50, void, ObjectManager_RegisterObject, (ObjectManager * __this, Object * obj, int64_t objectID, SerializationInfo * info, int64_t idOfContainingObj, MemberInfo_1 * member, Int32__Array * arrayIndex, MethodInfo * method));
DO_APP_FUNC(0x01EDA550, void, ObjectManager_CompleteISerializableObject, (ObjectManager * __this, Object * obj, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01EDA770, RuntimeConstructorInfo *, ObjectManager_GetConstructor, (RuntimeType * t, MethodInfo * method));
DO_APP_FUNC(0x01EDA8C0, void, ObjectManager_DoFixups, (ObjectManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01EDADC0, void, ObjectManager_RegisterFixup, (ObjectManager * __this, FixupHolder * fixup, int64_t objectToBeFixed, int64_t objectRequired, MethodInfo * method));
DO_APP_FUNC(0x01EDAF10, void, ObjectManager_RecordFixup, (ObjectManager * __this, int64_t objectToBeFixed, MemberInfo_1 * member, int64_t objectRequired, MethodInfo * method));
DO_APP_FUNC(0x01EDB260, void, ObjectManager_RecordDelayedFixup, (ObjectManager * __this, int64_t objectToBeFixed, String * memberName, int64_t objectRequired, MethodInfo * method));
DO_APP_FUNC(0x01EDB480, void, ObjectManager_RecordArrayElementFixup, (ObjectManager * __this, int64_t arrayToBeFixed, Int32__Array * indices, int64_t objectRequired, MethodInfo * method));
DO_APP_FUNC(0x01EDB6A0, void, ObjectManager_RaiseDeserializationEvent, (ObjectManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01EDB6F0, void, ObjectManager_AddOnDeserialization, (ObjectManager * __this, DeserializationEventHandler * handler, MethodInfo * method));
DO_APP_FUNC(0x01EDB7B0, void, ObjectManager_AddOnDeserialized, (ObjectManager * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01EDB8A0, void, ObjectManager_RaiseOnDeserializedEvent, (ObjectManager * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01EDB990, void, ObjectManager_RaiseOnDeserializingEvent, (ObjectManager * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01ED59B0, void, ObjectHolder__ctor, (ObjectHolder * __this, int64_t objID, MethodInfo * method));
DO_APP_FUNC(0x01ED5A70, void, ObjectHolder__ctor_1, (ObjectHolder * __this, Object * obj, int64_t objID, SerializationInfo * info, ISerializationSurrogate * surrogate, int64_t idOfContainingObj, FieldInfo_1 * field, Int32__Array * arrayIndex, MethodInfo * method));
DO_APP_FUNC(0x01ED5D60, void, ObjectHolder__ctor_2, (ObjectHolder * __this, String * obj, int64_t objID, SerializationInfo * info, ISerializationSurrogate * surrogate, int64_t idOfContainingObj, FieldInfo_1 * field, Int32__Array * arrayIndex, MethodInfo * method));
DO_APP_FUNC(0x01ED5F30, void, ObjectHolder_IncrementDescendentFixups, (ObjectHolder * __this, int32_t amount, MethodInfo * method));
DO_APP_FUNC(0x01ED5F40, void, ObjectHolder_DecrementFixupsRemaining, (ObjectHolder * __this, ObjectManager * manager, MethodInfo * method));
DO_APP_FUNC(0x01ED5FB0, void, ObjectHolder_RemoveDependency, (ObjectHolder * __this, int64_t id, MethodInfo * method));
DO_APP_FUNC(0x01ED6050, void, ObjectHolder_AddFixup, (ObjectHolder * __this, FixupHolder * fixup, ObjectManager * manager, MethodInfo * method));
DO_APP_FUNC(0x01ED62A0, void, ObjectHolder_UpdateDescendentDependencyChain, (ObjectHolder * __this, int32_t amount, ObjectManager * manager, MethodInfo * method));
DO_APP_FUNC(0x01ED6310, void, ObjectHolder_AddDependency, (ObjectHolder * __this, int64_t dependentObject, MethodInfo * method));
DO_APP_FUNC(0x01ED65E0, void, ObjectHolder_UpdateData, (ObjectHolder * __this, Object * obj, SerializationInfo * info, ISerializationSurrogate * surrogate, int64_t idOfContainer, FieldInfo_1 * field, Int32__Array * arrayIndex, ObjectManager * manager, MethodInfo * method));
DO_APP_FUNC(0x005100F0, void, ObjectHolder_MarkForCompletionWhenAvailable, (ObjectHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED6850, void, ObjectHolder_SetFlags, (ObjectHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x01760C10, bool, ObjectHolder_get_IsIncompleteObjectReference, (ObjectHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED6920, void, ObjectHolder_set_IsIncompleteObjectReference, (ObjectHolder * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01ED6940, bool, ObjectHolder_get_RequiresDelayedFixup, (ObjectHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x01760C20, bool, ObjectHolder_get_RequiresValueTypeFixup, (ObjectHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED6950, bool, ObjectHolder_get_ValueTypeFixupPerformed, (ObjectHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED6980, void, ObjectHolder_set_ValueTypeFixupPerformed, (ObjectHolder * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x0194E610, bool, ObjectHolder_get_HasISerializable, (ObjectHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED6990, bool, ObjectHolder_get_HasSurrogate, (ObjectHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED69A0, bool, ObjectHolder_get_CanSurrogatedObjectValueChange, (ObjectHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED6A80, bool, ObjectHolder_get_CanObjectValueChange, (ObjectHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, int32_t, ObjectHolder_get_DirectlyDependentObjects, (ObjectHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED6AA0, int32_t, ObjectHolder_get_TotalDependentObjects, (ObjectHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x0051DB40, bool, ObjectHolder_get_Reachable, (ObjectHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x0051DB50, void, ObjectHolder_set_Reachable, (ObjectHolder * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01D60C50, bool, ObjectHolder_get_TypeLoadExceptionReachable, (ObjectHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, TypeLoadExceptionHolder *, ObjectHolder_get_TypeLoadException, (ObjectHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB90, void, ObjectHolder_set_TypeLoadException, (ObjectHolder * __this, TypeLoadExceptionHolder * value, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Object *, ObjectHolder_get_ObjectValue, (ObjectHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED6AB0, void, ObjectHolder_SetObjectValue, (ObjectHolder * __this, Object * obj, ObjectManager * manager, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, SerializationInfo *, ObjectHolder_get_SerializationInfo, (ObjectHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB10, void, ObjectHolder_set_SerializationInfo, (ObjectHolder * __this, SerializationInfo * value, MethodInfo * method));
DO_APP_FUNC(0x002FB990, ISerializationSurrogate *, ObjectHolder_get_Surrogate, (ObjectHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, LongList *, ObjectHolder_get_DependentObjects, (ObjectHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9E0, void, ObjectHolder_set_DependentObjects, (ObjectHolder * __this, LongList * value, MethodInfo * method));
DO_APP_FUNC(0x01ED6C00, bool, ObjectHolder_get_RequiresSerInfoFixup, (ObjectHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED6C20, void, ObjectHolder_set_RequiresSerInfoFixup, (ObjectHolder * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, ValueTypeFixupInfo *, ObjectHolder_get_ValueFixup, (ObjectHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED6C40, bool, ObjectHolder_get_CompletelyFixed, (ObjectHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED6C60, int64_t, ObjectHolder_get_ContainerID, (ObjectHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x00E332C0, void, FixupHolder__ctor, (FixupHolder * __this, int64_t id, Object * fixupInfo, int32_t fixupType, MethodInfo * method));
DO_APP_FUNC(0x01D87CC0, void, FixupHolderList__ctor, (FixupHolderList * __this, MethodInfo * method));
DO_APP_FUNC(0x01D87D60, void, FixupHolderList__ctor_1, (FixupHolderList * __this, int32_t startingSize, MethodInfo * method));
DO_APP_FUNC(0x01D87E00, void, FixupHolderList_Add, (FixupHolderList * __this, FixupHolder * fixup, MethodInfo * method));
DO_APP_FUNC(0x01D87F50, void, FixupHolderList_EnlargeArray, (FixupHolderList * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED5410, void, LongList__ctor, (LongList * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED54B0, void, LongList__ctor_1, (LongList * __this, int32_t startingSize, MethodInfo * method));
DO_APP_FUNC(0x01ED5550, void, LongList_Add, (LongList * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, LongList_get_Count, (LongList * __this, MethodInfo * method));
DO_APP_FUNC(0x00443280, void, LongList_StartEnumeration, (LongList * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED5670, bool, LongList_MoveNext, (LongList * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED56E0, int64_t, LongList_get_Current, (LongList * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED5720, bool, LongList_RemoveElement, (LongList * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01ED57B0, void, LongList_EnlargeArray, (LongList * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED6C70, void, ObjectHolderList__ctor, (ObjectHolderList * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED6D10, void, ObjectHolderList__ctor_1, (ObjectHolderList * __this, int32_t startingSize, MethodInfo * method));
DO_APP_FUNC(0x01ED6DB0, void, ObjectHolderList_Add, (ObjectHolderList * __this, ObjectHolder * value, MethodInfo * method));
DO_APP_FUNC(0x01ED6F00, ObjectHolderListEnumerator *, ObjectHolderList_GetFixupEnumerator, (ObjectHolderList * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED7060, void, ObjectHolderList_EnlargeArray, (ObjectHolderList * __this, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, ObjectHolderList_get_Version, (ObjectHolderList * __this, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, ObjectHolderList_get_Count, (ObjectHolderList * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED7120, void, ObjectHolderListEnumerator__ctor, (ObjectHolderListEnumerator * __this, ObjectHolderList * list, bool isFixupEnumerator, MethodInfo * method));
DO_APP_FUNC(0x01ED7150, bool, ObjectHolderListEnumerator_MoveNext, (ObjectHolderListEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED7230, ObjectHolder *, ObjectHolderListEnumerator_get_Current, (ObjectHolderListEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, TypeLoadExceptionHolder__ctor, (TypeLoadExceptionHolder * __this, String * typeName, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, TypeLoadExceptionHolder_get_TypeName, (TypeLoadExceptionHolder * __this, MethodInfo * method));
DO_APP_FUNC(0x01EDBB50, void, SafeSerializationEventArgs__ctor, (SafeSerializationEventArgs * __this, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x002FB950, IList_1_System_Object_ *, SafeSerializationEventArgs_get_SerializedStates, (SafeSerializationEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SafeSerializationManager__ctor, (SafeSerializationManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01EDBCD0, void, SafeSerializationManager__ctor_1, (SafeSerializationManager * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x00519290, bool, SafeSerializationManager_get_IsActive, (SafeSerializationManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01EDBEC0, void, SafeSerializationManager_CompleteSerialization, (SafeSerializationManager * __this, Object * serializedObject, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01EDC230, void, SafeSerializationManager_CompleteDeserialization, (SafeSerializationManager * __this, Object * deserializedObject, MethodInfo * method));
DO_APP_FUNC(0x01EDC4E0, void, SafeSerializationManager_System_Runtime_Serialization_ISerializable_GetObjectData, (SafeSerializationManager * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01EDC5D0, Object *, SafeSerializationManager_System_Runtime_Serialization_IObjectReference_GetRealObject, (SafeSerializationManager * __this, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01EDC990, void, SafeSerializationManager_OnDeserialized, (SafeSerializationManager * __this, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x00D34AF0, void, OptionalFieldAttribute__ctor, (OptionalFieldAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01EDBA80, void, OptionalFieldAttribute_set_VersionAdded, (OptionalFieldAttribute * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, OnSerializingAttribute__ctor, (OnSerializingAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, OnDeserializingAttribute__ctor, (OnDeserializingAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, OnDeserializedAttribute__ctor, (OnDeserializedAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01EDCA90, void, SerializationBinder_BindToName, (SerializationBinder * __this, Type * serializedType, String * * assemblyName, String * * typeName, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SerializationBinder__ctor, (SerializationBinder * __this, MethodInfo * method));
DO_APP_FUNC(0x01EDCB70, List_1_System_Reflection_MethodInfo_ *, SerializationEvents_GetMethodsWithAttribute, (SerializationEvents * __this, Type * attribute, Type * t, MethodInfo * method));
DO_APP_FUNC(0x01EDCE50, void, SerializationEvents__ctor, (SerializationEvents * __this, Type * t, MethodInfo * method));
DO_APP_FUNC(0x01EDCF90, bool, SerializationEvents_get_HasOnSerializingEvents, (SerializationEvents * __this, MethodInfo * method));
DO_APP_FUNC(0x01EDCFB0, void, SerializationEvents_InvokeOnSerializing, (SerializationEvents * __this, Object * obj, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01EDD210, void, SerializationEvents_InvokeOnDeserializing, (SerializationEvents * __this, Object * obj, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01EDD470, void, SerializationEvents_InvokeOnDeserialized, (SerializationEvents * __this, Object * obj, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01EDD6D0, SerializationEventHandler *, SerializationEvents_AddOnSerialized, (SerializationEvents * __this, Object * obj, SerializationEventHandler * handler, MethodInfo * method));
DO_APP_FUNC(0x01EDD8F0, SerializationEventHandler *, SerializationEvents_AddOnDeserialized, (SerializationEvents * __this, Object * obj, SerializationEventHandler * handler, MethodInfo * method));
DO_APP_FUNC(0x01EDDB10, SerializationEvents *, SerializationEventsCache_GetSerializationEventsForType, (Type * t, MethodInfo * method));
DO_APP_FUNC(0x01EDE030, void, SerializationEventsCache__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01EDE190, void, SerializationException__ctor, (SerializationException * __this, MethodInfo * method));
DO_APP_FUNC(0x01EDE250, void, SerializationException__ctor_1, (SerializationException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01EDE270, void, SerializationException__ctor_2, (SerializationException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, SerializationException__ctor_3, (SerializationException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01EDE290, void, SerializationException__cctor, (MethodInfo * method));
DO_APP_FUNC(0x017171B0, Module *, SerializationFieldInfo_get_Module, (SerializationFieldInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01717180, int32_t, SerializationFieldInfo_get_MetadataToken, (SerializationFieldInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01EDE320, void, SerializationFieldInfo__ctor, (SerializationFieldInfo * __this, RuntimeFieldInfo * field, String * namePrefix, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, SerializationFieldInfo_get_Name, (SerializationFieldInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01717090, Type *, SerializationFieldInfo_get_DeclaringType, (SerializationFieldInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00442880, Type *, SerializationFieldInfo_get_ReflectedType, (SerializationFieldInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01EDE3F0, Object__Array *, SerializationFieldInfo_GetCustomAttributes, (SerializationFieldInfo * __this, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x01EDE420, Object__Array *, SerializationFieldInfo_GetCustomAttributes_1, (SerializationFieldInfo * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x01EDE450, bool, SerializationFieldInfo_IsDefined, (SerializationFieldInfo * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x01EDE480, Type *, SerializationFieldInfo_get_FieldType, (SerializationFieldInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01852620, Object *, SerializationFieldInfo_GetValue, (SerializationFieldInfo * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01EDE4B0, Object *, SerializationFieldInfo_InternalGetValue, (SerializationFieldInfo * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01EDE5F0, void, SerializationFieldInfo_SetValue, (SerializationFieldInfo * __this, Object * obj, Object * value, BindingFlags__Enum invokeAttr, Binder * binder, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x01EDE620, void, SerializationFieldInfo_InternalSetValue, (SerializationFieldInfo * __this, Object * obj, Object * value, BindingFlags__Enum invokeAttr, Binder * binder, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x002FA280, RuntimeFieldInfo *, SerializationFieldInfo_get_FieldInfo, (SerializationFieldInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01717210, RuntimeFieldHandle, SerializationFieldInfo_get_FieldHandle, (SerializationFieldInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x017171E0, FieldAttributes__Enum, SerializationFieldInfo_get_Attributes, (SerializationFieldInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01EDE780, void, SerializationInfo__ctor, (SerializationInfo * __this, Type * type, IFormatterConverter * converter, MethodInfo * method));
DO_APP_FUNC(0x01EDE7A0, void, SerializationInfo__ctor_1, (SerializationInfo * __this, Type * type, IFormatterConverter * converter, bool requireSameTokenInPartialTrust, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, String *, SerializationInfo_get_FullTypeName, (SerializationInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, String *, SerializationInfo_get_AssemblyName, (SerializationInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01EDEA60, void, SerializationInfo_SetType, (SerializationInfo * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x01EDEC30, bool, SerializationInfo_Compare, (Byte__Array * a, Byte__Array * b, MethodInfo * method));
DO_APP_FUNC(0x01EDECC0, void, SerializationInfo_DemandForUnsafeAssemblyNameAssignments, (String * originalAssemblyName, String * newAssemblyName, MethodInfo * method));
DO_APP_FUNC(0x01EDECD0, bool, SerializationInfo_IsAssemblyNameAssignmentSafe, (String * originalAssemblyName, String * newAssemblyName, MethodInfo * method));
DO_APP_FUNC(0x00654950, int32_t, SerializationInfo_get_MemberCount, (SerializationInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, Type *, SerializationInfo_get_ObjectType, (SerializationInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00585310, bool, SerializationInfo_get_IsFullTypeNameSetExplicit, (SerializationInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00DFE800, bool, SerializationInfo_get_IsAssemblyNameSetExplicit, (SerializationInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01EDF1C0, SerializationInfoEnumerator *, SerializationInfo_GetEnumerator, (SerializationInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01EDF340, void, SerializationInfo_ExpandArrays, (SerializationInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01EDF460, void, SerializationInfo_AddValue, (SerializationInfo * __this, String * name, Object * value, Type * type, MethodInfo * method));
DO_APP_FUNC(0x01EDF590, void, SerializationInfo_AddValue_1, (SerializationInfo * __this, String * name, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01EDF680, void, SerializationInfo_AddValue_2, (SerializationInfo * __this, String * name, bool value, MethodInfo * method));
DO_APP_FUNC(0x01EDF780, void, SerializationInfo_AddValue_3, (SerializationInfo * __this, String * name, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x01EDF880, void, SerializationInfo_AddValue_4, (SerializationInfo * __this, String * name, uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x01EDF980, void, SerializationInfo_AddValue_5, (SerializationInfo * __this, String * name, int16_t value, MethodInfo * method));
DO_APP_FUNC(0x01EDFA80, void, SerializationInfo_AddValue_6, (SerializationInfo * __this, String * name, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01EDFB80, void, SerializationInfo_AddValue_7, (SerializationInfo * __this, String * name, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01EDFC70, void, SerializationInfo_AddValue_8, (SerializationInfo * __this, String * name, uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x01EDFD60, void, SerializationInfo_AddValue_9, (SerializationInfo * __this, String * name, float value, MethodInfo * method));
DO_APP_FUNC(0x01EDFE60, void, SerializationInfo_AddValue_10, (SerializationInfo * __this, String * name, DateTime value, MethodInfo * method));
DO_APP_FUNC(0x01EDFF50, void, SerializationInfo_AddValueInternal, (SerializationInfo * __this, String * name, Object * value, Type * type, MethodInfo * method));
DO_APP_FUNC(0x01EE02F0, void, SerializationInfo_UpdateValue, (SerializationInfo * __this, String * name, Object * value, Type * type, MethodInfo * method));
DO_APP_FUNC(0x01EE0410, int32_t, SerializationInfo_FindElement, (SerializationInfo * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01EE0540, Object *, SerializationInfo_GetElement, (SerializationInfo * __this, String * name, Type * * foundType, MethodInfo * method));
DO_APP_FUNC(0x01EE06C0, Object *, SerializationInfo_GetElementNoThrow, (SerializationInfo * __this, String * name, Type * * foundType, MethodInfo * method));
DO_APP_FUNC(0x01EE0760, Object *, SerializationInfo_GetValue, (SerializationInfo * __this, String * name, Type * type, MethodInfo * method));
DO_APP_FUNC(0x01EE0940, Object *, SerializationInfo_GetValueNoThrow, (SerializationInfo * __this, String * name, Type * type, MethodInfo * method));
DO_APP_FUNC(0x01EE0AC0, bool, SerializationInfo_GetBoolean, (SerializationInfo * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01EE0C00, int32_t, SerializationInfo_GetInt32, (SerializationInfo * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01EE0D40, int64_t, SerializationInfo_GetInt64, (SerializationInfo * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01EE0E80, float, SerializationInfo_GetSingle, (SerializationInfo * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01EE0FC0, String *, SerializationInfo_GetString, (SerializationInfo * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x00107C10, Object *, SerializationEntry_get_Value, (SerializationEntry__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00107C20, String *, SerializationEntry_get_Name, (SerializationEntry__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D7CA0, void, SerializationEntry__ctor, (SerializationEntry__Boxed * __this, String * entryName, Object * entryValue, Type * entryType, MethodInfo * method));
DO_APP_FUNC(0x01EE10F0, void, SerializationInfoEnumerator__ctor, (SerializationInfoEnumerator * __this, String__Array * members, Object__Array * info, Type__Array * types, int32_t numItems, MethodInfo * method));
DO_APP_FUNC(0x01EE1120, bool, SerializationInfoEnumerator_MoveNext, (SerializationInfoEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE1140, Object *, SerializationInfoEnumerator_System_Collections_IEnumerator_get_Current, (SerializationInfoEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE12E0, SerializationEntry, SerializationInfoEnumerator_get_Current, (SerializationInfoEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE1450, void, SerializationInfoEnumerator_Reset, (SerializationInfoEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE1460, String *, SerializationInfoEnumerator_get_Name, (SerializationInfoEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE1550, Object *, SerializationInfoEnumerator_get_Value, (SerializationInfoEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE1640, Type *, SerializationInfoEnumerator_get_ObjectType, (SerializationInfoEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE1730, void, SerializationObjectManager__ctor, (SerializationObjectManager * __this, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01EE1960, void, SerializationObjectManager_RegisterObject, (SerializationObjectManager * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01EE1BA0, void, SerializationObjectManager_RaiseOnSerializedEvent, (SerializationObjectManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE1BD0, void, SerializationObjectManager_AddOnSerialized, (SerializationObjectManager * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x001D7E30, void, StreamingContext__ctor, (StreamingContext__Boxed * __this, StreamingContextStates__Enum state, MethodInfo * method));
DO_APP_FUNC(0x0018ED30, void, StreamingContext__ctor_1, (StreamingContext__Boxed * __this, StreamingContextStates__Enum state, Object * additional, MethodInfo * method));
DO_APP_FUNC(0x00107C00, Object *, StreamingContext_get_Context, (StreamingContext__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D7E40, bool, StreamingContext_Equals, (StreamingContext__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0010A860, int32_t, StreamingContext_GetHashCode, (StreamingContext__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0010A860, StreamingContextStates__Enum, StreamingContext_get_State, (StreamingContext__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01EE1F40, void, ValueTypeFixupInfo__ctor, (ValueTypeFixupInfo * __this, int64_t containerID, FieldInfo_1 * member, Int32__Array * parentIndex, MethodInfo * method));
DO_APP_FUNC(0x002FA280, int64_t, ValueTypeFixupInfo_get_ContainerID, (ValueTypeFixupInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, FieldInfo_1 *, ValueTypeFixupInfo_get_ParentField, (ValueTypeFixupInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, Int32__Array *, ValueTypeFixupInfo_get_ParentIndex, (ValueTypeFixupInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01D8C320, BinaryTypeEnum__Enum, BinaryConverter_GetBinaryTypeInfo, (Type * type, WriteObjectInfo * objectInfo, String * typeName, ObjectWriter * objectWriter, Object * * typeInformation, int32_t * assemId, MethodInfo * method));
DO_APP_FUNC(0x01D8C6E0, BinaryTypeEnum__Enum, BinaryConverter_GetParserBinaryTypeInfo, (Type * type, Object * * typeInformation, MethodInfo * method));
DO_APP_FUNC(0x01D8C9B0, void, BinaryConverter_WriteTypeInfo, (BinaryTypeEnum__Enum binaryTypeEnum, Object * typeInformation, int32_t assemId, _BinaryWriter * sout, MethodInfo * method));
DO_APP_FUNC(0x01D8CC70, Object *, BinaryConverter_ReadTypeInfo, (BinaryTypeEnum__Enum binaryTypeEnum, _BinaryParser * input, int32_t * assemId, MethodInfo * method));
DO_APP_FUNC(0x01D8CED0, void, BinaryConverter_TypeFromInfo, (BinaryTypeEnum__Enum binaryTypeEnum, Object * typeInformation, ObjectReader * objectReader, BinaryAssemblyInfo * assemblyInfo, InternalPrimitiveTypeE__Enum * primitiveTypeEnum, String * * typeString, Type * * type, bool * isVariant, MethodInfo * method));
DO_APP_FUNC(0x00EB1B80, bool, IOUtil_FlagTest, (MessageEnum__Enum flag, MessageEnum__Enum target, MethodInfo * method));
DO_APP_FUNC(0x01D92630, void, IOUtil_WriteStringWithCode, (String * value, _BinaryWriter * sout, MethodInfo * method));
DO_APP_FUNC(0x01D926E0, void, IOUtil_WriteWithCode, (Type * type, Object * value, _BinaryWriter * sout, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, BinaryAssemblyInfo__ctor, (BinaryAssemblyInfo * __this, String * assemblyString, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, BinaryAssemblyInfo__ctor_1, (BinaryAssemblyInfo * __this, String * assemblyString, Assembly * assembly, MethodInfo * method));
DO_APP_FUNC(0x01D8C1C0, Assembly *, BinaryAssemblyInfo_GetAssembly, (BinaryAssemblyInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00D34AF0, void, SerializationHeaderRecord__ctor, (SerializationHeaderRecord * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA1550, void, SerializationHeaderRecord__ctor_1, (SerializationHeaderRecord * __this, BinaryHeaderEnum__Enum binaryHeaderEnum, int32_t topId, int32_t headerId, int32_t majorVersion, int32_t minorVersion, MethodInfo * method));
DO_APP_FUNC(0x01DA1580, void, SerializationHeaderRecord_Write, (SerializationHeaderRecord * __this, _BinaryWriter * sout, MethodInfo * method));
DO_APP_FUNC(0x01B5AAD0, int32_t, SerializationHeaderRecord_GetInt32, (Byte__Array * buffer, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01DA1670, void, SerializationHeaderRecord_Read, (SerializationHeaderRecord * __this, _BinaryParser * input, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SerializationHeaderRecord_Dump, (SerializationHeaderRecord * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BinaryAssembly__ctor, (BinaryAssembly * __this, MethodInfo * method));
DO_APP_FUNC(0x0091DD30, void, BinaryAssembly_Set, (BinaryAssembly * __this, int32_t assemId, String * assemblyString, MethodInfo * method));
DO_APP_FUNC(0x01D8C0C0, void, BinaryAssembly_Write, (BinaryAssembly * __this, _BinaryWriter * sout, MethodInfo * method));
DO_APP_FUNC(0x01D8C150, void, BinaryAssembly_Read, (BinaryAssembly * __this, _BinaryParser * input, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BinaryAssembly_Dump, (BinaryAssembly * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BinaryCrossAppDomainAssembly__ctor, (BinaryCrossAppDomainAssembly * __this, MethodInfo * method));
DO_APP_FUNC(0x01D8D3F0, void, BinaryCrossAppDomainAssembly_Read, (BinaryCrossAppDomainAssembly * __this, _BinaryParser * input, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BinaryCrossAppDomainAssembly_Dump, (BinaryCrossAppDomainAssembly * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BinaryObject__ctor, (BinaryObject * __this, MethodInfo * method));
DO_APP_FUNC(0x01857090, void, BinaryObject_Set, (BinaryObject * __this, int32_t objectId, int32_t mapId, MethodInfo * method));
DO_APP_FUNC(0x01D8E970, void, BinaryObject_Write, (BinaryObject * __this, _BinaryWriter * sout, MethodInfo * method));
DO_APP_FUNC(0x01D8D3F0, void, BinaryObject_Read, (BinaryObject * __this, _BinaryParser * input, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BinaryObject_Dump, (BinaryObject * __this, MethodInfo * method));
DO_APP_FUNC(0x01D8E470, void, BinaryMethodCall_Write, (BinaryMethodCall * __this, _BinaryWriter * sout, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BinaryMethodCall_Dump, (BinaryMethodCall * __this, MethodInfo * method));
DO_APP_FUNC(0x00DC8A40, void, BinaryMethodCall__ctor, (BinaryMethodCall * __this, MethodInfo * method));
DO_APP_FUNC(0x01D8E680, void, BinaryMethodReturn__cctor, (MethodInfo * method));
DO_APP_FUNC(0x014751D0, void, BinaryMethodReturn__ctor, (BinaryMethodReturn * __this, MethodInfo * method));
DO_APP_FUNC(0x01D8E760, void, BinaryMethodReturn_Write, (BinaryMethodReturn * __this, _BinaryWriter * sout, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BinaryMethodReturn_Dump, (BinaryMethodReturn * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BinaryObjectString__ctor, (BinaryObjectString * __this, MethodInfo * method));
DO_APP_FUNC(0x0091DD30, void, BinaryObjectString_Set, (BinaryObjectString * __this, int32_t objectId, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D8EA00, void, BinaryObjectString_Write, (BinaryObjectString * __this, _BinaryWriter * sout, MethodInfo * method));
DO_APP_FUNC(0x01D8C150, void, BinaryObjectString_Read, (BinaryObjectString * __this, _BinaryParser * input, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BinaryObjectString_Dump, (BinaryObjectString * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BinaryCrossAppDomainString__ctor, (BinaryCrossAppDomainString * __this, MethodInfo * method));
DO_APP_FUNC(0x01D8D3F0, void, BinaryCrossAppDomainString_Read, (BinaryCrossAppDomainString * __this, _BinaryParser * input, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BinaryCrossAppDomainString_Dump, (BinaryCrossAppDomainString * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BinaryCrossAppDomainMap__ctor, (BinaryCrossAppDomainMap * __this, MethodInfo * method));
DO_APP_FUNC(0x01D8D460, void, BinaryCrossAppDomainMap_Read, (BinaryCrossAppDomainMap * __this, _BinaryParser * input, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BinaryCrossAppDomainMap_Dump, (BinaryCrossAppDomainMap * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MemberPrimitiveTyped__ctor, (MemberPrimitiveTyped * __this, MethodInfo * method));
DO_APP_FUNC(0x0091DD30, void, MemberPrimitiveTyped_Set, (MemberPrimitiveTyped * __this, InternalPrimitiveTypeE__Enum primitiveTypeEnum, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01D93040, void, MemberPrimitiveTyped_Write, (MemberPrimitiveTyped * __this, _BinaryWriter * sout, MethodInfo * method));
DO_APP_FUNC(0x01D930C0, void, MemberPrimitiveTyped_Read, (MemberPrimitiveTyped * __this, _BinaryParser * input, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MemberPrimitiveTyped_Dump, (MemberPrimitiveTyped * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BinaryObjectWithMap__ctor, (BinaryObjectWithMap * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, BinaryObjectWithMap__ctor_1, (BinaryObjectWithMap * __this, BinaryHeaderEnum__Enum binaryHeaderEnum, MethodInfo * method));
DO_APP_FUNC(0x01D8EA90, void, BinaryObjectWithMap_Set, (BinaryObjectWithMap * __this, int32_t objectId, String * name, int32_t numMembers, String__Array * memberNames, int32_t assemId, MethodInfo * method));
DO_APP_FUNC(0x01D8EAC0, void, BinaryObjectWithMap_Write, (BinaryObjectWithMap * __this, _BinaryWriter * sout, MethodInfo * method));
DO_APP_FUNC(0x01D8EC10, void, BinaryObjectWithMap_Read, (BinaryObjectWithMap * __this, _BinaryParser * input, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BinaryObjectWithMap_Dump, (BinaryObjectWithMap * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BinaryObjectWithMapTyped__ctor, (BinaryObjectWithMapTyped * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, BinaryObjectWithMapTyped__ctor_1, (BinaryObjectWithMapTyped * __this, BinaryHeaderEnum__Enum binaryHeaderEnum, MethodInfo * method));
DO_APP_FUNC(0x01D8EE00, void, BinaryObjectWithMapTyped_Set, (BinaryObjectWithMapTyped * __this, int32_t objectId, String * name, int32_t numMembers, String__Array * memberNames, BinaryTypeEnum__Enum__Array * binaryTypeEnumA, Object__Array * typeInformationA, Int32__Array * memberAssemIds, int32_t assemId, MethodInfo * method));
DO_APP_FUNC(0x01D8EE50, void, BinaryObjectWithMapTyped_Write, (BinaryObjectWithMapTyped * __this, _BinaryWriter * sout, MethodInfo * method));
DO_APP_FUNC(0x01D8F0F0, void, BinaryObjectWithMapTyped_Read, (BinaryObjectWithMapTyped * __this, _BinaryParser * input, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BinaryArray__ctor, (BinaryArray * __this, MethodInfo * method));
DO_APP_FUNC(0x004C5130, void, BinaryArray__ctor_1, (BinaryArray * __this, BinaryHeaderEnum__Enum binaryHeaderEnum, MethodInfo * method));
DO_APP_FUNC(0x01D8B670, void, BinaryArray_Set, (BinaryArray * __this, int32_t objectId, int32_t rank, Int32__Array * lengthA, Int32__Array * lowerBoundA, BinaryTypeEnum__Enum binaryTypeEnum, Object * typeInformation, BinaryArrayTypeEnum__Enum binaryArrayTypeEnum, int32_t assemId, MethodInfo * method));
DO_APP_FUNC(0x01D8B6E0, void, BinaryArray_Write, (BinaryArray * __this, _BinaryWriter * sout, MethodInfo * method));
DO_APP_FUNC(0x01D8BBC0, void, BinaryArray_Read, (BinaryArray * __this, _BinaryParser * input, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MemberPrimitiveUnTyped__ctor, (MemberPrimitiveUnTyped * __this, MethodInfo * method));
DO_APP_FUNC(0x0091DD30, void, MemberPrimitiveUnTyped_Set, (MemberPrimitiveUnTyped * __this, InternalPrimitiveTypeE__Enum typeInformation, Object * value, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, MemberPrimitiveUnTyped_Set_1, (MemberPrimitiveUnTyped * __this, InternalPrimitiveTypeE__Enum typeInformation, MethodInfo * method));
DO_APP_FUNC(0x01D93120, void, MemberPrimitiveUnTyped_Write, (MemberPrimitiveUnTyped * __this, _BinaryWriter * sout, MethodInfo * method));
DO_APP_FUNC(0x01D93150, void, MemberPrimitiveUnTyped_Read, (MemberPrimitiveUnTyped * __this, _BinaryParser * input, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MemberPrimitiveUnTyped_Dump, (MemberPrimitiveUnTyped * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MemberReference__ctor, (MemberReference * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, MemberReference_Set, (MemberReference * __this, int32_t idRef, MethodInfo * method));
DO_APP_FUNC(0x01D93180, void, MemberReference_Write, (MemberReference * __this, _BinaryWriter * sout, MethodInfo * method));
DO_APP_FUNC(0x01D8D460, void, MemberReference_Read, (MemberReference * __this, _BinaryParser * input, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MemberReference_Dump, (MemberReference * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ObjectNull__ctor, (ObjectNull * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, ObjectNull_SetNullCount, (ObjectNull * __this, int32_t nullCount, MethodInfo * method));
DO_APP_FUNC(0x01D94530, void, ObjectNull_Write, (ObjectNull * __this, _BinaryWriter * sout, MethodInfo * method));
DO_APP_FUNC(0x01D94660, void, ObjectNull_Read, (ObjectNull * __this, _BinaryParser * input, BinaryHeaderEnum__Enum binaryHeaderEnum, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ObjectNull_Dump, (ObjectNull * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MessageEnd__ctor, (MessageEnd * __this, MethodInfo * method));
DO_APP_FUNC(0x01D931F0, void, MessageEnd_Write, (MessageEnd * __this, _BinaryWriter * sout, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MessageEnd_Read, (MessageEnd * __this, _BinaryParser * input, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MessageEnd_Dump, (MessageEnd * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MessageEnd_Dump_1, (MessageEnd * __this, Stream * sout, MethodInfo * method));
DO_APP_FUNC(0x01D93850, void, ObjectMap__ctor, (ObjectMap * __this, String * objectName, Type * objectType, String__Array * memberNames, ObjectReader * objectReader, int32_t objectId, BinaryAssemblyInfo * assemblyInfo, MethodInfo * method));
DO_APP_FUNC(0x01D93B40, void, ObjectMap__ctor_1, (ObjectMap * __this, String * objectName, String__Array * memberNames, BinaryTypeEnum__Enum__Array * binaryTypeEnumA, Object__Array * typeInformationA, Int32__Array * memberAssemIds, ObjectReader * objectReader, int32_t objectId, BinaryAssemblyInfo * assemblyInfo, SizedArray * assemIdToAssemblyTable, MethodInfo * method));
DO_APP_FUNC(0x01D93F90, ReadObjectInfo *, ObjectMap_CreateObjectInfo, (ObjectMap * __this, SerializationInfo * * si, Object__Array * * memberData, MethodInfo * method));
DO_APP_FUNC(0x01D93FF0, ObjectMap *, ObjectMap_Create, (String * name, Type * objectType, String__Array * memberNames, ObjectReader * objectReader, int32_t objectId, BinaryAssemblyInfo * assemblyInfo, MethodInfo * method));
DO_APP_FUNC(0x01D94180, ObjectMap *, ObjectMap_Create_1, (String * name, String__Array * memberNames, BinaryTypeEnum__Enum__Array * binaryTypeEnumA, Object__Array * typeInformationA, Int32__Array * memberAssemIds, ObjectReader * objectReader, int32_t objectId, BinaryAssemblyInfo * assemblyInfo, SizedArray * assemIdToAssemblyTable, MethodInfo * method));
DO_APP_FUNC(0x01D94700, void, ObjectProgress__ctor, (ObjectProgress * __this, MethodInfo * method));
DO_APP_FUNC(0x01D94850, void, ObjectProgress_Init, (ObjectProgress * __this, MethodInfo * method));
DO_APP_FUNC(0x01D948B0, void, ObjectProgress_ArrayCountIncrement, (ObjectProgress * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01D948C0, bool, ObjectProgress_GetNext, (ObjectProgress * __this, BinaryTypeEnum__Enum * outBinaryTypeEnum, Object * * outTypeInformation, MethodInfo * method));
DO_APP_FUNC(0x01D94A10, void, ObjectProgress__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01D8F4D0, InternalPrimitiveTypeE__Enum, Converter_ToCode, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x01D8F7A0, bool, Converter_IsWriteAsByteArray, (InternalPrimitiveTypeE__Enum code, MethodInfo * method));
DO_APP_FUNC(0x01D8F810, int32_t, Converter_TypeLength, (InternalPrimitiveTypeE__Enum code, MethodInfo * method));
DO_APP_FUNC(0x01D8F890, Type *, Converter_ToArrayType, (InternalPrimitiveTypeE__Enum code, MethodInfo * method));
DO_APP_FUNC(0x01D8F9D0, void, Converter_InitTypeA, (MethodInfo * method));
DO_APP_FUNC(0x01D90080, void, Converter_InitArrayTypeA, (MethodInfo * method));
DO_APP_FUNC(0x01D90750, Type *, Converter_ToType, (InternalPrimitiveTypeE__Enum code, MethodInfo * method));
DO_APP_FUNC(0x01D90890, Array *, Converter_CreatePrimitiveArray, (InternalPrimitiveTypeE__Enum code, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01D90A10, bool, Converter_IsPrimitiveArray, (Type * type, Object * * typeInformation, MethodInfo * method));
DO_APP_FUNC(0x01D90D80, void, Converter_InitValueA, (MethodInfo * method));
DO_APP_FUNC(0x01D913E0, String *, Converter_ToComType, (InternalPrimitiveTypeE__Enum code, MethodInfo * method));
DO_APP_FUNC(0x01D91520, void, Converter_InitTypeCodeA, (MethodInfo * method));
DO_APP_FUNC(0x01D91810, TypeCode__Enum, Converter_ToTypeCode, (InternalPrimitiveTypeE__Enum code, MethodInfo * method));
DO_APP_FUNC(0x01D91940, void, Converter_InitCodeA, (MethodInfo * method));
DO_APP_FUNC(0x01D91C80, InternalPrimitiveTypeE__Enum, Converter_ToPrimitiveTypeEnum, (TypeCode__Enum typeCode, MethodInfo * method));
DO_APP_FUNC(0x01D91DB0, Object *, Converter_FromString, (String * value, InternalPrimitiveTypeE__Enum code, MethodInfo * method));
DO_APP_FUNC(0x01D91FE0, void, Converter__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00E06D70, void, BinaryFormatter_set_AssemblyFormat, (BinaryFormatter * __this, FormatterAssemblyStyle__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, BinaryFormatter_set_SurrogateSelector, (BinaryFormatter * __this, ISurrogateSelector * value, MethodInfo * method));
DO_APP_FUNC(0x01D8D4A0, void, BinaryFormatter__ctor, (BinaryFormatter * __this, MethodInfo * method));
DO_APP_FUNC(0x01D8D4E0, void, BinaryFormatter__ctor_1, (BinaryFormatter * __this, ISurrogateSelector * selector, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01D8D500, Object *, BinaryFormatter_Deserialize, (BinaryFormatter * __this, Stream * serializationStream, MethodInfo * method));
DO_APP_FUNC(0x01D8D520, Object *, BinaryFormatter_Deserialize_1, (BinaryFormatter * __this, Stream * serializationStream, HeaderHandler * handler, bool fCheck, MethodInfo * method));
DO_APP_FUNC(0x01D8D9A0, Object *, BinaryFormatter_Deserialize_2, (BinaryFormatter * __this, Stream * serializationStream, HeaderHandler * handler, MethodInfo * method));
DO_APP_FUNC(0x01D8D9C0, void, BinaryFormatter_Serialize, (BinaryFormatter * __this, Stream * serializationStream, Object * graph, MethodInfo * method));
DO_APP_FUNC(0x01D8D9E0, void, BinaryFormatter_Serialize_1, (BinaryFormatter * __this, Stream * serializationStream, Object * graph, Header__Array * headers, MethodInfo * method));
DO_APP_FUNC(0x01D8DA00, void, BinaryFormatter_Serialize_2, (BinaryFormatter * __this, Stream * serializationStream, Object * graph, Header__Array * headers, bool fCheck, MethodInfo * method));
DO_APP_FUNC(0x01D8DF50, TypeInformation *, BinaryFormatter_GetTypeInformation, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x01D8E300, void, BinaryFormatter__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01ED1880, void, _BinaryWriter__ctor, (_BinaryWriter * __this, Stream * sout, ObjectWriter * objectWriter, FormatterTypeStyle__Enum formatterTypeStyle, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, _BinaryWriter_WriteBegin, (_BinaryWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01D612D0, void, _BinaryWriter_WriteEnd, (_BinaryWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED1A10, void, _BinaryWriter_WriteBoolean, (_BinaryWriter * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01ED1A40, void, _BinaryWriter_WriteByte, (_BinaryWriter * __this, uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x01D61480, void, _BinaryWriter_WriteBytes, (_BinaryWriter * __this, Byte__Array * value, MethodInfo * method));
DO_APP_FUNC(0x01ED1A70, void, _BinaryWriter_WriteBytes_1, (_BinaryWriter * __this, Byte__Array * byteA, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01D61390, void, _BinaryWriter_WriteChar, (_BinaryWriter * __this, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x01ED1AA0, void, _BinaryWriter_WriteChars, (_BinaryWriter * __this, Char__Array * value, MethodInfo * method));
DO_APP_FUNC(0x01ED1AD0, void, _BinaryWriter_WriteDecimal, (_BinaryWriter * __this, Decimal value, MethodInfo * method));
DO_APP_FUNC(0x01ED1BC0, void, _BinaryWriter_WriteSingle, (_BinaryWriter * __this, float value, MethodInfo * method));
DO_APP_FUNC(0x01D613F0, void, _BinaryWriter_WriteDouble, (_BinaryWriter * __this, double value, MethodInfo * method));
DO_APP_FUNC(0x01ED1BF0, void, _BinaryWriter_WriteInt16, (_BinaryWriter * __this, int16_t value, MethodInfo * method));
DO_APP_FUNC(0x01ED1C20, void, _BinaryWriter_WriteInt32, (_BinaryWriter * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01ED1C50, void, _BinaryWriter_WriteInt64, (_BinaryWriter * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01ED1A40, void, _BinaryWriter_WriteSByte, (_BinaryWriter * __this, int8_t value, MethodInfo * method));
DO_APP_FUNC(0x01ED1C80, void, _BinaryWriter_WriteString, (_BinaryWriter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01ED1C50, void, _BinaryWriter_WriteTimeSpan, (_BinaryWriter * __this, TimeSpan value, MethodInfo * method));
DO_APP_FUNC(0x01ED1C50, void, _BinaryWriter_WriteDateTime, (_BinaryWriter * __this, DateTime value, MethodInfo * method));
DO_APP_FUNC(0x01ED1CB0, void, _BinaryWriter_WriteUInt16, (_BinaryWriter * __this, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x01ED1CE0, void, _BinaryWriter_WriteUInt32, (_BinaryWriter * __this, uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x01D61600, void, _BinaryWriter_WriteUInt64, (_BinaryWriter * __this, uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, _BinaryWriter_WriteObjectEnd, (_BinaryWriter * __this, NameInfo * memberNameInfo, NameInfo * typeNameInfo, MethodInfo * method));
DO_APP_FUNC(0x01ED1D10, void, _BinaryWriter_WriteSerializationHeaderEnd, (_BinaryWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED1E80, void, _BinaryWriter_WriteSerializationHeader, (_BinaryWriter * __this, int32_t topId, int32_t headerId, int32_t minorVersion, int32_t majorVersion, MethodInfo * method));
DO_APP_FUNC(0x01ED20C0, void, _BinaryWriter_WriteMethodCall, (_BinaryWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED2230, void, _BinaryWriter_WriteMethodReturn, (_BinaryWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED23A0, void, _BinaryWriter_WriteObject, (_BinaryWriter * __this, NameInfo * nameInfo, NameInfo * typeNameInfo, int32_t numMembers, String__Array * memberNames, Type__Array * memberTypes, WriteObjectInfo__Array * memberObjectInfos, MethodInfo * method));
DO_APP_FUNC(0x01ED2F10, void, _BinaryWriter_WriteObjectString, (_BinaryWriter * __this, int32_t objectId, String * value, MethodInfo * method));
DO_APP_FUNC(0x01ED3110, void, _BinaryWriter_WriteSingleArray, (_BinaryWriter * __this, NameInfo * memberNameInfo, NameInfo * arrayNameInfo, WriteObjectInfo * objectInfo, NameInfo * arrayElemTypeNameInfo, int32_t length, int32_t lowerBound, Array * array, MethodInfo * method));
DO_APP_FUNC(0x01ED3590, void, _BinaryWriter_WriteArrayAsBytes, (_BinaryWriter * __this, Array * array, int32_t typeLength, MethodInfo * method));
DO_APP_FUNC(0x01ED3870, void, _BinaryWriter_WriteJaggedArray, (_BinaryWriter * __this, NameInfo * memberNameInfo, NameInfo * arrayNameInfo, WriteObjectInfo * objectInfo, NameInfo * arrayElemTypeNameInfo, int32_t length, int32_t lowerBound, MethodInfo * method));
DO_APP_FUNC(0x01ED3B90, void, _BinaryWriter_WriteRectangleArray, (_BinaryWriter * __this, NameInfo * memberNameInfo, NameInfo * arrayNameInfo, WriteObjectInfo * objectInfo, NameInfo * arrayElemTypeNameInfo, int32_t rank, Int32__Array * lengthA, Int32__Array * lowerBoundA, MethodInfo * method));
DO_APP_FUNC(0x01ED3E70, void, _BinaryWriter_WriteObjectByteArray, (_BinaryWriter * __this, NameInfo * memberNameInfo, NameInfo * arrayNameInfo, WriteObjectInfo * objectInfo, NameInfo * arrayElemTypeNameInfo, int32_t length, int32_t lowerBound, Byte__Array * byteA, MethodInfo * method));
DO_APP_FUNC(0x01ED3ED0, void, _BinaryWriter_WriteMember, (_BinaryWriter * __this, NameInfo * memberNameInfo, NameInfo * typeNameInfo, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01ED4200, void, _BinaryWriter_WriteNullMember, (_BinaryWriter * __this, NameInfo * memberNameInfo, NameInfo * typeNameInfo, MethodInfo * method));
DO_APP_FUNC(0x01ED43B0, void, _BinaryWriter_WriteMemberObjectRef, (_BinaryWriter * __this, NameInfo * memberNameInfo, int32_t idRef, MethodInfo * method));
DO_APP_FUNC(0x01ED4590, void, _BinaryWriter_WriteMemberNested, (_BinaryWriter * __this, NameInfo * memberNameInfo, MethodInfo * method));
DO_APP_FUNC(0x01ED45C0, void, _BinaryWriter_WriteMemberString, (_BinaryWriter * __this, NameInfo * memberNameInfo, NameInfo * typeNameInfo, String * value, MethodInfo * method));
DO_APP_FUNC(0x01ED4630, void, _BinaryWriter_WriteItem, (_BinaryWriter * __this, NameInfo * itemNameInfo, NameInfo * typeNameInfo, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01ED4690, void, _BinaryWriter_WriteNullItem, (_BinaryWriter * __this, NameInfo * itemNameInfo, NameInfo * typeNameInfo, MethodInfo * method));
DO_APP_FUNC(0x01ED46A0, void, _BinaryWriter_WriteDelayedNullItem, (_BinaryWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED46B0, void, _BinaryWriter_WriteItemEnd, (_BinaryWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED46C0, void, _BinaryWriter_InternalWriteItemNull, (_BinaryWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01ED4850, void, _BinaryWriter_WriteItemObjectRef, (_BinaryWriter * __this, NameInfo * nameInfo, int32_t idRef, MethodInfo * method));
DO_APP_FUNC(0x01ED4890, void, _BinaryWriter_WriteAssembly, (_BinaryWriter * __this, Type * type, String * assemblyString, int32_t assemId, bool isNew, MethodInfo * method));
DO_APP_FUNC(0x01ED4AB0, void, _BinaryWriter_WriteValue, (_BinaryWriter * __this, InternalPrimitiveTypeE__Enum code, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01D94340, void, ObjectMapInfo__ctor, (ObjectMapInfo * __this, int32_t objectId, int32_t numMembers, String__Array * memberNames, Type__Array * memberTypes, MethodInfo * method));
DO_APP_FUNC(0x01D94360, bool, ObjectMapInfo_isCompatible, (ObjectMapInfo * __this, int32_t numMembers, String__Array * memberNames, Type__Array * memberTypes, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WriteObjectInfo__ctor, (WriteObjectInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA24F0, void, WriteObjectInfo_ObjectEnd, (WriteObjectInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA2530, void, WriteObjectInfo_InternalInit, (WriteObjectInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA2560, WriteObjectInfo *, WriteObjectInfo_Serialize, (Object * obj, ISurrogateSelector * surrogateSelector, StreamingContext context, SerObjectInfoInit * serObjectInfoInit, IFormatterConverter * converter, ObjectWriter * objectWriter, SerializationBinder * binder, MethodInfo * method));
DO_APP_FUNC(0x01DA2610, void, WriteObjectInfo_InitSerialize, (WriteObjectInfo * __this, Object * obj, ISurrogateSelector * surrogateSelector, StreamingContext context, SerObjectInfoInit * serObjectInfoInit, IFormatterConverter * converter, ObjectWriter * objectWriter, SerializationBinder * binder, MethodInfo * method));
DO_APP_FUNC(0x01DA2C50, WriteObjectInfo *, WriteObjectInfo_Serialize_1, (Type * objectType, ISurrogateSelector * surrogateSelector, StreamingContext context, SerObjectInfoInit * serObjectInfoInit, IFormatterConverter * converter, SerializationBinder * binder, MethodInfo * method));
DO_APP_FUNC(0x01DA2CF0, void, WriteObjectInfo_InitSerialize_1, (WriteObjectInfo * __this, Type * objectType, ISurrogateSelector * surrogateSelector, StreamingContext context, SerObjectInfoInit * serObjectInfoInit, IFormatterConverter * converter, SerializationBinder * binder, MethodInfo * method));
DO_APP_FUNC(0x01DA3310, void, WriteObjectInfo_InitSiWrite, (WriteObjectInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA3850, void, WriteObjectInfo_CheckTypeForwardedFrom, (SerObjectInfoCache * cache, Type * objectType, String * binderAssemblyString, MethodInfo * method));
DO_APP_FUNC(0x01DA3970, void, WriteObjectInfo_InitNoMembers, (WriteObjectInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA3B60, void, WriteObjectInfo_InitMemberInfo, (WriteObjectInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA4020, String *, WriteObjectInfo_GetTypeFullName, (WriteObjectInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA4050, String *, WriteObjectInfo_GetAssemblyString, (WriteObjectInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA4080, void, WriteObjectInfo_InvokeSerializationBinder, (WriteObjectInfo * __this, SerializationBinder * binder, MethodInfo * method));
DO_APP_FUNC(0x01DA40C0, Type *, WriteObjectInfo_GetMemberType, (WriteObjectInfo * __this, MemberInfo_1 * objMember, MethodInfo * method));
DO_APP_FUNC(0x01DA4340, void, WriteObjectInfo_GetMemberInfo, (WriteObjectInfo * __this, String__Array * * outMemberNames, Type__Array * * outMemberTypes, Object__Array * * outMemberData, MethodInfo * method));
DO_APP_FUNC(0x01DA4460, WriteObjectInfo *, WriteObjectInfo_GetObjectInfo, (SerObjectInfoInit * serObjectInfoInit, MethodInfo * method));
DO_APP_FUNC(0x01DA4670, void, WriteObjectInfo_PutObjectInfo, (SerObjectInfoInit * serObjectInfoInit, WriteObjectInfo * objectInfo, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ReadObjectInfo__ctor, (ReadObjectInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ReadObjectInfo_ObjectEnd, (ReadObjectInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00B1D780, void, ReadObjectInfo_PrepareForReuse, (ReadObjectInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01D9EBD0, ReadObjectInfo *, ReadObjectInfo_Create, (Type * objectType, ISurrogateSelector * surrogateSelector, StreamingContext context, ObjectManager * objectManager, SerObjectInfoInit * serObjectInfoInit, IFormatterConverter * converter, bool bSimpleAssembly, MethodInfo * method));
DO_APP_FUNC(0x01D9EC80, void, ReadObjectInfo_Init, (ReadObjectInfo * __this, Type * objectType, ISurrogateSelector * surrogateSelector, StreamingContext context, ObjectManager * objectManager, SerObjectInfoInit * serObjectInfoInit, IFormatterConverter * converter, bool bSimpleAssembly, MethodInfo * method));
DO_APP_FUNC(0x01D9ECE0, ReadObjectInfo *, ReadObjectInfo_Create_1, (Type * objectType, String__Array * memberNames, Type__Array * memberTypes, ISurrogateSelector * surrogateSelector, StreamingContext context, ObjectManager * objectManager, SerObjectInfoInit * serObjectInfoInit, IFormatterConverter * converter, bool bSimpleAssembly, MethodInfo * method));
DO_APP_FUNC(0x01D9EDC0, void, ReadObjectInfo_Init_1, (ReadObjectInfo * __this, Type * objectType, String__Array * memberNames, Type__Array * memberTypes, ISurrogateSelector * surrogateSelector, StreamingContext context, ObjectManager * objectManager, SerObjectInfoInit * serObjectInfoInit, IFormatterConverter * converter, bool bSimpleAssembly, MethodInfo * method));
DO_APP_FUNC(0x01D9EE50, void, ReadObjectInfo_InitReadConstructor, (ReadObjectInfo * __this, Type * objectType, ISurrogateSelector * surrogateSelector, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01D9F180, void, ReadObjectInfo_InitSiRead, (ReadObjectInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01D9F310, void, ReadObjectInfo_InitNoMembers, (ReadObjectInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01D9F460, void, ReadObjectInfo_InitMemberInfo, (ReadObjectInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01D9F820, MemberInfo_1 *, ReadObjectInfo_GetMemberInfo, (ReadObjectInfo * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01D9FA70, Type *, ReadObjectInfo_GetType, (ReadObjectInfo * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01D9FC30, void, ReadObjectInfo_AddValue, (ReadObjectInfo * __this, String * name, Object * value, SerializationInfo * * si, Object__Array * * memberData, MethodInfo * method));
DO_APP_FUNC(0x01D9FCE0, void, ReadObjectInfo_InitDataStore, (ReadObjectInfo * __this, SerializationInfo * * si, Object__Array * * memberData, MethodInfo * method));
DO_APP_FUNC(0x01D9FEB0, void, ReadObjectInfo_RecordFixup, (ReadObjectInfo * __this, int64_t objectId, String * name, int64_t idRef, MethodInfo * method));
DO_APP_FUNC(0x01D9FFA0, void, ReadObjectInfo_PopulateObjectMembers, (ReadObjectInfo * __this, Object * obj, Object__Array * memberData, MethodInfo * method));
DO_APP_FUNC(0x01DA0080, int32_t, ReadObjectInfo_Position, (ReadObjectInfo * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01DA02C0, Type__Array *, ReadObjectInfo_GetMemberTypes, (ReadObjectInfo * __this, String__Array * inMemberNames, Type * objectType, MethodInfo * method));
DO_APP_FUNC(0x01DA0A60, Type *, ReadObjectInfo_GetMemberType, (ReadObjectInfo * __this, MemberInfo_1 * objMember, MethodInfo * method));
DO_APP_FUNC(0x01DA0CE0, ReadObjectInfo *, ReadObjectInfo_GetObjectInfo, (SerObjectInfoInit * serObjectInfoInit, MethodInfo * method));
DO_APP_FUNC(0x01DA0F10, void, SerObjectInfoInit__ctor, (SerObjectInfoInit * __this, MethodInfo * method));
DO_APP_FUNC(0x010415E0, void, SerObjectInfoCache__ctor, (SerObjectInfoCache * __this, String * typeName, String * assemblyName, bool hasTypeForwardedFrom, MethodInfo * method));
DO_APP_FUNC(0x01DA0E40, void, SerObjectInfoCache__ctor_1, (SerObjectInfoCache * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, TypeInformation_get_FullTypeName, (TypeInformation * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, TypeInformation_get_AssemblyString, (TypeInformation * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A030, bool, TypeInformation_get_HasTypeForwardedFrom, (TypeInformation * __this, MethodInfo * method));
DO_APP_FUNC(0x010415E0, void, TypeInformation__ctor, (TypeInformation * __this, String * fullTypeName, String * assemblyString, bool hasTypeForwardedFrom, MethodInfo * method));
DO_APP_FUNC(0x01D94A90, SerStack *, ObjectReader_get_ValueFixupStack, (ObjectReader * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, Object *, ObjectReader_get_TopObject, (ObjectReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01D94C00, void, ObjectReader_set_TopObject, (ObjectReader * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01D94C20, void, ObjectReader__ctor, (ObjectReader * __this, Stream * stream, ISurrogateSelector * selector, StreamingContext context, InternalFE * formatterEnums, SerializationBinder * binder, MethodInfo * method));
DO_APP_FUNC(0x01D94DF0, Object *, ObjectReader_Deserialize, (ObjectReader * __this, HeaderHandler * handler, _BinaryParser * serParser, bool fCheck, MethodInfo * method));
DO_APP_FUNC(0x01D95330, bool, ObjectReader_HasSurrogate, (ObjectReader * __this, Type * t, MethodInfo * method));
DO_APP_FUNC(0x01D95480, void, ObjectReader_CheckSerializable, (ObjectReader * __this, Type * t, MethodInfo * method));
DO_APP_FUNC(0x01D95620, void, ObjectReader_InitFullDeserialization, (ObjectReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01D959A0, Object *, ObjectReader_CrossAppDomainArray, (ObjectReader * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01D959E0, ReadObjectInfo *, ObjectReader_CreateReadObjectInfo, (ObjectReader * __this, Type * objectType, MethodInfo * method));
DO_APP_FUNC(0x01D95AA0, ReadObjectInfo *, ObjectReader_CreateReadObjectInfo_1, (ObjectReader * __this, Type * objectType, String__Array * memberNames, Type__Array * memberTypes, MethodInfo * method));
DO_APP_FUNC(0x01D95B90, void, ObjectReader_Parse, (ObjectReader * __this, ParseRecord * pr, MethodInfo * method));
DO_APP_FUNC(0x01D95E60, void, ObjectReader_ParseError, (ObjectReader * __this, ParseRecord * processing, ParseRecord * onStack, MethodInfo * method));
DO_APP_FUNC(0x01D96160, void, ObjectReader_ParseSerializedStreamHeader, (ObjectReader * __this, ParseRecord * pr, MethodInfo * method));
DO_APP_FUNC(0x01D96190, void, ObjectReader_ParseSerializedStreamHeaderEnd, (ObjectReader * __this, ParseRecord * pr, MethodInfo * method));
DO_APP_FUNC(0x01D961C0, void, ObjectReader_ParseObject, (ObjectReader * __this, ParseRecord * pr, MethodInfo * method));
DO_APP_FUNC(0x01D966B0, void, ObjectReader_ParseObjectEnd, (ObjectReader * __this, ParseRecord * pr, MethodInfo * method));
DO_APP_FUNC(0x01D96AC0, void, ObjectReader_ParseArray, (ObjectReader * __this, ParseRecord * pr, MethodInfo * method));
DO_APP_FUNC(0x01D97560, void, ObjectReader_NextRectangleMap, (ObjectReader * __this, ParseRecord * pr, MethodInfo * method));
DO_APP_FUNC(0x01D976A0, void, ObjectReader_ParseArrayMember, (ObjectReader * __this, ParseRecord * pr, MethodInfo * method));
DO_APP_FUNC(0x01D984F0, void, ObjectReader_ParseArrayMemberEnd, (ObjectReader * __this, ParseRecord * pr, MethodInfo * method));
DO_APP_FUNC(0x01D98520, void, ObjectReader_ParseMember, (ObjectReader * __this, ParseRecord * pr, MethodInfo * method));
DO_APP_FUNC(0x01D98E70, void, ObjectReader_ParseMemberEnd, (ObjectReader * __this, ParseRecord * pr, MethodInfo * method));
DO_APP_FUNC(0x01D98F60, void, ObjectReader_ParseString, (ObjectReader * __this, ParseRecord * pr, ParseRecord * parentPr, MethodInfo * method));
DO_APP_FUNC(0x01D98FB0, void, ObjectReader_RegisterObject, (ObjectReader * __this, Object * obj, ParseRecord * pr, ParseRecord * objectPr, MethodInfo * method));
DO_APP_FUNC(0x01D98FD0, void, ObjectReader_RegisterObject_1, (ObjectReader * __this, Object * obj, ParseRecord * pr, ParseRecord * objectPr, bool bIsString, MethodInfo * method));
DO_APP_FUNC(0x01D99160, int64_t, ObjectReader_GetId, (ObjectReader * __this, int64_t objectId, MethodInfo * method));
DO_APP_FUNC(0x01D99510, Type *, ObjectReader_Bind, (ObjectReader * __this, String * assemblyString, String * typeString, MethodInfo * method));
DO_APP_FUNC(0x01D99570, Type *, ObjectReader_FastBindToType, (ObjectReader * __this, String * assemblyName, String * typeName, MethodInfo * method));
DO_APP_FUNC(0x01D99980, Assembly *, ObjectReader_ResolveSimpleAssemblyName, (AssemblyName * assemblyName, MethodInfo * method));
DO_APP_FUNC(0x01D99A10, void, ObjectReader_GetSimplyNamedTypeFromAssembly, (Assembly * assm, String * typeName, Type * * type, MethodInfo * method));
DO_APP_FUNC(0x01D99DA0, Type *, ObjectReader_GetType, (ObjectReader * __this, BinaryAssemblyInfo * assemblyInfo, String * name, MethodInfo * method));
DO_APP_FUNC(0x01D99FD0, void, ObjectReader_CheckTypeForwardedTo, (Assembly * sourceAssembly, Assembly * destAssembly, Type * resolvedType, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ObjectReader_TypeNAssembly__ctor, (ObjectReader_TypeNAssembly * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, ObjectReader_TopLevelAssemblyTypeResolver__ctor, (ObjectReader_TopLevelAssemblyTypeResolver * __this, Assembly * topLevelAssembly, MethodInfo * method));
DO_APP_FUNC(0x01D9A130, Type *, ObjectReader_TopLevelAssemblyTypeResolver_ResolveType, (ObjectReader_TopLevelAssemblyTypeResolver * __this, Assembly * assembly, String * simpleTypeName, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x01D9A180, void, ObjectWriter__ctor, (ObjectWriter * __this, ISurrogateSelector * selector, StreamingContext context, InternalFE * formatterEnums, SerializationBinder * binder, MethodInfo * method));
DO_APP_FUNC(0x01D9A3F0, void, ObjectWriter_Serialize, (ObjectWriter * __this, Object * graph, Header__Array * inHeaders, _BinaryWriter * serWriter, bool fCheck, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, SerializationObjectManager *, ObjectWriter_get_ObjectManager, (ObjectWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01D9ABB0, void, ObjectWriter_Write, (ObjectWriter * __this, WriteObjectInfo * objectInfo, NameInfo * memberNameInfo, NameInfo * typeNameInfo, MethodInfo * method));
DO_APP_FUNC(0x01D9B1F0, void, ObjectWriter_Write_1, (ObjectWriter * __this, WriteObjectInfo * objectInfo, NameInfo * memberNameInfo, NameInfo * typeNameInfo, String__Array * memberNames, Type__Array * memberTypes, Object__Array * memberData, WriteObjectInfo__Array * memberObjectInfos, MethodInfo * method));
DO_APP_FUNC(0x01D9B670, void, ObjectWriter_WriteMemberSetup, (ObjectWriter * __this, WriteObjectInfo * objectInfo, NameInfo * memberNameInfo, NameInfo * typeNameInfo, String * memberName, Type * memberType, Object * memberData, WriteObjectInfo * memberObjectInfo, MethodInfo * method));
DO_APP_FUNC(0x01D9B7E0, void, ObjectWriter_WriteMembers, (ObjectWriter * __this, NameInfo * memberNameInfo, NameInfo * memberTypeNameInfo, Object * memberData, WriteObjectInfo * objectInfo, NameInfo * typeNameInfo, WriteObjectInfo * memberObjectInfo, MethodInfo * method));
DO_APP_FUNC(0x01D9BCB0, void, ObjectWriter_WriteArray, (ObjectWriter * __this, WriteObjectInfo * objectInfo, NameInfo * memberNameInfo, WriteObjectInfo * memberObjectInfo, MethodInfo * method));
DO_APP_FUNC(0x01D9C840, void, ObjectWriter_WriteArrayMember, (ObjectWriter * __this, WriteObjectInfo * objectInfo, NameInfo * arrayElemTypeNameInfo, Object * data, MethodInfo * method));
DO_APP_FUNC(0x01D9CC50, void, ObjectWriter_WriteRectangle, (ObjectWriter * __this, WriteObjectInfo * objectInfo, int32_t rank, Int32__Array * maxA, Array * array, NameInfo * arrayElemNameTypeInfo, Int32__Array * lowerBoundA, MethodInfo * method));
DO_APP_FUNC(0x01D9CF40, Object *, ObjectWriter_GetNext, (ObjectWriter * __this, int64_t * objID, MethodInfo * method));
DO_APP_FUNC(0x01D9D110, int64_t, ObjectWriter_InternalGetId, (ObjectWriter * __this, Object * obj, bool assignUniqueIdToValueType, Type * type, bool * isNew, MethodInfo * method));
DO_APP_FUNC(0x01D9D200, int64_t, ObjectWriter_Schedule, (ObjectWriter * __this, Object * obj, bool assignUniqueIdToValueType, Type * type, MethodInfo * method));
DO_APP_FUNC(0x01D9D280, int64_t, ObjectWriter_Schedule_1, (ObjectWriter * __this, Object * obj, bool assignUniqueIdToValueType, Type * type, WriteObjectInfo * objectInfo, MethodInfo * method));
DO_APP_FUNC(0x01D9D330, bool, ObjectWriter_WriteKnownValueClass, (ObjectWriter * __this, NameInfo * memberNameInfo, NameInfo * typeNameInfo, Object * data, MethodInfo * method));
DO_APP_FUNC(0x01D9D4A0, void, ObjectWriter_WriteObjectRef, (ObjectWriter * __this, NameInfo * nameInfo, int64_t objectId, MethodInfo * method));
DO_APP_FUNC(0x01D9D4C0, void, ObjectWriter_WriteString, (ObjectWriter * __this, NameInfo * memberNameInfo, NameInfo * typeNameInfo, Object * stringObject, MethodInfo * method));
DO_APP_FUNC(0x01D9D680, bool, ObjectWriter_CheckForNull, (ObjectWriter * __this, WriteObjectInfo * objectInfo, NameInfo * memberNameInfo, NameInfo * typeNameInfo, Object * data, MethodInfo * method));
DO_APP_FUNC(0x01D9D780, void, ObjectWriter_WriteSerializedStreamHeader, (ObjectWriter * __this, int64_t topId, int64_t headerId, MethodInfo * method));
DO_APP_FUNC(0x01D9D7B0, NameInfo *, ObjectWriter_TypeToNameInfo, (ObjectWriter * __this, Type * type, WriteObjectInfo * objectInfo, InternalPrimitiveTypeE__Enum code, NameInfo * nameInfo, MethodInfo * method));
DO_APP_FUNC(0x01D9D870, NameInfo *, ObjectWriter_TypeToNameInfo_1, (ObjectWriter * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x01D9D8C0, NameInfo *, ObjectWriter_TypeToNameInfo_2, (ObjectWriter * __this, WriteObjectInfo * objectInfo, MethodInfo * method));
DO_APP_FUNC(0x01D9D970, NameInfo *, ObjectWriter_TypeToNameInfo_3, (ObjectWriter * __this, WriteObjectInfo * objectInfo, NameInfo * nameInfo, MethodInfo * method));
DO_APP_FUNC(0x01D9D9E0, void, ObjectWriter_TypeToNameInfo_4, (ObjectWriter * __this, Type * type, NameInfo * nameInfo, MethodInfo * method));
DO_APP_FUNC(0x01D9DA70, NameInfo *, ObjectWriter_MemberToNameInfo, (ObjectWriter * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01D9DAA0, InternalPrimitiveTypeE__Enum, ObjectWriter_ToCode, (ObjectWriter * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x01D9DB80, int64_t, ObjectWriter_GetAssemblyId, (ObjectWriter * __this, WriteObjectInfo * objectInfo, MethodInfo * method));
DO_APP_FUNC(0x013DD8B0, Type *, ObjectWriter_GetType, (ObjectWriter * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01D9DF40, NameInfo *, ObjectWriter_GetNameInfo, (ObjectWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01141CD0, bool, ObjectWriter_CheckTypeFormat, (ObjectWriter * __this, FormatterTypeStyle__Enum test, FormatterTypeStyle__Enum want, MethodInfo * method));
DO_APP_FUNC(0x01D9E110, void, ObjectWriter_PutNameInfo, (ObjectWriter * __this, NameInfo * nameInfo, MethodInfo * method));
DO_APP_FUNC(0x01DA46A0, void, _BinaryParser__ctor, (_BinaryParser * __this, Stream * stream, ObjectReader * objectReader, MethodInfo * method));
DO_APP_FUNC(0x01DA4920, BinaryAssemblyInfo *, _BinaryParser_get_SystemAssemblyInfo, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA4AC0, SizedArray *, _BinaryParser_get_ObjectMapIdTable, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA4C90, SizedArray *, _BinaryParser_get_AssemIdToAssemblyTable, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA4E60, ParseRecord *, _BinaryParser_get_prs, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA4FB0, void, _BinaryParser_Run, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, _BinaryParser_ReadBegin, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, _BinaryParser_ReadEnd, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCCF40, bool, _BinaryParser_ReadBoolean, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCD060, uint8_t, _BinaryParser_ReadByte, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCD510, Byte__Array *, _BinaryParser_ReadBytes, (_BinaryParser * __this, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01DA54D0, void, _BinaryParser_ReadBytes_1, (_BinaryParser * __this, Byte__Array * byteA, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01DA5550, uint16_t, _BinaryParser_ReadChar, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA5580, Char__Array *, _BinaryParser_ReadChars, (_BinaryParser * __this, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01DA55B0, Decimal, _BinaryParser_ReadDecimal, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCD5A0, float, _BinaryParser_ReadSingle, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA56E0, double, _BinaryParser_ReadDouble, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCCFA0, int16_t, _BinaryParser_ReadInt16, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCD000, int32_t, _BinaryParser_ReadInt32, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA5710, int64_t, _BinaryParser_ReadInt64, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCD060, int8_t, _BinaryParser_ReadSByte, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA5740, String *, _BinaryParser_ReadString, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA5710, TimeSpan, _BinaryParser_ReadTimeSpan, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA5770, DateTime, _BinaryParser_ReadDateTime, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA5830, uint16_t, _BinaryParser_ReadUInt16, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA5860, uint32_t, _BinaryParser_ReadUInt32, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA5890, uint64_t, _BinaryParser_ReadUInt64, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA58C0, void, _BinaryParser_ReadSerializationHeaderRecord, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA5A70, void, _BinaryParser_ReadAssembly, (_BinaryParser * __this, BinaryHeaderEnum__Enum binaryHeaderEnum, MethodInfo * method));
DO_APP_FUNC(0x01DA5F90, void, _BinaryParser_ReadObject, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA6590, void, _BinaryParser_ReadCrossAppDomainMap, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA6850, void, _BinaryParser_ReadObjectWithMap, (_BinaryParser * __this, BinaryHeaderEnum__Enum binaryHeaderEnum, MethodInfo * method));
DO_APP_FUNC(0x01DA69F0, void, _BinaryParser_ReadObjectWithMap_1, (_BinaryParser * __this, BinaryObjectWithMap * record, MethodInfo * method));
DO_APP_FUNC(0x01DA7160, void, _BinaryParser_ReadObjectWithMapTyped, (_BinaryParser * __this, BinaryHeaderEnum__Enum binaryHeaderEnum, MethodInfo * method));
DO_APP_FUNC(0x01DA72F0, void, _BinaryParser_ReadObjectWithMapTyped_1, (_BinaryParser * __this, BinaryObjectWithMapTyped * record, MethodInfo * method));
DO_APP_FUNC(0x01DA7AA0, void, _BinaryParser_ReadObjectString, (_BinaryParser * __this, BinaryHeaderEnum__Enum binaryHeaderEnum, MethodInfo * method));
DO_APP_FUNC(0x01DA83B0, void, _BinaryParser_ReadMemberPrimitiveTyped, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA8900, void, _BinaryParser_ReadArray, (_BinaryParser * __this, BinaryHeaderEnum__Enum binaryHeaderEnum, MethodInfo * method));
DO_APP_FUNC(0x01DA90D0, void, _BinaryParser_ReadArrayAsBytes, (_BinaryParser * __this, ParseRecord * pr, MethodInfo * method));
DO_APP_FUNC(0x01DA94F0, void, _BinaryParser_ReadMemberPrimitiveUnTyped, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA9930, void, _BinaryParser_ReadMemberReference, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA9CB0, void, _BinaryParser_ReadObjectNull, (_BinaryParser * __this, BinaryHeaderEnum__Enum binaryHeaderEnum, MethodInfo * method));
DO_APP_FUNC(0x01DAA090, void, _BinaryParser_ReadMessageEnd, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01DAA300, Object *, _BinaryParser_ReadValue, (_BinaryParser * __this, InternalPrimitiveTypeE__Enum code, MethodInfo * method));
DO_APP_FUNC(0x01DAA8F0, ObjectProgress *, _BinaryParser_GetOp, (_BinaryParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01DAAC10, void, _BinaryParser_PutOp, (_BinaryParser * __this, ObjectProgress * op, MethodInfo * method));
DO_APP_FUNC(0x01DAAD90, void, _BinaryParser__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ParseRecord__ctor, (ParseRecord * __this, MethodInfo * method));
DO_APP_FUNC(0x01D9E140, void, ParseRecord_Init, (ParseRecord * __this, MethodInfo * method));
DO_APP_FUNC(0x01D9E200, void, ParseRecord__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01DA1140, void, SerStack__ctor, (SerStack * __this, String * stackId, MethodInfo * method));
DO_APP_FUNC(0x01DA11E0, void, SerStack_Push, (SerStack * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01DA1350, Object *, SerStack_Pop, (SerStack * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA13D0, void, SerStack_IncreaseCapacity, (SerStack * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA14A0, Object *, SerStack_Peek, (SerStack * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA14F0, Object *, SerStack_PeekPeek, (SerStack * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA1540, bool, SerStack_IsEmpty, (SerStack * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA1860, void, SizedArray__ctor, (SizedArray * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA1900, void, SizedArray__ctor_1, (SizedArray * __this, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01DA19B0, void, SizedArray__ctor_2, (SizedArray * __this, SizedArray * sizedArray, MethodInfo * method));
DO_APP_FUNC(0x01DA1AC0, Object *, SizedArray_Clone, (SizedArray * __this, MethodInfo * method));
DO_APP_FUNC(0x01DA1CE0, Object *, SizedArray_get_Item, (SizedArray * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01DA1D80, void, SizedArray_set_Item, (SizedArray * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01DA1EF0, void, SizedArray_IncreaseCapacity, (SizedArray * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01D92880, void, IntSizedArray__ctor, (IntSizedArray * __this, MethodInfo * method));
DO_APP_FUNC(0x01D92920, void, IntSizedArray__ctor_1, (IntSizedArray * __this, IntSizedArray * sizedArray, MethodInfo * method));
DO_APP_FUNC(0x01D92A60, Object *, IntSizedArray_Clone, (IntSizedArray * __this, MethodInfo * method));
DO_APP_FUNC(0x01D92CB0, int32_t, IntSizedArray_get_Item, (IntSizedArray * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01D92D50, void, IntSizedArray_set_Item, (IntSizedArray * __this, int32_t index, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01D92E50, void, IntSizedArray_IncreaseCapacity, (IntSizedArray * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01D93230, Object *, NameCache_GetCachedValue, (NameCache * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01D93430, void, NameCache_SetCachedValue, (NameCache * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, NameCache__ctor, (NameCache * __this, MethodInfo * method));
DO_APP_FUNC(0x01D93640, void, NameCache__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01DA20E0, void, ValueFixup__ctor, (ValueFixup * __this, Array * arrayObj, Int32__Array * indexMap, MethodInfo * method));
DO_APP_FUNC(0x01DA20F0, void, ValueFixup__ctor_1, (ValueFixup * __this, Object * memberObject, String * memberName, ReadObjectInfo * objectInfo, MethodInfo * method));
DO_APP_FUNC(0x01DA2110, void, ValueFixup_Fixup, (ValueFixup * __this, ParseRecord * record, ParseRecord * parent, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, InternalFE__ctor, (InternalFE * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, NameInfo__ctor, (NameInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01D93790, void, NameInfo_Init, (NameInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01D937C0, bool, NameInfo_get_IsSealed, (NameInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01D93810, String *, NameInfo_get_NIname, (NameInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, NameInfo_set_NIname, (NameInfo * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D9E280, void, PrimitiveArray__ctor, (PrimitiveArray * __this, InternalPrimitiveTypeE__Enum code, Array * array, MethodInfo * method));
DO_APP_FUNC(0x01D9E280, void, PrimitiveArray_Init, (PrimitiveArray * __this, InternalPrimitiveTypeE__Enum code, Array * array, MethodInfo * method));
DO_APP_FUNC(0x01D9E4E0, void, PrimitiveArray_SetValue, (PrimitiveArray * __this, String * value, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01A9AAA0, void, ChannelInfo__ctor, (ChannelInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01A9AB40, void, ChannelInfo__ctor_1, (ChannelInfo * __this, Object * remoteChannelData, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Object__Array *, ChannelInfo_get_ChannelData, (ChannelInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01A97590, void, ActivatedClientTypeEntry__ctor, (ActivatedClientTypeEntry * __this, String * typeName, String * assemblyName, String * appUrl, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, ActivatedClientTypeEntry_get_ApplicationUrl, (ActivatedClientTypeEntry * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, IContextAttribute__Array *, ActivatedClientTypeEntry_get_ContextAttributes, (ActivatedClientTypeEntry * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, Type *, ActivatedClientTypeEntry_get_ObjectType, (ActivatedClientTypeEntry * __this, MethodInfo * method));
DO_APP_FUNC(0x01A976E0, String *, ActivatedClientTypeEntry_ToString, (ActivatedClientTypeEntry * __this, MethodInfo * method));
DO_APP_FUNC(0x01A97700, void, ActivatedServiceTypeEntry__ctor, (ActivatedServiceTypeEntry * __this, String * typeName, String * assemblyName, MethodInfo * method));
DO_APP_FUNC(0x002FB950, Type *, ActivatedServiceTypeEntry_get_ObjectType, (ActivatedServiceTypeEntry * __this, MethodInfo * method));
DO_APP_FUNC(0x01A97850, String *, ActivatedServiceTypeEntry_ToString, (ActivatedServiceTypeEntry * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, EnvoyInfo__ctor, (EnvoyInfo * __this, IMessageSink * sinks, MethodInfo * method));
DO_APP_FUNC(0x002FA280, IMessageSink *, EnvoyInfo_get_EnvoySinks, (EnvoyInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, Identity__ctor, (Identity * __this, String * objectUri, MethodInfo * method));
DO_APP_FUNC(0x002FB930, IMessageSink *, Identity_get_ChannelSink, (Identity * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, Identity_set_ChannelSink, (Identity * __this, IMessageSink * value, MethodInfo * method));
DO_APP_FUNC(0x002FB950, IMessageSink *, Identity_get_EnvoySink, (Identity * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, Identity_get_ObjectUri, (Identity * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, Identity_set_ObjectUri, (Identity * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x00627D70, bool, Identity_get_IsConnected, (Identity * __this, MethodInfo * method));
DO_APP_FUNC(0x00446590, bool, Identity_get_Disposed, (Identity * __this, MethodInfo * method));
DO_APP_FUNC(0x005150D0, void, Identity_set_Disposed, (Identity * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x02306460, DynamicPropertyCollection *, Identity_get_ClientDynamicProperties, (Identity * __this, MethodInfo * method));
DO_APP_FUNC(0x023065C0, bool, Identity_get_HasServerDynamicSinks, (Identity * __this, MethodInfo * method));
DO_APP_FUNC(0x02306600, void, Identity_NotifyClientDynamicSinks, (Identity * __this, bool start, IMessage * req_msg, bool client_site, bool async, MethodInfo * method));
DO_APP_FUNC(0x023066A0, void, Identity_NotifyServerDynamicSinks, (Identity * __this, bool start, IMessage * req_msg, bool client_site, bool async, MethodInfo * method));
DO_APP_FUNC(0x01AA0200, void, ClientIdentity__ctor, (ClientIdentity * __this, String * objectUri, ObjRef * objRef, MethodInfo * method));
DO_APP_FUNC(0x01AA0300, MarshalByRefObject *, ClientIdentity_get_ClientProxy, (ClientIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x01AA03F0, void, ClientIdentity_set_ClientProxy, (ClientIdentity * __this, MarshalByRefObject * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, ObjRef *, ClientIdentity_CreateObjRef, (ClientIdentity * __this, Type * requestedType, MethodInfo * method));
DO_APP_FUNC(0x008C5A90, String *, ClientIdentity_get_TargetUri, (ClientIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x02306740, SoapAttribute *, InternalRemotingServices_GetCachedSoapAttribute, (Object * reflectionObject, MethodInfo * method));
DO_APP_FUNC(0x02306E00, void, InternalRemotingServices__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0231B8D0, void, ObjRef__ctor, (ObjRef * __this, MethodInfo * method));
DO_APP_FUNC(0x0231B8E0, void, ObjRef__ctor_1, (ObjRef * __this, String * uri, IChannelInfo * cinfo, MethodInfo * method));
DO_APP_FUNC(0x0231B8F0, ObjRef *, ObjRef_DeserializeInTheCurrentDomain, (ObjRef * __this, int32_t domainId, Byte__Array * tInfo, MethodInfo * method));
DO_APP_FUNC(0x0231BC30, Byte__Array *, ObjRef_SerializeType, (ObjRef * __this, MethodInfo * method));
DO_APP_FUNC(0x0231BD00, void, ObjRef__ctor_2, (ObjRef * __this, Type * type, String * url, Object * remoteChannelData, MethodInfo * method));
DO_APP_FUNC(0x0231BF70, void, ObjRef__ctor_3, (ObjRef * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0231C3A0, bool, ObjRef_get_IsReferenceToWellKnow, (ObjRef * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, IChannelInfo *, ObjRef_get_ChannelInfo, (ObjRef * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, IEnvoyInfo *, ObjRef_get_EnvoyInfo, (ObjRef * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB10, void, ObjRef_set_EnvoyInfo, (ObjRef * __this, IEnvoyInfo * value, MethodInfo * method));
DO_APP_FUNC(0x002FB950, IRemotingTypeInfo *, ObjRef_get_TypeInfo, (ObjRef * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, ObjRef_set_TypeInfo, (ObjRef * __this, IRemotingTypeInfo * value, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, ObjRef_get_URI, (ObjRef * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, ObjRef_set_URI, (ObjRef * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0231C450, void, ObjRef_GetObjectData, (ObjRef * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0231C5F0, Object *, ObjRef_GetRealObject, (ObjRef * __this, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0231C6E0, void, ObjRef_UpdateChannelInfo, (ObjRef * __this, MethodInfo * method));
DO_APP_FUNC(0x0231C8A0, Type *, ObjRef_get_ServerType, (ObjRef * __this, MethodInfo * method));
DO_APP_FUNC(0x0231C9B0, void, ObjRef__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02320D70, String *, RemotingConfiguration_get_ApplicationName, (MethodInfo * method));
DO_APP_FUNC(0x02320E10, void, RemotingConfiguration_set_ApplicationName, (String * value, MethodInfo * method));
DO_APP_FUNC(0x02320EC0, String *, RemotingConfiguration_get_ProcessId, (MethodInfo * method));
DO_APP_FUNC(0x02321080, void, RemotingConfiguration_LoadDefaultDelayedChannels, (MethodInfo * method));
DO_APP_FUNC(0x023215C0, bool, RemotingConfiguration_IsActivationAllowed, (Type * svrType, MethodInfo * method));
DO_APP_FUNC(0x023217A0, ActivatedClientTypeEntry *, RemotingConfiguration_IsRemotelyActivatedClientType, (Type * svrType, MethodInfo * method));
DO_APP_FUNC(0x023219C0, WellKnownClientTypeEntry *, RemotingConfiguration_IsWellKnownClientType, (Type * svrType, MethodInfo * method));
DO_APP_FUNC(0x02321BE0, void, RemotingConfiguration_RegisterActivatedClientType, (ActivatedClientTypeEntry * entry, MethodInfo * method));
DO_APP_FUNC(0x02321EC0, void, RemotingConfiguration_RegisterActivatedServiceType, (ActivatedServiceTypeEntry * entry, MethodInfo * method));
DO_APP_FUNC(0x02322080, void, RemotingConfiguration_RegisterWellKnownClientType, (WellKnownClientTypeEntry * entry, MethodInfo * method));
DO_APP_FUNC(0x02322360, void, RemotingConfiguration_RegisterWellKnownServiceType, (WellKnownServiceTypeEntry * entry, MethodInfo * method));
DO_APP_FUNC(0x02322580, void, RemotingConfiguration_RegisterChannelTemplate, (ChannelData * channel, MethodInfo * method));
DO_APP_FUNC(0x02322660, void, RemotingConfiguration_RegisterClientProviderTemplate, (ProviderData * prov, MethodInfo * method));
DO_APP_FUNC(0x02322740, void, RemotingConfiguration_RegisterServerProviderTemplate, (ProviderData * prov, MethodInfo * method));
DO_APP_FUNC(0x02322820, void, RemotingConfiguration_RegisterChannels, (ArrayList * channels, bool onlyDelayed, MethodInfo * method));
DO_APP_FUNC(0x02323000, void, RemotingConfiguration_RegisterTypes, (ArrayList * types, MethodInfo * method));
DO_APP_FUNC(0x02323480, bool, RemotingConfiguration_CustomErrorsEnabled, (bool isLocalRequest, MethodInfo * method));
DO_APP_FUNC(0x023235D0, void, RemotingConfiguration_SetCustomErrorsMode, (String * mode, MethodInfo * method));
DO_APP_FUNC(0x02323790, void, RemotingConfiguration__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01AA0550, void, ConfigHandler__ctor, (ConfigHandler * __this, bool onlyDelayedChannels, MethodInfo * method));
DO_APP_FUNC(0x01AA0780, void, ConfigHandler_ValidatePath, (ConfigHandler * __this, String * element, String__Array * paths, MethodInfo * method));
DO_APP_FUNC(0x01AA08A0, bool, ConfigHandler_CheckPath, (ConfigHandler * __this, String * path, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ConfigHandler_OnStartParsing, (ConfigHandler * __this, SmallXmlParser * parser, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ConfigHandler_OnProcessingInstruction, (ConfigHandler * __this, String * name, String * text, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ConfigHandler_OnIgnorableWhitespace, (ConfigHandler * __this, String * s, MethodInfo * method));
DO_APP_FUNC(0x01AA0A30, void, ConfigHandler_OnStartElement, (ConfigHandler * __this, String * name, SmallXmlParser_IAttrList * attrs, MethodInfo * method));
DO_APP_FUNC(0x01AA0B80, void, ConfigHandler_ParseElement, (ConfigHandler * __this, String * name, SmallXmlParser_IAttrList * attrs, MethodInfo * method));
DO_APP_FUNC(0x01AA1F20, void, ConfigHandler_OnEndElement, (ConfigHandler * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01AA1FC0, void, ConfigHandler_ReadCustomProviderData, (ConfigHandler * __this, String * name, SmallXmlParser_IAttrList * attrs, MethodInfo * method));
DO_APP_FUNC(0x01AA2480, void, ConfigHandler_ReadLifetine, (ConfigHandler * __this, SmallXmlParser_IAttrList * attrs, MethodInfo * method));
DO_APP_FUNC(0x01AA2850, TimeSpan, ConfigHandler_ParseTime, (ConfigHandler * __this, String * s, MethodInfo * method));
DO_APP_FUNC(0x01AA2CF0, void, ConfigHandler_ReadChannel, (ConfigHandler * __this, SmallXmlParser_IAttrList * attrs, bool isTemplate, MethodInfo * method));
DO_APP_FUNC(0x01AA33E0, ProviderData *, ConfigHandler_ReadProvider, (ConfigHandler * __this, String * name, SmallXmlParser_IAttrList * attrs, bool isTemplate, MethodInfo * method));
DO_APP_FUNC(0x01AA3B60, void, ConfigHandler_ReadClientActivated, (ConfigHandler * __this, SmallXmlParser_IAttrList * attrs, MethodInfo * method));
DO_APP_FUNC(0x01AA3E80, void, ConfigHandler_ReadServiceActivated, (ConfigHandler * __this, SmallXmlParser_IAttrList * attrs, MethodInfo * method));
DO_APP_FUNC(0x01AA4130, void, ConfigHandler_ReadClientWellKnown, (ConfigHandler * __this, SmallXmlParser_IAttrList * attrs, MethodInfo * method));
DO_APP_FUNC(0x01AA4400, void, ConfigHandler_ReadServiceWellKnown, (ConfigHandler * __this, SmallXmlParser_IAttrList * attrs, MethodInfo * method));
DO_APP_FUNC(0x01AA47C0, void, ConfigHandler_ReadInteropXml, (ConfigHandler * __this, SmallXmlParser_IAttrList * attrs, bool isElement, MethodInfo * method));
DO_APP_FUNC(0x01AA4A40, void, ConfigHandler_ReadPreload, (ConfigHandler * __this, SmallXmlParser_IAttrList * attrs, MethodInfo * method));
DO_APP_FUNC(0x01AA4D10, String *, ConfigHandler_GetNotNull, (ConfigHandler * __this, SmallXmlParser_IAttrList * attrs, String * name, MethodInfo * method));
DO_APP_FUNC(0x01AA4E30, String *, ConfigHandler_ExtractAssembly, (ConfigHandler * __this, String * * type, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ConfigHandler_OnChars, (ConfigHandler * __this, String * ch, MethodInfo * method));
DO_APP_FUNC(0x01AA4F80, void, ConfigHandler_OnEndParsing, (ConfigHandler * __this, SmallXmlParser * parser, MethodInfo * method));
DO_APP_FUNC(0x01A99A40, ArrayList *, ChannelData_get_ServerProviders, (ChannelData * __this, MethodInfo * method));
DO_APP_FUNC(0x01A99BA0, ArrayList *, ChannelData_get_ClientProviders, (ChannelData * __this, MethodInfo * method));
DO_APP_FUNC(0x01A99D00, Hashtable *, ChannelData_get_CustomProperties, (ChannelData * __this, MethodInfo * method));
DO_APP_FUNC(0x01A99E70, void, ChannelData_CopyFrom, (ChannelData * __this, ChannelData * other, MethodInfo * method));
DO_APP_FUNC(0x01A9A7C0, void, ChannelData__ctor, (ChannelData * __this, MethodInfo * method));
DO_APP_FUNC(0x0231CA50, void, ProviderData_CopyFrom, (ProviderData * __this, ProviderData * other, MethodInfo * method));
DO_APP_FUNC(0x0231D110, void, ProviderData__ctor, (ProviderData * __this, MethodInfo * method));
DO_APP_FUNC(0x02306450, void, FormatterData__ctor, (FormatterData * __this, MethodInfo * method));
DO_APP_FUNC(0x01E25790, void, RemotingException__ctor, (RemotingException * __this, MethodInfo * method));
DO_APP_FUNC(0x01E259B0, void, RemotingException__ctor_1, (RemotingException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, RemotingException__ctor_2, (RemotingException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01E259C0, void, RemotingException__ctor_3, (RemotingException * __this, String * message, Exception * InnerException, MethodInfo * method));
DO_APP_FUNC(0x02323E80, void, RemotingServices__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02324510, Object *, RemotingServices_InternalExecute, (MethodBase * method_1, Object * obj, Object__Array * parameters, Object__Array * * out_args, MethodInfo * method));
DO_APP_FUNC(0x02324520, MethodBase *, RemotingServices_GetVirtualMethod, (Type * type, MethodBase * method_1, MethodInfo * method));
DO_APP_FUNC(0x02324530, bool, RemotingServices_IsTransparentProxy, (Object * proxy, MethodInfo * method));
DO_APP_FUNC(0x02324580, IMethodReturnMessage *, RemotingServices_InternalExecuteMessage, (MarshalByRefObject * target, IMethodCallMessage * reqMsg, MethodInfo * method));
DO_APP_FUNC(0x02324A40, Object *, RemotingServices_Connect, (Type * classToProxy, String * url, MethodInfo * method));
DO_APP_FUNC(0x02324BD0, Object *, RemotingServices_Connect_1, (Type * classToProxy, String * url, Object * data, MethodInfo * method));
DO_APP_FUNC(0x02324D60, Type *, RemotingServices_GetServerTypeForUri, (String * URI, MethodInfo * method));
DO_APP_FUNC(0x02324E60, Object *, RemotingServices_Unmarshal, (ObjRef * objectRef, MethodInfo * method));
DO_APP_FUNC(0x02324F00, Object *, RemotingServices_Unmarshal_1, (ObjRef * objectRef, bool fRefine, MethodInfo * method));
DO_APP_FUNC(0x023252A0, ObjRef *, RemotingServices_Marshal, (MarshalByRefObject * Obj, MethodInfo * method));
DO_APP_FUNC(0x02325340, ObjRef *, RemotingServices_Marshal_1, (MarshalByRefObject * Obj, String * ObjURI, Type * RequestedType, MethodInfo * method));
DO_APP_FUNC(0x023253E0, String *, RemotingServices_NewUri, (MethodInfo * method));
DO_APP_FUNC(0x02325940, RealProxy *, RemotingServices_GetRealProxy, (Object * proxy, MethodInfo * method));
DO_APP_FUNC(0x023259E0, MethodBase *, RemotingServices_GetMethodBaseFromMethodMessage, (IMethodMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x02325BE0, MethodBase *, RemotingServices_GetMethodBaseFromName, (Type * type, String * methodName, Type__Array * signature, MethodInfo * method));
DO_APP_FUNC(0x02325E50, MethodBase *, RemotingServices_FindInterfaceMethod, (Type * type, String * methodName, Type__Array * signature, MethodInfo * method));
DO_APP_FUNC(0x02326000, void, RemotingServices_GetObjectData, (Object * obj, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x023260E0, bool, RemotingServices_IsOneWay, (MethodBase * method_1, MethodInfo * method));
DO_APP_FUNC(0x023261B0, Object *, RemotingServices_CreateClientProxy, (ActivatedClientTypeEntry * entry, Object__Array * activationAttributes, MethodInfo * method));
DO_APP_FUNC(0x023263B0, Object *, RemotingServices_CreateClientProxy_1, (Type * objectType, String * url, Object__Array * activationAttributes, MethodInfo * method));
DO_APP_FUNC(0x023265D0, Object *, RemotingServices_CreateClientProxy_2, (WellKnownClientTypeEntry * entry, MethodInfo * method));
DO_APP_FUNC(0x02326690, Object *, RemotingServices_CreateClientProxyForContextBound, (Type * type, Object__Array * activationAttributes, MethodInfo * method));
DO_APP_FUNC(0x02326920, Identity *, RemotingServices_GetIdentityForUri, (String * uri, MethodInfo * method));
DO_APP_FUNC(0x02326BF0, String *, RemotingServices_RemoveAppNameFromUri, (String * uri, MethodInfo * method));
DO_APP_FUNC(0x02326D80, ClientIdentity *, RemotingServices_GetOrCreateClientIdentity, (ObjRef * objRef, Type * proxyType, Object * * clientProxy, MethodInfo * method));
DO_APP_FUNC(0x023275B0, IMessageSink *, RemotingServices_GetClientChannelSinkChain, (String * url, Object * channelData, String * * objectUri, MethodInfo * method));
DO_APP_FUNC(0x02327700, ClientActivatedIdentity *, RemotingServices_CreateContextBoundObjectIdentity, (Type * objectType, MethodInfo * method));
DO_APP_FUNC(0x02327900, ClientActivatedIdentity *, RemotingServices_CreateClientActivatedServerIdentity, (MarshalByRefObject * realObject, Type * objectType, String * objectUri, MethodInfo * method));
DO_APP_FUNC(0x02327A90, ServerIdentity *, RemotingServices_CreateWellKnownServerIdentity, (Type * objectType, String * objectUri, WellKnownObjectMode__Enum mode, MethodInfo * method));
DO_APP_FUNC(0x02327D30, void, RemotingServices_RegisterServerIdentity, (ServerIdentity * identity, MethodInfo * method));
DO_APP_FUNC(0x02327FB0, Object *, RemotingServices_GetProxyForRemoteObject, (ObjRef * objref, Type * classToProxy, MethodInfo * method));
DO_APP_FUNC(0x02328100, Object *, RemotingServices_GetRemoteObject, (ObjRef * objRef, Type * proxyType, MethodInfo * method));
DO_APP_FUNC(0x023281C0, Byte__Array *, RemotingServices_SerializeCallData, (Object * obj, MethodInfo * method));
DO_APP_FUNC(0x023284C0, Object *, RemotingServices_DeserializeCallData, (Byte__Array * array, MethodInfo * method));
DO_APP_FUNC(0x023287A0, Byte__Array *, RemotingServices_SerializeExceptionData, (Exception * ex, MethodInfo * method));
DO_APP_FUNC(0x02328980, void, RemotingServices_RegisterInternalChannels, (MethodInfo * method));
DO_APP_FUNC(0x02328A10, void, RemotingServices_DisposeIdentity, (Identity * ident, MethodInfo * method));
DO_APP_FUNC(0x02328CB0, Identity *, RemotingServices_GetMessageTargetIdentity, (IMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x02329030, void, RemotingServices_SetMessageTargetIdentity, (IMessage * msg, Identity * ident, MethodInfo * method));
DO_APP_FUNC(0x02329130, bool, RemotingServices_UpdateOutArgObject, (ParameterInfo_1 * pi, Object * local, Object * remote, MethodInfo * method));
DO_APP_FUNC(0x02329310, String *, RemotingServices_GetNormalizedUri, (String * uri, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RemotingServices_CACD__ctor, (RemotingServices_CACD * __this, MethodInfo * method));
DO_APP_FUNC(0x01D836D0, void, ServerIdentity__ctor, (ServerIdentity * __this, String * objectUri, Context * context, Type * objectType, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, Type *, ServerIdentity_get_ObjectType, (ServerIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x01D836E0, void, ServerIdentity_StartTrackingLifetime, (ServerIdentity * __this, ILease * lease, MethodInfo * method));
DO_APP_FUNC(0x01D839B0, void, ServerIdentity_OnLifetimeExpired, (ServerIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x01D839C0, ObjRef *, ServerIdentity_CreateObjRef, (ServerIdentity * __this, Type * requestedType, MethodInfo * method));
DO_APP_FUNC(0x01D83DB0, void, ServerIdentity_AttachServerObject, (ServerIdentity * __this, MarshalByRefObject * serverObject, Context * context, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, Lease *, ServerIdentity_get_Lease, (ServerIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, Context *, ServerIdentity_get_Context, (ServerIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB90, void, ServerIdentity_set_Context, (ServerIdentity * __this, Context * value, MethodInfo * method));
DO_APP_FUNC(0x01D83E70, void, ServerIdentity_DisposeServerObject, (ServerIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x01A9FF60, void, ClientActivatedIdentity__ctor, (ClientActivatedIdentity * __this, String * objectUri, Type * objectType, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, MarshalByRefObject *, ClientActivatedIdentity_GetServerObject, (ClientActivatedIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBD0, void, ClientActivatedIdentity_SetClientProxy, (ClientActivatedIdentity * __this, MarshalByRefObject * obj, MethodInfo * method));
DO_APP_FUNC(0x01A9FF80, void, ClientActivatedIdentity_OnLifetimeExpired, (ClientActivatedIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x01AA0030, IMessage *, ClientActivatedIdentity_SyncObjectProcessMessage, (ClientActivatedIdentity * __this, IMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x01AA0110, IMessageCtrl *, ClientActivatedIdentity_AsyncObjectProcessMessage, (ClientActivatedIdentity * __this, IMessage * msg, IMessageSink * replySink, MethodInfo * method));
DO_APP_FUNC(0x01D836D0, void, SingletonIdentity__ctor, (SingletonIdentity * __this, String * objectUri, Context * context, Type * objectType, MethodInfo * method));
DO_APP_FUNC(0x01D84E80, MarshalByRefObject *, SingletonIdentity_GetServerObject, (SingletonIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x01D85000, IMessage *, SingletonIdentity_SyncObjectProcessMessage, (SingletonIdentity * __this, IMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x01D850E0, IMessageCtrl *, SingletonIdentity_AsyncObjectProcessMessage, (SingletonIdentity * __this, IMessage * msg, IMessageSink * replySink, MethodInfo * method));
DO_APP_FUNC(0x01D836D0, void, SingleCallIdentity__ctor, (SingleCallIdentity * __this, String * objectUri, Context * context, Type * objectType, MethodInfo * method));
DO_APP_FUNC(0x01D84BC0, IMessage *, SingleCallIdentity_SyncObjectProcessMessage, (SingleCallIdentity * __this, IMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x01D84C20, IMessageCtrl *, SingleCallIdentity_AsyncObjectProcessMessage, (SingleCallIdentity * __this, IMessage * msg, IMessageSink * replySink, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, DisposerReplySink__ctor, (DisposerReplySink * __this, IMessageSink * next, IDisposable * disposable, MethodInfo * method));
DO_APP_FUNC(0x02306340, IMessage *, DisposerReplySink_SyncProcessMessage, (DisposerReplySink * __this, IMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x02306400, IMessageCtrl *, DisposerReplySink_AsyncProcessMessage, (DisposerReplySink * __this, IMessage * msg, IMessageSink * replySink, MethodInfo * method));
DO_APP_FUNC(0x01D851D0, String *, SoapServices_get_XmlNsForClrTypeWithAssembly, (MethodInfo * method));
DO_APP_FUNC(0x01D85250, String *, SoapServices_get_XmlNsForClrTypeWithNs, (MethodInfo * method));
DO_APP_FUNC(0x01D852D0, String *, SoapServices_get_XmlNsForClrTypeWithNsAndAssembly, (MethodInfo * method));
DO_APP_FUNC(0x01D85350, String *, SoapServices_CodeXmlNamespaceForClrTypeNamespace, (String * typeNamespace, String * assemblyName, MethodInfo * method));
DO_APP_FUNC(0x01D85630, String *, SoapServices_GetNameKey, (String * name, String * namspace, MethodInfo * method));
DO_APP_FUNC(0x01D856E0, String *, SoapServices_GetAssemblyName, (MethodBase * mb, MethodInfo * method));
DO_APP_FUNC(0x01D858C0, bool, SoapServices_GetXmlElementForInteropType, (Type * type, String * * xmlElement, String * * xmlNamespace, MethodInfo * method));
DO_APP_FUNC(0x01D859D0, String *, SoapServices_GetXmlNamespaceForMethodCall, (MethodBase * mb, MethodInfo * method));
DO_APP_FUNC(0x01D85AC0, String *, SoapServices_GetXmlNamespaceForMethodResponse, (MethodBase * mb, MethodInfo * method));
DO_APP_FUNC(0x01D85BB0, bool, SoapServices_GetXmlTypeForInteropType, (Type * type, String * * xmlType, String * * xmlTypeNamespace, MethodInfo * method));
DO_APP_FUNC(0x01D85CC0, void, SoapServices_PreLoad, (Assembly * assembly, MethodInfo * method));
DO_APP_FUNC(0x01D85DC0, void, SoapServices_PreLoad_1, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x01D866A0, void, SoapServices_RegisterInteropXmlElement, (String * xmlElement, String * xmlNamespace, Type * type, MethodInfo * method));
DO_APP_FUNC(0x01D868C0, void, SoapServices_RegisterInteropXmlType, (String * xmlType, String * xmlTypeNamespace, Type * type, MethodInfo * method));
DO_APP_FUNC(0x01D86AE0, String *, SoapServices_EncodeNs, (String * ns, MethodInfo * method));
DO_APP_FUNC(0x01D86BC0, void, SoapServices__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SoapServices_TypeInfo__ctor, (SoapServices_TypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TypeEntry__ctor, (TypeEntry * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, TypeEntry_get_AssemblyName, (TypeEntry * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, TypeEntry_set_AssemblyName, (TypeEntry * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, TypeEntry_get_TypeName, (TypeEntry * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, TypeEntry_set_TypeName, (TypeEntry * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D870A0, void, TypeInfo_1__ctor, (TypeInfo_1 * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, TypeInfo_1_get_TypeName, (TypeInfo_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01D874C0, bool, TypeInfo_1_CanCastTo, (TypeInfo_1 * __this, Type * fromType, Object * o, MethodInfo * method));
DO_APP_FUNC(0x01D87770, void, WellKnownClientTypeEntry__ctor, (WellKnownClientTypeEntry * __this, String * typeName, String * assemblyName, String * objectUrl, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, WellKnownClientTypeEntry_get_ApplicationUrl, (WellKnownClientTypeEntry * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, Type *, WellKnownClientTypeEntry_get_ObjectType, (WellKnownClientTypeEntry * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, WellKnownClientTypeEntry_get_ObjectUrl, (WellKnownClientTypeEntry * __this, MethodInfo * method));
DO_APP_FUNC(0x01D878C0, String *, WellKnownClientTypeEntry_ToString, (WellKnownClientTypeEntry * __this, MethodInfo * method));
DO_APP_FUNC(0x01D87900, void, WellKnownServiceTypeEntry__ctor, (WellKnownServiceTypeEntry * __this, String * typeName, String * assemblyName, String * objectUri, WellKnownObjectMode__Enum mode, MethodInfo * method));
DO_APP_FUNC(0x00654950, WellKnownObjectMode__Enum, WellKnownServiceTypeEntry_get_Mode, (WellKnownServiceTypeEntry * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, Type *, WellKnownServiceTypeEntry_get_ObjectType, (WellKnownServiceTypeEntry * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, WellKnownServiceTypeEntry_get_ObjectUri, (WellKnownServiceTypeEntry * __this, MethodInfo * method));
DO_APP_FUNC(0x01D87A60, String *, WellKnownServiceTypeEntry_ToString, (WellKnownServiceTypeEntry * __this, MethodInfo * method));
DO_APP_FUNC(0x01D83F10, void, TrackingServices_NotifyMarshaledObject, (Object * obj, ObjRef * or_1, MethodInfo * method));
DO_APP_FUNC(0x01D842E0, void, TrackingServices_NotifyUnmarshaledObject, (Object * obj, ObjRef * or_1, MethodInfo * method));
DO_APP_FUNC(0x01D846B0, void, TrackingServices_NotifyDisconnectedObject, (Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01D84A70, void, TrackingServices__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0231D270, MarshalByRefObject *, ProxyAttribute_CreateInstance, (ProxyAttribute * __this, Type * serverType, MethodInfo * method));
DO_APP_FUNC(0x0231D470, RealProxy *, ProxyAttribute_CreateProxy, (ProxyAttribute * __this, ObjRef * objRef, Type * serverType, Object * serverObject, Context * serverContext, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ProxyAttribute_GetPropertiesForNewContext, (ProxyAttribute * __this, IConstructionCallMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, ProxyAttribute_IsContextOK, (ProxyAttribute * __this, Context * ctx, IConstructionCallMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x023200F0, RuntimeType *, TransparentProxy_GetProxyType, (TransparentProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x02320200, bool, TransparentProxy_get_IsContextBoundObject, (TransparentProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x004173F0, Context *, TransparentProxy_get_TargetContext, (TransparentProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x02320320, bool, TransparentProxy_InCurrentContext, (TransparentProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x023204A0, Object *, TransparentProxy_LoadRemoteFieldNew, (TransparentProxy * __this, void * classPtr, void * fieldPtr, MethodInfo * method));
DO_APP_FUNC(0x02320900, void, TransparentProxy_StoreRemoteField, (TransparentProxy * __this, void * classPtr, void * fieldPtr, Object * arg, MethodInfo * method));
DO_APP_FUNC(0x0231D520, void, RealProxy__ctor, (RealProxy * __this, Type * classToProxy, MethodInfo * method));
DO_APP_FUNC(0x0231D5C0, void, RealProxy__ctor_1, (RealProxy * __this, Type * classToProxy, ClientIdentity * identity, MethodInfo * method));
DO_APP_FUNC(0x0231D670, void, RealProxy__ctor_2, (RealProxy * __this, Type * classToProxy, void * stub, Object * stubData, MethodInfo * method));
DO_APP_FUNC(0x0231D7A0, Type *, RealProxy_InternalGetProxyType, (Object * transparentProxy, MethodInfo * method));
DO_APP_FUNC(0x0231D7B0, Type *, RealProxy_GetProxiedType, (RealProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x0231D890, void, RealProxy_GetObjectData, (RealProxy * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, Identity *, RealProxy_get_ObjectIdentity, (RealProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9C0, void, RealProxy_set_ObjectIdentity, (RealProxy * __this, Identity * value, MethodInfo * method));
DO_APP_FUNC(0x0231D960, Object *, RealProxy_PrivateInvoke, (RealProxy * rp, IMessage * msg, Exception * * exc, Object__Array * * out_args, MethodInfo * method));
DO_APP_FUNC(0x0231E3C0, Object *, RealProxy_InternalGetTransparentProxy, (RealProxy * __this, String * className, MethodInfo * method));
DO_APP_FUNC(0x0231E3D0, Object *, RealProxy_GetTransparentProxy, (RealProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, RealProxy_AttachServer, (RealProxy * __this, MarshalByRefObject * s, MethodInfo * method));
DO_APP_FUNC(0x002FB980, void, RealProxy_SetTargetDomain, (RealProxy * __this, int32_t domainId, MethodInfo * method));
DO_APP_FUNC(0x0231E550, Object *, RealProxy_GetAppDomainTarget, (RealProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x0231E6A0, Object__Array *, RealProxy_ProcessResponse, (IMethodReturnMessage * mrm, MonoMethodMessage * call, MethodInfo * method));
DO_APP_FUNC(0x0231ECB0, void, RemotingProxy__ctor, (RemotingProxy * __this, Type * type, ClientIdentity * identity, MethodInfo * method));
DO_APP_FUNC(0x0231EDA0, void, RemotingProxy__ctor_1, (RemotingProxy * __this, Type * type, String * activationUrl, Object__Array * activationAttributes, MethodInfo * method));
DO_APP_FUNC(0x0231EE70, IMessage *, RemotingProxy_Invoke, (RemotingProxy * __this, IMessage * request, MethodInfo * method));
DO_APP_FUNC(0x0231F430, void, RemotingProxy_AttachIdentity, (RemotingProxy * __this, Identity * identity, MethodInfo * method));
DO_APP_FUNC(0x0231F830, IMessage *, RemotingProxy_ActivateRemoteObject, (RemotingProxy * __this, IMethodMessage * request, MethodInfo * method));
DO_APP_FUNC(0x0231FB20, String *, RemotingProxy_get_TypeName, (RemotingProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x0231FC90, bool, RemotingProxy_CanCastTo, (RemotingProxy * __this, Type * fromType, Object * o, MethodInfo * method));
DO_APP_FUNC(0x0231FEA0, void, RemotingProxy_Finalize, (RemotingProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x0231FFE0, void, RemotingProxy__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02306F60, void, Lease__ctor, (Lease * __this, MethodInfo * method));
DO_APP_FUNC(0x023071F0, TimeSpan, Lease_get_CurrentLeaseTime, (Lease * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, LeaseState__Enum, Lease_get_CurrentState, (Lease * __this, MethodInfo * method));
DO_APP_FUNC(0x015145C0, void, Lease_Activate, (Lease * __this, MethodInfo * method));
DO_APP_FUNC(0x023072A0, void, Lease_set_InitialLeaseTime, (Lease * __this, TimeSpan value, MethodInfo * method));
DO_APP_FUNC(0x002FB990, TimeSpan, Lease_get_RenewOnCallTime, (Lease * __this, MethodInfo * method));
DO_APP_FUNC(0x02307410, void, Lease_set_RenewOnCallTime, (Lease * __this, TimeSpan value, MethodInfo * method));
DO_APP_FUNC(0x02307500, void, Lease_set_SponsorshipTimeout, (Lease * __this, TimeSpan value, MethodInfo * method));
DO_APP_FUNC(0x023075F0, TimeSpan, Lease_Renew, (Lease * __this, TimeSpan renewalTime, MethodInfo * method));
DO_APP_FUNC(0x023076D0, void, Lease_Unregister, (Lease * __this, ISponsor * obj, MethodInfo * method));
DO_APP_FUNC(0x02307840, void, Lease_UpdateState, (Lease * __this, MethodInfo * method));
DO_APP_FUNC(0x02307AB0, void, Lease_CheckNextSponsor, (Lease * __this, MethodInfo * method));
DO_APP_FUNC(0x02307DE0, void, Lease_ProcessSponsorResponse, (Lease * __this, Object * state, bool timedOut, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, Lease_RenewalDelegate__ctor, (Lease_RenewalDelegate * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x014347E0, TimeSpan, Lease_RenewalDelegate_Invoke, (Lease_RenewalDelegate * __this, ILease * lease, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, Lease_RenewalDelegate_BeginInvoke, (Lease_RenewalDelegate * __this, ILease * lease, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00F52480, TimeSpan, Lease_RenewalDelegate_EndInvoke, (Lease_RenewalDelegate * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x02308060, void, LeaseManager_SetPollTime, (LeaseManager * __this, TimeSpan timeSpan, MethodInfo * method));
DO_APP_FUNC(0x023081D0, void, LeaseManager_TrackLifetime, (LeaseManager * __this, ServerIdentity * identity, MethodInfo * method));
DO_APP_FUNC(0x02308330, void, LeaseManager_StartManager, (LeaseManager * __this, MethodInfo * method));
DO_APP_FUNC(0x02308610, void, LeaseManager_StopManager, (LeaseManager * __this, MethodInfo * method));
DO_APP_FUNC(0x02308630, void, LeaseManager_ManageLeases, (LeaseManager * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x02308900, void, LeaseManager__ctor, (LeaseManager * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, LeaseSink__ctor, (LeaseSink * __this, IMessageSink * nextSink, MethodInfo * method));
DO_APP_FUNC(0x02308A50, IMessage *, LeaseSink_SyncProcessMessage, (LeaseSink * __this, IMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x02308B00, IMessageCtrl *, LeaseSink_AsyncProcessMessage, (LeaseSink * __this, IMessage * msg, IMessageSink * replySink, MethodInfo * method));
DO_APP_FUNC(0x02308BC0, void, LeaseSink_RenewLease, (LeaseSink * __this, IMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x02308E00, void, LifetimeServices__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02309110, TimeSpan, LifetimeServices_get_LeaseManagerPollTime, (MethodInfo * method));
DO_APP_FUNC(0x023091B0, void, LifetimeServices_set_LeaseManagerPollTime, (TimeSpan value, MethodInfo * method));
DO_APP_FUNC(0x02309280, TimeSpan, LifetimeServices_get_LeaseTime, (MethodInfo * method));
DO_APP_FUNC(0x02309320, void, LifetimeServices_set_LeaseTime, (TimeSpan value, MethodInfo * method));
DO_APP_FUNC(0x023093D0, TimeSpan, LifetimeServices_get_RenewOnCallTime, (MethodInfo * method));
DO_APP_FUNC(0x02309470, void, LifetimeServices_set_RenewOnCallTime, (TimeSpan value, MethodInfo * method));
DO_APP_FUNC(0x02309520, TimeSpan, LifetimeServices_get_SponsorshipTimeout, (MethodInfo * method));
DO_APP_FUNC(0x023095C0, void, LifetimeServices_set_SponsorshipTimeout, (TimeSpan value, MethodInfo * method));
DO_APP_FUNC(0x02309670, void, LifetimeServices_TrackLifetime, (ServerIdentity * identity, MethodInfo * method));
DO_APP_FUNC(0x0173D7D0, void, Context_RegisterContext, (Context * ctx, MethodInfo * method));
DO_APP_FUNC(0x0173D7D0, void, Context_ReleaseContext, (Context * ctx, MethodInfo * method));
DO_APP_FUNC(0x023020D0, void, Context__ctor, (Context * __this, MethodInfo * method));
DO_APP_FUNC(0x023021B0, void, Context_Finalize, (Context * __this, MethodInfo * method));
DO_APP_FUNC(0x0228D860, Context *, Context_get_DefaultContext, (MethodInfo * method));
DO_APP_FUNC(0x00CC59E0, int32_t, Context_get_ContextID, (Context * __this, MethodInfo * method));
DO_APP_FUNC(0x02302270, IContextProperty__Array *, Context_get_ContextProperties, (Context * __this, MethodInfo * method));
DO_APP_FUNC(0x02302310, bool, Context_get_IsDefaultContext, (Context * __this, MethodInfo * method));
DO_APP_FUNC(0x02302320, bool, Context_get_NeedsContextSink, (Context * __this, MethodInfo * method));
DO_APP_FUNC(0x02302460, bool, Context_RegisterDynamicProperty, (IDynamicProperty * prop, ContextBoundObject * obj, Context * ctx, MethodInfo * method));
DO_APP_FUNC(0x02302530, bool, Context_UnregisterDynamicProperty, (String * name, ContextBoundObject * obj, Context * ctx, MethodInfo * method));
DO_APP_FUNC(0x02302600, DynamicPropertyCollection *, Context_GetDynamicPropertyCollection, (ContextBoundObject * obj, Context * ctx, MethodInfo * method));
DO_APP_FUNC(0x02302940, void, Context_NotifyGlobalDynamicSinks, (bool start, IMessage * req_msg, bool client_site, bool async, MethodInfo * method));
DO_APP_FUNC(0x02302AD0, bool, Context_get_HasGlobalDynamicSinks, (MethodInfo * method));
DO_APP_FUNC(0x02302BD0, void, Context_NotifyDynamicSinks, (Context * __this, bool start, IMessage * req_msg, bool client_site, bool async, MethodInfo * method));
DO_APP_FUNC(0x02302C70, bool, Context_get_HasDynamicSinks, (Context * __this, MethodInfo * method));
DO_APP_FUNC(0x02302CB0, bool, Context_get_HasExitSinks, (Context * __this, MethodInfo * method));
DO_APP_FUNC(0x02302DE0, IContextProperty *, Context_GetProperty, (Context * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x02302FB0, void, Context_SetProperty, (Context * __this, IContextProperty * prop, MethodInfo * method));
DO_APP_FUNC(0x023031F0, void, Context_Freeze, (Context * __this, MethodInfo * method));
DO_APP_FUNC(0x023033A0, String *, Context_ToString, (Context * __this, MethodInfo * method));
DO_APP_FUNC(0x02303440, IMessageSink *, Context_GetServerContextSinkChain, (Context * __this, MethodInfo * method));
DO_APP_FUNC(0x023036A0, IMessageSink *, Context_GetClientContextSinkChain, (Context * __this, MethodInfo * method));
DO_APP_FUNC(0x023038F0, IMessageSink *, Context_CreateServerObjectSinkChain, (Context * __this, MarshalByRefObject * obj, bool forceInternalExecute, MethodInfo * method));
DO_APP_FUNC(0x02303CE0, IMessageSink *, Context_CreateEnvoySink, (Context * __this, MarshalByRefObject * serverObject, MethodInfo * method));
DO_APP_FUNC(0x02303EA0, Context *, Context_SwitchToContext, (Context * newContext, MethodInfo * method));
DO_APP_FUNC(0x02303EB0, Context *, Context_CreateNewContext, (IConstructionCallMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x02303F10, void, Context_DoCallBack, (Context * __this, CrossContextDelegate * deleg, MethodInfo * method));
DO_APP_FUNC(0x02304070, LocalDataStore *, Context_get_MyLocalStore, (Context * __this, MethodInfo * method));
DO_APP_FUNC(0x02304270, LocalDataStoreSlot *, Context_AllocateDataSlot, (MethodInfo * method));
DO_APP_FUNC(0x02304320, LocalDataStoreSlot *, Context_AllocateNamedDataSlot, (String * name, MethodInfo * method));
DO_APP_FUNC(0x023043E0, void, Context_FreeNamedDataSlot, (String * name, MethodInfo * method));
DO_APP_FUNC(0x023044A0, LocalDataStoreSlot *, Context_GetNamedDataSlot, (String * name, MethodInfo * method));
DO_APP_FUNC(0x02304560, Object *, Context_GetData, (LocalDataStoreSlot * slot, MethodInfo * method));
DO_APP_FUNC(0x02304700, void, Context_SetData, (LocalDataStoreSlot * slot, Object * data, MethodInfo * method));
DO_APP_FUNC(0x02304780, void, Context__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02305550, bool, DynamicPropertyCollection_get_HasProperties, (DynamicPropertyCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02305580, bool, DynamicPropertyCollection_RegisterDynamicProperty, (DynamicPropertyCollection * __this, IDynamicProperty * prop, MethodInfo * method));
DO_APP_FUNC(0x02305930, bool, DynamicPropertyCollection_UnregisterDynamicProperty, (DynamicPropertyCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x02305B00, void, DynamicPropertyCollection_NotifyMessage, (DynamicPropertyCollection * __this, bool start, IMessage * msg, bool client_site, bool async, MethodInfo * method));
DO_APP_FUNC(0x02306000, int32_t, DynamicPropertyCollection_FindProperty, (DynamicPropertyCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x023061F0, void, DynamicPropertyCollection__ctor, (DynamicPropertyCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DynamicPropertyCollection_DynamicPropertyReg__ctor, (DynamicPropertyCollection_DynamicPropertyReg * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ContextCallbackObject_DoCallBack, (ContextCallbackObject * __this, CrossContextDelegate * deleg, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ContextCallbackObject__ctor, (ContextCallbackObject * __this, MethodInfo * method));
DO_APP_FUNC(0x023048D0, IMessage *, CrossContextChannel_SyncProcessMessage, (CrossContextChannel * __this, IMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x02304CE0, IMessageCtrl *, CrossContextChannel_AsyncProcessMessage, (CrossContextChannel * __this, IMessage * msg, IMessageSink * replySink, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CrossContextChannel__ctor, (CrossContextChannel * __this, MethodInfo * method));
DO_APP_FUNC(0x00522850, void, CrossContextChannel_ContextRestoreSink__ctor, (CrossContextChannel_ContextRestoreSink * __this, IMessageSink * next, Context * context, IMessage * call, MethodInfo * method));
DO_APP_FUNC(0x02305200, IMessage *, CrossContextChannel_ContextRestoreSink_SyncProcessMessage, (CrossContextChannel_ContextRestoreSink * __this, IMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x02305500, IMessageCtrl *, CrossContextChannel_ContextRestoreSink_AsyncProcessMessage, (CrossContextChannel_ContextRestoreSink * __this, IMessage * msg, IMessageSink * replySink, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, CrossContextDelegate__ctor, (CrossContextDelegate * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x00611820, void, CrossContextDelegate_Invoke, (CrossContextDelegate * __this, MethodInfo * method));
DO_APP_FUNC(0x00611B10, IAsyncResult *, CrossContextDelegate_BeginInvoke, (CrossContextDelegate * __this, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, CrossContextDelegate_EndInvoke, (CrossContextDelegate * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01A9B640, CrossContextChannel *, ChannelServices_get_CrossContextChannel, (MethodInfo * method));
DO_APP_FUNC(0x01A9B6E0, IMessageSink *, ChannelServices_CreateClientChannelSinkChain, (String * url, Object * remoteChannelData, String * * objectUri, MethodInfo * method));
DO_APP_FUNC(0x01A9BD00, IMessageSink *, ChannelServices_CreateClientChannelSinkChain_1, (IChannelSender * sender, String * url, Object__Array * channelDataArray, String * * objectUri, MethodInfo * method));
DO_APP_FUNC(0x01A9BE50, void, ChannelServices_RegisterChannel, (IChannel * chnl, MethodInfo * method));
DO_APP_FUNC(0x01A9BEF0, void, ChannelServices_RegisterChannel_1, (IChannel * chnl, bool ensureSecurity, MethodInfo * method));
DO_APP_FUNC(0x01A9C4B0, void, ChannelServices_RegisterChannelConfig, (ChannelData * channel, MethodInfo * method));
DO_APP_FUNC(0x01A9CFE0, Object *, ChannelServices_CreateProvider, (ProviderData * prov, MethodInfo * method));
DO_APP_FUNC(0x01A9D360, IMessage *, ChannelServices_SyncDispatchMessage, (IMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x01A9D490, ReturnMessage *, ChannelServices_CheckIncomingMessage, (IMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x01A9D7F0, IMessage *, ChannelServices_CheckReturnMessage, (IMessage * callMsg, IMessage * retMsg, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, ChannelServices_IsLocalCall, (IMessage * callMsg, MethodInfo * method));
DO_APP_FUNC(0x01A9DBE0, Object__Array *, ChannelServices_GetCurrentChannelInfo, (MethodInfo * method));
DO_APP_FUNC(0x01A9E010, void, ChannelServices__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01A9EB20, void, CrossAppDomainData__ctor, (CrossAppDomainData * __this, int32_t domainId, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, CrossAppDomainData_get_DomainID, (CrossAppDomainData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, CrossAppDomainData_get_ProcessID, (CrossAppDomainData * __this, MethodInfo * method));
DO_APP_FUNC(0x01A9E3F0, void, CrossAppDomainChannel_RegisterCrossAppDomainChannel, (MethodInfo * method));
DO_APP_FUNC(0x01A9E640, String *, CrossAppDomainChannel_get_ChannelName, (CrossAppDomainChannel * __this, MethodInfo * method));
DO_APP_FUNC(0x00651560, int32_t, CrossAppDomainChannel_get_ChannelPriority, (CrossAppDomainChannel * __this, MethodInfo * method));
DO_APP_FUNC(0x01A9E6C0, Object *, CrossAppDomainChannel_get_ChannelData, (CrossAppDomainChannel * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CrossAppDomainChannel_StartListening, (CrossAppDomainChannel * __this, Object * data, MethodInfo * method));
DO_APP_FUNC(0x01A9E830, IMessageSink *, CrossAppDomainChannel_CreateMessageSink, (CrossAppDomainChannel * __this, String * url, Object * data, String * * uri, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CrossAppDomainChannel__ctor, (CrossAppDomainChannel * __this, MethodInfo * method));
DO_APP_FUNC(0x01A9E9E0, void, CrossAppDomainChannel__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, CrossAppDomainSink__ctor, (CrossAppDomainSink * __this, int32_t domainID, MethodInfo * method));
DO_APP_FUNC(0x01A9EBF0, CrossAppDomainSink *, CrossAppDomainSink_GetSink, (int32_t domainID, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, CrossAppDomainSink_get_TargetDomainId, (CrossAppDomainSink * __this, MethodInfo * method));
DO_APP_FUNC(0x01A9F020, CrossAppDomainSink_ProcessMessageRes, CrossAppDomainSink_ProcessMessageInDomain, (Byte__Array * arrRequest, CADMethodCallMessage * cadMsg, MethodInfo * method));
DO_APP_FUNC(0x01A9F3E0, IMessage *, CrossAppDomainSink_SyncProcessMessage, (CrossAppDomainSink * __this, IMessage * msgRequest, MethodInfo * method));
DO_APP_FUNC(0x01A9F6C0, IMessageCtrl *, CrossAppDomainSink_AsyncProcessMessage, (CrossAppDomainSink * __this, IMessage * reqMsg, IMessageSink * replySink, MethodInfo * method));
DO_APP_FUNC(0x01A9F8F0, void, CrossAppDomainSink_SendAsyncMessage, (CrossAppDomainSink * __this, Object * data, MethodInfo * method));
DO_APP_FUNC(0x01A9FA00, void, CrossAppDomainSink__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01A9FBC0, void, CrossAppDomainSink__AsyncProcessMessage_b__10_0, (CrossAppDomainSink * __this, Object * data, MethodInfo * method));
DO_APP_FUNC(0x01A9AC40, IMessage *, CADSerializer_DeserializeMessage, (MemoryStream * mem, IMethodCallMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x01A9AC90, MemoryStream *, CADSerializer_SerializeMessage, (IMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x01A9AFD0, Object *, CADSerializer_DeserializeObjectSafe, (Byte__Array * mem, MethodInfo * method));
DO_APP_FUNC(0x01A9B160, MemoryStream *, CADSerializer_SerializeObject, (Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01A9B4A0, Object *, CADSerializer_DeserializeObject, (MemoryStream * mem, MethodInfo * method));
DO_APP_FUNC(0x01A9AC30, void, AsyncRequest__ctor, (AsyncRequest * __this, IMessage * msgRequest, IMessageSink * replySink, MethodInfo * method));
DO_APP_FUNC(0x01A9FD40, void, SinkProviderData__ctor, (SinkProviderData * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x002FB930, IList *, SinkProviderData_get_Children, (SinkProviderData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, IDictionary *, SinkProviderData_get_Properties, (SinkProviderData * __this, MethodInfo * method));
DO_APP_FUNC(0x01A97860, IActivator *, ActivationServices_get_ConstructionActivator, (MethodInfo * method));
DO_APP_FUNC(0x01A979D0, IMessage *, ActivationServices_Activate, (RemotingProxy * proxy, ConstructionCall * ctorCall, MethodInfo * method));
DO_APP_FUNC(0x01A97C00, IMessage *, ActivationServices_RemoteActivate, (IConstructionCallMessage * ctorCall, MethodInfo * method));
DO_APP_FUNC(0x01A97DB0, ConstructionCall *, ActivationServices_CreateConstructionCall, (Type * type, String * activationUrl, Object__Array * activationAttributes, MethodInfo * method));
DO_APP_FUNC(0x01A98970, IMessage *, ActivationServices_CreateInstanceFromMessage, (IConstructionCallMessage * ctorCall, MethodInfo * method));
DO_APP_FUNC(0x01A98A90, Object *, ActivationServices_CreateProxyForType, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x01A98CD0, Object *, ActivationServices_AllocateUninitializedClassInstance, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x01A98D10, void, ActivationServices_EnableProxyActivation, (Type * type, bool enable, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, AppDomainLevelActivator__ctor, (AppDomainLevelActivator * __this, String * activationUrl, IActivator * next, MethodInfo * method));
DO_APP_FUNC(0x002FB930, IActivator *, AppDomainLevelActivator_get_NextActivator, (AppDomainLevelActivator * __this, MethodInfo * method));
DO_APP_FUNC(0x01A98D20, IConstructionReturnMessage *, AppDomainLevelActivator_Activate, (AppDomainLevelActivator * __this, IConstructionCallMessage * ctorCall, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, IActivator *, ConstructionLevelActivator_get_NextActivator, (ConstructionLevelActivator * __this, MethodInfo * method));
DO_APP_FUNC(0x01A990F0, IConstructionReturnMessage *, ConstructionLevelActivator_Activate, (ConstructionLevelActivator * __this, IConstructionCallMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ConstructionLevelActivator__ctor, (ConstructionLevelActivator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, ContextLevelActivator__ctor, (ContextLevelActivator * __this, IActivator * next, MethodInfo * method));
DO_APP_FUNC(0x002FA280, IActivator *, ContextLevelActivator_get_NextActivator, (ContextLevelActivator * __this, MethodInfo * method));
DO_APP_FUNC(0x01A99200, IConstructionReturnMessage *, ContextLevelActivator_Activate, (ContextLevelActivator * __this, IConstructionCallMessage * ctorCall, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, RemoteActivationAttribute__ctor, (RemoteActivationAttribute * __this, IList * contextProperties, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, RemoteActivationAttribute_IsContextOK, (RemoteActivationAttribute * __this, Context * ctx, IConstructionCallMessage * ctor, MethodInfo * method));
DO_APP_FUNC(0x01A99390, void, RemoteActivationAttribute_GetPropertiesForNewContext, (RemoteActivationAttribute * __this, IConstructionCallMessage * ctor, MethodInfo * method));
DO_APP_FUNC(0x01A99690, IConstructionReturnMessage *, RemoteActivator_Activate, (RemoteActivator * __this, IConstructionCallMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x01A999C0, Object *, RemoteActivator_InitializeLifetimeService, (RemoteActivator * __this, MethodInfo * method));
DO_APP_FUNC(0x01A999F0, IActivator *, RemoteActivator_get_NextActivator, (RemoteActivator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SoapAttribute__ctor, (SoapAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, SoapAttribute_get_UseAttribute, (SoapAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, SoapAttribute_get_XmlNamespace, (SoapAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, SoapAttribute_SetReflectionObject, (SoapAttribute * __this, Object * reflectionObject, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SoapFieldAttribute__ctor, (SoapFieldAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, SoapFieldAttribute_get_XmlElementName, (SoapFieldAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A050, bool, SoapFieldAttribute_IsInteropXmlElement, (SoapFieldAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0231B230, void, SoapFieldAttribute_SetReflectionObject, (SoapFieldAttribute * __this, Object * reflectionObject, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SoapMethodAttribute__ctor, (SoapMethodAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x003FCB00, bool, SoapMethodAttribute_get_UseAttribute, (SoapMethodAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, String *, SoapMethodAttribute_get_XmlNamespace, (SoapMethodAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0231B330, void, SoapMethodAttribute_SetReflectionObject, (SoapMethodAttribute * __this, Object * reflectionObject, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SoapParameterAttribute__ctor, (SoapParameterAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SoapTypeAttribute__ctor, (SoapTypeAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x004F4CE0, bool, SoapTypeAttribute_get_UseAttribute, (SoapTypeAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, SoapTypeAttribute_get_XmlElementName, (SoapTypeAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, String *, SoapTypeAttribute_get_XmlNamespace, (SoapTypeAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, String *, SoapTypeAttribute_get_XmlTypeName, (SoapTypeAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, String *, SoapTypeAttribute_get_XmlTypeNamespace, (SoapTypeAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x008C5DB0, bool, SoapTypeAttribute_get_IsInteropXmlElement, (SoapTypeAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x004430B0, bool, SoapTypeAttribute_get_IsInteropXmlType, (SoapTypeAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0231B610, void, SoapTypeAttribute_SetReflectionObject, (SoapTypeAttribute * __this, Object * reflectionObject, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CallContext__ctor, (CallContext * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Object *, CallContext_SetCurrentCallContext, (LogicalCallContext * ctx, MethodInfo * method));
DO_APP_FUNC(0x0230E250, LogicalCallContext *, CallContext_SetLogicalCallContext, (LogicalCallContext * callCtx, MethodInfo * method));
DO_APP_FUNC(0x02310650, Hashtable *, IllogicalCallContext_get_Datastore, (IllogicalCallContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Object *, IllogicalCallContext_get_HostContext, (IllogicalCallContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, IllogicalCallContext_set_HostContext, (IllogicalCallContext * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x023107C0, bool, IllogicalCallContext_get_HasUserData, (IllogicalCallContext * __this, MethodInfo * method));
DO_APP_FUNC(0x023107F0, IllogicalCallContext *, IllogicalCallContext_CreateCopy, (IllogicalCallContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, IllogicalCallContext__ctor, (IllogicalCallContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, LogicalCallContext__ctor, (LogicalCallContext * __this, MethodInfo * method));
DO_APP_FUNC(0x02310D00, void, LogicalCallContext__ctor_1, (LogicalCallContext * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02310FA0, void, LogicalCallContext_GetObjectData, (LogicalCallContext * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02311330, Object *, LogicalCallContext_Clone, (LogicalCallContext * __this, MethodInfo * method));
DO_APP_FUNC(0x02311C10, void, LogicalCallContext_Merge, (LogicalCallContext * __this, LogicalCallContext * lc, MethodInfo * method));
DO_APP_FUNC(0x02311F00, bool, LogicalCallContext_get_HasInfo, (LogicalCallContext * __this, MethodInfo * method));
DO_APP_FUNC(0x023107C0, bool, LogicalCallContext_get_HasUserData, (LogicalCallContext * __this, MethodInfo * method));
DO_APP_FUNC(0x02311F60, Hashtable *, LogicalCallContext_get_Datastore, (LogicalCallContext * __this, MethodInfo * method));
DO_APP_FUNC(0x023120D0, void, LogicalCallContext__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, LogicalCallContext_Reader__ctor, (LogicalCallContext_Reader__Boxed * __this, LogicalCallContext * ctx, MethodInfo * method));
DO_APP_FUNC(0x001D5C40, bool, LogicalCallContext_Reader_get_IsNull, (LogicalCallContext_Reader__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E6690, bool, LogicalCallContext_Reader_get_HasInfo, (LogicalCallContext_Reader__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E66A0, LogicalCallContext *, LogicalCallContext_Reader_Clone, (LogicalCallContext_Reader__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00627D70, bool, CallContextSecurityData_get_HasInfo, (CallContextSecurityData * __this, MethodInfo * method));
DO_APP_FUNC(0x0230E400, Object *, CallContextSecurityData_Clone, (CallContextSecurityData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CallContextSecurityData__ctor, (CallContextSecurityData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, CallContextRemotingData_get_LogicalCallID, (CallContextRemotingData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, CallContextRemotingData_set_LogicalCallID, (CallContextRemotingData * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x00627D70, bool, CallContextRemotingData_get_HasInfo, (CallContextRemotingData * __this, MethodInfo * method));
DO_APP_FUNC(0x0230E2B0, Object *, CallContextRemotingData_Clone, (CallContextRemotingData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CallContextRemotingData__ctor, (CallContextRemotingData * __this, MethodInfo * method));
DO_APP_FUNC(0x02309730, void, ArgInfo__ctor, (ArgInfo * __this, MethodBase * method_1, ArgInfoType__Enum type, MethodInfo * method));
DO_APP_FUNC(0x023099D0, Object__Array *, ArgInfo_GetInOutArgs, (ArgInfo * __this, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AsyncResult__ctor, (AsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x02309B50, void, AsyncResult__ctor_1, (AsyncResult * __this, WaitCallback * cb, Object * state, bool capture_context, MethodInfo * method));
DO_APP_FUNC(0x02309D00, void, AsyncResult_WaitCallback_Context, (Object * state, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Object *, AsyncResult_get_AsyncState, (AsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x02309DF0, WaitHandle *, AsyncResult_get_AsyncWaitHandle, (AsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x004358D0, bool, AsyncResult_get_CompletedSynchronously, (AsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x004379C0, bool, AsyncResult_get_IsCompleted, (AsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x004379E0, bool, AsyncResult_get_EndInvokeCalled, (AsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x004379F0, void, AsyncResult_set_EndInvokeCalled, (AsyncResult * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FB950, Object *, AsyncResult_get_AsyncDelegate, (AsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, IMessageSink *, AsyncResult_get_NextSink, (AsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x0230A030, IMessageCtrl *, AsyncResult_AsyncProcessMessage, (AsyncResult * __this, IMessage * msg, IMessageSink * replySink, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, IMessage *, AsyncResult_GetReplyMessage, (AsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBB0, void, AsyncResult_SetMessageCtrl, (AsyncResult * __this, IMessageCtrl * mc, MethodInfo * method));
DO_APP_FUNC(0x00447370, void, AsyncResult_SetCompletedSynchronously, (AsyncResult * __this, bool completed, MethodInfo * method));
DO_APP_FUNC(0x0230A080, IMessage *, AsyncResult_EndInvoke, (AsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x0230A1C0, IMessage *, AsyncResult_SyncProcessMessage, (AsyncResult * __this, IMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, MonoMethodMessage *, AsyncResult_get_CallMessage, (AsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB90, void, AsyncResult_set_CallMessage, (AsyncResult * __this, MonoMethodMessage * value, MethodInfo * method));
DO_APP_FUNC(0x0230A370, void, AsyncResult_System_Threading_IThreadPoolWorkItem_ExecuteWorkItem, (AsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AsyncResult_System_Threading_IThreadPoolWorkItem_MarkAborted, (AsyncResult * __this, ThreadAbortException * tae, MethodInfo * method));
DO_APP_FUNC(0x0230A370, Object *, AsyncResult_Invoke, (AsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x0230A380, void, AsyncResult__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0230A4E0, void, AsyncResult___ctor_b__17_0, (AsyncResult * __this, Object * _p0_, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, CADArgHolder__ctor, (CADArgHolder * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x0230E140, void, CADObjRef__ctor, (CADObjRef * __this, ObjRef * o, int32_t sourceDomain, MethodInfo * method));
DO_APP_FUNC(0x0230CE10, Type__Array *, CADMethodRef_GetTypes, (CADMethodRef * __this, String__Array * typeArray, MethodInfo * method));
DO_APP_FUNC(0x0230CF80, MethodBase *, CADMethodRef_Resolve, (CADMethodRef * __this, MethodInfo * method));
DO_APP_FUNC(0x0230D520, void, CADMethodRef__ctor, (CADMethodRef * __this, IMethodMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x0230A5E0, void, CADMessageBase__ctor, (CADMessageBase * __this, IMethodMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x0230A760, MethodBase *, CADMessageBase_GetMethod, (CADMessageBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0230A880, Type__Array *, CADMessageBase_GetSignature, (MethodBase * methodBase, bool load, MethodInfo * method));
DO_APP_FUNC(0x0230AB00, int32_t, CADMessageBase_MarshalProperties, (IDictionary * dict, ArrayList * * args, MethodInfo * method));
DO_APP_FUNC(0x0230B170, void, CADMessageBase_UnmarshalProperties, (IDictionary * dict, int32_t count, ArrayList * args, MethodInfo * method));
DO_APP_FUNC(0x0230B320, bool, CADMessageBase_IsPossibleToIgnoreMarshal, (Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0230B4F0, Object *, CADMessageBase_MarshalArgument, (CADMessageBase * __this, Object * arg, ArrayList * * args, MethodInfo * method));
DO_APP_FUNC(0x0230B7F0, Object *, CADMessageBase_UnmarshalArgument, (CADMessageBase * __this, Object * arg, ArrayList * args, MethodInfo * method));
DO_APP_FUNC(0x0230C0D0, Object__Array *, CADMessageBase_MarshalArguments, (CADMessageBase * __this, Object__Array * arguments, ArrayList * * args, MethodInfo * method));
DO_APP_FUNC(0x0230C230, Object__Array *, CADMessageBase_UnmarshalArguments, (CADMessageBase * __this, Object__Array * arguments, ArrayList * args, MethodInfo * method));
DO_APP_FUNC(0x0230C390, void, CADMessageBase_SaveLogicalCallContext, (CADMessageBase * __this, IMethodMessage * msg, ArrayList * * serializeList, MethodInfo * method));
DO_APP_FUNC(0x0230C6A0, LogicalCallContext *, CADMessageBase_GetLogicalCallContext, (CADMessageBase * __this, ArrayList * args, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, String *, CADMethodCallMessage_get_Uri, (CADMethodCallMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x0230C790, CADMethodCallMessage *, CADMethodCallMessage_Create, (IMessage * callMsg, MethodInfo * method));
DO_APP_FUNC(0x0230CA20, void, CADMethodCallMessage__ctor, (CADMethodCallMessage * __this, IMethodCallMessage * callMsg, MethodInfo * method));
DO_APP_FUNC(0x0230CB90, ArrayList *, CADMethodCallMessage_GetArguments, (CADMethodCallMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x0230CE00, Object__Array *, CADMethodCallMessage_GetArgs, (CADMethodCallMessage * __this, ArrayList * args, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, int32_t, CADMethodCallMessage_get_PropertiesCount, (CADMethodCallMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x0230D870, CADMethodReturnMessage *, CADMethodReturnMessage_Create, (IMessage * callMsg, MethodInfo * method));
DO_APP_FUNC(0x0230D9F0, void, CADMethodReturnMessage__ctor, (CADMethodReturnMessage * __this, IMethodReturnMessage * retMsg, MethodInfo * method));
DO_APP_FUNC(0x0230DDB0, ArrayList *, CADMethodReturnMessage_GetArguments, (CADMethodReturnMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x0230CE00, Object__Array *, CADMethodReturnMessage_GetArgs, (CADMethodReturnMessage * __this, ArrayList * args, MethodInfo * method));
DO_APP_FUNC(0x0230E020, Object *, CADMethodReturnMessage_GetReturnValue, (CADMethodReturnMessage * __this, ArrayList * args, MethodInfo * method));
DO_APP_FUNC(0x0230E030, Exception *, CADMethodReturnMessage_GetException, (CADMethodReturnMessage * __this, ArrayList * args, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, int32_t, CADMethodReturnMessage_get_PropertiesCount, (CADMethodReturnMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, ClientContextTerminatorSink__ctor, (ClientContextTerminatorSink * __this, Context * ctx, MethodInfo * method));
DO_APP_FUNC(0x0230E6A0, IMessage *, ClientContextTerminatorSink_SyncProcessMessage, (ClientContextTerminatorSink * __this, IMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x0230E8A0, IMessageCtrl *, ClientContextTerminatorSink_AsyncProcessMessage, (ClientContextTerminatorSink * __this, IMessage * msg, IMessageSink * replySink, MethodInfo * method));
DO_APP_FUNC(0x01A9AC30, void, ClientContextReplySink__ctor, (ClientContextReplySink * __this, Context * ctx, IMessageSink * replySink, MethodInfo * method));
DO_APP_FUNC(0x0230E550, IMessage *, ClientContextReplySink_SyncProcessMessage, (ClientContextReplySink * __this, IMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x0230E650, IMessageCtrl *, ClientContextReplySink_AsyncProcessMessage, (ClientContextReplySink * __this, IMessage * msg, IMessageSink * replySink, MethodInfo * method));
DO_APP_FUNC(0x0230EC20, void, ConstructionCall__ctor, (ConstructionCall * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x0230EC70, void, ConstructionCall__ctor_1, (ConstructionCall * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0230ED20, void, ConstructionCall_InitDictionary, (ConstructionCall * __this, MethodInfo * method));
DO_APP_FUNC(0x00739A80, bool, ConstructionCall_get_IsContextOk, (ConstructionCall * __this, MethodInfo * method));
DO_APP_FUNC(0x0094FCE0, void, ConstructionCall_set_IsContextOk, (ConstructionCall * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x0230EF20, Type *, ConstructionCall_get_ActivationType, (ConstructionCall * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC20, String *, ConstructionCall_get_ActivationTypeName, (ConstructionCall * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, IActivator *, ConstructionCall_get_Activator, (ConstructionCall * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBB0, void, ConstructionCall_set_Activator, (ConstructionCall * __this, IActivator * value, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, Object__Array *, ConstructionCall_get_CallSiteActivationAttributes, (ConstructionCall * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBD0, void, ConstructionCall_SetActivationAttributes, (ConstructionCall * __this, Object__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x0230F030, IList *, ConstructionCall_get_ContextProperties, (ConstructionCall * __this, MethodInfo * method));
DO_APP_FUNC(0x0230F190, void, ConstructionCall_InitMethodProperty, (ConstructionCall * __this, String * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0230F400, void, ConstructionCall_GetObjectData, (ConstructionCall * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0230F550, IDictionary *, ConstructionCall_get_Properties, (ConstructionCall * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC60, RemotingProxy *, ConstructionCall_get_SourceProxy, (ConstructionCall * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC70, void, ConstructionCall_set_SourceProxy, (ConstructionCall * __this, RemotingProxy * value, MethodInfo * method));
DO_APP_FUNC(0x0230F580, void, ConstructionCallDictionary__ctor, (ConstructionCallDictionary * __this, IConstructionCallMessage * message, MethodInfo * method));
DO_APP_FUNC(0x0230F640, Object *, ConstructionCallDictionary_GetMethodProperty, (ConstructionCallDictionary * __this, String * key, MethodInfo * method));
DO_APP_FUNC(0x0230F9D0, void, ConstructionCallDictionary_SetMethodProperty, (ConstructionCallDictionary * __this, String * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0230FC50, void, ConstructionCallDictionary__cctor, (MethodInfo * method));
DO_APP_FUNC(0x023100E0, void, ConstructionResponse__ctor, (ConstructionResponse * __this, Object * resultObject, LogicalCallContext * callCtx, IMethodCallMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x02310110, void, ConstructionResponse__ctor_1, (ConstructionResponse * __this, Exception * e, IMethodCallMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x02310120, void, ConstructionResponse__ctor_2, (ConstructionResponse * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x023101C0, IDictionary *, ConstructionResponse_get_Properties, (ConstructionResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x023101D0, IMessage *, EnvoyTerminatorSink_SyncProcessMessage, (EnvoyTerminatorSink * __this, IMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x023102A0, IMessageCtrl *, EnvoyTerminatorSink_AsyncProcessMessage, (EnvoyTerminatorSink * __this, IMessage * msg, IMessageSink * replySink, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, EnvoyTerminatorSink__ctor, (EnvoyTerminatorSink * __this, MethodInfo * method));
DO_APP_FUNC(0x02310380, void, EnvoyTerminatorSink__cctor, (MethodInfo * method));
DO_APP_FUNC(0x023104C0, void, ErrorMessage__ctor, (ErrorMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, int32_t, ErrorMessage_get_ArgCount, (ErrorMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Object__Array *, ErrorMessage_get_Args, (ErrorMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, MethodBase *, ErrorMessage_get_MethodBase, (ErrorMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x02310550, String *, ErrorMessage_get_MethodName, (ErrorMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Object *, ErrorMessage_get_MethodSignature, (ErrorMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, IDictionary *, ErrorMessage_get_Properties, (ErrorMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x023105D0, String *, ErrorMessage_get_TypeName, (ErrorMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, ErrorMessage_get_Uri, (ErrorMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Object *, ErrorMessage_GetArg, (ErrorMessage * __this, int32_t arg_num, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, LogicalCallContext *, ErrorMessage_get_LogicalCallContext, (ErrorMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, HeaderHandler__ctor, (HeaderHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01852930, Object *, HeaderHandler_Invoke, (HeaderHandler * __this, Header__Array * headers, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, HeaderHandler_BeginInvoke, (HeaderHandler * __this, Header__Array * headers, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, Object *, HeaderHandler_EndInvoke, (HeaderHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x0230EC70, void, MethodCall__ctor, (MethodCall * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02314970, void, MethodCall__ctor_1, (MethodCall * __this, CADMethodCallMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MethodCall__ctor_2, (MethodCall * __this, MethodInfo * method));
DO_APP_FUNC(0x02314B70, void, MethodCall_CopyFrom, (MethodCall * __this, IMethodMessage * call, MethodInfo * method));
DO_APP_FUNC(0x02314CF0, void, MethodCall_InitMethodProperty, (MethodCall * __this, String * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x023150B0, void, MethodCall_GetObjectData, (MethodCall * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x023153B0, int32_t, MethodCall_get_ArgCount, (MethodCall * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, Object__Array *, MethodCall_get_Args, (MethodCall * __this, MethodInfo * method));
DO_APP_FUNC(0x023153D0, LogicalCallContext *, MethodCall_get_LogicalCallContext, (MethodCall * __this, MethodInfo * method));
DO_APP_FUNC(0x02315520, MethodBase *, MethodCall_get_MethodBase, (MethodCall * __this, MethodInfo * method));
DO_APP_FUNC(0x023155C0, String *, MethodCall_get_MethodName, (MethodCall * __this, MethodInfo * method));
DO_APP_FUNC(0x02315600, Object *, MethodCall_get_MethodSignature, (MethodCall * __this, MethodInfo * method));
DO_APP_FUNC(0x0230F550, IDictionary *, MethodCall_get_Properties, (MethodCall * __this, MethodInfo * method));
DO_APP_FUNC(0x023157B0, void, MethodCall_InitDictionary, (MethodCall * __this, MethodInfo * method));
DO_APP_FUNC(0x02315930, String *, MethodCall_get_TypeName, (MethodCall * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, MethodCall_get_Uri, (MethodCall * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, MethodCall_set_Uri, (MethodCall * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, MethodCall_System_Runtime_Remoting_Messaging_IInternalMessage_get_Uri, (MethodCall * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, MethodCall_System_Runtime_Remoting_Messaging_IInternalMessage_set_Uri, (MethodCall * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x02315990, Object *, MethodCall_GetArg, (MethodCall * __this, int32_t argNum, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MethodCall_Init, (MethodCall * __this, MethodInfo * method));
DO_APP_FUNC(0x023159D0, void, MethodCall_ResolveMethod, (MethodCall * __this, MethodInfo * method));
DO_APP_FUNC(0x02316170, Type *, MethodCall_CastTo, (MethodCall * __this, String * clientType, Type * serverType, MethodInfo * method));
DO_APP_FUNC(0x02316480, String *, MethodCall_GetTypeNameFromAssemblyQualifiedName, (String * aqname, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, Identity *, MethodCall_System_Runtime_Remoting_Messaging_IInternalMessage_get_TargetIdentity, (MethodCall * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBA00, void, MethodCall_System_Runtime_Remoting_Messaging_IInternalMessage_set_TargetIdentity, (MethodCall * __this, Identity * value, MethodInfo * method));
DO_APP_FUNC(0x02316590, Type__Array *, MethodCall_get_GenericArguments, (MethodCall * __this, MethodInfo * method));
DO_APP_FUNC(0x023122B0, void, MCMDictionary__ctor, (MCMDictionary * __this, IMethodMessage * message, MethodInfo * method));
DO_APP_FUNC(0x02312370, void, MCMDictionary__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, MessageDictionary__ctor, (MessageDictionary * __this, IMethodMessage * message, MethodInfo * method));
DO_APP_FUNC(0x02312630, bool, MessageDictionary_HasUserData, (MessageDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x02312750, IDictionary *, MessageDictionary_get_InternalDictionary, (MessageDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, MessageDictionary_set_MethodKeys, (MessageDictionary * __this, String__Array * value, MethodInfo * method));
DO_APP_FUNC(0x02312850, IDictionary *, MessageDictionary_AllocInternalProperties, (MessageDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x023129A0, IDictionary *, MessageDictionary_GetInternalProperties, (MessageDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x023129D0, bool, MessageDictionary_IsOverridenKey, (MessageDictionary * __this, String * key, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, MessageDictionary_get_IsFixedSize, (MessageDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, MessageDictionary_get_IsReadOnly, (MessageDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x02312A70, Object *, MessageDictionary_get_Item, (MessageDictionary * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x02312BF0, void, MessageDictionary_set_Item, (MessageDictionary * __this, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02312C00, Object *, MessageDictionary_GetMethodProperty, (MessageDictionary * __this, String * key, MethodInfo * method));
DO_APP_FUNC(0x02313070, void, MessageDictionary_SetMethodProperty, (MessageDictionary * __this, String * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02313280, ICollection *, MessageDictionary_get_Keys, (MessageDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x023136A0, ICollection *, MessageDictionary_get_Values, (MessageDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x02313AE0, void, MessageDictionary_Add, (MessageDictionary * __this, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02313CA0, void, MessageDictionary_Clear, (MessageDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x02313D30, bool, MessageDictionary_Contains, (MessageDictionary * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x02313EA0, void, MessageDictionary_Remove, (MessageDictionary * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x02314030, int32_t, MessageDictionary_get_Count, (MessageDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, MessageDictionary_get_IsSynchronized, (MessageDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, Object *, MessageDictionary_get_SyncRoot, (MessageDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x023140F0, void, MessageDictionary_CopyTo, (MessageDictionary * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x023141A0, IEnumerator *, MessageDictionary_System_Collections_IEnumerable_GetEnumerator, (MessageDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x023142F0, IDictionaryEnumerator *, MessageDictionary_GetEnumerator, (MessageDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x02314440, void, MessageDictionary_DictionaryEnumerator__ctor, (MessageDictionary_DictionaryEnumerator * __this, MessageDictionary * methodDictionary, MethodInfo * method));
DO_APP_FUNC(0x02314500, Object *, MessageDictionary_DictionaryEnumerator_get_Current, (MessageDictionary_DictionaryEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x023145A0, bool, MessageDictionary_DictionaryEnumerator_MoveNext, (MessageDictionary_DictionaryEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02314700, void, MessageDictionary_DictionaryEnumerator_Reset, (MessageDictionary_DictionaryEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x023147A0, DictionaryEntry, MessageDictionary_DictionaryEnumerator_get_Entry, (MessageDictionary_DictionaryEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02314920, Object *, MessageDictionary_DictionaryEnumerator_get_Key, (MessageDictionary_DictionaryEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02314940, Object *, MessageDictionary_DictionaryEnumerator_get_Value, (MessageDictionary_DictionaryEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x023165E0, void, MethodResponse__ctor, (MethodResponse * __this, Exception * e, IMethodCallMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x023166C0, void, MethodResponse__ctor_1, (MethodResponse * __this, Object * returnValue, Object__Array * outArgs, LogicalCallContext * callCtx, IMethodCallMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x02316790, void, MethodResponse__ctor_2, (MethodResponse * __this, IMethodCallMessage * msg, CADMethodReturnMessage * retmsg, MethodInfo * method));
DO_APP_FUNC(0x02310120, void, MethodResponse__ctor_3, (MethodResponse * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02316AA0, void, MethodResponse_InitMethodProperty, (MethodResponse * __this, String * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02316EC0, int32_t, MethodResponse_get_ArgCount, (MethodResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, Object__Array *, MethodResponse_get_Args, (MethodResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, Exception *, MethodResponse_get_Exception, (MethodResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x02316ED0, LogicalCallContext *, MethodResponse_get_LogicalCallContext, (MethodResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x02317020, MethodBase *, MethodResponse_get_MethodBase, (MethodResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x02317250, String *, MethodResponse_get_MethodName, (MethodResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x02317300, Object *, MethodResponse_get_MethodSignature, (MethodResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x023173E0, Object__Array *, MethodResponse_get_OutArgs, (MethodResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x02317590, IDictionary *, MethodResponse_get_Properties, (MethodResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, Object *, MethodResponse_get_ReturnValue, (MethodResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x02317720, String *, MethodResponse_get_TypeName, (MethodResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x023177D0, String *, MethodResponse_get_Uri, (MethodResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, MethodResponse_set_Uri, (MethodResponse * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x023177D0, String *, MethodResponse_System_Runtime_Remoting_Messaging_IInternalMessage_get_Uri, (MethodResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, MethodResponse_System_Runtime_Remoting_Messaging_IInternalMessage_set_Uri, (MethodResponse * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x02317880, Object *, MethodResponse_GetArg, (MethodResponse * __this, int32_t argNum, MethodInfo * method));
DO_APP_FUNC(0x023178C0, void, MethodResponse_GetObjectData, (MethodResponse * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, Identity *, MethodResponse_System_Runtime_Remoting_Messaging_IInternalMessage_get_TargetIdentity, (MethodResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBD0, void, MethodResponse_System_Runtime_Remoting_Messaging_IInternalMessage_set_TargetIdentity, (MethodResponse * __this, Identity * value, MethodInfo * method));
DO_APP_FUNC(0x02317BE0, void, MethodReturnDictionary__ctor, (MethodReturnDictionary * __this, IMethodReturnMessage * message, MethodInfo * method));
DO_APP_FUNC(0x02317D00, void, MethodReturnDictionary__cctor, (MethodInfo * method));
DO_APP_FUNC(0x023180B0, void, MonoMethodMessage_InitMessage, (MonoMethodMessage * __this, MonoMethod * method_1, Object__Array * out_args, MethodInfo * method));
DO_APP_FUNC(0x02318410, void, MonoMethodMessage__ctor, (MonoMethodMessage * __this, MethodInfo_1 * minfo, Object__Array * in_args, Object__Array * out_args, MethodInfo * method));
DO_APP_FUNC(0x023185B0, IDictionary *, MonoMethodMessage_get_Properties, (MonoMethodMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x02318710, int32_t, MonoMethodMessage_get_ArgCount, (MonoMethodMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Object__Array *, MonoMethodMessage_get_Args, (MonoMethodMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, LogicalCallContext *, MonoMethodMessage_get_LogicalCallContext, (MonoMethodMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9A0, void, MonoMethodMessage_set_LogicalCallContext, (MonoMethodMessage * __this, LogicalCallContext * value, MethodInfo * method));
DO_APP_FUNC(0x002FA280, MethodBase *, MonoMethodMessage_get_MethodBase, (MonoMethodMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x02318750, String *, MonoMethodMessage_get_MethodName, (MonoMethodMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x02318870, Object *, MonoMethodMessage_get_MethodSignature, (MonoMethodMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x02318A00, String *, MonoMethodMessage_get_TypeName, (MonoMethodMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, String *, MonoMethodMessage_get_Uri, (MonoMethodMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB70, void, MonoMethodMessage_set_Uri, (MonoMethodMessage * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x02318B40, Object *, MonoMethodMessage_GetArg, (MonoMethodMessage * __this, int32_t arg_num, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, Exception *, MonoMethodMessage_get_Exception, (MonoMethodMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x02318B80, int32_t, MonoMethodMessage_get_OutArgCount, (MonoMethodMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x02318BF0, Object__Array *, MonoMethodMessage_get_OutArgs, (MonoMethodMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, Object *, MonoMethodMessage_get_ReturnValue, (MonoMethodMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, Identity *, MonoMethodMessage_System_Runtime_Remoting_Messaging_IInternalMessage_get_TargetIdentity, (MonoMethodMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBD0, void, MonoMethodMessage_System_Runtime_Remoting_Messaging_IInternalMessage_set_TargetIdentity, (MonoMethodMessage * __this, Identity * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, AsyncResult *, MonoMethodMessage_get_AsyncResult, (MonoMethodMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x02318DC0, CallType__Enum, MonoMethodMessage_get_CallType, (MonoMethodMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x02318F30, bool, MonoMethodMessage_NeedsOutProcessing, (MonoMethodMessage * __this, int32_t * outCount, MethodInfo * method));
DO_APP_FUNC(0x02318FB0, void, MonoMethodMessage__cctor, (MethodInfo * method));
DO_APP_FUNC(0x023191D0, void, RemotingSurrogate_GetObjectData, (RemotingSurrogate * __this, Object * obj, SerializationInfo * si, StreamingContext sc, MethodInfo * method));
DO_APP_FUNC(0x023192A0, Object *, RemotingSurrogate_SetObjectData, (RemotingSurrogate * __this, Object * obj, SerializationInfo * si, StreamingContext sc, ISurrogateSelector * selector, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RemotingSurrogate__ctor, (RemotingSurrogate * __this, MethodInfo * method));
DO_APP_FUNC(0x02319050, void, ObjRefSurrogate_GetObjectData, (ObjRefSurrogate * __this, Object * obj, SerializationInfo * si, StreamingContext sc, MethodInfo * method));
DO_APP_FUNC(0x02319170, Object *, ObjRefSurrogate_SetObjectData, (ObjRefSurrogate * __this, Object * obj, SerializationInfo * si, StreamingContext sc, ISurrogateSelector * selector, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ObjRefSurrogate__ctor, (ObjRefSurrogate * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RemotingSurrogateSelector__ctor, (RemotingSurrogateSelector * __this, MethodInfo * method));
DO_APP_FUNC(0x023192F0, ISerializationSurrogate *, RemotingSurrogateSelector_GetSurrogate, (RemotingSurrogateSelector * __this, Type * type, StreamingContext context, ISurrogateSelector * * ssout, MethodInfo * method));
DO_APP_FUNC(0x023194C0, void, RemotingSurrogateSelector__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02319710, void, ReturnMessage__ctor, (ReturnMessage * __this, Object * ret, Object__Array * outArgs, int32_t outArgsCount, LogicalCallContext * callCtx, IMethodCallMessage * mcm, MethodInfo * method));
DO_APP_FUNC(0x02319800, void, ReturnMessage__ctor_1, (ReturnMessage * __this, Exception * e, IMethodCallMessage * mcm, MethodInfo * method));
DO_APP_FUNC(0x01A92400, int32_t, ReturnMessage_get_ArgCount, (ReturnMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Object__Array *, ReturnMessage_get_Args, (ReturnMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x023198C0, LogicalCallContext *, ReturnMessage_get_LogicalCallContext, (ReturnMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, MethodBase *, ReturnMessage_get_MethodBase, (ReturnMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x02319A10, String *, ReturnMessage_get_MethodName, (ReturnMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x02319A60, Object *, ReturnMessage_get_MethodSignature, (ReturnMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x02319C10, IDictionary *, ReturnMessage_get_Properties, (ReturnMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x02319D70, String *, ReturnMessage_get_TypeName, (ReturnMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, ReturnMessage_get_Uri, (ReturnMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9A0, void, ReturnMessage_set_Uri, (ReturnMessage * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, ReturnMessage_System_Runtime_Remoting_Messaging_IInternalMessage_get_Uri, (ReturnMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9A0, void, ReturnMessage_System_Runtime_Remoting_Messaging_IInternalMessage_set_Uri, (ReturnMessage * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01A92420, Object *, ReturnMessage_GetArg, (ReturnMessage * __this, int32_t argNum, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, Exception *, ReturnMessage_get_Exception, (ReturnMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x02319DE0, Object__Array *, ReturnMessage_get_OutArgs, (ReturnMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, Object *, ReturnMessage_get_ReturnValue, (ReturnMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, Identity *, ReturnMessage_System_Runtime_Remoting_Messaging_IInternalMessage_get_TargetIdentity, (ReturnMessage * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBB0, void, ReturnMessage_System_Runtime_Remoting_Messaging_IInternalMessage_set_TargetIdentity, (ReturnMessage * __this, Identity * value, MethodInfo * method));
DO_APP_FUNC(0x02319F80, IMessage *, ServerContextTerminatorSink_SyncProcessMessage, (ServerContextTerminatorSink * __this, IMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x0231A100, IMessageCtrl *, ServerContextTerminatorSink_AsyncProcessMessage, (ServerContextTerminatorSink * __this, IMessage * msg, IMessageSink * replySink, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ServerContextTerminatorSink__ctor, (ServerContextTerminatorSink * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, ServerObjectTerminatorSink__ctor, (ServerObjectTerminatorSink * __this, IMessageSink * nextSink, MethodInfo * method));
DO_APP_FUNC(0x0231A370, IMessage *, ServerObjectTerminatorSink_SyncProcessMessage, (ServerObjectTerminatorSink * __this, IMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x0231A4E0, IMessageCtrl *, ServerObjectTerminatorSink_AsyncProcessMessage, (ServerObjectTerminatorSink * __this, IMessage * msg, IMessageSink * replySink, MethodInfo * method));
DO_APP_FUNC(0x01A9AC30, void, ServerObjectReplySink__ctor, (ServerObjectReplySink * __this, ServerIdentity * identity, IMessageSink * replySink, MethodInfo * method));
DO_APP_FUNC(0x0231A250, IMessage *, ServerObjectReplySink_SyncProcessMessage, (ServerObjectReplySink * __this, IMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x0231A320, IMessageCtrl *, ServerObjectReplySink_AsyncProcessMessage, (ServerObjectReplySink * __this, IMessage * msg, IMessageSink * replySink, MethodInfo * method));
DO_APP_FUNC(0x0231A770, void, StackBuilderSink__ctor, (StackBuilderSink * __this, MarshalByRefObject * obj, bool forceInternalExecute, MethodInfo * method));
DO_APP_FUNC(0x0231A830, IMessage *, StackBuilderSink_SyncProcessMessage, (StackBuilderSink * __this, IMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x0231A950, IMessageCtrl *, StackBuilderSink_AsyncProcessMessage, (StackBuilderSink * __this, IMessage * msg, IMessageSink * replySink, MethodInfo * method));
DO_APP_FUNC(0x0231AB80, void, StackBuilderSink_ExecuteAsyncMessage, (StackBuilderSink * __this, Object * ob, MethodInfo * method));
DO_APP_FUNC(0x0231ADC0, void, StackBuilderSink_CheckParameters, (StackBuilderSink * __this, IMessage * msg, MethodInfo * method));
DO_APP_FUNC(0x0231B190, void, StackBuilderSink__AsyncProcessMessage_b__4_0, (StackBuilderSink * __this, Object * data, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, HandleProcessCorruptedStateExceptionsAttribute__ctor, (HandleProcessCorruptedStateExceptionsAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01A93870, void, ExceptionDispatchInfo__ctor, (ExceptionDispatchInfo * __this, Exception * exception, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Object *, ExceptionDispatchInfo_get_BinaryStackTraceArray, (ExceptionDispatchInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01A93A90, ExceptionDispatchInfo *, ExceptionDispatchInfo_Capture, (Exception * source, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Exception *, ExceptionDispatchInfo_get_SourceException, (ExceptionDispatchInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01A93C30, void, ExceptionDispatchInfo_Throw, (ExceptionDispatchInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01A93C90, void, ExceptionDispatchInfo_Throw_1, (Exception * source, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CriticalFinalizerObject__ctor, (CriticalFinalizerObject * __this, MethodInfo * method));
DO_APP_FUNC(0x01A93850, void, CriticalFinalizerObject_Finalize, (CriticalFinalizerObject * __this, MethodInfo * method));
DO_APP_FUNC(0x01857090, void, ReliabilityContractAttribute__ctor, (ReliabilityContractAttribute * __this, Consistency__Enum consistencyGuarantee, Cer__Enum cer, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, IsByRefLikeAttribute__ctor, (IsByRefLikeAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, IsReadOnlyAttribute__ctor, (IsReadOnlyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01A92FE0, void, TupleElementNamesAttribute__ctor, (TupleElementNamesAttribute * __this, String__Array * transformNames, MethodInfo * method));
DO_APP_FUNC(0x01A91D60, AsyncVoidMethodBuilder, AsyncVoidMethodBuilder_Create, (MethodInfo * method));
DO_APP_FUNC(0x0018EE20, void, AsyncVoidMethodBuilder_SetStateMachine, (AsyncVoidMethodBuilder__Boxed * __this, IAsyncStateMachine * stateMachine, MethodInfo * method));
DO_APP_FUNC(0x0018EE30, void, AsyncVoidMethodBuilder_SetResult, (AsyncVoidMethodBuilder__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0018EE40, void, AsyncVoidMethodBuilder_SetException, (AsyncVoidMethodBuilder__Boxed * __this, Exception * exception, MethodInfo * method));
DO_APP_FUNC(0x0018EE50, void, AsyncVoidMethodBuilder_NotifySynchronizationContextOfCompletion, (AsyncVoidMethodBuilder__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0018EE60, Task *, AsyncVoidMethodBuilder_get_Task, (AsyncVoidMethodBuilder__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00C537F0, AsyncTaskMethodBuilder, AsyncTaskMethodBuilder_Create, (MethodInfo * method));
DO_APP_FUNC(0x0018EDC0, void, AsyncTaskMethodBuilder_SetStateMachine, (AsyncTaskMethodBuilder__Boxed * __this, IAsyncStateMachine * stateMachine, MethodInfo * method));
DO_APP_FUNC(0x0018EDD0, Task *, AsyncTaskMethodBuilder_get_Task, (AsyncTaskMethodBuilder__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0018EDE0, void, AsyncTaskMethodBuilder_SetResult, (AsyncTaskMethodBuilder__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0018EDF0, void, AsyncTaskMethodBuilder_SetException, (AsyncTaskMethodBuilder__Boxed * __this, Exception * exception, MethodInfo * method));
DO_APP_FUNC(0x01A91CB0, void, AsyncTaskMethodBuilder__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01A91550, Task_1_System_Int32___Array *, AsyncTaskCache_CreateInt32Tasks, (MethodInfo * method));
DO_APP_FUNC(0x01A91760, void, AsyncTaskCache__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0018ED60, void, AsyncMethodBuilderCore_SetStateMachine, (AsyncMethodBuilderCore__Boxed * __this, IAsyncStateMachine * stateMachine, MethodInfo * method));
DO_APP_FUNC(0x0018ED70, Action *, AsyncMethodBuilderCore_GetCompletionAction, (AsyncMethodBuilderCore__Boxed * __this, Task * taskForTracing, AsyncMethodBuilderCore_MoveNextRunner * * runnerToInitialize, MethodInfo * method));
DO_APP_FUNC(0x0018ED80, Action *, AsyncMethodBuilderCore_OutputAsyncCausalityEvents, (AsyncMethodBuilderCore__Boxed * __this, Task * innerTask, Action * continuation, MethodInfo * method));
DO_APP_FUNC(0x0018ED90, void, AsyncMethodBuilderCore_PostBoxInitialization, (AsyncMethodBuilderCore__Boxed * __this, IAsyncStateMachine * stateMachine, AsyncMethodBuilderCore_MoveNextRunner * runner, Task * builtTask, MethodInfo * method));
DO_APP_FUNC(0x01A90650, void, AsyncMethodBuilderCore_ThrowAsync, (Exception * exception, SynchronizationContext * targetContext, MethodInfo * method));
DO_APP_FUNC(0x01A90B00, Action *, AsyncMethodBuilderCore_CreateContinuationWrapper, (Action * continuation, Action * invokeAction, Task * innerTask, MethodInfo * method));
DO_APP_FUNC(0x01A90DF0, Task *, AsyncMethodBuilderCore_TryGetContinuationTask, (Action * action, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, AsyncMethodBuilderCore_MoveNextRunner__ctor, (AsyncMethodBuilderCore_MoveNextRunner * __this, ExecutionContext * context, IAsyncStateMachine * stateMachine, MethodInfo * method));
DO_APP_FUNC(0x01A91210, void, AsyncMethodBuilderCore_MoveNextRunner_Run, (AsyncMethodBuilderCore_MoveNextRunner * __this, MethodInfo * method));
DO_APP_FUNC(0x01A91470, void, AsyncMethodBuilderCore_MoveNextRunner_InvokeMoveNext, (Object * stateMachine, MethodInfo * method));
DO_APP_FUNC(0x01A91110, void, AsyncMethodBuilderCore_ContinuationWrapper__ctor, (AsyncMethodBuilderCore_ContinuationWrapper * __this, Action * continuation, Action * invokeAction, Task * innerTask, MethodInfo * method));
DO_APP_FUNC(0x00B8BEC0, void, AsyncMethodBuilderCore_ContinuationWrapper_Invoke, (AsyncMethodBuilderCore_ContinuationWrapper * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AsyncMethodBuilderCore_c_DisplayClass4_0__ctor, (AsyncMethodBuilderCore_c_DisplayClass4_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x01A910D0, void, AsyncMethodBuilderCore_c_DisplayClass4_0__OutputAsyncCausalityEvents_b__0, (AsyncMethodBuilderCore_c_DisplayClass4_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x01A90ED0, void, AsyncMethodBuilderCore_c__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AsyncMethodBuilderCore_c__ctor, (AsyncMethodBuilderCore_c * __this, MethodInfo * method));
DO_APP_FUNC(0x01A91010, void, AsyncMethodBuilderCore_c__ThrowAsync_b__6_0, (AsyncMethodBuilderCore_c * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01A91070, void, AsyncMethodBuilderCore_c__ThrowAsync_b__6_1, (AsyncMethodBuilderCore_c * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, AsyncStateMachineAttribute__ctor, (AsyncStateMachineAttribute * __this, Type * stateMachineType, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CallerMemberNameAttribute__ctor, (CallerMemberNameAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01A92240, FormattableString *, FormattableStringFactory_Create, (String * format, Object__Array * arguments, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, FormattableStringFactory_ConcreteFormattableString__ctor, (FormattableStringFactory_ConcreteFormattableString * __this, String * format, Object__Array * arguments, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, FormattableStringFactory_ConcreteFormattableString_get_Format, (FormattableStringFactory_ConcreteFormattableString * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Object__Array *, FormattableStringFactory_ConcreteFormattableString_GetArguments, (FormattableStringFactory_ConcreteFormattableString * __this, MethodInfo * method));
DO_APP_FUNC(0x01A92400, int32_t, FormattableStringFactory_ConcreteFormattableString_get_ArgumentCount, (FormattableStringFactory_ConcreteFormattableString * __this, MethodInfo * method));
DO_APP_FUNC(0x01A92420, Object *, FormattableStringFactory_ConcreteFormattableString_GetArgument, (FormattableStringFactory_ConcreteFormattableString * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01A92460, String *, FormattableStringFactory_ConcreteFormattableString_ToString, (FormattableStringFactory_ConcreteFormattableString * __this, IFormatProvider * formatProvider, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, IteratorStateMachineAttribute__ctor, (IteratorStateMachineAttribute * __this, Type * stateMachineType, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RuntimeCompatibilityAttribute__ctor, (RuntimeCompatibilityAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, RuntimeCompatibilityAttribute_set_WrapNonExceptionThrows, (RuntimeCompatibilityAttribute * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01A92850, void, RuntimeWrappedException__ctor, (RuntimeWrappedException * __this, Object * thrownObject, MethodInfo * method));
DO_APP_FUNC(0x002FBC20, Object *, RuntimeWrappedException_get_WrappedException, (RuntimeWrappedException * __this, MethodInfo * method));
DO_APP_FUNC(0x01A92920, void, RuntimeWrappedException_GetObjectData, (RuntimeWrappedException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01A92A60, void, RuntimeWrappedException__ctor_1, (RuntimeWrappedException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01A92B80, void, RuntimeWrappedException__ctor_2, (RuntimeWrappedException * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, StateMachineAttribute_set_StateMachineType, (StateMachineAttribute * __this, Type * value, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, StateMachineAttribute__ctor, (StateMachineAttribute * __this, Type * stateMachineType, MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, TaskAwaiter__ctor, (TaskAwaiter__Boxed * __this, Task * task, MethodInfo * method));
DO_APP_FUNC(0x0018EEE0, bool, TaskAwaiter_get_IsCompleted, (TaskAwaiter__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0018F1B0, void, TaskAwaiter_OnCompleted, (TaskAwaiter__Boxed * __this, Action * continuation, MethodInfo * method));
DO_APP_FUNC(0x0018F1E0, void, TaskAwaiter_UnsafeOnCompleted, (TaskAwaiter__Boxed * __this, Action * continuation, MethodInfo * method));
DO_APP_FUNC(0x0018EF60, void, TaskAwaiter_GetResult, (TaskAwaiter__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01A92BB0, void, TaskAwaiter_ValidateEnd, (Task * task, MethodInfo * method));
DO_APP_FUNC(0x01A92C60, void, TaskAwaiter_HandleNonSuccessAndDebuggerNotification, (Task * task, MethodInfo * method));
DO_APP_FUNC(0x01A92CF0, void, TaskAwaiter_ThrowForNonSuccess, (Task * task, MethodInfo * method));
DO_APP_FUNC(0x01A92ED0, void, TaskAwaiter_OnCompletedInternal, (Task * task, Action * continuation, bool continueOnCapturedContext, bool flowExecutionContext, MethodInfo * method));
DO_APP_FUNC(0x0018EE90, void, ConfiguredTaskAwaitable__ctor, (ConfiguredTaskAwaitable__Boxed * __this, Task * task, bool continueOnCapturedContext, MethodInfo * method));
DO_APP_FUNC(0x0010A980, ConfiguredTaskAwaitable_ConfiguredTaskAwaiter, ConfiguredTaskAwaitable_GetAwaiter, (ConfiguredTaskAwaitable__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00151890, void, ConfiguredTaskAwaitable_ConfiguredTaskAwaiter__ctor, (ConfiguredTaskAwaitable_ConfiguredTaskAwaiter__Boxed * __this, Task * task, bool continueOnCapturedContext, MethodInfo * method));
DO_APP_FUNC(0x0018EEE0, bool, ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_get_IsCompleted, (ConfiguredTaskAwaitable_ConfiguredTaskAwaiter__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0018EF00, void, ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_OnCompleted, (ConfiguredTaskAwaitable_ConfiguredTaskAwaiter__Boxed * __this, Action * continuation, MethodInfo * method));
DO_APP_FUNC(0x0018EF30, void, ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_UnsafeOnCompleted, (ConfiguredTaskAwaitable_ConfiguredTaskAwaiter__Boxed * __this, Action * continuation, MethodInfo * method));
DO_APP_FUNC(0x0018EF60, void, ConfiguredTaskAwaitable_ConfiguredTaskAwaiter_GetResult, (ConfiguredTaskAwaitable_ConfiguredTaskAwaiter__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01A93160, void, TypeForwardedFromAttribute__ctor, (TypeForwardedFromAttribute * __this, String * assemblyFullName, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, TypeForwardedFromAttribute_get_AssemblyFullName, (TypeForwardedFromAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0018F210, YieldAwaitable_YieldAwaiter, YieldAwaitable_GetAwaiter, (YieldAwaitable__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0018F210, bool, YieldAwaitable_YieldAwaiter_get_IsCompleted, (YieldAwaitable_YieldAwaiter__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0018F220, void, YieldAwaitable_YieldAwaiter_OnCompleted, (YieldAwaitable_YieldAwaiter__Boxed * __this, Action * continuation, MethodInfo * method));
DO_APP_FUNC(0x0018F2C0, void, YieldAwaitable_YieldAwaiter_UnsafeOnCompleted, (YieldAwaitable_YieldAwaiter__Boxed * __this, Action * continuation, MethodInfo * method));
DO_APP_FUNC(0x01A932C0, void, YieldAwaitable_YieldAwaiter_QueueContinuation, (Action * continuation, bool flowContext, MethodInfo * method));
DO_APP_FUNC(0x01A93560, void, YieldAwaitable_YieldAwaiter_RunAction, (Object * state, MethodInfo * method));
DO_APP_FUNC(0x00002890, void, YieldAwaitable_YieldAwaiter_GetResult, (YieldAwaitable_YieldAwaiter__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01A93610, void, YieldAwaitable_YieldAwaiter__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, DefaultDependencyAttribute__ctor, (DefaultDependencyAttribute * __this, LoadHint__Enum loadHintArgument, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, CompilationRelaxationsAttribute__ctor, (CompilationRelaxationsAttribute * __this, int32_t relaxations, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, CompilationRelaxationsAttribute__ctor_1, (CompilationRelaxationsAttribute * __this, CompilationRelaxations__Enum relaxations, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, CompilationRelaxationsAttribute_get_CompilationRelaxations, (CompilationRelaxationsAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CompilerGeneratedAttribute__ctor, (CompilerGeneratedAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CustomConstantAttribute__ctor, (CustomConstantAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01A92160, Object *, DateTimeConstantAttribute_get_Value, (DateTimeConstantAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01A921F0, void, DecimalConstantAttribute__ctor, (DecimalConstantAttribute * __this, uint8_t scale, uint8_t sign, uint32_t hi, uint32_t mid, uint32_t low, MethodInfo * method));
DO_APP_FUNC(0x01349560, Decimal, DecimalConstantAttribute_get_Value, (DecimalConstantAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ExtensionAttribute__ctor, (ExtensionAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x00CC8D50, void, FixedBufferAttribute__ctor, (FixedBufferAttribute * __this, Type * elementType, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Type *, FixedBufferAttribute_get_ElementType, (FixedBufferAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, FixedBufferAttribute_get_Length, (FixedBufferAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x00BA6CF0, void, InternalsVisibleToAttribute__ctor, (InternalsVisibleToAttribute * __this, String * assemblyName, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, InternalsVisibleToAttribute_get_AssemblyName, (InternalsVisibleToAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A280, bool, InternalsVisibleToAttribute_get_AllInternalsVisible, (InternalsVisibleToAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x00533150, void, InternalsVisibleToAttribute_set_AllInternalsVisible, (InternalsVisibleToAttribute * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, FriendAccessAllowedAttribute__ctor, (FriendAccessAllowedAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01A930A0, void, TypeDependencyAttribute__ctor, (TypeDependencyAttribute * __this, String * typeName, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, UnsafeValueTypeAttribute__ctor, (UnsafeValueTypeAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, StringFreezingAttribute__ctor, (StringFreezingAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01A92480, void, RuntimeHelpers_InitializeArray, (Array * array, void * fldHandle, MethodInfo * method));
DO_APP_FUNC(0x01A92590, void, RuntimeHelpers_InitializeArray_1, (Array * array, RuntimeFieldHandle fldHandle, MethodInfo * method));
DO_APP_FUNC(0x007E3F30, int32_t, RuntimeHelpers_get_OffsetToStringData, (MethodInfo * method));
DO_APP_FUNC(0x0194D440, int32_t, RuntimeHelpers_GetHashCode, (Object * o, MethodInfo * method));
DO_APP_FUNC(0x01A92740, Object *, RuntimeHelpers_GetObjectValue, (Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01A92750, void, RuntimeHelpers_RunClassConstructor, (void * type, MethodInfo * method));
DO_APP_FUNC(0x01A92790, void, RuntimeHelpers_RunClassConstructor_1, (RuntimeTypeHandle type, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, RuntimeHelpers_SufficientExecutionStack, (MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, RuntimeHelpers_TryEnsureSufficientExecutionStack, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RuntimeHelpers_PrepareConstrainedRegions, (MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, UnmanagedFunctionPointerAttribute__ctor, (UnmanagedFunctionPointerAttribute * __this, CallingConvention__Enum callingConvention, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, DispIdAttribute__ctor, (DispIdAttribute * __this, int32_t dispId, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, InterfaceTypeAttribute__ctor, (InterfaceTypeAttribute * __this, ComInterfaceType__Enum interfaceType, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, ComDefaultInterfaceAttribute__ctor, (ComDefaultInterfaceAttribute * __this, Type * defaultInterface, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, ClassInterfaceAttribute__ctor, (ClassInterfaceAttribute * __this, ClassInterfaceType__Enum classInterfaceType, MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, ComVisibleAttribute__ctor, (ComVisibleAttribute * __this, bool visibility, MethodInfo * method));
DO_APP_FUNC(0x01A97550, void, TypeLibImportClassAttribute__ctor, (TypeLibImportClassAttribute * __this, Type * importClass, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ComImportAttribute__ctor, (ComImportAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, GuidAttribute__ctor, (GuidAttribute * __this, String * guid, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, PreserveSigAttribute__ctor, (PreserveSigAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, InAttribute__ctor, (InAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, OutAttribute__ctor, (OutAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, OptionalAttribute__ctor, (OptionalAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, DefaultDllImportSearchPathsAttribute__ctor, (DefaultDllImportSearchPathsAttribute * __this, DllImportSearchPath__Enum paths, MethodInfo * method));
DO_APP_FUNC(0x01A93F90, Attribute *, DllImportAttribute_GetCustomAttribute, (RuntimeMethodInfo * method_1, MethodInfo * method));
DO_APP_FUNC(0x01A941F0, bool, DllImportAttribute_IsDefined, (RuntimeMethodInfo * method_1, MethodInfo * method));
DO_APP_FUNC(0x01A94220, void, DllImportAttribute__ctor, (DllImportAttribute * __this, String * dllName, String * entryPoint, CharSet__Enum charSet, bool exactSpelling, bool setLastError, bool preserveSig, CallingConvention__Enum callingConvention, bool bestFitMapping, bool throwOnUnmappableChar, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, DllImportAttribute__ctor_1, (DllImportAttribute * __this, String * dllName, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, DllImportAttribute_get_Value, (DllImportAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, FieldOffsetAttribute__ctor, (FieldOffsetAttribute * __this, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x01857090, void, TypeLibVersionAttribute__ctor, (TypeLibVersionAttribute * __this, int32_t major, int32_t minor, MethodInfo * method));
DO_APP_FUNC(0x01A93F70, void, ComCompatibleVersionAttribute__ctor, (ComCompatibleVersionAttribute * __this, int32_t major, int32_t minor, int32_t build, int32_t revision, MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, BestFitMappingAttribute__ctor, (BestFitMappingAttribute * __this, bool BestFitMapping, MethodInfo * method));
DO_APP_FUNC(0x01A93CC0, void, COMException__ctor, (COMException * __this, MethodInfo * method));
DO_APP_FUNC(0x01A93D50, void, COMException__ctor_1, (COMException * __this, String * message, int32_t errorCode, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, COMException__ctor_2, (COMException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01A93D80, String *, COMException_ToString, (COMException * __this, MethodInfo * method));
DO_APP_FUNC(0x01A94260, void, ExternalException__ctor, (ExternalException * __this, MethodInfo * method));
DO_APP_FUNC(0x01A942F0, void, ExternalException__ctor_1, (ExternalException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A94310, void, ExternalException__ctor_2, (ExternalException * __this, String * message, Exception * inner, MethodInfo * method));
DO_APP_FUNC(0x01A93D50, void, ExternalException__ctor_3, (ExternalException * __this, String * message, int32_t errorCode, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, ExternalException__ctor_4, (ExternalException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FD750, int32_t, ExternalException_get_ErrorCode, (ExternalException * __this, MethodInfo * method));
DO_APP_FUNC(0x01A94330, String *, ExternalException_ToString, (ExternalException * __this, MethodInfo * method));
DO_APP_FUNC(0x00110270, void, HandleRef__ctor, (HandleRef__Boxed * __this, Object * wrapper, void * handle, MethodInfo * method));
DO_APP_FUNC(0x00107C10, void *, HandleRef_get_Handle, (HandleRef__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01A96C00, void, MarshalDirectiveException__ctor, (MarshalDirectiveException * __this, MethodInfo * method));
DO_APP_FUNC(0x01A96C90, void, MarshalDirectiveException__ctor_1, (MarshalDirectiveException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, MarshalDirectiveException__ctor_2, (MarshalDirectiveException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01A96E40, void, SafeHandle__ctor, (SafeHandle * __this, void * invalidHandleValue, bool ownsHandle, MethodInfo * method));
DO_APP_FUNC(0x01A96F10, void, SafeHandle_Finalize, (SafeHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, SafeHandle_SetHandle, (SafeHandle * __this, void * handle, MethodInfo * method));
DO_APP_FUNC(0x002FA280, void *, SafeHandle_DangerousGetHandle, (SafeHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x01A96FB0, bool, SafeHandle_get_IsClosed, (SafeHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x01A8DC40, void, SafeHandle_Close, (SafeHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x01A8DC40, void, SafeHandle_Dispose, (SafeHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x01A96FC0, void, SafeHandle_Dispose_1, (SafeHandle * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01A970C0, void, SafeHandle_SetHandleAsInvalid, (SafeHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x01A971A0, void, SafeHandle_DangerousAddRef, (SafeHandle * __this, bool * success, MethodInfo * method));
DO_APP_FUNC(0x01A972B0, void, SafeHandle_DangerousRelease, (SafeHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x01A972C0, void, SafeHandle_InternalDispose, (SafeHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x01A973A0, void, SafeHandle_InternalFinalize, (SafeHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x01A973C0, void, SafeHandle_DangerousReleaseInternal, (SafeHandle * __this, bool dispose, MethodInfo * method));
DO_APP_FUNC(0x0010DB80, void, GCHandle__ctor, (GCHandle__Boxed * __this, void * h, MethodInfo * method));
DO_APP_FUNC(0x0018F2D0, void, GCHandle__ctor_1, (GCHandle__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0018F300, void, GCHandle__ctor_2, (GCHandle__Boxed * __this, Object * value, GCHandleType__Enum type, MethodInfo * method));
DO_APP_FUNC(0x0018F330, bool, GCHandle_get_IsAllocated, (GCHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0018F340, Object *, GCHandle_get_Target, (GCHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0018F350, void, GCHandle_set_Target, (GCHandle__Boxed * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0018F360, void *, GCHandle_AddrOfPinnedObject, (GCHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01A947F0, GCHandle, GCHandle_Alloc, (Object * value, MethodInfo * method));
DO_APP_FUNC(0x01A94800, GCHandle, GCHandle_Alloc_1, (Object * value, GCHandleType__Enum type, MethodInfo * method));
DO_APP_FUNC(0x0018F370, void, GCHandle_Free, (GCHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01A948E0, void *, GCHandle_op_Explicit, (GCHandle value, MethodInfo * method));
DO_APP_FUNC(0x01A948F0, GCHandle, GCHandle_op_Explicit_1, (void * value, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, GCHandle_CheckCurrentDomain, (int32_t handle, MethodInfo * method));
DO_APP_FUNC(0x01A949A0, Object *, GCHandle_GetTarget, (int32_t handle, MethodInfo * method));
DO_APP_FUNC(0x01A949B0, int32_t, GCHandle_GetTargetHandle, (Object * obj, int32_t handle, GCHandleType__Enum type, MethodInfo * method));
DO_APP_FUNC(0x01A949C0, void, GCHandle_FreeHandle, (int32_t handle, MethodInfo * method));
DO_APP_FUNC(0x01A949D0, void *, GCHandle_GetAddrOfPinnedObject, (int32_t handle, MethodInfo * method));
DO_APP_FUNC(0x015F7650, bool, GCHandle_op_Equality, (GCHandle a, GCHandle b, MethodInfo * method));
DO_APP_FUNC(0x0018F380, bool, GCHandle_Equals, (GCHandle__Boxed * __this, Object * o, MethodInfo * method));
DO_APP_FUNC(0x0010E170, int32_t, GCHandle_GetHashCode, (GCHandle__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01A94B00, GCHandle, GCHandle_FromIntPtr, (void * value, MethodInfo * method));
DO_APP_FUNC(0x01A948E0, void *, GCHandle_ToIntPtr, (GCHandle value, MethodInfo * method));
DO_APP_FUNC(0x01A94B10, void *, Marshal_AllocCoTaskMem, (int32_t cb, MethodInfo * method));
DO_APP_FUNC(0x01A94B20, void *, Marshal_AllocHGlobal, (void * cb, MethodInfo * method));
DO_APP_FUNC(0x01A94B30, void *, Marshal_AllocHGlobal_1, (int32_t cb, MethodInfo * method));
DO_APP_FUNC(0x01A94BD0, void, Marshal_copy_to_unmanaged, (Array * source, int32_t startIndex, void * destination, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01A94C00, void, Marshal_copy_from_unmanaged, (void * source, int32_t startIndex, Array * destination, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01A94C40, void, Marshal_Copy, (Byte__Array * source, int32_t startIndex, void * destination, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01A94D20, void, Marshal_Copy_1, (Char__Array * source, int32_t startIndex, void * destination, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01A94E00, void, Marshal_Copy_2, (IntPtr__Array * source, int32_t startIndex, void * destination, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01A94EE0, void, Marshal_Copy_3, (void * source, Byte__Array * destination, int32_t startIndex, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01A94FC0, void, Marshal_Copy_4, (void * source, Char__Array * destination, int32_t startIndex, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01A950A0, void, Marshal_FreeBSTR, (void * ptr, MethodInfo * method));
DO_APP_FUNC(0x01A950B0, void, Marshal_FreeCoTaskMem, (void * ptr, MethodInfo * method));
DO_APP_FUNC(0x01A950C0, void, Marshal_FreeHGlobal, (void * hglobal, MethodInfo * method));
DO_APP_FUNC(0x01A950D0, void, Marshal_ClearBSTR, (void * ptr, MethodInfo * method));
DO_APP_FUNC(0x01A951E0, void, Marshal_ZeroFreeBSTR, (void * s, MethodInfo * method));
DO_APP_FUNC(0x01A95370, void, Marshal_ClearUnicode, (void * ptr, MethodInfo * method));
DO_APP_FUNC(0x01A954B0, void, Marshal_ZeroFreeGlobalAllocUnicode, (void * s, MethodInfo * method));
DO_APP_FUNC(0x01A95680, int32_t, Marshal_GetHRForException, (Exception * e, MethodInfo * method));
DO_APP_FUNC(0x01A95690, int32_t, Marshal_GetLastWin32Error, (MethodInfo * method));
DO_APP_FUNC(0x01A956F0, String *, Marshal_PtrToStringAnsi, (void * ptr, MethodInfo * method));
DO_APP_FUNC(0x01A95710, String *, Marshal_PtrToStringUni, (void * ptr, MethodInfo * method));
DO_APP_FUNC(0x01A95780, String *, Marshal_PtrToStringBSTR, (void * ptr, MethodInfo * method));
DO_APP_FUNC(0x01A957B0, void, Marshal_PtrToStructure, (void * ptr, Object * structure, MethodInfo * method));
DO_APP_FUNC(0x01A95870, Object *, Marshal_PtrToStructure_1, (void * ptr, Type * structureType, MethodInfo * method));
DO_APP_FUNC(0x01A95880, uint8_t, Marshal_ReadByte, (void * ptr, MethodInfo * method));
DO_APP_FUNC(0x0157BDE0, uint8_t, Marshal_ReadByte_1, (void * ptr, int32_t ofs, MethodInfo * method));
DO_APP_FUNC(0x01A95890, int16_t, Marshal_ReadInt16, (void * ptr, int32_t ofs, MethodInfo * method));
DO_APP_FUNC(0x01A958D0, int32_t, Marshal_ReadInt32, (void * ptr, MethodInfo * method));
DO_APP_FUNC(0x01A95910, int32_t, Marshal_ReadInt32_1, (void * ptr, int32_t ofs, MethodInfo * method));
DO_APP_FUNC(0x01A95950, int64_t, Marshal_ReadInt64, (void * ptr, MethodInfo * method));
DO_APP_FUNC(0x01A95990, void *, Marshal_ReadIntPtr, (void * ptr, MethodInfo * method));
DO_APP_FUNC(0x01A95A60, int32_t, Marshal_ReleaseInternal, (void * pUnk, MethodInfo * method));
DO_APP_FUNC(0x01A95A70, int32_t, Marshal_Release, (void * pUnk, MethodInfo * method));
DO_APP_FUNC(0x01A95B50, int32_t, Marshal_SizeOf, (Object * structure, MethodInfo * method));
DO_APP_FUNC(0x01A95CE0, int32_t, Marshal_SizeOf_1, (Type * t, MethodInfo * method));
DO_APP_FUNC(0x01A95DD0, void *, Marshal_StringToBSTR, (String * s, MethodInfo * method));
DO_APP_FUNC(0x01A95E10, void *, Marshal_StringToHGlobalUni, (String * s, MethodInfo * method));
DO_APP_FUNC(0x01A95E70, void *, Marshal_SecureStringToBSTR, (SecureString * s, MethodInfo * method));
DO_APP_FUNC(0x01A96010, void *, Marshal_SecureStringToCoTaskMemUnicode, (SecureString * s, MethodInfo * method));
DO_APP_FUNC(0x01A96320, void *, Marshal_SecureStringToGlobalAllocUnicode, (SecureString * s, MethodInfo * method));
DO_APP_FUNC(0x01A963F0, void, Marshal_StructureToPtr, (Object * structure, void * ptr, bool fDeleteOld, MethodInfo * method));
DO_APP_FUNC(0x0173D7D0, void *, Marshal_BufferToBSTR, (Array * ptr, int32_t slen, MethodInfo * method));
DO_APP_FUNC(0x01A96510, void *, Marshal_UnsafeAddrOfPinnedArrayElement, (Array * arr, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x015E38F0, void, Marshal_WriteByte, (void * ptr, int32_t ofs, uint8_t val, MethodInfo * method));
DO_APP_FUNC(0x01A96530, void, Marshal_WriteInt16, (void * ptr, int16_t val, MethodInfo * method));
DO_APP_FUNC(0x01A96560, void, Marshal_WriteInt16_1, (void * ptr, int32_t ofs, int16_t val, MethodInfo * method));
DO_APP_FUNC(0x01A965A0, void, Marshal_WriteInt32, (void * ptr, int32_t val, MethodInfo * method));
DO_APP_FUNC(0x01A965D0, void, Marshal_WriteInt64, (void * ptr, int64_t val, MethodInfo * method));
DO_APP_FUNC(0x01A96600, void, Marshal_WriteIntPtr, (void * ptr, void * val, MethodInfo * method));
DO_APP_FUNC(0x01A966D0, Delegate *, Marshal_GetDelegateForFunctionPointerInternal, (void * ptr, Type * t, MethodInfo * method));
DO_APP_FUNC(0x01A96700, Delegate *, Marshal_GetDelegateForFunctionPointer, (void * ptr, Type * t, MethodInfo * method));
DO_APP_FUNC(0x01A96950, void *, Marshal_GetFunctionPointerForDelegateInternal, (Delegate * d, MethodInfo * method));
DO_APP_FUNC(0x01A96960, void *, Marshal_GetFunctionPointerForDelegate, (Delegate * d, MethodInfo * method));
DO_APP_FUNC(0x01A96A30, void, Marshal__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01A96AD0, MarshalAsAttribute *, MarshalAsAttribute_Copy, (MarshalAsAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01A96CB0, void, SafeBuffer_AcquirePointer, (SafeBuffer * __this, uint8_t * * pointer, MethodInfo * method));
DO_APP_FUNC(0x01A96D90, void, SafeBuffer_ReleasePointer, (SafeBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x00110270, void, DictionaryEntry__ctor, (DictionaryEntry__Boxed * __this, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x00107C00, Object *, DictionaryEntry_get_Key, (DictionaryEntry__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00107C10, Object *, DictionaryEntry_get_Value, (DictionaryEntry__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, LowLevelComparer__ctor, (LowLevelComparer * __this, MethodInfo * method));
DO_APP_FUNC(0x0202AFC0, int32_t, LowLevelComparer_Compare, (LowLevelComparer * __this, Object * a, Object * b, MethodInfo * method));
DO_APP_FUNC(0x0202B110, void, LowLevelComparer__cctor, (MethodInfo * method));
DO_APP_FUNC(0x022A3560, void, ArrayList__ctor, (ArrayList * __this, MethodInfo * method));
DO_APP_FUNC(0x022A3610, void, ArrayList__ctor_1, (ArrayList * __this, int32_t capacity, MethodInfo * method));
DO_APP_FUNC(0x022A3770, void, ArrayList__ctor_2, (ArrayList * __this, ICollection * c, MethodInfo * method));
DO_APP_FUNC(0x022A38C0, void, ArrayList_set_Capacity, (ArrayList * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, ArrayList_get_Count, (ArrayList * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, ArrayList_get_IsFixedSize, (ArrayList * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, ArrayList_get_IsReadOnly, (ArrayList * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, ArrayList_get_IsSynchronized, (ArrayList * __this, MethodInfo * method));
DO_APP_FUNC(0x022A3A00, Object *, ArrayList_get_SyncRoot, (ArrayList * __this, MethodInfo * method));
DO_APP_FUNC(0x022A3B60, Object *, ArrayList_get_Item, (ArrayList * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x022A3C60, void, ArrayList_set_Item, (ArrayList * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x022A3DA0, ArrayList *, ArrayList_Adapter, (IList * list, MethodInfo * method));
DO_APP_FUNC(0x022A3F30, int32_t, ArrayList_Add, (ArrayList * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x022A3FF0, void, ArrayList_AddRange, (ArrayList * __this, ICollection * c, MethodInfo * method));
DO_APP_FUNC(0x022A4010, void, ArrayList_Clear, (ArrayList * __this, MethodInfo * method));
DO_APP_FUNC(0x022A4050, Object *, ArrayList_Clone, (ArrayList * __this, MethodInfo * method));
DO_APP_FUNC(0x022A41E0, bool, ArrayList_Contains, (ArrayList * __this, Object * item, MethodInfo * method));
DO_APP_FUNC(0x022A42F0, void, ArrayList_CopyTo, (ArrayList * __this, Array * array, MethodInfo * method));
DO_APP_FUNC(0x022A4310, void, ArrayList_CopyTo_1, (ArrayList * __this, Array * array, int32_t arrayIndex, MethodInfo * method));
DO_APP_FUNC(0x022A4410, void, ArrayList_CopyTo_2, (ArrayList * __this, int32_t index, Array * array, int32_t arrayIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x022A4570, void, ArrayList_EnsureCapacity, (ArrayList * __this, int32_t min, MethodInfo * method));
DO_APP_FUNC(0x022A45E0, IEnumerator *, ArrayList_GetEnumerator, (ArrayList * __this, MethodInfo * method));
DO_APP_FUNC(0x022A4810, int32_t, ArrayList_IndexOf, (ArrayList * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x022A4840, void, ArrayList_Insert, (ArrayList * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x022A49D0, void, ArrayList_InsertRange, (ArrayList * __this, int32_t index, ICollection * c, MethodInfo * method));
DO_APP_FUNC(0x022A4BB0, IList *, ArrayList_ReadOnly, (IList * list, MethodInfo * method));
DO_APP_FUNC(0x022A4D30, ArrayList *, ArrayList_ReadOnly_1, (ArrayList * list, MethodInfo * method));
DO_APP_FUNC(0x0201BCE0, void, ArrayList_Remove, (ArrayList * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x022A4EC0, void, ArrayList_RemoveAt, (ArrayList * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x022A4FF0, void, ArrayList_RemoveRange, (ArrayList * __this, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x022A5200, void, ArrayList_Sort, (ArrayList * __this, IComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x022A5250, void, ArrayList_Sort_1, (ArrayList * __this, int32_t index, int32_t count, IComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x022A53F0, Object__Array *, ArrayList_ToArray, (ArrayList * __this, MethodInfo * method));
DO_APP_FUNC(0x022A54B0, Array *, ArrayList_ToArray_1, (ArrayList * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x022A5600, void, ArrayList__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0201AA60, void, ArrayList_IListWrapper__ctor, (ArrayList_IListWrapper * __this, IList * list, MethodInfo * method));
DO_APP_FUNC(0x0201AB20, void, ArrayList_IListWrapper_set_Capacity, (ArrayList_IListWrapper * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0201AC00, int32_t, ArrayList_IListWrapper_get_Count, (ArrayList_IListWrapper * __this, MethodInfo * method));
DO_APP_FUNC(0x0201AC90, bool, ArrayList_IListWrapper_get_IsReadOnly, (ArrayList_IListWrapper * __this, MethodInfo * method));
DO_APP_FUNC(0x0201AD20, bool, ArrayList_IListWrapper_get_IsFixedSize, (ArrayList_IListWrapper * __this, MethodInfo * method));
DO_APP_FUNC(0x0201ADB0, bool, ArrayList_IListWrapper_get_IsSynchronized, (ArrayList_IListWrapper * __this, MethodInfo * method));
DO_APP_FUNC(0x0201AE40, Object *, ArrayList_IListWrapper_get_Item, (ArrayList_IListWrapper * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0201AEE0, void, ArrayList_IListWrapper_set_Item, (ArrayList_IListWrapper * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0201AFA0, Object *, ArrayList_IListWrapper_get_SyncRoot, (ArrayList_IListWrapper * __this, MethodInfo * method));
DO_APP_FUNC(0x0201B030, int32_t, ArrayList_IListWrapper_Add, (ArrayList_IListWrapper * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0201B0E0, void, ArrayList_IListWrapper_AddRange, (ArrayList_IListWrapper * __this, ICollection * c, MethodInfo * method));
DO_APP_FUNC(0x0201B130, void, ArrayList_IListWrapper_Clear, (ArrayList_IListWrapper * __this, MethodInfo * method));
DO_APP_FUNC(0x0201B230, Object *, ArrayList_IListWrapper_Clone, (ArrayList_IListWrapper * __this, MethodInfo * method));
DO_APP_FUNC(0x0201B380, bool, ArrayList_IListWrapper_Contains, (ArrayList_IListWrapper * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0201B430, void, ArrayList_IListWrapper_CopyTo, (ArrayList_IListWrapper * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0201B4E0, void, ArrayList_IListWrapper_CopyTo_1, (ArrayList_IListWrapper * __this, int32_t index, Array * array, int32_t arrayIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0201B7C0, IEnumerator *, ArrayList_IListWrapper_GetEnumerator, (ArrayList_IListWrapper * __this, MethodInfo * method));
DO_APP_FUNC(0x0201B850, int32_t, ArrayList_IListWrapper_IndexOf, (ArrayList_IListWrapper * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0201B900, void, ArrayList_IListWrapper_Insert, (ArrayList_IListWrapper * __this, int32_t index, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0201B9C0, void, ArrayList_IListWrapper_InsertRange, (ArrayList_IListWrapper * __this, int32_t index, ICollection * c, MethodInfo * method));
DO_APP_FUNC(0x0201BCE0, void, ArrayList_IListWrapper_Remove, (ArrayList_IListWrapper * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0201BD20, void, ArrayList_IListWrapper_RemoveAt, (ArrayList_IListWrapper * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0201BDD0, void, ArrayList_IListWrapper_RemoveRange, (ArrayList_IListWrapper * __this, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0201BFD0, void, ArrayList_IListWrapper_Sort, (ArrayList_IListWrapper * __this, int32_t index, int32_t count, IComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x0201C280, Object__Array *, ArrayList_IListWrapper_ToArray, (ArrayList_IListWrapper * __this, MethodInfo * method));
DO_APP_FUNC(0x0201C350, Array *, ArrayList_IListWrapper_ToArray_1, (ArrayList_IListWrapper * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, ArrayList_ReadOnlyList__ctor, (ArrayList_ReadOnlyList * __this, IList * l, MethodInfo * method));
DO_APP_FUNC(0x0201CE10, int32_t, ArrayList_ReadOnlyList_get_Count, (ArrayList_ReadOnlyList * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, ArrayList_ReadOnlyList_get_IsReadOnly, (ArrayList_ReadOnlyList * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, ArrayList_ReadOnlyList_get_IsFixedSize, (ArrayList_ReadOnlyList * __this, MethodInfo * method));
DO_APP_FUNC(0x0201CEA0, bool, ArrayList_ReadOnlyList_get_IsSynchronized, (ArrayList_ReadOnlyList * __this, MethodInfo * method));
DO_APP_FUNC(0x0201CF30, Object *, ArrayList_ReadOnlyList_get_Item, (ArrayList_ReadOnlyList * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0201CFD0, void, ArrayList_ReadOnlyList_set_Item, (ArrayList_ReadOnlyList * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0201D040, Object *, ArrayList_ReadOnlyList_get_SyncRoot, (ArrayList_ReadOnlyList * __this, MethodInfo * method));
DO_APP_FUNC(0x0201D0D0, int32_t, ArrayList_ReadOnlyList_Add, (ArrayList_ReadOnlyList * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0201D140, void, ArrayList_ReadOnlyList_Clear, (ArrayList_ReadOnlyList * __this, MethodInfo * method));
DO_APP_FUNC(0x0201D1B0, bool, ArrayList_ReadOnlyList_Contains, (ArrayList_ReadOnlyList * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0201D260, void, ArrayList_ReadOnlyList_CopyTo, (ArrayList_ReadOnlyList * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0201D310, IEnumerator *, ArrayList_ReadOnlyList_GetEnumerator, (ArrayList_ReadOnlyList * __this, MethodInfo * method));
DO_APP_FUNC(0x0201D3A0, int32_t, ArrayList_ReadOnlyList_IndexOf, (ArrayList_ReadOnlyList * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0201D450, void, ArrayList_ReadOnlyList_Insert, (ArrayList_ReadOnlyList * __this, int32_t index, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0201D4C0, void, ArrayList_ReadOnlyList_Remove, (ArrayList_ReadOnlyList * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0201D530, void, ArrayList_ReadOnlyList_RemoveAt, (ArrayList_ReadOnlyList * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0201C4D0, void, ArrayList_ReadOnlyArrayList__ctor, (ArrayList_ReadOnlyArrayList * __this, ArrayList * l, MethodInfo * method));
DO_APP_FUNC(0x0201C580, int32_t, ArrayList_ReadOnlyArrayList_get_Count, (ArrayList_ReadOnlyArrayList * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, ArrayList_ReadOnlyArrayList_get_IsReadOnly, (ArrayList_ReadOnlyArrayList * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, ArrayList_ReadOnlyArrayList_get_IsFixedSize, (ArrayList_ReadOnlyArrayList * __this, MethodInfo * method));
DO_APP_FUNC(0x0201C5B0, bool, ArrayList_ReadOnlyArrayList_get_IsSynchronized, (ArrayList_ReadOnlyArrayList * __this, MethodInfo * method));
DO_APP_FUNC(0x0201C5E0, Object *, ArrayList_ReadOnlyArrayList_get_Item, (ArrayList_ReadOnlyArrayList * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0201C610, void, ArrayList_ReadOnlyArrayList_set_Item, (ArrayList_ReadOnlyArrayList * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0201C680, Object *, ArrayList_ReadOnlyArrayList_get_SyncRoot, (ArrayList_ReadOnlyArrayList * __this, MethodInfo * method));
DO_APP_FUNC(0x0201C6B0, int32_t, ArrayList_ReadOnlyArrayList_Add, (ArrayList_ReadOnlyArrayList * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0201C720, void, ArrayList_ReadOnlyArrayList_AddRange, (ArrayList_ReadOnlyArrayList * __this, ICollection * c, MethodInfo * method));
DO_APP_FUNC(0x0201C790, void, ArrayList_ReadOnlyArrayList_set_Capacity, (ArrayList_ReadOnlyArrayList * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0201C800, void, ArrayList_ReadOnlyArrayList_Clear, (ArrayList_ReadOnlyArrayList * __this, MethodInfo * method));
DO_APP_FUNC(0x0201C870, Object *, ArrayList_ReadOnlyArrayList_Clone, (ArrayList_ReadOnlyArrayList * __this, MethodInfo * method));
DO_APP_FUNC(0x01706D10, bool, ArrayList_ReadOnlyArrayList_Contains, (ArrayList_ReadOnlyArrayList * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0201CA50, void, ArrayList_ReadOnlyArrayList_CopyTo, (ArrayList_ReadOnlyArrayList * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0201CA80, void, ArrayList_ReadOnlyArrayList_CopyTo_1, (ArrayList_ReadOnlyArrayList * __this, int32_t index, Array * array, int32_t arrayIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0201CAB0, IEnumerator *, ArrayList_ReadOnlyArrayList_GetEnumerator, (ArrayList_ReadOnlyArrayList * __this, MethodInfo * method));
DO_APP_FUNC(0x0201CAE0, int32_t, ArrayList_ReadOnlyArrayList_IndexOf, (ArrayList_ReadOnlyArrayList * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0201CB10, void, ArrayList_ReadOnlyArrayList_Insert, (ArrayList_ReadOnlyArrayList * __this, int32_t index, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0201CB80, void, ArrayList_ReadOnlyArrayList_InsertRange, (ArrayList_ReadOnlyArrayList * __this, int32_t index, ICollection * c, MethodInfo * method));
DO_APP_FUNC(0x0201CBF0, void, ArrayList_ReadOnlyArrayList_Remove, (ArrayList_ReadOnlyArrayList * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0201CC60, void, ArrayList_ReadOnlyArrayList_RemoveAt, (ArrayList_ReadOnlyArrayList * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0201CCD0, void, ArrayList_ReadOnlyArrayList_RemoveRange, (ArrayList_ReadOnlyArrayList * __this, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0201CD40, void, ArrayList_ReadOnlyArrayList_Sort, (ArrayList_ReadOnlyArrayList * __this, int32_t index, int32_t count, IComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x0201CDB0, Object__Array *, ArrayList_ReadOnlyArrayList_ToArray, (ArrayList_ReadOnlyArrayList * __this, MethodInfo * method));
DO_APP_FUNC(0x0201CDE0, Array *, ArrayList_ReadOnlyArrayList_ToArray_1, (ArrayList_ReadOnlyArrayList * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x0201A310, void, ArrayList_ArrayListEnumeratorSimple__ctor, (ArrayList_ArrayListEnumeratorSimple * __this, ArrayList * list, MethodInfo * method));
DO_APP_FUNC(0x0173F610, Object *, ArrayList_ArrayListEnumeratorSimple_Clone, (ArrayList_ArrayListEnumeratorSimple * __this, MethodInfo * method));
DO_APP_FUNC(0x0201A440, bool, ArrayList_ArrayListEnumeratorSimple_MoveNext, (ArrayList_ArrayListEnumeratorSimple * __this, MethodInfo * method));
DO_APP_FUNC(0x0201A6C0, Object *, ArrayList_ArrayListEnumeratorSimple_get_Current, (ArrayList_ArrayListEnumeratorSimple * __this, MethodInfo * method));
DO_APP_FUNC(0x0201A800, void, ArrayList_ArrayListEnumeratorSimple_Reset, (ArrayList_ArrayListEnumeratorSimple * __this, MethodInfo * method));
DO_APP_FUNC(0x0201A920, void, ArrayList_ArrayListEnumeratorSimple__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0201A220, void, ArrayList_ArrayListDebugView__ctor, (ArrayList_ArrayListDebugView * __this, ArrayList * arrayList, MethodInfo * method));
DO_APP_FUNC(0x0201A2E0, Object__Array *, ArrayList_ArrayListDebugView_get_Items, (ArrayList_ArrayListDebugView * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BitArray__ctor, (BitArray * __this, MethodInfo * method));
DO_APP_FUNC(0x0201D5A0, void, BitArray__ctor_1, (BitArray * __this, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x0201D5B0, void, BitArray__ctor_2, (BitArray * __this, int32_t length, bool defaultValue, MethodInfo * method));
DO_APP_FUNC(0x0201D720, void, BitArray__ctor_3, (BitArray * __this, Int32__Array * values, MethodInfo * method));
DO_APP_FUNC(0x0201D8C0, bool, BitArray_get_Item, (BitArray * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0201D8D0, void, BitArray_set_Item, (BitArray * __this, int32_t index, bool value, MethodInfo * method));
DO_APP_FUNC(0x0201D8E0, bool, BitArray_Get, (BitArray * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0201DA00, void, BitArray_Set, (BitArray * __this, int32_t index, bool value, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, BitArray_get_Length, (BitArray * __this, MethodInfo * method));
DO_APP_FUNC(0x0201DB90, void, BitArray_set_Length, (BitArray * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0201DDA0, void, BitArray_CopyTo, (BitArray * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, BitArray_get_Count, (BitArray * __this, MethodInfo * method));
DO_APP_FUNC(0x0201E200, Object *, BitArray_Clone, (BitArray * __this, MethodInfo * method));
DO_APP_FUNC(0x0201E4C0, Object *, BitArray_get_SyncRoot, (BitArray * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, BitArray_get_IsSynchronized, (BitArray * __this, MethodInfo * method));
DO_APP_FUNC(0x0201E620, IEnumerator *, BitArray_GetEnumerator, (BitArray * __this, MethodInfo * method));
DO_APP_FUNC(0x0201E780, int32_t, BitArray_GetArrayLength, (int32_t n, int32_t div, MethodInfo * method));
DO_APP_FUNC(0x0201E7A0, void, BitArray_BitArrayEnumeratorSimple__ctor, (BitArray_BitArrayEnumeratorSimple * __this, BitArray * bitarray, MethodInfo * method));
DO_APP_FUNC(0x0173F610, Object *, BitArray_BitArrayEnumeratorSimple_Clone, (BitArray_BitArrayEnumeratorSimple * __this, MethodInfo * method));
DO_APP_FUNC(0x0201E7D0, bool, BitArray_BitArrayEnumeratorSimple_MoveNext, (BitArray_BitArrayEnumeratorSimple * __this, MethodInfo * method));
DO_APP_FUNC(0x0201E900, Object *, BitArray_BitArrayEnumeratorSimple_get_Current, (BitArray_BitArrayEnumeratorSimple * __this, MethodInfo * method));
DO_APP_FUNC(0x0201EA30, void, BitArray_BitArrayEnumeratorSimple_Reset, (BitArray_BitArrayEnumeratorSimple * __this, MethodInfo * method));
DO_APP_FUNC(0x0201EB10, void, CaseInsensitiveComparer__ctor, (CaseInsensitiveComparer * __this, MethodInfo * method));
DO_APP_FUNC(0x0201EBE0, void, CaseInsensitiveComparer__ctor_1, (CaseInsensitiveComparer * __this, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x0201ECB0, CaseInsensitiveComparer *, CaseInsensitiveComparer_get_Default, (MethodInfo * method));
DO_APP_FUNC(0x0201EE40, int32_t, CaseInsensitiveComparer_Compare, (CaseInsensitiveComparer * __this, Object * a, Object * b, MethodInfo * method));
DO_APP_FUNC(0x0201EF80, void, CaseInsensitiveHashCodeProvider__ctor, (CaseInsensitiveHashCodeProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x0201F050, void, CaseInsensitiveHashCodeProvider__ctor_1, (CaseInsensitiveHashCodeProvider * __this, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x0201F120, CaseInsensitiveHashCodeProvider *, CaseInsensitiveHashCodeProvider_get_Default, (MethodInfo * method));
DO_APP_FUNC(0x0201F2B0, int32_t, CaseInsensitiveHashCodeProvider_GetHashCode, (CaseInsensitiveHashCodeProvider * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CaseInsensitiveHashCodeProvider__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0201F3C0, void, CollectionBase__ctor, (CollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0201F510, ArrayList *, CollectionBase_get_InnerList, (CollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, IList *, CollectionBase_get_List, (CollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0201F670, int32_t, CollectionBase_get_Count, (CollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0201F690, void, CollectionBase_Clear, (CollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0201F6F0, void, CollectionBase_RemoveAt, (CollectionBase * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0201F8E0, bool, CollectionBase_System_Collections_IList_get_IsReadOnly, (CollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0201F910, bool, CollectionBase_System_Collections_IList_get_IsFixedSize, (CollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0201F940, bool, CollectionBase_System_Collections_ICollection_get_IsSynchronized, (CollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0201F970, Object *, CollectionBase_System_Collections_ICollection_get_SyncRoot, (CollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0201F9A0, void, CollectionBase_System_Collections_ICollection_CopyTo, (CollectionBase * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0201F9F0, Object *, CollectionBase_System_Collections_IList_get_Item, (CollectionBase * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0201FB10, void, CollectionBase_System_Collections_IList_set_Item, (CollectionBase * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0201FD20, bool, CollectionBase_System_Collections_IList_Contains, (CollectionBase * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0201FD60, int32_t, CollectionBase_System_Collections_IList_Add, (CollectionBase * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0201FEE0, void, CollectionBase_System_Collections_IList_Remove, (CollectionBase * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x020200A0, int32_t, CollectionBase_System_Collections_IList_IndexOf, (CollectionBase * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x020200E0, void, CollectionBase_System_Collections_IList_Insert, (CollectionBase * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x020202A0, IEnumerator *, CollectionBase_GetEnumerator, (CollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CollectionBase_OnSet, (CollectionBase * __this, int32_t index, Object * oldValue, Object * newValue, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CollectionBase_OnInsert, (CollectionBase * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CollectionBase_OnClear, (CollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CollectionBase_OnRemove, (CollectionBase * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x020202D0, void, CollectionBase_OnValidate, (CollectionBase * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CollectionBase_OnSetComplete, (CollectionBase * __this, int32_t index, Object * oldValue, Object * newValue, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CollectionBase_OnInsertComplete, (CollectionBase * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CollectionBase_OnClearComplete, (CollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CollectionBase_OnRemoveComplete, (CollectionBase * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0063D180, void, Comparer__ctor, (Comparer * __this, MethodInfo * method));
DO_APP_FUNC(0x02020380, void, Comparer__ctor_1, (Comparer * __this, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x02020450, void, Comparer__ctor_2, (Comparer * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x020205C0, int32_t, Comparer_Compare, (Comparer * __this, Object * a, Object * b, MethodInfo * method));
DO_APP_FUNC(0x02020750, void, Comparer_GetObjectData, (Comparer * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02020820, void, Comparer__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, CompatibleComparer__ctor, (CompatibleComparer * __this, IComparer * comparer, IHashCodeProvider * hashCodeProvider, MethodInfo * method));
DO_APP_FUNC(0x02020AA0, int32_t, CompatibleComparer_Compare, (CompatibleComparer * __this, Object * a, Object * b, MethodInfo * method));
DO_APP_FUNC(0x02020C20, bool, CompatibleComparer_Equals, (CompatibleComparer * __this, Object * a, Object * b, MethodInfo * method));
DO_APP_FUNC(0x02020D60, int32_t, CompatibleComparer_GetHashCode, (CompatibleComparer * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x002FA280, IComparer *, CompatibleComparer_get_Comparer, (CompatibleComparer * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, IHashCodeProvider *, CompatibleComparer_get_HashCodeProvider, (CompatibleComparer * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, EmptyReadOnlyDictionaryInternal__ctor, (EmptyReadOnlyDictionaryInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x020210F0, IEnumerator *, EmptyReadOnlyDictionaryInternal_System_Collections_IEnumerable_GetEnumerator, (EmptyReadOnlyDictionaryInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x02021230, void, EmptyReadOnlyDictionaryInternal_CopyTo, (EmptyReadOnlyDictionaryInternal * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, int32_t, EmptyReadOnlyDictionaryInternal_get_Count, (EmptyReadOnlyDictionaryInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, Object *, EmptyReadOnlyDictionaryInternal_get_SyncRoot, (EmptyReadOnlyDictionaryInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, EmptyReadOnlyDictionaryInternal_get_IsSynchronized, (EmptyReadOnlyDictionaryInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x020213D0, Object *, EmptyReadOnlyDictionaryInternal_get_Item, (EmptyReadOnlyDictionaryInternal * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x020214A0, void, EmptyReadOnlyDictionaryInternal_set_Item, (EmptyReadOnlyDictionaryInternal * __this, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x020216A0, ICollection *, EmptyReadOnlyDictionaryInternal_get_Keys, (EmptyReadOnlyDictionaryInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x02021740, ICollection *, EmptyReadOnlyDictionaryInternal_get_Values, (EmptyReadOnlyDictionaryInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, EmptyReadOnlyDictionaryInternal_Contains, (EmptyReadOnlyDictionaryInternal * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x020217E0, void, EmptyReadOnlyDictionaryInternal_Add, (EmptyReadOnlyDictionaryInternal * __this, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x020219E0, void, EmptyReadOnlyDictionaryInternal_Clear, (EmptyReadOnlyDictionaryInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, EmptyReadOnlyDictionaryInternal_get_IsReadOnly, (EmptyReadOnlyDictionaryInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, EmptyReadOnlyDictionaryInternal_get_IsFixedSize, (EmptyReadOnlyDictionaryInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x02021A50, IDictionaryEnumerator *, EmptyReadOnlyDictionaryInternal_GetEnumerator, (EmptyReadOnlyDictionaryInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x02021B90, void, EmptyReadOnlyDictionaryInternal_Remove, (EmptyReadOnlyDictionaryInternal * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, EmptyReadOnlyDictionaryInternal_NodeEnumerator__ctor, (EmptyReadOnlyDictionaryInternal_NodeEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, EmptyReadOnlyDictionaryInternal_NodeEnumerator_MoveNext, (EmptyReadOnlyDictionaryInternal_NodeEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02021C00, Object *, EmptyReadOnlyDictionaryInternal_NodeEnumerator_get_Current, (EmptyReadOnlyDictionaryInternal_NodeEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, EmptyReadOnlyDictionaryInternal_NodeEnumerator_Reset, (EmptyReadOnlyDictionaryInternal_NodeEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02021C70, Object *, EmptyReadOnlyDictionaryInternal_NodeEnumerator_get_Key, (EmptyReadOnlyDictionaryInternal_NodeEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02021CE0, Object *, EmptyReadOnlyDictionaryInternal_NodeEnumerator_get_Value, (EmptyReadOnlyDictionaryInternal_NodeEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02021D50, DictionaryEntry, EmptyReadOnlyDictionaryInternal_NodeEnumerator_get_Entry, (EmptyReadOnlyDictionaryInternal_NodeEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Hashtable__ctor, (Hashtable * __this, bool trash, MethodInfo * method));
DO_APP_FUNC(0x01E49380, void, Hashtable__ctor_1, (Hashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x02023110, void, Hashtable__ctor_2, (Hashtable * __this, int32_t capacity, MethodInfo * method));
DO_APP_FUNC(0x02023120, void, Hashtable__ctor_3, (Hashtable * __this, int32_t capacity, float loadFactor, MethodInfo * method));
DO_APP_FUNC(0x020233D0, void, Hashtable__ctor_4, (Hashtable * __this, int32_t capacity, float loadFactor, IHashCodeProvider * hcp, IComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x02023560, void, Hashtable__ctor_5, (Hashtable * __this, int32_t capacity, float loadFactor, IEqualityComparer * equalityComparer, MethodInfo * method));
DO_APP_FUNC(0x02023590, void, Hashtable__ctor_6, (Hashtable * __this, IHashCodeProvider * hcp, IComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x02023710, void, Hashtable__ctor_7, (Hashtable * __this, IEqualityComparer * equalityComparer, MethodInfo * method));
DO_APP_FUNC(0x02023750, void, Hashtable__ctor_8, (Hashtable * __this, int32_t capacity, IEqualityComparer * equalityComparer, MethodInfo * method));
DO_APP_FUNC(0x02023780, void, Hashtable__ctor_9, (Hashtable * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02023850, uint32_t, Hashtable_InitHash, (Hashtable * __this, Object * key, int32_t hashsize, uint32_t * seed, uint32_t * incr, MethodInfo * method));
DO_APP_FUNC(0x020238A0, void, Hashtable_Add, (Hashtable * __this, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x020238C0, void, Hashtable_Clear, (Hashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x02023AA0, Object *, Hashtable_Clone, (Hashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x02023C90, bool, Hashtable_Contains, (Hashtable * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x02023CB0, bool, Hashtable_ContainsKey, (Hashtable * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x02023E80, void, Hashtable_CopyKeys, (Hashtable * __this, Array * array, int32_t arrayIndex, MethodInfo * method));
DO_APP_FUNC(0x02023F30, void, Hashtable_CopyEntries, (Hashtable * __this, Array * array, int32_t arrayIndex, MethodInfo * method));
DO_APP_FUNC(0x02024080, void, Hashtable_CopyTo, (Hashtable * __this, Array * array, int32_t arrayIndex, MethodInfo * method));
DO_APP_FUNC(0x02024360, KeyValuePairs__Array *, Hashtable_ToKeyValuePairsArray, (Hashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x02024580, void, Hashtable_CopyValues, (Hashtable * __this, Array * array, int32_t arrayIndex, MethodInfo * method));
DO_APP_FUNC(0x02024630, Object *, Hashtable_get_Item, (Hashtable * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x02024870, void, Hashtable_set_Item, (Hashtable * __this, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02024890, void, Hashtable_expand, (Hashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x02024960, void, Hashtable_rehash, (Hashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x02024990, void, Hashtable_UpdateVersion, (Hashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x020249B0, void, Hashtable_rehash_1, (Hashtable * __this, int32_t newsize, bool forceNewHashCode, MethodInfo * method));
DO_APP_FUNC(0x02024C30, IEnumerator *, Hashtable_System_Collections_IEnumerable_GetEnumerator, (Hashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x02024DB0, IDictionaryEnumerator *, Hashtable_GetEnumerator, (Hashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x02024F30, int32_t, Hashtable_GetHash, (Hashtable * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Hashtable_get_IsReadOnly, (Hashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Hashtable_get_IsFixedSize, (Hashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Hashtable_get_IsSynchronized, (Hashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x02025000, bool, Hashtable_KeyEquals, (Hashtable * __this, Object * item, Object * key, MethodInfo * method));
DO_APP_FUNC(0x02025100, ICollection *, Hashtable_get_Keys, (Hashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x02025250, ICollection *, Hashtable_get_Values, (Hashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x020253A0, void, Hashtable_Insert, (Hashtable * __this, Object * key, Object * nvalue, bool add, MethodInfo * method));
DO_APP_FUNC(0x02025A60, void, Hashtable_putEntry, (Hashtable * __this, Hashtable_bucket__Array * newBuckets, Object * key, Object * nvalue, int32_t hashcode, MethodInfo * method));
DO_APP_FUNC(0x02025BA0, void, Hashtable_Remove, (Hashtable * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x02025EE0, Object *, Hashtable_get_SyncRoot, (Hashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, Hashtable_get_Count, (Hashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x02026040, Hashtable *, Hashtable_Synchronized, (Hashtable * table, MethodInfo * method));
DO_APP_FUNC(0x020261C0, void, Hashtable_GetObjectData, (Hashtable * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02026750, void, Hashtable_OnDeserialization, (Hashtable * __this, Object * sender, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, Hashtable_KeyCollection__ctor, (Hashtable_KeyCollection * __this, Hashtable * hashtable, MethodInfo * method));
DO_APP_FUNC(0x02027750, void, Hashtable_KeyCollection_CopyTo, (Hashtable_KeyCollection * __this, Array * array, int32_t arrayIndex, MethodInfo * method));
DO_APP_FUNC(0x02027930, IEnumerator *, Hashtable_KeyCollection_GetEnumerator, (Hashtable_KeyCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x017174B0, bool, Hashtable_KeyCollection_get_IsSynchronized, (Hashtable_KeyCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x016FBED0, Object *, Hashtable_KeyCollection_get_SyncRoot, (Hashtable_KeyCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02027AB0, int32_t, Hashtable_KeyCollection_get_Count, (Hashtable_KeyCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, Hashtable_ValueCollection__ctor, (Hashtable_ValueCollection * __this, Hashtable * hashtable, MethodInfo * method));
DO_APP_FUNC(0x02028AE0, void, Hashtable_ValueCollection_CopyTo, (Hashtable_ValueCollection * __this, Array * array, int32_t arrayIndex, MethodInfo * method));
DO_APP_FUNC(0x02028CC0, IEnumerator *, Hashtable_ValueCollection_GetEnumerator, (Hashtable_ValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x017174B0, bool, Hashtable_ValueCollection_get_IsSynchronized, (Hashtable_ValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x016FBED0, Object *, Hashtable_ValueCollection_get_SyncRoot, (Hashtable_ValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02027AB0, int32_t, Hashtable_ValueCollection_get_Count, (Hashtable_ValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, Hashtable_SyncHashtable__ctor, (Hashtable_SyncHashtable * __this, Hashtable * table, MethodInfo * method));
DO_APP_FUNC(0x02027AD0, void, Hashtable_SyncHashtable__ctor_1, (Hashtable_SyncHashtable * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02027C60, void, Hashtable_SyncHashtable_GetObjectData, (Hashtable_SyncHashtable * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02027E60, int32_t, Hashtable_SyncHashtable_get_Count, (Hashtable_SyncHashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x02027E90, bool, Hashtable_SyncHashtable_get_IsReadOnly, (Hashtable_SyncHashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x02027EC0, bool, Hashtable_SyncHashtable_get_IsFixedSize, (Hashtable_SyncHashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, Hashtable_SyncHashtable_get_IsSynchronized, (Hashtable_SyncHashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x02027EF0, Object *, Hashtable_SyncHashtable_get_Item, (Hashtable_SyncHashtable * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x02027F20, void, Hashtable_SyncHashtable_set_Item, (Hashtable_SyncHashtable * __this, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02028050, Object *, Hashtable_SyncHashtable_get_SyncRoot, (Hashtable_SyncHashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x02028080, void, Hashtable_SyncHashtable_Add, (Hashtable_SyncHashtable * __this, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x020281B0, void, Hashtable_SyncHashtable_Clear, (Hashtable_SyncHashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x020282C0, bool, Hashtable_SyncHashtable_Contains, (Hashtable_SyncHashtable * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x020282F0, bool, Hashtable_SyncHashtable_ContainsKey, (Hashtable_SyncHashtable * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x020283E0, void, Hashtable_SyncHashtable_CopyTo, (Hashtable_SyncHashtable * __this, Array * array, int32_t arrayIndex, MethodInfo * method));
DO_APP_FUNC(0x02028510, Object *, Hashtable_SyncHashtable_Clone, (Hashtable_SyncHashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x02028700, IEnumerator *, Hashtable_SyncHashtable_System_Collections_IEnumerable_GetEnumerator, (Hashtable_SyncHashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x02028700, IDictionaryEnumerator *, Hashtable_SyncHashtable_GetEnumerator, (Hashtable_SyncHashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x02028730, ICollection *, Hashtable_SyncHashtable_get_Keys, (Hashtable_SyncHashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x02028860, ICollection *, Hashtable_SyncHashtable_get_Values, (Hashtable_SyncHashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x02028990, void, Hashtable_SyncHashtable_Remove, (Hashtable_SyncHashtable * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Hashtable_SyncHashtable_OnDeserialization, (Hashtable_SyncHashtable * __this, Object * sender, MethodInfo * method));
DO_APP_FUNC(0x02028AB0, KeyValuePairs__Array *, Hashtable_SyncHashtable_ToKeyValuePairsArray, (Hashtable_SyncHashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x020270A0, void, Hashtable_HashtableEnumerator__ctor, (Hashtable_HashtableEnumerator * __this, Hashtable * hashtable, int32_t getObjRetType, MethodInfo * method));
DO_APP_FUNC(0x0173F610, Object *, Hashtable_HashtableEnumerator_Clone, (Hashtable_HashtableEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x020270E0, Object *, Hashtable_HashtableEnumerator_get_Key, (Hashtable_HashtableEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x020271B0, bool, Hashtable_HashtableEnumerator_MoveNext, (Hashtable_HashtableEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02027370, DictionaryEntry, Hashtable_HashtableEnumerator_get_Entry, (Hashtable_HashtableEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02027450, Object *, Hashtable_HashtableEnumerator_get_Current, (Hashtable_HashtableEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02027570, Object *, Hashtable_HashtableEnumerator_get_Value, (Hashtable_HashtableEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02027640, void, Hashtable_HashtableEnumerator_Reset, (Hashtable_HashtableEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02026FE0, void, Hashtable_HashtableDebugView__ctor, (Hashtable_HashtableDebugView * __this, Hashtable * hashtable, MethodInfo * method));
DO_APP_FUNC(0x017173C0, KeyValuePairs__Array *, Hashtable_HashtableDebugView_get_Items, (Hashtable_HashtableDebugView * __this, MethodInfo * method));
DO_APP_FUNC(0x02022AD0, ConditionalWeakTable_2_System_Object_System_Runtime_Serialization_SerializationInfo_ *, HashHelpers_1_get_SerializationInfoTable, (MethodInfo * method));
DO_APP_FUNC(0x02022CC0, bool, HashHelpers_1_IsPrime, (int32_t candidate, MethodInfo * method));
DO_APP_FUNC(0x02022DA0, int32_t, HashHelpers_1_GetPrime, (int32_t min, MethodInfo * method));
DO_APP_FUNC(0x02022F90, int32_t, HashHelpers_1_ExpandPrime, (int32_t oldSize, MethodInfo * method));
DO_APP_FUNC(0x02023060, void, HashHelpers_1__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02028E40, void, KeyValuePairs__ctor, (KeyValuePairs * __this, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ListDictionaryInternal__ctor, (ListDictionaryInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x02028E50, Object *, ListDictionaryInternal_get_Item, (ListDictionaryInternal * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x02028F70, void, ListDictionaryInternal_set_Item, (ListDictionaryInternal * __this, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0052A010, int32_t, ListDictionaryInternal_get_Count, (ListDictionaryInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x02029290, ICollection *, ListDictionaryInternal_get_Keys, (ListDictionaryInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, ListDictionaryInternal_get_IsReadOnly, (ListDictionaryInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, ListDictionaryInternal_get_IsFixedSize, (ListDictionaryInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, ListDictionaryInternal_get_IsSynchronized, (ListDictionaryInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x020293E0, Object *, ListDictionaryInternal_get_SyncRoot, (ListDictionaryInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x02029540, ICollection *, ListDictionaryInternal_get_Values, (ListDictionaryInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x02029690, void, ListDictionaryInternal_Add, (ListDictionaryInternal * __this, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02029A50, void, ListDictionaryInternal_Clear, (ListDictionaryInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x02029A60, bool, ListDictionaryInternal_Contains, (ListDictionaryInternal * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x02029B70, void, ListDictionaryInternal_CopyTo, (ListDictionaryInternal * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02029D80, IDictionaryEnumerator *, ListDictionaryInternal_GetEnumerator, (ListDictionaryInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x02029EE0, IEnumerator *, ListDictionaryInternal_System_Collections_IEnumerable_GetEnumerator, (ListDictionaryInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x0202A040, void, ListDictionaryInternal_Remove, (ListDictionaryInternal * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x0202A190, void, ListDictionaryInternal_NodeEnumerator__ctor, (ListDictionaryInternal_NodeEnumerator * __this, ListDictionaryInternal * list, MethodInfo * method));
DO_APP_FUNC(0x0202A1C0, Object *, ListDictionaryInternal_NodeEnumerator_get_Current, (ListDictionaryInternal_NodeEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0202A310, DictionaryEntry, ListDictionaryInternal_NodeEnumerator_get_Entry, (ListDictionaryInternal_NodeEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0202A3F0, Object *, ListDictionaryInternal_NodeEnumerator_get_Key, (ListDictionaryInternal_NodeEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0202A4C0, Object *, ListDictionaryInternal_NodeEnumerator_get_Value, (ListDictionaryInternal_NodeEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0202A590, bool, ListDictionaryInternal_NodeEnumerator_MoveNext, (ListDictionaryInternal_NodeEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0202A6A0, void, ListDictionaryInternal_NodeEnumerator_Reset, (ListDictionaryInternal_NodeEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01669060, void, ListDictionaryInternal_NodeKeyValueCollection__ctor, (ListDictionaryInternal_NodeKeyValueCollection * __this, ListDictionaryInternal * list, bool isKeys, MethodInfo * method));
DO_APP_FUNC(0x0202A780, void, ListDictionaryInternal_NodeKeyValueCollection_System_Collections_ICollection_CopyTo, (ListDictionaryInternal_NodeKeyValueCollection * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0202A9B0, int32_t, ListDictionaryInternal_NodeKeyValueCollection_System_Collections_ICollection_get_Count, (ListDictionaryInternal_NodeKeyValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, ListDictionaryInternal_NodeKeyValueCollection_System_Collections_ICollection_get_IsSynchronized, (ListDictionaryInternal_NodeKeyValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x0202A9F0, Object *, ListDictionaryInternal_NodeKeyValueCollection_System_Collections_ICollection_get_SyncRoot, (ListDictionaryInternal_NodeKeyValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x0202AB50, IEnumerator *, ListDictionaryInternal_NodeKeyValueCollection_System_Collections_IEnumerable_GetEnumerator, (ListDictionaryInternal_NodeKeyValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x0202ACC0, void, ListDictionaryInternal_NodeKeyValueCollection_NodeKeyValueEnumerator__ctor, (ListDictionaryInternal_NodeKeyValueCollection_NodeKeyValueEnumerator * __this, ListDictionaryInternal * list, bool isKeys, MethodInfo * method));
DO_APP_FUNC(0x0202ACF0, Object *, ListDictionaryInternal_NodeKeyValueCollection_NodeKeyValueEnumerator_get_Current, (ListDictionaryInternal_NodeKeyValueCollection_NodeKeyValueEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0202ADD0, bool, ListDictionaryInternal_NodeKeyValueCollection_NodeKeyValueEnumerator_MoveNext, (ListDictionaryInternal_NodeKeyValueCollection_NodeKeyValueEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0202AEE0, void, ListDictionaryInternal_NodeKeyValueCollection_NodeKeyValueEnumerator_Reset, (ListDictionaryInternal_NodeKeyValueCollection_NodeKeyValueEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ListDictionaryInternal_DictionaryNode__ctor, (ListDictionaryInternal_DictionaryNode * __this, MethodInfo * method));
DO_APP_FUNC(0x0202B250, void, Queue__ctor, (Queue * __this, MethodInfo * method));
DO_APP_FUNC(0x0202B270, void, Queue__ctor_1, (Queue * __this, int32_t capacity, MethodInfo * method));
DO_APP_FUNC(0x0202B280, void, Queue__ctor_2, (Queue * __this, int32_t capacity, float growFactor, MethodInfo * method));
DO_APP_FUNC(0x0202B480, void, Queue__ctor_3, (Queue * __this, ICollection * col, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, int32_t, Queue_get_Count, (Queue * __this, MethodInfo * method));
DO_APP_FUNC(0x0202B6B0, Object *, Queue_Clone, (Queue * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Queue_get_IsSynchronized, (Queue * __this, MethodInfo * method));
DO_APP_FUNC(0x0202B8A0, Object *, Queue_get_SyncRoot, (Queue * __this, MethodInfo * method));
DO_APP_FUNC(0x0202BA00, void, Queue_Clear, (Queue * __this, MethodInfo * method));
DO_APP_FUNC(0x0202BA60, void, Queue_CopyTo, (Queue * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0202BCB0, void, Queue_Enqueue, (Queue * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0202BEC0, IEnumerator *, Queue_GetEnumerator, (Queue * __this, MethodInfo * method));
DO_APP_FUNC(0x0202C030, Object *, Queue_Dequeue, (Queue * __this, MethodInfo * method));
DO_APP_FUNC(0x0202C170, Object *, Queue_Peek, (Queue * __this, MethodInfo * method));
DO_APP_FUNC(0x0202C270, Object *, Queue_GetElement, (Queue * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x0202C2C0, Object__Array *, Queue_ToArray, (Queue * __this, MethodInfo * method));
DO_APP_FUNC(0x0202C3C0, void, Queue_SetCapacity, (Queue * __this, int32_t capacity, MethodInfo * method));
DO_APP_FUNC(0x0202C5A0, void, Queue_QueueEnumerator__ctor, (Queue_QueueEnumerator * __this, Queue * q, MethodInfo * method));
DO_APP_FUNC(0x0173F610, Object *, Queue_QueueEnumerator_Clone, (Queue_QueueEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0202C5E0, bool, Queue_QueueEnumerator_MoveNext, (Queue_QueueEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0202C760, Object *, Queue_QueueEnumerator_get_Current, (Queue_QueueEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0202C880, void, Queue_QueueEnumerator_Reset, (Queue_QueueEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0202C4E0, void, Queue_QueueDebugView__ctor, (Queue_QueueDebugView * __this, Queue * queue, MethodInfo * method));
DO_APP_FUNC(0x01DFFC10, Object__Array *, Queue_QueueDebugView_get_Items, (Queue_QueueDebugView * __this, MethodInfo * method));
DO_APP_FUNC(0x0202C980, ArrayList *, ReadOnlyCollectionBase_get_InnerList, (ReadOnlyCollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0202CAE0, int32_t, ReadOnlyCollectionBase_get_Count, (ReadOnlyCollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0202CB10, bool, ReadOnlyCollectionBase_System_Collections_ICollection_get_IsSynchronized, (ReadOnlyCollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0202CB40, Object *, ReadOnlyCollectionBase_System_Collections_ICollection_get_SyncRoot, (ReadOnlyCollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0202CB70, void, ReadOnlyCollectionBase_System_Collections_ICollection_CopyTo, (ReadOnlyCollectionBase * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0202CBC0, IEnumerator *, ReadOnlyCollectionBase_GetEnumerator, (ReadOnlyCollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ReadOnlyCollectionBase__ctor, (ReadOnlyCollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0202CBF0, void, SortedList__ctor, (SortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x0202CC00, void, SortedList_Init, (SortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x0202CDE0, void, SortedList__ctor_1, (SortedList * __this, int32_t initialCapacity, MethodInfo * method));
DO_APP_FUNC(0x0202CFF0, void, SortedList__ctor_2, (SortedList * __this, IComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x0202D020, void, SortedList__ctor_3, (SortedList * __this, IComparer * comparer, int32_t capacity, MethodInfo * method));
DO_APP_FUNC(0x0202D070, void, SortedList_Add, (SortedList * __this, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02027AB0, int32_t, SortedList_get_Capacity, (SortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x0202D250, void, SortedList_set_Capacity, (SortedList * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, int32_t, SortedList_get_Count, (SortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x00F7ADD0, ICollection *, SortedList_get_Keys, (SortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x00CCDBF0, ICollection *, SortedList_get_Values, (SortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, SortedList_get_IsReadOnly, (SortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, SortedList_get_IsFixedSize, (SortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, SortedList_get_IsSynchronized, (SortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x0202D420, Object *, SortedList_get_SyncRoot, (SortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x0202D580, void, SortedList_Clear, (SortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x0202D5C0, Object *, SortedList_Clone, (SortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x0202D780, bool, SortedList_Contains, (SortedList * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x0202D780, bool, SortedList_ContainsKey, (SortedList * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x0202D7A0, bool, SortedList_ContainsValue, (SortedList * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0202D7C0, void, SortedList_CopyTo, (SortedList * __this, Array * array, int32_t arrayIndex, MethodInfo * method));
DO_APP_FUNC(0x0202DA90, KeyValuePairs__Array *, SortedList_ToKeyValuePairsArray, (SortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x0202DDA0, void, SortedList_EnsureCapacity, (SortedList * __this, int32_t min, MethodInfo * method));
DO_APP_FUNC(0x0202DE00, Object *, SortedList_GetByIndex, (SortedList * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0202DF10, IEnumerator *, SortedList_System_Collections_IEnumerable_GetEnumerator, (SortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x0202E080, IDictionaryEnumerator *, SortedList_GetEnumerator, (SortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x0202E1F0, Object *, SortedList_GetKey, (SortedList * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0202E300, IList *, SortedList_GetKeyList, (SortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x0202E450, IList *, SortedList_GetValueList, (SortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x0202E5A0, Object *, SortedList_get_Item, (SortedList * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x0202E600, void, SortedList_set_Item, (SortedList * __this, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0202E790, int32_t, SortedList_IndexOfKey, (SortedList * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x0202E890, int32_t, SortedList_IndexOfValue, (SortedList * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0202E930, void, SortedList_Insert, (SortedList * __this, int32_t index, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0202EAE0, void, SortedList_RemoveAt, (SortedList * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0202EC90, void, SortedList_Remove, (SortedList * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x0202ECD0, SortedList *, SortedList_Synchronized, (SortedList * list, MethodInfo * method));
DO_APP_FUNC(0x0202EEE0, void, SortedList__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0202FE70, void, SortedList_SyncSortedList__ctor, (SortedList_SyncSortedList * __this, SortedList * list, MethodInfo * method));
DO_APP_FUNC(0x0202FF40, int32_t, SortedList_SyncSortedList_get_Count, (SortedList_SyncSortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, Object *, SortedList_SyncSortedList_get_SyncRoot, (SortedList_SyncSortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x02030050, bool, SortedList_SyncSortedList_get_IsReadOnly, (SortedList_SyncSortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x02030080, bool, SortedList_SyncSortedList_get_IsFixedSize, (SortedList_SyncSortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, SortedList_SyncSortedList_get_IsSynchronized, (SortedList_SyncSortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x020300B0, Object *, SortedList_SyncSortedList_get_Item, (SortedList_SyncSortedList * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x020301C0, void, SortedList_SyncSortedList_set_Item, (SortedList_SyncSortedList * __this, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x020302D0, void, SortedList_SyncSortedList_Add, (SortedList_SyncSortedList * __this, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x020303E0, int32_t, SortedList_SyncSortedList_get_Capacity, (SortedList_SyncSortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x020304F0, void, SortedList_SyncSortedList_Clear, (SortedList_SyncSortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x020305E0, Object *, SortedList_SyncSortedList_Clone, (SortedList_SyncSortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x020306F0, bool, SortedList_SyncSortedList_Contains, (SortedList_SyncSortedList * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x02030800, bool, SortedList_SyncSortedList_ContainsKey, (SortedList_SyncSortedList * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x02030910, bool, SortedList_SyncSortedList_ContainsValue, (SortedList_SyncSortedList * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x02030A20, void, SortedList_SyncSortedList_CopyTo, (SortedList_SyncSortedList * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02030B30, Object *, SortedList_SyncSortedList_GetByIndex, (SortedList_SyncSortedList * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02030C40, IDictionaryEnumerator *, SortedList_SyncSortedList_GetEnumerator, (SortedList_SyncSortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x02030D50, Object *, SortedList_SyncSortedList_GetKey, (SortedList_SyncSortedList * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02030E60, IList *, SortedList_SyncSortedList_GetKeyList, (SortedList_SyncSortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x02030F70, IList *, SortedList_SyncSortedList_GetValueList, (SortedList_SyncSortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x02031080, int32_t, SortedList_SyncSortedList_IndexOfKey, (SortedList_SyncSortedList * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x02031250, int32_t, SortedList_SyncSortedList_IndexOfValue, (SortedList_SyncSortedList * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02031360, void, SortedList_SyncSortedList_RemoveAt, (SortedList_SyncSortedList * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02031460, void, SortedList_SyncSortedList_Remove, (SortedList_SyncSortedList * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x02031560, KeyValuePairs__Array *, SortedList_SyncSortedList_ToKeyValuePairsArray, (SortedList_SyncSortedList * __this, MethodInfo * method));
DO_APP_FUNC(0x0202F720, void, SortedList_SortedListEnumerator__ctor, (SortedList_SortedListEnumerator * __this, SortedList * sortedList, int32_t index, int32_t count, int32_t getObjRetType, MethodInfo * method));
DO_APP_FUNC(0x0173F610, Object *, SortedList_SortedListEnumerator_Clone, (SortedList_SortedListEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0202F760, Object *, SortedList_SortedListEnumerator_get_Key, (SortedList_SortedListEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0202F880, bool, SortedList_SortedListEnumerator_MoveNext, (SortedList_SortedListEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0202FA10, DictionaryEntry, SortedList_SortedListEnumerator_get_Entry, (SortedList_SortedListEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0202FB40, Object *, SortedList_SortedListEnumerator_get_Current, (SortedList_SortedListEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0202FC60, Object *, SortedList_SortedListEnumerator_get_Value, (SortedList_SortedListEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0202FD80, void, SortedList_SortedListEnumerator_Reset, (SortedList_SortedListEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, SortedList_KeyList__ctor, (SortedList_KeyList * __this, SortedList * sortedList, MethodInfo * method));
DO_APP_FUNC(0x004F0AC0, int32_t, SortedList_KeyList_get_Count, (SortedList_KeyList * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, SortedList_KeyList_get_IsReadOnly, (SortedList_KeyList * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, SortedList_KeyList_get_IsFixedSize, (SortedList_KeyList * __this, MethodInfo * method));
DO_APP_FUNC(0x017173C0, bool, SortedList_KeyList_get_IsSynchronized, (SortedList_KeyList * __this, MethodInfo * method));
DO_APP_FUNC(0x017173F0, Object *, SortedList_KeyList_get_SyncRoot, (SortedList_KeyList * __this, MethodInfo * method));
DO_APP_FUNC(0x0202EF90, int32_t, SortedList_KeyList_Add, (SortedList_KeyList * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x0202F000, void, SortedList_KeyList_Clear, (SortedList_KeyList * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFFCE0, bool, SortedList_KeyList_Contains, (SortedList_KeyList * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x0202F070, void, SortedList_KeyList_CopyTo, (SortedList_KeyList * __this, Array * array, int32_t arrayIndex, MethodInfo * method));
DO_APP_FUNC(0x0202F190, void, SortedList_KeyList_Insert, (SortedList_KeyList * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0202F200, Object *, SortedList_KeyList_get_Item, (SortedList_KeyList * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0202F230, void, SortedList_KeyList_set_Item, (SortedList_KeyList * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0202F2A0, IEnumerator *, SortedList_KeyList_GetEnumerator, (SortedList_KeyList * __this, MethodInfo * method));
DO_APP_FUNC(0x0202F440, int32_t, SortedList_KeyList_IndexOf, (SortedList_KeyList * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x0202F580, void, SortedList_KeyList_Remove, (SortedList_KeyList * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x0202F5F0, void, SortedList_KeyList_RemoveAt, (SortedList_KeyList * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, SortedList_ValueList__ctor, (SortedList_ValueList * __this, SortedList * sortedList, MethodInfo * method));
DO_APP_FUNC(0x004F0AC0, int32_t, SortedList_ValueList_get_Count, (SortedList_ValueList * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, SortedList_ValueList_get_IsReadOnly, (SortedList_ValueList * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, SortedList_ValueList_get_IsFixedSize, (SortedList_ValueList * __this, MethodInfo * method));
DO_APP_FUNC(0x017173C0, bool, SortedList_ValueList_get_IsSynchronized, (SortedList_ValueList * __this, MethodInfo * method));
DO_APP_FUNC(0x017173F0, Object *, SortedList_ValueList_get_SyncRoot, (SortedList_ValueList * __this, MethodInfo * method));
DO_APP_FUNC(0x02031590, int32_t, SortedList_ValueList_Add, (SortedList_ValueList * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x02031600, void, SortedList_ValueList_Clear, (SortedList_ValueList * __this, MethodInfo * method));
DO_APP_FUNC(0x02031670, bool, SortedList_ValueList_Contains, (SortedList_ValueList * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x020316A0, void, SortedList_ValueList_CopyTo, (SortedList_ValueList * __this, Array * array, int32_t arrayIndex, MethodInfo * method));
DO_APP_FUNC(0x020317C0, void, SortedList_ValueList_Insert, (SortedList_ValueList * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02031830, Object *, SortedList_ValueList_get_Item, (SortedList_ValueList * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02031860, void, SortedList_ValueList_set_Item, (SortedList_ValueList * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x020318D0, IEnumerator *, SortedList_ValueList_GetEnumerator, (SortedList_ValueList * __this, MethodInfo * method));
DO_APP_FUNC(0x02031A70, int32_t, SortedList_ValueList_IndexOf, (SortedList_ValueList * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02031B30, void, SortedList_ValueList_Remove, (SortedList_ValueList * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02031BA0, void, SortedList_ValueList_RemoveAt, (SortedList_ValueList * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0202F660, void, SortedList_SortedListDebugView__ctor, (SortedList_SortedListDebugView * __this, SortedList * sortedList, MethodInfo * method));
DO_APP_FUNC(0x01BDD500, KeyValuePairs__Array *, SortedList_SortedListDebugView_get_Items, (SortedList_SortedListDebugView * __this, MethodInfo * method));
DO_APP_FUNC(0x02031C10, void, Stack__ctor, (Stack * __this, MethodInfo * method));
DO_APP_FUNC(0x02031CB0, void, Stack__ctor_1, (Stack * __this, int32_t initialCapacity, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, Stack_get_Count, (Stack * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Stack_get_IsSynchronized, (Stack * __this, MethodInfo * method));
DO_APP_FUNC(0x02031DA0, Object *, Stack_get_SyncRoot, (Stack * __this, MethodInfo * method));
DO_APP_FUNC(0x02031F00, void, Stack_Clear, (Stack * __this, MethodInfo * method));
DO_APP_FUNC(0x02031F30, Object *, Stack_Clone, (Stack * __this, MethodInfo * method));
DO_APP_FUNC(0x020320C0, void, Stack_CopyTo, (Stack * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x020323B0, IEnumerator *, Stack_GetEnumerator, (Stack * __this, MethodInfo * method));
DO_APP_FUNC(0x02032510, Object *, Stack_Peek, (Stack * __this, MethodInfo * method));
DO_APP_FUNC(0x02032600, Object *, Stack_Pop, (Stack * __this, MethodInfo * method));
DO_APP_FUNC(0x02032730, void, Stack_Push, (Stack * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x02032890, Object__Array *, Stack_ToArray, (Stack * __this, MethodInfo * method));
DO_APP_FUNC(0x02032A90, void, Stack_StackEnumerator__ctor, (Stack_StackEnumerator * __this, Stack * stack, MethodInfo * method));
DO_APP_FUNC(0x0173F610, Object *, Stack_StackEnumerator_Clone, (Stack_StackEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02032AC0, bool, Stack_StackEnumerator_MoveNext, (Stack_StackEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02032C90, Object *, Stack_StackEnumerator_get_Current, (Stack_StackEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02032DA0, void, Stack_StackEnumerator_Reset, (Stack_StackEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x020329D0, void, Stack_StackDebugView__ctor, (Stack_StackDebugView * __this, Stack * stack, MethodInfo * method));
DO_APP_FUNC(0x01DFFC10, Object__Array *, Stack_StackDebugView_get_Items, (Stack_StackDebugView * __this, MethodInfo * method));
DO_APP_FUNC(0x02020E50, void, CDSCollectionETWBCLProvider__ctor, (CDSCollectionETWBCLProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x02020EF0, void, CDSCollectionETWBCLProvider_ConcurrentDictionary_AcquiringAllLocks, (CDSCollectionETWBCLProvider * __this, int32_t numOfBuckets, MethodInfo * method));
DO_APP_FUNC(0x02020F20, void, CDSCollectionETWBCLProvider__cctor, (MethodInfo * method));
DO_APP_FUNC(0x020226F0, String *, KeyValuePair_PairToString, (Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x020225B0, int32_t, IntrospectiveSortUtilities_FloorLog2, (int32_t n, MethodInfo * method));
DO_APP_FUNC(0x020225D0, void, IntrospectiveSortUtilities_ThrowOrIgnoreBadComparer, (Object * comparer, MethodInfo * method));
DO_APP_FUNC(0x02022250, ConditionalWeakTable_2_System_Object_System_Runtime_Serialization_SerializationInfo_ *, DictionaryHashHelpers_get_SerializationInfoTable, (MethodInfo * method));
DO_APP_FUNC(0x020222F0, void, DictionaryHashHelpers__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02022840, bool, NonRandomizedStringEqualityComparer_Equals, (NonRandomizedStringEqualityComparer * __this, String * x, String * y, MethodInfo * method));
DO_APP_FUNC(0x02022880, int32_t, NonRandomizedStringEqualityComparer_GetHashCode, (NonRandomizedStringEqualityComparer * __this, String * obj, MethodInfo * method));
DO_APP_FUNC(0x020228D0, void, NonRandomizedStringEqualityComparer__ctor, (NonRandomizedStringEqualityComparer * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ObjectEqualityComparer__ctor, (ObjectEqualityComparer * __this, MethodInfo * method));
DO_APP_FUNC(0x02022440, int32_t, ObjectEqualityComparer_System_Collections_IEqualityComparer_GetHashCode, (ObjectEqualityComparer * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x02022950, bool, ObjectEqualityComparer_System_Collections_IEqualityComparer_Equals, (ObjectEqualityComparer * __this, Object * x, Object * y, MethodInfo * method));
DO_APP_FUNC(0x02022990, void, ObjectEqualityComparer__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02021DC0, bool, ByteEqualityComparer_Equals, (ByteEqualityComparer * __this, uint8_t x, uint8_t y, MethodInfo * method));
DO_APP_FUNC(0x0052E040, int32_t, ByteEqualityComparer_GetHashCode, (ByteEqualityComparer * __this, uint8_t b, MethodInfo * method));
DO_APP_FUNC(0x02021DD0, int32_t, ByteEqualityComparer_IndexOf, (ByteEqualityComparer * __this, Byte__Array * array, uint8_t value, int32_t startIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02022050, int32_t, ByteEqualityComparer_LastIndexOf, (ByteEqualityComparer * __this, Byte__Array * array, uint8_t value, int32_t startIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x020220B0, bool, ByteEqualityComparer_Equals_1, (ByteEqualityComparer * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x02022170, int32_t, ByteEqualityComparer_GetHashCode_1, (ByteEqualityComparer * __this, MethodInfo * method));
DO_APP_FUNC(0x020221D0, void, ByteEqualityComparer__ctor, (ByteEqualityComparer * __this, MethodInfo * method));
DO_APP_FUNC(0x02022440, int32_t, InternalStringComparer_GetHashCode, (InternalStringComparer * __this, String * obj, MethodInfo * method));
DO_APP_FUNC(0x02022460, bool, InternalStringComparer_Equals, (InternalStringComparer * __this, String * x, String * y, MethodInfo * method));
DO_APP_FUNC(0x02022490, int32_t, InternalStringComparer_IndexOf, (InternalStringComparer * __this, String__Array * array, String * value, int32_t startIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02022530, void, InternalStringComparer__ctor, (InternalStringComparer * __this, MethodInfo * method));
DO_APP_FUNC(0x02022640, void, KeyNotFoundException__ctor, (KeyNotFoundException * __this, MethodInfo * method));
DO_APP_FUNC(0x020226D0, void, KeyNotFoundException__ctor_1, (KeyNotFoundException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, KeyNotFoundException__ctor_2, (KeyNotFoundException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, ConditionalAttribute__ctor, (ConditionalAttribute * __this, String * conditionString, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DebuggerStepThroughAttribute__ctor, (DebuggerStepThroughAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DebuggerHiddenAttribute__ctor, (DebuggerHiddenAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DebuggerNonUserCodeAttribute__ctor, (DebuggerNonUserCodeAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, DebuggableAttribute__ctor, (DebuggableAttribute * __this, DebuggableAttribute_DebuggingModes__Enum modes, MethodInfo * method));
DO_APP_FUNC(0x01741070, void, DebuggerBrowsableAttribute__ctor, (DebuggerBrowsableAttribute * __this, DebuggerBrowsableState__Enum state, MethodInfo * method));
DO_APP_FUNC(0x017411E0, void, DebuggerTypeProxyAttribute__ctor, (DebuggerTypeProxyAttribute * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x01741130, void, DebuggerDisplayAttribute__ctor, (DebuggerDisplayAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, DebuggerDisplayAttribute_set_Name, (DebuggerDisplayAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, DebuggerDisplayAttribute_set_Type, (DebuggerDisplayAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01740F20, bool, Debugger_get_IsAttached, (MethodInfo * method));
DO_APP_FUNC(0x01740FC0, bool, Debugger_IsAttached_internal, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Debugger_Break, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Debugger_Log, (int32_t level, String * category, String * message, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Debugger_NotifyOfCrossThreadDependency, (MethodInfo * method));
DO_APP_FUNC(0x01740FE0, void, Debugger__cctor, (MethodInfo * method));
DO_APP_FUNC(0x017412D0, bool, StackFrame_get_frame_info, (int32_t skip, bool needFileInfo, MethodBase * * method_1, int32_t * iloffset, int32_t * native_offset, String * * file, int32_t * line, int32_t * column, MethodInfo * method));
DO_APP_FUNC(0x017412E0, void, StackFrame__ctor, (StackFrame * __this, MethodInfo * method));
DO_APP_FUNC(0x01741330, void, StackFrame__ctor_1, (StackFrame * __this, int32_t skipFrames, MethodInfo * method));
DO_APP_FUNC(0x01741380, void, StackFrame__ctor_2, (StackFrame * __this, int32_t skipFrames, bool fNeedFileInfo, MethodInfo * method));
DO_APP_FUNC(0x003FC7F0, int32_t, StackFrame_GetFileLineNumber, (StackFrame * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, StackFrame_GetFileName, (StackFrame * __this, MethodInfo * method));
DO_APP_FUNC(0x017413E0, String *, StackFrame_GetSecureFileName, (StackFrame * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, StackFrame_GetILOffset, (StackFrame * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, MethodBase *, StackFrame_GetMethod, (StackFrame * __this, MethodInfo * method));
DO_APP_FUNC(0x00CC59E0, int32_t, StackFrame_GetNativeOffset, (StackFrame * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, int64_t, StackFrame_GetMethodAddress, (StackFrame * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, uint32_t, StackFrame_GetMethodIndex, (StackFrame * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, String *, StackFrame_GetInternalMethodName, (StackFrame * __this, MethodInfo * method));
DO_APP_FUNC(0x017414A0, String *, StackFrame_ToString, (StackFrame * __this, MethodInfo * method));
DO_APP_FUNC(0x01741770, void, StackTrace__ctor, (StackTrace * __this, MethodInfo * method));
DO_APP_FUNC(0x01741780, void, StackTrace__ctor_1, (StackTrace * __this, bool fNeedFileInfo, MethodInfo * method));
DO_APP_FUNC(0x01741790, void, StackTrace__ctor_2, (StackTrace * __this, int32_t skipFrames, bool fNeedFileInfo, MethodInfo * method));
DO_APP_FUNC(0x017417A0, void, StackTrace_init_frames, (StackTrace * __this, int32_t skipFrames, bool fNeedFileInfo, MethodInfo * method));
DO_APP_FUNC(0x01741AE0, StackFrame__Array *, StackTrace_get_trace, (Exception * e, int32_t skipFrames, bool fNeedFileInfo, MethodInfo * method));
DO_APP_FUNC(0x01741AF0, void, StackTrace__ctor_3, (StackTrace * __this, Exception * e, bool fNeedFileInfo, MethodInfo * method));
DO_APP_FUNC(0x01741B10, void, StackTrace__ctor_4, (StackTrace * __this, Exception * e, int32_t skipFrames, bool fNeedFileInfo, MethodInfo * method));
DO_APP_FUNC(0x01741C30, int32_t, StackTrace_get_FrameCount, (StackTrace * __this, MethodInfo * method));
DO_APP_FUNC(0x01741C40, StackFrame *, StackTrace_GetFrame, (StackTrace * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01741CB0, String *, StackTrace_GetAotId, (MethodInfo * method));
DO_APP_FUNC(0x01741DC0, bool, StackTrace_AddFrames, (StackTrace * __this, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x017422E0, void, StackTrace_GetFullNameForStackTrace, (StackTrace * __this, StringBuilder * sb, MethodBase * mi, MethodInfo * method));
DO_APP_FUNC(0x017427E0, String *, StackTrace_ToString, (StackTrace * __this, MethodInfo * method));
DO_APP_FUNC(0x01742A00, String *, StackTrace_ToString_1, (StackTrace * __this, StackTrace_TraceFormat__Enum traceFormat, MethodInfo * method));
DO_APP_FUNC(0x0013DDE0, void, DataCollector_Enable, (DataCollector__Boxed * __this, uint8_t * scratch, int32_t scratchSize, EventSource_EventData * datas, int32_t dataCount, GCHandle * pins, int32_t pinCount, MethodInfo * method));
DO_APP_FUNC(0x0013DE30, void, DataCollector_Disable, (DataCollector__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0013DE40, EventSource_EventData *, DataCollector_Finish, (DataCollector__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0013DE60, void, DataCollector_AddScalar, (DataCollector__Boxed * __this, Void * value, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x0013DE70, void, DataCollector_AddBinary, (DataCollector__Boxed * __this, String * value, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x0013DE80, void, DataCollector_AddBinary_1, (DataCollector__Boxed * __this, Array * value, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x0013DEA0, void, DataCollector_AddArray, (DataCollector__Boxed * __this, Array * value, int32_t length, int32_t itemSize, MethodInfo * method));
DO_APP_FUNC(0x0013DEB0, int32_t, DataCollector_BeginBufferedArray, (DataCollector__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0013DEE0, void, DataCollector_EndBufferedArray, (DataCollector__Boxed * __this, int32_t bookmark, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0013DEF0, void, DataCollector_BeginBuffered, (DataCollector__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0013DF10, void, DataCollector_EndBuffered, (DataCollector__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0013DF60, void, DataCollector_EnsureBuffer, (DataCollector__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0013DF80, void, DataCollector_EnsureBuffer_1, (DataCollector__Boxed * __this, int32_t additionalSize, MethodInfo * method));
DO_APP_FUNC(0x0013DFA0, void, DataCollector_GrowBuffer, (DataCollector__Boxed * __this, int32_t required, MethodInfo * method));
DO_APP_FUNC(0x0013DFB0, void, DataCollector_PinArray, (DataCollector__Boxed * __this, Object * value, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x0013DFC0, void, DataCollector_ScalarsBegin, (DataCollector__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0013DFD0, void, DataCollector_ScalarsEnd, (DataCollector__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, EventDataAttribute_get_Name, (EventDataAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, EventLevel__Enum, EventDataAttribute_get_Level, (EventDataAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x00CC59E0, EventOpcode__Enum, EventDataAttribute_get_Opcode, (EventDataAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, EventKeywords__Enum, EventDataAttribute_get_Keywords, (EventDataAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB970, EventTags__Enum, EventDataAttribute_get_Tags, (EventDataAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, EventFieldTags__Enum, EventFieldAttribute_get_Tags, (EventFieldAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, EventFieldAttribute_get_Name, (EventFieldAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, EventFieldFormat__Enum, EventFieldAttribute_get_Format, (EventFieldAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, EventPayload__ctor, (EventPayload * __this, List_1_System_String_ * payloadNames, List_1_System_Object_ * payloadValues, MethodInfo * method));
DO_APP_FUNC(0x002FA280, ICollection_1_System_String_ *, EventPayload_get_Keys, (EventPayload * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, ICollection_1_System_Object_ *, EventPayload_get_Values, (EventPayload * __this, MethodInfo * method));
DO_APP_FUNC(0x0174C6A0, Object *, EventPayload_get_Item, (EventPayload * __this, String * key, MethodInfo * method));
DO_APP_FUNC(0x0174C8F0, void, EventPayload_set_Item, (EventPayload * __this, String * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0174C940, void, EventPayload_Add, (EventPayload * __this, String * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0174C990, void, EventPayload_Add_1, (EventPayload * __this, KeyValuePair_2_System_String_System_Object_ payloadEntry, MethodInfo * method));
DO_APP_FUNC(0x0174C9E0, void, EventPayload_Clear, (EventPayload * __this, MethodInfo * method));
DO_APP_FUNC(0x0174CA30, bool, EventPayload_Contains, (EventPayload * __this, KeyValuePair_2_System_String_System_Object_ entry, MethodInfo * method));
DO_APP_FUNC(0x0174CAC0, bool, EventPayload_ContainsKey, (EventPayload * __this, String * key, MethodInfo * method));
DO_APP_FUNC(0x0174CCA0, int32_t, EventPayload_get_Count, (EventPayload * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, EventPayload_get_IsReadOnly, (EventPayload * __this, MethodInfo * method));
DO_APP_FUNC(0x0174CD30, IEnumerator_1_KeyValuePair_2_System_String_System_Object_ *, EventPayload_GetEnumerator, (EventPayload * __this, MethodInfo * method));
DO_APP_FUNC(0x0174CE80, IEnumerator *, EventPayload_System_Collections_IEnumerable_GetEnumerator, (EventPayload * __this, MethodInfo * method));
DO_APP_FUNC(0x0174CF10, void, EventPayload_CopyTo, (EventPayload * __this, KeyValuePair_2_System_String_System_Object___Array * payloadEntries, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0174CF60, bool, EventPayload_Remove, (EventPayload * __this, String * key, MethodInfo * method));
DO_APP_FUNC(0x0174CFB0, bool, EventPayload_Remove_1, (EventPayload * __this, KeyValuePair_2_System_String_System_Object_ entry, MethodInfo * method));
DO_APP_FUNC(0x0174D000, bool, EventPayload_TryGetValue, (EventPayload * __this, String * key, Object * * value, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, EventPayload_GetEnumerator_d_17__ctor, (EventPayload_GetEnumerator_d_17 * __this, int32_t __1__state, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, EventPayload_GetEnumerator_d_17_System_IDisposable_Dispose, (EventPayload_GetEnumerator_d_17 * __this, MethodInfo * method));
DO_APP_FUNC(0x0174D240, bool, EventPayload_GetEnumerator_d_17_MoveNext, (EventPayload_GetEnumerator_d_17 * __this, MethodInfo * method));
DO_APP_FUNC(0x00C3DD30, KeyValuePair_2_System_String_System_Object_, EventPayload_GetEnumerator_d_17_System_Collections_Generic_IEnumerator_System_Collections_Generic_KeyValuePair_System_String_System_Object___get_Current, (EventPayload_GetEnumerator_d_17 * __this, MethodInfo * method));
DO_APP_FUNC(0x0174D3A0, void, EventPayload_GetEnumerator_d_17_System_Collections_IEnumerator_Reset, (EventPayload_GetEnumerator_d_17 * __this, MethodInfo * method));
DO_APP_FUNC(0x0174D3F0, Object *, EventPayload_GetEnumerator_d_17_System_Collections_IEnumerator_get_Current, (EventPayload_GetEnumerator_d_17 * __this, MethodInfo * method));
DO_APP_FUNC(0x00154C80, void, EventSourceOptions_set_Level, (EventSourceOptions__Boxed * __this, EventLevel__Enum value, MethodInfo * method));
DO_APP_FUNC(0x00154C90, void, EventSourceOptions_set_Opcode, (EventSourceOptions__Boxed * __this, EventOpcode__Enum value, MethodInfo * method));
DO_APP_FUNC(0x00154CA0, void, EventSourceOptions_set_Keywords, (EventSourceOptions__Boxed * __this, EventKeywords__Enum value, MethodInfo * method));
DO_APP_FUNC(0x019FD900, void, FieldMetadata__ctor, (FieldMetadata * __this, String * name, TraceLoggingDataType__Enum type, EventFieldTags__Enum tags, bool variableCount, MethodInfo * method));
DO_APP_FUNC(0x019FD940, void, FieldMetadata__ctor_1, (FieldMetadata * __this, String * name, TraceLoggingDataType__Enum dataType, EventFieldTags__Enum tags, uint8_t countFlags, uint16_t fixedCount, Byte__Array * custom, MethodInfo * method));
DO_APP_FUNC(0x019FDBB0, void, FieldMetadata_IncrementStructFieldCount, (FieldMetadata * __this, MethodInfo * method));
DO_APP_FUNC(0x019FDC80, void, FieldMetadata_Encode, (FieldMetadata * __this, int32_t * pos, Byte__Array * metadata, MethodInfo * method));
DO_APP_FUNC(0x01A06D30, void, NameInfo_1_ReserveEventIDsBelow, (int32_t eventId, MethodInfo * method));
DO_APP_FUNC(0x01A06E30, void, NameInfo_1__ctor, (NameInfo_1 * __this, String * name, EventTags__Enum tags, int32_t typeMetadataSize, MethodInfo * method));
DO_APP_FUNC(0x01A06FF0, int32_t, NameInfo_1_Compare, (NameInfo_1 * __this, NameInfo_1 * other, MethodInfo * method));
DO_APP_FUNC(0x01A07020, int32_t, NameInfo_1_Compare_1, (NameInfo_1 * __this, KeyValuePair_2_System_String_System_Diagnostics_Tracing_EventTags_ key, MethodInfo * method));
DO_APP_FUNC(0x01A070C0, int32_t, NameInfo_1_Compare_2, (NameInfo_1 * __this, String * otherName, EventTags__Enum otherTags, MethodInfo * method));
DO_APP_FUNC(0x01A071B0, void, NameInfo_1__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0058D710, void, PropertyAnalysis__ctor, (PropertyAnalysis * __this, String * name, MethodInfo_1 * getterInfo, TraceLoggingTypeInfo * typeInfo, EventFieldAttribute * fieldAttribute, MethodInfo * method));
DO_APP_FUNC(0x017473D0, void, BooleanTypeInfo_WriteMetadata, (BooleanTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x017474A0, void, BooleanTypeInfo_WriteData, (BooleanTypeInfo * __this, TraceLoggingDataCollector * collector, bool * value, MethodInfo * method));
DO_APP_FUNC(0x01747580, void, BooleanTypeInfo__ctor, (BooleanTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x017479F0, void, ByteTypeInfo_WriteMetadata, (ByteTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x01747AC0, void, ByteTypeInfo_WriteData, (ByteTypeInfo * __this, TraceLoggingDataCollector * collector, uint8_t * value, MethodInfo * method));
DO_APP_FUNC(0x01747AF0, void, ByteTypeInfo__ctor, (ByteTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01A074A0, void, SByteTypeInfo_WriteMetadata, (SByteTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x01A07570, void, SByteTypeInfo_WriteData, (SByteTypeInfo * __this, TraceLoggingDataCollector * collector, int8_t * value, MethodInfo * method));
DO_APP_FUNC(0x01A075A0, void, SByteTypeInfo__ctor, (SByteTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x019FE680, void, Int16TypeInfo_WriteMetadata, (Int16TypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x019FE750, void, Int16TypeInfo_WriteData, (Int16TypeInfo * __this, TraceLoggingDataCollector * collector, int16_t * value, MethodInfo * method));
DO_APP_FUNC(0x019FE780, void, Int16TypeInfo__ctor, (Int16TypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0E8E0, void, UInt16TypeInfo_WriteMetadata, (UInt16TypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x01A0E9B0, void, UInt16TypeInfo_WriteData, (UInt16TypeInfo * __this, TraceLoggingDataCollector * collector, uint16_t * value, MethodInfo * method));
DO_APP_FUNC(0x01A0E9E0, void, UInt16TypeInfo__ctor, (UInt16TypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x019FEB20, void, Int32TypeInfo_WriteMetadata, (Int32TypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x019FEBF0, void, Int32TypeInfo_WriteData, (Int32TypeInfo * __this, TraceLoggingDataCollector * collector, int32_t * value, MethodInfo * method));
DO_APP_FUNC(0x019FEC20, void, Int32TypeInfo__ctor, (Int32TypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0ED80, void, UInt32TypeInfo_WriteMetadata, (UInt32TypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x01A0EE50, void, UInt32TypeInfo_WriteData, (UInt32TypeInfo * __this, TraceLoggingDataCollector * collector, uint32_t * value, MethodInfo * method));
DO_APP_FUNC(0x01A0EE80, void, UInt32TypeInfo__ctor, (UInt32TypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x019FEFC0, void, Int64TypeInfo_WriteMetadata, (Int64TypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x019FF090, void, Int64TypeInfo_WriteData, (Int64TypeInfo * __this, TraceLoggingDataCollector * collector, int64_t * value, MethodInfo * method));
DO_APP_FUNC(0x019FF0C0, void, Int64TypeInfo__ctor, (Int64TypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0F220, void, UInt64TypeInfo_WriteMetadata, (UInt64TypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x01A0F2F0, void, UInt64TypeInfo_WriteData, (UInt64TypeInfo * __this, TraceLoggingDataCollector * collector, uint64_t * value, MethodInfo * method));
DO_APP_FUNC(0x01A0F320, void, UInt64TypeInfo__ctor, (UInt64TypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x019FF470, void, IntPtrTypeInfo_WriteMetadata, (IntPtrTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x019FF550, void, IntPtrTypeInfo_WriteData, (IntPtrTypeInfo * __this, TraceLoggingDataCollector * collector, void * * value, MethodInfo * method));
DO_APP_FUNC(0x019FF620, void, IntPtrTypeInfo__ctor, (IntPtrTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0F6F0, void, UIntPtrTypeInfo_WriteMetadata, (UIntPtrTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x01A0F7D0, void, UIntPtrTypeInfo_WriteData, (UIntPtrTypeInfo * __this, TraceLoggingDataCollector * collector, void * * value, MethodInfo * method));
DO_APP_FUNC(0x01A0F8C0, void, UIntPtrTypeInfo__ctor, (UIntPtrTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x017496F0, void, DoubleTypeInfo_WriteMetadata, (DoubleTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x017497C0, void, DoubleTypeInfo_WriteData, (DoubleTypeInfo * __this, TraceLoggingDataCollector * collector, double * value, MethodInfo * method));
DO_APP_FUNC(0x017497F0, void, DoubleTypeInfo__ctor, (DoubleTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01A07960, void, SingleTypeInfo_WriteMetadata, (SingleTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x01A07A30, void, SingleTypeInfo_WriteData, (SingleTypeInfo * __this, TraceLoggingDataCollector * collector, float * value, MethodInfo * method));
DO_APP_FUNC(0x01A07B10, void, SingleTypeInfo__ctor, (SingleTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01747E90, void, CharTypeInfo_WriteMetadata, (CharTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x01747F60, void, CharTypeInfo_WriteData, (CharTypeInfo * __this, TraceLoggingDataCollector * collector, uint16_t * value, MethodInfo * method));
DO_APP_FUNC(0x01748040, void, CharTypeInfo__ctor, (CharTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01747160, void, BooleanArrayTypeInfo_WriteMetadata, (BooleanArrayTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x01747230, void, BooleanArrayTypeInfo_WriteData, (BooleanArrayTypeInfo * __this, TraceLoggingDataCollector * collector, Boolean__Array * * value, MethodInfo * method));
DO_APP_FUNC(0x01747350, void, BooleanArrayTypeInfo__ctor, (BooleanArrayTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x017476B0, void, ByteArrayTypeInfo_WriteMetadata, (ByteArrayTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x01747850, void, ByteArrayTypeInfo_WriteData, (ByteArrayTypeInfo * __this, TraceLoggingDataCollector * collector, Byte__Array * * value, MethodInfo * method));
DO_APP_FUNC(0x01747970, void, ByteArrayTypeInfo__ctor, (ByteArrayTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01A07230, void, SByteArrayTypeInfo_WriteMetadata, (SByteArrayTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x01A07300, void, SByteArrayTypeInfo_WriteData, (SByteArrayTypeInfo * __this, TraceLoggingDataCollector * collector, SByte__Array * * value, MethodInfo * method));
DO_APP_FUNC(0x01A07420, void, SByteArrayTypeInfo__ctor, (SByteArrayTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x019FE410, void, Int16ArrayTypeInfo_WriteMetadata, (Int16ArrayTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x019FE4E0, void, Int16ArrayTypeInfo_WriteData, (Int16ArrayTypeInfo * __this, TraceLoggingDataCollector * collector, Int16__Array * * value, MethodInfo * method));
DO_APP_FUNC(0x019FE600, void, Int16ArrayTypeInfo__ctor, (Int16ArrayTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0E670, void, UInt16ArrayTypeInfo_WriteMetadata, (UInt16ArrayTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x01A0E740, void, UInt16ArrayTypeInfo_WriteData, (UInt16ArrayTypeInfo * __this, TraceLoggingDataCollector * collector, UInt16__Array * * value, MethodInfo * method));
DO_APP_FUNC(0x01A0E860, void, UInt16ArrayTypeInfo__ctor, (UInt16ArrayTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x019FE8B0, void, Int32ArrayTypeInfo_WriteMetadata, (Int32ArrayTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x019FE980, void, Int32ArrayTypeInfo_WriteData, (Int32ArrayTypeInfo * __this, TraceLoggingDataCollector * collector, Int32__Array * * value, MethodInfo * method));
DO_APP_FUNC(0x019FEAA0, void, Int32ArrayTypeInfo__ctor, (Int32ArrayTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0EB10, void, UInt32ArrayTypeInfo_WriteMetadata, (UInt32ArrayTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x01A0EBE0, void, UInt32ArrayTypeInfo_WriteData, (UInt32ArrayTypeInfo * __this, TraceLoggingDataCollector * collector, UInt32__Array * * value, MethodInfo * method));
DO_APP_FUNC(0x01A0ED00, void, UInt32ArrayTypeInfo__ctor, (UInt32ArrayTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x019FED50, void, Int64ArrayTypeInfo_WriteMetadata, (Int64ArrayTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x019FEE20, void, Int64ArrayTypeInfo_WriteData, (Int64ArrayTypeInfo * __this, TraceLoggingDataCollector * collector, Int64__Array * * value, MethodInfo * method));
DO_APP_FUNC(0x019FEF40, void, Int64ArrayTypeInfo__ctor, (Int64ArrayTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0EFB0, void, UInt64ArrayTypeInfo_WriteMetadata, (UInt64ArrayTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x01A0F080, void, UInt64ArrayTypeInfo_WriteData, (UInt64ArrayTypeInfo * __this, TraceLoggingDataCollector * collector, UInt64__Array * * value, MethodInfo * method));
DO_APP_FUNC(0x01A0F1A0, void, UInt64ArrayTypeInfo__ctor, (UInt64ArrayTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x019FF1F0, void, IntPtrArrayTypeInfo_WriteMetadata, (IntPtrArrayTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x019FF2D0, void, IntPtrArrayTypeInfo_WriteData, (IntPtrArrayTypeInfo * __this, TraceLoggingDataCollector * collector, IntPtr__Array * * value, MethodInfo * method));
DO_APP_FUNC(0x019FF3F0, void, IntPtrArrayTypeInfo__ctor, (IntPtrArrayTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0F450, void, UIntPtrArrayTypeInfo_WriteMetadata, (UIntPtrArrayTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x01A0F530, void, UIntPtrArrayTypeInfo_WriteData, (UIntPtrArrayTypeInfo * __this, TraceLoggingDataCollector * collector, UIntPtr__Array * * value, MethodInfo * method));
DO_APP_FUNC(0x01A0F670, void, UIntPtrArrayTypeInfo__ctor, (UIntPtrArrayTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01747C20, void, CharArrayTypeInfo_WriteMetadata, (CharArrayTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x01747CF0, void, CharArrayTypeInfo_WriteData, (CharArrayTypeInfo * __this, TraceLoggingDataCollector * collector, Char__Array * * value, MethodInfo * method));
DO_APP_FUNC(0x01747E10, void, CharArrayTypeInfo__ctor, (CharArrayTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01749480, void, DoubleArrayTypeInfo_WriteMetadata, (DoubleArrayTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x01749550, void, DoubleArrayTypeInfo_WriteData, (DoubleArrayTypeInfo * __this, TraceLoggingDataCollector * collector, Double__Array * * value, MethodInfo * method));
DO_APP_FUNC(0x01749670, void, DoubleArrayTypeInfo__ctor, (DoubleArrayTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01A076F0, void, SingleArrayTypeInfo_WriteMetadata, (SingleArrayTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x01A077C0, void, SingleArrayTypeInfo_WriteData, (SingleArrayTypeInfo * __this, TraceLoggingDataCollector * collector, Single__Array * * value, MethodInfo * method));
DO_APP_FUNC(0x01A078E0, void, SingleArrayTypeInfo__ctor, (SingleArrayTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01A08E70, void, StringTypeInfo_WriteMetadata, (StringTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x01A08F40, void, StringTypeInfo_WriteData, (StringTypeInfo * __this, TraceLoggingDataCollector * collector, String * * value, MethodInfo * method));
DO_APP_FUNC(0x01A09060, Object *, StringTypeInfo_GetData, (StringTypeInfo * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01A090E0, void, StringTypeInfo__ctor, (StringTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x019FE130, void, GuidTypeInfo_WriteMetadata, (GuidTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x019FE200, void, GuidTypeInfo_WriteData, (GuidTypeInfo * __this, TraceLoggingDataCollector * collector, Guid * value, MethodInfo * method));
DO_APP_FUNC(0x019FE2E0, void, GuidTypeInfo__ctor, (GuidTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x019FDEC0, void, GuidArrayTypeInfo_WriteMetadata, (GuidArrayTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x019FDF90, void, GuidArrayTypeInfo_WriteData, (GuidArrayTypeInfo * __this, TraceLoggingDataCollector * collector, Guid__Array * * value, MethodInfo * method));
DO_APP_FUNC(0x019FE0B0, void, GuidArrayTypeInfo__ctor, (GuidArrayTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01748F40, void, DateTimeTypeInfo_WriteMetadata, (DateTimeTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x01749010, void, DateTimeTypeInfo_WriteData, (DateTimeTypeInfo * __this, TraceLoggingDataCollector * collector, DateTime * value, MethodInfo * method));
DO_APP_FUNC(0x01749070, void, DateTimeTypeInfo__ctor, (DateTimeTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01748C70, void, DateTimeOffsetTypeInfo_WriteMetadata, (DateTimeOffsetTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x01748D70, void, DateTimeOffsetTypeInfo_WriteData, (DateTimeOffsetTypeInfo * __this, TraceLoggingDataCollector * collector, DateTimeOffset * value, MethodInfo * method));
DO_APP_FUNC(0x01748E10, void, DateTimeOffsetTypeInfo__ctor, (DateTimeOffsetTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01A09160, void, TimeSpanTypeInfo_WriteMetadata, (TimeSpanTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x019FF090, void, TimeSpanTypeInfo_WriteData, (TimeSpanTypeInfo * __this, TraceLoggingDataCollector * collector, TimeSpan * value, MethodInfo * method));
DO_APP_FUNC(0x01A09230, void, TimeSpanTypeInfo__ctor, (TimeSpanTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x017491A0, void, DecimalTypeInfo_WriteMetadata, (DecimalTypeInfo * __this, TraceLoggingMetadataCollector * collector, String * name, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x01749270, void, DecimalTypeInfo_WriteData, (DecimalTypeInfo * __this, TraceLoggingDataCollector * collector, Decimal * value, MethodInfo * method));
DO_APP_FUNC(0x01749350, void, DecimalTypeInfo__ctor, (DecimalTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01A07C40, Byte__Array *, Statics_MetadataForString, (String * name, int32_t prefixSize, int32_t suffixSize, int32_t additionalSize, MethodInfo * method));
DO_APP_FUNC(0x01A07E50, void, Statics_EncodeTags, (int32_t tags, int32_t * pos, Byte__Array * metadata, MethodInfo * method));
DO_APP_FUNC(0x01A07EC0, uint8_t, Statics_Combine, (int32_t settingValue, uint8_t defaultValue, MethodInfo * method));
DO_APP_FUNC(0x01A07ED0, int32_t, Statics_Combine_1, (int32_t settingValue1, int32_t settingValue2, MethodInfo * method));
DO_APP_FUNC(0x01A07EE0, void, Statics_CheckName, (String * name, MethodInfo * method));
DO_APP_FUNC(0x01A07FB0, bool, Statics_ShouldOverrideFieldName, (String * fieldName, MethodInfo * method));
DO_APP_FUNC(0x01A07FF0, TraceLoggingDataType__Enum, Statics_MakeDataType, (TraceLoggingDataType__Enum baseType, EventFieldFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x01A08000, TraceLoggingDataType__Enum, Statics_Format8, (EventFieldFormat__Enum format, TraceLoggingDataType__Enum native, MethodInfo * method));
DO_APP_FUNC(0x01A080F0, TraceLoggingDataType__Enum, Statics_Format16, (EventFieldFormat__Enum format, TraceLoggingDataType__Enum native, MethodInfo * method));
DO_APP_FUNC(0x01A081D0, TraceLoggingDataType__Enum, Statics_Format32, (EventFieldFormat__Enum format, TraceLoggingDataType__Enum native, MethodInfo * method));
DO_APP_FUNC(0x01A082D0, TraceLoggingDataType__Enum, Statics_Format64, (EventFieldFormat__Enum format, TraceLoggingDataType__Enum native, MethodInfo * method));
DO_APP_FUNC(0x01A08390, TraceLoggingDataType__Enum, Statics_FormatPtr, (EventFieldFormat__Enum format, TraceLoggingDataType__Enum native, MethodInfo * method));
DO_APP_FUNC(0x01A08480, Object *, Statics_CreateInstance, (Type * type, Object__Array * parameters, MethodInfo * method));
DO_APP_FUNC(0x013DD740, bool, Statics_IsValueType, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x01A084B0, bool, Statics_IsEnum, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x013DD610, IEnumerable_1_System_Reflection_PropertyInfo_ *, Statics_GetProperties, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x01A084E0, MethodInfo_1 *, Statics_GetGetMethod, (PropertyInfo_1 * propInfo, MethodInfo * method));
DO_APP_FUNC(0x01A08510, MethodInfo_1 *, Statics_GetDeclaredStaticMethod, (Type * declaringType, String * name, MethodInfo * method));
DO_APP_FUNC(0x01A08530, bool, Statics_HasCustomAttribute, (PropertyInfo_1 * propInfo, Type * attributeType, MethodInfo * method));
DO_APP_FUNC(0x018507D0, Type__Array *, Statics_GetGenericArguments, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x01A08570, Type *, Statics_FindEnumerableElementType, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x01A088D0, bool, Statics_IsGenericMatch, (Type * type, Object * openType, MethodInfo * method));
DO_APP_FUNC(0x013DCFD0, Delegate *, Statics_CreateDelegate, (Type * delegateType, MethodInfo_1 * methodInfo, MethodInfo * method));
DO_APP_FUNC(0x01A08A10, TraceLoggingTypeInfo *, Statics_GetTypeInfoInstance, (Type * dataType, List_1_System_Type_ * recursionCheck, MethodInfo * method));
DO_APP_FUNC(0x01A08DC0, void, Statics__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TraceLoggingDataCollector__ctor, (TraceLoggingDataCollector * __this, MethodInfo * method));
DO_APP_FUNC(0x01A09790, int32_t, TraceLoggingDataCollector_BeginBufferedArray, (TraceLoggingDataCollector * __this, MethodInfo * method));
DO_APP_FUNC(0x01A09860, void, TraceLoggingDataCollector_EndBufferedArray, (TraceLoggingDataCollector * __this, int32_t bookmark, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01A09930, void, TraceLoggingDataCollector_AddScalar, (TraceLoggingDataCollector * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01A09A00, void, TraceLoggingDataCollector_AddScalar_1, (TraceLoggingDataCollector * __this, int8_t value, MethodInfo * method));
DO_APP_FUNC(0x01A09AD0, void, TraceLoggingDataCollector_AddScalar_2, (TraceLoggingDataCollector * __this, uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x01A09BA0, void, TraceLoggingDataCollector_AddScalar_3, (TraceLoggingDataCollector * __this, int16_t value, MethodInfo * method));
DO_APP_FUNC(0x01A09C70, void, TraceLoggingDataCollector_AddScalar_4, (TraceLoggingDataCollector * __this, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x01A09D40, void, TraceLoggingDataCollector_AddScalar_5, (TraceLoggingDataCollector * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01A09E10, void, TraceLoggingDataCollector_AddScalar_6, (TraceLoggingDataCollector * __this, uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x01A09EE0, void, TraceLoggingDataCollector_AddScalar_7, (TraceLoggingDataCollector * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01A09FA0, void, TraceLoggingDataCollector_AddScalar_8, (TraceLoggingDataCollector * __this, uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x01A0A060, void, TraceLoggingDataCollector_AddScalar_9, (TraceLoggingDataCollector * __this, void * value, MethodInfo * method));
DO_APP_FUNC(0x01A0A120, void, TraceLoggingDataCollector_AddScalar_10, (TraceLoggingDataCollector * __this, void * value, MethodInfo * method));
DO_APP_FUNC(0x01A0A200, void, TraceLoggingDataCollector_AddScalar_11, (TraceLoggingDataCollector * __this, float value, MethodInfo * method));
DO_APP_FUNC(0x01A0A2D0, void, TraceLoggingDataCollector_AddScalar_12, (TraceLoggingDataCollector * __this, double value, MethodInfo * method));
DO_APP_FUNC(0x01A0A3A0, void, TraceLoggingDataCollector_AddScalar_13, (TraceLoggingDataCollector * __this, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x01A0A470, void, TraceLoggingDataCollector_AddScalar_14, (TraceLoggingDataCollector * __this, Guid value, MethodInfo * method));
DO_APP_FUNC(0x01A0A540, void, TraceLoggingDataCollector_AddBinary, (TraceLoggingDataCollector * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01A0A650, void, TraceLoggingDataCollector_AddBinary_1, (TraceLoggingDataCollector * __this, Byte__Array * value, MethodInfo * method));
DO_APP_FUNC(0x01A0A760, void, TraceLoggingDataCollector_AddArray, (TraceLoggingDataCollector * __this, Boolean__Array * value, MethodInfo * method));
DO_APP_FUNC(0x01A0A870, void, TraceLoggingDataCollector_AddArray_1, (TraceLoggingDataCollector * __this, SByte__Array * value, MethodInfo * method));
DO_APP_FUNC(0x01A0A980, void, TraceLoggingDataCollector_AddArray_2, (TraceLoggingDataCollector * __this, Int16__Array * value, MethodInfo * method));
DO_APP_FUNC(0x01A0AA90, void, TraceLoggingDataCollector_AddArray_3, (TraceLoggingDataCollector * __this, UInt16__Array * value, MethodInfo * method));
DO_APP_FUNC(0x01A0ABA0, void, TraceLoggingDataCollector_AddArray_4, (TraceLoggingDataCollector * __this, Int32__Array * value, MethodInfo * method));
DO_APP_FUNC(0x01A0ACB0, void, TraceLoggingDataCollector_AddArray_5, (TraceLoggingDataCollector * __this, UInt32__Array * value, MethodInfo * method));
DO_APP_FUNC(0x01A0ADC0, void, TraceLoggingDataCollector_AddArray_6, (TraceLoggingDataCollector * __this, Int64__Array * value, MethodInfo * method));
DO_APP_FUNC(0x01A0AED0, void, TraceLoggingDataCollector_AddArray_7, (TraceLoggingDataCollector * __this, UInt64__Array * value, MethodInfo * method));
DO_APP_FUNC(0x01A0AFE0, void, TraceLoggingDataCollector_AddArray_8, (TraceLoggingDataCollector * __this, IntPtr__Array * value, MethodInfo * method));
DO_APP_FUNC(0x01A0B0F0, void, TraceLoggingDataCollector_AddArray_9, (TraceLoggingDataCollector * __this, UIntPtr__Array * value, MethodInfo * method));
DO_APP_FUNC(0x01A0B230, void, TraceLoggingDataCollector_AddArray_10, (TraceLoggingDataCollector * __this, Single__Array * value, MethodInfo * method));
DO_APP_FUNC(0x01A0B340, void, TraceLoggingDataCollector_AddArray_11, (TraceLoggingDataCollector * __this, Double__Array * value, MethodInfo * method));
DO_APP_FUNC(0x01A0B450, void, TraceLoggingDataCollector_AddArray_12, (TraceLoggingDataCollector * __this, Char__Array * value, MethodInfo * method));
DO_APP_FUNC(0x01A0B560, void, TraceLoggingDataCollector_AddArray_13, (TraceLoggingDataCollector * __this, Guid__Array * value, MethodInfo * method));
DO_APP_FUNC(0x01A0B670, void, TraceLoggingDataCollector__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01751690, void, EventSource_WriteMultiMerge, (EventSource * __this, String * eventName, EventSourceOptions * options, TraceLoggingEventTypes * eventTypes, Guid * activityID, Guid * childActivityID, Object__Array * values, MethodInfo * method));
DO_APP_FUNC(0x01751720, void, EventSource_WriteMultiMergeInner, (EventSource * __this, String * eventName, EventSourceOptions * options, TraceLoggingEventTypes * eventTypes, Guid * activityID, Guid * childActivityID, Object__Array * values, MethodInfo * method));
DO_APP_FUNC(0x01751D50, void, EventSource_WriteMultiMerge_1, (EventSource * __this, String * eventName, EventSourceOptions * options, TraceLoggingEventTypes * eventTypes, Guid * activityID, Guid * childActivityID, EventSource_EventData * data, MethodInfo * method));
DO_APP_FUNC(0x01752200, void, EventSource_WriteCleanup, (EventSource * __this, GCHandle * pPins, int32_t cPins, MethodInfo * method));
DO_APP_FUNC(0x01752300, void, EventSource_InitializeProviderMetadata, (EventSource * __this, MethodInfo * method));
DO_APP_FUNC(0x01752AA0, int32_t, EventSource_AddValueToMetaData, (List_1_System_Byte_ * metaData, String * value, MethodInfo * method));
DO_APP_FUNC(0x01752E40, int32_t, EventSource_HexDigit, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x01752F90, NameInfo_1 *, EventSource_UpdateDescriptor, (EventSource * __this, String * name, TraceLoggingEventTypes * eventInfo, EventSourceOptions * options, EventDescriptor * descriptor, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, EventSource_get_Name, (EventSource * __this, MethodInfo * method));
DO_APP_FUNC(0x017530F0, Guid, EventSource_get_Guid, (EventSource * __this, MethodInfo * method));
DO_APP_FUNC(0x006142D0, bool, EventSource_IsEnabled, (EventSource * __this, MethodInfo * method));
DO_APP_FUNC(0x01753100, bool, EventSource_IsEnabled_1, (EventSource * __this, EventLevel__Enum level, EventKeywords__Enum keywords, MethodInfo * method));
DO_APP_FUNC(0x01753100, bool, EventSource_IsEnabled_2, (EventSource * __this, EventLevel__Enum level, EventKeywords__Enum keywords, EventChannel__Enum channel, MethodInfo * method));
DO_APP_FUNC(0x01753130, Guid, EventSource_GetGuid, (Type * eventSourceType, MethodInfo * method));
DO_APP_FUNC(0x01753480, String *, EventSource_GetName, (Type * eventSourceType, MethodInfo * method));
DO_APP_FUNC(0x01753520, void, EventSource_SetCurrentThreadActivityId, (Guid activityId, MethodInfo * method));
DO_APP_FUNC(0x017538F0, Guid, EventSource_get_CurrentThreadActivityId, (MethodInfo * method));
DO_APP_FUNC(0x017539A0, Guid, EventSource_get_InternalCurrentThreadActivityId, (MethodInfo * method));
DO_APP_FUNC(0x01753AE0, Guid, EventSource_get_FallbackActivityId, (MethodInfo * method));
DO_APP_FUNC(0x01753BD0, String *, EventSource_ToString, (EventSource * __this, MethodInfo * method));
DO_APP_FUNC(0x01753D40, void, EventSource__ctor, (EventSource * __this, MethodInfo * method));
DO_APP_FUNC(0x01753D50, void, EventSource__ctor_1, (EventSource * __this, EventSourceSettings__Enum settings, MethodInfo * method));
DO_APP_FUNC(0x01753D60, void, EventSource__ctor_2, (EventSource * __this, EventSourceSettings__Enum settings, String__Array * traits, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, EventSource_OnEventCommand, (EventSource * __this, EventCommandEventArgs * command, MethodInfo * method));
DO_APP_FUNC(0x01753FA0, void, EventSource_WriteEvent, (EventSource * __this, int32_t eventId, MethodInfo * method));
DO_APP_FUNC(0x01753FC0, void, EventSource_WriteEvent_1, (EventSource * __this, int32_t eventId, int32_t arg1, MethodInfo * method));
DO_APP_FUNC(0x01754090, void, EventSource_WriteEvent_2, (EventSource * __this, int32_t eventId, int64_t arg1, MethodInfo * method));
DO_APP_FUNC(0x01754160, void, EventSource_WriteEvent_3, (EventSource * __this, int32_t eventId, String * arg1, MethodInfo * method));
DO_APP_FUNC(0x01754260, void, EventSource_WriteEvent_4, (EventSource * __this, int32_t eventId, String * arg1, String * arg2, MethodInfo * method));
DO_APP_FUNC(0x017543A0, void, EventSource_WriteEvent_5, (EventSource * __this, int32_t eventId, String * arg1, String * arg2, String * arg3, MethodInfo * method));
DO_APP_FUNC(0x01754520, void, EventSource_WriteEvent_6, (EventSource * __this, int32_t eventId, int64_t arg1, String * arg2, MethodInfo * method));
DO_APP_FUNC(0x01754630, void, EventSource_WriteEventCore, (EventSource * __this, int32_t eventId, int32_t eventDataCount, EventSource_EventData * data, MethodInfo * method));
DO_APP_FUNC(0x01754660, void, EventSource_WriteEventWithRelatedActivityIdCore, (EventSource * __this, int32_t eventId, Guid * relatedActivityId, int32_t eventDataCount, EventSource_EventData * data, MethodInfo * method));
DO_APP_FUNC(0x01755350, void, EventSource_WriteEvent_7, (EventSource * __this, int32_t eventId, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x01755370, void, EventSource_Dispose, (EventSource * __this, MethodInfo * method));
DO_APP_FUNC(0x01755420, void, EventSource_Dispose_1, (EventSource * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x017555C0, void, EventSource_Finalize, (EventSource * __this, MethodInfo * method));
DO_APP_FUNC(0x01755640, void, EventSource_WriteStringToListener, (EventSource * __this, EventListener * listener, String * msg, SessionMask m, MethodInfo * method));
DO_APP_FUNC(0x017559C0, void, EventSource_WriteEventRaw, (EventSource * __this, String * eventName, EventDescriptor * eventDescriptor, Guid * activityID, Guid * relatedActivityID, int32_t dataCount, void * data, MethodInfo * method));
DO_APP_FUNC(0x01755B00, void, EventSource_Initialize, (EventSource * __this, Guid eventSourceGuid, String * eventSourceName, String__Array * traits, MethodInfo * method));
DO_APP_FUNC(0x01756200, String *, EventSource_GetName_1, (Type * eventSourceType, EventManifestOptions__Enum flags, MethodInfo * method));
DO_APP_FUNC(0x01756390, Guid, EventSource_GenerateGuidFromName, (String * name, MethodInfo * method));
DO_APP_FUNC(0x017565F0, Object *, EventSource_DecodeObject, (EventSource * __this, int32_t eventId, int32_t parameterId, EventSource_EventData * * data, MethodInfo * method));
DO_APP_FUNC(0x01756DF0, EventDispatcher *, EventSource_GetDispatcher, (EventSource * __this, EventListener * listener, MethodInfo * method));
DO_APP_FUNC(0x01756E20, void, EventSource_WriteEventVarargs, (EventSource * __this, int32_t eventId, Guid * childActivityID, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x01757C10, Object__Array *, EventSource_SerializeEventArgs, (EventSource * __this, int32_t eventId, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x01757FC0, void, EventSource_LogEventArgsMismatches, (EventSource * __this, ParameterInfo_1__Array * infos, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x01758210, int32_t, EventSource_GetParamLengthIncludingByteArray, (EventSource * __this, ParameterInfo_1__Array * parameters, MethodInfo * method));
DO_APP_FUNC(0x01758350, void, EventSource_WriteToAllListeners, (EventSource * __this, int32_t eventId, Guid * childActivityID, int32_t eventDataCount, EventSource_EventData * data, MethodInfo * method));
DO_APP_FUNC(0x01758800, void, EventSource_WriteToAllListeners_1, (EventSource * __this, int32_t eventId, Guid * childActivityID, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x01758B00, void, EventSource_DispatchToAllListeners, (EventSource * __this, int32_t eventId, Guid * childActivityID, EventWrittenEventArgs * eventCallbackArgs, MethodInfo * method));
DO_APP_FUNC(0x01758D80, void, EventSource_WriteEventString, (EventSource * __this, EventLevel__Enum level, int64_t keywords, String * msgString, MethodInfo * method));
DO_APP_FUNC(0x017594A0, void, EventSource_WriteStringToAllListeners, (EventSource * __this, String * eventName, String * msg, MethodInfo * method));
DO_APP_FUNC(0x01759A50, SessionMask, EventSource_GetEtwSessionMask, (EventSource * __this, int32_t eventId, Guid * childActivityID, MethodInfo * method));
DO_APP_FUNC(0x01759DA0, bool, EventSource_IsEnabledByDefault, (EventSource * __this, int32_t eventNum, bool enable, EventLevel__Enum currentLevel, EventKeywords__Enum currentMatchAnyKeyword, MethodInfo * method));
DO_APP_FUNC(0x01759E60, bool, EventSource_IsEnabledCommon, (EventSource * __this, bool enabled, EventLevel__Enum currentLevel, EventKeywords__Enum currentMatchAnyKeyword, EventLevel__Enum eventLevel, EventKeywords__Enum eventKeywords, EventChannel__Enum eventChannel, MethodInfo * method));
DO_APP_FUNC(0x01759E90, void, EventSource_ThrowEventSourceException, (EventSource * __this, String * eventName, Exception * innerEx, MethodInfo * method));
DO_APP_FUNC(0x0175A520, void, EventSource_ValidateEventOpcodeForTransfer, (EventSource * __this, EventSource_EventMetadata * eventData, String * eventName, MethodInfo * method));
DO_APP_FUNC(0x0175A550, EventOpcode__Enum, EventSource_GetOpcodeWithDefault, (EventOpcode__Enum opcode, String * eventName, MethodInfo * method));
DO_APP_FUNC(0x0175A630, void, EventSource_SendCommand, (EventSource * __this, EventListener * listener, int32_t perEventSourceSessionId, int32_t etwSessionId, EventCommand__Enum command, bool enable, EventLevel__Enum level, EventKeywords__Enum matchAnyKeyword, IDictionary_2_System_String_System_String_ * commandArguments, MethodInfo * method));
DO_APP_FUNC(0x0175A970, void, EventSource_DoCommand, (EventSource * __this, EventCommandEventArgs * commandArgs, MethodInfo * method));
DO_APP_FUNC(0x0175B580, void, EventSource_UpdateEtwSession, (EventSource * __this, int32_t sessionIdBit, int32_t etwSessionId, bool bEnable, String * activityFilters, bool participateInSampling, MethodInfo * method));
DO_APP_FUNC(0x0175B9F0, bool, EventSource_ParseCommandArgs, (IDictionary_2_System_String_System_String_ * commandArguments, bool * participateInSampling, String * * activityFilters, int32_t * sessionIdBit, MethodInfo * method));
DO_APP_FUNC(0x0175BC90, void, EventSource_UpdateKwdTriggers, (EventSource * __this, bool enable, MethodInfo * method));
DO_APP_FUNC(0x0175BD60, bool, EventSource_EnableEventForDispatcher, (EventSource * __this, EventDispatcher * dispatcher, int32_t eventId, bool value, MethodInfo * method));
DO_APP_FUNC(0x0175BE70, bool, EventSource_AnyEventEnabled, (EventSource * __this, MethodInfo * method));
DO_APP_FUNC(0x0175BF20, bool, EventSource_get_IsDisposed, (EventSource * __this, MethodInfo * method));
DO_APP_FUNC(0x0175BF60, void, EventSource_EnsureDescriptorsInitialized, (EventSource * __this, MethodInfo * method));
DO_APP_FUNC(0x0175C390, bool, EventSource_SendManifest, (EventSource * __this, Byte__Array * rawManifest, MethodInfo * method));
DO_APP_FUNC(0x0175C6B0, Attribute *, EventSource_GetCustomAttributeHelper, (MemberInfo_1 * member, Type * attributeType, EventManifestOptions__Enum flags, MethodInfo * method));
DO_APP_FUNC(0x0175CDF0, bool, EventSource_AttributeTypeNamesMatch, (Type * attributeType, Type * reflectedAttributeType, MethodInfo * method));
DO_APP_FUNC(0x0175D0B0, Type *, EventSource_GetEventSourceBaseType, (Type * eventSourceType, bool allowEventSourceOverride, bool reflectionOnly, MethodInfo * method));
DO_APP_FUNC(0x0175D320, Byte__Array *, EventSource_CreateManifestAndDescriptors, (Type * eventSourceType, String * eventSourceDllName, EventSource * source, EventManifestOptions__Enum flags, MethodInfo * method));
DO_APP_FUNC(0x0175ED10, bool, EventSource_RemoveFirstArgIfRelatedActivityId, (ParameterInfo_1__Array * * args, MethodInfo * method));
DO_APP_FUNC(0x0175EFE0, void, EventSource_AddProviderEnumKind, (ManifestBuilder * manifest, FieldInfo_1 * staticField, String * providerEnumKind, MethodInfo * method));
DO_APP_FUNC(0x0175F680, void, EventSource_AddEventDescriptor, (EventSource_EventMetadata__Array * * eventData, String * eventName, EventAttribute * eventAttribute, ParameterInfo_1__Array * eventParameters, bool hasRelatedActivityID, MethodInfo * method));
DO_APP_FUNC(0x0175F9D0, void, EventSource_TrimEventDescriptors, (EventSource_EventMetadata__Array * * eventData, MethodInfo * method));
DO_APP_FUNC(0x0175FAE0, void, EventSource_AddListener, (EventSource * __this, EventListener * listener, MethodInfo * method));
DO_APP_FUNC(0x0175FDB0, void, EventSource_DebugCheckEvent, (Dictionary_2_System_String_System_String_ * * eventsByName, EventSource_EventMetadata__Array * eventData, MethodInfo_1 * method_1, EventAttribute * eventAttribute, ManifestBuilder * manifest, EventManifestOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x01760730, int32_t, EventSource_GetHelperCallFirstArg, (MethodInfo_1 * method_1, MethodInfo * method));
DO_APP_FUNC(0x01760A00, void, EventSource_ReportOutOfBandMessage, (EventSource * __this, String * msg, bool flush, MethodInfo * method));
DO_APP_FUNC(0x01760B30, EventSourceSettings__Enum, EventSource_ValidateSettings, (EventSource * __this, EventSourceSettings__Enum settings, MethodInfo * method));
DO_APP_FUNC(0x01760C10, bool, EventSource_get_ThrowOnEventWriteErrors, (EventSource * __this, MethodInfo * method));
DO_APP_FUNC(0x01760C20, bool, EventSource_get_SelfDescribingEvents, (EventSource * __this, MethodInfo * method));
DO_APP_FUNC(0x01760C30, void, EventSource_ReportActivitySamplingInfo, (EventSource * __this, EventListener * listener, SessionMask sessions, MethodInfo * method));
DO_APP_FUNC(0x017610A0, void, EventSource__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00107C00, void *, EventSource_EventData_get_DataPointer, (EventSource_EventData__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00154BF0, void, EventSource_EventData_set_DataPointer, (EventSource_EventData__Boxed * __this, void * value, MethodInfo * method));
DO_APP_FUNC(0x00127510, void, EventSource_EventData_set_Size, (EventSource_EventData__Boxed * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x00154C00, void, EventSource_EventData_SetMetadata, (EventSource_EventData__Boxed * __this, uint8_t * pointer, int32_t size, int32_t reserved, MethodInfo * method));
DO_APP_FUNC(0x00154C30, void, EventSource_Sha1ForNonSecretPurposes_Start, (EventSource_Sha1ForNonSecretPurposes__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00154C40, void, EventSource_Sha1ForNonSecretPurposes_Append, (EventSource_Sha1ForNonSecretPurposes__Boxed * __this, uint8_t input, MethodInfo * method));
DO_APP_FUNC(0x00154C50, void, EventSource_Sha1ForNonSecretPurposes_Append_1, (EventSource_Sha1ForNonSecretPurposes__Boxed * __this, Byte__Array * input, MethodInfo * method));
DO_APP_FUNC(0x00154C60, void, EventSource_Sha1ForNonSecretPurposes_Finish, (EventSource_Sha1ForNonSecretPurposes__Boxed * __this, Byte__Array * output, MethodInfo * method));
DO_APP_FUNC(0x00154C70, void, EventSource_Sha1ForNonSecretPurposes_Drain, (EventSource_Sha1ForNonSecretPurposes__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x019FD330, uint32_t, EventSource_Sha1ForNonSecretPurposes_Rol1, (uint32_t input, MethodInfo * method));
DO_APP_FUNC(0x019FD340, uint32_t, EventSource_Sha1ForNonSecretPurposes_Rol5, (uint32_t input, MethodInfo * method));
DO_APP_FUNC(0x019FD350, uint32_t, EventSource_Sha1ForNonSecretPurposes_Rol30, (uint32_t input, MethodInfo * method));
DO_APP_FUNC(0x019FC480, void, EventSource_OverideEventProvider__ctor, (EventSource_OverideEventProvider * __this, EventSource * eventSource, MethodInfo * method));
DO_APP_FUNC(0x019FC530, void, EventSource_OverideEventProvider_OnControllerCommand, (EventSource_OverideEventProvider * __this, ControllerCommand__Enum command, IDictionary_2_System_String_System_String_ * arguments, int32_t perEventSourceSessionId, int32_t etwSessionId, MethodInfo * method));
DO_APP_FUNC(0x01A0B7B0, void, TraceLoggingEventTypes__ctor, (TraceLoggingEventTypes * __this, String * name, EventTags__Enum tags, Type__Array * types, MethodInfo * method));
DO_APP_FUNC(0x01A0B800, void, TraceLoggingEventTypes__ctor_1, (TraceLoggingEventTypes * __this, String * name, EventTags__Enum tags, ParameterInfo_1__Array * paramInfos, MethodInfo * method));
DO_APP_FUNC(0x01A0BBA0, void, TraceLoggingEventTypes__ctor_2, (TraceLoggingEventTypes * __this, EventTags__Enum tags, String * defaultName, TraceLoggingTypeInfo__Array * typeInfos, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, TraceLoggingEventTypes_get_Name, (TraceLoggingEventTypes * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, EventTags__Enum, TraceLoggingEventTypes_get_Tags, (TraceLoggingEventTypes * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0BE80, NameInfo_1 *, TraceLoggingEventTypes_GetNameInfo, (TraceLoggingEventTypes * __this, String * name, EventTags__Enum tags, MethodInfo * method));
DO_APP_FUNC(0x01A0C050, TraceLoggingTypeInfo__Array *, TraceLoggingEventTypes_MakeArray, (TraceLoggingEventTypes * __this, ParameterInfo_1__Array * paramInfos, MethodInfo * method));
DO_APP_FUNC(0x01A0C2C0, TraceLoggingTypeInfo__Array *, TraceLoggingEventTypes_MakeArray_1, (Type__Array * types, MethodInfo * method));
DO_APP_FUNC(0x01A0C500, void, TraceLoggingMetadataCollector__ctor, (TraceLoggingMetadataCollector * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0C770, void, TraceLoggingMetadataCollector__ctor_1, (TraceLoggingMetadataCollector * __this, TraceLoggingMetadataCollector * other, FieldMetadata * group, MethodInfo * method));
DO_APP_FUNC(0x00529E80, EventFieldTags__Enum, TraceLoggingMetadataCollector_get_Tags, (TraceLoggingMetadataCollector * __this, MethodInfo * method));
DO_APP_FUNC(0x00529E90, void, TraceLoggingMetadataCollector_set_Tags, (TraceLoggingMetadataCollector * __this, EventFieldTags__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01A0C7A0, int32_t, TraceLoggingMetadataCollector_get_ScratchSize, (TraceLoggingMetadataCollector * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0C7C0, int32_t, TraceLoggingMetadataCollector_get_DataCount, (TraceLoggingMetadataCollector * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0C7E0, int32_t, TraceLoggingMetadataCollector_get_PinCount, (TraceLoggingMetadataCollector * __this, MethodInfo * method));
DO_APP_FUNC(0x006CA2A0, bool, TraceLoggingMetadataCollector_get_BeginningBufferedArray, (TraceLoggingMetadataCollector * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0C800, TraceLoggingMetadataCollector *, TraceLoggingMetadataCollector_AddGroup, (TraceLoggingMetadataCollector * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01A0CA90, void, TraceLoggingMetadataCollector_AddScalar, (TraceLoggingMetadataCollector * __this, String * name, TraceLoggingDataType__Enum type, MethodInfo * method));
DO_APP_FUNC(0x01A0CD20, void, TraceLoggingMetadataCollector_AddBinary, (TraceLoggingMetadataCollector * __this, String * name, TraceLoggingDataType__Enum type, MethodInfo * method));
DO_APP_FUNC(0x01A0CF50, void, TraceLoggingMetadataCollector_AddArray, (TraceLoggingMetadataCollector * __this, String * name, TraceLoggingDataType__Enum type, MethodInfo * method));
DO_APP_FUNC(0x01A0D200, void, TraceLoggingMetadataCollector_BeginBufferedArray, (TraceLoggingMetadataCollector * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0D2F0, void, TraceLoggingMetadataCollector_EndBufferedArray, (TraceLoggingMetadataCollector * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0D3D0, Byte__Array *, TraceLoggingMetadataCollector_GetMetadata, (TraceLoggingMetadataCollector * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0D4A0, void, TraceLoggingMetadataCollector_AddField, (TraceLoggingMetadataCollector * __this, FieldMetadata * fieldMetadata, MethodInfo * method));
DO_APP_FUNC(0x01A0D610, void, TraceLoggingMetadataCollector_Impl_AddScalar, (TraceLoggingMetadataCollector_Impl * __this, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01A0D740, void, TraceLoggingMetadataCollector_Impl_AddNonscalar, (TraceLoggingMetadataCollector_Impl * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0D850, void, TraceLoggingMetadataCollector_Impl_BeginBuffered, (TraceLoggingMetadataCollector_Impl * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0D880, void, TraceLoggingMetadataCollector_Impl_EndBuffered, (TraceLoggingMetadataCollector_Impl * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0D890, int32_t, TraceLoggingMetadataCollector_Impl_Encode, (TraceLoggingMetadataCollector_Impl * __this, Byte__Array * metadata, MethodInfo * method));
DO_APP_FUNC(0x01A0D9F0, void, TraceLoggingMetadataCollector_Impl__ctor, (TraceLoggingMetadataCollector_Impl * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0DB40, void, TraceLoggingTypeInfo__ctor, (TraceLoggingTypeInfo * __this, Type * dataType, MethodInfo * method));
DO_APP_FUNC(0x01A0DC40, void, TraceLoggingTypeInfo__ctor_1, (TraceLoggingTypeInfo * __this, Type * dataType, String * name, EventLevel__Enum level, EventOpcode__Enum opcode, EventKeywords__Enum keywords, EventTags__Enum tags, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, TraceLoggingTypeInfo_get_Name, (TraceLoggingTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, EventLevel__Enum, TraceLoggingTypeInfo_get_Level, (TraceLoggingTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00529E80, EventOpcode__Enum, TraceLoggingTypeInfo_get_Opcode, (TraceLoggingTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, EventKeywords__Enum, TraceLoggingTypeInfo_get_Keywords, (TraceLoggingTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB970, EventTags__Enum, TraceLoggingTypeInfo_get_Tags, (TraceLoggingTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, Type *, TraceLoggingTypeInfo_get_DataType, (TraceLoggingTypeInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00502220, Object *, TraceLoggingTypeInfo_GetData, (TraceLoggingTypeInfo * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01A0DDC0, void, TypeAnalysis__ctor, (TypeAnalysis * __this, Type * dataType, EventDataAttribute * eventAttrib, List_1_System_Type_ * recursionCheck, MethodInfo * method));
DO_APP_FUNC(0x01745360, void, ActivityTracker_OnStart, (ActivityTracker * __this, String * providerName, String * activityName, int32_t task, Guid * activityId, Guid * relatedActivityId, EventActivityOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x01745B00, void, ActivityTracker_OnStop, (ActivityTracker * __this, String * providerName, String * activityName, int32_t task, Guid * activityId, MethodInfo * method));
DO_APP_FUNC(0x01746150, void, ActivityTracker_Enable, (ActivityTracker * __this, MethodInfo * method));
DO_APP_FUNC(0x01746380, ActivityTracker *, ActivityTracker_get_Instance, (MethodInfo * method));
DO_APP_FUNC(0x01746420, ActivityTracker_ActivityInfo *, ActivityTracker_FindActiveActivity, (ActivityTracker * __this, String * name, ActivityTracker_ActivityInfo * startLocation, MethodInfo * method));
DO_APP_FUNC(0x017464A0, String *, ActivityTracker_NormalizeActivityName, (ActivityTracker * __this, String * providerName, String * activityName, int32_t task, MethodInfo * method));
DO_APP_FUNC(0x017465F0, void, ActivityTracker_ActivityChanging, (ActivityTracker * __this, AsyncLocalValueChangedArgs_1_System_Diagnostics_Tracing_ActivityTracker_ActivityInfo_ args, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ActivityTracker__ctor, (ActivityTracker * __this, MethodInfo * method));
DO_APP_FUNC(0x017467D0, void, ActivityTracker__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01746930, void, ActivityTracker_ActivityInfo__ctor, (ActivityTracker_ActivityInfo * __this, String * name, int64_t uniqueId, ActivityTracker_ActivityInfo * creator, Guid activityIDToRestore, EventActivityOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x01746A40, Guid, ActivityTracker_ActivityInfo_get_ActivityId, (ActivityTracker_ActivityInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01746A50, String *, ActivityTracker_ActivityInfo_Path, (ActivityTracker_ActivityInfo * activityInfo, MethodInfo * method));
DO_APP_FUNC(0x01746B20, String *, ActivityTracker_ActivityInfo_ToString, (ActivityTracker_ActivityInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01746DA0, String *, ActivityTracker_ActivityInfo_LiveActivities, (ActivityTracker_ActivityInfo * list, MethodInfo * method));
DO_APP_FUNC(0x01746E70, bool, ActivityTracker_ActivityInfo_CanBeOrphan, (ActivityTracker_ActivityInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01746E80, void, ActivityTracker_ActivityInfo_CreateActivityPathGuid, (ActivityTracker_ActivityInfo * __this, Guid * idRet, int32_t * activityPathGuidOffset, MethodInfo * method));
DO_APP_FUNC(0x01746F70, void, ActivityTracker_ActivityInfo_CreateOverflowGuid, (ActivityTracker_ActivityInfo * __this, Guid * outPtr, MethodInfo * method));
DO_APP_FUNC(0x01746FF0, int32_t, ActivityTracker_ActivityInfo_AddIdToGuid, (Guid * outPtr, int32_t whereToAddId, uint32_t id, bool overflow, MethodInfo * method));
DO_APP_FUNC(0x01747140, void, ActivityTracker_ActivityInfo_WriteNibble, (uint8_t * * ptr, uint8_t * endPtr, uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x01A09360, bool, TplEtwProvider_get_Debug, (TplEtwProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01A09390, void, TplEtwProvider_DebugFacilityMessage, (TplEtwProvider * __this, String * Facility, String * Message, MethodInfo * method));
DO_APP_FUNC(0x01A093C0, void, TplEtwProvider_DebugFacilityMessage1, (TplEtwProvider * __this, String * Facility, String * Message, String * Arg, MethodInfo * method));
DO_APP_FUNC(0x01A093F0, void, TplEtwProvider_SetActivityId, (TplEtwProvider * __this, Guid Id, MethodInfo * method));
DO_APP_FUNC(0x01A09520, void, TplEtwProvider__ctor, (TplEtwProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01A095C0, void, TplEtwProvider__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0013DFE0, void, EventDescriptor__ctor, (EventDescriptor__Boxed * __this, int32_t traceloggingId, uint8_t level, uint8_t opcode, int64_t keywords, MethodInfo * method));
DO_APP_FUNC(0x0013E010, void, EventDescriptor__ctor_1, (EventDescriptor__Boxed * __this, int32_t id, uint8_t version, uint8_t channel, uint8_t level, uint8_t opcode, int32_t task, int64_t keywords, MethodInfo * method));
DO_APP_FUNC(0x00113CC0, int32_t, EventDescriptor_get_EventId, (EventDescriptor__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0011BD50, uint8_t, EventDescriptor_get_Version, (EventDescriptor__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0012F130, uint8_t, EventDescriptor_get_Channel, (EventDescriptor__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0011DC50, uint8_t, EventDescriptor_get_Level, (EventDescriptor__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0013E030, uint8_t, EventDescriptor_get_Opcode, (EventDescriptor__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0013E040, int32_t, EventDescriptor_get_Task, (EventDescriptor__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00107C10, int64_t, EventDescriptor_get_Keywords, (EventDescriptor__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0013E050, bool, EventDescriptor_Equals, (EventDescriptor__Boxed * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0013E180, int32_t, EventDescriptor_GetHashCode, (EventDescriptor__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0013E1B0, bool, EventDescriptor_Equals_1, (EventDescriptor__Boxed * __this, EventDescriptor other, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, EventProvider__ctor, (EventProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x0174D480, void, EventProvider_Register, (EventProvider * __this, Guid providerGuid, MethodInfo * method));
DO_APP_FUNC(0x0174D720, int32_t, EventProvider_SetInformation, (EventProvider * __this, UnsafeNativeMethods_ManifestEtw_EVENT_INFO_CLASS__Enum eventInfoClass, Void * data, int32_t dataSize, MethodInfo * method));
DO_APP_FUNC(0x0174D8E0, void, EventProvider_Dispose, (EventProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x0174D990, void, EventProvider_Dispose_1, (EventProvider * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x0174DBC0, void, EventProvider_Finalize, (EventProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x0174DC40, void, EventProvider_Deregister, (EventProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x0174DD00, void, EventProvider_EtwEnableCallBack, (Guid * sourceId, int32_t controlCode, uint8_t setLevel, int64_t anyKeyword, int64_t allKeyword, UnsafeNativeMethods_ManifestEtw_EVENT_FILTER_DESCRIPTOR * filterData, Void * callbackContext, MethodInfo * method));
DO_APP_FUNC(0x0174DE60, void, EventProvider_EtwEnableCallBackImpl, (EventProvider * __this, int32_t controlCode, uint8_t setLevel, int64_t anyKeyword, int64_t allKeyword, UnsafeNativeMethods_ManifestEtw_EVENT_FILTER_DESCRIPTOR * filterData, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, EventProvider_OnControllerCommand, (EventProvider * __this, ControllerCommand__Enum command, IDictionary_2_System_String_System_String_ * arguments, int32_t sessionId, int32_t etwSessionId, MethodInfo * method));
DO_APP_FUNC(0x004F4CE0, EventLevel__Enum, EventProvider_get_Level, (EventProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, EventKeywords__Enum, EventProvider_get_MatchAnyKeyword, (EventProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x0174E3A0, int32_t, EventProvider_FindNull, (Byte__Array * buffer, int32_t idx, MethodInfo * method));
DO_APP_FUNC(0x0174E3F0, List_1_System_Tuple_2_ *, EventProvider_GetSessions, (EventProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x0174ED20, void, EventProvider_GetSessionInfoCallback, (int32_t etwSessionId, int64_t matchAllKeywords, List_1_System_Diagnostics_Tracing_EventProvider_SessionInfo_ * * sessionList, MethodInfo * method));
DO_APP_FUNC(0x0174F0D0, void, EventProvider_GetSessionInfo, (EventProvider * __this, Action_2_Int32_Int64_ * action, MethodInfo * method));
DO_APP_FUNC(0x0174F330, int32_t, EventProvider_IndexOfSessionInList, (List_1_System_Diagnostics_Tracing_EventProvider_SessionInfo_ * sessions, int32_t etwSessionId, MethodInfo * method));
DO_APP_FUNC(0x0174F410, bool, EventProvider_GetDataFromController, (EventProvider * __this, int32_t etwSessionId, UnsafeNativeMethods_ManifestEtw_EVENT_FILTER_DESCRIPTOR * filterData, ControllerCommand__Enum * command, Byte__Array * * data, int32_t * dataStart, MethodInfo * method));
DO_APP_FUNC(0x003FCB00, bool, EventProvider_IsEnabled, (EventProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x0174F540, bool, EventProvider_IsEnabled_1, (EventProvider * __this, uint8_t level, int64_t keywords, MethodInfo * method));
DO_APP_FUNC(0x0174F580, EventProvider_WriteEventErrorCode__Enum, EventProvider_GetLastWriteEventError, (MethodInfo * method));
DO_APP_FUNC(0x0174F660, void, EventProvider_SetLastError, (int32_t error, MethodInfo * method));
DO_APP_FUNC(0x0174F7C0, Object *, EventProvider_EncodeObject, (Object * * data, EventProvider_EventData * * dataDescriptor, uint8_t * * dataBuffer, uint32_t * totalEventSize, MethodInfo * method));
DO_APP_FUNC(0x01750370, bool, EventProvider_WriteEvent, (EventProvider * __this, EventDescriptor * eventDescriptor, Guid * activityID, Guid * childActivityID, Object__Array * eventPayload, MethodInfo * method));
DO_APP_FUNC(0x01751130, bool, EventProvider_WriteEvent_1, (EventProvider * __this, EventDescriptor * eventDescriptor, Guid * activityID, Guid * childActivityID, int32_t dataCount, void * data, MethodInfo * method));
DO_APP_FUNC(0x01751240, bool, EventProvider_WriteEventRaw, (EventProvider * __this, EventDescriptor * eventDescriptor, Guid * activityID, Guid * relatedActivityID, int32_t dataCount, void * data, MethodInfo * method));
DO_APP_FUNC(0x01751350, uint32_t, EventProvider_EventUnregister, (EventProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01751400, int32_t, EventProvider_bitcount, (uint32_t n, MethodInfo * method));
DO_APP_FUNC(0x01751500, int32_t, EventProvider_bitindex, (uint32_t n, MethodInfo * method));
DO_APP_FUNC(0x01751520, void, EventProvider__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00115520, void, EventProvider_SessionInfo__ctor, (EventProvider_SessionInfo__Boxed * __this, int32_t sessionIdBit_, int32_t etwSessionId_, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, EventProvider_MonoPInvokeCallbackAttribute__ctor, (EventProvider_MonoPInvokeCallbackAttribute * __this, Type * t, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, EventProvider_c_DisplayClass44_0__ctor, (EventProvider_c_DisplayClass44_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x017515D0, void, EventProvider_c_DisplayClass44_0__GetSessions_b__0, (EventProvider_c_DisplayClass44_0 * __this, int32_t etwSessionId, int64_t matchAllKeywords, MethodInfo * method));
DO_APP_FUNC(0x0174AE50, void, EventListener_Dispose, (EventListener * __this, MethodInfo * method));
DO_APP_FUNC(0x0174B120, void, EventListener_OnEventSourceCreated, (EventListener * __this, EventSource * eventSource, MethodInfo * method));
DO_APP_FUNC(0x0174B310, void, EventListener_OnEventWritten, (EventListener * __this, EventWrittenEventArgs * eventData, MethodInfo * method));
DO_APP_FUNC(0x0174B3B0, void, EventListener_AddEventSource, (EventSource * newEventSource, MethodInfo * method));
DO_APP_FUNC(0x0174BE30, void, EventListener_DisposeOnShutdown, (Object * sender, EventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x0174C0C0, void, EventListener_RemoveReferencesToListenerInEventSources, (EventListener * listenerToRemove, MethodInfo * method));
DO_APP_FUNC(0x0174C320, Object *, EventListener_get_EventListenersLock, (MethodInfo * method));
DO_APP_FUNC(0x0174C530, void, EventListener__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, EventCommand__Enum, EventCommandEventArgs_get_Command, (EventCommandEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, EventCommandEventArgs_set_Command, (EventCommandEventArgs * __this, EventCommand__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FB930, IDictionary_2_System_String_System_String_ *, EventCommandEventArgs_get_Arguments, (EventCommandEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, EventCommandEventArgs_set_Arguments, (EventCommandEventArgs * __this, IDictionary_2_System_String_System_String_ * value, MethodInfo * method));
DO_APP_FUNC(0x0174A9F0, void, EventCommandEventArgs__ctor, (EventCommandEventArgs * __this, EventCommand__Enum command, IDictionary_2_System_String_System_String_ * arguments, EventSource * eventSource, EventListener * listener, int32_t perEventSourceSessionId, int32_t etwSessionId, bool enable, EventLevel__Enum level, EventKeywords__Enum matchAnyKeyword, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, EventSourceCreatedEventArgs_set_EventSource, (EventSourceCreatedEventArgs * __this, EventSource * value, MethodInfo * method));
DO_APP_FUNC(0x019FD360, void, EventSourceCreatedEventArgs__ctor, (EventSourceCreatedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9C0, void, EventWrittenEventArgs_set_EventName, (EventWrittenEventArgs * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, EventWrittenEventArgs_set_EventId, (EventWrittenEventArgs * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x019FD840, void, EventWrittenEventArgs_set_RelatedActivityId, (EventWrittenEventArgs * __this, Guid value, MethodInfo * method));
DO_APP_FUNC(0x002FBB10, void, EventWrittenEventArgs_set_Payload, (EventWrittenEventArgs * __this, ReadOnlyCollection_1_System_Object_ * value, MethodInfo * method));
DO_APP_FUNC(0x002FBA00, void, EventWrittenEventArgs_set_PayloadNames, (EventWrittenEventArgs * __this, ReadOnlyCollection_1_System_String_ * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9A0, void, EventWrittenEventArgs_set_Message, (EventWrittenEventArgs * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x019FD850, void, EventWrittenEventArgs__ctor, (EventWrittenEventArgs * __this, EventSource * eventSource, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, EventSourceAttribute_get_Name, (EventSourceAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, EventSourceAttribute_set_Name, (EventSourceAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, EventSourceAttribute_get_Guid, (EventSourceAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, EventSourceAttribute_set_Guid, (EventSourceAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, EventSourceAttribute_get_LocalizationResources, (EventSourceAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, EventSourceAttribute__ctor, (EventSourceAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0174A9D0, void, EventAttribute__ctor, (EventAttribute * __this, int32_t eventId, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, EventAttribute_get_EventId, (EventAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, EventAttribute_set_EventId, (EventAttribute * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x00CC59E0, EventLevel__Enum, EventAttribute_get_Level, (EventAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x00E39C80, void, EventAttribute_set_Level, (EventAttribute * __this, EventLevel__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FB930, EventKeywords__Enum, EventAttribute_get_Keywords, (EventAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, EventAttribute_set_Keywords, (EventAttribute * __this, EventKeywords__Enum value, MethodInfo * method));
DO_APP_FUNC(0x003FC7F0, EventOpcode__Enum, EventAttribute_get_Opcode, (EventAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0174A9E0, void, EventAttribute_set_Opcode, (EventAttribute * __this, EventOpcode__Enum value, MethodInfo * method));
DO_APP_FUNC(0x004E5A00, bool, EventAttribute_get_IsOpcodeSet, (EventAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, EventTask__Enum, EventAttribute_get_Task, (EventAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1E0, void, EventAttribute_set_Task, (EventAttribute * __this, EventTask__Enum value, MethodInfo * method));
DO_APP_FUNC(0x007EC400, uint8_t, EventAttribute_get_Version, (EventAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, EventAttribute_get_Message, (EventAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB10, void, EventAttribute_set_Message, (EventAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x00654950, EventTags__Enum, EventAttribute_get_Tags, (EventAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x00998570, EventActivityOptions__Enum, EventAttribute_get_ActivityOptions, (EventAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x00E06D70, void, EventAttribute_set_ActivityOptions, (EventAttribute * __this, EventActivityOptions__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, NonEventAttribute__ctor, (NonEventAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01742A20, void, ActivityFilter_DisableFilter, (ActivityFilter * * filterList, EventSource * source, MethodInfo * method));
DO_APP_FUNC(0x01742E50, void, ActivityFilter_UpdateFilter, (ActivityFilter * * filterList, EventSource * source, int32_t perEventSourceSessionId, String * startEvents, MethodInfo * method));
DO_APP_FUNC(0x01743340, bool, ActivityFilter_PassesActivityFilter, (ActivityFilter * filterList, Guid * childActivityID, bool triggeringEvent, EventSource * source, int32_t eventId, MethodInfo * method));
DO_APP_FUNC(0x01743820, void, ActivityFilter_FlowActivityIfNeeded, (ActivityFilter * filterList, Guid * currentActivityId, Guid * childActivityID, MethodInfo * method));
DO_APP_FUNC(0x01743A30, void, ActivityFilter_UpdateKwdTriggers, (ActivityFilter * activityFilter, Guid sourceGuid, EventSource * source, EventKeywords__Enum sessKeywords, MethodInfo * method));
DO_APP_FUNC(0x01743C10, IEnumerable_1_System_Tuple_2__1 *, ActivityFilter_GetFilterAsTuple, (ActivityFilter * __this, Guid sourceGuid, MethodInfo * method));
DO_APP_FUNC(0x01743DB0, void, ActivityFilter_Dispose, (ActivityFilter * __this, MethodInfo * method));
DO_APP_FUNC(0x01743EB0, void, ActivityFilter__ctor, (ActivityFilter * __this, EventSource * source, int32_t perEventSourceSessionId, int32_t eventId, int32_t samplingFreq, ActivityFilter * existingFilter, MethodInfo * method));
DO_APP_FUNC(0x01744360, void, ActivityFilter_EnsureActivityCleanupDelegate, (ActivityFilter * filterList, MethodInfo * method));
DO_APP_FUNC(0x017444A0, Action_1_Guid_ *, ActivityFilter_GetActivityDyingDelegate, (ActivityFilter * filterList, MethodInfo * method));
DO_APP_FUNC(0x017446C0, bool, ActivityFilter_EnableFilter, (ActivityFilter * * filterList, EventSource * source, int32_t perEventSourceSessionId, int32_t eventId, int32_t samplingFreq, MethodInfo * method));
DO_APP_FUNC(0x017448B0, void, ActivityFilter_TrimActiveActivityStore, (ConcurrentDictionary_2_System_Guid_System_Int32_ * activities, MethodInfo * method));
DO_APP_FUNC(0x01744C90, ConcurrentDictionary_2_System_Guid_System_Int32_ *, ActivityFilter_GetActiveActivities, (ActivityFilter * filterList, MethodInfo * method));
DO_APP_FUNC(0x006389F0, void, ActivityFilter_GetFilterAsTuple_d_7__ctor, (ActivityFilter_GetFilterAsTuple_d_7 * __this, int32_t __1__state, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ActivityFilter_GetFilterAsTuple_d_7_System_IDisposable_Dispose, (ActivityFilter_GetFilterAsTuple_d_7 * __this, MethodInfo * method));
DO_APP_FUNC(0x01744EB0, bool, ActivityFilter_GetFilterAsTuple_d_7_MoveNext, (ActivityFilter_GetFilterAsTuple_d_7 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Tuple_2_Int32_Int32_ *, ActivityFilter_GetFilterAsTuple_d_7_System_Collections_Generic_IEnumerator_System_Tuple_System_Int32_System_Int32___get_Current, (ActivityFilter_GetFilterAsTuple_d_7 * __this, MethodInfo * method));
DO_APP_FUNC(0x01745100, void, ActivityFilter_GetFilterAsTuple_d_7_System_Collections_IEnumerator_Reset, (ActivityFilter_GetFilterAsTuple_d_7 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Object *, ActivityFilter_GetFilterAsTuple_d_7_System_Collections_IEnumerator_get_Current, (ActivityFilter_GetFilterAsTuple_d_7 * __this, MethodInfo * method));
DO_APP_FUNC(0x01745150, IEnumerator_1_System_Tuple_2__1 *, ActivityFilter_GetFilterAsTuple_d_7_System_Collections_Generic_IEnumerable_System_Tuple_System_Int32_System_Int32___GetEnumerator, (ActivityFilter_GetFilterAsTuple_d_7 * __this, MethodInfo * method));
DO_APP_FUNC(0x01745350, IEnumerator *, ActivityFilter_GetFilterAsTuple_d_7_System_Collections_IEnumerable_GetEnumerator, (ActivityFilter_GetFilterAsTuple_d_7 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ActivityFilter_c_DisplayClass11_0__ctor, (ActivityFilter_c_DisplayClass11_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x01744CC0, void, ActivityFilter_c_DisplayClass11_0__GetActivityDyingDelegate_b__0, (ActivityFilter_c_DisplayClass11_0 * __this, Guid oldActivity, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ActivityFilter_c_DisplayClass13_0__ctor, (ActivityFilter_c_DisplayClass13_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x01744E10, int32_t, ActivityFilter_c_DisplayClass13_0__TrimActiveActivityStore_b__0, (ActivityFilter_c_DisplayClass13_0 * __this, KeyValuePair_2_System_Guid_System_Int32_ x, KeyValuePair_2_System_Guid_System_Int32_ y, MethodInfo * method));
DO_APP_FUNC(0x01749920, EtwSession *, EtwSession_GetEtwSession, (int32_t etwSessionId, bool bCreateIfNeeded, MethodInfo * method));
DO_APP_FUNC(0x01749F50, void, EtwSession_RemoveEtwSession, (EtwSession * etwSession, MethodInfo * method));
DO_APP_FUNC(0x0174A240, void, EtwSession_TrimGlobalList, (MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, EtwSession__ctor, (EtwSession * __this, int32_t etwSessionId, MethodInfo * method));
DO_APP_FUNC(0x0174A480, void, EtwSession__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, EtwSession_c_DisplayClass1_0__ctor, (EtwSession_c_DisplayClass1_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x0174A860, bool, EtwSession_c_DisplayClass1_0__RemoveEtwSession_b__0, (EtwSession_c_DisplayClass1_0 * __this, WeakReference_1_System_Diagnostics_Tracing_EtwSession_ * wrEtwSession, MethodInfo * method));
DO_APP_FUNC(0x0174A5D0, void, EtwSession_c__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, EtwSession_c__ctor, (EtwSession_c * __this, MethodInfo * method));
DO_APP_FUNC(0x0174A710, bool, EtwSession_c__TrimGlobalList_b__2_0, (EtwSession_c * __this, WeakReference_1_System_Diagnostics_Tracing_EtwSession_ * wrEtwSession, MethodInfo * method));
DO_APP_FUNC(0x00154CB0, void, SessionMask__ctor, (SessionMask__Boxed * __this, uint32_t mask, MethodInfo * method));
DO_APP_FUNC(0x00154CC0, bool, SessionMask_IsEqualOrSupersetOf, (SessionMask__Boxed * __this, SessionMask m, MethodInfo * method));
DO_APP_FUNC(0x00D51450, SessionMask, SessionMask_get_All, (MethodInfo * method));
DO_APP_FUNC(0x01A076D0, SessionMask, SessionMask_FromId, (int32_t perEventSourceSessionId, MethodInfo * method));
DO_APP_FUNC(0x00154CD0, uint64_t, SessionMask_ToEventKeywords, (SessionMask__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01A076E0, SessionMask, SessionMask_FromEventKeywords, (uint64_t m, MethodInfo * method));
DO_APP_FUNC(0x00154CE0, bool, SessionMask_get_Item, (SessionMask__Boxed * __this, int32_t perEventSourceSessionId, MethodInfo * method));
DO_APP_FUNC(0x00154D00, void, SessionMask_set_Item, (SessionMask__Boxed * __this, int32_t perEventSourceSessionId, bool value, MethodInfo * method));
DO_APP_FUNC(0x006CE970, uint64_t, SessionMask_op_Explicit, (SessionMask m, MethodInfo * method));
DO_APP_FUNC(0x006CE970, uint32_t, SessionMask_op_Explicit_1, (SessionMask m, MethodInfo * method));
DO_APP_FUNC(0x0174AE40, void, EventDispatcher__ctor, (EventDispatcher * __this, EventDispatcher * next, Boolean__Array * eventEnabled, EventListener * listener, MethodInfo * method));
DO_APP_FUNC(0x019FF750, void, ManifestBuilder__ctor, (ManifestBuilder * __this, String * providerName, Guid providerGuid, String * dllName, ResourceManager * resources, EventManifestOptions__Enum flags, MethodInfo * method));
DO_APP_FUNC(0x01A000C0, void, ManifestBuilder_AddOpcode, (ManifestBuilder * __this, String * name, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01A004F0, void, ManifestBuilder_AddTask, (ManifestBuilder * __this, String * name, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01A009C0, void, ManifestBuilder_AddKeyword, (ManifestBuilder * __this, String * name, uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x01A01180, void, ManifestBuilder_StartEvent, (ManifestBuilder * __this, String * eventName, EventAttribute * eventAttribute, MethodInfo * method));
DO_APP_FUNC(0x01A01630, void, ManifestBuilder_AddEventParameter, (ManifestBuilder * __this, Type * type, String * name, MethodInfo * method));
DO_APP_FUNC(0x01A01E70, void, ManifestBuilder_EndEvent, (ManifestBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x01A02140, Byte__Array *, ManifestBuilder_CreateManifest, (ManifestBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, IList_1_System_String_ *, ManifestBuilder_get_Errors, (ManifestBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x01A02180, void, ManifestBuilder_ManifestError, (ManifestBuilder * __this, String * msg, bool runtimeCritical, MethodInfo * method));
DO_APP_FUNC(0x01A02270, String *, ManifestBuilder_CreateManifestString, (ManifestBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x01A043B0, void, ManifestBuilder_WriteNameAndMessageAttribs, (ManifestBuilder * __this, StringBuilder * stringBuilder, String * elementName, String * name, MethodInfo * method));
DO_APP_FUNC(0x01A044C0, void, ManifestBuilder_WriteMessageAttrib, (ManifestBuilder * __this, StringBuilder * stringBuilder, String * elementName, String * name, String * value, MethodInfo * method));
DO_APP_FUNC(0x01A047B0, String *, ManifestBuilder_GetLocalizedMessage, (ManifestBuilder * __this, String * key, CultureInfo * ci, bool etwFormat, MethodInfo * method));
DO_APP_FUNC(0x01A04970, List_1_System_Globalization_CultureInfo_ *, ManifestBuilder_GetSupportedCultures, (ResourceManager * resources, MethodInfo * method));
DO_APP_FUNC(0x01A04C40, String *, ManifestBuilder_GetLevelName, (EventLevel__Enum level, MethodInfo * method));
DO_APP_FUNC(0x01A04D10, String *, ManifestBuilder_GetTaskName, (ManifestBuilder * __this, EventTask__Enum task, String * eventName, MethodInfo * method));
DO_APP_FUNC(0x01A04F70, String *, ManifestBuilder_GetOpcodeName, (ManifestBuilder * __this, EventOpcode__Enum opcode, String * eventName, MethodInfo * method));
DO_APP_FUNC(0x01A05220, String *, ManifestBuilder_GetKeywords, (ManifestBuilder * __this, uint64_t keywords, String * eventName, MethodInfo * method));
DO_APP_FUNC(0x01A05510, String *, ManifestBuilder_GetTypeName, (ManifestBuilder * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x01A05960, void, ManifestBuilder_UpdateStringBuilder, (StringBuilder * * stringBuilder, String * eventMessage, int32_t startIndex, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01A05B00, String *, ManifestBuilder_TranslateToManifestConvention, (ManifestBuilder * __this, String * eventMessage, String * evtName, MethodInfo * method));
DO_APP_FUNC(0x01A06A70, int32_t, ManifestBuilder_TranslateIndexToManifestConvention, (ManifestBuilder * __this, int32_t idx, String * evtName, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ManifestBuilder_c_DisplayClass22_0__ctor, (ManifestBuilder_c_DisplayClass22_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ManifestBuilder_c_DisplayClass22_1__ctor, (ManifestBuilder_c_DisplayClass22_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01A06CA0, void, ManifestBuilder_c_DisplayClass22_1__TranslateToManifestConvention_b__0, (ManifestBuilder_c_DisplayClass22_1 * __this, uint16_t ch, String * escape, MethodInfo * method));
DO_APP_FUNC(0x019FD3F0, void, EventSourceException__ctor, (EventSourceException * __this, MethodInfo * method));
DO_APP_FUNC(0x019FD4A0, void, EventSourceException__ctor_1, (EventSourceException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x019FD560, void, EventSourceException__ctor_2, (EventSourceException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x019FD620, void, EventSourceException__ctor_3, (EventSourceException * __this, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x004AB190, uint32_t, _PrivateImplementationDetails__ComputeStringHash, (String * s, MethodInfo * method));
DO_APP_FUNC(0x02689DC0, void, UnmanagedMarshal__ctor, (UnmanagedMarshal * __this, MethodInfo * method));
DO_APP_FUNC(0x0267F7B0, void, DynamicMethod__ctor, (DynamicMethod * __this, String * name, Type * returnType, Type__Array * parameterTypes, Module * m, bool skipVisibility, MethodInfo * method));
DO_APP_FUNC(0x0267F7E0, void, DynamicMethod__ctor_1, (DynamicMethod * __this, String * name, Type * returnType, Type__Array * parameterTypes, Type * owner, bool skipVisibility, MethodInfo * method));
DO_APP_FUNC(0x0267F810, MethodAttributes__Enum, DynamicMethod_get_Attributes, (DynamicMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0267F840, Type *, DynamicMethod_get_DeclaringType, (DynamicMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0267F870, void, DynamicMethod_set_InitLocals, (DynamicMethod * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x0267F8A0, RuntimeMethodHandle, DynamicMethod_get_MethodHandle, (DynamicMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0267F8D0, String *, DynamicMethod_get_Name, (DynamicMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0267F900, Type *, DynamicMethod_get_ReflectedType, (DynamicMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0267F930, MethodInfo_1 *, DynamicMethod_GetBaseDefinition, (DynamicMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0267F960, Object__Array *, DynamicMethod_GetCustomAttributes, (DynamicMethod * __this, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x0267F990, Object__Array *, DynamicMethod_GetCustomAttributes_1, (DynamicMethod * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x0267F9C0, ILGenerator *, DynamicMethod_GetILGenerator, (DynamicMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0267F9F0, MethodImplAttributes__Enum, DynamicMethod_GetMethodImplementationFlags, (DynamicMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0267FA20, ParameterInfo_1__Array *, DynamicMethod_GetParameters, (DynamicMethod * __this, MethodInfo * method));
DO_APP_FUNC(0x0267FA50, Object *, DynamicMethod_Invoke, (DynamicMethod * __this, Object * obj, BindingFlags__Enum invokeAttr, Binder * binder, Object__Array * parameters, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x0267FA80, bool, DynamicMethod_IsDefined, (DynamicMethod * __this, Type * attributeType, bool inherit, MethodInfo * method));
DO_APP_FUNC(0x031508B0, void, ThrowStub_ThrowNotSupportedException, (MethodInfo * method));
DO_APP_FUNC(0x03150880, void, _Il2CppComObject_Finalize, (_Il2CppComObject * __this, MethodInfo * method));
DO_APP_FUNC(0x03150880, void, _Il2CppComDelegate_Finalize, (_Il2CppComDelegate * __this, MethodInfo * method));
DO_APP_FUNC(0x02492010, String *, SR_1_GetString, (String * name, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x021E0BD0, String *, SR_1_GetString_1, (CultureInfo * culture, String * name, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, String *, SR_1_GetString_2, (String * name, MethodInfo * method));
DO_APP_FUNC(0x024920D0, String *, SR_1_Format, (String * resourceFormat, Object * p1, MethodInfo * method));
DO_APP_FUNC(0x024921D0, String *, SR_1_Format_1, (String * resourceFormat, Object * p1, Object * p2, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MonoPInvokeCallbackAttribute__ctor, (MonoPInvokeCallbackAttribute * __this, Type * t, MethodInfo * method));
DO_APP_FUNC(0x02186110, void, CertHelper_AddCertificatesToNativeChain, (UnityTls_unitytls_x509list * nativeCertificateChain, X509CertificateCollection_1 * certificates, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x02186280, void, CertHelper_AddCertificateToNativeChain, (UnityTls_unitytls_x509list * nativeCertificateChain, X509Certificate_1 * certificate, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x021865F0, X509CertificateCollection_1 *, CertHelper_NativeChainToManagedCollection, (UnityTls_unitytls_x509list_ref nativeCertificateChain, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x02186A20, void, Debug_CheckAndThrow, (UnityTls_unitytls_errorstate errorState, String * context, AlertDescription__Enum defaultAlert, MethodInfo * method));
DO_APP_FUNC(0x02186B30, void, Debug_CheckAndThrow_1, (UnityTls_unitytls_errorstate errorState, UnityTls_unitytls_x509verify_result__Enum verifyResult, String * context, AlertDescription__Enum defaultAlert, MethodInfo * method));
DO_APP_FUNC(0x02186CA0, void *, UnityTls_GetUnityTlsInterface, (MethodInfo * method));
DO_APP_FUNC(0x02186CB0, bool, UnityTls_get_IsSupported, (MethodInfo * method));
DO_APP_FUNC(0x02186D50, UnityTls_unitytls_interface_struct *, UnityTls_get_NativeInterface, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, UnityTls__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_x509verify_callback__ctor, (UnityTls_unitytls_x509verify_callback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x0248D200, UnityTls_unitytls_x509verify_result__Enum, UnityTls_unitytls_x509verify_callback_Invoke, (UnityTls_unitytls_x509verify_callback * __this, Void * userData, UnityTls_unitytls_x509_ref cert, UnityTls_unitytls_x509verify_result__Enum result, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x0248D620, IAsyncResult *, UnityTls_unitytls_x509verify_callback_BeginInvoke, (UnityTls_unitytls_x509verify_callback * __this, Void * userData, UnityTls_unitytls_x509_ref cert, UnityTls_unitytls_x509verify_result__Enum result, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00F550D0, UnityTls_unitytls_x509verify_result__Enum, UnityTls_unitytls_x509verify_callback_EndInvoke, (UnityTls_unitytls_x509verify_callback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_tlsctx_write_callback__ctor, (UnityTls_unitytls_tlsctx_write_callback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x02188EB0, void *, UnityTls_unitytls_tlsctx_write_callback_Invoke, (UnityTls_unitytls_tlsctx_write_callback * __this, Void * userData, uint8_t * data, void * bufferLen, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x0248CC60, IAsyncResult *, UnityTls_unitytls_tlsctx_write_callback_BeginInvoke, (UnityTls_unitytls_tlsctx_write_callback * __this, Void * userData, uint8_t * data, void * bufferLen, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00F52480, void *, UnityTls_unitytls_tlsctx_write_callback_EndInvoke, (UnityTls_unitytls_tlsctx_write_callback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_tlsctx_read_callback__ctor, (UnityTls_unitytls_tlsctx_read_callback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x02188EB0, void *, UnityTls_unitytls_tlsctx_read_callback_Invoke, (UnityTls_unitytls_tlsctx_read_callback * __this, Void * userData, uint8_t * buffer, void * bufferLen, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x0248CA80, IAsyncResult *, UnityTls_unitytls_tlsctx_read_callback_BeginInvoke, (UnityTls_unitytls_tlsctx_read_callback * __this, Void * userData, uint8_t * buffer, void * bufferLen, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00F52480, void *, UnityTls_unitytls_tlsctx_read_callback_EndInvoke, (UnityTls_unitytls_tlsctx_read_callback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_tlsctx_trace_callback__ctor, (UnityTls_unitytls_tlsctx_trace_callback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x012DDED0, void, UnityTls_unitytls_tlsctx_trace_callback_Invoke, (UnityTls_unitytls_tlsctx_trace_callback * __this, Void * userData, UnityTls_unitytls_tlsctx * ctx, uint8_t * traceMessage, void * traceMessageLen, MethodInfo * method));
DO_APP_FUNC(0x0248CB70, IAsyncResult *, UnityTls_unitytls_tlsctx_trace_callback_BeginInvoke, (UnityTls_unitytls_tlsctx_trace_callback * __this, Void * userData, UnityTls_unitytls_tlsctx * ctx, uint8_t * traceMessage, void * traceMessageLen, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, UnityTls_unitytls_tlsctx_trace_callback_EndInvoke, (UnityTls_unitytls_tlsctx_trace_callback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_tlsctx_certificate_callback__ctor, (UnityTls_unitytls_tlsctx_certificate_callback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x0248C230, void, UnityTls_unitytls_tlsctx_certificate_callback_Invoke, (UnityTls_unitytls_tlsctx_certificate_callback * __this, Void * userData, UnityTls_unitytls_tlsctx * ctx, uint8_t * cn, void * cnLen, UnityTls_unitytls_x509name * caList, void * caListLen, UnityTls_unitytls_x509list_ref * chain, UnityTls_unitytls_key_ref * key, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x0248C930, IAsyncResult *, UnityTls_unitytls_tlsctx_certificate_callback_BeginInvoke, (UnityTls_unitytls_tlsctx_certificate_callback * __this, Void * userData, UnityTls_unitytls_tlsctx * ctx, uint8_t * cn, void * cnLen, UnityTls_unitytls_x509name * caList, void * caListLen, UnityTls_unitytls_x509list_ref * chain, UnityTls_unitytls_key_ref * key, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, UnityTls_unitytls_tlsctx_certificate_callback_EndInvoke, (UnityTls_unitytls_tlsctx_certificate_callback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_tlsctx_x509verify_callback__ctor, (UnityTls_unitytls_tlsctx_x509verify_callback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x0248CD50, UnityTls_unitytls_x509verify_result__Enum, UnityTls_unitytls_tlsctx_x509verify_callback_Invoke, (UnityTls_unitytls_tlsctx_x509verify_callback * __this, Void * userData, UnityTls_unitytls_x509list_ref chain, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x0248D120, IAsyncResult *, UnityTls_unitytls_tlsctx_x509verify_callback_BeginInvoke, (UnityTls_unitytls_tlsctx_x509verify_callback * __this, Void * userData, UnityTls_unitytls_x509list_ref chain, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00F550D0, UnityTls_unitytls_x509verify_result__Enum, UnityTls_unitytls_tlsctx_x509verify_callback_EndInvoke, (UnityTls_unitytls_tlsctx_x509verify_callback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, UnityTls_unitytls_interface_struct__ctor, (UnityTls_unitytls_interface_struct * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_errorstate_create_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_errorstate_create_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x02186FB0, UnityTls_unitytls_errorstate, UnityTls_unitytls_interface_struct_unitytls_errorstate_create_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_errorstate_create_t * __this, MethodInfo * method));
DO_APP_FUNC(0x00611B10, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_errorstate_create_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_errorstate_create_t * __this, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x01C7A680, UnityTls_unitytls_errorstate, UnityTls_unitytls_interface_struct_unitytls_errorstate_create_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_errorstate_create_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_errorstate_raise_error_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_errorstate_raise_error_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x02187340, void, UnityTls_unitytls_interface_struct_unitytls_errorstate_raise_error_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_errorstate_raise_error_t * __this, UnityTls_unitytls_errorstate * errorState, UnityTls_unitytls_error_code__Enum errorCode, MethodInfo * method));
DO_APP_FUNC(0x021876B0, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_errorstate_raise_error_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_errorstate_raise_error_t * __this, UnityTls_unitytls_errorstate * errorState, UnityTls_unitytls_error_code__Enum errorCode, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, UnityTls_unitytls_interface_struct_unitytls_errorstate_raise_error_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_errorstate_raise_error_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_key_get_ref_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_key_get_ref_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x02187780, UnityTls_unitytls_key_ref, UnityTls_unitytls_interface_struct_unitytls_key_get_ref_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_key_get_ref_t * __this, UnityTls_unitytls_key * key, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_key_get_ref_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_key_get_ref_t * __this, UnityTls_unitytls_key * key, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00F52480, UnityTls_unitytls_key_ref, UnityTls_unitytls_interface_struct_unitytls_key_get_ref_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_key_get_ref_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_key_parse_der_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_key_parse_der_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x02187AF0, UnityTls_unitytls_key *, UnityTls_unitytls_interface_struct_unitytls_key_parse_der_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_key_parse_der_t * __this, uint8_t * buffer, void * bufferLen, uint8_t * password, void * passwordLen, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x02187F90, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_key_parse_der_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_key_parse_der_t * __this, uint8_t * buffer, void * bufferLen, uint8_t * password, void * passwordLen, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, UnityTls_unitytls_key *, UnityTls_unitytls_interface_struct_unitytls_key_parse_der_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_key_parse_der_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_key_parse_pem_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_key_parse_pem_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x02187AF0, UnityTls_unitytls_key *, UnityTls_unitytls_interface_struct_unitytls_key_parse_pem_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_key_parse_pem_t * __this, uint8_t * buffer, void * bufferLen, uint8_t * password, void * passwordLen, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x021880A0, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_key_parse_pem_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_key_parse_pem_t * __this, uint8_t * buffer, void * bufferLen, uint8_t * password, void * passwordLen, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, UnityTls_unitytls_key *, UnityTls_unitytls_interface_struct_unitytls_key_parse_pem_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_key_parse_pem_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_key_free_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_key_free_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x006FCF70, void, UnityTls_unitytls_interface_struct_unitytls_key_free_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_key_free_t * __this, UnityTls_unitytls_key * key, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_key_free_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_key_free_t * __this, UnityTls_unitytls_key * key, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, UnityTls_unitytls_interface_struct_unitytls_key_free_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_key_free_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_x509_export_der_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_x509_export_der_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x02189A40, void *, UnityTls_unitytls_interface_struct_unitytls_x509_export_der_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_x509_export_der_t * __this, UnityTls_unitytls_x509_ref cert, uint8_t * buffer, void * bufferLen, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x02189E70, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_x509_export_der_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_x509_export_der_t * __this, UnityTls_unitytls_x509_ref cert, uint8_t * buffer, void * bufferLen, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00F52480, void *, UnityTls_unitytls_interface_struct_unitytls_x509_export_der_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_x509_export_der_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_x509list_get_ref_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_x509list_get_ref_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x02187780, UnityTls_unitytls_x509list_ref, UnityTls_unitytls_interface_struct_unitytls_x509list_get_ref_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_x509list_get_ref_t * __this, UnityTls_unitytls_x509list * list, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_x509list_get_ref_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_x509list_get_ref_t * __this, UnityTls_unitytls_x509list * list, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00F52480, UnityTls_unitytls_x509list_ref, UnityTls_unitytls_interface_struct_unitytls_x509list_get_ref_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_x509list_get_ref_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_x509list_get_x509_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_x509list_get_x509_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x0218A480, UnityTls_unitytls_x509_ref, UnityTls_unitytls_interface_struct_unitytls_x509list_get_x509_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_x509list_get_x509_t * __this, UnityTls_unitytls_x509list_ref list, void * index, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x0218A850, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_x509list_get_x509_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_x509list_get_x509_t * __this, UnityTls_unitytls_x509list_ref list, void * index, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00F52480, UnityTls_unitytls_x509_ref, UnityTls_unitytls_interface_struct_unitytls_x509list_get_x509_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_x509list_get_x509_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_x509list_create_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_x509list_create_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x0218A130, UnityTls_unitytls_x509list *, UnityTls_unitytls_interface_struct_unitytls_x509list_create_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_x509list_create_t * __this, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_x509list_create_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_x509list_create_t * __this, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, UnityTls_unitytls_x509list *, UnityTls_unitytls_interface_struct_unitytls_x509list_create_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_x509list_create_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_x509list_append_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_x509list_append_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x021893D0, void, UnityTls_unitytls_interface_struct_unitytls_x509list_append_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_x509list_append_t * __this, UnityTls_unitytls_x509list * list, UnityTls_unitytls_x509_ref cert, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x0218A050, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_x509list_append_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_x509list_append_t * __this, UnityTls_unitytls_x509list * list, UnityTls_unitytls_x509_ref cert, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, UnityTls_unitytls_interface_struct_unitytls_x509list_append_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_x509list_append_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_x509list_append_der_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_x509list_append_der_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x012DDED0, void, UnityTls_unitytls_interface_struct_unitytls_x509list_append_der_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_x509list_append_der_t * __this, UnityTls_unitytls_x509list * list, uint8_t * buffer, void * bufferLen, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x02189F60, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_x509list_append_der_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_x509list_append_der_t * __this, UnityTls_unitytls_x509list * list, uint8_t * buffer, void * bufferLen, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, UnityTls_unitytls_interface_struct_unitytls_x509list_append_der_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_x509list_append_der_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_x509list_free_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_x509list_free_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x006FCF70, void, UnityTls_unitytls_interface_struct_unitytls_x509list_free_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_x509list_free_t * __this, UnityTls_unitytls_x509list * list, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_x509list_free_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_x509list_free_t * __this, UnityTls_unitytls_x509list * list, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, UnityTls_unitytls_interface_struct_unitytls_x509list_free_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_x509list_free_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_x509verify_default_ca_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_x509verify_default_ca_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x0218A930, UnityTls_unitytls_x509verify_result__Enum, UnityTls_unitytls_interface_struct_unitytls_x509verify_default_ca_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_x509verify_default_ca_t * __this, UnityTls_unitytls_x509list_ref chain, uint8_t * cn, void * cnLen, UnityTls_unitytls_x509verify_callback * cb, Void * userData, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x0218AE50, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_x509verify_default_ca_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_x509verify_default_ca_t * __this, UnityTls_unitytls_x509list_ref chain, uint8_t * cn, void * cnLen, UnityTls_unitytls_x509verify_callback * cb, Void * userData, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00F550D0, UnityTls_unitytls_x509verify_result__Enum, UnityTls_unitytls_interface_struct_unitytls_x509verify_default_ca_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_x509verify_default_ca_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_x509verify_explicit_ca_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_x509verify_explicit_ca_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x0248BB30, UnityTls_unitytls_x509verify_result__Enum, UnityTls_unitytls_interface_struct_unitytls_x509verify_explicit_ca_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_x509verify_explicit_ca_t * __this, UnityTls_unitytls_x509list_ref chain, UnityTls_unitytls_x509list_ref trustCA, uint8_t * cn, void * cnLen, UnityTls_unitytls_x509verify_callback * cb, Void * userData, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x0248C100, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_x509verify_explicit_ca_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_x509verify_explicit_ca_t * __this, UnityTls_unitytls_x509list_ref chain, UnityTls_unitytls_x509list_ref trustCA, uint8_t * cn, void * cnLen, UnityTls_unitytls_x509verify_callback * cb, Void * userData, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00F550D0, UnityTls_unitytls_x509verify_result__Enum, UnityTls_unitytls_interface_struct_unitytls_x509verify_explicit_ca_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_x509verify_explicit_ca_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_server_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_server_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x02188290, UnityTls_unitytls_tlsctx *, UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_server_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_server_t * __this, UnityTls_unitytls_tlsctx_protocolrange supportedProtocols, UnityTls_unitytls_tlsctx_callbacks callbacks, uint64_t certChain, uint64_t leafCertificateKey, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x02188A20, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_server_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_server_t * __this, UnityTls_unitytls_tlsctx_protocolrange supportedProtocols, UnityTls_unitytls_tlsctx_callbacks callbacks, uint64_t certChain, uint64_t leafCertificateKey, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, UnityTls_unitytls_tlsctx *, UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_server_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_server_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_client_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_client_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x02188290, UnityTls_unitytls_tlsctx *, UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_client_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_client_t * __this, UnityTls_unitytls_tlsctx_protocolrange supportedProtocols, UnityTls_unitytls_tlsctx_callbacks callbacks, uint8_t * cn, void * cnLen, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x02188910, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_client_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_client_t * __this, UnityTls_unitytls_tlsctx_protocolrange supportedProtocols, UnityTls_unitytls_tlsctx_callbacks callbacks, uint8_t * cn, void * cnLen, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, UnityTls_unitytls_tlsctx *, UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_client_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_client_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_server_require_client_authentication_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_server_require_client_authentication_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x021893D0, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_server_require_client_authentication_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_server_require_client_authentication_t * __this, UnityTls_unitytls_tlsctx * ctx, UnityTls_unitytls_x509list_ref clientAuthCAList, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x02189780, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_tlsctx_server_require_client_authentication_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_server_require_client_authentication_t * __this, UnityTls_unitytls_tlsctx * ctx, UnityTls_unitytls_x509list_ref clientAuthCAList, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_server_require_client_authentication_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_server_require_client_authentication_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_certificate_callback_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_certificate_callback_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x012DDED0, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_certificate_callback_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_certificate_callback_t * __this, UnityTls_unitytls_tlsctx * ctx, UnityTls_unitytls_tlsctx_certificate_callback * cb, Void * userData, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x01BD1540, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_certificate_callback_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_certificate_callback_t * __this, UnityTls_unitytls_tlsctx * ctx, UnityTls_unitytls_tlsctx_certificate_callback * cb, Void * userData, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_certificate_callback_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_certificate_callback_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_trace_callback_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_trace_callback_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x012DDED0, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_trace_callback_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_trace_callback_t * __this, UnityTls_unitytls_tlsctx * ctx, UnityTls_unitytls_tlsctx_trace_callback * cb, Void * userData, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x01BD1540, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_trace_callback_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_trace_callback_t * __this, UnityTls_unitytls_tlsctx * ctx, UnityTls_unitytls_tlsctx_trace_callback * cb, Void * userData, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_trace_callback_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_trace_callback_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_x509verify_callback_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_x509verify_callback_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x012DDED0, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_x509verify_callback_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_x509verify_callback_t * __this, UnityTls_unitytls_tlsctx * ctx, UnityTls_unitytls_tlsctx_x509verify_callback * cb, Void * userData, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x01BD1540, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_x509verify_callback_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_x509verify_callback_t * __this, UnityTls_unitytls_tlsctx * ctx, UnityTls_unitytls_tlsctx_x509verify_callback * cb, Void * userData, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_x509verify_callback_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_x509verify_callback_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_supported_ciphersuites_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_supported_ciphersuites_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x012DDED0, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_supported_ciphersuites_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_supported_ciphersuites_t * __this, UnityTls_unitytls_tlsctx * ctx, UnityTls_unitytls_ciphersuite__Enum * supportedCiphersuites, void * supportedCiphersuitesLen, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x02189860, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_supported_ciphersuites_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_supported_ciphersuites_t * __this, UnityTls_unitytls_tlsctx * ctx, UnityTls_unitytls_ciphersuite__Enum * supportedCiphersuites, void * supportedCiphersuitesLen, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_supported_ciphersuites_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_supported_ciphersuites_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_ciphersuite_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_ciphersuite_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x02188B40, UnityTls_unitytls_ciphersuite__Enum, UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_ciphersuite_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_ciphersuite_t * __this, UnityTls_unitytls_tlsctx * ctx, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_ciphersuite_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_ciphersuite_t * __this, UnityTls_unitytls_tlsctx * ctx, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00F550D0, UnityTls_unitytls_ciphersuite__Enum, UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_ciphersuite_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_ciphersuite_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_protocol_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_protocol_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x02188B40, UnityTls_unitytls_protocol__Enum, UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_protocol_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_protocol_t * __this, UnityTls_unitytls_tlsctx * ctx, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_protocol_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_protocol_t * __this, UnityTls_unitytls_tlsctx * ctx, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00F550D0, UnityTls_unitytls_protocol__Enum, UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_protocol_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_protocol_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_process_handshake_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_process_handshake_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x02188B40, UnityTls_unitytls_x509verify_result__Enum, UnityTls_unitytls_interface_struct_unitytls_tlsctx_process_handshake_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_process_handshake_t * __this, UnityTls_unitytls_tlsctx * ctx, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_tlsctx_process_handshake_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_process_handshake_t * __this, UnityTls_unitytls_tlsctx * ctx, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00F550D0, UnityTls_unitytls_x509verify_result__Enum, UnityTls_unitytls_interface_struct_unitytls_tlsctx_process_handshake_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_process_handshake_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_read_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_read_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x02188EB0, void *, UnityTls_unitytls_interface_struct_unitytls_tlsctx_read_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_read_t * __this, UnityTls_unitytls_tlsctx * ctx, uint8_t * buffer, void * bufferLen, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x021892E0, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_tlsctx_read_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_read_t * __this, UnityTls_unitytls_tlsctx * ctx, uint8_t * buffer, void * bufferLen, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00F52480, void *, UnityTls_unitytls_interface_struct_unitytls_tlsctx_read_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_read_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_write_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_write_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x02188EB0, void *, UnityTls_unitytls_interface_struct_unitytls_tlsctx_write_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_write_t * __this, UnityTls_unitytls_tlsctx * ctx, uint8_t * data, void * bufferLen, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x02189950, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_tlsctx_write_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_write_t * __this, UnityTls_unitytls_tlsctx * ctx, uint8_t * data, void * bufferLen, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00F52480, void *, UnityTls_unitytls_interface_struct_unitytls_tlsctx_write_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_write_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_notify_close_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_notify_close_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x012E7480, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_notify_close_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_notify_close_t * __this, UnityTls_unitytls_tlsctx * ctx, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_tlsctx_notify_close_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_notify_close_t * __this, UnityTls_unitytls_tlsctx * ctx, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_notify_close_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_notify_close_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_free_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_free_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x006FCF70, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_free_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_free_t * __this, UnityTls_unitytls_tlsctx * ctx, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_tlsctx_free_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_free_t * __this, UnityTls_unitytls_tlsctx * ctx, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, UnityTls_unitytls_interface_struct_unitytls_tlsctx_free_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_tlsctx_free_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnityTls_unitytls_interface_struct_unitytls_random_generate_bytes_t__ctor, (UnityTls_unitytls_interface_struct_unitytls_random_generate_bytes_t * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x0143DA20, void, UnityTls_unitytls_interface_struct_unitytls_random_generate_bytes_t_Invoke, (UnityTls_unitytls_interface_struct_unitytls_random_generate_bytes_t * __this, uint8_t * buffer, void * bufferLen, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x021881B0, IAsyncResult *, UnityTls_unitytls_interface_struct_unitytls_random_generate_bytes_t_BeginInvoke, (UnityTls_unitytls_interface_struct_unitytls_random_generate_bytes_t * __this, uint8_t * buffer, void * bufferLen, UnityTls_unitytls_errorstate * errorState, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, UnityTls_unitytls_interface_struct_unitytls_random_generate_bytes_t_EndInvoke, (UnityTls_unitytls_interface_struct_unitytls_random_generate_bytes_t * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x0248D710, void, UnityTlsContext__ctor, (UnityTlsContext * __this, MobileAuthenticatedStream * parent, bool serverMode, String * targetHost, SslProtocols__Enum enabledProtocols, X509Certificate_1 * serverCertificate, X509CertificateCollection_1 * clientCertificates, bool askForClientCert, MethodInfo * method));
DO_APP_FUNC(0x0248E570, void, UnityTlsContext_ExtractNativeKeyAndChainFromManagedCertificate, (X509Certificate_1 * cert, UnityTls_unitytls_errorstate * errorState, UnityTls_unitytls_x509list * * nativeCertChain, UnityTls_unitytls_key * * nativeKey, MethodInfo * method));
DO_APP_FUNC(0x003FFE10, bool, UnityTlsContext_get_IsAuthenticated, (UnityTlsContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, X509Certificate_1 *, UnityTlsContext_get_LocalClientCertificate, (UnityTlsContext * __this, MethodInfo * method));
DO_APP_FUNC(0x0248E900, ValueTuple_2_Int32_Boolean_, UnityTlsContext_Read, (UnityTlsContext * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0248EB30, ValueTuple_2_Int32_Boolean_, UnityTlsContext_Write, (UnityTlsContext * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0248ED50, void, UnityTlsContext_Shutdown, (UnityTlsContext * __this, MethodInfo * method));
DO_APP_FUNC(0x0248EF70, void, UnityTlsContext_Dispose, (UnityTlsContext * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x0248F020, void, UnityTlsContext_StartHandshake, (UnityTlsContext * __this, MethodInfo * method));
DO_APP_FUNC(0x0248F2A0, bool, UnityTlsContext_ProcessHandshake, (UnityTlsContext * __this, MethodInfo * method));
DO_APP_FUNC(0x0248F6B0, void, UnityTlsContext_FinishHandshake, (UnityTlsContext * __this, MethodInfo * method));
DO_APP_FUNC(0x0248F930, void *, UnityTlsContext_WriteCallback, (Void * userData, uint8_t * data, void * bufferLen, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x0248FA90, void *, UnityTlsContext_WriteCallback_1, (UnityTlsContext * __this, uint8_t * data, void * bufferLen, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x0248FCB0, void *, UnityTlsContext_ReadCallback, (Void * userData, uint8_t * buffer, void * bufferLen, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x0248FE10, void *, UnityTlsContext_ReadCallback_1, (UnityTlsContext * __this, uint8_t * buffer, void * bufferLen, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x02490100, UnityTls_unitytls_x509verify_result__Enum, UnityTlsContext_VerifyCallback, (Void * userData, UnityTls_unitytls_x509list_ref chain, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x02490240, UnityTls_unitytls_x509verify_result__Enum, UnityTlsContext_VerifyCallback_1, (UnityTlsContext * __this, UnityTls_unitytls_x509list_ref chain, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x02490510, void, UnityTlsContext_CertificateCallback, (Void * userData, UnityTls_unitytls_tlsctx * ctx, uint8_t * cn, void * cnLen, UnityTls_unitytls_x509name * caList, void * caListLen, UnityTls_unitytls_x509list_ref * chain, UnityTls_unitytls_key_ref * key, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x02490670, void, UnityTlsContext_CertificateCallback_1, (UnityTlsContext * __this, UnityTls_unitytls_tlsctx * ctx, uint8_t * cn, void * cnLen, UnityTls_unitytls_x509name * caList, void * caListLen, UnityTls_unitytls_x509list_ref * chain, UnityTls_unitytls_key_ref * key, UnityTls_unitytls_errorstate * errorState, MethodInfo * method));
DO_APP_FUNC(0x02490980, UnityTls_unitytls_protocol__Enum, UnityTlsConversions_GetMinProtocol, (SslProtocols__Enum protocols, MethodInfo * method));
DO_APP_FUNC(0x02490B10, UnityTls_unitytls_protocol__Enum, UnityTlsConversions_GetMaxProtocol, (SslProtocols__Enum protocols, MethodInfo * method));
DO_APP_FUNC(0x02490CA0, TlsProtocols__Enum, UnityTlsConversions_ConvertProtocolVersion, (UnityTls_unitytls_protocol__Enum protocol, MethodInfo * method));
DO_APP_FUNC(0x02490CD0, AlertDescription__Enum, UnityTlsConversions_VerifyResultToAlertDescription, (UnityTls_unitytls_x509verify_result__Enum verifyResult, AlertDescription__Enum defaultAlert, MethodInfo * method));
DO_APP_FUNC(0x024911B0, MonoSslPolicyErrors__Enum, UnityTlsConversions_VerifyResultToPolicyErrror, (UnityTls_unitytls_x509verify_result__Enum verifyResult, MethodInfo * method));
DO_APP_FUNC(0x024912D0, String *, UnityTlsProvider_get_Name, (UnityTlsProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x02491350, Guid, UnityTlsProvider_get_ID, (UnityTlsProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, UnityTlsProvider_get_SupportsSslStream, (UnityTlsProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, UnityTlsProvider_get_SupportsMonoExtensions, (UnityTlsProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, UnityTlsProvider_get_SupportsConnectionInfo, (UnityTlsProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, UnityTlsProvider_get_SupportsCleanShutdown, (UnityTlsProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x02491400, SslProtocols__Enum, UnityTlsProvider_get_SupportedProtocols, (UnityTlsProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x02491410, IMonoSslStream *, UnityTlsProvider_CreateSslStream, (UnityTlsProvider * __this, Stream * innerStream, bool leaveInnerStreamOpen, MonoTlsSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x02491430, IMonoSslStream *, UnityTlsProvider_CreateSslStreamInternal, (UnityTlsProvider * __this, SslStream * sslStream, Stream * innerStream, bool leaveInnerStreamOpen, MonoTlsSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x02491630, bool, UnityTlsProvider_ValidateCertificate, (UnityTlsProvider * __this, ICertificateValidator2 * validator, String * targetHost, bool serverMode, X509CertificateCollection_1 * certificates, bool wantsChain, X509Chain * * chain, MonoSslPolicyErrors__Enum * errors, int32_t * status11, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, UnityTlsProvider__ctor, (UnityTlsProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x02491D80, void, UnityTlsStream__ctor, (UnityTlsStream * __this, Stream * innerStream, bool leaveInnerStreamOpen, SslStream * owner, MonoTlsSettings * settings, MonoTlsProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x02491E60, MobileTlsContext *, UnityTlsStream_CreateContext, (UnityTlsStream * __this, bool serverMode, String * targetHost, SslProtocols__Enum enabledProtocols, X509Certificate_1 * serverCertificate, X509CertificateCollection_1 * clientCertificates, bool askForClientCert, MethodInfo * method));
DO_APP_FUNC(0x02177F70, void *, CFObject_dlopen, (String * path, int32_t mode, MethodInfo * method));
DO_APP_FUNC(0x021780F0, void *, CFObject_dlsym, (void * handle, String * symbol, MethodInfo * method));
DO_APP_FUNC(0x02178270, void, CFObject_dlclose, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x02178310, void *, CFObject_GetIndirect, (void * handle, String * symbol, MethodInfo * method));
DO_APP_FUNC(0x02178320, void *, CFObject_GetCFObjectHandle, (void * handle, String * symbol, MethodInfo * method));
DO_APP_FUNC(0x021784A0, void, CFObject__ctor, (CFObject * __this, void * handle, bool own, MethodInfo * method));
DO_APP_FUNC(0x02178550, void, CFObject_Finalize, (CFObject * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, void *, CFObject_get_Handle, (CFObject * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, CFObject_set_Handle, (CFObject * __this, void * value, MethodInfo * method));
DO_APP_FUNC(0x021785D0, void *, CFObject_CFRetain, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x02178670, void, CFObject_Retain, (CFObject * __this, MethodInfo * method));
DO_APP_FUNC(0x02178710, void, CFObject_CFRelease, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x021787B0, void, CFObject_Release, (CFObject * __this, MethodInfo * method));
DO_APP_FUNC(0x02178850, void, CFObject_Dispose, (CFObject * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x02178960, void, CFObject_Dispose_1, (CFObject * __this, MethodInfo * method));
DO_APP_FUNC(0x02173690, void, CFArray__ctor, (CFArray * __this, void * handle, bool own, MethodInfo * method));
DO_APP_FUNC(0x021736A0, void, CFArray__cctor, (MethodInfo * method));
DO_APP_FUNC(0x021737C0, void *, CFArray_CFArrayGetCount, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x02173860, int32_t, CFArray_get_Count, (CFArray * __this, MethodInfo * method));
DO_APP_FUNC(0x02173980, void *, CFArray_CFArrayGetValueAtIndex, (void * handle, void * index, MethodInfo * method));
DO_APP_FUNC(0x02173A30, void *, CFArray_get_Item, (CFArray * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02177D80, bool, CFNumber_CFNumberGetValue, (void * handle, void * type, int32_t * value, MethodInfo * method));
DO_APP_FUNC(0x02177E40, int32_t, CFNumber_AsInt32, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x001DCD60, void, CFRange__ctor, (CFRange__Boxed * __this, int32_t loc, int32_t len, MethodInfo * method));
DO_APP_FUNC(0x02173690, void, CFString__ctor, (CFString * __this, void * handle, bool own, MethodInfo * method));
DO_APP_FUNC(0x0217A1D0, void *, CFString_CFStringCreateWithCharacters, (void * alloc, void * chars, void * length, MethodInfo * method));
DO_APP_FUNC(0x0217A280, CFString *, CFString_Create, (String * value, MethodInfo * method));
DO_APP_FUNC(0x0217A4A0, void *, CFString_CFStringGetLength, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x0217A540, void *, CFString_CFStringGetCharactersPtr, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x0217A5E0, void *, CFString_CFStringGetCharacters, (void * handle, CFRange range, void * buffer, MethodInfo * method));
DO_APP_FUNC(0x0217A6A0, String *, CFString_AsString, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x0217A970, String *, CFString_ToString, (CFString * __this, MethodInfo * method));
DO_APP_FUNC(0x02173B60, void, CFDictionary__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02173690, void, CFDictionary__ctor, (CFDictionary * __this, void * handle, bool own, MethodInfo * method));
DO_APP_FUNC(0x02173CA0, void *, CFDictionary_CFDictionaryGetValue, (void * handle, void * key, MethodInfo * method));
DO_APP_FUNC(0x02173D50, void *, CFDictionary_GetValue, (CFDictionary * __this, void * key, MethodInfo * method));
DO_APP_FUNC(0x02173D50, void *, CFDictionary_get_Item, (CFDictionary * __this, void * key, MethodInfo * method));
DO_APP_FUNC(0x02173690, void, CFUrl__ctor, (CFUrl * __this, void * handle, bool own, MethodInfo * method));
DO_APP_FUNC(0x0217A9A0, void *, CFUrl_CFURLCreateWithString, (void * allocator, void * str, void * baseURL, MethodInfo * method));
DO_APP_FUNC(0x0217AA50, CFUrl *, CFUrl_Create, (String * absolute, MethodInfo * method));
DO_APP_FUNC(0x021799A0, void, CFRunLoop_CFRunLoopAddSource, (void * rl, void * source, void * mode, MethodInfo * method));
DO_APP_FUNC(0x02179A50, void, CFRunLoop_CFRunLoopRemoveSource, (void * rl, void * source, void * mode, MethodInfo * method));
DO_APP_FUNC(0x02179B00, int32_t, CFRunLoop_CFRunLoopRunInMode, (void * mode, double seconds, bool returnAfterSourceHandled, MethodInfo * method));
DO_APP_FUNC(0x02179BC0, void *, CFRunLoop_CFRunLoopGetCurrent, (MethodInfo * method));
DO_APP_FUNC(0x02179C50, void, CFRunLoop_CFRunLoopStop, (void * rl, MethodInfo * method));
DO_APP_FUNC(0x02173690, void, CFRunLoop__ctor, (CFRunLoop * __this, void * handle, bool own, MethodInfo * method));
DO_APP_FUNC(0x02179CF0, CFRunLoop *, CFRunLoop_get_CurrentRunLoop, (MethodInfo * method));
DO_APP_FUNC(0x02179EC0, void, CFRunLoop_AddSource, (CFRunLoop * __this, void * source, CFString * mode, MethodInfo * method));
DO_APP_FUNC(0x02179F90, void, CFRunLoop_RemoveSource, (CFRunLoop * __this, void * source, CFString * mode, MethodInfo * method));
DO_APP_FUNC(0x0217A060, int32_t, CFRunLoop_RunInMode, (CFRunLoop * __this, CFString * mode, double seconds, bool returnAfterSourceHandled, MethodInfo * method));
DO_APP_FUNC(0x0217A130, void, CFRunLoop_Stop, (CFRunLoop * __this, MethodInfo * method));
DO_APP_FUNC(0x02178A10, void, CFProxy__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, CFProxy__ctor, (CFProxy * __this, CFDictionary * settings, MethodInfo * method));
DO_APP_FUNC(0x02178C70, CFProxyType__Enum, CFProxy_CFProxyTypeToEnum, (void * type, MethodInfo * method));
DO_APP_FUNC(0x02178E60, void *, CFProxy_get_AutoConfigurationJavaScript, (CFProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x02178F50, void *, CFProxy_get_AutoConfigurationUrl, (CFProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x02179040, String *, CFProxy_get_HostName, (CFProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x02179140, String *, CFProxy_get_Password, (CFProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x02179240, int32_t, CFProxy_get_Port, (CFProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x02179450, CFProxyType__Enum, CFProxy_get_ProxyType, (CFProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x02179730, String *, CFProxy_get_Username, (CFProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x02179830, void, CFProxySettings__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, CFProxySettings__ctor, (CFProxySettings * __this, CFDictionary * settings, MethodInfo * method));
DO_APP_FUNC(0x002FA280, CFDictionary *, CFProxySettings_get_Dictionary, (CFProxySettings * __this, MethodInfo * method));
DO_APP_FUNC(0x02173E80, void *, CFNetwork_CFNetworkCopyProxiesForAutoConfigurationScriptSequential, (void * proxyAutoConfigurationScript, void * targetURL, void * * error, MethodInfo * method));
DO_APP_FUNC(0x02173F30, void *, CFNetwork_CFNetworkExecuteProxyAutoConfigurationURL, (void * proxyAutoConfigURL, void * targetURL, CFNetwork_CFProxyAutoConfigurationResultCallback * cb, CFStreamClientContext * clientContext, MethodInfo * method));
DO_APP_FUNC(0x02174000, void, CFNetwork_CFNetworkCopyProxiesForAutoConfigurationScriptThread, (MethodInfo * method));
DO_APP_FUNC(0x021743E0, void *, CFNetwork_CFNetworkCopyProxiesForAutoConfigurationScript, (void * proxyAutoConfigurationScript, void * targetURL, void * * error, MethodInfo * method));
DO_APP_FUNC(0x02174C70, CFArray *, CFNetwork_CopyProxiesForAutoConfigurationScript, (void * proxyAutoConfigurationScript, CFUrl * targetURL, MethodInfo * method));
DO_APP_FUNC(0x02174E30, CFProxy__Array *, CFNetwork_GetProxiesForAutoConfigurationScript, (void * proxyAutoConfigurationScript, CFUrl * targetURL, MethodInfo * method));
DO_APP_FUNC(0x02175220, CFProxy__Array *, CFNetwork_GetProxiesForAutoConfigurationScript_1, (void * proxyAutoConfigurationScript, Uri * targetUri, MethodInfo * method));
DO_APP_FUNC(0x02175390, CFProxy__Array *, CFNetwork_ExecuteProxyAutoConfigurationURL, (void * proxyAutoConfigURL, Uri * targetURL, MethodInfo * method));
DO_APP_FUNC(0x021758C0, void *, CFNetwork_CFNetworkCopyProxiesForURL, (void * url, void * proxySettings, MethodInfo * method));
DO_APP_FUNC(0x02175970, CFArray *, CFNetwork_CopyProxiesForURL, (CFUrl * url, CFDictionary * proxySettings, MethodInfo * method));
DO_APP_FUNC(0x02175BB0, CFProxy__Array *, CFNetwork_GetProxiesForURL, (CFUrl * url, CFProxySettings * proxySettings, MethodInfo * method));
DO_APP_FUNC(0x02175FB0, CFProxy__Array *, CFNetwork_GetProxiesForUri, (Uri * uri, CFProxySettings * proxySettings, MethodInfo * method));
DO_APP_FUNC(0x021760F0, void *, CFNetwork_CFNetworkCopySystemProxySettings, (MethodInfo * method));
DO_APP_FUNC(0x02176180, CFProxySettings *, CFNetwork_GetSystemProxySettings, (MethodInfo * method));
DO_APP_FUNC(0x02176450, IWebProxy *, CFNetwork_GetDefaultProxy, (MethodInfo * method));
DO_APP_FUNC(0x02176590, void, CFNetwork__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01D61360, void, CFNetwork_GetProxyData_Dispose, (CFNetwork_GetProxyData * __this, MethodInfo * method));
DO_APP_FUNC(0x02177C20, void, CFNetwork_GetProxyData__ctor, (CFNetwork_GetProxyData * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, CFNetwork_CFProxyAutoConfigurationResultCallback__ctor, (CFNetwork_CFProxyAutoConfigurationResultCallback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x0143DA20, void, CFNetwork_CFProxyAutoConfigurationResultCallback_Invoke, (CFNetwork_CFProxyAutoConfigurationResultCallback * __this, void * client, void * proxyList, void * error, MethodInfo * method));
DO_APP_FUNC(0x02176C40, IAsyncResult *, CFNetwork_CFProxyAutoConfigurationResultCallback_BeginInvoke, (CFNetwork_CFProxyAutoConfigurationResultCallback * __this, void * client, void * proxyList, void * error, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, CFNetwork_CFProxyAutoConfigurationResultCallback_EndInvoke, (CFNetwork_CFProxyAutoConfigurationResultCallback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CFNetwork_CFWebProxy__ctor, (CFNetwork_CFWebProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, ICredentials *, CFNetwork_CFWebProxy_get_Credentials, (CFNetwork_CFWebProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x00BA6CF0, void, CFNetwork_CFWebProxy_set_Credentials, (CFNetwork_CFWebProxy * __this, ICredentials * value, MethodInfo * method));
DO_APP_FUNC(0x02176D30, Uri *, CFNetwork_CFWebProxy_GetProxyUri, (CFProxy * proxy, NetworkCredential * * credentials, MethodInfo * method));
DO_APP_FUNC(0x02177340, Uri *, CFNetwork_CFWebProxy_GetProxyUriFromScript, (void * script, Uri * targetUri, NetworkCredential * * credentials, MethodInfo * method));
DO_APP_FUNC(0x02177540, Uri *, CFNetwork_CFWebProxy_ExecuteProxyAutoConfigurationURL, (void * proxyAutoConfigURL, Uri * targetUri, NetworkCredential * * credentials, MethodInfo * method));
DO_APP_FUNC(0x02177610, Uri *, CFNetwork_CFWebProxy_SelectProxy, (CFProxy__Array * proxies, Uri * targetUri, NetworkCredential * * credentials, MethodInfo * method));
DO_APP_FUNC(0x02177700, Uri *, CFNetwork_CFWebProxy_GetProxy, (CFNetwork_CFWebProxy * __this, Uri * targetUri, MethodInfo * method));
DO_APP_FUNC(0x02177AE0, bool, CFNetwork_CFWebProxy_IsBypassed, (CFNetwork_CFWebProxy * __this, Uri * targetUri, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CFNetwork_c_DisplayClass13_0__ctor, (CFNetwork_c_DisplayClass13_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x021766D0, void, CFNetwork_c_DisplayClass13_0__ExecuteProxyAutoConfigurationURL_b__0, (CFNetwork_c_DisplayClass13_0 * __this, void * client, void * proxyList, void * error, MethodInfo * method));
DO_APP_FUNC(0x0217C670, int32_t, BufferOffsetSize_get_EndOffset, (BufferOffsetSize * __this, MethodInfo * method));
DO_APP_FUNC(0x0217C680, int32_t, BufferOffsetSize_get_Remaining, (BufferOffsetSize * __this, MethodInfo * method));
DO_APP_FUNC(0x0217C6B0, void, BufferOffsetSize__ctor, (BufferOffsetSize * __this, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x0217C810, String *, BufferOffsetSize_ToString, (BufferOffsetSize * __this, MethodInfo * method));
DO_APP_FUNC(0x0217C920, void, BufferOffsetSize2__ctor, (BufferOffsetSize2 * __this, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x0217C9D0, void, BufferOffsetSize2_Reset, (BufferOffsetSize2 * __this, MethodInfo * method));
DO_APP_FUNC(0x0217CA70, void, BufferOffsetSize2_MakeRoom, (BufferOffsetSize2 * __this, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x0217CB80, void, BufferOffsetSize2_AppendData, (BufferOffsetSize2 * __this, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, AsyncProtocolResult_get_UserResult, (AsyncProtocolResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, ExceptionDispatchInfo *, AsyncProtocolResult_get_Error, (AsyncProtocolResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, AsyncProtocolResult__ctor, (AsyncProtocolResult * __this, int32_t result, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, AsyncProtocolResult__ctor_1, (AsyncProtocolResult * __this, ExceptionDispatchInfo * error, MethodInfo * method));
DO_APP_FUNC(0x002FA280, MobileAuthenticatedStream *, AsyncProtocolRequest_get_Parent, (AsyncProtocolRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A280, bool, AsyncProtocolRequest_get_RunSynchronously, (AsyncProtocolRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x0217ACC0, String *, AsyncProtocolRequest_get_Name, (AsyncProtocolRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A010, int32_t, AsyncProtocolRequest_get_UserResult, (AsyncProtocolRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A020, void, AsyncProtocolRequest_set_UserResult, (AsyncProtocolRequest * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0217AD00, void, AsyncProtocolRequest__ctor, (AsyncProtocolRequest * __this, MobileAuthenticatedStream * parent, bool sync, MethodInfo * method));
DO_APP_FUNC(0x0217AE60, void, AsyncProtocolRequest_RequestRead, (AsyncProtocolRequest * __this, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x0217AF40, void, AsyncProtocolRequest_RequestWrite, (AsyncProtocolRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x0217AF50, Task_1_Mono_Net_Security_AsyncProtocolResult_ *, AsyncProtocolRequest_StartOperation, (AsyncProtocolRequest * __this, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x0217B070, Task *, AsyncProtocolRequest_ProcessOperation, (AsyncProtocolRequest * __this, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x0217B180, Task_1_System_Nullable_1_ *, AsyncProtocolRequest_InnerRead, (AsyncProtocolRequest * __this, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x0217B2B0, String *, AsyncProtocolRequest_ToString, (AsyncProtocolRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x001DCE20, void, AsyncProtocolRequest_StartOperation_d_23_MoveNext, (AsyncProtocolRequest_StartOperation_d_23__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DCE30, void, AsyncProtocolRequest_StartOperation_d_23_SetStateMachine, (AsyncProtocolRequest_StartOperation_d_23__Boxed * __this, IAsyncStateMachine * stateMachine, MethodInfo * method));
DO_APP_FUNC(0x001DCE10, void, AsyncProtocolRequest_ProcessOperation_d_24_MoveNext, (AsyncProtocolRequest_ProcessOperation_d_24__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0011DCA0, void, AsyncProtocolRequest_ProcessOperation_d_24_SetStateMachine, (AsyncProtocolRequest_ProcessOperation_d_24__Boxed * __this, IAsyncStateMachine * stateMachine, MethodInfo * method));
DO_APP_FUNC(0x001DCD70, void, AsyncProtocolRequest_InnerRead_d_25_MoveNext, (AsyncProtocolRequest_InnerRead_d_25__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DCD80, void, AsyncProtocolRequest_InnerRead_d_25_SetStateMachine, (AsyncProtocolRequest_InnerRead_d_25__Boxed * __this, IAsyncStateMachine * stateMachine, MethodInfo * method));
DO_APP_FUNC(0x0217AC90, void, AsyncHandshakeRequest__ctor, (AsyncHandshakeRequest * __this, MobileAuthenticatedStream * parent, bool sync, MethodInfo * method));
DO_APP_FUNC(0x0217ACA0, AsyncOperationStatus__Enum, AsyncHandshakeRequest_Run, (AsyncHandshakeRequest * __this, AsyncOperationStatus__Enum status, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, BufferOffsetSize *, AsyncReadOrWriteRequest_get_UserBuffer, (AsyncReadOrWriteRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x004E57A0, int32_t, AsyncReadOrWriteRequest_get_CurrentSize, (AsyncReadOrWriteRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x004E57B0, void, AsyncReadOrWriteRequest_set_CurrentSize, (AsyncReadOrWriteRequest * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0217C290, void, AsyncReadOrWriteRequest__ctor, (AsyncReadOrWriteRequest * __this, MobileAuthenticatedStream * parent, bool sync, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x0217C420, String *, AsyncReadOrWriteRequest_ToString, (AsyncReadOrWriteRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x0217C520, void, AsyncReadRequest__ctor, (AsyncReadRequest * __this, MobileAuthenticatedStream * parent, bool sync, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x0217C530, AsyncOperationStatus__Enum, AsyncReadRequest_Run, (AsyncReadRequest * __this, AsyncOperationStatus__Enum status, MethodInfo * method));
DO_APP_FUNC(0x0217C520, void, AsyncWriteRequest__ctor, (AsyncWriteRequest * __this, MobileAuthenticatedStream * parent, bool sync, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x0217C5C0, AsyncOperationStatus__Enum, AsyncWriteRequest_Run, (AsyncWriteRequest * __this, AsyncOperationStatus__Enum status, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, ServerCertValidationCallbackWrapper__ctor, (ServerCertValidationCallbackWrapper * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01BD1590, bool, ServerCertValidationCallbackWrapper_Invoke, (ServerCertValidationCallbackWrapper * __this, ServerCertValidationCallback * callback, X509Certificate_1 * certificate, X509Chain * chain, MonoSslPolicyErrors__Enum sslPolicyErrors, MethodInfo * method));
DO_APP_FUNC(0x02185CC0, IAsyncResult *, ServerCertValidationCallbackWrapper_BeginInvoke, (ServerCertValidationCallbackWrapper * __this, ServerCertValidationCallback * callback, X509Certificate_1 * certificate, X509Chain * chain, MonoSslPolicyErrors__Enum sslPolicyErrors, AsyncCallback * __callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x008A1BF0, bool, ServerCertValidationCallbackWrapper_EndInvoke, (ServerCertValidationCallbackWrapper * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x0217CCD0, ICertificateValidator *, ChainValidationHelper_GetInternalValidator, (MonoTlsProvider * provider, MonoTlsSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x0217CF20, ChainValidationHelper *, ChainValidationHelper_Create, (MonoTlsProvider * provider, MonoTlsSettings * * settings, MonoTlsStream * stream, MethodInfo * method));
DO_APP_FUNC(0x0217D0B0, void, ChainValidationHelper__ctor, (ChainValidationHelper * __this, MonoTlsProvider * provider, MonoTlsSettings * settings, bool cloneSettings, MonoTlsStream * stream, ServerCertValidationCallbackWrapper * callbackWrapper, MethodInfo * method));
DO_APP_FUNC(0x01F767C0, X509Certificate_1 *, ChainValidationHelper_DefaultSelectionCallback, (String * targetHost, X509CertificateCollection_1 * localCertificates, X509Certificate_1 * remoteCertificate, String__Array * acceptableIssuers, MethodInfo * method));
DO_APP_FUNC(0x002FB930, MonoTlsSettings *, ChainValidationHelper_get_Settings, (ChainValidationHelper * __this, MethodInfo * method));
DO_APP_FUNC(0x0217D630, bool, ChainValidationHelper_SelectClientCertificate, (ChainValidationHelper * __this, String * targetHost, X509CertificateCollection_1 * localCertificates, X509Certificate_1 * remoteCertificate, String__Array * acceptableIssuers, X509Certificate_1 * * clientCertificate, MethodInfo * method));
DO_APP_FUNC(0x0217D680, ValidationResult *, ChainValidationHelper_ValidateCertificate, (ChainValidationHelper * __this, String * host, bool serverMode, X509CertificateCollection_1 * certs, MethodInfo * method));
DO_APP_FUNC(0x0217D7E0, ValidationResult *, ChainValidationHelper_ValidateCertificate_1, (ChainValidationHelper * __this, String * host, bool serverMode, X509Certificate_1 * leaf, X509Chain * chain, MethodInfo * method));
DO_APP_FUNC(0x0217D920, ValidationResult *, ChainValidationHelper_ValidateChain, (ChainValidationHelper * __this, String * host, bool server, X509Certificate_1 * leaf, X509Chain * chain, X509CertificateCollection_1 * certs, SslPolicyErrors__Enum errors, MethodInfo * method));
DO_APP_FUNC(0x0217DAD0, ValidationResult *, ChainValidationHelper_ValidateChain_1, (ChainValidationHelper * __this, String * host, bool server, X509Certificate_1 * leaf, X509Chain * * chain, X509CertificateCollection_1 * certs, SslPolicyErrors__Enum errors, MethodInfo * method));
DO_APP_FUNC(0x0217E0D0, void, MobileAuthenticatedStream__ctor, (MobileAuthenticatedStream * __this, Stream * innerStream, bool leaveInnerStreamOpen, SslStream * owner, MonoTlsSettings * settings, MonoTlsProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x002FBC20, MonoTlsSettings *, MobileAuthenticatedStream_get_Settings, (MobileAuthenticatedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC40, MonoTlsProvider *, MobileAuthenticatedStream_get_Provider, (MobileAuthenticatedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x0217E440, void, MobileAuthenticatedStream_CheckThrow, (MobileAuthenticatedStream * __this, bool authSuccessCheck, bool shutdownCheck, MethodInfo * method));
DO_APP_FUNC(0x0217E580, Exception *, MobileAuthenticatedStream_GetSSPIException, (Exception * e, MethodInfo * method));
DO_APP_FUNC(0x0217E7E0, Exception *, MobileAuthenticatedStream_GetIOException, (Exception * e, String * message, MethodInfo * method));
DO_APP_FUNC(0x0217EA40, ExceptionDispatchInfo *, MobileAuthenticatedStream_SetException, (MobileAuthenticatedStream * __this, Exception * e, MethodInfo * method));
DO_APP_FUNC(0x0217EA70, void, MobileAuthenticatedStream_AuthenticateAsClient, (MobileAuthenticatedStream * __this, String * targetHost, X509CertificateCollection_1 * clientCertificates, SslProtocols__Enum enabledSslProtocols, bool checkCertificateRevocation, MethodInfo * method));
DO_APP_FUNC(0x0217EAD0, void, MobileAuthenticatedStream_AuthenticateAsServer, (MobileAuthenticatedStream * __this, X509Certificate_1 * serverCertificate, bool clientCertificateRequired, SslProtocols__Enum enabledSslProtocols, bool checkCertificateRevocation, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, AuthenticatedStream *, MobileAuthenticatedStream_get_AuthenticatedStream, (MobileAuthenticatedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x0217EBD0, Task *, MobileAuthenticatedStream_ProcessAuthentication, (MobileAuthenticatedStream * __this, bool runSynchronously, bool serverMode, String * targetHost, SslProtocols__Enum enabledProtocols, X509Certificate_1 * serverCertificate, X509CertificateCollection_1 * clientCertificates, bool clientCertRequired, MethodInfo * method));
DO_APP_FUNC(0x0217ED20, IAsyncResult *, MobileAuthenticatedStream_BeginRead, (MobileAuthenticatedStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * asyncCallback, Object * asyncState, MethodInfo * method));
DO_APP_FUNC(0x0217EEF0, int32_t, MobileAuthenticatedStream_EndRead, (MobileAuthenticatedStream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x0217EF70, IAsyncResult *, MobileAuthenticatedStream_BeginWrite, (MobileAuthenticatedStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * asyncCallback, Object * asyncState, MethodInfo * method));
DO_APP_FUNC(0x0200A6B0, void, MobileAuthenticatedStream_EndWrite, (MobileAuthenticatedStream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x0217F140, int32_t, MobileAuthenticatedStream_Read, (MobileAuthenticatedStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0217F340, void, MobileAuthenticatedStream_Write, (MobileAuthenticatedStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0217F510, Task_1_System_Int32_ *, MobileAuthenticatedStream_ReadAsync, (MobileAuthenticatedStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x0217F6B0, Task *, MobileAuthenticatedStream_WriteAsync, (MobileAuthenticatedStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x0217F850, Task_1_System_Int32_ *, MobileAuthenticatedStream_StartOperation, (MobileAuthenticatedStream * __this, MobileAuthenticatedStream_OperationType__Enum type, AsyncProtocolRequest * asyncRequest, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x0217F9A0, int32_t, MobileAuthenticatedStream_InternalRead, (MobileAuthenticatedStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, bool * outWantMore, MethodInfo * method));
DO_APP_FUNC(0x0217FC10, ValueTuple_2_Int32_Boolean_, MobileAuthenticatedStream_InternalRead_1, (MobileAuthenticatedStream * __this, AsyncProtocolRequest * asyncRequest, BufferOffsetSize * internalBuffer, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x0217FD90, bool, MobileAuthenticatedStream_InternalWrite, (MobileAuthenticatedStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x0217FEC0, bool, MobileAuthenticatedStream_InternalWrite_1, (MobileAuthenticatedStream * __this, AsyncProtocolRequest * asyncRequest, BufferOffsetSize2 * internalBuffer, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x02180120, Task_1_System_Int32_ *, MobileAuthenticatedStream_InnerRead, (MobileAuthenticatedStream * __this, bool sync, int32_t requestedSize, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x02180260, Task *, MobileAuthenticatedStream_InnerWrite, (MobileAuthenticatedStream * __this, bool sync, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x02180390, AsyncOperationStatus__Enum, MobileAuthenticatedStream_ProcessHandshake, (MobileAuthenticatedStream * __this, AsyncOperationStatus__Enum status, MethodInfo * method));
DO_APP_FUNC(0x02180610, ValueTuple_2_Int32_Boolean_, MobileAuthenticatedStream_ProcessRead, (MobileAuthenticatedStream * __this, BufferOffsetSize * userBuffer, MethodInfo * method));
DO_APP_FUNC(0x02180760, ValueTuple_2_Int32_Boolean_, MobileAuthenticatedStream_ProcessWrite, (MobileAuthenticatedStream * __this, BufferOffsetSize * userBuffer, MethodInfo * method));
DO_APP_FUNC(0x021808B0, bool, MobileAuthenticatedStream_get_IsAuthenticated, (MobileAuthenticatedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x021809C0, void, MobileAuthenticatedStream_Dispose, (MobileAuthenticatedStream * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01706BF0, void, MobileAuthenticatedStream_Flush, (MobileAuthenticatedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x02180CD0, X509Certificate_1 *, MobileAuthenticatedStream_get_InternalLocalCertificate, (MobileAuthenticatedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x02180E80, int64_t, MobileAuthenticatedStream_Seek, (MobileAuthenticatedStream * __this, int64_t offset, SeekOrigin__Enum origin, MethodInfo * method));
DO_APP_FUNC(0x01706CB0, void, MobileAuthenticatedStream_SetLength, (MobileAuthenticatedStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x02180ED0, bool, MobileAuthenticatedStream_get_CanRead, (MobileAuthenticatedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD21E0, bool, MobileAuthenticatedStream_get_CanTimeout, (MobileAuthenticatedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x02180F20, bool, MobileAuthenticatedStream_get_CanWrite, (MobileAuthenticatedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, MobileAuthenticatedStream_get_CanSeek, (MobileAuthenticatedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01706DD0, int64_t, MobileAuthenticatedStream_get_Length, (MobileAuthenticatedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01706E00, int64_t, MobileAuthenticatedStream_get_Position, (MobileAuthenticatedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x02180F90, void, MobileAuthenticatedStream_set_Position, (MobileAuthenticatedStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x02180FE0, int32_t, MobileAuthenticatedStream_get_ReadTimeout, (MobileAuthenticatedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x02181010, void, MobileAuthenticatedStream_set_ReadTimeout, (MobileAuthenticatedStream * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x02181040, int32_t, MobileAuthenticatedStream_get_WriteTimeout, (MobileAuthenticatedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x02181070, void, MobileAuthenticatedStream_set_WriteTimeout, (MobileAuthenticatedStream * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x021810A0, void, MobileAuthenticatedStream__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02181120, void, MobileAuthenticatedStream__InnerWrite_b__67_0, (MobileAuthenticatedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x001DCF70, void, MobileAuthenticatedStream_ProcessAuthentication_d_47_MoveNext, (MobileAuthenticatedStream_ProcessAuthentication_d_47__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0011DCA0, void, MobileAuthenticatedStream_ProcessAuthentication_d_47_SetStateMachine, (MobileAuthenticatedStream_ProcessAuthentication_d_47__Boxed * __this, IAsyncStateMachine * stateMachine, MethodInfo * method));
DO_APP_FUNC(0x001DCF80, void, MobileAuthenticatedStream_StartOperation_d_58_MoveNext, (MobileAuthenticatedStream_StartOperation_d_58__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DCF90, void, MobileAuthenticatedStream_StartOperation_d_58_SetStateMachine, (MobileAuthenticatedStream_StartOperation_d_58__Boxed * __this, IAsyncStateMachine * stateMachine, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MobileAuthenticatedStream_c_DisplayClass66_0__ctor, (MobileAuthenticatedStream_c_DisplayClass66_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x02181170, int32_t, MobileAuthenticatedStream_c_DisplayClass66_0__InnerRead_b__0, (MobileAuthenticatedStream_c_DisplayClass66_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x001DCEC0, void, MobileAuthenticatedStream_InnerRead_d_66_MoveNext, (MobileAuthenticatedStream_InnerRead_d_66__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DCED0, void, MobileAuthenticatedStream_InnerRead_d_66_SetStateMachine, (MobileAuthenticatedStream_InnerRead_d_66__Boxed * __this, IAsyncStateMachine * stateMachine, MethodInfo * method));
DO_APP_FUNC(0x001DCF60, void, MobileAuthenticatedStream_InnerWrite_d_67_MoveNext, (MobileAuthenticatedStream_InnerWrite_d_67__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0011DCA0, void, MobileAuthenticatedStream_InnerWrite_d_67_SetStateMachine, (MobileAuthenticatedStream_InnerWrite_d_67__Boxed * __this, IAsyncStateMachine * stateMachine, MethodInfo * method));
DO_APP_FUNC(0x02182D80, void, MobileTlsContext__ctor, (MobileTlsContext * __this, MobileAuthenticatedStream * parent, bool serverMode, String * targetHost, SslProtocols__Enum enabledProtocols, X509Certificate_1 * serverCertificate, X509CertificateCollection_1 * clientCertificates, bool askForClientCert, MethodInfo * method));
DO_APP_FUNC(0x002FA280, MobileAuthenticatedStream *, MobileTlsContext_get_Parent, (MobileTlsContext * __this, MethodInfo * method));
DO_APP_FUNC(0x02182EF0, MonoTlsSettings *, MobileTlsContext_get_Settings, (MobileTlsContext * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A280, bool, MobileTlsContext_get_IsServer, (MobileTlsContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, MobileTlsContext_get_TargetHost, (MobileTlsContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, MobileTlsContext_get_ServerName, (MobileTlsContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, X509CertificateCollection_1 *, MobileTlsContext_get_ClientCertificates, (MobileTlsContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, X509Certificate_1 *, MobileTlsContext_get_LocalServerCertificate, (MobileTlsContext * __this, MethodInfo * method));
DO_APP_FUNC(0x02182F10, bool, MobileTlsContext_ValidateCertificate, (MobileTlsContext * __this, X509Certificate_1 * leaf, X509Chain * chain, MethodInfo * method));
DO_APP_FUNC(0x02183060, bool, MobileTlsContext_ValidateCertificate_1, (MobileTlsContext * __this, X509CertificateCollection_1 * certificates, MethodInfo * method));
DO_APP_FUNC(0x021831B0, X509Certificate_1 *, MobileTlsContext_SelectClientCertificate, (MobileTlsContext * __this, X509Certificate_1 * serverCertificate, String__Array * acceptableIssuers, MethodInfo * method));
DO_APP_FUNC(0x021833C0, void, MobileTlsContext_Dispose, (MobileTlsContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MobileTlsContext_Dispose_1, (MobileTlsContext * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x02183470, void, MobileTlsContext_Finalize, (MobileTlsContext * __this, MethodInfo * method));
DO_APP_FUNC(0x021834F0, MonoTlsProvider *, MonoTlsProviderFactory_GetProviderInternal, (MethodInfo * method));
DO_APP_FUNC(0x021836A0, void, MonoTlsProviderFactory_InitializeInternal, (MethodInfo * method));
DO_APP_FUNC(0x02183B20, MonoTlsProvider *, MonoTlsProviderFactory_LookupProvider, (String * name, bool throwOnError, MethodInfo * method));
DO_APP_FUNC(0x021840B0, void, MonoTlsProviderFactory_InitializeProviderRegistration, (MethodInfo * method));
DO_APP_FUNC(0x02184A00, MonoTlsProvider *, MonoTlsProviderFactory_CreateDefaultProviderImpl, (MethodInfo * method));
DO_APP_FUNC(0x02184AC0, MonoTlsProvider *, MonoTlsProviderFactory_GetProvider, (MethodInfo * method));
DO_APP_FUNC(0x02184B90, void, MonoTlsProviderFactory__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FB950, HttpWebRequest *, MonoTlsStream_get_Request, (MonoTlsStream * __this, MethodInfo * method));
DO_APP_FUNC(0x003FC7F0, WebExceptionStatus__Enum, MonoTlsStream_get_ExceptionStatus, (MonoTlsStream * __this, MethodInfo * method));
DO_APP_FUNC(0x004E5A00, bool, MonoTlsStream_get_CertificateValidationFailed, (MonoTlsStream * __this, MethodInfo * method));
DO_APP_FUNC(0x004E5A10, void, MonoTlsStream_set_CertificateValidationFailed, (MonoTlsStream * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x02184DA0, void, MonoTlsStream__ctor, (MonoTlsStream * __this, HttpWebRequest * request, NetworkStream * networkStream, MethodInfo * method));
DO_APP_FUNC(0x02184EA0, Stream *, MonoTlsStream_CreateStream, (MonoTlsStream * __this, Byte__Array * buffer, MethodInfo * method));
DO_APP_FUNC(0x021853D0, Object *, NoReflectionHelper_GetInternalValidator, (Object * provider, Object * settings, MethodInfo * method));
DO_APP_FUNC(0x021854E0, Object *, NoReflectionHelper_GetProvider, (MethodInfo * method));
DO_APP_FUNC(0x02185DB0, void, SystemCertificateValidator__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02185E70, X509Chain *, SystemCertificateValidator_CreateX509Chain, (X509CertificateCollection_1 * certs, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, SystemCertificateValidator_NeedsChain, (MonoTlsSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x02185570, MonoRemoteCertificateValidationCallback *, CallbackHelpers_PublicToMono, (RemoteCertificateValidationCallback * callback, MethodInfo * method));
DO_APP_FUNC(0x021857B0, RemoteCertificateValidationCallback *, CallbackHelpers_MonoToPublic, (MonoRemoteCertificateValidationCallback * callback, MethodInfo * method));
DO_APP_FUNC(0x021859F0, LocalCertSelectionCallback *, CallbackHelpers_MonoToInternal, (MonoLocalCertificateSelectionCallback * callback, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CallbackHelpers_c_DisplayClass0_0__ctor, (CallbackHelpers_c_DisplayClass0_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x02185C30, bool, CallbackHelpers_c_DisplayClass0_0__PublicToMono_b__0, (CallbackHelpers_c_DisplayClass0_0 * __this, String * h, X509Certificate_1 * c, X509Chain * ch, MonoSslPolicyErrors__Enum e, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CallbackHelpers_c_DisplayClass5_0__ctor, (CallbackHelpers_c_DisplayClass5_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x02185C60, bool, CallbackHelpers_c_DisplayClass5_0__MonoToPublic_b__0, (CallbackHelpers_c_DisplayClass5_0 * __this, Object * t, X509Certificate_1 * c, X509Chain * ch, SslPolicyErrors__Enum e, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CallbackHelpers_c_DisplayClass8_0__ctor, (CallbackHelpers_c_DisplayClass8_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x02185C90, X509Certificate_1 *, CallbackHelpers_c_DisplayClass8_0__MonoToInternal_b__0, (CallbackHelpers_c_DisplayClass8_0 * __this, String * t, X509CertificateCollection_1 * lc, X509Certificate_1 * rc, String__Array * ai, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, NtlmSession__ctor, (NtlmSession * __this, MethodInfo * method));
DO_APP_FUNC(0x02172D70, Authorization *, NtlmSession_Authenticate, (NtlmSession * __this, String * challenge, WebRequest * webRequest, ICredentials * credentials, MethodInfo * method));
DO_APP_FUNC(0x02172460, Authorization *, NtlmClient_Authenticate, (NtlmClient * __this, String * challenge, WebRequest * webRequest, ICredentials * credentials, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Authorization *, NtlmClient_PreAuthenticate, (NtlmClient * __this, WebRequest * webRequest, ICredentials * credentials, MethodInfo * method));
DO_APP_FUNC(0x02172920, String *, NtlmClient_get_AuthenticationType, (NtlmClient * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, NtlmClient_get_CanPreAuthenticate, (NtlmClient * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, NtlmClient__ctor, (NtlmClient * __this, MethodInfo * method));
DO_APP_FUNC(0x021729A0, void, NtlmClient__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02172AF0, void, NtlmClient_c__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, NtlmClient_c__ctor, (NtlmClient_c * __this, MethodInfo * method));
DO_APP_FUNC(0x02172C30, NtlmSession *, NtlmClient_c__Authenticate_b__1_0, (NtlmClient_c * __this, HttpWebRequest * x, MethodInfo * method));
DO_APP_FUNC(0x02171B50, bool, NativeMethods_DuplicateHandle, (HandleRef hSourceProcessHandle, SafeHandle * hSourceHandle, HandleRef hTargetProcess, SafeWaitHandle * * targetHandle, int32_t dwDesiredAccess, bool bInheritHandle, int32_t dwOptions, MethodInfo * method));
DO_APP_FUNC(0x02171E30, bool, NativeMethods_DuplicateHandle_1, (HandleRef hSourceProcessHandle, HandleRef hSourceHandle, HandleRef hTargetProcess, SafeProcessHandle * * targetHandle, int32_t dwDesiredAccess, bool bInheritHandle, int32_t dwOptions, MethodInfo * method));
DO_APP_FUNC(0x02172050, void *, NativeMethods_GetCurrentProcess, (MethodInfo * method));
DO_APP_FUNC(0x02172060, bool, NativeMethods_GetExitCodeProcess, (void * processHandle, int32_t * exitCode, MethodInfo * method));
DO_APP_FUNC(0x02172080, bool, NativeMethods_GetExitCodeProcess_1, (SafeProcessHandle * processHandle, int32_t * exitCode, MethodInfo * method));
DO_APP_FUNC(0x0173D7D0, bool, NativeMethods_TerminateProcess, (void * processHandle, int32_t exitCode, MethodInfo * method));
DO_APP_FUNC(0x02172180, bool, NativeMethods_TerminateProcess_1, (SafeProcessHandle * processHandle, int32_t exitCode, MethodInfo * method));
DO_APP_FUNC(0x02172250, int32_t, NativeMethods_GetCurrentProcessId, (MethodInfo * method));
DO_APP_FUNC(0x02172260, bool, NativeMethods_CloseProcess, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x02172280, void, SafeProcessHandle__ctor, (SafeProcessHandle * __this, void * handle, MethodInfo * method));
DO_APP_FUNC(0x021722B0, void, SafeProcessHandle__ctor_1, (SafeProcessHandle * __this, void * existingHandle, bool ownsHandle, MethodInfo * method));
DO_APP_FUNC(0x021722E0, bool, SafeProcessHandle_ReleaseHandle, (SafeProcessHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x02172300, void, SafeProcessHandle__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02A8E0F0, void, UriBuilder__ctor, (UriBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02A8E220, void, UriBuilder__ctor_1, (UriBuilder * __this, Uri * uri, MethodInfo * method));
DO_APP_FUNC(0x02A8E3A0, void, UriBuilder_Init, (UriBuilder * __this, Uri * uri, MethodInfo * method));
DO_APP_FUNC(0x02A8E560, void, UriBuilder_set_Host, (UriBuilder * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x02A8E670, void, UriBuilder_set_Path, (UriBuilder * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x02A8E860, void, UriBuilder_set_Query, (UriBuilder * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x02A8E940, void, UriBuilder_set_Scheme, (UriBuilder * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x02A8EBE0, Uri *, UriBuilder_get_Uri, (UriBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02A8ED70, bool, UriBuilder_Equals, (UriBuilder * __this, Object * rparam, MethodInfo * method));
DO_APP_FUNC(0x02A8EDE0, int32_t, UriBuilder_GetHashCode, (UriBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x02A8EE10, void, UriBuilder_SetFieldsFromUri, (UriBuilder * __this, Uri * uri, MethodInfo * method));
DO_APP_FUNC(0x02A8EFC0, String *, UriBuilder_ToString, (UriBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SecurityUtils_DemandReflectionAccess, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SecurityUtils_DemandGrantSet, (Assembly * assembly, MethodInfo * method));
DO_APP_FUNC(0x02580230, bool, SecurityUtils_HasReflectionPermission, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x025802D0, Object *, SecurityUtils_SecureCreateInstance, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x02580370, Object *, SecurityUtils_SecureCreateInstance_1, (Type * type, Object__Array * args, bool allowNonPublic, MethodInfo * method));
DO_APP_FUNC(0x025804F0, Object *, SecurityUtils_SecureCreateInstance_2, (Type * type, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x025805A0, Object *, SecurityUtils_SecureConstructorInvoke, (Type * type, Type__Array * argTypes, Object__Array * args, bool allowNonPublic, MethodInfo * method));
DO_APP_FUNC(0x02580680, Object *, SecurityUtils_SecureConstructorInvoke_1, (Type * type, Type__Array * argTypes, Object__Array * args, bool allowNonPublic, BindingFlags__Enum extraFlags, MethodInfo * method));
DO_APP_FUNC(0x02580840, bool, SecurityUtils_GenericArgumentsAreVisible, (MethodInfo_1 * method_1, MethodInfo * method));
DO_APP_FUNC(0x025808F0, Object *, SecurityUtils_MethodInfoInvoke, (MethodInfo_1 * method_1, Object * target, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SecurityUtils__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0200CED0, void, InvariantComparer__ctor, (InvariantComparer * __this, MethodInfo * method));
DO_APP_FUNC(0x0200CF90, int32_t, InvariantComparer_Compare, (InvariantComparer * __this, Object * a, Object * b, MethodInfo * method));
DO_APP_FUNC(0x0200D0C0, void, InvariantComparer__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0200D2B0, bool, IriHelper_CheckIriUnicodeRange, (uint16_t unicode, bool isQuery, MethodInfo * method));
DO_APP_FUNC(0x0200D320, bool, IriHelper_CheckIriUnicodeRange_1, (uint16_t highSurr, uint16_t lowSurr, bool * surrogatePair, bool isQuery, MethodInfo * method));
DO_APP_FUNC(0x0200DBB0, bool, IriHelper_CheckIsReserved, (uint16_t ch, UriComponents__Enum component, MethodInfo * method));
DO_APP_FUNC(0x0200DD90, String *, IriHelper_EscapeUnescapeIri, (uint16_t * pInput, int32_t start, int32_t end, UriComponents__Enum component, MethodInfo * method));
DO_APP_FUNC(0x02A7C400, bool, Uri_get_IsImplicitFile, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7C410, bool, Uri_get_IsUncOrDosPath, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7C420, bool, Uri_get_IsDosPath, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7C430, bool, Uri_get_IsUncPath, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7C440, Uri_Flags__Enum, Uri_get_HostType, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, UriParser *, Uri_get_Syntax, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x0051C040, bool, Uri_get_IsNotAbsoluteUri, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7C450, bool, Uri_IriParsingStatic, (UriParser * syntax, MethodInfo * method));
DO_APP_FUNC(0x02A7C530, bool, Uri_get_AllowIdn, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7C650, bool, Uri_AllowIdnStatic, (Uri * __this, UriParser * syntax, Uri_Flags__Enum flags, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Uri_IsIntranet, (Uri * __this, String * schemeHost, MethodInfo * method));
DO_APP_FUNC(0x02A7C7A0, bool, Uri_get_UserDrivenParsing, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7C7B0, void, Uri_SetUserDrivenParsing, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7C7D0, uint16_t, Uri_get_SecuredPathIndex, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7C830, bool, Uri_NotAny, (Uri * __this, Uri_Flags__Enum flags, MethodInfo * method));
DO_APP_FUNC(0x02A7C840, bool, Uri_InFact, (Uri * __this, Uri_Flags__Enum flags, MethodInfo * method));
DO_APP_FUNC(0x02A7C850, bool, Uri_StaticNotAny, (Uri_Flags__Enum allFlags, Uri_Flags__Enum checkFlags, MethodInfo * method));
DO_APP_FUNC(0x02A7C860, bool, Uri_StaticInFact, (Uri_Flags__Enum allFlags, Uri_Flags__Enum checkFlags, MethodInfo * method));
DO_APP_FUNC(0x02A7C870, Uri_UriInfo *, Uri_EnsureUriInfo, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7C8A0, void, Uri_EnsureParseRemaining, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7C8C0, void, Uri_EnsureHostString, (Uri * __this, bool allowDnsOptimization, MethodInfo * method));
DO_APP_FUNC(0x02A7C920, void, Uri__ctor, (Uri * __this, String * uriString, MethodInfo * method));
DO_APP_FUNC(0x02A7CA00, void, Uri__ctor_1, (Uri * __this, String * uriString, UriKind__Enum uriKind, MethodInfo * method));
DO_APP_FUNC(0x02A7CAE0, void, Uri__ctor_2, (Uri * __this, Uri * baseUri, String * relativeUri, MethodInfo * method));
DO_APP_FUNC(0x02A7CC00, void, Uri_CreateUri, (Uri * __this, Uri * baseUri, String * relativeUri, bool dontEscape, MethodInfo * method));
DO_APP_FUNC(0x02A7CE20, void, Uri__ctor_3, (Uri * __this, Uri * baseUri, Uri * relativeUri, MethodInfo * method));
DO_APP_FUNC(0x02A7D090, ParsingError__Enum, Uri_GetCombinedString, (Uri * baseUri, String * relativeStr, bool dontEscape, String * * result, MethodInfo * method));
DO_APP_FUNC(0x02A7D2F0, UriFormatException *, Uri_GetException, (ParsingError__Enum err, MethodInfo * method));
DO_APP_FUNC(0x02A7D930, void, Uri__ctor_4, (Uri * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x02A7DA50, void, Uri_System_Runtime_Serialization_ISerializable_GetObjectData, (Uri * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x02A7DA50, void, Uri_GetObjectData, (Uri * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x02A7DB70, String *, Uri_get_AbsolutePath, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7DC80, String *, Uri_get_PrivateAbsolutePath, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7DE30, String *, Uri_get_AbsoluteUri, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7E030, String *, Uri_get_LocalPath, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7E100, String *, Uri_get_Authority, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7E1E0, UriHostNameType__Enum, Uri_get_HostNameType, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7E380, bool, Uri_get_IsDefaultPort, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7E4A0, bool, Uri_get_IsFile, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7E5A0, bool, Uri_get_IsLoopback, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7E6B0, String *, Uri_get_PathAndQuery, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7E7D0, String__Array *, Uri_get_Segments, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7EAB0, bool, Uri_get_IsUnc, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7EB80, String *, Uri_get_Host, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7EC60, bool, Uri_StaticIsFile, (UriParser * syntax, MethodInfo * method));
DO_APP_FUNC(0x02A7EC80, Object *, Uri_get_InitializeLock, (MethodInfo * method));
DO_APP_FUNC(0x02A7EE60, void, Uri_InitializeUriConfig, (MethodInfo * method));
DO_APP_FUNC(0x02A7F0C0, String *, Uri_GetLocalPath, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7F930, int32_t, Uri_get_Port, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7FA90, String *, Uri_get_Query, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7FC90, String *, Uri_get_Fragment, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7FE90, String *, Uri_get_Scheme, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7FF60, bool, Uri_get_OriginalStringSwitched, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7FFD0, String *, Uri_get_OriginalString, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A80030, String *, Uri_get_DnsSafeHost, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x00519280, bool, Uri_get_IsAbsoluteUri, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A80350, bool, Uri_get_UserEscaped, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A80360, String *, Uri_get_UserInfo, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A80440, UriHostNameType__Enum, Uri_CheckHostName, (String * name, MethodInfo * method));
DO_APP_FUNC(0x02A80750, String *, Uri_GetLeftPart, (Uri * __this, UriPartial__Enum part, MethodInfo * method));
DO_APP_FUNC(0x02A808E0, bool, Uri_IsGenDelim, (uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x02A80910, bool, Uri_CheckSchemeName, (String * schemeName, MethodInfo * method));
DO_APP_FUNC(0x02A80A90, bool, Uri_IsHexDigit, (uint16_t character, MethodInfo * method));
DO_APP_FUNC(0x02A80AC0, int32_t, Uri_FromHex, (uint16_t digit, MethodInfo * method));
DO_APP_FUNC(0x02A80BB0, int32_t, Uri_GetHashCode, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A80DF0, String *, Uri_ToString, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A80EE0, bool, Uri_op_Equality, (Uri * uri1, Uri * uri2, MethodInfo * method));
DO_APP_FUNC(0x02A80F10, bool, Uri_op_Inequality, (Uri * uri1, Uri * uri2, MethodInfo * method));
DO_APP_FUNC(0x02A80F60, bool, Uri_Equals, (Uri * __this, Object * comparand, MethodInfo * method));
DO_APP_FUNC(0x02A81890, bool, Uri_CheckForColonInFirstPathSegment, (String * uriString, MethodInfo * method));
DO_APP_FUNC(0x02A81990, String *, Uri_InternalEscapeString, (String * rawString, MethodInfo * method));
DO_APP_FUNC(0x02A81AE0, ParsingError__Enum, Uri_ParseScheme, (String * uriString, Uri_Flags__Enum * flags, UriParser * * syntax, MethodInfo * method));
DO_APP_FUNC(0x02A81C00, UriFormatException *, Uri_ParseMinimal, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A81CD0, ParsingError__Enum, Uri_PrivateParseMinimal, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A82550, void, Uri_PrivateParseMinimalIri, (Uri * __this, String * newHost, uint16_t idx, MethodInfo * method));
DO_APP_FUNC(0x02A82660, void, Uri_CreateUriInfo, (Uri * __this, Uri_Flags__Enum cF, MethodInfo * method));
DO_APP_FUNC(0x02A82DE0, void, Uri_CreateHostString, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A83350, String *, Uri_CreateHostStringHelper, (String * str, uint16_t idx, uint16_t end, Uri_Flags__Enum * flags, String * * scopeId, MethodInfo * method));
DO_APP_FUNC(0x02A83590, void, Uri_GetHostViaCustomSyntax, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A83AC0, String *, Uri_GetParts, (Uri * __this, UriComponents__Enum uriParts, UriFormat__Enum formatAs, MethodInfo * method));
DO_APP_FUNC(0x02A83AD0, String *, Uri_GetEscapedParts, (Uri * __this, UriComponents__Enum uriParts, MethodInfo * method));
DO_APP_FUNC(0x02A83C00, String *, Uri_GetUnescapedParts, (Uri * __this, UriComponents__Enum uriParts, UriFormat__Enum formatAs, MethodInfo * method));
DO_APP_FUNC(0x02A83D00, String *, Uri_ReCreateParts, (Uri * __this, UriComponents__Enum parts, uint16_t nonCanonical, UriFormat__Enum formatAs, MethodInfo * method));
DO_APP_FUNC(0x02A85070, String *, Uri_GetUriPartsFromUserString, (Uri * __this, UriComponents__Enum uriParts, MethodInfo * method));
DO_APP_FUNC(0x02A858A0, void, Uri_ParseRemaining, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A866D0, uint16_t, Uri_ParseSchemeCheckImplicitFile, (uint16_t * uriString, uint16_t length, ParsingError__Enum * err, Uri_Flags__Enum * flags, UriParser * * syntax, MethodInfo * method));
DO_APP_FUNC(0x02A86BB0, bool, Uri_CheckKnownSchemes, (int64_t * lptr, uint16_t nChars, UriParser * * syntax, MethodInfo * method));
DO_APP_FUNC(0x02A871A0, ParsingError__Enum, Uri_CheckSchemeSyntax, (uint16_t * ptr, uint16_t length, UriParser * * syntax, MethodInfo * method));
DO_APP_FUNC(0x02A87300, uint16_t, Uri_CheckAuthorityHelper, (Uri * __this, uint16_t * pString, uint16_t idx, uint16_t length, ParsingError__Enum * err, Uri_Flags__Enum * flags, UriParser * syntax, String * * newHost, MethodInfo * method));
DO_APP_FUNC(0x02A881D0, void, Uri_CheckAuthorityHelperHandleDnsIri, (Uri * __this, uint16_t * pString, uint16_t start, int32_t end, int32_t startInput, bool iriParsing, bool hasUnicode, UriParser * syntax, String * userInfoString, Uri_Flags__Enum * flags, bool * justNormalized, String * * newHost, ParsingError__Enum * err, MethodInfo * method));
DO_APP_FUNC(0x02A88610, void, Uri_CheckAuthorityHelperHandleAnyHostIri, (Uri * __this, uint16_t * pString, int32_t startInput, int32_t end, bool iriParsing, bool hasUnicode, UriParser * syntax, Uri_Flags__Enum * flags, String * * newHost, ParsingError__Enum * err, MethodInfo * method));
DO_APP_FUNC(0x02A88910, void, Uri_FindEndOfComponent, (Uri * __this, String * input, uint16_t * idx, uint16_t end, uint16_t delim, MethodInfo * method));
DO_APP_FUNC(0x02A88990, void, Uri_FindEndOfComponent_1, (Uri * __this, uint16_t * str, uint16_t * idx, uint16_t end, uint16_t delim, MethodInfo * method));
DO_APP_FUNC(0x02A88A00, Uri_Check__Enum, Uri_CheckCanonical, (Uri * __this, uint16_t * str, uint16_t * idx, uint16_t end, uint16_t delim, MethodInfo * method));
DO_APP_FUNC(0x02A88E90, Char__Array *, Uri_GetCanonicalPath, (Uri * __this, Char__Array * dest, int32_t * pos, UriFormat__Enum formatAs, MethodInfo * method));
DO_APP_FUNC(0x02A897D0, void, Uri_UnescapeOnly, (uint16_t * pch, int32_t start, int32_t * end, uint16_t ch1, uint16_t ch2, uint16_t ch3, MethodInfo * method));
DO_APP_FUNC(0x02A89A00, Char__Array *, Uri_Compress, (Char__Array * dest, uint16_t start, int32_t * destLength, UriParser * syntax, MethodInfo * method));
DO_APP_FUNC(0x02A89F30, int32_t, Uri_CalculateCaseInsensitiveHashCode, (String * text, MethodInfo * method));
DO_APP_FUNC(0x02A89FF0, String *, Uri_CombineUri, (Uri * basePart, String * relativePart, UriFormat__Enum uriFormat, MethodInfo * method));
DO_APP_FUNC(0x02A8ABD0, bool, Uri_get_HasAuthority, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A8ABE0, bool, Uri_IsLWS, (uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x02A8AC10, bool, Uri_IsAsciiLetter, (uint16_t character, MethodInfo * method));
DO_APP_FUNC(0x02A8AC30, bool, Uri_IsAsciiLetterOrDigit, (uint16_t character, MethodInfo * method));
DO_APP_FUNC(0x02A8AD00, bool, Uri_IsBidiControlCharacter, (uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x02A8AD40, String *, Uri_StripBidiControlCharacter, (uint16_t * strToClean, int32_t start, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x02A8AEE0, void, Uri_CreateThis, (Uri * __this, String * uri, bool dontEscape, UriKind__Enum uriKind, MethodInfo * method));
DO_APP_FUNC(0x02A8B0D0, void, Uri_InitializeUri, (Uri * __this, ParsingError__Enum err, UriKind__Enum uriKind, UriFormatException * * e, MethodInfo * method));
DO_APP_FUNC(0x02A8B840, bool, Uri_CheckForConfigLoad, (Uri * __this, String * data, MethodInfo * method));
DO_APP_FUNC(0x02A8B8E0, bool, Uri_CheckForUnicode, (Uri * __this, String * data, MethodInfo * method));
DO_APP_FUNC(0x02A8BA50, bool, Uri_CheckForEscapedUnreserved, (Uri * __this, String * data, MethodInfo * method));
DO_APP_FUNC(0x02A8BC80, bool, Uri_TryCreate, (String * uriString, UriKind__Enum uriKind, Uri * * result, MethodInfo * method));
DO_APP_FUNC(0x02A8BD90, bool, Uri_TryCreate_1, (Uri * baseUri, String * relativeUri, Uri * * result, MethodInfo * method));
DO_APP_FUNC(0x02A8BEB0, bool, Uri_TryCreate_2, (Uri * baseUri, Uri * relativeUri, Uri * * result, MethodInfo * method));
DO_APP_FUNC(0x02A8C0B0, String *, Uri_GetComponents, (Uri * __this, UriComponents__Enum components, UriFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x02A8C290, bool, Uri_IsWellFormedOriginalString, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A8C2D0, bool, Uri_IsWellFormedUriString, (String * uriString, UriKind__Enum uriKind, MethodInfo * method));
DO_APP_FUNC(0x02A8C400, bool, Uri_InternalIsWellFormedOriginalString, (Uri * __this, MethodInfo * method));
DO_APP_FUNC(0x02A8CA10, String *, Uri_UnescapeDataString, (String * stringToUnescape, MethodInfo * method));
DO_APP_FUNC(0x02A8CBC0, String *, Uri_EscapeUnescapeIri, (Uri * __this, String * input, int32_t start, int32_t end, UriComponents__Enum component, MethodInfo * method));
DO_APP_FUNC(0x02A8CBF0, void, Uri__ctor_5, (Uri * __this, Uri_Flags__Enum flags, UriParser * uriParser, String * uri, MethodInfo * method));
DO_APP_FUNC(0x02A8CC00, Uri *, Uri_CreateHelper, (String * uriString, bool dontEscape, UriKind__Enum uriKind, UriFormatException * * e, MethodInfo * method));
DO_APP_FUNC(0x02A8CF90, Uri *, Uri_ResolveHelper, (Uri * baseUri, Uri * relativeUri, String * * newUriString, bool * userEscaped, UriFormatException * * e, MethodInfo * method));
DO_APP_FUNC(0x02A8D520, String *, Uri_GetRelativeSerializationString, (Uri * __this, UriFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x02A8D7D0, String *, Uri_GetComponentsHelper, (Uri * __this, UriComponents__Enum uriComponents, UriFormat__Enum uriFormat, MethodInfo * method));
DO_APP_FUNC(0x02A8DA80, void, Uri_CreateThisFromUri, (Uri * __this, Uri * otherUri, MethodInfo * method));
DO_APP_FUNC(0x02A8DC30, void, Uri__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Uri_UriInfo__ctor, (Uri_UriInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Uri_MoreInfo__ctor, (Uri_MoreInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01EA7840, void, UriFormatException__ctor, (UriFormatException * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1CA20, void, UriFormatException__ctor_1, (UriFormatException * __this, String * textString, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, UriFormatException__ctor_2, (UriFormatException * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01BCD870, void, UriFormatException_System_Runtime_Serialization_ISerializable_GetObjectData, (UriFormatException * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x02A8F680, Char__Array *, UriHelper_EscapeString, (String * input, int32_t start, int32_t end, Char__Array * dest, int32_t * destPos, bool isUriString, uint16_t force1, uint16_t force2, uint16_t rsvd, MethodInfo * method));
DO_APP_FUNC(0x02A8FE30, Char__Array *, UriHelper_EnsureDestinationSize, (uint16_t * pStr, Char__Array * dest, int32_t currentInputPos, int16_t charsToAdd, int16_t minReallocateChars, int32_t * destPos, int32_t prevInputPos, MethodInfo * method));
DO_APP_FUNC(0x02A8FFA0, Char__Array *, UriHelper_UnescapeString, (String * input, int32_t start, int32_t end, Char__Array * dest, int32_t * destPosition, uint16_t rsvd1, uint16_t rsvd2, uint16_t rsvd3, UnescapeMode__Enum unescapeMode, UriParser * syntax, bool isQuery, MethodInfo * method));
DO_APP_FUNC(0x02A900D0, Char__Array *, UriHelper_UnescapeString_1, (uint16_t * pStr, int32_t start, int32_t end, Char__Array * dest, int32_t * destPosition, uint16_t rsvd1, uint16_t rsvd2, uint16_t rsvd3, UnescapeMode__Enum unescapeMode, UriParser * syntax, bool isQuery, MethodInfo * method));
DO_APP_FUNC(0x02A90CD0, void, UriHelper_MatchUTF8Sequence, (uint16_t * pDest, Char__Array * dest, int32_t * destOffset, Char__Array * unescapedChars, int32_t charCount, Byte__Array * bytes, int32_t byteCount, bool isQuery, bool iriParsing, MethodInfo * method));
DO_APP_FUNC(0x02A91290, void, UriHelper_EscapeAsciiChar, (uint16_t ch, Char__Array * to, int32_t * pos, MethodInfo * method));
DO_APP_FUNC(0x02A91460, uint16_t, UriHelper_EscapedAscii, (uint16_t digit, uint16_t next, MethodInfo * method));
DO_APP_FUNC(0x02A91500, bool, UriHelper_IsNotSafeForUnescape, (uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x02A91550, bool, UriHelper_IsReservedUnreservedOrHash, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x02A916A0, bool, UriHelper_IsUnreserved, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x02A917C0, bool, UriHelper_Is3986Unreserved, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x02A918A0, void, UriHelper__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, UriParser_get_SchemeName, (UriParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A010, int32_t, UriParser_get_DefaultPort, (UriParser * __this, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, UriParser *, UriParser_OnNewUri, (UriParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0319DE30, void, UriParser_InitializeAndValidate, (UriParser * __this, Uri * uri, UriFormatException * * parsingError, MethodInfo * method));
DO_APP_FUNC(0x0319DF20, String *, UriParser_Resolve, (UriParser * __this, Uri * baseUri, Uri * relativeUri, UriFormatException * * parsingError, MethodInfo * method));
DO_APP_FUNC(0x0319E150, String *, UriParser_GetComponents, (UriParser * __this, Uri * uri, UriComponents__Enum components, UriFormat__Enum format, MethodInfo * method));
DO_APP_FUNC(0x0319E3A0, bool, UriParser_IsWellFormedOriginalString, (UriParser * __this, Uri * uri, MethodInfo * method));
DO_APP_FUNC(0x0319E3C0, bool, UriParser_get_ShouldUseLegacyV2Quirks, (MethodInfo * method));
DO_APP_FUNC(0x0319E470, void, UriParser__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, UriSyntaxFlags__Enum, UriParser_get_Flags, (UriParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0319FCB0, bool, UriParser_NotAny, (UriParser * __this, UriSyntaxFlags__Enum flags, MethodInfo * method));
DO_APP_FUNC(0x0319FCF0, bool, UriParser_InFact, (UriParser * __this, UriSyntaxFlags__Enum flags, MethodInfo * method));
DO_APP_FUNC(0x0319FD30, bool, UriParser_IsAllSet, (UriParser * __this, UriSyntaxFlags__Enum flags, MethodInfo * method));
DO_APP_FUNC(0x0319FD70, bool, UriParser_IsFullMatch, (UriParser * __this, UriSyntaxFlags__Enum flags, UriSyntaxFlags__Enum expected, MethodInfo * method));
DO_APP_FUNC(0x0319FDB0, void, UriParser__ctor, (UriParser * __this, UriSyntaxFlags__Enum flags, MethodInfo * method));
DO_APP_FUNC(0x0319FE50, UriParser *, UriParser_FindOrFetchAsUnknownV1Syntax, (String * lwrCaseScheme, MethodInfo * method));
DO_APP_FUNC(0x031A03F0, UriParser *, UriParser_GetSyntax, (String * lwrCaseScheme, MethodInfo * method));
DO_APP_FUNC(0x031A05C0, bool, UriParser_get_IsSimple, (UriParser * __this, MethodInfo * method));
DO_APP_FUNC(0x031A05D0, UriParser *, UriParser_InternalOnNewUri, (UriParser * __this, MethodInfo * method));
DO_APP_FUNC(0x031A0620, void, UriParser_InternalValidate, (UriParser * __this, Uri * thisUri, UriFormatException * * parsingError, MethodInfo * method));
DO_APP_FUNC(0x029449B0, String *, UriParser_InternalResolve, (UriParser * __this, Uri * thisBaseUri, Uri * uriLink, UriFormatException * * parsingError, MethodInfo * method));
DO_APP_FUNC(0x031A0640, String *, UriParser_InternalGetComponents, (UriParser * __this, Uri * thisUri, UriComponents__Enum uriComponents, UriFormat__Enum uriFormat, MethodInfo * method));
DO_APP_FUNC(0x00C53A30, bool, UriParser_InternalIsWellFormedOriginalString, (UriParser * __this, Uri * thisUri, MethodInfo * method));
DO_APP_FUNC(0x031A0660, void, UriParser_BuiltInUriParser__ctor, (UriParser_BuiltInUriParser * __this, String * lwrCaseScheme, int32_t defaultPort, UriSyntaxFlags__Enum syntaxFlags, MethodInfo * method));
DO_APP_FUNC(0x020056B0, String *, DomainNameHelper_ParseCanonicalName, (String * str, int32_t start, int32_t end, bool * loopback, MethodInfo * method));
DO_APP_FUNC(0x020058A0, bool, DomainNameHelper_IsValid, (uint16_t * name, uint16_t pos, int32_t * returnedEnd, bool * notCanonical, bool notImplicitFile, MethodInfo * method));
DO_APP_FUNC(0x020059F0, bool, DomainNameHelper_IsValidByIri, (uint16_t * name, uint16_t pos, int32_t * returnedEnd, bool * notCanonical, bool notImplicitFile, MethodInfo * method));
DO_APP_FUNC(0x02005BD0, String *, DomainNameHelper_IdnEquivalent, (uint16_t * hostname, int32_t start, int32_t end, bool * allAscii, bool * atLeastOneValidIdn, MethodInfo * method));
DO_APP_FUNC(0x02005F00, String *, DomainNameHelper_IdnEquivalent_1, (uint16_t * hostname, int32_t start, int32_t end, bool * allAscii, String * * bidiStrippedHost, MethodInfo * method));
DO_APP_FUNC(0x02006160, bool, DomainNameHelper_IsIdnAce, (String * input, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x020061E0, bool, DomainNameHelper_IsIdnAce_1, (uint16_t * input, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02006210, String *, DomainNameHelper_UnicodeEquivalent, (String * idnHost, uint16_t * hostname, int32_t start, int32_t end, MethodInfo * method));
DO_APP_FUNC(0x020063C0, String *, DomainNameHelper_UnicodeEquivalent_1, (uint16_t * hostname, int32_t start, int32_t end, bool * allAscii, bool * atLeastOneValidIdn, MethodInfo * method));
DO_APP_FUNC(0x02006890, bool, DomainNameHelper_IsASCIILetterOrDigit, (uint16_t character, bool * notCanonical, MethodInfo * method));
DO_APP_FUNC(0x020068C0, bool, DomainNameHelper_IsValidDomainLabelCharacter, (uint16_t character, bool * notCanonical, MethodInfo * method));
DO_APP_FUNC(0x0200AE30, String *, IPv4AddressHelper_ParseCanonicalName, (String * str, int32_t start, int32_t end, bool * isLoopback, MethodInfo * method));
DO_APP_FUNC(0x0200B200, int32_t, IPv4AddressHelper_ParseHostNumber, (String * str, int32_t start, int32_t end, MethodInfo * method));
DO_APP_FUNC(0x0200B2D0, bool, IPv4AddressHelper_IsValid, (uint16_t * name, int32_t start, int32_t * end, bool allowIPv6, bool notImplicitFile, bool unknownScheme, MethodInfo * method));
DO_APP_FUNC(0x0200B480, bool, IPv4AddressHelper_IsValidCanonical, (uint16_t * name, int32_t start, int32_t * end, bool allowIPv6, bool notImplicitFile, MethodInfo * method));
DO_APP_FUNC(0x0200B5F0, int64_t, IPv4AddressHelper_ParseNonCanonical, (uint16_t * name, int32_t start, int32_t * end, bool notImplicitFile, MethodInfo * method));
DO_APP_FUNC(0x0200BA40, bool, IPv4AddressHelper_Parse, (String * name, uint8_t * numbers, int32_t start, int32_t end, MethodInfo * method));
DO_APP_FUNC(0x0200BAB0, bool, IPv4AddressHelper_ParseCanonical, (String * name, uint8_t * numbers, int32_t start, int32_t end, MethodInfo * method));
DO_APP_FUNC(0x0200BB50, String *, IPv6AddressHelper_ParseCanonicalName, (String * str, int32_t start, bool * isLoopback, String * * scopeId, MethodInfo * method));
DO_APP_FUNC(0x0200BC50, String *, IPv6AddressHelper_CreateCanonicalName, (uint16_t * numbers, MethodInfo * method));
DO_APP_FUNC(0x0200C580, KeyValuePair_2_System_Int32_System_Int32_, IPv6AddressHelper_FindCompressionRange, (uint16_t * numbers, MethodInfo * method));
DO_APP_FUNC(0x0200C660, bool, IPv6AddressHelper_ShouldHaveIpv4Embedded, (uint16_t * numbers, MethodInfo * method));
DO_APP_FUNC(0x0200C6D0, bool, IPv6AddressHelper_InternalIsValid, (uint16_t * name, int32_t start, int32_t * end, bool validateStrictAddress, MethodInfo * method));
DO_APP_FUNC(0x0200CA30, bool, IPv6AddressHelper_IsValid, (uint16_t * name, int32_t start, int32_t * end, MethodInfo * method));
DO_APP_FUNC(0x0200CA50, bool, IPv6AddressHelper_IsValidStrict, (uint16_t * name, int32_t start, int32_t * end, MethodInfo * method));
DO_APP_FUNC(0x0200CA70, bool, IPv6AddressHelper_Parse, (String * address, uint16_t * numbers, int32_t start, String * * scopeId, MethodInfo * method));
DO_APP_FUNC(0x02A7C140, String *, UncNameHelper_ParseCanonicalName, (String * str, int32_t start, int32_t end, bool * loopback, MethodInfo * method));
DO_APP_FUNC(0x02A7C150, bool, UncNameHelper_IsValid, (uint16_t * name, uint16_t start, int32_t * returnedEnd, bool notImplicitFile, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, LocalAppContextSwitches__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00611810, void, IOAsyncCallback__ctor, (IOAsyncCallback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x00673B90, void, IOAsyncCallback_Invoke, (IOAsyncCallback * __this, IOAsyncResult * ioares, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, IOAsyncCallback_BeginInvoke, (IOAsyncCallback * __this, IOAsyncResult * ioares, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, IOAsyncCallback_EndInvoke, (IOAsyncCallback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, IOAsyncResult__ctor, (IOAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x0200AA90, void, IOAsyncResult_Init, (IOAsyncResult * __this, AsyncCallback * async_callback, Object * async_state, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, IOAsyncResult__ctor_1, (IOAsyncResult * __this, AsyncCallback * async_callback, Object * async_state, MethodInfo * method));
DO_APP_FUNC(0x002FA280, AsyncCallback *, IOAsyncResult_get_AsyncCallback, (IOAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Object *, IOAsyncResult_get_AsyncState, (IOAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x0200AAB0, WaitHandle *, IOAsyncResult_get_AsyncWaitHandle, (IOAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x004F4CE0, bool, IOAsyncResult_get_CompletedSynchronously, (IOAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x004F4CF0, void, IOAsyncResult_set_CompletedSynchronously, (IOAsyncResult * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00F5DF30, bool, IOAsyncResult_get_IsCompleted, (IOAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x0200ACF0, void, IOAsyncResult_set_IsCompleted, (IOAsyncResult * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x0200ADC0, void, IOSelectorJob__ctor, (IOSelectorJob * __this, IOOperation__Enum operation, IOAsyncCallback * callback, IOAsyncResult * state, MethodInfo * method));
DO_APP_FUNC(0x0200ADD0, void, IOSelectorJob_System_Threading_IThreadPoolWorkItem_ExecuteWorkItem, (IOSelectorJob * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, IOSelectorJob_System_Threading_IThreadPoolWorkItem_MarkAborted, (IOSelectorJob * __this, ThreadAbortException * tae, MethodInfo * method));
DO_APP_FUNC(0x0200AE00, void, IOSelectorJob_MarkDisposed, (IOSelectorJob * __this, MethodInfo * method));
DO_APP_FUNC(0x0200ADB0, void, IOSelector_Add, (void * handle, IOSelectorJob * job, MethodInfo * method));
DO_APP_FUNC(0x021BB900, int32_t, Platform_uname, (void * buf, MethodInfo * method));
DO_APP_FUNC(0x021BB9A0, void, Platform_CheckOS, (MethodInfo * method));
DO_APP_FUNC(0x021BBC90, bool, Platform_get_IsMacOS, (MethodInfo * method));
DO_APP_FUNC(0x021BC5A0, void, SRDescriptionAttribute__ctor, (SRDescriptionAttribute * __this, String * description, MethodInfo * method));
DO_APP_FUNC(0x021BC650, String *, SRDescriptionAttribute_get_Description, (SRDescriptionAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x031A0790, void, UriTypeConverter__ctor, (UriTypeConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x031A0820, bool, UriTypeConverter_CanConvert, (UriTypeConverter * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x031A0910, bool, UriTypeConverter_CanConvertFrom, (UriTypeConverter * __this, ITypeDescriptorContext * context, Type * sourceType, MethodInfo * method));
DO_APP_FUNC(0x031A09F0, bool, UriTypeConverter_CanConvertTo, (UriTypeConverter * __this, ITypeDescriptorContext * context, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x031A0AB0, Object *, UriTypeConverter_ConvertFrom, (UriTypeConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, MethodInfo * method));
DO_APP_FUNC(0x031A0D80, Object *, UriTypeConverter_ConvertTo, (UriTypeConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x02A7AD80, void *, Semaphore_CreateSemaphore_internal, (int32_t initialCount, int32_t maximumCount, String * name, int32_t * errorCode, MethodInfo * method));
DO_APP_FUNC(0x02A7AE10, bool, Semaphore_ReleaseSemaphore_internal, (void * handle, int32_t releaseCount, int32_t * previousCount, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, ElapsedEventHandler__ctor, (ElapsedEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, ElapsedEventHandler_Invoke, (ElapsedEventHandler * __this, Object * sender, ElapsedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, ElapsedEventHandler_BeginInvoke, (ElapsedEventHandler * __this, Object * sender, ElapsedEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, ElapsedEventHandler_EndInvoke, (ElapsedEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x02A7AED0, void, Timer_1__ctor, (Timer_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7B060, void, Timer_1__ctor_1, (Timer_1 * __this, double interval, MethodInfo * method));
DO_APP_FUNC(0x02A7B1D0, void, Timer_1_set_AutoReset, (Timer_1 * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x02A7B260, void, Timer_1_set_Enabled, (Timer_1 * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x02A7B590, int32_t, Timer_1_CalculateRoundedInterval, (double interval, bool argumentCheck, MethodInfo * method));
DO_APP_FUNC(0x02A7B780, void, Timer_1_UpdateTimer, (Timer_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7B7D0, void, Timer_1_set_Interval, (Timer_1 * __this, double value, MethodInfo * method));
DO_APP_FUNC(0x02A7B980, void, Timer_1_add_Elapsed, (Timer_1 * __this, ElapsedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x02A7BA40, void, Timer_1_remove_Elapsed, (Timer_1 * __this, ElapsedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x02A7BB00, void, Timer_1_set_Site, (Timer_1 * __this, ISite * value, MethodInfo * method));
DO_APP_FUNC(0x002FB930, ISite *, Timer_1_get_Site, (Timer_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7BB30, ISynchronizeInvoke *, Timer_1_get_SynchronizingObject, (Timer_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7BC90, void, Timer_1_BeginInit, (Timer_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7BCD0, void, Timer_1_Close, (Timer_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7BD10, void, Timer_1_Dispose, (Timer_1 * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x02A7BD60, void, Timer_1_EndInit, (Timer_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7BD70, void, Timer_1_Start, (Timer_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7BD80, void, Timer_1_Stop, (Timer_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7BD90, void, Timer_1_MyTimerCallback, (Timer_1 * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x02A7C090, void, TimersDescriptionAttribute__ctor, (TimersDescriptionAttribute * __this, String * description, MethodInfo * method));
DO_APP_FUNC(0x021BC650, String *, TimersDescriptionAttribute_get_Description, (TimersDescriptionAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7AE30, void, ElapsedEventArgs__ctor, (ElapsedEventArgs * __this, DateTime time, MethodInfo * method));
DO_APP_FUNC(0x025842D0, void, Regex__ctor, (Regex * __this, MethodInfo * method));
DO_APP_FUNC(0x02584380, void, Regex__ctor_1, (Regex * __this, String * pattern, MethodInfo * method));
DO_APP_FUNC(0x02584460, void, Regex__ctor_2, (Regex * __this, String * pattern, RegexOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x02584540, void, Regex__ctor_3, (Regex * __this, String * pattern, RegexOptions__Enum options, TimeSpan matchTimeout, bool useCache, MethodInfo * method));
DO_APP_FUNC(0x02584B00, void, Regex__ctor_4, (Regex * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02584C30, void, Regex_System_Runtime_Serialization_ISerializable_GetObjectData, (Regex * __this, SerializationInfo * si, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02584D30, void, Regex_ValidateMatchTimeout, (TimeSpan matchTimeout, MethodInfo * method));
DO_APP_FUNC(0x02584EC0, TimeSpan, Regex_InitDefaultMatchTimeout, (MethodInfo * method));
DO_APP_FUNC(0x025852F0, String *, Regex_Escape, (String * str, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, RegexOptions__Enum, Regex_get_Options, (Regex * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, TimeSpan, Regex_get_MatchTimeout, (Regex * __this, MethodInfo * method));
DO_APP_FUNC(0x025853C0, bool, Regex_get_RightToLeft, (Regex * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, Regex_ToString, (Regex * __this, MethodInfo * method));
DO_APP_FUNC(0x025853D0, String *, Regex_GroupNameFromNumber, (Regex * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x02585590, int32_t, Regex_GroupNumberFromName, (Regex * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x025856F0, bool, Regex_IsMatch, (Regex * __this, String * input, MethodInfo * method));
DO_APP_FUNC(0x02585850, bool, Regex_IsMatch_1, (Regex * __this, String * input, int32_t startat, MethodInfo * method));
DO_APP_FUNC(0x02585950, Match *, Regex_Match, (Regex * __this, String * input, MethodInfo * method));
DO_APP_FUNC(0x02585A30, Match *, Regex_Match_1, (Regex * __this, String * input, int32_t startat, MethodInfo * method));
DO_APP_FUNC(0x02585B20, MatchCollection *, Regex_Matches, (Regex * __this, String * input, MethodInfo * method));
DO_APP_FUNC(0x02585C00, MatchCollection *, Regex_Matches_1, (Regex * __this, String * input, int32_t startat, MethodInfo * method));
DO_APP_FUNC(0x02585DC0, String *, Regex_Replace, (String * input, String * pattern, String * replacement, MethodInfo * method));
DO_APP_FUNC(0x02585EA0, String *, Regex_Replace_1, (String * input, String * pattern, String * replacement, RegexOptions__Enum options, TimeSpan matchTimeout, MethodInfo * method));
DO_APP_FUNC(0x025860F0, String *, Regex_Replace_2, (Regex * __this, String * input, String * replacement, MethodInfo * method));
DO_APP_FUNC(0x025861E0, String *, Regex_Replace_3, (Regex * __this, String * input, String * replacement, int32_t count, int32_t startat, MethodInfo * method));
DO_APP_FUNC(0x02586470, void, Regex_InitializeReferences, (Regex * __this, MethodInfo * method));
DO_APP_FUNC(0x025867F0, Match *, Regex_Run, (Regex * __this, bool quick, int32_t prevlen, String * input, int32_t beginning, int32_t length, int32_t startat, MethodInfo * method));
DO_APP_FUNC(0x02586D20, CachedCodeEntry *, Regex_LookupCachedAndUpdate, (String * key, MethodInfo * method));
DO_APP_FUNC(0x02587060, CachedCodeEntry *, Regex_CacheCode, (Regex * __this, String * key, MethodInfo * method));
DO_APP_FUNC(0x025853C0, bool, Regex_UseOptionR, (Regex * __this, MethodInfo * method));
DO_APP_FUNC(0x02587680, bool, Regex_UseOptionInvariant, (Regex * __this, MethodInfo * method));
DO_APP_FUNC(0x02587690, void, Regex__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02580B00, void, CachedCodeEntry__ctor, (CachedCodeEntry * __this, String * key, Hashtable * capnames, String__Array * capslist, RegexCode * code, Hashtable * caps, int32_t capsize, ExclusiveReference * runner, SharedReference * repl, MethodInfo * method));
DO_APP_FUNC(0x02581350, Object *, ExclusiveReference_Get, (ExclusiveReference * __this, MethodInfo * method));
DO_APP_FUNC(0x02581380, void, ExclusiveReference_Release, (ExclusiveReference * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ExclusiveReference__ctor, (ExclusiveReference * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7AB90, Object *, SharedReference_Get, (SharedReference * __this, MethodInfo * method));
DO_APP_FUNC(0x02A7ABE0, void, SharedReference_Cache, (SharedReference * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x02A7AC30, void, SharedReference__ctor, (SharedReference * __this, MethodInfo * method));
DO_APP_FUNC(0x025878B0, void, RegexBoyerMoore__ctor, (RegexBoyerMoore * __this, String * pattern, bool caseInsensitive, bool rightToLeft, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x02587FB0, bool, RegexBoyerMoore_MatchPattern, (RegexBoyerMoore * __this, String * text, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02588160, bool, RegexBoyerMoore_IsMatch, (RegexBoyerMoore * __this, String * text, int32_t index, int32_t beglimit, int32_t endlimit, MethodInfo * method));
DO_APP_FUNC(0x025881F0, int32_t, RegexBoyerMoore_Scan, (RegexBoyerMoore * __this, String * text, int32_t index, int32_t beglimit, int32_t endlimit, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, RegexBoyerMoore_ToString, (RegexBoyerMoore * __this, MethodInfo * method));
DO_APP_FUNC(0x01DF8C80, void, Capture__ctor, (Capture * __this, String * text, int32_t i, int32_t l, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, Capture_get_Index, (Capture * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A010, int32_t, Capture_get_Length, (Capture * __this, MethodInfo * method));
DO_APP_FUNC(0x02580B40, String *, Capture_get_Value, (Capture * __this, MethodInfo * method));
DO_APP_FUNC(0x02580B40, String *, Capture_ToString, (Capture * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, Capture_GetOriginalString, (Capture * __this, MethodInfo * method));
DO_APP_FUNC(0x02580B70, String *, Capture_GetLeftSubstring, (Capture * __this, MethodInfo * method));
DO_APP_FUNC(0x02580BA0, String *, Capture_GetRightSubstring, (Capture * __this, MethodInfo * method));
DO_APP_FUNC(0x02580BE0, void, Capture__ctor_1, (Capture * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Object *, CaptureCollection_get_SyncRoot, (CaptureCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, CaptureCollection_get_IsSynchronized, (CaptureCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, CaptureCollection_get_Count, (CaptureCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02580C10, Capture *, CaptureCollection_get_Item, (CaptureCollection * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x02580C20, void, CaptureCollection_CopyTo, (CaptureCollection * __this, Array * array, int32_t arrayIndex, MethodInfo * method));
DO_APP_FUNC(0x02580D20, IEnumerator *, CaptureCollection_GetEnumerator, (CaptureCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02580E70, Capture *, CaptureCollection_GetCapture, (CaptureCollection * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x025811F0, void, CaptureCollection__ctor, (CaptureCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC2A00, void, CaptureEnumerator__ctor, (CaptureEnumerator * __this, CaptureCollection * rcc, MethodInfo * method));
DO_APP_FUNC(0x02581220, bool, CaptureEnumerator_MoveNext, (CaptureEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02581260, Object *, CaptureEnumerator_get_Current, (CaptureEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02581260, Capture *, CaptureEnumerator_get_Capture, (CaptureEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x00C2BCA0, void, CaptureEnumerator_Reset, (CaptureEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02588600, void, RegexCharClass__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0258D500, void, RegexCharClass__ctor, (RegexCharClass * __this, MethodInfo * method));
DO_APP_FUNC(0x0258D760, void, RegexCharClass__ctor_1, (RegexCharClass * __this, bool negate, List_1_System_Text_RegularExpressions_RegexCharClass_SingleRange_ * ranges, StringBuilder * categories, RegexCharClass * subtraction, MethodInfo * method));
DO_APP_FUNC(0x0258D780, bool, RegexCharClass_get_CanMerge, (RegexCharClass * __this, MethodInfo * method));
DO_APP_FUNC(0x00DF3E00, void, RegexCharClass_set_Negate, (RegexCharClass * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x0258D7A0, void, RegexCharClass_AddChar, (RegexCharClass * __this, uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x0258D7B0, void, RegexCharClass_AddCharClass, (RegexCharClass * __this, RegexCharClass * cc, MethodInfo * method));
DO_APP_FUNC(0x0258D9C0, void, RegexCharClass_AddSet, (RegexCharClass * __this, String * set, MethodInfo * method));
DO_APP_FUNC(0x002FBB10, void, RegexCharClass_AddSubtraction, (RegexCharClass * __this, RegexCharClass * sub, MethodInfo * method));
DO_APP_FUNC(0x0258DDB0, void, RegexCharClass_AddRange, (RegexCharClass * __this, uint16_t first, uint16_t last, MethodInfo * method));
DO_APP_FUNC(0x0258DF90, void, RegexCharClass_AddCategoryFromName, (RegexCharClass * __this, String * categoryName, bool invert, bool caseInsensitive, String * pattern, MethodInfo * method));
DO_APP_FUNC(0x0258E270, void, RegexCharClass_AddCategory, (RegexCharClass * __this, String * category, MethodInfo * method));
DO_APP_FUNC(0x0258E290, void, RegexCharClass_AddLowercase, (RegexCharClass * __this, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x0258E410, void, RegexCharClass_AddLowercaseRange, (RegexCharClass * __this, uint16_t chMin, uint16_t chMax, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x0258E740, void, RegexCharClass_AddWord, (RegexCharClass * __this, bool ecma, bool negate, MethodInfo * method));
DO_APP_FUNC(0x0258E8B0, void, RegexCharClass_AddSpace, (RegexCharClass * __this, bool ecma, bool negate, MethodInfo * method));
DO_APP_FUNC(0x0258EA20, void, RegexCharClass_AddDigit, (RegexCharClass * __this, bool ecma, bool negate, String * pattern, MethodInfo * method));
DO_APP_FUNC(0x0258EB10, uint16_t, RegexCharClass_SingletonChar, (String * set, MethodInfo * method));
DO_APP_FUNC(0x0258EB30, bool, RegexCharClass_IsMergeable, (String * charClass, MethodInfo * method));
DO_APP_FUNC(0x0258EC60, bool, RegexCharClass_IsEmpty, (String * charClass, MethodInfo * method));
DO_APP_FUNC(0x0258ED50, bool, RegexCharClass_IsSingleton, (String * set, MethodInfo * method));
DO_APP_FUNC(0x0258EEA0, bool, RegexCharClass_IsSingletonInverse, (String * set, MethodInfo * method));
DO_APP_FUNC(0x0258EFF0, bool, RegexCharClass_IsSubtraction, (String * charClass, MethodInfo * method));
DO_APP_FUNC(0x0258F050, bool, RegexCharClass_IsNegated, (String * set, MethodInfo * method));
DO_APP_FUNC(0x0258F080, bool, RegexCharClass_IsECMAWordChar, (uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x0258F120, bool, RegexCharClass_IsWordChar, (uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x0258F1F0, bool, RegexCharClass_CharInClass, (uint16_t ch, String * set, MethodInfo * method));
DO_APP_FUNC(0x0258F2A0, bool, RegexCharClass_CharInClassRecursive, (uint16_t ch, String * set, int32_t start, MethodInfo * method));
DO_APP_FUNC(0x0258F500, bool, RegexCharClass_CharInClassInternal, (uint16_t ch, String * set, int32_t start, int32_t mySetLength, int32_t myCategoryLength, MethodInfo * method));
DO_APP_FUNC(0x0258F640, bool, RegexCharClass_CharInCategory, (uint16_t ch, String * set, int32_t start, int32_t mySetLength, int32_t myCategoryLength, MethodInfo * method));
DO_APP_FUNC(0x0258F820, bool, RegexCharClass_CharInCategoryGroup, (uint16_t ch, UnicodeCategory__Enum chcategory, String * category, int32_t * i, MethodInfo * method));
DO_APP_FUNC(0x0258F8F0, String *, RegexCharClass_NegateCategory, (String * category, MethodInfo * method));
DO_APP_FUNC(0x0258FBD0, RegexCharClass *, RegexCharClass_Parse, (String * charClass, MethodInfo * method));
DO_APP_FUNC(0x0258FC70, RegexCharClass *, RegexCharClass_ParseRecursive, (String * charClass, int32_t start, MethodInfo * method));
DO_APP_FUNC(0x02590230, int32_t, RegexCharClass_RangeCount, (RegexCharClass * __this, MethodInfo * method));
DO_APP_FUNC(0x025902C0, String *, RegexCharClass_ToStringClass, (RegexCharClass * __this, MethodInfo * method));
DO_APP_FUNC(0x02590710, RegexCharClass_SingleRange *, RegexCharClass_GetRangeAt, (RegexCharClass * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x025907C0, void, RegexCharClass_Canonicalize, (RegexCharClass * __this, MethodInfo * method));
DO_APP_FUNC(0x02590BB0, String *, RegexCharClass_SetFromProperty, (String * capname, bool invert, String * pattern, MethodInfo * method));
DO_APP_FUNC(0x001FA1F0, void, RegexCharClass_LowerCaseMapping__ctor, (RegexCharClass_LowerCaseMapping__Boxed * __this, uint16_t chMin, uint16_t chMax, int32_t lcOp, int32_t data, MethodInfo * method));
DO_APP_FUNC(0x02590F90, int32_t, RegexCharClass_SingleRangeComparer_Compare, (RegexCharClass_SingleRangeComparer * __this, RegexCharClass_SingleRange * x, RegexCharClass_SingleRange * y, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RegexCharClass_SingleRangeComparer__ctor, (RegexCharClass_SingleRangeComparer * __this, MethodInfo * method));
DO_APP_FUNC(0x02590F80, void, RegexCharClass_SingleRange__ctor, (RegexCharClass_SingleRange * __this, uint16_t first, uint16_t last, MethodInfo * method));
DO_APP_FUNC(0x02590FD0, void, RegexCode__ctor, (RegexCode * __this, Int32__Array * codes, List_1_System_String_ * stringlist, int32_t trackcount, Hashtable * caps, int32_t capsize, RegexBoyerMoore * bmPrefix, RegexPrefix * fcPrefix, int32_t anchors, bool rightToLeft, MethodInfo * method));
DO_APP_FUNC(0x02591100, bool, RegexCode_OpcodeBacktracks, (int32_t Op, MethodInfo * method));
DO_APP_FUNC(0x02591660, RegexPrefix *, RegexFCD_FirstChars, (RegexTree * t, MethodInfo * method));
DO_APP_FUNC(0x025919D0, RegexPrefix *, RegexFCD_Prefix, (RegexTree * tree, MethodInfo * method));
DO_APP_FUNC(0x02591DD0, int32_t, RegexFCD_Anchors, (RegexTree * tree, MethodInfo * method));
DO_APP_FUNC(0x02591FF0, int32_t, RegexFCD_AnchorFromType, (int32_t type, MethodInfo * method));
DO_APP_FUNC(0x02592070, void, RegexFCD__ctor, (RegexFCD * __this, MethodInfo * method));
DO_APP_FUNC(0x02592110, void, RegexFCD_PushInt, (RegexFCD * __this, int32_t I, MethodInfo * method));
DO_APP_FUNC(0x01B5A5F0, bool, RegexFCD_IntIsEmpty, (RegexFCD * __this, MethodInfo * method));
DO_APP_FUNC(0x02592220, int32_t, RegexFCD_PopInt, (RegexFCD * __this, MethodInfo * method));
DO_APP_FUNC(0x02592270, void, RegexFCD_PushFC, (RegexFCD * __this, RegexFC * fc, MethodInfo * method));
DO_APP_FUNC(0x01E519D0, bool, RegexFCD_FCIsEmpty, (RegexFCD * __this, MethodInfo * method));
DO_APP_FUNC(0x025923C0, RegexFC *, RegexFCD_PopFC, (RegexFCD * __this, MethodInfo * method));
DO_APP_FUNC(0x02592410, RegexFC *, RegexFCD_TopFC, (RegexFCD * __this, MethodInfo * method));
DO_APP_FUNC(0x02592450, RegexFC *, RegexFCD_RegexFCFromRegexTree, (RegexFCD * __this, RegexTree * tree, MethodInfo * method));
DO_APP_FUNC(0x02592750, void, RegexFCD_SkipChild, (RegexFCD * __this, MethodInfo * method));
DO_APP_FUNC(0x02592760, void, RegexFCD_CalculateFC, (RegexFCD * __this, int32_t NodeType, RegexNode * node, int32_t CurIndex, MethodInfo * method));
DO_APP_FUNC(0x02591160, void, RegexFC__ctor, (RegexFC * __this, bool nullable, MethodInfo * method));
DO_APP_FUNC(0x025912B0, void, RegexFC__ctor_1, (RegexFC * __this, uint16_t ch, bool not_1, bool nullable, bool caseInsensitive, MethodInfo * method));
DO_APP_FUNC(0x02591490, void, RegexFC__ctor_2, (RegexFC * __this, String * charClass, bool nullable, bool caseInsensitive, MethodInfo * method));
DO_APP_FUNC(0x02591560, bool, RegexFC_AddFC, (RegexFC * __this, RegexFC * fc, bool concatenate, MethodInfo * method));
DO_APP_FUNC(0x02591610, String *, RegexFC_GetFirstChars, (RegexFC * __this, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x00533160, bool, RegexFC_IsCaseInsensitive, (RegexFC * __this, MethodInfo * method));
DO_APP_FUNC(0x01669060, void, RegexPrefix__ctor, (RegexPrefix * __this, String * prefix, bool ci, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, RegexPrefix_get_Prefix, (RegexPrefix * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A280, bool, RegexPrefix_get_CaseInsensitive, (RegexPrefix * __this, MethodInfo * method));
DO_APP_FUNC(0x02A76100, RegexPrefix *, RegexPrefix_get_Empty, (MethodInfo * method));
DO_APP_FUNC(0x02A761A0, void, RegexPrefix__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02581490, void, Group__ctor, (Group * __this, String * text, Int32__Array * caps, int32_t capcount, String * name, MethodInfo * method));
DO_APP_FUNC(0x02581530, bool, Group_get_Success, (Group * __this, MethodInfo * method));
DO_APP_FUNC(0x02581540, void, Group__cctor, (MethodInfo * method));
DO_APP_FUNC(0x025816F0, void, Group__ctor_1, (Group * __this, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, GroupCollection__ctor, (GroupCollection * __this, Match * match, Hashtable * caps, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Object *, GroupCollection_get_SyncRoot, (GroupCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, GroupCollection_get_IsSynchronized, (GroupCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02581720, int32_t, GroupCollection_get_Count, (GroupCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02581750, Group *, GroupCollection_get_Item, (GroupCollection * __this, int32_t groupnum, MethodInfo * method));
DO_APP_FUNC(0x02581760, Group *, GroupCollection_get_Item_1, (GroupCollection * __this, String * groupname, MethodInfo * method));
DO_APP_FUNC(0x02581990, Group *, GroupCollection_GetGroup, (GroupCollection * __this, int32_t groupnum, MethodInfo * method));
DO_APP_FUNC(0x02581B10, Group *, GroupCollection_GetGroupImpl, (GroupCollection * __this, int32_t groupnum, MethodInfo * method));
DO_APP_FUNC(0x02581F90, void, GroupCollection_CopyTo, (GroupCollection * __this, Array * array, int32_t arrayIndex, MethodInfo * method));
DO_APP_FUNC(0x025820B0, IEnumerator *, GroupCollection_GetEnumerator, (GroupCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02582200, void, GroupCollection__ctor_1, (GroupCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC2A00, void, GroupEnumerator__ctor, (GroupEnumerator * __this, GroupCollection * rgc, MethodInfo * method));
DO_APP_FUNC(0x02582230, bool, GroupEnumerator_MoveNext, (GroupEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02582290, Object *, GroupEnumerator_get_Current, (GroupEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02582290, Capture *, GroupEnumerator_get_Capture, (GroupEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x00C2BCA0, void, GroupEnumerator_Reset, (GroupEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02593420, void, RegexInterpreter__ctor, (RegexInterpreter * __this, RegexCode * code, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x02593480, void, RegexInterpreter_InitTrackCount, (RegexInterpreter * __this, MethodInfo * method));
DO_APP_FUNC(0x025934B0, void, RegexInterpreter_Advance, (RegexInterpreter * __this, MethodInfo * method));
DO_APP_FUNC(0x025934C0, void, RegexInterpreter_Advance_1, (RegexInterpreter * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x02593540, void, RegexInterpreter_Goto, (RegexInterpreter * __this, int32_t newpos, MethodInfo * method));
DO_APP_FUNC(0x002FB980, void, RegexInterpreter_Textto, (RegexInterpreter * __this, int32_t newpos, MethodInfo * method));
DO_APP_FUNC(0x025935D0, void, RegexInterpreter_Trackto, (RegexInterpreter * __this, int32_t newpos, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, RegexInterpreter_Textstart, (RegexInterpreter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB970, int32_t, RegexInterpreter_Textpos, (RegexInterpreter * __this, MethodInfo * method));
DO_APP_FUNC(0x025935F0, int32_t, RegexInterpreter_Trackpos, (RegexInterpreter * __this, MethodInfo * method));
DO_APP_FUNC(0x02593610, void, RegexInterpreter_TrackPush, (RegexInterpreter * __this, MethodInfo * method));
DO_APP_FUNC(0x02593660, void, RegexInterpreter_TrackPush_1, (RegexInterpreter * __this, int32_t I1, MethodInfo * method));
DO_APP_FUNC(0x025936F0, void, RegexInterpreter_TrackPush_2, (RegexInterpreter * __this, int32_t I1, int32_t I2, MethodInfo * method));
DO_APP_FUNC(0x025937B0, void, RegexInterpreter_TrackPush_3, (RegexInterpreter * __this, int32_t I1, int32_t I2, int32_t I3, MethodInfo * method));
DO_APP_FUNC(0x025938C0, void, RegexInterpreter_TrackPush2, (RegexInterpreter * __this, int32_t I1, MethodInfo * method));
DO_APP_FUNC(0x02593950, void, RegexInterpreter_TrackPush2_1, (RegexInterpreter * __this, int32_t I1, int32_t I2, MethodInfo * method));
DO_APP_FUNC(0x02593A20, void, RegexInterpreter_Backtrack, (RegexInterpreter * __this, MethodInfo * method));
DO_APP_FUNC(0x02593B30, void, RegexInterpreter_SetOperator, (RegexInterpreter * __this, int32_t op, MethodInfo * method));
DO_APP_FUNC(0x00E84200, void, RegexInterpreter_TrackPop, (RegexInterpreter * __this, MethodInfo * method));
DO_APP_FUNC(0x02593B60, void, RegexInterpreter_TrackPop_1, (RegexInterpreter * __this, int32_t framesize, MethodInfo * method));
DO_APP_FUNC(0x02593B70, int32_t, RegexInterpreter_TrackPeek, (RegexInterpreter * __this, MethodInfo * method));
DO_APP_FUNC(0x02593BB0, int32_t, RegexInterpreter_TrackPeek_1, (RegexInterpreter * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x02593BF0, void, RegexInterpreter_StackPush, (RegexInterpreter * __this, int32_t I1, MethodInfo * method));
DO_APP_FUNC(0x02593C40, void, RegexInterpreter_StackPush_1, (RegexInterpreter * __this, int32_t I1, int32_t I2, MethodInfo * method));
DO_APP_FUNC(0x02593CC0, void, RegexInterpreter_StackPop, (RegexInterpreter * __this, MethodInfo * method));
DO_APP_FUNC(0x02593CD0, void, RegexInterpreter_StackPop_1, (RegexInterpreter * __this, int32_t framesize, MethodInfo * method));
DO_APP_FUNC(0x02593CE0, int32_t, RegexInterpreter_StackPeek, (RegexInterpreter * __this, MethodInfo * method));
DO_APP_FUNC(0x02593D20, int32_t, RegexInterpreter_StackPeek_1, (RegexInterpreter * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x00C03C70, int32_t, RegexInterpreter_Operator, (RegexInterpreter * __this, MethodInfo * method));
DO_APP_FUNC(0x02593D60, int32_t, RegexInterpreter_Operand, (RegexInterpreter * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x02593DB0, int32_t, RegexInterpreter_Leftchars, (RegexInterpreter * __this, MethodInfo * method));
DO_APP_FUNC(0x02593DC0, int32_t, RegexInterpreter_Rightchars, (RegexInterpreter * __this, MethodInfo * method));
DO_APP_FUNC(0x02593DD0, int32_t, RegexInterpreter_Bump, (RegexInterpreter * __this, MethodInfo * method));
DO_APP_FUNC(0x02593DF0, int32_t, RegexInterpreter_Forwardchars, (RegexInterpreter * __this, MethodInfo * method));
DO_APP_FUNC(0x02593E10, uint16_t, RegexInterpreter_Forwardcharnext, (RegexInterpreter * __this, MethodInfo * method));
DO_APP_FUNC(0x02593F20, bool, RegexInterpreter_Stringmatch, (RegexInterpreter * __this, String * str, MethodInfo * method));
DO_APP_FUNC(0x02594110, bool, RegexInterpreter_Refmatch, (RegexInterpreter * __this, int32_t index, int32_t len, MethodInfo * method));
DO_APP_FUNC(0x02594310, void, RegexInterpreter_Backwardnext, (RegexInterpreter * __this, MethodInfo * method));
DO_APP_FUNC(0x02594330, uint16_t, RegexInterpreter_CharAt, (RegexInterpreter * __this, int32_t j, MethodInfo * method));
DO_APP_FUNC(0x02594350, bool, RegexInterpreter_FindFirstChar, (RegexInterpreter * __this, MethodInfo * method));
DO_APP_FUNC(0x02594730, void, RegexInterpreter_Go, (RegexInterpreter * __this, MethodInfo * method));
DO_APP_FUNC(0x025823A0, Match *, Match_get_Empty, (MethodInfo * method));
DO_APP_FUNC(0x02582440, void, Match__ctor, (Match * __this, Regex * regex, int32_t capcount, String * text, int32_t begpos, int32_t len, int32_t startpos, MethodInfo * method));
DO_APP_FUNC(0x025825E0, void, Match_Reset, (Match * __this, Regex * regex, String * text, int32_t textbeg, int32_t textend, int32_t textstart, MethodInfo * method));
DO_APP_FUNC(0x02582670, GroupCollection *, Match_get_Groups, (Match * __this, MethodInfo * method));
DO_APP_FUNC(0x025827D0, Match *, Match_NextMatch, (Match * __this, MethodInfo * method));
DO_APP_FUNC(0x02582820, String *, Match_GroupToStringImpl, (Match * __this, int32_t groupnum, MethodInfo * method));
DO_APP_FUNC(0x02582990, String *, Match_LastGroupToStringImpl, (Match * __this, MethodInfo * method));
DO_APP_FUNC(0x025829C0, void, Match_AddMatch, (Match * __this, int32_t cap, int32_t start, int32_t len, MethodInfo * method));
DO_APP_FUNC(0x02582DA0, void, Match_BalanceMatch, (Match * __this, int32_t cap, MethodInfo * method));
DO_APP_FUNC(0x02582F50, void, Match_RemoveMatch, (Match * __this, int32_t cap, MethodInfo * method));
DO_APP_FUNC(0x02582F90, bool, Match_IsMatched, (Match * __this, int32_t cap, MethodInfo * method));
DO_APP_FUNC(0x02583060, int32_t, Match_MatchIndex, (Match * __this, int32_t cap, MethodInfo * method));
DO_APP_FUNC(0x02583150, int32_t, Match_MatchLength, (Match * __this, int32_t cap, MethodInfo * method));
DO_APP_FUNC(0x02583240, void, Match_Tidy, (Match * __this, int32_t textpos, MethodInfo * method));
DO_APP_FUNC(0x025834D0, void, Match__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02583650, void, Match__ctor_1, (Match * __this, MethodInfo * method));
DO_APP_FUNC(0x02584070, void, MatchSparse__ctor, (MatchSparse * __this, Regex * regex, Hashtable * caps, int32_t capcount, String * text, int32_t begpos, int32_t len, int32_t startpos, MethodInfo * method));
DO_APP_FUNC(0x02584170, GroupCollection *, MatchSparse_get_Groups, (MatchSparse * __this, MethodInfo * method));
DO_APP_FUNC(0x02583680, void, MatchCollection__ctor, (MatchCollection * __this, Regex * regex, String * input, int32_t beginning, int32_t length, int32_t startat, MethodInfo * method));
DO_APP_FUNC(0x02583870, Match *, MatchCollection_GetMatch, (MatchCollection * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x02583A30, int32_t, MatchCollection_get_Count, (MatchCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, Object *, MatchCollection_get_SyncRoot, (MatchCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, MatchCollection_get_IsSynchronized, (MatchCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02583B20, Match *, MatchCollection_get_Item, (MatchCollection * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x02583BF0, void, MatchCollection_CopyTo, (MatchCollection * __this, Array * array, int32_t arrayIndex, MethodInfo * method));
DO_APP_FUNC(0x02583D50, IEnumerator *, MatchCollection_GetEnumerator, (MatchCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02583E90, void, MatchCollection__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02583F10, void, MatchCollection__ctor_1, (MatchCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, MatchEnumerator__ctor, (MatchEnumerator * __this, MatchCollection * matchcoll, MethodInfo * method));
DO_APP_FUNC(0x02583F40, bool, MatchEnumerator_MoveNext, (MatchEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02583F90, Object *, MatchEnumerator_get_Current, (MatchEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02584060, void, MatchEnumerator_Reset, (MatchEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x025959D0, void, RegexMatchTimeoutException__ctor, (RegexMatchTimeoutException * __this, String * regexInput, String * regexPattern, TimeSpan matchTimeout, MethodInfo * method));
DO_APP_FUNC(0x02595AC0, void, RegexMatchTimeoutException__ctor_1, (RegexMatchTimeoutException * __this, MethodInfo * method));
DO_APP_FUNC(0x02595C10, void, RegexMatchTimeoutException__ctor_2, (RegexMatchTimeoutException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02595D40, void, RegexMatchTimeoutException_System_Runtime_Serialization_ISerializable_GetObjectData, (RegexMatchTimeoutException * __this, SerializationInfo * si, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02595E40, void, RegexMatchTimeoutException_Init, (RegexMatchTimeoutException * __this, MethodInfo * method));
DO_APP_FUNC(0x02595EF0, void, RegexMatchTimeoutException_Init_1, (RegexMatchTimeoutException * __this, String * input, String * pattern, TimeSpan timeout, MethodInfo * method));
DO_APP_FUNC(0x02595F10, void, RegexNode__ctor, (RegexNode * __this, int32_t type, RegexOptions__Enum options, MethodInfo * method));
DO_APP_FUNC(0x02595F20, void, RegexNode__ctor_1, (RegexNode * __this, int32_t type, RegexOptions__Enum options, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x02595F30, void, RegexNode__ctor_2, (RegexNode * __this, int32_t type, RegexOptions__Enum options, String * str, MethodInfo * method));
DO_APP_FUNC(0x02595F40, void, RegexNode__ctor_3, (RegexNode * __this, int32_t type, RegexOptions__Enum options, int32_t m, MethodInfo * method));
DO_APP_FUNC(0x02595F50, void, RegexNode__ctor_4, (RegexNode * __this, int32_t type, RegexOptions__Enum options, int32_t m, int32_t n, MethodInfo * method));
DO_APP_FUNC(0x02595F70, bool, RegexNode_UseOptionR, (RegexNode * __this, MethodInfo * method));
DO_APP_FUNC(0x02595F80, RegexNode *, RegexNode_ReverseLeft, (RegexNode * __this, MethodInfo * method));
DO_APP_FUNC(0x02596060, void, RegexNode_MakeRep, (RegexNode * __this, int32_t type, int32_t min, int32_t max, MethodInfo * method));
DO_APP_FUNC(0x02596070, RegexNode *, RegexNode_Reduce, (RegexNode * __this, MethodInfo * method));
DO_APP_FUNC(0x02596130, RegexNode *, RegexNode_StripEnation, (RegexNode * __this, int32_t emptyType, MethodInfo * method));
DO_APP_FUNC(0x025962C0, RegexNode *, RegexNode_ReduceGroup, (RegexNode * __this, MethodInfo * method));
DO_APP_FUNC(0x025963A0, RegexNode *, RegexNode_ReduceRep, (RegexNode * __this, MethodInfo * method));
DO_APP_FUNC(0x02596650, RegexNode *, RegexNode_ReduceSet, (RegexNode * __this, MethodInfo * method));
DO_APP_FUNC(0x025969D0, RegexNode *, RegexNode_ReduceAlternation, (RegexNode * __this, MethodInfo * method));
DO_APP_FUNC(0x02597040, RegexNode *, RegexNode_ReduceConcatenation, (RegexNode * __this, MethodInfo * method));
DO_APP_FUNC(0x025974E0, RegexNode *, RegexNode_MakeQuantifier, (RegexNode * __this, bool lazy, int32_t min, int32_t max, MethodInfo * method));
DO_APP_FUNC(0x02597790, void, RegexNode_AddChild, (RegexNode * __this, RegexNode * newChild, MethodInfo * method));
DO_APP_FUNC(0x02597A10, RegexNode *, RegexNode_Child, (RegexNode * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x02597AC0, int32_t, RegexNode_ChildCount, (RegexNode * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, RegexNode_Type, (RegexNode * __this, MethodInfo * method));
DO_APP_FUNC(0x02597B50, RegexTree *, RegexParser_Parse, (String * re, RegexOptions__Enum op, MethodInfo * method));
DO_APP_FUNC(0x02597F70, RegexReplacement *, RegexParser_ParseReplacement, (String * rep, Hashtable * caps, int32_t capsize, Hashtable * capnames, RegexOptions__Enum op, MethodInfo * method));
DO_APP_FUNC(0x02598260, String *, RegexParser_Escape, (String * input, MethodInfo * method));
DO_APP_FUNC(0x02598540, void, RegexParser__ctor, (RegexParser * __this, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x02598770, void, RegexParser_SetPattern, (RegexParser * __this, String * Re, MethodInfo * method));
DO_APP_FUNC(0x02598830, void, RegexParser_Reset, (RegexParser * __this, RegexOptions__Enum topopts, MethodInfo * method));
DO_APP_FUNC(0x02598970, RegexNode *, RegexParser_ScanRegex, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x02599350, RegexNode *, RegexParser_ScanReplacement, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x02599590, RegexCharClass *, RegexParser_ScanCharClass, (RegexParser * __this, bool caseInsensitive, MethodInfo * method));
DO_APP_FUNC(0x025995A0, RegexCharClass *, RegexParser_ScanCharClass_1, (RegexParser * __this, bool caseInsensitive, bool scanOnly, MethodInfo * method));
DO_APP_FUNC(0x0259A020, RegexNode *, RegexParser_ScanGroupOpen, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0259B240, void, RegexParser_ScanBlank, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0259B740, RegexNode *, RegexParser_ScanBackslash, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0259C4C0, RegexNode *, RegexParser_ScanBasicBackslash, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0259CEB0, RegexNode *, RegexParser_ScanDollar, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0259D670, String *, RegexParser_ScanCapname, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0259D780, uint16_t, RegexParser_ScanOctal, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0259D830, int32_t, RegexParser_ScanDecimal, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0259D950, uint16_t, RegexParser_ScanHex, (RegexParser * __this, int32_t c, MethodInfo * method));
DO_APP_FUNC(0x0259DAB0, int32_t, RegexParser_HexDigit, (uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x0259DAE0, uint16_t, RegexParser_ScanControl, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0259DC00, bool, RegexParser_IsOnlyTopOption, (RegexParser * __this, RegexOptions__Enum option, MethodInfo * method));
DO_APP_FUNC(0x0259DC20, void, RegexParser_ScanOptions, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0259DD70, uint16_t, RegexParser_ScanCharEscape, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0259E1F0, String *, RegexParser_ParseProperty, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0259E420, int32_t, RegexParser_TypeFromCode, (RegexParser * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x0259E4A0, RegexOptions__Enum, RegexParser_OptionFromCode, (uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x0259E540, void, RegexParser_CountCaptures, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0259E970, void, RegexParser_NoteCaptureSlot, (RegexParser * __this, int32_t i, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x0259EAC0, void, RegexParser_NoteCaptureName, (RegexParser * __this, String * name, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x0259ED80, void, RegexParser_NoteCaptures, (RegexParser * __this, Hashtable * caps, int32_t capsize, Hashtable * capnames, MethodInfo * method));
DO_APP_FUNC(0x0259ED90, void, RegexParser_AssignNameSlots, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0259F880, int32_t, RegexParser_CaptureSlotFromName, (RegexParser * __this, String * capname, MethodInfo * method));
DO_APP_FUNC(0x0259F950, bool, RegexParser_IsCaptureSlot, (RegexParser * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x0259FA40, bool, RegexParser_IsCaptureName, (RegexParser * __this, String * capname, MethodInfo * method));
DO_APP_FUNC(0x0259FA60, bool, RegexParser_UseOptionN, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0259FA70, bool, RegexParser_UseOptionI, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0259FA80, bool, RegexParser_UseOptionM, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0259FA90, bool, RegexParser_UseOptionS, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0259FAA0, bool, RegexParser_UseOptionX, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0259FAB0, bool, RegexParser_UseOptionE, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0259FAC0, bool, RegexParser_IsSpecial, (uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x0259FBA0, bool, RegexParser_IsStopperX, (uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x0259FC80, bool, RegexParser_IsQuantifier, (uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x0259FD60, bool, RegexParser_IsTrueQuantifier, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0259FF60, bool, RegexParser_IsSpace, (uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x025A0040, bool, RegexParser_IsMetachar, (uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x025A0120, void, RegexParser_AddConcatenate, (RegexParser * __this, int32_t pos, int32_t cch, bool isReplacement, MethodInfo * method));
DO_APP_FUNC(0x025A0590, void, RegexParser_PushGroup, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x025A05F0, void, RegexParser_PopGroup, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x0150AEB0, bool, RegexParser_EmptyStack, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x025A0720, void, RegexParser_StartGroup, (RegexParser * __this, RegexNode * openGroup, MethodInfo * method));
DO_APP_FUNC(0x025A0940, void, RegexParser_AddAlternate, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x025A0B30, void, RegexParser_AddConcatenate_1, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x025A0B70, void, RegexParser_AddConcatenate_2, (RegexParser * __this, bool lazy, int32_t min, int32_t max, MethodInfo * method));
DO_APP_FUNC(0x002FB990, RegexNode *, RegexParser_Unit, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x025A0BD0, void, RegexParser_AddUnitOne, (RegexParser * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x025A0D70, void, RegexParser_AddUnitNotone, (RegexParser * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x025A0F10, void, RegexParser_AddUnitSet, (RegexParser * __this, String * cc, MethodInfo * method));
DO_APP_FUNC(0x002FB9A0, void, RegexParser_AddUnitNode, (RegexParser * __this, RegexNode * node, MethodInfo * method));
DO_APP_FUNC(0x025A1070, void, RegexParser_AddUnitType, (RegexParser * __this, int32_t type, MethodInfo * method));
DO_APP_FUNC(0x025A11D0, void, RegexParser_AddGroup, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x025A13A0, void, RegexParser_PushOptions, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x025A1440, void, RegexParser_PopOptions, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x025A1500, bool, RegexParser_EmptyOptionsStack, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x025A1590, void, RegexParser_PopKeepOptions, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x025A1630, ArgumentException *, RegexParser_MakeException, (RegexParser * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x004E57A0, int32_t, RegexParser_Textpos, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x004E57B0, void, RegexParser_Textto, (RegexParser * __this, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x025A1860, uint16_t, RegexParser_MoveRightGetChar, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x025A1890, void, RegexParser_MoveRight, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x025A18A0, void, RegexParser_MoveRight_1, (RegexParser * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x00F01BE0, void, RegexParser_MoveLeft, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x025A18B0, uint16_t, RegexParser_CharAt, (RegexParser * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x025A18D0, uint16_t, RegexParser_RightChar, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x025A1900, uint16_t, RegexParser_RightChar_1, (RegexParser * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x025A1930, int32_t, RegexParser_CharsRight, (RegexParser * __this, MethodInfo * method));
DO_APP_FUNC(0x025A1950, void, RegexParser__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02A76300, void, RegexReplacement__ctor, (RegexReplacement * __this, String * rep, RegexNode * concat, Hashtable * _caps, MethodInfo * method));
DO_APP_FUNC(0x02A76AD0, void, RegexReplacement_ReplacementImpl, (RegexReplacement * __this, StringBuilder * sb, Match * match, MethodInfo * method));
DO_APP_FUNC(0x02A76D80, void, RegexReplacement_ReplacementImplRTL, (RegexReplacement * __this, List_1_System_String_ * al, Match * match, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, RegexReplacement_get_Pattern, (RegexReplacement * __this, MethodInfo * method));
DO_APP_FUNC(0x02A77030, String *, RegexReplacement_Replace, (RegexReplacement * __this, Regex * regex, String * input, int32_t count, int32_t startat, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RegexRunner__ctor, (RegexRunner * __this, MethodInfo * method));
DO_APP_FUNC(0x02A77620, Match *, RegexRunner_Scan, (RegexRunner * __this, Regex * regex, String * text, int32_t textbeg, int32_t textend, int32_t textstart, int32_t prevlen, bool quick, TimeSpan timeout, MethodInfo * method));
DO_APP_FUNC(0x02A779E0, void, RegexRunner_StartTimeoutWatch, (RegexRunner * __this, MethodInfo * method));
DO_APP_FUNC(0x02A77A40, void, RegexRunner_CheckTimeout, (RegexRunner * __this, MethodInfo * method));
DO_APP_FUNC(0x02A77BB0, void, RegexRunner_DoCheckTimeout, (RegexRunner * __this, MethodInfo * method));
DO_APP_FUNC(0x02A77D00, void, RegexRunner_InitMatch, (RegexRunner * __this, MethodInfo * method));
DO_APP_FUNC(0x02A78160, Match *, RegexRunner_TidyMatch, (RegexRunner * __this, bool quick, MethodInfo * method));
DO_APP_FUNC(0x02A781B0, void, RegexRunner_EnsureStorage, (RegexRunner * __this, MethodInfo * method));
DO_APP_FUNC(0x02A78380, bool, RegexRunner_IsBoundary, (RegexRunner * __this, int32_t index, int32_t startpos, int32_t endpos, MethodInfo * method));
DO_APP_FUNC(0x02A784C0, bool, RegexRunner_IsECMABoundary, (RegexRunner * __this, int32_t index, int32_t startpos, int32_t endpos, MethodInfo * method));
DO_APP_FUNC(0x02A78600, void, RegexRunner_DoubleTrack, (RegexRunner * __this, MethodInfo * method));
DO_APP_FUNC(0x02A786F0, void, RegexRunner_DoubleStack, (RegexRunner * __this, MethodInfo * method));
DO_APP_FUNC(0x02A787E0, void, RegexRunner_DoubleCrawl, (RegexRunner * __this, MethodInfo * method));
DO_APP_FUNC(0x02A788D0, void, RegexRunner_Crawl, (RegexRunner * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x02A78A10, int32_t, RegexRunner_Popcrawl, (RegexRunner * __this, MethodInfo * method));
DO_APP_FUNC(0x02A78A50, int32_t, RegexRunner_Crawlpos, (RegexRunner * __this, MethodInfo * method));
DO_APP_FUNC(0x02A78A70, void, RegexRunner_Capture, (RegexRunner * __this, int32_t capnum, int32_t start, int32_t end, MethodInfo * method));
DO_APP_FUNC(0x02A78B00, void, RegexRunner_TransferCapture, (RegexRunner * __this, int32_t capnum, int32_t uncapnum, int32_t start, int32_t end, MethodInfo * method));
DO_APP_FUNC(0x02A78C30, void, RegexRunner_Uncapture, (RegexRunner * __this, MethodInfo * method));
DO_APP_FUNC(0x02A78C90, bool, RegexRunner_IsMatched, (RegexRunner * __this, int32_t cap, MethodInfo * method));
DO_APP_FUNC(0x02A78CC0, int32_t, RegexRunner_MatchIndex, (RegexRunner * __this, int32_t cap, MethodInfo * method));
DO_APP_FUNC(0x02A78CF0, int32_t, RegexRunner_MatchLength, (RegexRunner * __this, int32_t cap, MethodInfo * method));
DO_APP_FUNC(0x02A78D20, void, RegexTree__ctor, (RegexTree * __this, RegexNode * root, Hashtable * caps, Int32__Array * capnumlist, int32_t captop, Hashtable * capnames, String__Array * capslist, RegexOptions__Enum opts, MethodInfo * method));
DO_APP_FUNC(0x02A78D50, RegexCode *, RegexWriter_Write, (RegexTree * t, MethodInfo * method));
DO_APP_FUNC(0x02A78EB0, void, RegexWriter__ctor, (RegexWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x02A79120, void, RegexWriter_PushInt, (RegexWriter * __this, int32_t I, MethodInfo * method));
DO_APP_FUNC(0x01B5A5F0, bool, RegexWriter_EmptyStack, (RegexWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x02592220, int32_t, RegexWriter_PopInt, (RegexWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB970, int32_t, RegexWriter_CurPos, (RegexWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x02A79230, void, RegexWriter_PatchJump, (RegexWriter * __this, int32_t Offset, int32_t jumpDest, MethodInfo * method));
DO_APP_FUNC(0x02A79270, void, RegexWriter_Emit, (RegexWriter * __this, int32_t op, MethodInfo * method));
DO_APP_FUNC(0x02A79320, void, RegexWriter_Emit_1, (RegexWriter * __this, int32_t op, int32_t opd1, MethodInfo * method));
DO_APP_FUNC(0x02A79410, void, RegexWriter_Emit_2, (RegexWriter * __this, int32_t op, int32_t opd1, int32_t opd2, MethodInfo * method));
DO_APP_FUNC(0x02A79540, int32_t, RegexWriter_StringCode, (RegexWriter * __this, String * str, MethodInfo * method));
DO_APP_FUNC(0x02A796E0, ArgumentException *, RegexWriter_MakeException, (RegexWriter * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x02A79830, int32_t, RegexWriter_MapCapnum, (RegexWriter * __this, int32_t capnum, MethodInfo * method));
DO_APP_FUNC(0x02A79940, RegexCode *, RegexWriter_RegexCodeFromRegexTree, (RegexWriter * __this, RegexTree * tree, MethodInfo * method));
DO_APP_FUNC(0x02A7A080, void, RegexWriter_EmitFragment, (RegexWriter * __this, int32_t nodetype, RegexNode * node, int32_t CurIndex, MethodInfo * method));
DO_APP_FUNC(0x01FFE670, void, BooleanSwitch__ctor, (BooleanSwitch * __this, String * displayName, String * description, MethodInfo * method));
DO_APP_FUNC(0x02004A20, void, Switch__ctor, (Switch * __this, String * displayName, String * description, MethodInfo * method));
DO_APP_FUNC(0x02004AD0, void, Switch__ctor_1, (Switch * __this, String * displayName, String * description, String * defaultSwitchValue, MethodInfo * method));
DO_APP_FUNC(0x02004DD0, void, Switch__pruneCachedSwitches, (MethodInfo * method));
DO_APP_FUNC(0x020053C0, void, Switch__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02005510, void, SwitchLevelAttribute__ctor, (SwitchLevelAttribute * __this, Type * switchLevelType, MethodInfo * method));
DO_APP_FUNC(0x02005510, void, SwitchLevelAttribute_set_SwitchLevelType, (SwitchLevelAttribute * __this, Type * value, MethodInfo * method));
DO_APP_FUNC(0x020055F0, void, TraceSwitch__ctor, (TraceSwitch * __this, String * displayName, String * description, MethodInfo * method));
DO_APP_FUNC(0x01A8DC40, void, AsyncStreamReader_Close, (AsyncStreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFE440, void, AsyncStreamReader_System_IDisposable_Dispose, (AsyncStreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFE4F0, void, AsyncStreamReader_Dispose, (AsyncStreamReader * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x00DC8A40, void, AsyncStreamReader_CancelOperation, (AsyncStreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFE620, void, AsyncStreamReader_WaitUtilEOF, (AsyncStreamReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFE840, void, Process__ctor, (Process * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFE900, void, Process__ctor_1, (Process * __this, String * machineName, bool isRemoteMachine, int32_t processId, ProcessInfo * processInfo, MethodInfo * method));
DO_APP_FUNC(0x01FFE9E0, bool, Process_get_Associated, (Process * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFE9F0, bool, Process_get_HasExited, (Process * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFEE00, void *, Process_get_Handle, (Process * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFEF30, int32_t, Process_get_Id, (Process * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFEF50, ProcessStartInfo *, Process_get_StartInfo, (Process * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFF1D0, ISynchronizeInvoke *, Process_get_SynchronizingObject, (Process * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFF330, StreamWriter *, Process_get_StandardInput, (Process * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFF400, StreamReader *, Process_get_StandardOutput, (Process * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFF520, void, Process_ReleaseProcessHandle, (Process * __this, SafeProcessHandle * handle, MethodInfo * method));
DO_APP_FUNC(0x01FFF550, void, Process_CompletionCallback, (Process * __this, Object * context, bool wasSignaled, MethodInfo * method));
DO_APP_FUNC(0x01FFF570, void, Process_Dispose, (Process * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01FFF5C0, void, Process_Close, (Process * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFF7B0, void, Process_EnsureState, (Process * __this, Process_State__Enum state, MethodInfo * method));
DO_APP_FUNC(0x01FFFA10, void, Process_EnsureWatchingForExit, (Process * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFFD40, Process *, Process_GetCurrentProcess, (MethodInfo * method));
DO_APP_FUNC(0x01FFFF20, void, Process_OnExited, (Process * __this, MethodInfo * method));
DO_APP_FUNC(0x02000160, SafeProcessHandle *, Process_GetProcessHandle, (Process * __this, int32_t access, bool throwIfExited, MethodInfo * method));
DO_APP_FUNC(0x02000670, SafeProcessHandle *, Process_GetProcessHandle_1, (Process * __this, int32_t access, MethodInfo * method));
DO_APP_FUNC(0x02000680, SafeProcessHandle *, Process_OpenProcessHandle, (Process * __this, int32_t access, MethodInfo * method));
DO_APP_FUNC(0x02000790, void, Process_Refresh, (Process * __this, MethodInfo * method));
DO_APP_FUNC(0x020007B0, void, Process_SetProcessHandle, (Process * __this, SafeProcessHandle * processHandle, MethodInfo * method));
DO_APP_FUNC(0x020007D0, void, Process_SetProcessId, (Process * __this, int32_t processId, MethodInfo * method));
DO_APP_FUNC(0x020007E0, bool, Process_Start, (Process * __this, MethodInfo * method));
DO_APP_FUNC(0x020008F0, void, Process_Kill, (Process * __this, MethodInfo * method));
DO_APP_FUNC(0x02000A70, void, Process_StopWatchingForExit, (Process * __this, MethodInfo * method));
DO_APP_FUNC(0x02000B80, String *, Process_ToString, (Process * __this, MethodInfo * method));
DO_APP_FUNC(0x02000CE0, bool, Process_WaitForExit, (Process * __this, int32_t milliseconds, MethodInfo * method));
DO_APP_FUNC(0x02001070, void, Process_WaitForExit_1, (Process * __this, MethodInfo * method));
DO_APP_FUNC(0x02001080, String *, Process_ProcessName_internal, (void * handle, MethodInfo * method));
DO_APP_FUNC(0x02001180, String *, Process_ProcessName_internal_1, (SafeProcessHandle * handle, MethodInfo * method));
DO_APP_FUNC(0x020013D0, String *, Process_get_ProcessName, (Process * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Process_ShellExecuteEx_internal, (ProcessStartInfo * startInfo, Process_ProcInfo * procInfo, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Process_CreateProcess_internal, (ProcessStartInfo * startInfo, void * stdin_1, void * stdout_1, void * stderr_1, Process_ProcInfo * procInfo, MethodInfo * method));
DO_APP_FUNC(0x02001630, bool, Process_StartWithShellExecuteEx, (Process * __this, ProcessStartInfo * startInfo, MethodInfo * method));
DO_APP_FUNC(0x02001A20, void, Process_CreatePipe, (void * * read, void * * write, bool writeDirection, MethodInfo * method));
DO_APP_FUNC(0x02001DA0, bool, Process_get_IsWindows, (MethodInfo * method));
DO_APP_FUNC(0x02001DE0, bool, Process_StartWithCreateProcess, (Process * __this, ProcessStartInfo * startInfo, MethodInfo * method));
DO_APP_FUNC(0x02003370, void, Process_FillUserInfo, (ProcessStartInfo * startInfo, Process_ProcInfo * procInfo, MethodInfo * method));
DO_APP_FUNC(0x020034F0, void, Process_RaiseOnExited, (Process * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Process__cctor, (MethodInfo * method));
DO_APP_FUNC(0x020035C0, void, ProcessStartInfo__ctor, (ProcessStartInfo * __this, Process * parent, MethodInfo * method));
DO_APP_FUNC(0x02003720, String *, ProcessStartInfo_get_Arguments, (ProcessStartInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, ProcessStartInfo_set_Arguments, (ProcessStartInfo * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0069FA40, void, ProcessStartInfo_set_CreateNoWindow, (ProcessStartInfo * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x020037B0, StringDictionary *, ProcessStartInfo_get_EnvironmentVariables, (ProcessStartInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00675C60, bool, ProcessStartInfo_get_RedirectStandardInput, (ProcessStartInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00675C70, void, ProcessStartInfo_set_RedirectStandardInput, (ProcessStartInfo * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x008543B0, bool, ProcessStartInfo_get_RedirectStandardOutput, (ProcessStartInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00DC31D0, void, ProcessStartInfo_set_RedirectStandardOutput, (ProcessStartInfo * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x0194FC70, bool, ProcessStartInfo_get_RedirectStandardError, (ProcessStartInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBE0, Encoding *, ProcessStartInfo_get_StandardErrorEncoding, (ProcessStartInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, Encoding *, ProcessStartInfo_get_StandardOutputEncoding, (ProcessStartInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00446590, bool, ProcessStartInfo_get_UseShellExecute, (ProcessStartInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x005150D0, void, ProcessStartInfo_set_UseShellExecute, (ProcessStartInfo * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x02003C60, String *, ProcessStartInfo_get_UserName, (ProcessStartInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, SecureString *, ProcessStartInfo_get_Password, (ProcessStartInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02003CF0, String *, ProcessStartInfo_get_Domain, (ProcessStartInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0051DB40, bool, ProcessStartInfo_get_LoadUserProfile, (ProcessStartInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02003D80, String *, ProcessStartInfo_get_FileName, (ProcessStartInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, ProcessStartInfo_set_FileName, (ProcessStartInfo * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x02003E10, String *, ProcessStartInfo_get_WorkingDirectory, (ProcessStartInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02003EA0, void, ProcessStartInfo_set_WindowStyle, (ProcessStartInfo * __this, ProcessWindowStyle__Enum value, MethodInfo * method));
DO_APP_FUNC(0x0107BE90, bool, ProcessStartInfo_get_HaveEnvVars, (ProcessStartInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02004020, void, ProcessStartInfo__cctor, (MethodInfo * method));
DO_APP_FUNC(0x020040B0, void, ProcessWaitHandle__ctor, (ProcessWaitHandle * __this, SafeProcessHandle * processHandle, MethodInfo * method));
DO_APP_FUNC(0x01FFE790, void, MonitoringDescriptionAttribute__ctor, (MonitoringDescriptionAttribute * __this, String * description, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, MonitoringDescriptionAttribute_get_Description, (MonitoringDescriptionAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02004240, int64_t, Stopwatch_GetTimestamp, (MethodInfo * method));
DO_APP_FUNC(0x02004250, Stopwatch *, Stopwatch_StartNew, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Stopwatch__ctor, (Stopwatch * __this, MethodInfo * method));
DO_APP_FUNC(0x020043A0, TimeSpan, Stopwatch_get_Elapsed, (Stopwatch * __this, MethodInfo * method));
DO_APP_FUNC(0x02004510, int64_t, Stopwatch_get_ElapsedMilliseconds, (Stopwatch * __this, MethodInfo * method));
DO_APP_FUNC(0x02004680, int64_t, Stopwatch_get_ElapsedTicks, (Stopwatch * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A030, bool, Stopwatch_get_IsRunning, (Stopwatch * __this, MethodInfo * method));
DO_APP_FUNC(0x02004740, void, Stopwatch_Reset, (Stopwatch * __this, MethodInfo * method));
DO_APP_FUNC(0x02004750, void, Stopwatch_Start, (Stopwatch * __this, MethodInfo * method));
DO_APP_FUNC(0x02004800, void, Stopwatch_Stop, (Stopwatch * __this, MethodInfo * method));
DO_APP_FUNC(0x020048D0, void, Stopwatch_Restart, (Stopwatch * __this, MethodInfo * method));
DO_APP_FUNC(0x02004980, void, Stopwatch__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ExcludeFromCodeCoverageAttribute__ctor, (ExcludeFromCodeCoverageAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0249EC00, void, AddingNewEventArgs__ctor, (AddingNewEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x0249EC90, void, AddingNewEventArgs__ctor_1, (AddingNewEventArgs * __this, Object * newObject, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Object *, AddingNewEventArgs_get_NewObject, (AddingNewEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, AddingNewEventArgs_set_NewObject, (AddingNewEventArgs * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, AddingNewEventHandler__ctor, (AddingNewEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, AddingNewEventHandler_Invoke, (AddingNewEventHandler * __this, Object * sender, AddingNewEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, AddingNewEventHandler_BeginInvoke, (AddingNewEventHandler * __this, Object * sender, AddingNewEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, AddingNewEventHandler_EndInvoke, (AddingNewEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x0249ED40, void, AmbientValueAttribute__ctor, (AmbientValueAttribute * __this, Type * type, String * value, MethodInfo * method));
DO_APP_FUNC(0x0249EE30, void, AmbientValueAttribute__ctor_1, (AmbientValueAttribute * __this, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x0249EED0, void, AmbientValueAttribute__ctor_2, (AmbientValueAttribute * __this, uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x0249EF70, void, AmbientValueAttribute__ctor_3, (AmbientValueAttribute * __this, int16_t value, MethodInfo * method));
DO_APP_FUNC(0x0249F010, void, AmbientValueAttribute__ctor_4, (AmbientValueAttribute * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0249F0B0, void, AmbientValueAttribute__ctor_5, (AmbientValueAttribute * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x0249F150, void, AmbientValueAttribute__ctor_6, (AmbientValueAttribute * __this, float value, MethodInfo * method));
DO_APP_FUNC(0x0249F1F0, void, AmbientValueAttribute__ctor_7, (AmbientValueAttribute * __this, double value, MethodInfo * method));
DO_APP_FUNC(0x0249F290, void, AmbientValueAttribute__ctor_8, (AmbientValueAttribute * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, AmbientValueAttribute__ctor_9, (AmbientValueAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, AmbientValueAttribute__ctor_10, (AmbientValueAttribute * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Object *, AmbientValueAttribute_get_Value, (AmbientValueAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0249F330, bool, AmbientValueAttribute_Equals, (AmbientValueAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, AmbientValueAttribute_GetHashCode, (AmbientValueAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0249F430, Object *, ArrayConverter_ConvertTo, (ArrayConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x0249F760, PropertyDescriptorCollection *, ArrayConverter_GetProperties, (ArrayConverter * __this, ITypeDescriptorContext * context, Object * value, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, ArrayConverter_GetPropertiesSupported, (ArrayConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x0249FD10, void, ArrayConverter__ctor, (ArrayConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x0249FDA0, void, ArrayConverter_ArrayPropertyDescriptor__ctor, (ArrayConverter_ArrayPropertyDescriptor * __this, Type * arrayType, Type * elementType, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0249FE90, Object *, ArrayConverter_ArrayPropertyDescriptor_GetValue, (ArrayConverter_ArrayPropertyDescriptor * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x0249FFF0, void, ArrayConverter_ArrayPropertyDescriptor_SetValue, (ArrayConverter_ArrayPropertyDescriptor * __this, Object * instance, Object * value, MethodInfo * method));
DO_APP_FUNC(0x024A01A0, void, ArraySubsetEnumerator__ctor, (ArraySubsetEnumerator * __this, Array * array, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x024A01B0, bool, ArraySubsetEnumerator_MoveNext, (ArraySubsetEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01EA24A0, void, ArraySubsetEnumerator_Reset, (ArraySubsetEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x024A01D0, Object *, ArraySubsetEnumerator_get_Current, (ArraySubsetEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x024A0290, void, AsyncCompletedEventArgs__ctor, (AsyncCompletedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x024A0320, void, AsyncCompletedEventArgs__ctor_1, (AsyncCompletedEventArgs * __this, Exception * error, bool cancelled, Object * userState, MethodInfo * method));
DO_APP_FUNC(0x0052A280, bool, AsyncCompletedEventArgs_get_Cancelled, (AsyncCompletedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Exception *, AsyncCompletedEventArgs_get_Error, (AsyncCompletedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, Object *, AsyncCompletedEventArgs_get_UserState, (AsyncCompletedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x024A03E0, void, AsyncCompletedEventArgs_RaiseExceptionIfNecessary, (AsyncCompletedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, AsyncCompletedEventHandler__ctor, (AsyncCompletedEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, AsyncCompletedEventHandler_Invoke, (AsyncCompletedEventHandler * __this, Object * sender, AsyncCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, AsyncCompletedEventHandler_BeginInvoke, (AsyncCompletedEventHandler * __this, Object * sender, AsyncCompletedEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, AsyncCompletedEventHandler_EndInvoke, (AsyncCompletedEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x024A0500, void, AsyncOperation__ctor, (AsyncOperation * __this, Object * userSuppliedState, SynchronizationContext * syncContext, MethodInfo * method));
DO_APP_FUNC(0x024A0540, void, AsyncOperation_Finalize, (AsyncOperation * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Object *, AsyncOperation_get_UserSuppliedState, (AsyncOperation * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, SynchronizationContext *, AsyncOperation_get_SynchronizationContext, (AsyncOperation * __this, MethodInfo * method));
DO_APP_FUNC(0x024A05D0, void, AsyncOperation_Post, (AsyncOperation * __this, SendOrPostCallback * d, Object * arg, MethodInfo * method));
DO_APP_FUNC(0x024A06E0, void, AsyncOperation_PostOperationCompleted, (AsyncOperation * __this, SendOrPostCallback * d, Object * arg, MethodInfo * method));
DO_APP_FUNC(0x024A0700, void, AsyncOperation_OperationCompleted, (AsyncOperation * __this, MethodInfo * method));
DO_APP_FUNC(0x024A0720, void, AsyncOperation_OperationCompletedCore, (AsyncOperation * __this, MethodInfo * method));
DO_APP_FUNC(0x024A0840, void, AsyncOperation_VerifyNotCompleted, (AsyncOperation * __this, MethodInfo * method));
DO_APP_FUNC(0x024A0900, void, AsyncOperation_VerifyDelegateNotNull, (AsyncOperation * __this, SendOrPostCallback * d, MethodInfo * method));
DO_APP_FUNC(0x024A09D0, AsyncOperation *, AsyncOperation_CreateOperation, (Object * userSuppliedState, SynchronizationContext * syncContext, MethodInfo * method));
DO_APP_FUNC(0x024A0B40, void, AsyncOperation__ctor_1, (AsyncOperation * __this, MethodInfo * method));
DO_APP_FUNC(0x024A0B70, AsyncOperation *, AsyncOperationManager_CreateOperation, (Object * userSuppliedState, MethodInfo * method));
DO_APP_FUNC(0x024A0CF0, SynchronizationContext *, AsyncOperationManager_get_SynchronizationContext, (MethodInfo * method));
DO_APP_FUNC(0x0232E360, void, AsyncOperationManager_set_SynchronizationContext, (SynchronizationContext * value, MethodInfo * method));
DO_APP_FUNC(0x024A0EB0, void, AttributeCollection__ctor, (AttributeCollection * __this, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AttributeCollection__ctor_1, (AttributeCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x024A0FC0, AttributeCollection *, AttributeCollection_FromExisting, (AttributeCollection * existing, Attribute__Array * newAttributes, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Attribute__Array *, AttributeCollection_get_Attributes, (AttributeCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x024A1490, int32_t, AttributeCollection_get_Count, (AttributeCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x024A14C0, Attribute *, AttributeCollection_get_Item, (AttributeCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x024A1510, Attribute *, AttributeCollection_get_Item_1, (AttributeCollection * __this, Type * attributeType, MethodInfo * method));
DO_APP_FUNC(0x024A1B10, bool, AttributeCollection_Contains, (AttributeCollection * __this, Attribute * attribute, MethodInfo * method));
DO_APP_FUNC(0x024A1B90, bool, AttributeCollection_Contains_1, (AttributeCollection * __this, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x024A1C10, Attribute *, AttributeCollection_GetDefaultAttribute, (AttributeCollection * __this, Type * attributeType, MethodInfo * method));
DO_APP_FUNC(0x024A21E0, IEnumerator *, AttributeCollection_GetEnumerator, (AttributeCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x024A2210, bool, AttributeCollection_Matches, (AttributeCollection * __this, Attribute * attribute, MethodInfo * method));
DO_APP_FUNC(0x024A22F0, bool, AttributeCollection_Matches_1, (AttributeCollection * __this, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x024A1490, int32_t, AttributeCollection_System_Collections_ICollection_get_Count, (AttributeCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, AttributeCollection_System_Collections_ICollection_get_IsSynchronized, (AttributeCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Object *, AttributeCollection_System_Collections_ICollection_get_SyncRoot, (AttributeCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x024A2410, void, AttributeCollection_CopyTo, (AttributeCollection * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x024A21E0, IEnumerator *, AttributeCollection_System_Collections_IEnumerable_GetEnumerator, (AttributeCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x024A24A0, void, AttributeCollection__cctor, (MethodInfo * method));
DO_APP_FUNC(0x024A26C0, void, AttributeProviderAttribute__ctor, (AttributeProviderAttribute * __this, String * typeName, MethodInfo * method));
DO_APP_FUNC(0x024A2780, void, AttributeProviderAttribute__ctor_1, (AttributeProviderAttribute * __this, String * typeName, String * propertyName, MethodInfo * method));
DO_APP_FUNC(0x024A2880, void, AttributeProviderAttribute__ctor_2, (AttributeProviderAttribute * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, AttributeProviderAttribute_get_TypeName, (AttributeProviderAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, AttributeProviderAttribute_get_PropertyName, (AttributeProviderAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x024A2970, void, BackgroundWorker__ctor, (BackgroundWorker * __this, MethodInfo * method));
DO_APP_FUNC(0x024A2C90, void, BackgroundWorker_AsyncOperationCompleted, (BackgroundWorker * __this, Object * arg, MethodInfo * method));
DO_APP_FUNC(0x00F5DF50, bool, BackgroundWorker_get_CancellationPending, (BackgroundWorker * __this, MethodInfo * method));
DO_APP_FUNC(0x024A2D80, void, BackgroundWorker_CancelAsync, (BackgroundWorker * __this, MethodInfo * method));
DO_APP_FUNC(0x024A2E50, void, BackgroundWorker_add_DoWork, (BackgroundWorker * __this, DoWorkEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x024A2F30, void, BackgroundWorker_remove_DoWork, (BackgroundWorker * __this, DoWorkEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x024A3040, bool, BackgroundWorker_get_IsBusy, (BackgroundWorker * __this, MethodInfo * method));
DO_APP_FUNC(0x024A3050, void, BackgroundWorker_OnDoWork, (BackgroundWorker * __this, DoWorkEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x024A3160, void, BackgroundWorker_OnRunWorkerCompleted, (BackgroundWorker * __this, RunWorkerCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x024A3280, void, BackgroundWorker_OnProgressChanged, (BackgroundWorker * __this, ProgressChangedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x024A33A0, void, BackgroundWorker_add_ProgressChanged, (BackgroundWorker * __this, ProgressChangedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x024A3480, void, BackgroundWorker_remove_ProgressChanged, (BackgroundWorker * __this, ProgressChangedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x024A3590, void, BackgroundWorker_ProgressReporter, (BackgroundWorker * __this, Object * arg, MethodInfo * method));
DO_APP_FUNC(0x024A3680, void, BackgroundWorker_ReportProgress, (BackgroundWorker * __this, int32_t percentProgress, MethodInfo * method));
DO_APP_FUNC(0x024A3690, void, BackgroundWorker_ReportProgress_1, (BackgroundWorker * __this, int32_t percentProgress, Object * userState, MethodInfo * method));
DO_APP_FUNC(0x024A3870, void, BackgroundWorker_RunWorkerAsync, (BackgroundWorker * __this, MethodInfo * method));
DO_APP_FUNC(0x024A3970, void, BackgroundWorker_RunWorkerAsync_1, (BackgroundWorker * __this, Object * argument, MethodInfo * method));
DO_APP_FUNC(0x024A3A80, void, BackgroundWorker_add_RunWorkerCompleted, (BackgroundWorker * __this, RunWorkerCompletedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x024A3B60, void, BackgroundWorker_remove_RunWorkerCompleted, (BackgroundWorker * __this, RunWorkerCompletedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x00F5DF30, bool, BackgroundWorker_get_WorkerReportsProgress, (BackgroundWorker * __this, MethodInfo * method));
DO_APP_FUNC(0x00F5DF40, void, BackgroundWorker_set_WorkerReportsProgress, (BackgroundWorker * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x004F4CE0, bool, BackgroundWorker_get_WorkerSupportsCancellation, (BackgroundWorker * __this, MethodInfo * method));
DO_APP_FUNC(0x004F4CF0, void, BackgroundWorker_set_WorkerSupportsCancellation, (BackgroundWorker * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x024A3C70, void, BackgroundWorker_WorkerThreadStart, (BackgroundWorker * __this, Object * argument, MethodInfo * method));
DO_APP_FUNC(0x024A3FC0, void, BackgroundWorker__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00611810, void, BackgroundWorker_WorkerThreadStartDelegate__ctor, (BackgroundWorker_WorkerThreadStartDelegate * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x00673B90, void, BackgroundWorker_WorkerThreadStartDelegate_Invoke, (BackgroundWorker_WorkerThreadStartDelegate * __this, Object * argument, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, BackgroundWorker_WorkerThreadStartDelegate_BeginInvoke, (BackgroundWorker_WorkerThreadStartDelegate * __this, Object * argument, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, BackgroundWorker_WorkerThreadStartDelegate_EndInvoke, (BackgroundWorker_WorkerThreadStartDelegate * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x024A9E40, bool, ComponentEditor_EditComponent, (ComponentEditor * __this, Object * component, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ComponentEditor__ctor, (ComponentEditor * __this, MethodInfo * method));
DO_APP_FUNC(0x024A4D00, void, BindableAttribute__ctor, (BindableAttribute * __this, bool bindable, MethodInfo * method));
DO_APP_FUNC(0x01BE0270, void, BindableAttribute__ctor_1, (BindableAttribute * __this, bool bindable, BindingDirection__Enum direction, MethodInfo * method));
DO_APP_FUNC(0x024A4D10, void, BindableAttribute__ctor_2, (BindableAttribute * __this, BindableSupport__Enum flags, MethodInfo * method));
DO_APP_FUNC(0x024A4D30, void, BindableAttribute__ctor_3, (BindableAttribute * __this, BindableSupport__Enum flags, BindingDirection__Enum direction, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, BindableAttribute_get_Bindable, (BindableAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x00CC59E0, BindingDirection__Enum, BindableAttribute_get_Direction, (BindableAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x024A4D50, bool, BindableAttribute_Equals, (BindableAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE3D0, int32_t, BindableAttribute_GetHashCode, (BindableAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x024A4E40, bool, BindableAttribute_IsDefaultAttribute, (BindableAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x024A4F10, void, BindableAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x024A5150, bool, BooleanConverter_CanConvertFrom, (BooleanConverter * __this, ITypeDescriptorContext * context, Type * sourceType, MethodInfo * method));
DO_APP_FUNC(0x024A5230, Object *, BooleanConverter_ConvertFrom, (BooleanConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, MethodInfo * method));
DO_APP_FUNC(0x024A5440, TypeConverter_StandardValuesCollection *, BooleanConverter_GetStandardValues, (BooleanConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, BooleanConverter_GetStandardValuesExclusive, (BooleanConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, BooleanConverter_GetStandardValuesSupported, (BooleanConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x024A56D0, void, BooleanConverter__ctor, (BooleanConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, BrowsableAttribute__ctor, (BrowsableAttribute * __this, bool browsable, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, BrowsableAttribute_get_Browsable, (BrowsableAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x024A5760, bool, BrowsableAttribute_Equals, (BrowsableAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE3D0, int32_t, BrowsableAttribute_GetHashCode, (BrowsableAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x024A5830, bool, BrowsableAttribute_IsDefaultAttribute, (BrowsableAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x024A58F0, void, BrowsableAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x024A5B20, Type *, ByteConverter_get_TargetType, (ByteConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x024A5BC0, Object *, ByteConverter_FromString, (ByteConverter * __this, String * value, int32_t radix, MethodInfo * method));
DO_APP_FUNC(0x024A5C80, Object *, ByteConverter_FromString_1, (ByteConverter * __this, String * value, NumberFormatInfo * formatInfo, MethodInfo * method));
DO_APP_FUNC(0x024A5D40, Object *, ByteConverter_FromString_2, (ByteConverter * __this, String * value, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x024A5DF0, String *, ByteConverter_ToString, (ByteConverter * __this, Object * value, NumberFormatInfo * formatInfo, MethodInfo * method));
DO_APP_FUNC(0x01FE1B70, void, ByteConverter__ctor, (ByteConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x024A5EC0, void, CancelEventArgs__ctor, (CancelEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x024A5F60, void, CancelEventArgs__ctor_1, (CancelEventArgs * __this, bool cancel, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, CancelEventArgs_get_Cancel, (CancelEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, CancelEventArgs_set_Cancel, (CancelEventArgs * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, CancelEventHandler__ctor, (CancelEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, CancelEventHandler_Invoke, (CancelEventHandler * __this, Object * sender, CancelEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, CancelEventHandler_BeginInvoke, (CancelEventHandler * __this, Object * sender, CancelEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, CancelEventHandler_EndInvoke, (CancelEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x024A6000, CategoryAttribute *, CategoryAttribute_get_Action, (MethodInfo * method));
DO_APP_FUNC(0x024A6190, CategoryAttribute *, CategoryAttribute_get_Appearance, (MethodInfo * method));
DO_APP_FUNC(0x024A6320, CategoryAttribute *, CategoryAttribute_get_Asynchronous, (MethodInfo * method));
DO_APP_FUNC(0x024A64B0, CategoryAttribute *, CategoryAttribute_get_Behavior, (MethodInfo * method));
DO_APP_FUNC(0x024A6640, CategoryAttribute *, CategoryAttribute_get_Data, (MethodInfo * method));
DO_APP_FUNC(0x024A67D0, CategoryAttribute *, CategoryAttribute_get_Default, (MethodInfo * method));
DO_APP_FUNC(0x024A69C0, CategoryAttribute *, CategoryAttribute_get_Design, (MethodInfo * method));
DO_APP_FUNC(0x024A6B50, CategoryAttribute *, CategoryAttribute_get_DragDrop, (MethodInfo * method));
DO_APP_FUNC(0x024A6CE0, CategoryAttribute *, CategoryAttribute_get_Focus, (MethodInfo * method));
DO_APP_FUNC(0x024A6E70, CategoryAttribute *, CategoryAttribute_get_Format, (MethodInfo * method));
DO_APP_FUNC(0x024A7000, CategoryAttribute *, CategoryAttribute_get_Key, (MethodInfo * method));
DO_APP_FUNC(0x024A7190, CategoryAttribute *, CategoryAttribute_get_Layout, (MethodInfo * method));
DO_APP_FUNC(0x024A7320, CategoryAttribute *, CategoryAttribute_get_Mouse, (MethodInfo * method));
DO_APP_FUNC(0x024A74B0, CategoryAttribute *, CategoryAttribute_get_WindowStyle, (MethodInfo * method));
DO_APP_FUNC(0x024A7640, void, CategoryAttribute__ctor, (CategoryAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x024A76E0, void, CategoryAttribute__ctor_1, (CategoryAttribute * __this, String * category, MethodInfo * method));
DO_APP_FUNC(0x024A76F0, String *, CategoryAttribute_get_Category, (CategoryAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x024A7740, bool, CategoryAttribute_Equals, (CategoryAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x024A78E0, int32_t, CategoryAttribute_GetHashCode, (CategoryAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x024A7940, String *, CategoryAttribute_GetLocalizedString, (CategoryAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x024A7F70, bool, CategoryAttribute_IsDefaultAttribute, (CategoryAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x024A8010, bool, CharConverter_CanConvertFrom, (CharConverter * __this, ITypeDescriptorContext * context, Type * sourceType, MethodInfo * method));
DO_APP_FUNC(0x024A80F0, Object *, CharConverter_ConvertTo, (CharConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x024A8230, Object *, CharConverter_ConvertFrom, (CharConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, MethodInfo * method));
DO_APP_FUNC(0x024A8420, void, CharConverter__ctor, (CharConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x024A84B0, void, CollectionChangeEventArgs__ctor, (CollectionChangeEventArgs * __this, CollectionChangeAction__Enum action, Object * element, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, CollectionChangeAction__Enum, CollectionChangeEventArgs_get_Action, (CollectionChangeEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Object *, CollectionChangeEventArgs_get_Element, (CollectionChangeEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, CollectionChangeEventHandler__ctor, (CollectionChangeEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, CollectionChangeEventHandler_Invoke, (CollectionChangeEventHandler * __this, Object * sender, CollectionChangeEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, CollectionChangeEventHandler_BeginInvoke, (CollectionChangeEventHandler * __this, Object * sender, CollectionChangeEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, CollectionChangeEventHandler_EndInvoke, (CollectionChangeEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x024A8560, Object *, CollectionConverter_ConvertTo, (CollectionConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, PropertyDescriptorCollection *, CollectionConverter_GetProperties, (CollectionConverter * __this, ITypeDescriptorContext * context, Object * value, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, CollectionConverter_GetPropertiesSupported, (CollectionConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x0249FD10, void, CollectionConverter__ctor, (CollectionConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x024A86E0, BooleanSwitch *, CompModSwitches_get_CommonDesignerServices, (MethodInfo * method));
DO_APP_FUNC(0x024A8880, TraceSwitch *, CompModSwitches_get_EventLog, (MethodInfo * method));
DO_APP_FUNC(0x00B70200, void, ComplexBindingPropertiesAttribute__ctor, (ComplexBindingPropertiesAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x00B701E0, void, ComplexBindingPropertiesAttribute__ctor_1, (ComplexBindingPropertiesAttribute * __this, String * dataSource, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, ComplexBindingPropertiesAttribute__ctor_2, (ComplexBindingPropertiesAttribute * __this, String * dataSource, String * dataMember, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, ComplexBindingPropertiesAttribute_get_DataSource, (ComplexBindingPropertiesAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, ComplexBindingPropertiesAttribute_get_DataMember, (ComplexBindingPropertiesAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x024A8A20, bool, ComplexBindingPropertiesAttribute_Equals, (ComplexBindingPropertiesAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, ComplexBindingPropertiesAttribute_GetHashCode, (ComplexBindingPropertiesAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x024A8B40, void, ComplexBindingPropertiesAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x024A8C90, void, Component_Finalize, (Component * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, Component_get_CanRaiseEvents, (Component * __this, MethodInfo * method));
DO_APP_FUNC(0x008009A0, bool, Component_get_CanRaiseEventsInternal, (Component * __this, MethodInfo * method));
DO_APP_FUNC(0x024A8D10, void, Component_add_Disposed, (Component * __this, EventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x024A8DF0, void, Component_remove_Disposed, (Component * __this, EventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x024A8F00, EventHandlerList *, Component_get_Events, (Component * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, ISite *, Component_get_Site, (Component * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, Component_set_Site, (Component * __this, ISite * value, MethodInfo * method));
DO_APP_FUNC(0x024A9050, void, Component_Dispose, (Component * __this, MethodInfo * method));
DO_APP_FUNC(0x024A9100, void, Component_Dispose_1, (Component * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x024A9360, IContainer *, Component_get_Container, (Component * __this, MethodInfo * method));
DO_APP_FUNC(0x024A9400, Object *, Component_GetService, (Component * __this, Type * service, MethodInfo * method));
DO_APP_FUNC(0x024A94B0, bool, Component_get_DesignMode, (Component * __this, MethodInfo * method));
DO_APP_FUNC(0x024A9550, String *, Component_ToString, (Component * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Component__ctor, (Component * __this, MethodInfo * method));
DO_APP_FUNC(0x024A9680, void, Component__cctor, (MethodInfo * method));
DO_APP_FUNC(0x024A97C0, void, ComponentCollection__ctor, (ComponentCollection * __this, IComponent__Array * components, MethodInfo * method));
DO_APP_FUNC(0x024A9800, IComponent *, ComponentCollection_get_Item, (ComponentCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x024A9B90, IComponent *, ComponentCollection_get_Item_1, (ComponentCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0202CB70, void, ComponentCollection_CopyTo, (ComponentCollection * __this, IComponent__Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x024A9C70, void, ComponentConverter__ctor, (ComponentConverter * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x024A9D90, PropertyDescriptorCollection *, ComponentConverter_GetProperties, (ComponentConverter * __this, ITypeDescriptorContext * context, Object * value, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, ComponentConverter_GetPropertiesSupported, (ComponentConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x024A9E60, void, ComponentResourceManager__ctor, (ComponentResourceManager * __this, MethodInfo * method));
DO_APP_FUNC(0x024A9F00, void, ComponentResourceManager__ctor_1, (ComponentResourceManager * __this, Type * t, MethodInfo * method));
DO_APP_FUNC(0x024A9FB0, CultureInfo *, ComponentResourceManager_get_NeutralResourcesCulture, (ComponentResourceManager * __this, MethodInfo * method));
DO_APP_FUNC(0x024AA090, void, ComponentResourceManager_ApplyResources, (ComponentResourceManager * __this, Object * value, String * objectName, MethodInfo * method));
DO_APP_FUNC(0x024AA0C0, void, ComponentResourceManager_ApplyResources_1, (ComponentResourceManager * __this, Object * value, String * objectName, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x024AA9C0, SortedList_2_System_String_System_Object_ *, ComponentResourceManager_FillResources, (ComponentResourceManager * __this, CultureInfo * culture, ResourceSet * * resourceSet, MethodInfo * method));
DO_APP_FUNC(0x024AB110, void, Container_Finalize, (Container * __this, MethodInfo * method));
DO_APP_FUNC(0x0234BFD0, void, Container_Add, (Container * __this, IComponent * component, MethodInfo * method));
DO_APP_FUNC(0x024AB190, void, Container_Add_1, (Container * __this, IComponent * component, String * name, MethodInfo * method));
DO_APP_FUNC(0x024AB4B0, ISite *, Container_CreateSite, (Container * __this, IComponent * component, String * name, MethodInfo * method));
DO_APP_FUNC(0x024AB610, void, Container_Dispose, (Container * __this, MethodInfo * method));
DO_APP_FUNC(0x024AB6C0, void, Container_Dispose_1, (Container * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x024ABA60, Object *, Container_GetService, (Container * __this, Type * service, MethodInfo * method));
DO_APP_FUNC(0x024ABB30, ComponentCollection *, Container_get_Components, (Container * __this, MethodInfo * method));
DO_APP_FUNC(0x024ABFF0, void, Container_Remove, (Container * __this, IComponent * component, MethodInfo * method));
DO_APP_FUNC(0x024AC000, void, Container_Remove_1, (Container * __this, IComponent * component, bool preserveSite, MethodInfo * method));
DO_APP_FUNC(0x024AC290, void, Container_RemoveWithoutUnsiting, (Container * __this, IComponent * component, MethodInfo * method));
DO_APP_FUNC(0x024AC2A0, void, Container_ValidateName, (Container * __this, IComponent * component, String * name, MethodInfo * method));
DO_APP_FUNC(0x024AC6C0, void, Container__ctor, (Container * __this, MethodInfo * method));
DO_APP_FUNC(0x00522850, void, Container_Site__ctor, (Container_Site * __this, IComponent * component, Container * container, String * name, MethodInfo * method));
DO_APP_FUNC(0x002FA280, IComponent *, Container_Site_get_Component, (Container_Site * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, IContainer *, Container_Site_get_Container, (Container_Site * __this, MethodInfo * method));
DO_APP_FUNC(0x01FDA080, Object *, Container_Site_GetService, (Container_Site * __this, Type * service, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, Container_Site_get_DesignMode, (Container_Site * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, Container_Site_get_Name, (Container_Site * __this, MethodInfo * method));
DO_APP_FUNC(0x01FDA170, void, Container_Site_set_Name, (Container_Site * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ContainerFilterService__ctor, (ContainerFilterService * __this, MethodInfo * method));
DO_APP_FUNC(0x00502220, ComponentCollection *, ContainerFilterService_FilterComponents, (ContainerFilterService * __this, ComponentCollection * components, MethodInfo * method));
DO_APP_FUNC(0x01FDA1E0, String *, CultureInfoConverter_get_DefaultCultureString, (CultureInfoConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FDA260, String *, CultureInfoConverter_GetCultureName, (CultureInfoConverter * __this, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x01FDA290, bool, CultureInfoConverter_CanConvertFrom, (CultureInfoConverter * __this, ITypeDescriptorContext * context, Type * sourceType, MethodInfo * method));
DO_APP_FUNC(0x01FDA370, bool, CultureInfoConverter_CanConvertTo, (CultureInfoConverter * __this, ITypeDescriptorContext * context, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x01FDA450, Object *, CultureInfoConverter_ConvertFrom, (CultureInfoConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FDAD50, Object *, CultureInfoConverter_ConvertTo, (CultureInfoConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x01FDB2F0, TypeConverter_StandardValuesCollection *, CultureInfoConverter_GetStandardValues, (CultureInfoConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, CultureInfoConverter_GetStandardValuesExclusive, (CultureInfoConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, CultureInfoConverter_GetStandardValuesSupported, (CultureInfoConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x01FDB670, void, CultureInfoConverter__ctor, (CultureInfoConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, CultureInfoConverter_CultureComparer__ctor, (CultureInfoConverter_CultureComparer * __this, CultureInfoConverter * cultureConverter, MethodInfo * method));
DO_APP_FUNC(0x01FDB700, int32_t, CultureInfoConverter_CultureComparer_Compare, (CultureInfoConverter_CultureComparer * __this, Object * item1, Object * item2, MethodInfo * method));
DO_APP_FUNC(0x01FDB8C0, String *, CultureInfoConverter_CultureInfoMapper_GetCultureInfoName, (String * cultureInfoDisplayName, MethodInfo * method));
DO_APP_FUNC(0x01FDB9E0, void, CultureInfoConverter_CultureInfoMapper_InitializeCultureInfoMap, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CustomTypeDescriptor__ctor, (CustomTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, CustomTypeDescriptor__ctor_1, (CustomTypeDescriptor * __this, ICustomTypeDescriptor * parent, MethodInfo * method));
DO_APP_FUNC(0x01FDD960, AttributeCollection *, CustomTypeDescriptor_GetAttributes, (CustomTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x01FDDA20, String *, CustomTypeDescriptor_GetClassName, (CustomTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x01FDDAC0, String *, CustomTypeDescriptor_GetComponentName, (CustomTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x01FDDB60, TypeConverter *, CustomTypeDescriptor_GetConverter, (CustomTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x01FDDCC0, EventDescriptor_1 *, CustomTypeDescriptor_GetDefaultEvent, (CustomTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x01FDDD50, PropertyDescriptor *, CustomTypeDescriptor_GetDefaultProperty, (CustomTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x01FDDDE0, Object *, CustomTypeDescriptor_GetEditor, (CustomTypeDescriptor * __this, Type * editorBaseType, MethodInfo * method));
DO_APP_FUNC(0x01FDDE90, EventDescriptorCollection *, CustomTypeDescriptor_GetEvents, (CustomTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x01FDDF50, EventDescriptorCollection *, CustomTypeDescriptor_GetEvents_1, (CustomTypeDescriptor * __this, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x01FDE020, PropertyDescriptorCollection *, CustomTypeDescriptor_GetProperties, (CustomTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x01FDE0E0, PropertyDescriptorCollection *, CustomTypeDescriptor_GetProperties_1, (CustomTypeDescriptor * __this, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x01FDE1B0, Object *, CustomTypeDescriptor_GetPropertyOwner, (CustomTypeDescriptor * __this, PropertyDescriptor * pd, MethodInfo * method));
DO_APP_FUNC(0x01FDE250, void, DataErrorsChangedEventArgs__ctor, (DataErrorsChangedEventArgs * __this, String * propertyName, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, DataErrorsChangedEventArgs_get_PropertyName, (DataErrorsChangedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00B80D80, void, DataObjectAttribute__ctor, (DataObjectAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, DataObjectAttribute__ctor_1, (DataObjectAttribute * __this, bool isDataObject, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, DataObjectAttribute_get_IsDataObject, (DataObjectAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FDE300, bool, DataObjectAttribute_Equals, (DataObjectAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE3D0, int32_t, DataObjectAttribute_GetHashCode, (DataObjectAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FDE3E0, bool, DataObjectAttribute_IsDefaultAttribute, (DataObjectAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FDE4A0, void, DataObjectAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01FDE6D0, void, DataObjectFieldAttribute__ctor, (DataObjectFieldAttribute * __this, bool primaryKey, MethodInfo * method));
DO_APP_FUNC(0x01FDE6F0, void, DataObjectFieldAttribute__ctor_1, (DataObjectFieldAttribute * __this, bool primaryKey, bool isIdentity, MethodInfo * method));
DO_APP_FUNC(0x01FDE710, void, DataObjectFieldAttribute__ctor_2, (DataObjectFieldAttribute * __this, bool primaryKey, bool isIdentity, bool isNullable, MethodInfo * method));
DO_APP_FUNC(0x01FDE730, void, DataObjectFieldAttribute__ctor_3, (DataObjectFieldAttribute * __this, bool primaryKey, bool isIdentity, bool isNullable, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x00504D80, bool, DataObjectFieldAttribute_get_IsIdentity, (DataObjectFieldAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01BFB750, bool, DataObjectFieldAttribute_get_IsNullable, (DataObjectFieldAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x00CC59E0, int32_t, DataObjectFieldAttribute_get_Length, (DataObjectFieldAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, DataObjectFieldAttribute_get_PrimaryKey, (DataObjectFieldAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FDE750, bool, DataObjectFieldAttribute_Equals, (DataObjectFieldAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, DataObjectFieldAttribute_GetHashCode, (DataObjectFieldAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FDE850, void, DataObjectMethodAttribute__ctor, (DataObjectMethodAttribute * __this, DataObjectMethodType__Enum methodType, MethodInfo * method));
DO_APP_FUNC(0x01FDE860, void, DataObjectMethodAttribute__ctor_1, (DataObjectMethodAttribute * __this, DataObjectMethodType__Enum methodType, bool isDefault, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, DataObjectMethodAttribute_get_IsDefault, (DataObjectMethodAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x00CC59E0, DataObjectMethodType__Enum, DataObjectMethodAttribute_get_MethodType, (DataObjectMethodAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FDE870, bool, DataObjectMethodAttribute_Equals, (DataObjectMethodAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE950, int32_t, DataObjectMethodAttribute_GetHashCode, (DataObjectMethodAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FDE960, bool, DataObjectMethodAttribute_Match, (DataObjectMethodAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDEA30, bool, DateTimeConverter_CanConvertFrom, (DateTimeConverter * __this, ITypeDescriptorContext * context, Type * sourceType, MethodInfo * method));
DO_APP_FUNC(0x01FDEB10, bool, DateTimeConverter_CanConvertTo, (DateTimeConverter * __this, ITypeDescriptorContext * context, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x01FDEBF0, Object *, DateTimeConverter_ConvertFrom, (DateTimeConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FDEF20, Object *, DateTimeConverter_ConvertTo, (DateTimeConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x01FDFC70, void, DateTimeConverter__ctor, (DateTimeConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FDFD00, bool, DateTimeOffsetConverter_CanConvertFrom, (DateTimeOffsetConverter * __this, ITypeDescriptorContext * context, Type * sourceType, MethodInfo * method));
DO_APP_FUNC(0x01FDFDE0, bool, DateTimeOffsetConverter_CanConvertTo, (DateTimeOffsetConverter * __this, ITypeDescriptorContext * context, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x01FDFEC0, Object *, DateTimeOffsetConverter_ConvertFrom, (DateTimeOffsetConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FE0200, Object *, DateTimeOffsetConverter_ConvertTo, (DateTimeOffsetConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x01FE1160, void, DateTimeOffsetConverter__ctor, (DateTimeOffsetConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, DecimalConverter_get_AllowHex, (DecimalConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE11F0, Type *, DecimalConverter_get_TargetType, (DecimalConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE1290, bool, DecimalConverter_CanConvertTo, (DecimalConverter * __this, ITypeDescriptorContext * context, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x01FE1390, Object *, DecimalConverter_ConvertTo, (DecimalConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x01FE17B0, Object *, DecimalConverter_FromString, (DecimalConverter * __this, String * value, int32_t radix, MethodInfo * method));
DO_APP_FUNC(0x01FE18C0, Object *, DecimalConverter_FromString_1, (DecimalConverter * __this, String * value, NumberFormatInfo * formatInfo, MethodInfo * method));
DO_APP_FUNC(0x01FE19B0, Object *, DecimalConverter_FromString_2, (DecimalConverter * __this, String * value, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x01FE1A90, String *, DecimalConverter_ToString, (DecimalConverter * __this, Object * value, NumberFormatInfo * formatInfo, MethodInfo * method));
DO_APP_FUNC(0x01FE1B70, void, DecimalConverter__ctor, (DecimalConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x0063D180, void, DefaultBindingPropertyAttribute__ctor, (DefaultBindingPropertyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, DefaultBindingPropertyAttribute__ctor_1, (DefaultBindingPropertyAttribute * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, DefaultBindingPropertyAttribute_get_Name, (DefaultBindingPropertyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE1B80, bool, DefaultBindingPropertyAttribute_Equals, (DefaultBindingPropertyAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, DefaultBindingPropertyAttribute_GetHashCode, (DefaultBindingPropertyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE1C70, void, DefaultBindingPropertyAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, DefaultEventAttribute__ctor, (DefaultEventAttribute * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, DefaultEventAttribute_get_Name, (DefaultEventAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE1DC0, bool, DefaultEventAttribute_Equals, (DefaultEventAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, DefaultEventAttribute_GetHashCode, (DefaultEventAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE1EB0, void, DefaultEventAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, DefaultPropertyAttribute__ctor, (DefaultPropertyAttribute * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, DefaultPropertyAttribute_get_Name, (DefaultPropertyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE2000, bool, DefaultPropertyAttribute_Equals, (DefaultPropertyAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, DefaultPropertyAttribute_GetHashCode, (DefaultPropertyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE20F0, void, DefaultPropertyAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01FE2240, void, DefaultValueAttribute__ctor, (DefaultValueAttribute * __this, Type * type, String * value, MethodInfo * method));
DO_APP_FUNC(0x01FE2330, void, DefaultValueAttribute__ctor_1, (DefaultValueAttribute * __this, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x01FE23D0, void, DefaultValueAttribute__ctor_2, (DefaultValueAttribute * __this, uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x01FE2470, void, DefaultValueAttribute__ctor_3, (DefaultValueAttribute * __this, int16_t value, MethodInfo * method));
DO_APP_FUNC(0x01FE2510, void, DefaultValueAttribute__ctor_4, (DefaultValueAttribute * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01FE25B0, void, DefaultValueAttribute__ctor_5, (DefaultValueAttribute * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01FE2650, void, DefaultValueAttribute__ctor_6, (DefaultValueAttribute * __this, float value, MethodInfo * method));
DO_APP_FUNC(0x01FE26F0, void, DefaultValueAttribute__ctor_7, (DefaultValueAttribute * __this, double value, MethodInfo * method));
DO_APP_FUNC(0x01FE2790, void, DefaultValueAttribute__ctor_8, (DefaultValueAttribute * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, DefaultValueAttribute__ctor_9, (DefaultValueAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, DefaultValueAttribute__ctor_10, (DefaultValueAttribute * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Object *, DefaultValueAttribute_get_Value, (DefaultValueAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE2830, bool, DefaultValueAttribute_Equals, (DefaultValueAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, DefaultValueAttribute_GetHashCode, (DefaultValueAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, DefaultValueAttribute_SetValue, (DefaultValueAttribute * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, DelegatingTypeDescriptionProvider__ctor, (DelegatingTypeDescriptionProvider * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x01FE29C0, TypeDescriptionProvider *, DelegatingTypeDescriptionProvider_get_Provider, (DelegatingTypeDescriptionProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE2AF0, Object *, DelegatingTypeDescriptionProvider_CreateInstance, (DelegatingTypeDescriptionProvider * __this, IServiceProvider * provider, Type * objectType, Type__Array * argTypes, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x01FE2B50, IDictionary *, DelegatingTypeDescriptionProvider_GetCache, (DelegatingTypeDescriptionProvider * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x01FE2B90, String *, DelegatingTypeDescriptionProvider_GetFullComponentName, (DelegatingTypeDescriptionProvider * __this, Object * component, MethodInfo * method));
DO_APP_FUNC(0x01FE2BD0, ICustomTypeDescriptor *, DelegatingTypeDescriptionProvider_GetExtendedTypeDescriptor, (DelegatingTypeDescriptionProvider * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x01FE2C10, IExtenderProvider__Array *, DelegatingTypeDescriptionProvider_GetExtenderProviders, (DelegatingTypeDescriptionProvider * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x01FE2C50, Type *, DelegatingTypeDescriptionProvider_GetReflectionType, (DelegatingTypeDescriptionProvider * __this, Type * objectType, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x01FE2CA0, Type *, DelegatingTypeDescriptionProvider_GetRuntimeType, (DelegatingTypeDescriptionProvider * __this, Type * objectType, MethodInfo * method));
DO_APP_FUNC(0x01FE2CE0, ICustomTypeDescriptor *, DelegatingTypeDescriptionProvider_GetTypeDescriptor, (DelegatingTypeDescriptionProvider * __this, Type * objectType, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x01FE2D30, bool, DelegatingTypeDescriptionProvider_IsSupportedType, (DelegatingTypeDescriptionProvider * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x01FE2D70, void, DescriptionAttribute__ctor, (DescriptionAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, DescriptionAttribute__ctor_1, (DescriptionAttribute * __this, String * description, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, DescriptionAttribute_get_Description, (DescriptionAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, DescriptionAttribute_get_DescriptionValue, (DescriptionAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, DescriptionAttribute_set_DescriptionValue, (DescriptionAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01FE2E00, bool, DescriptionAttribute_Equals, (DescriptionAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FE2F50, int32_t, DescriptionAttribute_GetHashCode, (DescriptionAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE2F90, bool, DescriptionAttribute_IsDefaultAttribute, (DescriptionAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE3050, void, DescriptionAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, DesignOnlyAttribute__ctor, (DesignOnlyAttribute * __this, bool isDesignOnly, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, DesignOnlyAttribute_get_IsDesignOnly, (DesignOnlyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE5A20, bool, DesignOnlyAttribute_IsDefaultAttribute, (DesignOnlyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE5AE0, bool, DesignOnlyAttribute_Equals, (DesignOnlyAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE3D0, int32_t, DesignOnlyAttribute_GetHashCode, (DesignOnlyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE5BB0, void, DesignOnlyAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, DesignTimeVisibleAttribute__ctor, (DesignTimeVisibleAttribute * __this, bool visible, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DesignTimeVisibleAttribute__ctor_1, (DesignTimeVisibleAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, DesignTimeVisibleAttribute_get_Visible, (DesignTimeVisibleAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE5DE0, bool, DesignTimeVisibleAttribute_Equals, (DesignTimeVisibleAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FE5EB0, int32_t, DesignTimeVisibleAttribute_GetHashCode, (DesignTimeVisibleAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE5F90, bool, DesignTimeVisibleAttribute_IsDefaultAttribute, (DesignTimeVisibleAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE6050, void, DesignTimeVisibleAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01FE6280, void, DesignerAttribute__ctor, (DesignerAttribute * __this, String * designerTypeName, MethodInfo * method));
DO_APP_FUNC(0x01FE63A0, void, DesignerAttribute__ctor_1, (DesignerAttribute * __this, Type * designerType, MethodInfo * method));
DO_APP_FUNC(0x01FE64A0, void, DesignerAttribute__ctor_2, (DesignerAttribute * __this, String * designerTypeName, String * designerBaseTypeName, MethodInfo * method));
DO_APP_FUNC(0x01FE6570, void, DesignerAttribute__ctor_3, (DesignerAttribute * __this, String * designerTypeName, Type * designerBaseType, MethodInfo * method));
DO_APP_FUNC(0x01FE6660, void, DesignerAttribute__ctor_4, (DesignerAttribute * __this, Type * designerType, Type * designerBaseType, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, DesignerAttribute_get_DesignerBaseTypeName, (DesignerAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, DesignerAttribute_get_DesignerTypeName, (DesignerAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE4CC0, Object *, DesignerAttribute_get_TypeId, (DesignerAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE66D0, bool, DesignerAttribute_Equals, (DesignerAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FE67F0, int32_t, DesignerAttribute_GetHashCode, (DesignerAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE6850, void, DesignerCategoryAttribute__ctor, (DesignerCategoryAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, DesignerCategoryAttribute__ctor_1, (DesignerCategoryAttribute * __this, String * category, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, DesignerCategoryAttribute_get_Category, (DesignerCategoryAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE68E0, Object *, DesignerCategoryAttribute_get_TypeId, (DesignerCategoryAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE6940, bool, DesignerCategoryAttribute_Equals, (DesignerCategoryAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0150BDE0, int32_t, DesignerCategoryAttribute_GetHashCode, (DesignerCategoryAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE6A30, bool, DesignerCategoryAttribute_IsDefaultAttribute, (DesignerCategoryAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE6B00, void, DesignerCategoryAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, DesignerSerializationVisibilityAttribute__ctor, (DesignerSerializationVisibilityAttribute * __this, DesignerSerializationVisibility__Enum visibility, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, DesignerSerializationVisibility__Enum, DesignerSerializationVisibilityAttribute_get_Visibility, (DesignerSerializationVisibilityAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE6F30, bool, DesignerSerializationVisibilityAttribute_Equals, (DesignerSerializationVisibilityAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, DesignerSerializationVisibilityAttribute_GetHashCode, (DesignerSerializationVisibilityAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE7000, bool, DesignerSerializationVisibilityAttribute_IsDefaultAttribute, (DesignerSerializationVisibilityAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE70C0, void, DesignerSerializationVisibilityAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01FE73C0, void, DisplayNameAttribute__ctor, (DisplayNameAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, DisplayNameAttribute__ctor_1, (DisplayNameAttribute * __this, String * displayName, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, DisplayNameAttribute_get_DisplayName, (DisplayNameAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, DisplayNameAttribute_get_DisplayNameValue, (DisplayNameAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, DisplayNameAttribute_set_DisplayNameValue, (DisplayNameAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01FE7450, bool, DisplayNameAttribute_Equals, (DisplayNameAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FE2F50, int32_t, DisplayNameAttribute_GetHashCode, (DisplayNameAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE75A0, bool, DisplayNameAttribute_IsDefaultAttribute, (DisplayNameAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE7660, void, DisplayNameAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01FE7810, void, DoWorkEventArgs__ctor, (DoWorkEventArgs * __this, Object * argument, MethodInfo * method));
DO_APP_FUNC(0x002FB950, Object *, DoWorkEventArgs_get_Argument, (DoWorkEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Object *, DoWorkEventArgs_get_Result, (DoWorkEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, DoWorkEventArgs_set_Result, (DoWorkEventArgs * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, DoWorkEventHandler__ctor, (DoWorkEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, DoWorkEventHandler_Invoke, (DoWorkEventHandler * __this, Object * sender, DoWorkEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, DoWorkEventHandler_BeginInvoke, (DoWorkEventHandler * __this, Object * sender, DoWorkEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, DoWorkEventHandler_EndInvoke, (DoWorkEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, DoubleConverter_get_AllowHex, (DoubleConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE78C0, Type *, DoubleConverter_get_TargetType, (DoubleConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE7960, Object *, DoubleConverter_FromString, (DoubleConverter * __this, String * value, int32_t radix, MethodInfo * method));
DO_APP_FUNC(0x01FE7A60, Object *, DoubleConverter_FromString_1, (DoubleConverter * __this, String * value, NumberFormatInfo * formatInfo, MethodInfo * method));
DO_APP_FUNC(0x01FE7B30, Object *, DoubleConverter_FromString_2, (DoubleConverter * __this, String * value, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x01FE7C00, String *, DoubleConverter_ToString, (DoubleConverter * __this, Object * value, NumberFormatInfo * formatInfo, MethodInfo * method));
DO_APP_FUNC(0x01FE1B70, void, DoubleConverter__ctor, (DoubleConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE7CE0, void, EditorAttribute__ctor, (EditorAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE7D80, void, EditorAttribute__ctor_1, (EditorAttribute * __this, String * typeName, String * baseTypeName, MethodInfo * method));
DO_APP_FUNC(0x01FE7DD0, void, EditorAttribute__ctor_2, (EditorAttribute * __this, String * typeName, Type * baseType, MethodInfo * method));
DO_APP_FUNC(0x01FE7E40, void, EditorAttribute__ctor_3, (EditorAttribute * __this, Type * type, Type * baseType, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, EditorAttribute_get_EditorBaseTypeName, (EditorAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, EditorAttribute_get_EditorTypeName, (EditorAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE7EB0, Object *, EditorAttribute_get_TypeId, (EditorAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE7F50, bool, EditorAttribute_Equals, (EditorAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, EditorAttribute_GetHashCode, (EditorAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, EditorBrowsableAttribute__ctor, (EditorBrowsableAttribute * __this, EditorBrowsableState__Enum state, MethodInfo * method));
DO_APP_FUNC(0x002FC780, void, EditorBrowsableAttribute__ctor_1, (EditorBrowsableAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, EditorBrowsableState__Enum, EditorBrowsableAttribute_get_State, (EditorBrowsableAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE8070, bool, EditorBrowsableAttribute_Equals, (EditorBrowsableAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, EditorBrowsableAttribute_GetHashCode, (EditorBrowsableAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE8140, void, EnumConverter__ctor, (EnumConverter * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Type *, EnumConverter_get_EnumType, (EnumConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, TypeConverter_StandardValuesCollection *, EnumConverter_get_Values, (EnumConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, EnumConverter_set_Values, (EnumConverter * __this, TypeConverter_StandardValuesCollection * value, MethodInfo * method));
DO_APP_FUNC(0x01FE81F0, bool, EnumConverter_CanConvertFrom, (EnumConverter * __this, ITypeDescriptorContext * context, Type * sourceType, MethodInfo * method));
DO_APP_FUNC(0x01FE8300, bool, EnumConverter_CanConvertTo, (EnumConverter * __this, ITypeDescriptorContext * context, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x01FE8410, IComparer *, EnumConverter_get_Comparer, (EnumConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE84B0, Object *, EnumConverter_ConvertFrom, (EnumConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FE8930, Object *, EnumConverter_ConvertTo, (EnumConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x01FE9730, TypeConverter_StandardValuesCollection *, EnumConverter_GetStandardValues, (EnumConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x01FE9C60, bool, EnumConverter_GetStandardValuesExclusive, (EnumConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, EnumConverter_GetStandardValuesSupported, (EnumConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x01FE9D40, bool, EnumConverter_IsValid, (EnumConverter * __this, ITypeDescriptorContext * context, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FE9DF0, void, EventDescriptor_1__ctor, (EventDescriptor_1 * __this, String * name, Attribute__Array * attrs, MethodInfo * method));
DO_APP_FUNC(0x01FE9E00, void, EventDescriptor_1__ctor_1, (EventDescriptor_1 * __this, MemberDescriptor * descr, MethodInfo * method));
DO_APP_FUNC(0x01FE9E10, void, EventDescriptor_1__ctor_2, (EventDescriptor_1 * __this, MemberDescriptor * descr, Attribute__Array * attrs, MethodInfo * method));
DO_APP_FUNC(0x01FE9E20, void, EventDescriptorCollection__ctor, (EventDescriptorCollection * __this, EventDescriptor_1__Array * events, MethodInfo * method));
DO_APP_FUNC(0x01FE9EE0, void, EventDescriptorCollection__ctor_1, (EventDescriptorCollection * __this, EventDescriptor_1__Array * events, bool readOnly, MethodInfo * method));
DO_APP_FUNC(0x01FE9F10, void, EventDescriptorCollection__ctor_2, (EventDescriptorCollection * __this, EventDescriptor_1__Array * events, int32_t eventCount, String__Array * namedSort, IComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x005C3FF0, int32_t, EventDescriptorCollection_get_Count, (EventDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEA090, EventDescriptor_1 *, EventDescriptorCollection_get_Item, (EventDescriptorCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01FEA180, EventDescriptor_1 *, EventDescriptorCollection_get_Item_1, (EventDescriptorCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01FEA1A0, int32_t, EventDescriptorCollection_Add, (EventDescriptorCollection * __this, EventDescriptor_1 * value, MethodInfo * method));
DO_APP_FUNC(0x01FEA2D0, void, EventDescriptorCollection_Clear, (EventDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEA380, bool, EventDescriptorCollection_Contains, (EventDescriptorCollection * __this, EventDescriptor_1 * value, MethodInfo * method));
DO_APP_FUNC(0x01FEA3A0, void, EventDescriptorCollection_System_Collections_ICollection_CopyTo, (EventDescriptorCollection * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01FEA3F0, void, EventDescriptorCollection_EnsureEventsOwned, (EventDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEA4D0, void, EventDescriptorCollection_EnsureSize, (EventDescriptorCollection * __this, int32_t sizeNeeded, MethodInfo * method));
DO_APP_FUNC(0x01FEA620, EventDescriptor_1 *, EventDescriptorCollection_Find, (EventDescriptorCollection * __this, String * name, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x01FEA930, int32_t, EventDescriptorCollection_IndexOf, (EventDescriptorCollection * __this, EventDescriptor_1 * value, MethodInfo * method));
DO_APP_FUNC(0x01FEA9D0, void, EventDescriptorCollection_Insert, (EventDescriptorCollection * __this, int32_t index, EventDescriptor_1 * value, MethodInfo * method));
DO_APP_FUNC(0x01FEAB20, void, EventDescriptorCollection_Remove, (EventDescriptorCollection * __this, EventDescriptor_1 * value, MethodInfo * method));
DO_APP_FUNC(0x01FEABF0, void, EventDescriptorCollection_RemoveAt, (EventDescriptorCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01FEAD10, IEnumerator *, EventDescriptorCollection_GetEnumerator, (EventDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEAEA0, EventDescriptorCollection *, EventDescriptorCollection_Sort, (EventDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEB020, EventDescriptorCollection *, EventDescriptorCollection_Sort_1, (EventDescriptorCollection * __this, String__Array * names, MethodInfo * method));
DO_APP_FUNC(0x01FEB1A0, EventDescriptorCollection *, EventDescriptorCollection_Sort_2, (EventDescriptorCollection * __this, String__Array * names, IComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x01FEB320, EventDescriptorCollection *, EventDescriptorCollection_Sort_3, (EventDescriptorCollection * __this, IComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x01FEB4A0, void, EventDescriptorCollection_InternalSort, (EventDescriptorCollection * __this, String__Array * names, MethodInfo * method));
DO_APP_FUNC(0x01FEB8F0, void, EventDescriptorCollection_InternalSort_1, (EventDescriptorCollection * __this, IComparer * sorter, MethodInfo * method));
DO_APP_FUNC(0x005C3FF0, int32_t, EventDescriptorCollection_System_Collections_ICollection_get_Count, (EventDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, EventDescriptorCollection_System_Collections_ICollection_get_IsSynchronized, (EventDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Object *, EventDescriptorCollection_System_Collections_ICollection_get_SyncRoot, (EventDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEB9C0, IEnumerator *, EventDescriptorCollection_System_Collections_IEnumerable_GetEnumerator, (EventDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01701410, Object *, EventDescriptorCollection_System_Collections_IList_get_Item, (EventDescriptorCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01FEB9D0, void, EventDescriptorCollection_System_Collections_IList_set_Item, (EventDescriptorCollection * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FEBB40, int32_t, EventDescriptorCollection_System_Collections_IList_Add, (EventDescriptorCollection * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FEA2D0, void, EventDescriptorCollection_System_Collections_IList_Clear, (EventDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEBD20, bool, EventDescriptorCollection_System_Collections_IList_Contains, (EventDescriptorCollection * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FEBE00, int32_t, EventDescriptorCollection_System_Collections_IList_IndexOf, (EventDescriptorCollection * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FEBEE0, void, EventDescriptorCollection_System_Collections_IList_Insert, (EventDescriptorCollection * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FEC0F0, void, EventDescriptorCollection_System_Collections_IList_Remove, (EventDescriptorCollection * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FEC280, void, EventDescriptorCollection_System_Collections_IList_RemoveAt, (EventDescriptorCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0052A050, bool, EventDescriptorCollection_System_Collections_IList_get_IsReadOnly, (EventDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A050, bool, EventDescriptorCollection_System_Collections_IList_get_IsFixedSize, (EventDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEC290, void, EventDescriptorCollection__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, EventHandlerList__ctor, (EventHandlerList * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, EventHandlerList__ctor_1, (EventHandlerList * __this, Component * parent, MethodInfo * method));
DO_APP_FUNC(0x01FEC3F0, Delegate *, EventHandlerList_get_Item, (EventHandlerList * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x01FEC460, void, EventHandlerList_set_Item, (EventHandlerList * __this, Object * key, Delegate * value, MethodInfo * method));
DO_APP_FUNC(0x01FEC5F0, void, EventHandlerList_AddHandler, (EventHandlerList * __this, Object * key, Delegate * value, MethodInfo * method));
DO_APP_FUNC(0x01FEC790, void, EventHandlerList_AddHandlers, (EventHandlerList * __this, EventHandlerList * listToAddFrom, MethodInfo * method));
DO_APP_FUNC(0x0063D180, void, EventHandlerList_Dispose, (EventHandlerList * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEC9D0, EventHandlerList_ListEntry *, EventHandlerList_Find, (EventHandlerList * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x01FECA00, void, EventHandlerList_RemoveHandler, (EventHandlerList * __this, Object * key, Delegate * value, MethodInfo * method));
DO_APP_FUNC(0x01FECA50, void, EventHandlerList_ListEntry__ctor, (EventHandlerList_ListEntry * __this, Object * key, Delegate * handler, EventHandlerList_ListEntry * next, MethodInfo * method));
DO_APP_FUNC(0x01FECA60, void, ExpandableObjectConverter__ctor, (ExpandableObjectConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FECAF0, PropertyDescriptorCollection *, ExpandableObjectConverter_GetProperties, (ExpandableObjectConverter * __this, ITypeDescriptorContext * context, Object * value, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, ExpandableObjectConverter_GetPropertiesSupported, (ExpandableObjectConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x01FECBA0, void, ExtendedPropertyDescriptor__ctor, (ExtendedPropertyDescriptor * __this, ReflectPropertyDescriptor * extenderInfo, Type * receiverType, IExtenderProvider * provider, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x01FECF60, void, ExtendedPropertyDescriptor__ctor_1, (ExtendedPropertyDescriptor * __this, PropertyDescriptor * extender, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x01FED0D0, bool, ExtendedPropertyDescriptor_CanResetValue, (ExtendedPropertyDescriptor * __this, Object * comp, MethodInfo * method));
DO_APP_FUNC(0x01FED100, Type *, ExtendedPropertyDescriptor_get_ComponentType, (ExtendedPropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x01FED130, bool, ExtendedPropertyDescriptor_get_IsReadOnly, (ExtendedPropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x01FED270, Type *, ExtendedPropertyDescriptor_get_PropertyType, (ExtendedPropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x01FED2A0, String *, ExtendedPropertyDescriptor_get_DisplayName, (ExtendedPropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x01FED600, Object *, ExtendedPropertyDescriptor_GetValue, (ExtendedPropertyDescriptor * __this, Object * comp, MethodInfo * method));
DO_APP_FUNC(0x01FED630, void, ExtendedPropertyDescriptor_ResetValue, (ExtendedPropertyDescriptor * __this, Object * comp, MethodInfo * method));
DO_APP_FUNC(0x01FED670, void, ExtendedPropertyDescriptor_SetValue, (ExtendedPropertyDescriptor * __this, Object * component, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FED6B0, bool, ExtendedPropertyDescriptor_ShouldSerializeValue, (ExtendedPropertyDescriptor * __this, Object * comp, MethodInfo * method));
DO_APP_FUNC(0x01FED6E0, ExtenderProvidedPropertyAttribute *, ExtenderProvidedPropertyAttribute_Create, (PropertyDescriptor * extenderProperty, Type * receiverType, IExtenderProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ExtenderProvidedPropertyAttribute__ctor, (ExtenderProvidedPropertyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, PropertyDescriptor *, ExtenderProvidedPropertyAttribute_get_ExtenderProperty, (ExtenderProvidedPropertyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, IExtenderProvider *, ExtenderProvidedPropertyAttribute_get_Provider, (ExtenderProvidedPropertyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, Type *, ExtenderProvidedPropertyAttribute_get_ReceiverType, (ExtenderProvidedPropertyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FED850, bool, ExtenderProvidedPropertyAttribute_Equals, (ExtenderProvidedPropertyAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, ExtenderProvidedPropertyAttribute_GetHashCode, (ExtenderProvidedPropertyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FED9A0, bool, ExtenderProvidedPropertyAttribute_IsDefaultAttribute, (ExtenderProvidedPropertyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEDA40, bool, GuidConverter_CanConvertFrom, (GuidConverter * __this, ITypeDescriptorContext * context, Type * sourceType, MethodInfo * method));
DO_APP_FUNC(0x01FEDB20, bool, GuidConverter_CanConvertTo, (GuidConverter * __this, ITypeDescriptorContext * context, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x01FEDC00, Object *, GuidConverter_ConvertFrom, (GuidConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FEDD30, Object *, GuidConverter_ConvertTo, (GuidConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x01FEE0F0, void, GuidConverter__ctor, (GuidConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEE180, void, HandledEventArgs__ctor, (HandledEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEE220, void, HandledEventArgs__ctor_1, (HandledEventArgs * __this, bool defaultHandledValue, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, HandledEventArgs_get_Handled, (HandledEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, HandledEventArgs_set_Handled, (HandledEventArgs * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, HandledEventHandler__ctor, (HandledEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, HandledEventHandler_Invoke, (HandledEventHandler * __this, Object * sender, HandledEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, HandledEventHandler_BeginInvoke, (HandledEventHandler * __this, Object * sender, HandledEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, HandledEventHandler_EndInvoke, (HandledEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, ImmutableObjectAttribute__ctor, (ImmutableObjectAttribute * __this, bool immutable, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, ImmutableObjectAttribute_get_Immutable, (ImmutableObjectAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEE2C0, bool, ImmutableObjectAttribute_Equals, (ImmutableObjectAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, ImmutableObjectAttribute_GetHashCode, (ImmutableObjectAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEE390, bool, ImmutableObjectAttribute_IsDefaultAttribute, (ImmutableObjectAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEE450, void, ImmutableObjectAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, InitializationEventAttribute__ctor, (InitializationEventAttribute * __this, String * eventName, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, InitializationEventAttribute_get_EventName, (InitializationEventAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEED00, void, InstallerTypeAttribute__ctor, (InstallerTypeAttribute * __this, Type * installerType, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, InstallerTypeAttribute__ctor_1, (InstallerTypeAttribute * __this, String * typeName, MethodInfo * method));
DO_APP_FUNC(0x01FEED40, Type *, InstallerTypeAttribute_get_InstallerType, (InstallerTypeAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEEE00, bool, InstallerTypeAttribute_Equals, (InstallerTypeAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, InstallerTypeAttribute_GetHashCode, (InstallerTypeAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEEF20, String *, InstanceCreationEditor_get_Text, (InstanceCreationEditor * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, InstanceCreationEditor__ctor, (InstanceCreationEditor * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEEFA0, Type *, Int16Converter_get_TargetType, (Int16Converter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEF040, Object *, Int16Converter_FromString, (Int16Converter * __this, String * value, int32_t radix, MethodInfo * method));
DO_APP_FUNC(0x01FEF220, Object *, Int16Converter_FromString_1, (Int16Converter * __this, String * value, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x01FEF2D0, Object *, Int16Converter_FromString_2, (Int16Converter * __this, String * value, NumberFormatInfo * formatInfo, MethodInfo * method));
DO_APP_FUNC(0x01FEF390, String *, Int16Converter_ToString, (Int16Converter * __this, Object * value, NumberFormatInfo * formatInfo, MethodInfo * method));
DO_APP_FUNC(0x01FE1B70, void, Int16Converter__ctor, (Int16Converter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEF4D0, Type *, Int32Converter_get_TargetType, (Int32Converter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEF570, Object *, Int32Converter_FromString, (Int32Converter * __this, String * value, int32_t radix, MethodInfo * method));
DO_APP_FUNC(0x01FEF630, Object *, Int32Converter_FromString_1, (Int32Converter * __this, String * value, NumberFormatInfo * formatInfo, MethodInfo * method));
DO_APP_FUNC(0x01FEF6F0, Object *, Int32Converter_FromString_2, (Int32Converter * __this, String * value, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x01FEF7A0, String *, Int32Converter_ToString, (Int32Converter * __this, Object * value, NumberFormatInfo * formatInfo, MethodInfo * method));
DO_APP_FUNC(0x01FE1B70, void, Int32Converter__ctor, (Int32Converter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEF870, Type *, Int64Converter_get_TargetType, (Int64Converter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEF910, Object *, Int64Converter_FromString, (Int64Converter * __this, String * value, int32_t radix, MethodInfo * method));
DO_APP_FUNC(0x01FEF9D0, Object *, Int64Converter_FromString_1, (Int64Converter * __this, String * value, NumberFormatInfo * formatInfo, MethodInfo * method));
DO_APP_FUNC(0x01FEFA90, Object *, Int64Converter_FromString_2, (Int64Converter * __this, String * value, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x01FEFB40, String *, Int64Converter_ToString, (Int64Converter * __this, Object * value, NumberFormatInfo * formatInfo, MethodInfo * method));
DO_APP_FUNC(0x01FE1B70, void, Int64Converter__ctor, (Int64Converter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEFC10, String *, IntSecurity_UnsafeGetFullPath, (String * fileName, MethodInfo * method));
DO_APP_FUNC(0x01FEFCB0, void, InvalidAsynchronousStateException__ctor, (InvalidAsynchronousStateException * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEFCD0, void, InvalidAsynchronousStateException__ctor_1, (InvalidAsynchronousStateException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01FEFCF0, void, InvalidAsynchronousStateException__ctor_2, (InvalidAsynchronousStateException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x01FEFD10, void, InvalidAsynchronousStateException__ctor_3, (InvalidAsynchronousStateException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01FEFCB0, void, InvalidEnumArgumentException__ctor, (InvalidEnumArgumentException * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEFCD0, void, InvalidEnumArgumentException__ctor_1, (InvalidEnumArgumentException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01FEFCF0, void, InvalidEnumArgumentException__ctor_2, (InvalidEnumArgumentException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x01FEFD30, void, InvalidEnumArgumentException__ctor_3, (InvalidEnumArgumentException * __this, String * argumentName, int32_t invalidValue, Type * enumClass, MethodInfo * method));
DO_APP_FUNC(0x01FEFD10, void, InvalidEnumArgumentException__ctor_4, (InvalidEnumArgumentException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01FEFF90, bool, LicFileLicenseProvider_IsKeyValid, (LicFileLicenseProvider * __this, String * key, Type * type, MethodInfo * method));
DO_APP_FUNC(0x01FEFFD0, String *, LicFileLicenseProvider_GetKey, (LicFileLicenseProvider * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x01FF00F0, License *, LicFileLicenseProvider_GetLicense, (LicFileLicenseProvider * __this, LicenseContext * context, Type * type, Object * instance, bool allowExceptions, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, LicFileLicenseProvider__ctor, (LicFileLicenseProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF07E0, void, LicFileLicenseProvider_LicFileLicense__ctor, (LicFileLicenseProvider_LicFileLicense * __this, LicFileLicenseProvider * owner, String * key, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, LicFileLicenseProvider_LicFileLicense_get_LicenseKey, (LicFileLicenseProvider_LicFileLicense * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF07F0, void, LicFileLicenseProvider_LicFileLicense_Dispose, (LicFileLicenseProvider_LicFileLicense * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, License__ctor, (License * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, LicenseUsageMode__Enum, LicenseContext_get_UsageMode, (LicenseContext * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, String *, LicenseContext_GetSavedLicenseKey, (LicenseContext * __this, Type * type, Assembly * resourceAssembly, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Object *, LicenseContext_GetService, (LicenseContext * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, LicenseContext_SetSavedLicenseKey, (LicenseContext * __this, Type * type, String * key, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, LicenseContext__ctor, (LicenseContext * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF0890, void, LicenseException__ctor, (LicenseException * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x01FF09F0, void, LicenseException__ctor_1, (LicenseException * __this, Type * type, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x01FF0BF0, void, LicenseException__ctor_2, (LicenseException * __this, Type * type, Object * instance, String * message, MethodInfo * method));
DO_APP_FUNC(0x01FF0C40, void, LicenseException__ctor_3, (LicenseException * __this, Type * type, Object * instance, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x01FF0C90, void, LicenseException__ctor_4, (LicenseException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FBC20, Type *, LicenseException_get_LicensedType, (LicenseException * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF0E10, void, LicenseException_GetObjectData, (LicenseException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, LicenseManager__ctor, (LicenseManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF0F20, LicenseContext *, LicenseManager_get_CurrentContext, (MethodInfo * method));
DO_APP_FUNC(0x01FF1240, void, LicenseManager_set_CurrentContext, (LicenseContext * value, MethodInfo * method));
DO_APP_FUNC(0x01FF1440, LicenseUsageMode__Enum, LicenseManager_get_UsageMode, (MethodInfo * method));
DO_APP_FUNC(0x01FF1550, void, LicenseManager_CacheProvider, (Type * type, LicenseProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x01FF1930, Object *, LicenseManager_CreateWithContext, (Type * type, LicenseContext * creationContext, MethodInfo * method));
DO_APP_FUNC(0x01FF1A00, Object *, LicenseManager_CreateWithContext_1, (Type * type, LicenseContext * creationContext, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x01FF1CD0, bool, LicenseManager_GetCachedNoLicenseProvider, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x01FF1DE0, LicenseProvider *, LicenseManager_GetCachedProvider, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x01FF1F50, LicenseProvider *, LicenseManager_GetCachedProviderInstance, (Type * providerType, MethodInfo * method));
DO_APP_FUNC(0x01FF20C0, void *, LicenseManager_GetLicenseInteropHelperType, (MethodInfo * method));
DO_APP_FUNC(0x01FF2180, bool, LicenseManager_IsLicensed, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x01FF2260, bool, LicenseManager_IsValid, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x01FF2340, bool, LicenseManager_IsValid_1, (Type * type, Object * instance, License * * license, MethodInfo * method));
DO_APP_FUNC(0x01FF2410, void, LicenseManager_LockContext, (Object * contextUser, MethodInfo * method));
DO_APP_FUNC(0x01FF2600, void, LicenseManager_UnlockContext, (Object * contextUser, MethodInfo * method));
DO_APP_FUNC(0x01FF27F0, bool, LicenseManager_ValidateInternal, (Type * type, Object * instance, bool allowExceptions, License * * license, MethodInfo * method));
DO_APP_FUNC(0x01FF28E0, bool, LicenseManager_ValidateInternalRecursive, (LicenseContext * context, Type * type, Object * instance, bool allowExceptions, License * * license, String * * licenseKey, MethodInfo * method));
DO_APP_FUNC(0x01FF3070, void, LicenseManager_Validate, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x01FF3170, License *, LicenseManager_Validate_1, (Type * type, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x01FF3270, void, LicenseManager__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01FF34B0, Object *, LicenseManager_LicenseInteropHelper_AllocateAndValidateLicense, (RuntimeTypeHandle rth, void * bstrKey, int32_t fDesignTime, MethodInfo * method));
DO_APP_FUNC(0x01FF37A0, int32_t, LicenseManager_LicenseInteropHelper_RequestLicKey, (RuntimeTypeHandle rth, void * * pbstrKey, MethodInfo * method));
DO_APP_FUNC(0x01FF3940, void, LicenseManager_LicenseInteropHelper_GetLicInfo, (LicenseManager_LicenseInteropHelper * __this, RuntimeTypeHandle rth, int32_t * pRuntimeKeyAvail, int32_t * pLicVerified, MethodInfo * method));
DO_APP_FUNC(0x01FF3D10, void, LicenseManager_LicenseInteropHelper_GetCurrentContextInfo, (LicenseManager_LicenseInteropHelper * __this, int32_t * fDesignTime, void * * bstrKey, RuntimeTypeHandle rth, MethodInfo * method));
DO_APP_FUNC(0x01FF3EC0, void, LicenseManager_LicenseInteropHelper_SaveKeyInCurrentContext, (LicenseManager_LicenseInteropHelper * __this, void * bstrKey, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, LicenseManager_LicenseInteropHelper__ctor, (LicenseManager_LicenseInteropHelper * __this, MethodInfo * method));
DO_APP_FUNC(0x0091DD30, void, LicenseManager_LicenseInteropHelper_CLRLicenseContext__ctor, (LicenseManager_LicenseInteropHelper_CLRLicenseContext * __this, LicenseUsageMode__Enum usageMode, Type * type, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, LicenseUsageMode__Enum, LicenseManager_LicenseInteropHelper_CLRLicenseContext_get_UsageMode, (LicenseManager_LicenseInteropHelper_CLRLicenseContext * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF3FA0, String *, LicenseManager_LicenseInteropHelper_CLRLicenseContext_GetSavedLicenseKey, (LicenseManager_LicenseInteropHelper_CLRLicenseContext * __this, Type * type, Assembly * resourceAssembly, MethodInfo * method));
DO_APP_FUNC(0x01FF4070, void, LicenseManager_LicenseInteropHelper_CLRLicenseContext_SetSavedLicenseKey, (LicenseManager_LicenseInteropHelper_CLRLicenseContext * __this, Type * type, String * key, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, LicenseProvider__ctor, (LicenseProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBAF0, void, LicenseProviderAttribute__ctor, (LicenseProviderAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, LicenseProviderAttribute__ctor_1, (LicenseProviderAttribute * __this, String * typeName, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, LicenseProviderAttribute__ctor_2, (LicenseProviderAttribute * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x01FF4130, Type *, LicenseProviderAttribute_get_LicenseProvider, (LicenseProviderAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF4230, Object *, LicenseProviderAttribute_get_TypeId, (LicenseProviderAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF4340, bool, LicenseProviderAttribute_Equals, (LicenseProviderAttribute * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, LicenseProviderAttribute_GetHashCode, (LicenseProviderAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF44A0, void, LicenseProviderAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, ListBindableAttribute__ctor, (ListBindableAttribute * __this, bool listBindable, MethodInfo * method));
DO_APP_FUNC(0x01FF45F0, void, ListBindableAttribute__ctor_1, (ListBindableAttribute * __this, BindableSupport__Enum flags, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, ListBindableAttribute_get_ListBindable, (ListBindableAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF4610, bool, ListBindableAttribute_Equals, (ListBindableAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, ListBindableAttribute_GetHashCode, (ListBindableAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF46E0, bool, ListBindableAttribute_IsDefaultAttribute, (ListBindableAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF47B0, void, ListBindableAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01FF49E0, void, ListChangedEventArgs__ctor, (ListChangedEventArgs * __this, ListChangedType__Enum listChangedType, int32_t newIndex, MethodInfo * method));
DO_APP_FUNC(0x01FF4A00, void, ListChangedEventArgs__ctor_1, (ListChangedEventArgs * __this, ListChangedType__Enum listChangedType, int32_t newIndex, PropertyDescriptor * propDesc, MethodInfo * method));
DO_APP_FUNC(0x01FF4A50, void, ListChangedEventArgs__ctor_2, (ListChangedEventArgs * __this, ListChangedType__Enum listChangedType, PropertyDescriptor * propDesc, MethodInfo * method));
DO_APP_FUNC(0x01FF4B00, void, ListChangedEventArgs__ctor_3, (ListChangedEventArgs * __this, ListChangedType__Enum listChangedType, int32_t newIndex, int32_t oldIndex, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, ListChangedType__Enum, ListChangedEventArgs_get_ListChangedType, (ListChangedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00CC59E0, int32_t, ListChangedEventArgs_get_NewIndex, (ListChangedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, ListChangedEventArgs_get_OldIndex, (ListChangedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, PropertyDescriptor *, ListChangedEventArgs_get_PropertyDescriptor, (ListChangedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, ListChangedEventHandler__ctor, (ListChangedEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, ListChangedEventHandler_Invoke, (ListChangedEventHandler * __this, Object * sender, ListChangedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, ListChangedEventHandler_BeginInvoke, (ListChangedEventHandler * __this, Object * sender, ListChangedEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, ListChangedEventHandler_EndInvoke, (ListChangedEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00CC8D50, void, ListSortDescription__ctor, (ListSortDescription * __this, PropertyDescriptor * property, ListSortDirection__Enum direction, MethodInfo * method));
DO_APP_FUNC(0x002FA280, PropertyDescriptor *, ListSortDescription_get_PropertyDescriptor, (ListSortDescription * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, ListSortDescription_set_PropertyDescriptor, (ListSortDescription * __this, PropertyDescriptor * value, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, ListSortDirection__Enum, ListSortDescription_get_SortDirection, (ListSortDescription * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A000, void, ListSortDescription_set_SortDirection, (ListSortDescription * __this, ListSortDirection__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01FF4BC0, void, ListSortDescriptionCollection__ctor, (ListSortDescriptionCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF4D10, void, ListSortDescriptionCollection__ctor_1, (ListSortDescriptionCollection * __this, ListSortDescription__Array * sorts, MethodInfo * method));
DO_APP_FUNC(0x01FF4EB0, ListSortDescription *, ListSortDescriptionCollection_get_Item, (ListSortDescriptionCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01FF4FB0, void, ListSortDescriptionCollection_set_Item, (ListSortDescriptionCollection * __this, int32_t index, ListSortDescription * value, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, ListSortDescriptionCollection_System_Collections_IList_get_IsFixedSize, (ListSortDescriptionCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, ListSortDescriptionCollection_System_Collections_IList_get_IsReadOnly, (ListSortDescriptionCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF4EB0, Object *, ListSortDescriptionCollection_System_Collections_IList_get_Item, (ListSortDescriptionCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01FF5020, void, ListSortDescriptionCollection_System_Collections_IList_set_Item, (ListSortDescriptionCollection * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FF5090, int32_t, ListSortDescriptionCollection_System_Collections_IList_Add, (ListSortDescriptionCollection * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FF5100, void, ListSortDescriptionCollection_System_Collections_IList_Clear, (ListSortDescriptionCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF5170, bool, ListSortDescriptionCollection_Contains, (ListSortDescriptionCollection * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FF5220, int32_t, ListSortDescriptionCollection_IndexOf, (ListSortDescriptionCollection * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FF52D0, void, ListSortDescriptionCollection_System_Collections_IList_Insert, (ListSortDescriptionCollection * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FF5340, void, ListSortDescriptionCollection_System_Collections_IList_Remove, (ListSortDescriptionCollection * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FF53B0, void, ListSortDescriptionCollection_System_Collections_IList_RemoveAt, (ListSortDescriptionCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x016D95F0, int32_t, ListSortDescriptionCollection_get_Count, (ListSortDescriptionCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, ListSortDescriptionCollection_System_Collections_ICollection_get_IsSynchronized, (ListSortDescriptionCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, Object *, ListSortDescriptionCollection_System_Collections_ICollection_get_SyncRoot, (ListSortDescriptionCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF5420, void, ListSortDescriptionCollection_CopyTo, (ListSortDescriptionCollection * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01BDD500, IEnumerator *, ListSortDescriptionCollection_System_Collections_IEnumerable_GetEnumerator, (ListSortDescriptionCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, LocalizableAttribute__ctor, (LocalizableAttribute * __this, bool isLocalizable, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, LocalizableAttribute_get_IsLocalizable, (LocalizableAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF5450, bool, LocalizableAttribute_IsDefaultAttribute, (LocalizableAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF5510, bool, LocalizableAttribute_Equals, (LocalizableAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, LocalizableAttribute_GetHashCode, (LocalizableAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF55D0, void, LocalizableAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01FF5800, void, LookupBindingPropertiesAttribute__ctor, (LookupBindingPropertiesAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0058D710, void, LookupBindingPropertiesAttribute__ctor_1, (LookupBindingPropertiesAttribute * __this, String * dataSource, String * displayMember, String * valueMember, String * lookupMember, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, LookupBindingPropertiesAttribute_get_DataSource, (LookupBindingPropertiesAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, LookupBindingPropertiesAttribute_get_DisplayMember, (LookupBindingPropertiesAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, LookupBindingPropertiesAttribute_get_ValueMember, (LookupBindingPropertiesAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, LookupBindingPropertiesAttribute_get_LookupMember, (LookupBindingPropertiesAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF5820, bool, LookupBindingPropertiesAttribute_Equals, (LookupBindingPropertiesAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, LookupBindingPropertiesAttribute_GetHashCode, (LookupBindingPropertiesAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF59B0, void, LookupBindingPropertiesAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MarshalByValueComponent__ctor, (MarshalByValueComponent * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF5B10, void, MarshalByValueComponent_Finalize, (MarshalByValueComponent * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF5B90, void, MarshalByValueComponent_add_Disposed, (MarshalByValueComponent * __this, EventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x01FF5C70, void, MarshalByValueComponent_remove_Disposed, (MarshalByValueComponent * __this, EventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x01FF5D80, EventHandlerList *, MarshalByValueComponent_get_Events, (MarshalByValueComponent * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, ISite *, MarshalByValueComponent_get_Site, (MarshalByValueComponent * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, MarshalByValueComponent_set_Site, (MarshalByValueComponent * __this, ISite * value, MethodInfo * method));
DO_APP_FUNC(0x01FF5ED0, void, MarshalByValueComponent_Dispose, (MarshalByValueComponent * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF5F80, void, MarshalByValueComponent_Dispose_1, (MarshalByValueComponent * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01FF61E0, IContainer *, MarshalByValueComponent_get_Container, (MarshalByValueComponent * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF6280, Object *, MarshalByValueComponent_GetService, (MarshalByValueComponent * __this, Type * service, MethodInfo * method));
DO_APP_FUNC(0x01FF6330, bool, MarshalByValueComponent_get_DesignMode, (MarshalByValueComponent * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF63D0, String *, MarshalByValueComponent_ToString, (MarshalByValueComponent * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF6500, void, MarshalByValueComponent__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01FF6640, void, MaskedTextProvider__ctor, (MaskedTextProvider * __this, String * mask, MethodInfo * method));
DO_APP_FUNC(0x01FF6670, void, MaskedTextProvider__ctor_1, (MaskedTextProvider * __this, String * mask, bool restrictToAscii, MethodInfo * method));
DO_APP_FUNC(0x01FF66B0, void, MaskedTextProvider__ctor_2, (MaskedTextProvider * __this, String * mask, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x01FF66E0, void, MaskedTextProvider__ctor_3, (MaskedTextProvider * __this, String * mask, CultureInfo * culture, bool restrictToAscii, MethodInfo * method));
DO_APP_FUNC(0x01FF6710, void, MaskedTextProvider__ctor_4, (MaskedTextProvider * __this, String * mask, uint16_t passwordChar, bool allowPromptAsInput, MethodInfo * method));
DO_APP_FUNC(0x01FF6740, void, MaskedTextProvider__ctor_5, (MaskedTextProvider * __this, String * mask, CultureInfo * culture, uint16_t passwordChar, bool allowPromptAsInput, MethodInfo * method));
DO_APP_FUNC(0x01FF6780, void, MaskedTextProvider__ctor_6, (MaskedTextProvider * __this, String * mask, CultureInfo * culture, bool allowPromptAsInput, uint16_t promptChar, uint16_t passwordChar, bool restrictToAscii, MethodInfo * method));
DO_APP_FUNC(0x01FF6BC0, void, MaskedTextProvider_Initialize, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF72A0, bool, MaskedTextProvider_get_AllowPromptAsInput, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB970, int32_t, MaskedTextProvider_get_AssignedEditPositionCount, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF7360, int32_t, MaskedTextProvider_get_AvailableEditPositionCount, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF7370, Object *, MaskedTextProvider_Clone, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, CultureInfo *, MaskedTextProvider_get_Culture, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x005D6E50, uint16_t, MaskedTextProvider_get_DefaultPasswordChar, (MethodInfo * method));
DO_APP_FUNC(0x01FF7B70, int32_t, MaskedTextProvider_get_EditPositionCount, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF7B80, IEnumerator *, MaskedTextProvider_get_EditPositions, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF7F40, bool, MaskedTextProvider_get_IncludeLiterals, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF8000, void, MaskedTextProvider_set_IncludeLiterals, (MaskedTextProvider * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01FF80D0, bool, MaskedTextProvider_get_IncludePrompt, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF8190, void, MaskedTextProvider_set_IncludePrompt, (MaskedTextProvider * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01FF8260, bool, MaskedTextProvider_get_AsciiOnly, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF8320, bool, MaskedTextProvider_get_IsPassword, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF8330, void, MaskedTextProvider_set_IsPassword, (MaskedTextProvider * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00597B10, int32_t, MaskedTextProvider_get_InvalidIndex, (MethodInfo * method));
DO_APP_FUNC(0x01FF83F0, int32_t, MaskedTextProvider_get_LastAssignedPosition, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF8440, int32_t, MaskedTextProvider_get_Length, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, String *, MaskedTextProvider_get_Mask, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF8460, bool, MaskedTextProvider_get_MaskCompleted, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF8470, bool, MaskedTextProvider_get_MaskFull, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF8480, uint16_t, MaskedTextProvider_get_PasswordChar, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF8490, void, MaskedTextProvider_set_PasswordChar, (MaskedTextProvider * __this, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x01FF8650, uint16_t, MaskedTextProvider_get_PromptChar, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF8660, void, MaskedTextProvider_set_PromptChar, (MaskedTextProvider * __this, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x01FF8860, bool, MaskedTextProvider_get_ResetOnPrompt, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF8920, void, MaskedTextProvider_set_ResetOnPrompt, (MaskedTextProvider * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01FF89F0, bool, MaskedTextProvider_get_ResetOnSpace, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF8AB0, void, MaskedTextProvider_set_ResetOnSpace, (MaskedTextProvider * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01FF8B80, bool, MaskedTextProvider_get_SkipLiterals, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF8C40, void, MaskedTextProvider_set_SkipLiterals, (MaskedTextProvider * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01FF8D10, uint16_t, MaskedTextProvider_get_Item, (MaskedTextProvider * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01FF8E30, bool, MaskedTextProvider_Add, (MaskedTextProvider * __this, uint16_t input, MethodInfo * method));
DO_APP_FUNC(0x01FF8F20, bool, MaskedTextProvider_Add_1, (MaskedTextProvider * __this, uint16_t input, int32_t * testPosition, MaskedTextResultHint__Enum * resultHint, MethodInfo * method));
DO_APP_FUNC(0x01FF9060, bool, MaskedTextProvider_Add_2, (MaskedTextProvider * __this, String * input, MethodInfo * method));
DO_APP_FUNC(0x01FF91A0, bool, MaskedTextProvider_Add_3, (MaskedTextProvider * __this, String * input, int32_t * testPosition, MaskedTextResultHint__Enum * resultHint, MethodInfo * method));
DO_APP_FUNC(0x01FF92F0, void, MaskedTextProvider_Clear, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF9310, void, MaskedTextProvider_Clear_1, (MaskedTextProvider * __this, MaskedTextResultHint__Enum * resultHint, MethodInfo * method));
DO_APP_FUNC(0x01FF9480, int32_t, MaskedTextProvider_FindAssignedEditPositionFrom, (MaskedTextProvider * __this, int32_t position, bool direction, MethodInfo * method));
DO_APP_FUNC(0x01FF94E0, int32_t, MaskedTextProvider_FindAssignedEditPositionInRange, (MaskedTextProvider * __this, int32_t startPosition, int32_t endPosition, bool direction, MethodInfo * method));
DO_APP_FUNC(0x01FF9510, int32_t, MaskedTextProvider_FindEditPositionFrom, (MaskedTextProvider * __this, int32_t position, bool direction, MethodInfo * method));
DO_APP_FUNC(0x01FF9560, int32_t, MaskedTextProvider_FindEditPositionInRange, (MaskedTextProvider * __this, int32_t startPosition, int32_t endPosition, bool direction, MethodInfo * method));
DO_APP_FUNC(0x01FF9580, int32_t, MaskedTextProvider_FindEditPositionInRange_1, (MaskedTextProvider * __this, int32_t startPosition, int32_t endPosition, bool direction, uint8_t assignedStatus, MethodInfo * method));
DO_APP_FUNC(0x01FF9710, int32_t, MaskedTextProvider_FindNonEditPositionFrom, (MaskedTextProvider * __this, int32_t position, bool direction, MethodInfo * method));
DO_APP_FUNC(0x01FF9760, int32_t, MaskedTextProvider_FindNonEditPositionInRange, (MaskedTextProvider * __this, int32_t startPosition, int32_t endPosition, bool direction, MethodInfo * method));
DO_APP_FUNC(0x01FF9780, int32_t, MaskedTextProvider_FindPositionInRange, (MaskedTextProvider * __this, int32_t startPosition, int32_t endPosition, bool direction, MaskedTextProvider_CharType__Enum charTypeFlags, MethodInfo * method));
DO_APP_FUNC(0x01FF98D0, int32_t, MaskedTextProvider_FindUnassignedEditPositionFrom, (MaskedTextProvider * __this, int32_t position, bool direction, MethodInfo * method));
DO_APP_FUNC(0x01FF9920, int32_t, MaskedTextProvider_FindUnassignedEditPositionInRange, (MaskedTextProvider * __this, int32_t startPosition, int32_t endPosition, bool direction, MethodInfo * method));
DO_APP_FUNC(0x01FF9AB0, bool, MaskedTextProvider_GetOperationResultFromHint, (MaskedTextResultHint__Enum hint, MethodInfo * method));
DO_APP_FUNC(0x01FF9AC0, bool, MaskedTextProvider_InsertAt, (MaskedTextProvider * __this, uint16_t input, int32_t position, MethodInfo * method));
DO_APP_FUNC(0x01FF9B50, bool, MaskedTextProvider_InsertAt_1, (MaskedTextProvider * __this, uint16_t input, int32_t position, int32_t * testPosition, MaskedTextResultHint__Enum * resultHint, MethodInfo * method));
DO_APP_FUNC(0x01FF9BA0, bool, MaskedTextProvider_InsertAt_2, (MaskedTextProvider * __this, String * input, int32_t position, MethodInfo * method));
DO_APP_FUNC(0x01FF9BD0, bool, MaskedTextProvider_InsertAt_3, (MaskedTextProvider * __this, String * input, int32_t position, int32_t * testPosition, MaskedTextResultHint__Enum * resultHint, MethodInfo * method));
DO_APP_FUNC(0x01FF9D00, bool, MaskedTextProvider_InsertAtInt, (MaskedTextProvider * __this, String * input, int32_t position, int32_t * testPosition, MaskedTextResultHint__Enum * resultHint, bool testOnly, MethodInfo * method));
DO_APP_FUNC(0x01FFA1B0, bool, MaskedTextProvider_IsAscii, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x01FFA1D0, bool, MaskedTextProvider_IsAciiAlphanumeric, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x01FFA200, bool, MaskedTextProvider_IsAlphanumeric, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x01FFA2D0, bool, MaskedTextProvider_IsAsciiLetter, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x01FFA2F0, bool, MaskedTextProvider_IsAvailablePosition, (MaskedTextProvider * __this, int32_t position, MethodInfo * method));
DO_APP_FUNC(0x01FFA400, bool, MaskedTextProvider_IsEditPosition, (MaskedTextProvider * __this, int32_t position, MethodInfo * method));
DO_APP_FUNC(0x01FFA520, bool, MaskedTextProvider_IsEditPosition_1, (MaskedTextProvider_CharDescriptor * charDescriptor, MethodInfo * method));
DO_APP_FUNC(0x01FFA550, bool, MaskedTextProvider_IsLiteralPosition, (MaskedTextProvider_CharDescriptor * charDescriptor, MethodInfo * method));
DO_APP_FUNC(0x01FFA580, bool, MaskedTextProvider_IsPrintableChar, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x01FFA8A0, bool, MaskedTextProvider_IsValidInputChar, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x01FFA940, bool, MaskedTextProvider_IsValidMaskChar, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x01FFA9E0, bool, MaskedTextProvider_IsValidPasswordChar, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x01FFAA90, bool, MaskedTextProvider_Remove, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFAAF0, bool, MaskedTextProvider_Remove_1, (MaskedTextProvider * __this, int32_t * testPosition, MaskedTextResultHint__Enum * resultHint, MethodInfo * method));
DO_APP_FUNC(0x01FFAB90, bool, MaskedTextProvider_RemoveAt, (MaskedTextProvider * __this, int32_t position, MethodInfo * method));
DO_APP_FUNC(0x01FFABF0, bool, MaskedTextProvider_RemoveAt_1, (MaskedTextProvider * __this, int32_t startPosition, int32_t endPosition, MethodInfo * method));
DO_APP_FUNC(0x01FFAC50, bool, MaskedTextProvider_RemoveAt_2, (MaskedTextProvider * __this, int32_t startPosition, int32_t endPosition, int32_t * testPosition, MaskedTextResultHint__Enum * resultHint, MethodInfo * method));
DO_APP_FUNC(0x01FFACD0, bool, MaskedTextProvider_RemoveAtInt, (MaskedTextProvider * __this, int32_t startPosition, int32_t endPosition, int32_t * testPosition, MaskedTextResultHint__Enum * resultHint, bool testOnly, MethodInfo * method));
DO_APP_FUNC(0x01FFB130, bool, MaskedTextProvider_Replace, (MaskedTextProvider * __this, uint16_t input, int32_t position, MethodInfo * method));
DO_APP_FUNC(0x01FFB210, bool, MaskedTextProvider_Replace_1, (MaskedTextProvider * __this, uint16_t input, int32_t position, int32_t * testPosition, MaskedTextResultHint__Enum * resultHint, MethodInfo * method));
DO_APP_FUNC(0x01FFB310, bool, MaskedTextProvider_Replace_2, (MaskedTextProvider * __this, uint16_t input, int32_t startPosition, int32_t endPosition, int32_t * testPosition, MaskedTextResultHint__Enum * resultHint, MethodInfo * method));
DO_APP_FUNC(0x01FFB3F0, bool, MaskedTextProvider_Replace_3, (MaskedTextProvider * __this, String * input, int32_t position, MethodInfo * method));
DO_APP_FUNC(0x01FFB520, bool, MaskedTextProvider_Replace_4, (MaskedTextProvider * __this, String * input, int32_t position, int32_t * testPosition, MaskedTextResultHint__Enum * resultHint, MethodInfo * method));
DO_APP_FUNC(0x01FFB670, bool, MaskedTextProvider_Replace_5, (MaskedTextProvider * __this, String * input, int32_t startPosition, int32_t endPosition, int32_t * testPosition, MaskedTextResultHint__Enum * resultHint, MethodInfo * method));
DO_APP_FUNC(0x01FFBA60, void, MaskedTextProvider_ResetChar, (MaskedTextProvider * __this, int32_t testPosition, MethodInfo * method));
DO_APP_FUNC(0x01FFBB60, void, MaskedTextProvider_ResetString, (MaskedTextProvider * __this, int32_t startPosition, int32_t endPosition, MethodInfo * method));
DO_APP_FUNC(0x01FFBD50, bool, MaskedTextProvider_Set, (MaskedTextProvider * __this, String * input, MethodInfo * method));
DO_APP_FUNC(0x01FFBEF0, bool, MaskedTextProvider_Set_1, (MaskedTextProvider * __this, String * input, int32_t * testPosition, MaskedTextResultHint__Enum * resultHint, MethodInfo * method));
DO_APP_FUNC(0x01FFC080, void, MaskedTextProvider_SetChar, (MaskedTextProvider * __this, uint16_t input, int32_t position, MethodInfo * method));
DO_APP_FUNC(0x01FFC150, void, MaskedTextProvider_SetChar_1, (MaskedTextProvider * __this, uint16_t input, int32_t position, MaskedTextProvider_CharDescriptor * charDescriptor, MethodInfo * method));
DO_APP_FUNC(0x01FFC3A0, void, MaskedTextProvider_SetString, (MaskedTextProvider * __this, String * input, int32_t testPosition, MethodInfo * method));
DO_APP_FUNC(0x01FFC470, bool, MaskedTextProvider_TestChar, (MaskedTextProvider * __this, uint16_t input, int32_t position, MaskedTextResultHint__Enum * resultHint, MethodInfo * method));
DO_APP_FUNC(0x01FFCA00, bool, MaskedTextProvider_TestEscapeChar, (MaskedTextProvider * __this, uint16_t input, int32_t position, MethodInfo * method));
DO_APP_FUNC(0x01FFCAD0, bool, MaskedTextProvider_TestEscapeChar_1, (MaskedTextProvider * __this, uint16_t input, int32_t position, MaskedTextProvider_CharDescriptor * charDex, MethodInfo * method));
DO_APP_FUNC(0x01FFCC00, bool, MaskedTextProvider_TestSetChar, (MaskedTextProvider * __this, uint16_t input, int32_t position, MaskedTextResultHint__Enum * resultHint, MethodInfo * method));
DO_APP_FUNC(0x01FFCC70, bool, MaskedTextProvider_TestSetString, (MaskedTextProvider * __this, String * input, int32_t position, int32_t * testPosition, MaskedTextResultHint__Enum * resultHint, MethodInfo * method));
DO_APP_FUNC(0x01FFCCE0, bool, MaskedTextProvider_TestString, (MaskedTextProvider * __this, String * input, int32_t position, int32_t * testPosition, MaskedTextResultHint__Enum * resultHint, MethodInfo * method));
DO_APP_FUNC(0x01FFCE50, String *, MaskedTextProvider_ToDisplayString, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFD100, String *, MaskedTextProvider_ToString, (MaskedTextProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFD170, String *, MaskedTextProvider_ToString_1, (MaskedTextProvider * __this, bool ignorePasswordChar, MethodInfo * method));
DO_APP_FUNC(0x01FFD1F0, String *, MaskedTextProvider_ToString_2, (MaskedTextProvider * __this, int32_t startPosition, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01FFD260, String *, MaskedTextProvider_ToString_3, (MaskedTextProvider * __this, bool ignorePasswordChar, int32_t startPosition, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01FFD2E0, String *, MaskedTextProvider_ToString_4, (MaskedTextProvider * __this, bool includePrompt, bool includeLiterals, MethodInfo * method));
DO_APP_FUNC(0x01FFD320, String *, MaskedTextProvider_ToString_5, (MaskedTextProvider * __this, bool includePrompt, bool includeLiterals, int32_t startPosition, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01FFD350, String *, MaskedTextProvider_ToString_6, (MaskedTextProvider * __this, bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int32_t startPosition, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01FFD790, bool, MaskedTextProvider_VerifyChar, (MaskedTextProvider * __this, uint16_t input, int32_t position, MaskedTextResultHint__Enum * hint, MethodInfo * method));
DO_APP_FUNC(0x01FFD7E0, bool, MaskedTextProvider_VerifyEscapeChar, (MaskedTextProvider * __this, uint16_t input, int32_t position, MethodInfo * method));
DO_APP_FUNC(0x01FFD820, bool, MaskedTextProvider_VerifyString, (MaskedTextProvider * __this, String * input, MethodInfo * method));
DO_APP_FUNC(0x01FFD860, bool, MaskedTextProvider_VerifyString_1, (MaskedTextProvider * __this, String * input, int32_t * testPosition, MaskedTextResultHint__Enum * resultHint, MethodInfo * method));
DO_APP_FUNC(0x01FFD8A0, void, MaskedTextProvider__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0298D290, void, MaskedTextProvider_CharDescriptor__ctor, (MaskedTextProvider_CharDescriptor * __this, int32_t maskPos, MaskedTextProvider_CharType__Enum charType, MethodInfo * method));
DO_APP_FUNC(0x0298D2A0, String *, MaskedTextProvider_CharDescriptor_ToString, (MaskedTextProvider_CharDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x01F0E5C0, void, MemberDescriptor__ctor, (MemberDescriptor * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x0298D530, void, MemberDescriptor__ctor_1, (MemberDescriptor * __this, String * name, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x0298D710, void, MemberDescriptor__ctor_2, (MemberDescriptor * __this, MemberDescriptor * descr, MethodInfo * method));
DO_APP_FUNC(0x0298D930, void, MemberDescriptor__ctor_3, (MemberDescriptor * __this, MemberDescriptor * oldMemberDescriptor, Attribute__Array * newAttributes, MethodInfo * method));
DO_APP_FUNC(0x0298DE90, Attribute__Array *, MemberDescriptor_get_AttributeArray, (MemberDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0298DEC0, void, MemberDescriptor_set_AttributeArray, (MemberDescriptor * __this, Attribute__Array * value, MethodInfo * method));
DO_APP_FUNC(0x0298DFB0, AttributeCollection *, MemberDescriptor_get_Attributes, (MemberDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0298E0D0, String *, MemberDescriptor_get_Category, (MemberDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0298E290, String *, MemberDescriptor_get_Description, (MemberDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0298E440, bool, MemberDescriptor_get_IsBrowsable, (MemberDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0298E560, String *, MemberDescriptor_get_Name, (MemberDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, int32_t, MemberDescriptor_get_NameHashCode, (MemberDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0298E5F0, bool, MemberDescriptor_get_DesignTimeOnly, (MemberDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0298E730, String *, MemberDescriptor_get_DisplayName, (MemberDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0298E8A0, void, MemberDescriptor_CheckAttributesValid, (MemberDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0298E960, AttributeCollection *, MemberDescriptor_CreateAttributeCollection, (MemberDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0298EAC0, bool, MemberDescriptor_Equals, (MemberDescriptor * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0298EDD0, void, MemberDescriptor_FillAttributes, (MemberDescriptor * __this, IList * attributeList, MethodInfo * method));
DO_APP_FUNC(0x0298EF40, void, MemberDescriptor_FilterAttributesIfNeeded, (MemberDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0298F630, MethodInfo_1 *, MemberDescriptor_FindMethod, (Type * componentClass, String * name, Type__Array * args, Type * returnType, MethodInfo * method));
DO_APP_FUNC(0x0298F6C0, MethodInfo_1 *, MemberDescriptor_FindMethod_1, (Type * componentClass, String * name, Type__Array * args, Type * returnType, bool publicOnly, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, int32_t, MemberDescriptor_GetHashCode, (MemberDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0298F790, Object *, MemberDescriptor_GetInvocationTarget, (MemberDescriptor * __this, Type * type, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x0298F8D0, ISite *, MemberDescriptor_GetSite, (Object * component, MethodInfo * method));
DO_APP_FUNC(0x0298F9D0, Object *, MemberDescriptor_GetInvokee, (Type * componentClass, Object * component, MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, MergablePropertyAttribute__ctor, (MergablePropertyAttribute * __this, bool allowMerge, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, MergablePropertyAttribute_get_AllowMerge, (MergablePropertyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0298FB10, bool, MergablePropertyAttribute_Equals, (MergablePropertyAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, MergablePropertyAttribute_GetHashCode, (MergablePropertyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0298FBE0, bool, MergablePropertyAttribute_IsDefaultAttribute, (MergablePropertyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0298FCA0, void, MergablePropertyAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0298FED0, Object *, MultilineStringConverter_ConvertTo, (MultilineStringConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, PropertyDescriptorCollection *, MultilineStringConverter_GetProperties, (MultilineStringConverter * __this, ITypeDescriptorContext * context, Object * value, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, MultilineStringConverter_GetPropertiesSupported, (MultilineStringConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x02990050, void, MultilineStringConverter__ctor, (MultilineStringConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x029900E0, void, NestedContainer__ctor, (NestedContainer * __this, IComponent * owner, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, IComponent *, NestedContainer_get_Owner, (NestedContainer * __this, MethodInfo * method));
DO_APP_FUNC(0x02990390, String *, NestedContainer_get_OwnerName, (NestedContainer * __this, MethodInfo * method));
DO_APP_FUNC(0x029904B0, ISite *, NestedContainer_CreateSite, (NestedContainer * __this, IComponent * component, String * name, MethodInfo * method));
DO_APP_FUNC(0x02990650, void, NestedContainer_Dispose, (NestedContainer * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x029907F0, Object *, NestedContainer_GetService, (NestedContainer * __this, Type * service, MethodInfo * method));
DO_APP_FUNC(0x024AB610, void, NestedContainer_OnOwnerDisposed, (NestedContainer * __this, Object * sender, EventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x00522850, void, NestedContainer_Site__ctor, (NestedContainer_Site * __this, IComponent * component, NestedContainer * container, String * name, MethodInfo * method));
DO_APP_FUNC(0x002FA280, IComponent *, NestedContainer_Site_get_Component, (NestedContainer_Site * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, IContainer *, NestedContainer_Site_get_Container, (NestedContainer_Site * __this, MethodInfo * method));
DO_APP_FUNC(0x02990950, Object *, NestedContainer_Site_GetService, (NestedContainer_Site * __this, Type * service, MethodInfo * method));
DO_APP_FUNC(0x02990A40, bool, NestedContainer_Site_get_DesignMode, (NestedContainer_Site * __this, MethodInfo * method));
DO_APP_FUNC(0x02990B20, String *, NestedContainer_Site_get_FullName, (NestedContainer_Site * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, NestedContainer_Site_get_Name, (NestedContainer_Site * __this, MethodInfo * method));
DO_APP_FUNC(0x01FDA170, void, NestedContainer_Site_set_Name, (NestedContainer_Site * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x02991010, void, NullableConverter__ctor, (NullableConverter * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x02991160, bool, NullableConverter_CanConvertFrom, (NullableConverter * __this, ITypeDescriptorContext * context, Type * sourceType, MethodInfo * method));
DO_APP_FUNC(0x02991250, Object *, NullableConverter_ConvertFrom, (NullableConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, MethodInfo * method));
DO_APP_FUNC(0x029913A0, bool, NullableConverter_CanConvertTo, (NullableConverter * __this, ITypeDescriptorContext * context, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x029914C0, Object *, NullableConverter_ConvertTo, (NullableConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x029918E0, Object *, NullableConverter_CreateInstance, (NullableConverter * __this, ITypeDescriptorContext * context, IDictionary * propertyValues, MethodInfo * method));
DO_APP_FUNC(0x02991900, bool, NullableConverter_GetCreateInstanceSupported, (NullableConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x02991920, PropertyDescriptorCollection *, NullableConverter_GetProperties, (NullableConverter * __this, ITypeDescriptorContext * context, Object * value, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x02991950, bool, NullableConverter_GetPropertiesSupported, (NullableConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x02991970, TypeConverter_StandardValuesCollection *, NullableConverter_GetStandardValues, (NullableConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x02991CC0, bool, NullableConverter_GetStandardValuesExclusive, (NullableConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x023A0050, bool, NullableConverter_GetStandardValuesSupported, (NullableConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x02991CE0, bool, NullableConverter_IsValid, (NullableConverter * __this, ITypeDescriptorContext * context, Object * value, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Type *, NullableConverter_get_NullableType, (NullableConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Type *, NullableConverter_get_UnderlyingType, (NullableConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, TypeConverter *, NullableConverter_get_UnderlyingTypeConverter, (NullableConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x00531660, void, PasswordPropertyTextAttribute__ctor, (PasswordPropertyTextAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, PasswordPropertyTextAttribute__ctor_1, (PasswordPropertyTextAttribute * __this, bool password, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, PasswordPropertyTextAttribute_get_Password, (PasswordPropertyTextAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02992000, bool, PasswordPropertyTextAttribute_Equals, (PasswordPropertyTextAttribute * __this, Object * o, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, PasswordPropertyTextAttribute_GetHashCode, (PasswordPropertyTextAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x029920E0, bool, PasswordPropertyTextAttribute_IsDefaultAttribute, (PasswordPropertyTextAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x029921A0, void, PasswordPropertyTextAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x029923D0, void, ProgressChangedEventArgs__ctor, (ProgressChangedEventArgs * __this, int32_t progressPercentage, Object * userState, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, ProgressChangedEventArgs_get_ProgressPercentage, (ProgressChangedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Object *, ProgressChangedEventArgs_get_UserState, (ProgressChangedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, ProgressChangedEventHandler__ctor, (ProgressChangedEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, ProgressChangedEventHandler_Invoke, (ProgressChangedEventHandler * __this, Object * sender, ProgressChangedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, ProgressChangedEventHandler_BeginInvoke, (ProgressChangedEventHandler * __this, Object * sender, ProgressChangedEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, ProgressChangedEventHandler_EndInvoke, (ProgressChangedEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x02992480, void, PropertyChangedEventArgs__ctor, (PropertyChangedEventArgs * __this, String * propertyName, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, PropertyChangedEventArgs_get_PropertyName, (PropertyChangedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, PropertyChangedEventHandler__ctor, (PropertyChangedEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, PropertyChangedEventHandler_Invoke, (PropertyChangedEventHandler * __this, Object * sender, PropertyChangedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, PropertyChangedEventHandler_BeginInvoke, (PropertyChangedEventHandler * __this, Object * sender, PropertyChangedEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, PropertyChangedEventHandler_EndInvoke, (PropertyChangedEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x02992530, void, PropertyChangingEventArgs__ctor, (PropertyChangingEventArgs * __this, String * propertyName, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, PropertyChangingEventArgs_get_PropertyName, (PropertyChangingEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, PropertyChangingEventHandler__ctor, (PropertyChangingEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, PropertyChangingEventHandler_Invoke, (PropertyChangingEventHandler * __this, Object * sender, PropertyChangingEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, PropertyChangingEventHandler_BeginInvoke, (PropertyChangingEventHandler * __this, Object * sender, PropertyChangingEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, PropertyChangingEventHandler_EndInvoke, (PropertyChangingEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01FE9DF0, void, PropertyDescriptor__ctor, (PropertyDescriptor * __this, String * name, Attribute__Array * attrs, MethodInfo * method));
DO_APP_FUNC(0x01FE9E00, void, PropertyDescriptor__ctor_1, (PropertyDescriptor * __this, MemberDescriptor * descr, MethodInfo * method));
DO_APP_FUNC(0x01FE9E10, void, PropertyDescriptor__ctor_2, (PropertyDescriptor * __this, MemberDescriptor * descr, Attribute__Array * attrs, MethodInfo * method));
DO_APP_FUNC(0x029925E0, TypeConverter *, PropertyDescriptor_get_Converter, (PropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x02992820, bool, PropertyDescriptor_get_IsLocalizable, (PropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x02992960, DesignerSerializationVisibility__Enum, PropertyDescriptor_get_SerializationVisibility, (PropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x02992A70, void, PropertyDescriptor_AddValueChanged, (PropertyDescriptor * __this, Object * component, EventHandler * handler, MethodInfo * method));
DO_APP_FUNC(0x02992CF0, bool, PropertyDescriptor_Equals, (PropertyDescriptor * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x02992EC0, Object *, PropertyDescriptor_CreateInstance, (PropertyDescriptor * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x02993140, void, PropertyDescriptor_FillAttributes, (PropertyDescriptor * __this, IList * attributeList, MethodInfo * method));
DO_APP_FUNC(0x02993160, PropertyDescriptorCollection *, PropertyDescriptor_GetChildProperties, (PropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x02993180, PropertyDescriptorCollection *, PropertyDescriptor_GetChildProperties_1, (PropertyDescriptor * __this, Attribute__Array * filter, MethodInfo * method));
DO_APP_FUNC(0x029931A0, PropertyDescriptorCollection *, PropertyDescriptor_GetChildProperties_2, (PropertyDescriptor * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x029931C0, PropertyDescriptorCollection *, PropertyDescriptor_GetChildProperties_3, (PropertyDescriptor * __this, Object * instance, Attribute__Array * filter, MethodInfo * method));
DO_APP_FUNC(0x029932D0, Object *, PropertyDescriptor_GetEditor, (PropertyDescriptor * __this, Type * editorBaseType, MethodInfo * method));
DO_APP_FUNC(0x02993840, int32_t, PropertyDescriptor_GetHashCode, (PropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x029938A0, Object *, PropertyDescriptor_GetInvocationTarget, (PropertyDescriptor * __this, Type * type, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x02993A70, Type *, PropertyDescriptor_GetTypeFromName, (PropertyDescriptor * __this, String * typeName, MethodInfo * method));
DO_APP_FUNC(0x02993D00, void, PropertyDescriptor_OnValueChanged, (PropertyDescriptor * __this, Object * component, EventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x02993DF0, void, PropertyDescriptor_RemoveValueChanged, (PropertyDescriptor * __this, Object * component, EventHandler * handler, MethodInfo * method));
DO_APP_FUNC(0x02993FC0, EventHandler *, PropertyDescriptor_GetValueChangedHandler, (PropertyDescriptor * __this, Object * component, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, PropertyDescriptor_get_SupportsChangeEvents, (PropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x029940A0, void, PropertyDescriptorCollection__ctor, (PropertyDescriptorCollection * __this, PropertyDescriptor__Array * properties, MethodInfo * method));
DO_APP_FUNC(0x02994160, void, PropertyDescriptorCollection__ctor_1, (PropertyDescriptorCollection * __this, PropertyDescriptor__Array * properties, bool readOnly, MethodInfo * method));
DO_APP_FUNC(0x02994190, void, PropertyDescriptorCollection__ctor_2, (PropertyDescriptorCollection * __this, PropertyDescriptor__Array * properties, int32_t propCount, String__Array * namedSort, IComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x002FB970, int32_t, PropertyDescriptorCollection_get_Count, (PropertyDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02994310, PropertyDescriptor *, PropertyDescriptorCollection_get_Item, (PropertyDescriptorCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02994400, PropertyDescriptor *, PropertyDescriptorCollection_get_Item_1, (PropertyDescriptorCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x02994420, int32_t, PropertyDescriptorCollection_Add, (PropertyDescriptorCollection * __this, PropertyDescriptor * value, MethodInfo * method));
DO_APP_FUNC(0x02994550, void, PropertyDescriptorCollection_Clear, (PropertyDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02994600, bool, PropertyDescriptorCollection_Contains, (PropertyDescriptorCollection * __this, PropertyDescriptor * value, MethodInfo * method));
DO_APP_FUNC(0x02994620, void, PropertyDescriptorCollection_CopyTo, (PropertyDescriptorCollection * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02994670, void, PropertyDescriptorCollection_EnsurePropsOwned, (PropertyDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02994750, void, PropertyDescriptorCollection_EnsureSize, (PropertyDescriptorCollection * __this, int32_t sizeNeeded, MethodInfo * method));
DO_APP_FUNC(0x029948A0, PropertyDescriptor *, PropertyDescriptorCollection_Find, (PropertyDescriptorCollection * __this, String * name, bool ignoreCase, MethodInfo * method));
DO_APP_FUNC(0x02994E70, int32_t, PropertyDescriptorCollection_IndexOf, (PropertyDescriptorCollection * __this, PropertyDescriptor * value, MethodInfo * method));
DO_APP_FUNC(0x02994F10, void, PropertyDescriptorCollection_Insert, (PropertyDescriptorCollection * __this, int32_t index, PropertyDescriptor * value, MethodInfo * method));
DO_APP_FUNC(0x02995060, void, PropertyDescriptorCollection_Remove, (PropertyDescriptorCollection * __this, PropertyDescriptor * value, MethodInfo * method));
DO_APP_FUNC(0x02995130, void, PropertyDescriptorCollection_RemoveAt, (PropertyDescriptorCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02995250, PropertyDescriptorCollection *, PropertyDescriptorCollection_Sort, (PropertyDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x029953D0, PropertyDescriptorCollection *, PropertyDescriptorCollection_Sort_1, (PropertyDescriptorCollection * __this, String__Array * names, MethodInfo * method));
DO_APP_FUNC(0x02995550, PropertyDescriptorCollection *, PropertyDescriptorCollection_Sort_2, (PropertyDescriptorCollection * __this, String__Array * names, IComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x029956D0, PropertyDescriptorCollection *, PropertyDescriptorCollection_Sort_3, (PropertyDescriptorCollection * __this, IComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x02995850, void, PropertyDescriptorCollection_InternalSort, (PropertyDescriptorCollection * __this, String__Array * names, MethodInfo * method));
DO_APP_FUNC(0x02995CA0, void, PropertyDescriptorCollection_InternalSort_1, (PropertyDescriptorCollection * __this, IComparer * sorter, MethodInfo * method));
DO_APP_FUNC(0x02995D70, IEnumerator *, PropertyDescriptorCollection_GetEnumerator, (PropertyDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB970, int32_t, PropertyDescriptorCollection_System_Collections_ICollection_get_Count, (PropertyDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, PropertyDescriptorCollection_System_Collections_ICollection_get_IsSynchronized, (PropertyDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Object *, PropertyDescriptorCollection_System_Collections_ICollection_get_SyncRoot, (PropertyDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02995E70, void, PropertyDescriptorCollection_System_Collections_IDictionary_Add, (PropertyDescriptorCollection * __this, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02995F70, void, PropertyDescriptorCollection_System_Collections_IDictionary_Clear, (PropertyDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02995F80, bool, PropertyDescriptorCollection_System_Collections_IDictionary_Contains, (PropertyDescriptorCollection * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x02996070, IDictionaryEnumerator *, PropertyDescriptorCollection_System_Collections_IDictionary_GetEnumerator, (PropertyDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x00F3ABA0, bool, PropertyDescriptorCollection_System_Collections_IDictionary_get_IsFixedSize, (PropertyDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x00F3ABA0, bool, PropertyDescriptorCollection_System_Collections_IDictionary_get_IsReadOnly, (PropertyDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x029961C0, Object *, PropertyDescriptorCollection_System_Collections_IDictionary_get_Item, (PropertyDescriptorCollection * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x029962A0, void, PropertyDescriptorCollection_System_Collections_IDictionary_set_Item, (PropertyDescriptorCollection * __this, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02996640, ICollection *, PropertyDescriptorCollection_System_Collections_IDictionary_get_Keys, (PropertyDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x029967A0, ICollection *, PropertyDescriptorCollection_System_Collections_IDictionary_get_Values, (PropertyDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02996940, void, PropertyDescriptorCollection_System_Collections_IDictionary_Remove, (PropertyDescriptorCollection * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x0195B1F0, IEnumerator *, PropertyDescriptorCollection_System_Collections_IEnumerable_GetEnumerator, (PropertyDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02996A30, int32_t, PropertyDescriptorCollection_System_Collections_IList_Add, (PropertyDescriptorCollection * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02995F70, void, PropertyDescriptorCollection_System_Collections_IList_Clear, (PropertyDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02996B10, bool, PropertyDescriptorCollection_System_Collections_IList_Contains, (PropertyDescriptorCollection * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02996BF0, int32_t, PropertyDescriptorCollection_System_Collections_IList_IndexOf, (PropertyDescriptorCollection * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02996CD0, void, PropertyDescriptorCollection_System_Collections_IList_Insert, (PropertyDescriptorCollection * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x00F3ABA0, bool, PropertyDescriptorCollection_System_Collections_IList_get_IsReadOnly, (PropertyDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x00F3ABA0, bool, PropertyDescriptorCollection_System_Collections_IList_get_IsFixedSize, (PropertyDescriptorCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02996EE0, void, PropertyDescriptorCollection_System_Collections_IList_Remove, (PropertyDescriptorCollection * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02997070, void, PropertyDescriptorCollection_System_Collections_IList_RemoveAt, (PropertyDescriptorCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02997080, Object *, PropertyDescriptorCollection_System_Collections_IList_get_Item, (PropertyDescriptorCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x029970A0, void, PropertyDescriptorCollection_System_Collections_IList_set_Item, (PropertyDescriptorCollection * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02997270, void, PropertyDescriptorCollection__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01DC2A00, void, PropertyDescriptorCollection_PropertyDescriptorEnumerator__ctor, (PropertyDescriptorCollection_PropertyDescriptorEnumerator * __this, PropertyDescriptorCollection * owner, MethodInfo * method));
DO_APP_FUNC(0x029973D0, Object *, PropertyDescriptorCollection_PropertyDescriptorEnumerator_get_Current, (PropertyDescriptorCollection_PropertyDescriptorEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x029974B0, DictionaryEntry, PropertyDescriptorCollection_PropertyDescriptorEnumerator_get_Entry, (PropertyDescriptorCollection_PropertyDescriptorEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02997520, Object *, PropertyDescriptorCollection_PropertyDescriptorEnumerator_get_Key, (PropertyDescriptorCollection_PropertyDescriptorEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02997520, Object *, PropertyDescriptorCollection_PropertyDescriptorEnumerator_get_Value, (PropertyDescriptorCollection_PropertyDescriptorEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02997570, bool, PropertyDescriptorCollection_PropertyDescriptorEnumerator_MoveNext, (PropertyDescriptorCollection_PropertyDescriptorEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x00C2BCA0, void, PropertyDescriptorCollection_PropertyDescriptorEnumerator_Reset, (PropertyDescriptorCollection_PropertyDescriptorEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x029989E0, void, ProvidePropertyAttribute__ctor, (ProvidePropertyAttribute * __this, String * propertyName, Type * receiverType, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, ProvidePropertyAttribute__ctor_1, (ProvidePropertyAttribute * __this, String * propertyName, String * receiverTypeName, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, ProvidePropertyAttribute_get_PropertyName, (ProvidePropertyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, ProvidePropertyAttribute_get_ReceiverTypeName, (ProvidePropertyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02998A20, Object *, ProvidePropertyAttribute_get_TypeId, (ProvidePropertyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02998A70, bool, ProvidePropertyAttribute_Equals, (ProvidePropertyAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FE67F0, int32_t, ProvidePropertyAttribute_GetHashCode, (ProvidePropertyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, ReadOnlyAttribute__ctor, (ReadOnlyAttribute * __this, bool isReadOnly, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, ReadOnlyAttribute_get_IsReadOnly, (ReadOnlyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02998B90, bool, ReadOnlyAttribute_Equals, (ReadOnlyAttribute * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, ReadOnlyAttribute_GetHashCode, (ReadOnlyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02998C60, bool, ReadOnlyAttribute_IsDefaultAttribute, (ReadOnlyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02998D20, void, ReadOnlyAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, RecommendedAsConfigurableAttribute__ctor, (RecommendedAsConfigurableAttribute * __this, bool recommendedAsConfigurable, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, RecommendedAsConfigurableAttribute_get_RecommendedAsConfigurable, (RecommendedAsConfigurableAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02998F50, bool, RecommendedAsConfigurableAttribute_Equals, (RecommendedAsConfigurableAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, RecommendedAsConfigurableAttribute_GetHashCode, (RecommendedAsConfigurableAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02999050, bool, RecommendedAsConfigurableAttribute_IsDefaultAttribute, (RecommendedAsConfigurableAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02999060, void, RecommendedAsConfigurableAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02999290, void, ReferenceConverter__ctor, (ReferenceConverter * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x02999340, bool, ReferenceConverter_CanConvertFrom, (ReferenceConverter * __this, ITypeDescriptorContext * context, Type * sourceType, MethodInfo * method));
DO_APP_FUNC(0x02999420, Object *, ReferenceConverter_ConvertFrom, (ReferenceConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02999660, Object *, ReferenceConverter_ConvertTo, (ReferenceConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x02999870, TypeConverter_StandardValuesCollection *, ReferenceConverter_GetStandardValues, (ReferenceConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, ReferenceConverter_GetStandardValuesExclusive, (ReferenceConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, ReferenceConverter_GetStandardValuesSupported, (ReferenceConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, ReferenceConverter_IsValueAllowed, (ReferenceConverter * __this, ITypeDescriptorContext * context, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02999F70, void, ReferenceConverter__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, ReferenceConverter_ReferenceComparer__ctor, (ReferenceConverter_ReferenceComparer * __this, ReferenceConverter * converter, MethodInfo * method));
DO_APP_FUNC(0x0299A000, int32_t, ReferenceConverter_ReferenceComparer_Compare, (ReferenceConverter_ReferenceComparer * __this, Object * item1, Object * item2, MethodInfo * method));
DO_APP_FUNC(0x0299A110, void, ReflectEventDescriptor__ctor, (ReflectEventDescriptor * __this, Type * componentClass, String * name, Type * type, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x0299A360, void, ReflectEventDescriptor__ctor_1, (ReflectEventDescriptor * __this, Type * componentClass, EventInfo_1 * eventInfo, MethodInfo * method));
DO_APP_FUNC(0x0299A4E0, void, ReflectEventDescriptor__ctor_2, (ReflectEventDescriptor * __this, Type * componentType, EventDescriptor_1 * oldReflectEventDescriptor, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, Type *, ReflectEventDescriptor_get_ComponentType, (ReflectEventDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0299A5E0, Type *, ReflectEventDescriptor_get_EventType, (ReflectEventDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0299A600, bool, ReflectEventDescriptor_get_IsMulticast, (ReflectEventDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0299A6F0, void, ReflectEventDescriptor_AddEventHandler, (ReflectEventDescriptor * __this, Object * component, Delegate * value, MethodInfo * method));
DO_APP_FUNC(0x0299AB20, void, ReflectEventDescriptor_FillAttributes, (ReflectEventDescriptor * __this, IList * attributes, MethodInfo * method));
DO_APP_FUNC(0x0299AB90, void, ReflectEventDescriptor_FillEventInfoAttribute, (ReflectEventDescriptor * __this, EventInfo_1 * realEventInfo, IList * attributes, MethodInfo * method));
DO_APP_FUNC(0x0299AEA0, void, ReflectEventDescriptor_FillMethods, (ReflectEventDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0299B3E0, void, ReflectEventDescriptor_FillSingleMethodAttribute, (ReflectEventDescriptor * __this, MethodInfo_1 * realMethodInfo, IList * attributes, MethodInfo * method));
DO_APP_FUNC(0x0299B700, void, ReflectEventDescriptor_RemoveEventHandler, (ReflectEventDescriptor * __this, Object * component, Delegate * value, MethodInfo * method));
DO_APP_FUNC(0x0299BA60, void, ReflectPropertyDescriptor__ctor, (ReflectPropertyDescriptor * __this, Type * componentClass, String * name, Type * type, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x0299BC80, void, ReflectPropertyDescriptor__ctor_1, (ReflectPropertyDescriptor * __this, Type * componentClass, String * name, Type * type, PropertyInfo_1 * propInfo, MethodInfo_1 * getMethod, MethodInfo_1 * setMethod, Attribute__Array * attrs, MethodInfo * method));
DO_APP_FUNC(0x0299BE10, void, ReflectPropertyDescriptor__ctor_2, (ReflectPropertyDescriptor * __this, Type * componentClass, String * name, Type * type, Type * receiverType, MethodInfo_1 * getMethod, MethodInfo_1 * setMethod, Attribute__Array * attrs, MethodInfo * method));
DO_APP_FUNC(0x0299BF40, void, ReflectPropertyDescriptor__ctor_3, (ReflectPropertyDescriptor * __this, Type * componentClass, PropertyDescriptor * oldReflectPropertyDescriptor, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x0299C3C0, Object *, ReflectPropertyDescriptor_get_AmbientValue, (ReflectPropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0299C5B0, EventDescriptor_1 *, ReflectPropertyDescriptor_get_ChangedEventValue, (ReflectPropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0299C7D0, EventDescriptor_1 *, ReflectPropertyDescriptor_get_IPropChangedEventValue, (ReflectPropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0299C9E0, void, ReflectPropertyDescriptor_set_IPropChangedEventValue, (ReflectPropertyDescriptor * __this, EventDescriptor_1 * value, MethodInfo * method));
DO_APP_FUNC(0x002FBC40, Type *, ReflectPropertyDescriptor_get_ComponentType, (ReflectPropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0299CAA0, Object *, ReflectPropertyDescriptor_get_DefaultValue, (ReflectPropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0299CDD0, MethodInfo_1 *, ReflectPropertyDescriptor_get_GetMethodValue, (ReflectPropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0299D240, bool, ReflectPropertyDescriptor_get_IsExtender, (ReflectPropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0299D2E0, bool, ReflectPropertyDescriptor_get_IsReadOnly, (ReflectPropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC60, Type *, ReflectPropertyDescriptor_get_PropertyType, (ReflectPropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0299D470, MethodInfo_1 *, ReflectPropertyDescriptor_get_ResetMethodValue, (ReflectPropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0299D770, MethodInfo_1 *, ReflectPropertyDescriptor_get_SetMethodValue, (ReflectPropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0299DD60, MethodInfo_1 *, ReflectPropertyDescriptor_get_ShouldSerializeMethodValue, (ReflectPropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0299E060, void, ReflectPropertyDescriptor_AddValueChanged, (ReflectPropertyDescriptor * __this, Object * component, EventHandler * handler, MethodInfo * method));
DO_APP_FUNC(0x0299E310, bool, ReflectPropertyDescriptor_ExtenderCanResetValue, (ReflectPropertyDescriptor * __this, IExtenderProvider * provider, Object * component, MethodInfo * method));
DO_APP_FUNC(0x005B0220, Type *, ReflectPropertyDescriptor_ExtenderGetReceiverType, (ReflectPropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x0299E5D0, Type *, ReflectPropertyDescriptor_ExtenderGetType, (ReflectPropertyDescriptor * __this, IExtenderProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x0299E5F0, Object *, ReflectPropertyDescriptor_ExtenderGetValue, (ReflectPropertyDescriptor * __this, IExtenderProvider * provider, Object * component, MethodInfo * method));
DO_APP_FUNC(0x0299E7A0, void, ReflectPropertyDescriptor_ExtenderResetValue, (ReflectPropertyDescriptor * __this, IExtenderProvider * provider, Object * component, PropertyDescriptor * notifyDesc, MethodInfo * method));
DO_APP_FUNC(0x0299EB60, void, ReflectPropertyDescriptor_ExtenderSetValue, (ReflectPropertyDescriptor * __this, IExtenderProvider * provider, Object * component, Object * value, PropertyDescriptor * notifyDesc, MethodInfo * method));
DO_APP_FUNC(0x0299EEF0, bool, ReflectPropertyDescriptor_ExtenderShouldSerializeValue, (ReflectPropertyDescriptor * __this, IExtenderProvider * provider, Object * component, MethodInfo * method));
DO_APP_FUNC(0x0299F320, bool, ReflectPropertyDescriptor_CanResetValue, (ReflectPropertyDescriptor * __this, Object * component, MethodInfo * method));
DO_APP_FUNC(0x0299F5D0, void, ReflectPropertyDescriptor_FillAttributes, (ReflectPropertyDescriptor * __this, IList * attributes, MethodInfo * method));
DO_APP_FUNC(0x0299FF90, Object *, ReflectPropertyDescriptor_GetValue, (ReflectPropertyDescriptor * __this, Object * component, MethodInfo * method));
DO_APP_FUNC(0x029A02B0, void, ReflectPropertyDescriptor_OnINotifyPropertyChanged, (ReflectPropertyDescriptor * __this, Object * component, PropertyChangedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x029A0400, void, ReflectPropertyDescriptor_OnValueChanged, (ReflectPropertyDescriptor * __this, Object * component, EventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x029A0590, void, ReflectPropertyDescriptor_RemoveValueChanged, (ReflectPropertyDescriptor * __this, Object * component, EventHandler * handler, MethodInfo * method));
DO_APP_FUNC(0x029A0820, void, ReflectPropertyDescriptor_ResetValue, (ReflectPropertyDescriptor * __this, Object * component, MethodInfo * method));
DO_APP_FUNC(0x029A0B80, void, ReflectPropertyDescriptor_SetValue, (ReflectPropertyDescriptor * __this, Object * component, Object * value, MethodInfo * method));
DO_APP_FUNC(0x029A0FD0, bool, ReflectPropertyDescriptor_ShouldSerializeValue, (ReflectPropertyDescriptor * __this, Object * component, MethodInfo * method));
DO_APP_FUNC(0x029A1300, bool, ReflectPropertyDescriptor_get_SupportsChangeEvents, (ReflectPropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x029A1340, void, ReflectPropertyDescriptor__cctor, (MethodInfo * method));
DO_APP_FUNC(0x029A1850, Guid, ReflectTypeDescriptionProvider_get_ExtenderProviderKey, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ReflectTypeDescriptionProvider__ctor, (ReflectTypeDescriptionProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x029A1900, Hashtable *, ReflectTypeDescriptionProvider_get_IntrinsicTypeConverters, (MethodInfo * method));
DO_APP_FUNC(0x029A2100, void, ReflectTypeDescriptionProvider_AddEditorTable, (Type * editorBaseType, Hashtable * table, MethodInfo * method));
DO_APP_FUNC(0x029A24E0, Object *, ReflectTypeDescriptionProvider_CreateInstance, (ReflectTypeDescriptionProvider * __this, IServiceProvider * provider, Type * objectType, Type__Array * argTypes, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x029A2750, Object *, ReflectTypeDescriptionProvider_CreateInstance_1, (Type * objectType, Type * callingType, MethodInfo * method));
DO_APP_FUNC(0x029A28F0, AttributeCollection *, ReflectTypeDescriptionProvider_GetAttributes, (ReflectTypeDescriptionProvider * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x029A2920, IDictionary *, ReflectTypeDescriptionProvider_GetCache, (ReflectTypeDescriptionProvider * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x029A2BF0, String *, ReflectTypeDescriptionProvider_GetClassName, (ReflectTypeDescriptionProvider * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x029A2C30, String *, ReflectTypeDescriptionProvider_GetComponentName, (ReflectTypeDescriptionProvider * __this, Type * type, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x029A2D30, TypeConverter *, ReflectTypeDescriptionProvider_GetConverter, (ReflectTypeDescriptionProvider * __this, Type * type, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x029A2D70, EventDescriptor_1 *, ReflectTypeDescriptionProvider_GetDefaultEvent, (ReflectTypeDescriptionProvider * __this, Type * type, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x029A2DB0, PropertyDescriptor *, ReflectTypeDescriptionProvider_GetDefaultProperty, (ReflectTypeDescriptionProvider * __this, Type * type, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x029A2DF0, Object *, ReflectTypeDescriptionProvider_GetEditor, (ReflectTypeDescriptionProvider * __this, Type * type, Object * instance, Type * editorBaseType, MethodInfo * method));
DO_APP_FUNC(0x029A2E40, Hashtable *, ReflectTypeDescriptionProvider_GetEditorTable, (Type * editorBaseType, MethodInfo * method));
DO_APP_FUNC(0x029A3560, EventDescriptorCollection *, ReflectTypeDescriptionProvider_GetEvents, (ReflectTypeDescriptionProvider * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x029A3590, AttributeCollection *, ReflectTypeDescriptionProvider_GetExtendedAttributes, (ReflectTypeDescriptionProvider * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x029A3630, String *, ReflectTypeDescriptionProvider_GetExtendedClassName, (ReflectTypeDescriptionProvider * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x029A36A0, String *, ReflectTypeDescriptionProvider_GetExtendedComponentName, (ReflectTypeDescriptionProvider * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x029A36F0, TypeConverter *, ReflectTypeDescriptionProvider_GetExtendedConverter, (ReflectTypeDescriptionProvider * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, EventDescriptor_1 *, ReflectTypeDescriptionProvider_GetExtendedDefaultEvent, (ReflectTypeDescriptionProvider * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, PropertyDescriptor *, ReflectTypeDescriptionProvider_GetExtendedDefaultProperty, (ReflectTypeDescriptionProvider * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x029A3750, Object *, ReflectTypeDescriptionProvider_GetExtendedEditor, (ReflectTypeDescriptionProvider * __this, Object * instance, Type * editorBaseType, MethodInfo * method));
DO_APP_FUNC(0x029A37C0, EventDescriptorCollection *, ReflectTypeDescriptionProvider_GetExtendedEvents, (ReflectTypeDescriptionProvider * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x029A3860, PropertyDescriptorCollection *, ReflectTypeDescriptionProvider_GetExtendedProperties, (ReflectTypeDescriptionProvider * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x029A3EC0, IExtenderProvider__Array *, ReflectTypeDescriptionProvider_GetExtenderProviders, (ReflectTypeDescriptionProvider * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x029A4160, IExtenderProvider__Array *, ReflectTypeDescriptionProvider_GetExtenders, (ICollection * components, Object * instance, IDictionary * cache, MethodInfo * method));
DO_APP_FUNC(0x029A49F0, Object *, ReflectTypeDescriptionProvider_GetExtendedPropertyOwner, (ReflectTypeDescriptionProvider * __this, Object * instance, PropertyDescriptor * pd, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, ICustomTypeDescriptor *, ReflectTypeDescriptionProvider_GetExtendedTypeDescriptor, (ReflectTypeDescriptionProvider * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x029A4A50, String *, ReflectTypeDescriptionProvider_GetFullComponentName, (ReflectTypeDescriptionProvider * __this, Object * component, MethodInfo * method));
DO_APP_FUNC(0x029A4C60, Type__Array *, ReflectTypeDescriptionProvider_GetPopulatedTypes, (ReflectTypeDescriptionProvider * __this, Module * module, MethodInfo * method));
DO_APP_FUNC(0x029A5100, PropertyDescriptorCollection *, ReflectTypeDescriptionProvider_GetProperties, (ReflectTypeDescriptionProvider * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x029A5130, Object *, ReflectTypeDescriptionProvider_GetPropertyOwner, (ReflectTypeDescriptionProvider * __this, Type * type, Object * instance, PropertyDescriptor * pd, MethodInfo * method));
DO_APP_FUNC(0x00502220, Type *, ReflectTypeDescriptionProvider_GetReflectionType, (ReflectTypeDescriptionProvider * __this, Type * objectType, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x029A51E0, ReflectTypeDescriptionProvider_ReflectedTypeData *, ReflectTypeDescriptionProvider_GetTypeData, (ReflectTypeDescriptionProvider * __this, Type * type, bool createIfNeeded, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, ICustomTypeDescriptor *, ReflectTypeDescriptionProvider_GetTypeDescriptor, (ReflectTypeDescriptionProvider * __this, Type * objectType, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x029A5610, Type *, ReflectTypeDescriptionProvider_GetTypeFromName, (String * typeName, MethodInfo * method));
DO_APP_FUNC(0x029A5770, bool, ReflectTypeDescriptionProvider_IsPopulated, (ReflectTypeDescriptionProvider * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x029A57C0, Attribute__Array *, ReflectTypeDescriptionProvider_ReflectGetAttributes, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x029A5E10, Attribute__Array *, ReflectTypeDescriptionProvider_ReflectGetAttributes_1, (MemberInfo_1 * member, MethodInfo * method));
DO_APP_FUNC(0x029A6460, EventDescriptor_1__Array *, ReflectTypeDescriptionProvider_ReflectGetEvents, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x029A6DB0, PropertyDescriptor__Array *, ReflectTypeDescriptionProvider_ReflectGetExtendedProperties, (IExtenderProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x029A7D90, PropertyDescriptor__Array *, ReflectTypeDescriptionProvider_ReflectGetProperties, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x029A8640, void, ReflectTypeDescriptionProvider_Refresh, (ReflectTypeDescriptionProvider * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x029A8680, Object *, ReflectTypeDescriptionProvider_SearchIntrinsicTable, (Hashtable * table, Type * callingType, MethodInfo * method));
DO_APP_FUNC(0x029A8EA0, void, ReflectTypeDescriptionProvider__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, ReflectTypeDescriptionProvider_ReflectedTypeData__ctor, (ReflectTypeDescriptionProvider_ReflectedTypeData * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x029A94D0, bool, ReflectTypeDescriptionProvider_ReflectedTypeData_get_IsPopulated, (ReflectTypeDescriptionProvider_ReflectedTypeData * __this, MethodInfo * method));
DO_APP_FUNC(0x029A9500, AttributeCollection *, ReflectTypeDescriptionProvider_ReflectedTypeData_GetAttributes, (ReflectTypeDescriptionProvider_ReflectedTypeData * __this, MethodInfo * method));
DO_APP_FUNC(0x01717360, String *, ReflectTypeDescriptionProvider_ReflectedTypeData_GetClassName, (ReflectTypeDescriptionProvider_ReflectedTypeData * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x029A9C80, String *, ReflectTypeDescriptionProvider_ReflectedTypeData_GetComponentName, (ReflectTypeDescriptionProvider_ReflectedTypeData * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x029A9D60, TypeConverter *, ReflectTypeDescriptionProvider_ReflectedTypeData_GetConverter, (ReflectTypeDescriptionProvider_ReflectedTypeData * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x029AA1F0, EventDescriptor_1 *, ReflectTypeDescriptionProvider_ReflectedTypeData_GetDefaultEvent, (ReflectTypeDescriptionProvider_ReflectedTypeData * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x029AA480, PropertyDescriptor *, ReflectTypeDescriptionProvider_ReflectedTypeData_GetDefaultProperty, (ReflectTypeDescriptionProvider_ReflectedTypeData * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x029AA680, Object *, ReflectTypeDescriptionProvider_ReflectedTypeData_GetEditor, (ReflectTypeDescriptionProvider_ReflectedTypeData * __this, Object * instance, Type * editorBaseType, MethodInfo * method));
DO_APP_FUNC(0x029AAD10, EditorAttribute *, ReflectTypeDescriptionProvider_ReflectedTypeData_GetEditorAttribute, (AttributeCollection * attributes, Type * editorBaseType, MethodInfo * method));
DO_APP_FUNC(0x029AAFE0, EventDescriptorCollection *, ReflectTypeDescriptionProvider_ReflectedTypeData_GetEvents, (ReflectTypeDescriptionProvider_ReflectedTypeData * __this, MethodInfo * method));
DO_APP_FUNC(0x029AB4C0, PropertyDescriptorCollection *, ReflectTypeDescriptionProvider_ReflectedTypeData_GetProperties, (ReflectTypeDescriptionProvider_ReflectedTypeData * __this, MethodInfo * method));
DO_APP_FUNC(0x029AB9A0, Type *, ReflectTypeDescriptionProvider_ReflectedTypeData_GetTypeFromName, (ReflectTypeDescriptionProvider_ReflectedTypeData * __this, String * typeName, MethodInfo * method));
DO_APP_FUNC(0x029ABBB0, void, ReflectTypeDescriptionProvider_ReflectedTypeData_Refresh, (ReflectTypeDescriptionProvider_ReflectedTypeData * __this, MethodInfo * method));
DO_APP_FUNC(0x029ABBD0, void, RefreshEventArgs__ctor, (RefreshEventArgs * __this, Object * componentChanged, MethodInfo * method));
DO_APP_FUNC(0x029ABC90, void, RefreshEventArgs__ctor_1, (RefreshEventArgs * __this, Type * typeChanged, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Object *, RefreshEventArgs_get_ComponentChanged, (RefreshEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Type *, RefreshEventArgs_get_TypeChanged, (RefreshEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, RefreshEventHandler__ctor, (RefreshEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x00673B90, void, RefreshEventHandler_Invoke, (RefreshEventHandler * __this, RefreshEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, RefreshEventHandler_BeginInvoke, (RefreshEventHandler * __this, RefreshEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, RefreshEventHandler_EndInvoke, (RefreshEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, RunInstallerAttribute__ctor, (RunInstallerAttribute * __this, bool runInstaller, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, RunInstallerAttribute_get_RunInstaller, (RunInstallerAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x029AC1D0, bool, RunInstallerAttribute_Equals, (RunInstallerAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, RunInstallerAttribute_GetHashCode, (RunInstallerAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x029AC2D0, bool, RunInstallerAttribute_IsDefaultAttribute, (RunInstallerAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x029AC390, void, RunInstallerAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x029AC5C0, void, RunWorkerCompletedEventArgs__ctor, (RunWorkerCompletedEventArgs * __this, Object * result, Exception * error, bool cancelled, MethodInfo * method));
DO_APP_FUNC(0x01BCB280, Object *, RunWorkerCompletedEventArgs_get_Result, (RunWorkerCompletedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, Object *, RunWorkerCompletedEventArgs_get_UserState, (RunWorkerCompletedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, RunWorkerCompletedEventHandler__ctor, (RunWorkerCompletedEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, RunWorkerCompletedEventHandler_Invoke, (RunWorkerCompletedEventHandler * __this, Object * sender, RunWorkerCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, RunWorkerCompletedEventHandler_BeginInvoke, (RunWorkerCompletedEventHandler * __this, Object * sender, RunWorkerCompletedEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, RunWorkerCompletedEventHandler_EndInvoke, (RunWorkerCompletedEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x029AC600, Type *, SByteConverter_get_TargetType, (SByteConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x029AC6A0, Object *, SByteConverter_FromString, (SByteConverter * __this, String * value, int32_t radix, MethodInfo * method));
DO_APP_FUNC(0x029AC870, Object *, SByteConverter_FromString_1, (SByteConverter * __this, String * value, NumberFormatInfo * formatInfo, MethodInfo * method));
DO_APP_FUNC(0x029AC930, Object *, SByteConverter_FromString_2, (SByteConverter * __this, String * value, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x029AC9E0, String *, SByteConverter_ToString, (SByteConverter * __this, Object * value, NumberFormatInfo * formatInfo, MethodInfo * method));
DO_APP_FUNC(0x01FE1B70, void, SByteConverter__ctor, (SByteConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, SettingsBindableAttribute__ctor, (SettingsBindableAttribute * __this, bool bindable, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, SettingsBindableAttribute_get_Bindable, (SettingsBindableAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x029ACB20, bool, SettingsBindableAttribute_Equals, (SettingsBindableAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE3D0, int32_t, SettingsBindableAttribute_GetHashCode, (SettingsBindableAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x029ACC10, void, SettingsBindableAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, SingleConverter_get_AllowHex, (SingleConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x029ACE30, Type *, SingleConverter_get_TargetType, (SingleConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x029ACED0, Object *, SingleConverter_FromString, (SingleConverter * __this, String * value, int32_t radix, MethodInfo * method));
DO_APP_FUNC(0x029AD000, Object *, SingleConverter_FromString_1, (SingleConverter * __this, String * value, NumberFormatInfo * formatInfo, MethodInfo * method));
DO_APP_FUNC(0x029AD0C0, Object *, SingleConverter_FromString_2, (SingleConverter * __this, String * value, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x029AD180, String *, SingleConverter_ToString, (SingleConverter * __this, Object * value, NumberFormatInfo * formatInfo, MethodInfo * method));
DO_APP_FUNC(0x01FE1B70, void, SingleConverter__ctor, (SingleConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x029AD260, bool, StringConverter_CanConvertFrom, (StringConverter * __this, ITypeDescriptorContext * context, Type * sourceType, MethodInfo * method));
DO_APP_FUNC(0x029AD340, Object *, StringConverter_ConvertFrom, (StringConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, MethodInfo * method));
DO_APP_FUNC(0x029AD440, void, StringConverter__ctor, (StringConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x029AD4D0, bool, SyntaxCheck_CheckMachineName, (String * value, MethodInfo * method));
DO_APP_FUNC(0x029AD5C0, bool, SyntaxCheck_CheckPath, (String * value, MethodInfo * method));
DO_APP_FUNC(0x029AD690, bool, SyntaxCheck_CheckRootedPath, (String * value, MethodInfo * method));
DO_APP_FUNC(0x029AD780, bool, TimeSpanConverter_CanConvertFrom, (TimeSpanConverter * __this, ITypeDescriptorContext * context, Type * sourceType, MethodInfo * method));
DO_APP_FUNC(0x029AD860, bool, TimeSpanConverter_CanConvertTo, (TimeSpanConverter * __this, ITypeDescriptorContext * context, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x029AD940, Object *, TimeSpanConverter_ConvertFrom, (TimeSpanConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, MethodInfo * method));
DO_APP_FUNC(0x029ADB50, Object *, TimeSpanConverter_ConvertTo, (TimeSpanConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x029ADF00, void, TimeSpanConverter__ctor, (TimeSpanConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x02943E10, void, ToolboxItemFilterAttribute__ctor, (ToolboxItemFilterAttribute * __this, String * filterString, MethodInfo * method));
DO_APP_FUNC(0x02943ED0, void, ToolboxItemFilterAttribute__ctor_1, (ToolboxItemFilterAttribute * __this, String * filterString, ToolboxItemFilterType__Enum filterType, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, ToolboxItemFilterAttribute_get_FilterString, (ToolboxItemFilterAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, ToolboxItemFilterType__Enum, ToolboxItemFilterAttribute_get_FilterType, (ToolboxItemFilterAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02943F90, Object *, ToolboxItemFilterAttribute_get_TypeId, (ToolboxItemFilterAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02943FF0, bool, ToolboxItemFilterAttribute_Equals, (ToolboxItemFilterAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x017E12D0, int32_t, ToolboxItemFilterAttribute_GetHashCode, (ToolboxItemFilterAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02944130, bool, ToolboxItemFilterAttribute_Match, (ToolboxItemFilterAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x02944200, String *, ToolboxItemFilterAttribute_ToString, (ToolboxItemFilterAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02944320, bool, TypeConverter_get_UseCompatibleTypeConversion, (MethodInfo * method));
DO_APP_FUNC(0x024A9E40, bool, TypeConverter_CanConvertFrom, (TypeConverter * __this, Type * sourceType, MethodInfo * method));
DO_APP_FUNC(0x029443D0, bool, TypeConverter_CanConvertFrom_1, (TypeConverter * __this, ITypeDescriptorContext * context, Type * sourceType, MethodInfo * method));
DO_APP_FUNC(0x02944480, bool, TypeConverter_CanConvertTo, (TypeConverter * __this, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x029444A0, bool, TypeConverter_CanConvertTo_1, (TypeConverter * __this, ITypeDescriptorContext * context, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x02944550, Object *, TypeConverter_ConvertFrom, (TypeConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02944630, Object *, TypeConverter_ConvertFrom_1, (TypeConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, MethodInfo * method));
DO_APP_FUNC(0x029446F0, Object *, TypeConverter_ConvertFromInvariantString, (TypeConverter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x029447C0, Object *, TypeConverter_ConvertFromInvariantString_1, (TypeConverter * __this, ITypeDescriptorContext * context, String * text, MethodInfo * method));
DO_APP_FUNC(0x02944890, Object *, TypeConverter_ConvertFromString, (TypeConverter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x029448C0, Object *, TypeConverter_ConvertFromString_1, (TypeConverter * __this, ITypeDescriptorContext * context, String * text, MethodInfo * method));
DO_APP_FUNC(0x029449B0, Object *, TypeConverter_ConvertFromString_2, (TypeConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, String * text, MethodInfo * method));
DO_APP_FUNC(0x029449D0, Object *, TypeConverter_ConvertTo, (TypeConverter * __this, Object * value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x02944A00, Object *, TypeConverter_ConvertTo_1, (TypeConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x02944BE0, String *, TypeConverter_ConvertToInvariantString, (TypeConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02944CA0, String *, TypeConverter_ConvertToInvariantString_1, (TypeConverter * __this, ITypeDescriptorContext * context, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02944D70, String *, TypeConverter_ConvertToString, (TypeConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02944ED0, String *, TypeConverter_ConvertToString_1, (TypeConverter * __this, ITypeDescriptorContext * context, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02945030, String *, TypeConverter_ConvertToString_2, (TypeConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02945150, Object *, TypeConverter_CreateInstance, (TypeConverter * __this, IDictionary * propertyValues, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Object *, TypeConverter_CreateInstance_1, (TypeConverter * __this, ITypeDescriptorContext * context, IDictionary * propertyValues, MethodInfo * method));
DO_APP_FUNC(0x02945170, Exception *, TypeConverter_GetConvertFromException, (TypeConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x029452F0, Exception *, TypeConverter_GetConvertToException, (TypeConverter * __this, Object * value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x004C5D30, bool, TypeConverter_GetCreateInstanceSupported, (TypeConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, TypeConverter_GetCreateInstanceSupported_1, (TypeConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x029454B0, PropertyDescriptorCollection *, TypeConverter_GetProperties, (TypeConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02945600, PropertyDescriptorCollection *, TypeConverter_GetProperties_1, (TypeConverter * __this, ITypeDescriptorContext * context, Object * value, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, PropertyDescriptorCollection *, TypeConverter_GetProperties_2, (TypeConverter * __this, ITypeDescriptorContext * context, Object * value, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x02945750, bool, TypeConverter_GetPropertiesSupported, (TypeConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, TypeConverter_GetPropertiesSupported_1, (TypeConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x012B3270, ICollection *, TypeConverter_GetStandardValues, (TypeConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, TypeConverter_StandardValuesCollection *, TypeConverter_GetStandardValues_1, (TypeConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x02945770, bool, TypeConverter_GetStandardValuesExclusive, (TypeConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, TypeConverter_GetStandardValuesExclusive_1, (TypeConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x02945790, bool, TypeConverter_GetStandardValuesSupported, (TypeConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, TypeConverter_GetStandardValuesSupported_1, (TypeConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x029457B0, bool, TypeConverter_IsValid, (TypeConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x029457D0, bool, TypeConverter_IsValid_1, (TypeConverter * __this, ITypeDescriptorContext * context, Object * value, MethodInfo * method));
DO_APP_FUNC(0x029459C0, PropertyDescriptorCollection *, TypeConverter_SortProperties, (TypeConverter * __this, PropertyDescriptorCollection * props, String__Array * names, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TypeConverter__ctor, (TypeConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TypeConverter__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02945A00, void, TypeConverter_SimplePropertyDescriptor__ctor, (TypeConverter_SimplePropertyDescriptor * __this, Type * componentType, String * name, Type * propertyType, MethodInfo * method));
DO_APP_FUNC(0x02945AC0, void, TypeConverter_SimplePropertyDescriptor__ctor_1, (TypeConverter_SimplePropertyDescriptor * __this, Type * componentType, String * name, Type * propertyType, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x002FBC20, Type *, TypeConverter_SimplePropertyDescriptor_get_ComponentType, (TypeConverter_SimplePropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x02945B10, bool, TypeConverter_SimplePropertyDescriptor_get_IsReadOnly, (TypeConverter_SimplePropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC40, Type *, TypeConverter_SimplePropertyDescriptor_get_PropertyType, (TypeConverter_SimplePropertyDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x02945BE0, bool, TypeConverter_SimplePropertyDescriptor_CanResetValue, (TypeConverter_SimplePropertyDescriptor * __this, Object * component, MethodInfo * method));
DO_APP_FUNC(0x02945D90, void, TypeConverter_SimplePropertyDescriptor_ResetValue, (TypeConverter_SimplePropertyDescriptor * __this, Object * component, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, TypeConverter_SimplePropertyDescriptor_ShouldSerializeValue, (TypeConverter_SimplePropertyDescriptor * __this, Object * component, MethodInfo * method));
DO_APP_FUNC(0x02945F10, void, TypeConverter_StandardValuesCollection__ctor, (TypeConverter_StandardValuesCollection * __this, ICollection * values, MethodInfo * method));
DO_APP_FUNC(0x02946010, int32_t, TypeConverter_StandardValuesCollection_get_Count, (TypeConverter_StandardValuesCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x029460C0, Object *, TypeConverter_StandardValuesCollection_get_Item, (TypeConverter_StandardValuesCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x029461F0, void, TypeConverter_StandardValuesCollection_CopyTo, (TypeConverter_StandardValuesCollection * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x029462A0, IEnumerator *, TypeConverter_StandardValuesCollection_GetEnumerator, (TypeConverter_StandardValuesCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02946330, int32_t, TypeConverter_StandardValuesCollection_System_Collections_ICollection_get_Count, (TypeConverter_StandardValuesCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, TypeConverter_StandardValuesCollection_System_Collections_ICollection_get_IsSynchronized, (TypeConverter_StandardValuesCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Object *, TypeConverter_StandardValuesCollection_System_Collections_ICollection_get_SyncRoot, (TypeConverter_StandardValuesCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x029461F0, void, TypeConverter_StandardValuesCollection_System_Collections_ICollection_CopyTo, (TypeConverter_StandardValuesCollection * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02946340, IEnumerator *, TypeConverter_StandardValuesCollection_System_Collections_IEnumerable_GetEnumerator, (TypeConverter_StandardValuesCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02946350, void, TypeConverterAttribute__ctor, (TypeConverterAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEED00, void, TypeConverterAttribute__ctor_1, (TypeConverterAttribute * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x029463E0, void, TypeConverterAttribute__ctor_2, (TypeConverterAttribute * __this, String * typeName, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, TypeConverterAttribute_get_ConverterTypeName, (TypeConverterAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x029464B0, bool, TypeConverterAttribute_Equals, (TypeConverterAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x0150BDE0, int32_t, TypeConverterAttribute_GetHashCode, (TypeConverterAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x029465A0, void, TypeConverterAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TypeDescriptionProvider__ctor, (TypeDescriptionProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, TypeDescriptionProvider__ctor_1, (TypeDescriptionProvider * __this, TypeDescriptionProvider * parent, MethodInfo * method));
DO_APP_FUNC(0x02946750, Object *, TypeDescriptionProvider_CreateInstance, (TypeDescriptionProvider * __this, IServiceProvider * provider, Type * objectType, Type__Array * argTypes, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x029468A0, IDictionary *, TypeDescriptionProvider_GetCache, (TypeDescriptionProvider * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x029468C0, ICustomTypeDescriptor *, TypeDescriptionProvider_GetExtendedTypeDescriptor, (TypeDescriptionProvider * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x02946A50, IExtenderProvider__Array *, TypeDescriptionProvider_GetExtenderProviders, (TypeDescriptionProvider * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x02946B40, String *, TypeDescriptionProvider_GetFullComponentName, (TypeDescriptionProvider * __this, Object * component, MethodInfo * method));
DO_APP_FUNC(0x01F938C0, Type *, TypeDescriptionProvider_GetReflectionType, (TypeDescriptionProvider * __this, Type * objectType, MethodInfo * method));
DO_APP_FUNC(0x02946C10, Type *, TypeDescriptionProvider_GetReflectionType_1, (TypeDescriptionProvider * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x02946CF0, Type *, TypeDescriptionProvider_GetReflectionType_2, (TypeDescriptionProvider * __this, Type * objectType, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x02946D10, Type *, TypeDescriptionProvider_GetRuntimeType, (TypeDescriptionProvider * __this, Type * reflectionType, MethodInfo * method));
DO_APP_FUNC(0x02946F00, ICustomTypeDescriptor *, TypeDescriptionProvider_GetTypeDescriptor, (TypeDescriptionProvider * __this, Type * objectType, MethodInfo * method));
DO_APP_FUNC(0x02946F20, ICustomTypeDescriptor *, TypeDescriptionProvider_GetTypeDescriptor_1, (TypeDescriptionProvider * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x02947000, ICustomTypeDescriptor *, TypeDescriptionProvider_GetTypeDescriptor_2, (TypeDescriptionProvider * __this, Type * objectType, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x02947190, bool, TypeDescriptionProvider_IsSupportedType, (TypeDescriptionProvider * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TypeDescriptionProvider_EmptyCustomTypeDescriptor__ctor, (TypeDescriptionProvider_EmptyCustomTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x02947290, void, TypeDescriptionProviderAttribute__ctor, (TypeDescriptionProviderAttribute * __this, String * typeName, MethodInfo * method));
DO_APP_FUNC(0x02947350, void, TypeDescriptionProviderAttribute__ctor_1, (TypeDescriptionProviderAttribute * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, TypeDescriptionProviderAttribute_get_TypeName, (TypeDescriptionProviderAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TypeDescriptor__ctor, (TypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x02947440, IComNativeDescriptorHandler *, TypeDescriptor_get_ComNativeDescriptorHandler, (MethodInfo * method));
DO_APP_FUNC(0x02947530, void, TypeDescriptor_set_ComNativeDescriptorHandler, (IComNativeDescriptorHandler * value, MethodInfo * method));
DO_APP_FUNC(0x02947790, Type *, TypeDescriptor_get_ComObjectType, (MethodInfo * method));
DO_APP_FUNC(0x02947830, Type *, TypeDescriptor_get_InterfaceType, (MethodInfo * method));
DO_APP_FUNC(0x029478D0, int32_t, TypeDescriptor_get_MetadataVersion, (MethodInfo * method));
DO_APP_FUNC(0x02947970, void, TypeDescriptor_add_Refreshed, (RefreshEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x02947AB0, void, TypeDescriptor_remove_Refreshed, (RefreshEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x02947BF0, TypeDescriptionProvider *, TypeDescriptor_AddAttributes, (Type * type, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x02947ED0, TypeDescriptionProvider *, TypeDescriptor_AddAttributes_1, (Object * instance, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x029480D0, void, TypeDescriptor_AddEditorTable, (Type * editorBaseType, Hashtable * table, MethodInfo * method));
DO_APP_FUNC(0x02948180, void, TypeDescriptor_AddProvider, (TypeDescriptionProvider * provider, Type * type, MethodInfo * method));
DO_APP_FUNC(0x02948530, void, TypeDescriptor_AddProvider_1, (TypeDescriptionProvider * provider, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x02948910, void, TypeDescriptor_AddProviderTransparent, (TypeDescriptionProvider * provider, Type * type, MethodInfo * method));
DO_APP_FUNC(0x02948A50, void, TypeDescriptor_AddProviderTransparent_1, (TypeDescriptionProvider * provider, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x02948B70, void, TypeDescriptor_CheckDefaultProvider, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x02949340, void, TypeDescriptor_CreateAssociation, (Object * primary, Object * secondary, MethodInfo * method));
DO_APP_FUNC(0x02949CC0, IDesigner *, TypeDescriptor_CreateDesigner, (IComponent * component, Type * designerBaseType, MethodInfo * method));
DO_APP_FUNC(0x0294A030, EventDescriptor_1 *, TypeDescriptor_CreateEvent, (Type * componentType, String * name, Type * type, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x0294A1B0, EventDescriptor_1 *, TypeDescriptor_CreateEvent_1, (Type * componentType, EventDescriptor_1 * oldEventDescriptor, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x0294A3C0, Object *, TypeDescriptor_CreateInstance, (IServiceProvider * provider, Type * objectType, Type__Array * argTypes, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x0294A610, PropertyDescriptor *, TypeDescriptor_CreateProperty, (Type * componentType, String * name, Type * type, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x0294A790, PropertyDescriptor *, TypeDescriptor_CreateProperty_1, (Type * componentType, PropertyDescriptor * oldPropertyDescriptor, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TypeDescriptor_DebugValidate, (Type * type, AttributeCollection * attributes, AttributeCollection * debugAttributes, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TypeDescriptor_DebugValidate_1, (AttributeCollection * attributes, AttributeCollection * debugAttributes, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TypeDescriptor_DebugValidate_2, (AttributeCollection * attributes, Type * type, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TypeDescriptor_DebugValidate_3, (AttributeCollection * attributes, Object * instance, bool noCustomTypeDesc, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TypeDescriptor_DebugValidate_4, (TypeConverter * converter, Type * type, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TypeDescriptor_DebugValidate_5, (TypeConverter * converter, Object * instance, bool noCustomTypeDesc, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TypeDescriptor_DebugValidate_6, (EventDescriptorCollection * events, Type * type, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TypeDescriptor_DebugValidate_7, (EventDescriptorCollection * events, Object * instance, Attribute__Array * attributes, bool noCustomTypeDesc, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TypeDescriptor_DebugValidate_8, (PropertyDescriptorCollection * properties, Type * type, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TypeDescriptor_DebugValidate_9, (PropertyDescriptorCollection * properties, Object * instance, Attribute__Array * attributes, bool noCustomTypeDesc, MethodInfo * method));
DO_APP_FUNC(0x0294ABF0, ArrayList *, TypeDescriptor_FilterMembers, (IList * members, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x0294AEB0, Object *, TypeDescriptor_GetAssociation, (Type * type, Object * primary, MethodInfo * method));
DO_APP_FUNC(0x0294B320, AttributeCollection *, TypeDescriptor_GetAttributes, (Type * componentType, MethodInfo * method));
DO_APP_FUNC(0x0294B4E0, AttributeCollection *, TypeDescriptor_GetAttributes_1, (Object * component, MethodInfo * method));
DO_APP_FUNC(0x0294B580, AttributeCollection *, TypeDescriptor_GetAttributes_2, (Object * component, bool noCustomTypeDesc, MethodInfo * method));
DO_APP_FUNC(0x0294BA00, IDictionary *, TypeDescriptor_GetCache, (Object * instance, MethodInfo * method));
DO_APP_FUNC(0x0294BAC0, String *, TypeDescriptor_GetClassName, (Object * component, MethodInfo * method));
DO_APP_FUNC(0x0294BC00, String *, TypeDescriptor_GetClassName_1, (Object * component, bool noCustomTypeDesc, MethodInfo * method));
DO_APP_FUNC(0x0294BCD0, String *, TypeDescriptor_GetClassName_2, (Type * componentType, MethodInfo * method));
DO_APP_FUNC(0x0294BD90, String *, TypeDescriptor_GetComponentName, (Object * component, MethodInfo * method));
DO_APP_FUNC(0x0294BED0, String *, TypeDescriptor_GetComponentName_1, (Object * component, bool noCustomTypeDesc, MethodInfo * method));
DO_APP_FUNC(0x0294BFA0, TypeConverter *, TypeDescriptor_GetConverter, (Object * component, MethodInfo * method));
DO_APP_FUNC(0x0294C0E0, TypeConverter *, TypeDescriptor_GetConverter_1, (Object * component, bool noCustomTypeDesc, MethodInfo * method));
DO_APP_FUNC(0x0294C1A0, TypeConverter *, TypeDescriptor_GetConverter_2, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x0294C260, EventDescriptor_1 *, TypeDescriptor_GetDefaultEvent, (Type * componentType, MethodInfo * method));
DO_APP_FUNC(0x0294C340, EventDescriptor_1 *, TypeDescriptor_GetDefaultEvent_1, (Object * component, MethodInfo * method));
DO_APP_FUNC(0x0294C480, EventDescriptor_1 *, TypeDescriptor_GetDefaultEvent_2, (Object * component, bool noCustomTypeDesc, MethodInfo * method));
DO_APP_FUNC(0x0294C550, PropertyDescriptor *, TypeDescriptor_GetDefaultProperty, (Type * componentType, MethodInfo * method));
DO_APP_FUNC(0x0294C630, PropertyDescriptor *, TypeDescriptor_GetDefaultProperty_1, (Object * component, MethodInfo * method));
DO_APP_FUNC(0x0294C770, PropertyDescriptor *, TypeDescriptor_GetDefaultProperty_2, (Object * component, bool noCustomTypeDesc, MethodInfo * method));
DO_APP_FUNC(0x0294C840, ICustomTypeDescriptor *, TypeDescriptor_GetDescriptor, (Type * type, String * typeName, MethodInfo * method));
DO_APP_FUNC(0x0294C960, ICustomTypeDescriptor *, TypeDescriptor_GetDescriptor_1, (Object * component, bool noCustomTypeDesc, MethodInfo * method));
DO_APP_FUNC(0x0294CC10, ICustomTypeDescriptor *, TypeDescriptor_GetExtendedDescriptor, (Object * component, MethodInfo * method));
DO_APP_FUNC(0x0294CD00, Object *, TypeDescriptor_GetEditor, (Object * component, Type * editorBaseType, MethodInfo * method));
DO_APP_FUNC(0x0294CEB0, Object *, TypeDescriptor_GetEditor_1, (Object * component, Type * editorBaseType, bool noCustomTypeDesc, MethodInfo * method));
DO_APP_FUNC(0x0294CFE0, Object *, TypeDescriptor_GetEditor_2, (Type * type, Type * editorBaseType, MethodInfo * method));
DO_APP_FUNC(0x0294D110, EventDescriptorCollection *, TypeDescriptor_GetEvents, (Type * componentType, MethodInfo * method));
DO_APP_FUNC(0x0294D2D0, EventDescriptorCollection *, TypeDescriptor_GetEvents_1, (Type * componentType, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x0294D600, EventDescriptorCollection *, TypeDescriptor_GetEvents_2, (Object * component, MethodInfo * method));
DO_APP_FUNC(0x0294D6A0, EventDescriptorCollection *, TypeDescriptor_GetEvents_3, (Object * component, bool noCustomTypeDesc, MethodInfo * method));
DO_APP_FUNC(0x0294D750, EventDescriptorCollection *, TypeDescriptor_GetEvents_4, (Object * component, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x0294D800, EventDescriptorCollection *, TypeDescriptor_GetEvents_5, (Object * component, Attribute__Array * attributes, bool noCustomTypeDesc, MethodInfo * method));
DO_APP_FUNC(0x0294DCF0, String *, TypeDescriptor_GetExtenderCollisionSuffix, (MemberDescriptor * member, MethodInfo * method));
DO_APP_FUNC(0x0294DF50, String *, TypeDescriptor_GetFullComponentName, (Object * component, MethodInfo * method));
DO_APP_FUNC(0x0294E040, Type *, TypeDescriptor_GetNodeForBaseType, (Type * searchType, MethodInfo * method));
DO_APP_FUNC(0x0294E170, PropertyDescriptorCollection *, TypeDescriptor_GetProperties, (Type * componentType, MethodInfo * method));
DO_APP_FUNC(0x0294E330, PropertyDescriptorCollection *, TypeDescriptor_GetProperties_1, (Type * componentType, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x0294E660, PropertyDescriptorCollection *, TypeDescriptor_GetProperties_2, (Object * component, MethodInfo * method));
DO_APP_FUNC(0x0294E790, PropertyDescriptorCollection *, TypeDescriptor_GetProperties_3, (Object * component, bool noCustomTypeDesc, MethodInfo * method));
DO_APP_FUNC(0x0294E850, PropertyDescriptorCollection *, TypeDescriptor_GetProperties_4, (Object * component, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x0294E990, PropertyDescriptorCollection *, TypeDescriptor_GetProperties_5, (Object * component, Attribute__Array * attributes, bool noCustomTypeDesc, MethodInfo * method));
DO_APP_FUNC(0x0294EA60, PropertyDescriptorCollection *, TypeDescriptor_GetPropertiesImpl, (Object * component, Attribute__Array * attributes, bool noCustomTypeDesc, bool noAttributes, MethodInfo * method));
DO_APP_FUNC(0x0294EFC0, TypeDescriptionProvider *, TypeDescriptor_GetProvider, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x0294F0B0, TypeDescriptionProvider *, TypeDescriptor_GetProvider_1, (Object * instance, MethodInfo * method));
DO_APP_FUNC(0x0294F190, TypeDescriptionProvider *, TypeDescriptor_GetProviderRecursive, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x0294F230, Type *, TypeDescriptor_GetReflectionType, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x0294F350, Type *, TypeDescriptor_GetReflectionType_1, (Object * instance, MethodInfo * method));
DO_APP_FUNC(0x0294F4D0, TypeDescriptor_TypeDescriptionNode *, TypeDescriptor_NodeFor, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x0294F570, TypeDescriptor_TypeDescriptionNode *, TypeDescriptor_NodeFor_1, (Type * type, bool createDelegator, MethodInfo * method));
DO_APP_FUNC(0x0294FE60, TypeDescriptor_TypeDescriptionNode *, TypeDescriptor_NodeFor_2, (Object * instance, MethodInfo * method));
DO_APP_FUNC(0x0294FF00, TypeDescriptor_TypeDescriptionNode *, TypeDescriptor_NodeFor_3, (Object * instance, bool createDelegator, MethodInfo * method));
DO_APP_FUNC(0x02950230, void, TypeDescriptor_NodeRemove, (Object * key, TypeDescriptionProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x02950710, ICollection *, TypeDescriptor_PipelineAttributeFilter, (int32_t pipelineType, ICollection * members, Attribute__Array * filter, Object * instance, IDictionary * cache, MethodInfo * method));
DO_APP_FUNC(0x02950E40, ICollection *, TypeDescriptor_PipelineFilter, (int32_t pipelineType, ICollection * members, Object * instance, IDictionary * cache, MethodInfo * method));
DO_APP_FUNC(0x02952170, ICollection *, TypeDescriptor_PipelineInitialize, (int32_t pipelineType, ICollection * members, IDictionary * cache, MethodInfo * method));
DO_APP_FUNC(0x02952590, ICollection *, TypeDescriptor_PipelineMerge, (int32_t pipelineType, ICollection * primary, ICollection * secondary, Object * instance, IDictionary * cache, MethodInfo * method));
DO_APP_FUNC(0x029531E0, void, TypeDescriptor_RaiseRefresh, (Object * component, MethodInfo * method));
DO_APP_FUNC(0x02953410, void, TypeDescriptor_RaiseRefresh_1, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x02953620, void, TypeDescriptor_Refresh, (Object * component, MethodInfo * method));
DO_APP_FUNC(0x029536C0, void, TypeDescriptor_Refresh_1, (Object * component, bool refreshReflectionProvider, MethodInfo * method));
DO_APP_FUNC(0x02953D60, void, TypeDescriptor_Refresh_2, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x02954230, void, TypeDescriptor_Refresh_3, (Module * module, MethodInfo * method));
DO_APP_FUNC(0x02954AD0, void, TypeDescriptor_Refresh_4, (Assembly * assembly, MethodInfo * method));
DO_APP_FUNC(0x02954BD0, void, TypeDescriptor_RemoveAssociation, (Object * primary, Object * secondary, MethodInfo * method));
DO_APP_FUNC(0x02954ED0, void, TypeDescriptor_RemoveAssociations, (Object * primary, MethodInfo * method));
DO_APP_FUNC(0x02954FD0, void, TypeDescriptor_RemoveProvider, (TypeDescriptionProvider * provider, Type * type, MethodInfo * method));
DO_APP_FUNC(0x02955120, void, TypeDescriptor_RemoveProvider_1, (TypeDescriptionProvider * provider, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x02955240, void, TypeDescriptor_RemoveProviderTransparent, (TypeDescriptionProvider * provider, Type * type, MethodInfo * method));
DO_APP_FUNC(0x02955440, void, TypeDescriptor_RemoveProviderTransparent_1, (TypeDescriptionProvider * provider, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x029555F0, bool, TypeDescriptor_ShouldHideMember, (MemberDescriptor * member, Attribute * attribute, MethodInfo * method));
DO_APP_FUNC(0x029556B0, void, TypeDescriptor_SortDescriptorArray, (IList * infos, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TypeDescriptor_Trace, (String * message, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x029557E0, void, TypeDescriptor__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0239A1A0, void, TypeDescriptor_AttributeProvider__ctor, (TypeDescriptor_AttributeProvider * __this, TypeDescriptionProvider * existingProvider, Attribute__Array * attrs, MethodInfo * method));
DO_APP_FUNC(0x02956040, ICustomTypeDescriptor *, TypeDescriptor_AttributeProvider_GetTypeDescriptor, (TypeDescriptor_AttributeProvider * __this, Type * objectType, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x01A9AC30, void, TypeDescriptor_AttributeProvider_AttributeTypeDescriptor__ctor, (TypeDescriptor_AttributeProvider_AttributeTypeDescriptor * __this, Attribute__Array * attrs, ICustomTypeDescriptor * parent, MethodInfo * method));
DO_APP_FUNC(0x029561A0, AttributeCollection *, TypeDescriptor_AttributeProvider_AttributeTypeDescriptor_GetAttributes, (TypeDescriptor_AttributeProvider_AttributeTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, TypeDescriptor_ComNativeDescriptionProvider__ctor, (TypeDescriptor_ComNativeDescriptionProvider * __this, IComNativeDescriptorHandler * handler, MethodInfo * method));
DO_APP_FUNC(0x002FB950, IComNativeDescriptorHandler *, TypeDescriptor_ComNativeDescriptionProvider_get_Handler, (TypeDescriptor_ComNativeDescriptionProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, TypeDescriptor_ComNativeDescriptionProvider_set_Handler, (TypeDescriptor_ComNativeDescriptionProvider * __this, IComNativeDescriptorHandler * value, MethodInfo * method));
DO_APP_FUNC(0x02956670, ICustomTypeDescriptor *, TypeDescriptor_ComNativeDescriptionProvider_GetTypeDescriptor, (TypeDescriptor_ComNativeDescriptionProvider * __this, Type * objectType, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor__ctor, (TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor * __this, IComNativeDescriptorHandler * handler, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x02956880, AttributeCollection *, TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetAttributes, (TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x02956980, String *, TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetClassName, (TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, String *, TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetComponentName, (TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x02956A20, TypeConverter *, TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetConverter, (TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x02956B30, EventDescriptor_1 *, TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetDefaultEvent, (TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x02956C40, PropertyDescriptor *, TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetDefaultProperty, (TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x02956D50, Object *, TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetEditor, (TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor * __this, Type * editorBaseType, MethodInfo * method));
DO_APP_FUNC(0x02956E00, EventDescriptorCollection *, TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetEvents, (TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x02956F10, EventDescriptorCollection *, TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetEvents_1, (TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor * __this, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x02957030, PropertyDescriptorCollection *, TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetProperties, (TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x029570D0, PropertyDescriptorCollection *, TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetProperties_1, (TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor * __this, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Object *, TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetPropertyOwner, (TypeDescriptor_ComNativeDescriptionProvider_ComNativeTypeDescriptor * __this, PropertyDescriptor * pd, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, TypeDescriptor_AttributeFilterCacheItem__ctor, (TypeDescriptor_AttributeFilterCacheItem * __this, Attribute__Array * filter, ICollection * filteredMembers, MethodInfo * method));
DO_APP_FUNC(0x02955FB0, bool, TypeDescriptor_AttributeFilterCacheItem_IsValid, (TypeDescriptor_AttributeFilterCacheItem * __this, Attribute__Array * filter, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, TypeDescriptor_FilterCacheItem__ctor, (TypeDescriptor_FilterCacheItem * __this, ITypeDescriptorFilterService * filterService, ICollection * filteredMembers, MethodInfo * method));
DO_APP_FUNC(0x01F0E420, bool, TypeDescriptor_FilterCacheItem_IsValid, (TypeDescriptor_FilterCacheItem * __this, ITypeDescriptorFilterService * filterService, MethodInfo * method));
DO_APP_FUNC(0x02957170, int32_t, TypeDescriptor_MemberDescriptorComparer_Compare, (TypeDescriptor_MemberDescriptorComparer * __this, Object * left, Object * right, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TypeDescriptor_MemberDescriptorComparer__ctor, (TypeDescriptor_MemberDescriptorComparer * __this, MethodInfo * method));
DO_APP_FUNC(0x02957390, void, TypeDescriptor_MemberDescriptorComparer__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, TypeDescriptor_MergedTypeDescriptor__ctor, (TypeDescriptor_MergedTypeDescriptor * __this, ICustomTypeDescriptor * primary, ICustomTypeDescriptor * secondary, MethodInfo * method));
DO_APP_FUNC(0x029574D0, AttributeCollection *, TypeDescriptor_MergedTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetAttributes, (TypeDescriptor_MergedTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x02957580, String *, TypeDescriptor_MergedTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetClassName, (TypeDescriptor_MergedTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x02957640, String *, TypeDescriptor_MergedTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetComponentName, (TypeDescriptor_MergedTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x02957700, TypeConverter *, TypeDescriptor_MergedTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetConverter, (TypeDescriptor_MergedTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x029577B0, EventDescriptor_1 *, TypeDescriptor_MergedTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetDefaultEvent, (TypeDescriptor_MergedTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x02957860, PropertyDescriptor *, TypeDescriptor_MergedTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetDefaultProperty, (TypeDescriptor_MergedTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x02957910, Object *, TypeDescriptor_MergedTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetEditor, (TypeDescriptor_MergedTypeDescriptor * __this, Type * editorBaseType, MethodInfo * method));
DO_APP_FUNC(0x02957A30, EventDescriptorCollection *, TypeDescriptor_MergedTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetEvents, (TypeDescriptor_MergedTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x02957AE0, EventDescriptorCollection *, TypeDescriptor_MergedTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetEvents_1, (TypeDescriptor_MergedTypeDescriptor * __this, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x02957BA0, PropertyDescriptorCollection *, TypeDescriptor_MergedTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetProperties, (TypeDescriptor_MergedTypeDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x02957C50, PropertyDescriptorCollection *, TypeDescriptor_MergedTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetProperties_1, (TypeDescriptor_MergedTypeDescriptor * __this, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x02957D10, Object *, TypeDescriptor_MergedTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetPropertyOwner, (TypeDescriptor_MergedTypeDescriptor * __this, PropertyDescriptor * pd, MethodInfo * method));
DO_APP_FUNC(0x002FBB10, void, TypeDescriptor_TypeDescriptionNode__ctor, (TypeDescriptor_TypeDescriptionNode * __this, TypeDescriptionProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x02957DD0, Object *, TypeDescriptor_TypeDescriptionNode_CreateInstance, (TypeDescriptor_TypeDescriptionNode * __this, IServiceProvider * provider, Type * objectType, Type__Array * argTypes, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x02957F90, IDictionary *, TypeDescriptor_TypeDescriptionNode_GetCache, (TypeDescriptor_TypeDescriptionNode * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x02958070, ICustomTypeDescriptor *, TypeDescriptor_TypeDescriptionNode_GetExtendedTypeDescriptor, (TypeDescriptor_TypeDescriptionNode * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x02958150, IExtenderProvider__Array *, TypeDescriptor_TypeDescriptionNode_GetExtenderProviders, (TypeDescriptor_TypeDescriptionNode * __this, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x02958230, String *, TypeDescriptor_TypeDescriptionNode_GetFullComponentName, (TypeDescriptor_TypeDescriptionNode * __this, Object * component, MethodInfo * method));
DO_APP_FUNC(0x02958310, Type *, TypeDescriptor_TypeDescriptionNode_GetReflectionType, (TypeDescriptor_TypeDescriptionNode * __this, Type * objectType, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x02958410, Type *, TypeDescriptor_TypeDescriptionNode_GetRuntimeType, (TypeDescriptor_TypeDescriptionNode * __this, Type * objectType, MethodInfo * method));
DO_APP_FUNC(0x02958510, ICustomTypeDescriptor *, TypeDescriptor_TypeDescriptionNode_GetTypeDescriptor, (TypeDescriptor_TypeDescriptionNode * __this, Type * objectType, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x02958680, bool, TypeDescriptor_TypeDescriptionNode_IsSupportedType, (TypeDescriptor_TypeDescriptionNode * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x00110270, void, TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor__ctor, (TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor__Boxed * __this, TypeDescriptor_TypeDescriptionNode * node, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x00216170, AttributeCollection *, TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetAttributes, (TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00216180, String *, TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetClassName, (TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00216190, String *, TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetComponentName, (TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002161A0, TypeConverter *, TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetConverter, (TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002161B0, EventDescriptor_1 *, TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetDefaultEvent, (TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002161C0, PropertyDescriptor *, TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetDefaultProperty, (TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002161D0, Object *, TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetEditor, (TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor__Boxed * __this, Type * editorBaseType, MethodInfo * method));
DO_APP_FUNC(0x002161E0, EventDescriptorCollection *, TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetEvents, (TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002161F0, EventDescriptorCollection *, TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetEvents_1, (TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor__Boxed * __this, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x00216200, PropertyDescriptorCollection *, TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetProperties, (TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00216210, PropertyDescriptorCollection *, TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetProperties_1, (TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor__Boxed * __this, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x00216220, Object *, TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetPropertyOwner, (TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor__Boxed * __this, PropertyDescriptor * pd, MethodInfo * method));
DO_APP_FUNC(0x0013C860, void, TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor__ctor, (TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor__Boxed * __this, TypeDescriptor_TypeDescriptionNode * node, Type * objectType, Object * instance, MethodInfo * method));
DO_APP_FUNC(0x00216250, AttributeCollection *, TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetAttributes, (TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00216260, String *, TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetClassName, (TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00216270, String *, TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetComponentName, (TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00216280, TypeConverter *, TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetConverter, (TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00216290, EventDescriptor_1 *, TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetDefaultEvent, (TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002162A0, PropertyDescriptor *, TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetDefaultProperty, (TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002162B0, Object *, TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetEditor, (TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor__Boxed * __this, Type * editorBaseType, MethodInfo * method));
DO_APP_FUNC(0x002162C0, EventDescriptorCollection *, TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetEvents, (TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002162D0, EventDescriptorCollection *, TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetEvents_1, (TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor__Boxed * __this, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x002162E0, PropertyDescriptorCollection *, TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetProperties, (TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002162F0, PropertyDescriptorCollection *, TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetProperties_1, (TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor__Boxed * __this, Attribute__Array * attributes, MethodInfo * method));
DO_APP_FUNC(0x00216300, Object *, TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor_System_ComponentModel_ICustomTypeDescriptor_GetPropertyOwner, (TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor__Boxed * __this, PropertyDescriptor * pd, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TypeDescriptor_TypeDescriptorComObject__ctor, (TypeDescriptor_TypeDescriptorComObject * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TypeDescriptor_TypeDescriptorInterface__ctor, (TypeDescriptor_TypeDescriptorInterface * __this, MethodInfo * method));
DO_APP_FUNC(0x0295C510, void, TypeListConverter__ctor, (TypeListConverter * __this, Type__Array * types, MethodInfo * method));
DO_APP_FUNC(0x0295C5C0, bool, TypeListConverter_CanConvertFrom, (TypeListConverter * __this, ITypeDescriptorContext * context, Type * sourceType, MethodInfo * method));
DO_APP_FUNC(0x0295C6A0, bool, TypeListConverter_CanConvertTo, (TypeListConverter * __this, ITypeDescriptorContext * context, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x0295C780, Object *, TypeListConverter_ConvertFrom, (TypeListConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0295C8E0, Object *, TypeListConverter_ConvertTo, (TypeListConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x0295CD10, TypeConverter_StandardValuesCollection *, TypeListConverter_GetStandardValues, (TypeListConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, TypeListConverter_GetStandardValuesExclusive, (TypeListConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, TypeListConverter_GetStandardValuesSupported, (TypeListConverter * __this, ITypeDescriptorContext * context, MethodInfo * method));
DO_APP_FUNC(0x0295CEB0, Type *, UInt16Converter_get_TargetType, (UInt16Converter * __this, MethodInfo * method));
DO_APP_FUNC(0x0295CF50, Object *, UInt16Converter_FromString, (UInt16Converter * __this, String * value, int32_t radix, MethodInfo * method));
DO_APP_FUNC(0x0295D110, Object *, UInt16Converter_FromString_1, (UInt16Converter * __this, String * value, NumberFormatInfo * formatInfo, MethodInfo * method));
DO_APP_FUNC(0x0295D1D0, Object *, UInt16Converter_FromString_2, (UInt16Converter * __this, String * value, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x0295D280, String *, UInt16Converter_ToString, (UInt16Converter * __this, Object * value, NumberFormatInfo * formatInfo, MethodInfo * method));
DO_APP_FUNC(0x01FE1B70, void, UInt16Converter__ctor, (UInt16Converter * __this, MethodInfo * method));
DO_APP_FUNC(0x0295D350, Type *, UInt32Converter_get_TargetType, (UInt32Converter * __this, MethodInfo * method));
DO_APP_FUNC(0x0295D3F0, Object *, UInt32Converter_FromString, (UInt32Converter * __this, String * value, int32_t radix, MethodInfo * method));
DO_APP_FUNC(0x0295D560, Object *, UInt32Converter_FromString_1, (UInt32Converter * __this, String * value, NumberFormatInfo * formatInfo, MethodInfo * method));
DO_APP_FUNC(0x0295D620, Object *, UInt32Converter_FromString_2, (UInt32Converter * __this, String * value, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x0295D6D0, String *, UInt32Converter_ToString, (UInt32Converter * __this, Object * value, NumberFormatInfo * formatInfo, MethodInfo * method));
DO_APP_FUNC(0x01FE1B70, void, UInt32Converter__ctor, (UInt32Converter * __this, MethodInfo * method));
DO_APP_FUNC(0x0295D7A0, Type *, UInt64Converter_get_TargetType, (UInt64Converter * __this, MethodInfo * method));
DO_APP_FUNC(0x0295D840, Object *, UInt64Converter_FromString, (UInt64Converter * __this, String * value, int32_t radix, MethodInfo * method));
DO_APP_FUNC(0x0295D9C0, Object *, UInt64Converter_FromString_1, (UInt64Converter * __this, String * value, NumberFormatInfo * formatInfo, MethodInfo * method));
DO_APP_FUNC(0x0295DA80, Object *, UInt64Converter_FromString_2, (UInt64Converter * __this, String * value, CultureInfo * culture, MethodInfo * method));
DO_APP_FUNC(0x0295DB30, String *, UInt64Converter_ToString, (UInt64Converter * __this, Object * value, NumberFormatInfo * formatInfo, MethodInfo * method));
DO_APP_FUNC(0x01FE1B70, void, UInt64Converter__ctor, (UInt64Converter * __this, MethodInfo * method));
DO_APP_FUNC(0x0295DC00, void, WarningException__ctor, (WarningException * __this, MethodInfo * method));
DO_APP_FUNC(0x0295DC30, void, WarningException__ctor_1, (WarningException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x0295DC60, void, WarningException__ctor_2, (WarningException * __this, String * message, String * helpUrl, MethodInfo * method));
DO_APP_FUNC(0x01E259C0, void, WarningException__ctor_3, (WarningException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x0295DCA0, void, WarningException__ctor_4, (WarningException * __this, String * message, String * helpUrl, String * helpTopic, MethodInfo * method));
DO_APP_FUNC(0x0295DCE0, void, WarningException__ctor_5, (WarningException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x002FBC20, String *, WarningException_get_HelpUrl, (WarningException * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC40, String *, WarningException_get_HelpTopic, (WarningException * __this, MethodInfo * method));
DO_APP_FUNC(0x0295DE60, void, WarningException_GetObjectData, (WarningException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0295EA40, void, Win32Exception__ctor, (Win32Exception * __this, MethodInfo * method));
DO_APP_FUNC(0x0295EB20, void, Win32Exception__ctor_1, (Win32Exception * __this, int32_t error, MethodInfo * method));
DO_APP_FUNC(0x0295EBE0, void, Win32Exception__ctor_2, (Win32Exception * __this, int32_t error, String * message, MethodInfo * method));
DO_APP_FUNC(0x0295EC20, void, Win32Exception__ctor_3, (Win32Exception * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x0295ED20, void, Win32Exception__ctor_4, (Win32Exception * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x0295EE30, void, Win32Exception__ctor_5, (Win32Exception * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x00989BF0, int32_t, Win32Exception_get_NativeErrorCode, (Win32Exception * __this, MethodInfo * method));
DO_APP_FUNC(0x0295EF00, void, Win32Exception_GetObjectData, (Win32Exception * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0295F000, String *, Win32Exception_GetErrorMessage, (int32_t error, MethodInfo * method));
DO_APP_FUNC(0x0295F1E0, void, Win32Exception_InitializeErrorMessages, (MethodInfo * method));
DO_APP_FUNC(0x02960E20, void, Win32Exception__cctor, (MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, BaseNumberConverter_get_AllowHex, (BaseNumberConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x024A42A0, Exception *, BaseNumberConverter_FromStringError, (BaseNumberConverter * __this, String * failedText, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x024A4510, bool, BaseNumberConverter_CanConvertFrom, (BaseNumberConverter * __this, ITypeDescriptorContext * context, Type * sourceType, MethodInfo * method));
DO_APP_FUNC(0x024A45F0, Object *, BaseNumberConverter_ConvertFrom, (BaseNumberConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, MethodInfo * method));
DO_APP_FUNC(0x024A4950, Object *, BaseNumberConverter_ConvertTo, (BaseNumberConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x024A4C20, bool, BaseNumberConverter_CanConvertTo, (BaseNumberConverter * __this, ITypeDescriptorContext * context, Type * t, MethodInfo * method));
DO_APP_FUNC(0x024A4C70, void, BaseNumberConverter__ctor, (BaseNumberConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEE680, void, InheritanceAttribute__ctor, (InheritanceAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, InheritanceAttribute__ctor_1, (InheritanceAttribute * __this, InheritanceLevel__Enum inheritanceLevel, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, InheritanceLevel__Enum, InheritanceAttribute_get_InheritanceLevel, (InheritanceAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEE740, bool, InheritanceAttribute_Equals, (InheritanceAttribute * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, InheritanceAttribute_GetHashCode, (InheritanceAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEE830, bool, InheritanceAttribute_IsDefaultAttribute, (InheritanceAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEE8F0, String *, InheritanceAttribute_ToString, (InheritanceAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FEEA00, void, InheritanceAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, NotifyParentPropertyAttribute__ctor, (NotifyParentPropertyAttribute * __this, bool notifyParent, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, NotifyParentPropertyAttribute_get_NotifyParent, (NotifyParentPropertyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02990C30, bool, NotifyParentPropertyAttribute_Equals, (NotifyParentPropertyAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, NotifyParentPropertyAttribute_GetHashCode, (NotifyParentPropertyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02990D20, bool, NotifyParentPropertyAttribute_IsDefaultAttribute, (NotifyParentPropertyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02990DE0, void, NotifyParentPropertyAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00531660, void, ParenthesizePropertyNameAttribute__ctor, (ParenthesizePropertyNameAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, ParenthesizePropertyNameAttribute__ctor_1, (ParenthesizePropertyNameAttribute * __this, bool needParenthesis, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, ParenthesizePropertyNameAttribute_get_NeedParenthesis, (ParenthesizePropertyNameAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02991D10, bool, ParenthesizePropertyNameAttribute_Equals, (ParenthesizePropertyNameAttribute * __this, Object * o, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, ParenthesizePropertyNameAttribute_GetHashCode, (ParenthesizePropertyNameAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02991DF0, bool, ParenthesizePropertyNameAttribute_IsDefaultAttribute, (ParenthesizePropertyNameAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02991EB0, void, ParenthesizePropertyNameAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x029975B0, void, PropertyTabAttribute__ctor, (PropertyTabAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02997650, void, PropertyTabAttribute__ctor_1, (PropertyTabAttribute * __this, Type * tabClass, MethodInfo * method));
DO_APP_FUNC(0x02997780, void, PropertyTabAttribute__ctor_2, (PropertyTabAttribute * __this, String * tabClassName, MethodInfo * method));
DO_APP_FUNC(0x029978B0, void, PropertyTabAttribute__ctor_3, (PropertyTabAttribute * __this, Type * tabClass, PropertyTabScope__Enum tabScope, MethodInfo * method));
DO_APP_FUNC(0x02997A40, void, PropertyTabAttribute__ctor_4, (PropertyTabAttribute * __this, String * tabClassName, PropertyTabScope__Enum tabScope, MethodInfo * method));
DO_APP_FUNC(0x02997BD0, Type__Array *, PropertyTabAttribute_get_TabClasses, (PropertyTabAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02998020, String__Array *, PropertyTabAttribute_get_TabClassNames, (PropertyTabAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, PropertyTabScope__Enum__Array *, PropertyTabAttribute_get_TabScopes, (PropertyTabAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02998170, bool, PropertyTabAttribute_Equals, (PropertyTabAttribute * __this, Object * other, MethodInfo * method));
DO_APP_FUNC(0x029982A0, bool, PropertyTabAttribute_Equals_1, (PropertyTabAttribute * __this, PropertyTabAttribute * other, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, PropertyTabAttribute_GetHashCode, (PropertyTabAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02998500, void, PropertyTabAttribute_InitializeArrays, (PropertyTabAttribute * __this, String__Array * tabClassNames, PropertyTabScope__Enum__Array * tabScopes, MethodInfo * method));
DO_APP_FUNC(0x02998520, void, PropertyTabAttribute_InitializeArrays_1, (PropertyTabAttribute * __this, Type__Array * tabClasses, PropertyTabScope__Enum__Array * tabScopes, MethodInfo * method));
DO_APP_FUNC(0x02998540, void, PropertyTabAttribute_InitializeArrays_2, (PropertyTabAttribute * __this, String__Array * tabClassNames, Type__Array * tabClasses, PropertyTabScope__Enum__Array * tabScopes, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, RefreshPropertiesAttribute__ctor, (RefreshPropertiesAttribute * __this, RefreshProperties__Enum refresh, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, RefreshProperties__Enum, RefreshPropertiesAttribute_get_RefreshProperties, (RefreshPropertiesAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x029ABD40, bool, RefreshPropertiesAttribute_Equals, (RefreshPropertiesAttribute * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FDE840, int32_t, RefreshPropertiesAttribute_GetHashCode, (RefreshPropertiesAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x029ABE20, bool, RefreshPropertiesAttribute_IsDefaultAttribute, (RefreshPropertiesAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x029ABEE0, void, RefreshPropertiesAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x029ADF90, bool, ToolboxItemAttribute_IsDefaultAttribute, (ToolboxItemAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x029AE050, void, ToolboxItemAttribute__ctor, (ToolboxItemAttribute * __this, bool defaultType, MethodInfo * method));
DO_APP_FUNC(0x029AE0E0, void, ToolboxItemAttribute__ctor_1, (ToolboxItemAttribute * __this, String * toolboxItemTypeName, MethodInfo * method));
DO_APP_FUNC(0x029AE1B0, void, ToolboxItemAttribute__ctor_2, (ToolboxItemAttribute * __this, Type * toolboxItemType, MethodInfo * method));
DO_APP_FUNC(0x029AE1F0, Type *, ToolboxItemAttribute_get_ToolboxItemType, (ToolboxItemAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x029AE390, String *, ToolboxItemAttribute_get_ToolboxItemTypeName, (ToolboxItemAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x029AE420, bool, ToolboxItemAttribute_Equals, (ToolboxItemAttribute * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x029AE550, int32_t, ToolboxItemAttribute_GetHashCode, (ToolboxItemAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x029AE580, void, ToolboxItemAttribute__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0295DF70, void, WeakHashtable__ctor, (WeakHashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x0295E040, void, WeakHashtable_Clear, (WeakHashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x0295E050, void, WeakHashtable_Remove, (WeakHashtable * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x0295E060, void, WeakHashtable_SetWeak, (WeakHashtable * __this, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0295E210, void, WeakHashtable_ScavengeKeys, (WeakHashtable * __this, MethodInfo * method));
DO_APP_FUNC(0x0295E6C0, void, WeakHashtable__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0295E8D0, bool, WeakHashtable_WeakKeyComparer_System_Collections_IEqualityComparer_Equals, (WeakHashtable_WeakKeyComparer * __this, Object * x, Object * y, MethodInfo * method));
DO_APP_FUNC(0x00F9BDB0, int32_t, WeakHashtable_WeakKeyComparer_System_Collections_IEqualityComparer_GetHashCode, (WeakHashtable_WeakKeyComparer * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WeakHashtable_WeakKeyComparer__ctor, (WeakHashtable_WeakKeyComparer * __this, MethodInfo * method));
DO_APP_FUNC(0x0295E800, void, WeakHashtable_EqualityWeakReference__ctor, (WeakHashtable_EqualityWeakReference * __this, Object * o, MethodInfo * method));
DO_APP_FUNC(0x0295E850, bool, WeakHashtable_EqualityWeakReference_Equals, (WeakHashtable_EqualityWeakReference * __this, Object * o, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, WeakHashtable_EqualityWeakReference_GetHashCode, (WeakHashtable_EqualityWeakReference * __this, MethodInfo * method));
DO_APP_FUNC(0x024A76E0, void, SRCategoryAttribute__ctor, (SRCategoryAttribute * __this, String * category, MethodInfo * method));
DO_APP_FUNC(0x01A94260, void, CheckoutException__ctor, (CheckoutException * __this, MethodInfo * method));
DO_APP_FUNC(0x01A93D50, void, CheckoutException__ctor_1, (CheckoutException * __this, String * message, int32_t errorCode, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, CheckoutException__ctor_2, (CheckoutException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01FE3200, void, CheckoutException__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00417920, LicenseUsageMode__Enum, DesigntimeLicenseContext_get_UsageMode, (DesigntimeLicenseContext * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, String *, DesigntimeLicenseContext_GetSavedLicenseKey, (DesigntimeLicenseContext * __this, Type * type, Assembly * resourceAssembly, MethodInfo * method));
DO_APP_FUNC(0x01FE3370, void, DesigntimeLicenseContext_SetSavedLicenseKey, (DesigntimeLicenseContext * __this, Type * type, String * key, MethodInfo * method));
DO_APP_FUNC(0x01FE33E0, void, DesigntimeLicenseContext__ctor, (DesigntimeLicenseContext * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE3840, String *, RuntimeLicenseContext_GetLocalPath, (RuntimeLicenseContext * __this, String * fileName, MethodInfo * method));
DO_APP_FUNC(0x01FE39C0, String *, RuntimeLicenseContext_GetSavedLicenseKey, (RuntimeLicenseContext * __this, Type * type, Assembly * resourceAssembly, MethodInfo * method));
DO_APP_FUNC(0x01FE4790, Stream *, RuntimeLicenseContext_CaseInsensitiveManifestResourceStreamLookup, (RuntimeLicenseContext * __this, Assembly * satellite, String * name, MethodInfo * method));
DO_APP_FUNC(0x01FE49C0, Stream *, RuntimeLicenseContext_OpenRead, (Uri * resourceUri, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RuntimeLicenseContext__ctor, (RuntimeLicenseContext * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE4B60, void, RuntimeLicenseContext__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01FE3540, void, DesigntimeLicenseContextSerializer_Deserialize, (Stream * o, String * cryptoKey, RuntimeLicenseContext * context, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, DesignerSerializerAttribute__ctor, (DesignerSerializerAttribute * __this, String * serializerTypeName, String * baseSerializerTypeName, MethodInfo * method));
DO_APP_FUNC(0x01FE4CC0, Object *, DesignerSerializerAttribute_get_TypeId, (DesignerSerializerAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE4D60, void, InstanceDescriptor__ctor, (InstanceDescriptor * __this, MemberInfo_1 * member, ICollection * arguments, MethodInfo * method));
DO_APP_FUNC(0x01FE4D80, void, InstanceDescriptor__ctor_1, (InstanceDescriptor * __this, MemberInfo_1 * member, ICollection * arguments, bool isComplete, MethodInfo * method));
DO_APP_FUNC(0x01FE53F0, Object *, InstanceDescriptor_Invoke, (InstanceDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x01FE5970, void, RootDesignerSerializerAttribute__ctor, (RootDesignerSerializerAttribute * __this, String * serializerTypeName, String * baseSerializerTypeName, bool reloadable, MethodInfo * method));
DO_APP_FUNC(0x01FE5980, Object *, RootDesignerSerializerAttribute_get_TypeId, (RootDesignerSerializerAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, DefaultParameterValueAttribute__ctor, (DefaultParameterValueAttribute * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Object *, DefaultParameterValueAttribute_get_Value, (DefaultParameterValueAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x021BBD50, void, HandleCollector__ctor, (HandleCollector * __this, String * name, int32_t initialThreshold, MethodInfo * method));
DO_APP_FUNC(0x021BBE70, void, HandleCollector__ctor_1, (HandleCollector * __this, String * name, int32_t initialThreshold, int32_t maximumThreshold, MethodInfo * method));
DO_APP_FUNC(0x00529E80, int32_t, HandleCollector_get_Count, (HandleCollector * __this, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, HandleCollector_get_InitialThreshold, (HandleCollector * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A010, int32_t, HandleCollector_get_MaximumThreshold, (HandleCollector * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, HandleCollector_get_Name, (HandleCollector * __this, MethodInfo * method));
DO_APP_FUNC(0x021BC030, void, HandleCollector_Add, (HandleCollector * __this, MethodInfo * method));
DO_APP_FUNC(0x021BC360, void, HandleCollector_Remove, (HandleCollector * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, FriendAccessAllowedAttribute_1__ctor, (FriendAccessAllowedAttribute_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x021BC660, void, AuthenticationException__ctor, (AuthenticationException * __this, MethodInfo * method));
DO_APP_FUNC(0x01E259C0, void, AuthenticationException__ctor_1, (AuthenticationException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, AuthenticationException__ctor_2, (AuthenticationException * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x021BC8D0, void, ServiceNameCollection__ctor, (ServiceNameCollection * __this, ICollection * items, MethodInfo * method));
DO_APP_FUNC(0x021BCC00, void, ServiceNameCollection_AddIfNew, (ArrayList * newServiceNames, String * serviceName, MethodInfo * method));
DO_APP_FUNC(0x021BCD10, bool, ServiceNameCollection_Contains, (String * searchServiceName, ICollection * serviceNames, MethodInfo * method));
DO_APP_FUNC(0x021BCF00, String *, ServiceNameCollection_NormalizeServiceName, (String * inputServiceName, MethodInfo * method));
DO_APP_FUNC(0x021BD390, bool, ServiceNameCollection_Match, (String * serviceName1, String * serviceName2, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ExtendedProtectionPolicy__ctor, (ExtendedProtectionPolicy * __this, PolicyEnforcement__Enum policyEnforcement, MethodInfo * method));
DO_APP_FUNC(0x021BC6F0, void, ExtendedProtectionPolicy__ctor_1, (ExtendedProtectionPolicy * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x021BC740, ChannelBinding *, ExtendedProtectionPolicy_get_CustomChannelBinding, (ExtendedProtectionPolicy * __this, MethodInfo * method));
DO_APP_FUNC(0x021BC790, PolicyEnforcement__Enum, ExtendedProtectionPolicy_get_PolicyEnforcement, (ExtendedProtectionPolicy * __this, MethodInfo * method));
DO_APP_FUNC(0x01E16610, String *, ExtendedProtectionPolicy_ToString, (ExtendedProtectionPolicy * __this, MethodInfo * method));
DO_APP_FUNC(0x021BC7E0, void, ExtendedProtectionPolicy_System_Runtime_Serialization_ISerializable_GetObjectData, (ExtendedProtectionPolicy * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x021BC830, bool, ExtendedProtectionPolicyTypeConverter_CanConvertTo, (ExtendedProtectionPolicyTypeConverter * __this, ITypeDescriptorContext * context, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x021BC880, Object *, ExtendedProtectionPolicyTypeConverter_ConvertTo, (ExtendedProtectionPolicyTypeConverter * __this, ITypeDescriptorContext * context, CultureInfo * culture, Object * value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Oid__ctor, (Oid * __this, MethodInfo * method));
DO_APP_FUNC(0x021C0800, void, Oid__ctor_1, (Oid * __this, String * oid, MethodInfo * method));
DO_APP_FUNC(0x021C0840, void, Oid__ctor_2, (Oid * __this, String * oid, OidGroup__Enum group, bool lookupFriendlyName, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, Oid__ctor_3, (Oid * __this, String * value, String * friendlyName, MethodInfo * method));
DO_APP_FUNC(0x021C08C0, void, Oid__ctor_4, (Oid * __this, Oid * oid, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, Oid_get_Value, (Oid * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, Oid_set_Value, (Oid * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x021C0990, String *, Oid_get_FriendlyName, (Oid * __this, MethodInfo * method));
DO_APP_FUNC(0x021C0A10, void, OidCollection__ctor, (OidCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x021C0B60, int32_t, OidCollection_Add, (OidCollection * __this, Oid * oid, MethodInfo * method));
DO_APP_FUNC(0x021C0B90, Oid *, OidCollection_get_Item, (OidCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x016D95F0, int32_t, OidCollection_get_Count, (OidCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x021C0C50, IEnumerator *, OidCollection_System_Collections_IEnumerable_GetEnumerator, (OidCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x021C0DA0, void, OidCollection_System_Collections_ICollection_CopyTo, (OidCollection * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, OidCollection_get_IsSynchronized, (OidCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, Object *, OidCollection_get_SyncRoot, (OidCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x021C1000, void, OidEnumerator__ctor, (OidEnumerator * __this, OidCollection * oids, MethodInfo * method));
DO_APP_FUNC(0x021C1010, Object *, OidEnumerator_System_Collections_IEnumerator_get_Current, (OidEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x021C1040, bool, OidEnumerator_MoveNext, (OidEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x00C2BCA0, void, OidEnumerator_Reset, (OidEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x021BF060, String *, CAPI_CryptFindOIDInfoNameFromKey, (String * key, OidGroup__Enum oidGroup, MethodInfo * method));
DO_APP_FUNC(0x021BFCA0, String *, CAPI_CryptFindOIDInfoKeyFromName, (String * name, OidGroup__Enum oidGroup, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AsnEncodedData__ctor, (AsnEncodedData * __this, MethodInfo * method));
DO_APP_FUNC(0x021BD4B0, void, AsnEncodedData__ctor_1, (AsnEncodedData * __this, String * oid, Byte__Array * rawData, MethodInfo * method));
DO_APP_FUNC(0x021BD630, void, AsnEncodedData__ctor_2, (AsnEncodedData * __this, Oid * oid, Byte__Array * rawData, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Oid *, AsnEncodedData_get_Oid, (AsnEncodedData * __this, MethodInfo * method));
DO_APP_FUNC(0x021BD660, void, AsnEncodedData_set_Oid, (AsnEncodedData * __this, Oid * value, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Byte__Array *, AsnEncodedData_get_RawData, (AsnEncodedData * __this, MethodInfo * method));
DO_APP_FUNC(0x021BD7D0, void, AsnEncodedData_set_RawData, (AsnEncodedData * __this, Byte__Array * value, MethodInfo * method));
DO_APP_FUNC(0x021BD950, void, AsnEncodedData_CopyFrom, (AsnEncodedData * __this, AsnEncodedData * asnEncodedData, MethodInfo * method));
DO_APP_FUNC(0x021BDB70, String *, AsnEncodedData_Format, (AsnEncodedData * __this, bool multiLine, MethodInfo * method));
DO_APP_FUNC(0x021BDC50, String *, AsnEncodedData_ToString, (AsnEncodedData * __this, bool multiLine, MethodInfo * method));
DO_APP_FUNC(0x021BDEE0, String *, AsnEncodedData_Default, (AsnEncodedData * __this, bool multiLine, MethodInfo * method));
DO_APP_FUNC(0x021BE120, String *, AsnEncodedData_BasicConstraintsExtension, (AsnEncodedData * __this, bool multiLine, MethodInfo * method));
DO_APP_FUNC(0x021BE2C0, String *, AsnEncodedData_EnhancedKeyUsageExtension, (AsnEncodedData * __this, bool multiLine, MethodInfo * method));
DO_APP_FUNC(0x021BE460, String *, AsnEncodedData_KeyUsageExtension, (AsnEncodedData * __this, bool multiLine, MethodInfo * method));
DO_APP_FUNC(0x021BE600, String *, AsnEncodedData_SubjectKeyIdentifierExtension, (AsnEncodedData * __this, bool multiLine, MethodInfo * method));
DO_APP_FUNC(0x021BE7A0, String *, AsnEncodedData_SubjectAltName, (AsnEncodedData * __this, bool multiLine, MethodInfo * method));
DO_APP_FUNC(0x021BEBF0, String *, AsnEncodedData_NetscapeCertType, (AsnEncodedData * __this, bool multiLine, MethodInfo * method));
DO_APP_FUNC(0x02580090, String *, X509Utils_FindOidInfo, (uint32_t keyType, String * keyValue, OidGroup__Enum oidGroup, MethodInfo * method));
DO_APP_FUNC(0x025801E0, String *, X509Utils_FindOidInfoWithFallback, (uint32_t key, String * value, OidGroup__Enum group, MethodInfo * method));
DO_APP_FUNC(0x021C10B0, void, PublicKey__ctor, (PublicKey * __this, X509Certificate_2 * certificate, MethodInfo * method));
DO_APP_FUNC(0x002FB930, AsnEncodedData *, PublicKey_get_EncodedKeyValue, (PublicKey * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, AsnEncodedData *, PublicKey_get_EncodedParameters, (PublicKey * __this, MethodInfo * method));
DO_APP_FUNC(0x021C1850, AsymmetricAlgorithm *, PublicKey_get_Key, (PublicKey * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, Oid *, PublicKey_get_Oid, (PublicKey * __this, MethodInfo * method));
DO_APP_FUNC(0x021C1AA0, Byte__Array *, PublicKey_GetUnsignedBigInteger, (Byte__Array * integer, MethodInfo * method));
DO_APP_FUNC(0x021C1B90, DSA *, PublicKey_DecodeDSA, (Byte__Array * rawPublicKey, Byte__Array * rawParameters, MethodInfo * method));
DO_APP_FUNC(0x021C21E0, RSA *, PublicKey_DecodeRSA, (Byte__Array * rawPublicKey, MethodInfo * method));
DO_APP_FUNC(0x021C2650, void, PublicKey__cctor, (MethodInfo * method));
DO_APP_FUNC(0x021C26E0, void, X500DistinguishedName__ctor, (X500DistinguishedName * __this, Byte__Array * encodedDistinguishedName, MethodInfo * method));
DO_APP_FUNC(0x021C28B0, String *, X500DistinguishedName_Decode, (X500DistinguishedName * __this, X500DistinguishedNameFlags__Enum flag, MethodInfo * method));
DO_APP_FUNC(0x021C2B50, String *, X500DistinguishedName_Format, (X500DistinguishedName * __this, bool multiLine, MethodInfo * method));
DO_APP_FUNC(0x021C2BC0, String *, X500DistinguishedName_GetSeparator, (X500DistinguishedNameFlags__Enum flag, MethodInfo * method));
DO_APP_FUNC(0x021C2C60, void, X500DistinguishedName_DecodeRawData, (X500DistinguishedName * __this, MethodInfo * method));
DO_APP_FUNC(0x021C2E20, String *, X500DistinguishedName_Canonize, (String * s, MethodInfo * method));
DO_APP_FUNC(0x021C31A0, bool, X500DistinguishedName_AreEqual, (X500DistinguishedName * name1, X500DistinguishedName * name2, MethodInfo * method));
DO_APP_FUNC(0x021C3470, void, X509BasicConstraintsExtension__ctor, (X509BasicConstraintsExtension * __this, MethodInfo * method));
DO_APP_FUNC(0x021C35D0, void, X509BasicConstraintsExtension__ctor_1, (X509BasicConstraintsExtension * __this, AsnEncodedData * encodedBasicConstraints, bool critical, MethodInfo * method));
DO_APP_FUNC(0x021C3760, void, X509BasicConstraintsExtension__ctor_2, (X509BasicConstraintsExtension * __this, bool certificateAuthority, bool hasPathLengthConstraint, int32_t pathLengthConstraint, bool critical, MethodInfo * method));
DO_APP_FUNC(0x021C3940, bool, X509BasicConstraintsExtension_get_CertificateAuthority, (X509BasicConstraintsExtension * __this, MethodInfo * method));
DO_APP_FUNC(0x021C3A00, bool, X509BasicConstraintsExtension_get_HasPathLengthConstraint, (X509BasicConstraintsExtension * __this, MethodInfo * method));
DO_APP_FUNC(0x021C3AC0, int32_t, X509BasicConstraintsExtension_get_PathLengthConstraint, (X509BasicConstraintsExtension * __this, MethodInfo * method));
DO_APP_FUNC(0x021C3B80, void, X509BasicConstraintsExtension_CopyFrom, (X509BasicConstraintsExtension * __this, AsnEncodedData * asnEncodedData, MethodInfo * method));
DO_APP_FUNC(0x021C3E90, AsnDecodeStatus__Enum, X509BasicConstraintsExtension_Decode, (X509BasicConstraintsExtension * __this, Byte__Array * extension, MethodInfo * method));
DO_APP_FUNC(0x021C4110, Byte__Array *, X509BasicConstraintsExtension_Encode, (X509BasicConstraintsExtension * __this, MethodInfo * method));
DO_APP_FUNC(0x021C44A0, String *, X509BasicConstraintsExtension_ToString, (X509BasicConstraintsExtension * __this, bool multiLine, MethodInfo * method));
DO_APP_FUNC(0x021C47A0, X509Certificate2Impl *, X509Certificate2_get_Impl, (X509Certificate2 * __this, MethodInfo * method));
DO_APP_FUNC(0x021C4880, void, X509Certificate2__ctor, (X509Certificate2 * __this, MethodInfo * method));
DO_APP_FUNC(0x021C4910, void, X509Certificate2__ctor_1, (X509Certificate2 * __this, Byte__Array * rawData, MethodInfo * method));
DO_APP_FUNC(0x021C49D0, void, X509Certificate2__ctor_2, (X509Certificate2 * __this, String * fileName, MethodInfo * method));
DO_APP_FUNC(0x021C4AA0, void, X509Certificate2__ctor_3, (X509Certificate2 * __this, X509Certificate_1 * certificate, MethodInfo * method));
DO_APP_FUNC(0x021C4B50, void, X509Certificate2__ctor_4, (X509Certificate2 * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x021C4CF0, X509ExtensionCollection_2 *, X509Certificate2_get_Extensions, (X509Certificate2 * __this, MethodInfo * method));
DO_APP_FUNC(0x021C4D20, X500DistinguishedName *, X509Certificate2_get_IssuerName, (X509Certificate2 * __this, MethodInfo * method));
DO_APP_FUNC(0x021C4D50, DateTime, X509Certificate2_get_NotAfter, (X509Certificate2 * __this, MethodInfo * method));
DO_APP_FUNC(0x021C4D90, DateTime, X509Certificate2_get_NotBefore, (X509Certificate2 * __this, MethodInfo * method));
DO_APP_FUNC(0x021C4DD0, AsymmetricAlgorithm *, X509Certificate2_get_PrivateKey, (X509Certificate2 * __this, MethodInfo * method));
DO_APP_FUNC(0x021C4E00, void, X509Certificate2_set_PrivateKey, (X509Certificate2 * __this, AsymmetricAlgorithm * value, MethodInfo * method));
DO_APP_FUNC(0x021C4E40, PublicKey *, X509Certificate2_get_PublicKey, (X509Certificate2 * __this, MethodInfo * method));
DO_APP_FUNC(0x021C4E70, String *, X509Certificate2_get_SerialNumber, (X509Certificate2 * __this, MethodInfo * method));
DO_APP_FUNC(0x021C4E90, Oid *, X509Certificate2_get_SignatureAlgorithm, (X509Certificate2 * __this, MethodInfo * method));
DO_APP_FUNC(0x021C4EC0, X500DistinguishedName *, X509Certificate2_get_SubjectName, (X509Certificate2 * __this, MethodInfo * method));
DO_APP_FUNC(0x01EEAF40, String *, X509Certificate2_get_Thumbprint, (X509Certificate2 * __this, MethodInfo * method));
DO_APP_FUNC(0x021C4EF0, int32_t, X509Certificate2_get_Version, (X509Certificate2 * __this, MethodInfo * method));
DO_APP_FUNC(0x021C4F20, String *, X509Certificate2_GetNameInfo, (X509Certificate2 * __this, X509NameType__Enum nameType, bool forIssuer, MethodInfo * method));
DO_APP_FUNC(0x021C4F70, void, X509Certificate2_Import, (X509Certificate2 * __this, Byte__Array * rawData, String * password, X509KeyStorageFlags__Enum keyStorageFlags, MethodInfo * method));
DO_APP_FUNC(0x01E16A00, void, X509Certificate2_Import_1, (X509Certificate2 * __this, String * fileName, String * password, X509KeyStorageFlags__Enum keyStorageFlags, MethodInfo * method));
DO_APP_FUNC(0x021C4FD0, void, X509Certificate2_Reset, (X509Certificate2 * __this, MethodInfo * method));
DO_APP_FUNC(0x021C5080, String *, X509Certificate2_ToString, (X509Certificate2 * __this, MethodInfo * method));
DO_APP_FUNC(0x021C5190, String *, X509Certificate2_ToString_1, (X509Certificate2 * __this, bool verbose, MethodInfo * method));
DO_APP_FUNC(0x021C58F0, void, X509Certificate2_AppendBuffer, (StringBuilder * sb, Byte__Array * buffer, MethodInfo * method));
DO_APP_FUNC(0x021C5A10, bool, X509Certificate2_Verify, (X509Certificate2 * __this, MethodInfo * method));
DO_APP_FUNC(0x021C5A50, X509Certificate_2 *, X509Certificate2_get_MonoCertificate, (X509Certificate2 * __this, MethodInfo * method));
DO_APP_FUNC(0x021C5B90, void, X509Certificate2__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01C9A650, void, X509Certificate2Collection__ctor, (X509Certificate2Collection * __this, MethodInfo * method));
DO_APP_FUNC(0x021C5C40, void, X509Certificate2Collection__ctor_1, (X509Certificate2Collection * __this, X509Certificate2Collection * certificates, MethodInfo * method));
DO_APP_FUNC(0x021C5C70, X509Certificate2 *, X509Certificate2Collection_get_Item, (X509Certificate2Collection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x021C5DC0, int32_t, X509Certificate2Collection_Add, (X509Certificate2Collection * __this, X509Certificate2 * certificate, MethodInfo * method));
DO_APP_FUNC(0x021C5EA0, void, X509Certificate2Collection_AddRange, (X509Certificate2Collection * __this, X509Certificate2Collection * certificates, MethodInfo * method));
DO_APP_FUNC(0x021C5F80, bool, X509Certificate2Collection_Contains, (X509Certificate2Collection * __this, X509Certificate2 * certificate, MethodInfo * method));
DO_APP_FUNC(0x021C61D0, X509Certificate2Collection *, X509Certificate2Collection_Find, (X509Certificate2Collection * __this, X509FindType__Enum findType, Object * findValue, bool validOnly, MethodInfo * method));
DO_APP_FUNC(0x021C7150, X509Certificate2Enumerator *, X509Certificate2Collection_GetEnumerator, (X509Certificate2Collection * __this, MethodInfo * method));
DO_APP_FUNC(0x021C7310, void, X509Certificate2Collection__cctor, (MethodInfo * method));
DO_APP_FUNC(0x021C7410, void, X509Certificate2Enumerator__ctor, (X509Certificate2Enumerator * __this, X509Certificate2Collection * collection, MethodInfo * method));
DO_APP_FUNC(0x021C74B0, X509Certificate2 *, X509Certificate2Enumerator_get_Current, (X509Certificate2Enumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x021C75A0, bool, X509Certificate2Enumerator_MoveNext, (X509Certificate2Enumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x021C7630, Object *, X509Certificate2Enumerator_System_Collections_IEnumerator_get_Current, (X509Certificate2Enumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x021C76C0, bool, X509Certificate2Enumerator_System_Collections_IEnumerator_MoveNext, (X509Certificate2Enumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x021C7750, void, X509Certificate2Enumerator_System_Collections_IEnumerator_Reset, (X509Certificate2Enumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, X509Certificate2Impl__ctor, (X509Certificate2Impl * __this, MethodInfo * method));
DO_APP_FUNC(0x0194FC60, bool, X509Certificate2ImplMono_get_IsValid, (X509Certificate2ImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, X509Certificate2ImplMono__ctor, (X509Certificate2ImplMono * __this, X509Certificate_2 * cert, MethodInfo * method));
DO_APP_FUNC(0x021C77E0, void, X509Certificate2ImplMono__ctor_1, (X509Certificate2ImplMono * __this, X509Certificate2ImplMono * other, MethodInfo * method));
DO_APP_FUNC(0x021C7950, X509CertificateImpl *, X509Certificate2ImplMono_Clone, (X509Certificate2ImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x021C7AB0, String *, X509Certificate2ImplMono_GetIssuerName, (X509Certificate2ImplMono * __this, bool legacyV1Mode, MethodInfo * method));
DO_APP_FUNC(0x021C7BC0, String *, X509Certificate2ImplMono_GetSubjectName, (X509Certificate2ImplMono * __this, bool legacyV1Mode, MethodInfo * method));
DO_APP_FUNC(0x021C7CD0, Byte__Array *, X509Certificate2ImplMono_GetRawCertData, (X509Certificate2ImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x021C7D10, Byte__Array *, X509Certificate2ImplMono_GetCertHash, (X509Certificate2ImplMono * __this, bool lazy, MethodInfo * method));
DO_APP_FUNC(0x021C7D80, DateTime, X509Certificate2ImplMono_GetValidFrom, (X509Certificate2ImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x021C7DC0, DateTime, X509Certificate2ImplMono_GetValidUntil, (X509Certificate2ImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x01E17530, bool, X509Certificate2ImplMono_Equals, (X509Certificate2ImplMono * __this, X509CertificateImpl * other, bool * result, MethodInfo * method));
DO_APP_FUNC(0x021C7E00, Byte__Array *, X509Certificate2ImplMono_GetPublicKey, (X509Certificate2ImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x021C7E40, Byte__Array *, X509Certificate2ImplMono_GetSerialNumber, (X509Certificate2ImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x00C944C0, void, X509Certificate2ImplMono__ctor_2, (X509Certificate2ImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x021C7E80, X509ExtensionCollection_2 *, X509Certificate2ImplMono_get_Extensions, (X509Certificate2ImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x021C8050, X500DistinguishedName *, X509Certificate2ImplMono_get_IssuerName, (X509Certificate2ImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x021C8250, AsymmetricAlgorithm *, X509Certificate2ImplMono_get_PrivateKey, (X509Certificate2ImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x021C8590, void, X509Certificate2ImplMono_set_PrivateKey, (X509Certificate2ImplMono * __this, AsymmetricAlgorithm * value, MethodInfo * method));
DO_APP_FUNC(0x021C8780, PublicKey *, X509Certificate2ImplMono_get_PublicKey, (X509Certificate2ImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x021C89B0, Oid *, X509Certificate2ImplMono_get_SignatureAlgorithm, (X509Certificate2ImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x021C8BB0, X500DistinguishedName *, X509Certificate2ImplMono_get_SubjectName, (X509Certificate2ImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x021C8DB0, int32_t, X509Certificate2ImplMono_get_Version, (X509Certificate2ImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x021C8EA0, String *, X509Certificate2ImplMono_GetNameInfo, (X509Certificate2ImplMono * __this, X509NameType__Enum nameType, bool forIssuer, MethodInfo * method));
DO_APP_FUNC(0x021C9200, ASN1_1 *, X509Certificate2ImplMono_Find, (X509Certificate2ImplMono * __this, Byte__Array * oid, ASN1_1 * dn, MethodInfo * method));
DO_APP_FUNC(0x021C9370, String *, X509Certificate2ImplMono_GetValueAsString, (X509Certificate2ImplMono * __this, ASN1_1 * pair, MethodInfo * method));
DO_APP_FUNC(0x021C96A0, X509Certificate_2 *, X509Certificate2ImplMono_ImportPkcs12, (X509Certificate2ImplMono * __this, Byte__Array * rawData, String * password, MethodInfo * method));
DO_APP_FUNC(0x021CA210, void, X509Certificate2ImplMono_Import, (X509Certificate2ImplMono * __this, Byte__Array * rawData, String * password, X509KeyStorageFlags__Enum keyStorageFlags, MethodInfo * method));
DO_APP_FUNC(0x021CA500, void, X509Certificate2ImplMono_Reset, (X509Certificate2ImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x021CA5F0, String *, X509Certificate2ImplMono_ToString, (X509Certificate2ImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x021CA690, String *, X509Certificate2ImplMono_ToString_1, (X509Certificate2ImplMono * __this, bool verbose, MethodInfo * method));
DO_APP_FUNC(0x021CADC0, void, X509Certificate2ImplMono_AppendBuffer, (StringBuilder * sb, Byte__Array * buffer, MethodInfo * method));
DO_APP_FUNC(0x021CAEE0, bool, X509Certificate2ImplMono_Verify, (X509Certificate2ImplMono * __this, X509Certificate2 * thisCertificate, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, X509CertificateImplCollection *, X509Certificate2ImplMono_get_IntermediateCertificates, (X509Certificate2ImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, X509Certificate_2 *, X509Certificate2ImplMono_get_MonoCertificate, (X509Certificate2ImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, X509Certificate2Impl *, X509Certificate2ImplMono_get_FallbackImpl, (X509Certificate2ImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x021CB130, void, X509Certificate2ImplMono__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01C9A650, void, X509CertificateCollection_1__ctor, (X509CertificateCollection_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x021CB260, void, X509CertificateCollection_1__ctor_1, (X509CertificateCollection_1 * __this, X509Certificate_1__Array * value, MethodInfo * method));
DO_APP_FUNC(0x021CB380, void, X509CertificateCollection_1__ctor_2, (X509CertificateCollection_1 * __this, X509CertificateCollection_1 * value, MethodInfo * method));
DO_APP_FUNC(0x021CB4D0, X509Certificate_1 *, X509CertificateCollection_1_get_Item, (X509CertificateCollection_1 * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x021CB5D0, int32_t, X509CertificateCollection_1_Add, (X509CertificateCollection_1 * __this, X509Certificate_1 * value, MethodInfo * method));
DO_APP_FUNC(0x021CB6B0, void, X509CertificateCollection_1_AddRange, (X509CertificateCollection_1 * __this, X509Certificate_1__Array * value, MethodInfo * method));
DO_APP_FUNC(0x021CB7D0, void, X509CertificateCollection_1_AddRange_1, (X509CertificateCollection_1 * __this, X509CertificateCollection_1 * value, MethodInfo * method));
DO_APP_FUNC(0x021CB910, X509CertificateCollection_X509CertificateEnumerator_1 *, X509CertificateCollection_1_GetEnumerator, (X509CertificateCollection_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x021CBAD0, int32_t, X509CertificateCollection_1_GetHashCode, (X509CertificateCollection_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x021CBB00, void, X509CertificateCollection_X509CertificateEnumerator_1__ctor, (X509CertificateCollection_X509CertificateEnumerator_1 * __this, X509CertificateCollection_1 * mappings, MethodInfo * method));
DO_APP_FUNC(0x021CBBA0, X509Certificate_1 *, X509CertificateCollection_X509CertificateEnumerator_1_get_Current, (X509CertificateCollection_X509CertificateEnumerator_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x021CBC90, Object *, X509CertificateCollection_X509CertificateEnumerator_1_System_Collections_IEnumerator_get_Current, (X509CertificateCollection_X509CertificateEnumerator_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x021CBD20, bool, X509CertificateCollection_X509CertificateEnumerator_1_System_Collections_IEnumerator_MoveNext, (X509CertificateCollection_X509CertificateEnumerator_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x021CBDB0, void, X509CertificateCollection_X509CertificateEnumerator_1_System_Collections_IEnumerator_Reset, (X509CertificateCollection_X509CertificateEnumerator_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x021CBE40, bool, X509CertificateCollection_X509CertificateEnumerator_1_MoveNext, (X509CertificateCollection_X509CertificateEnumerator_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x021CBED0, void, X509CertificateImplCollection__ctor, (X509CertificateImplCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x021CC020, void, X509CertificateImplCollection__ctor_1, (X509CertificateImplCollection * __this, X509CertificateImplCollection * other, MethodInfo * method));
DO_APP_FUNC(0x021CC290, int32_t, X509CertificateImplCollection_get_Count, (X509CertificateImplCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x021CC320, X509CertificateImpl *, X509CertificateImplCollection_get_Item, (X509CertificateImplCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x021CC3D0, void, X509CertificateImplCollection_Add, (X509CertificateImplCollection * __this, X509CertificateImpl * impl, bool takeOwnership, MethodInfo * method));
DO_APP_FUNC(0x021CC4A0, X509CertificateImplCollection *, X509CertificateImplCollection_Clone, (X509CertificateImplCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x021CC5F0, void, X509CertificateImplCollection_Dispose, (X509CertificateImplCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x021CC6A0, void, X509CertificateImplCollection_Dispose_1, (X509CertificateImplCollection * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x021CC830, void, X509CertificateImplCollection_Finalize, (X509CertificateImplCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x021CC8B0, X509ChainImpl *, X509Chain_get_Impl, (X509Chain * __this, MethodInfo * method));
DO_APP_FUNC(0x021CC970, void, X509Chain__ctor, (X509Chain * __this, MethodInfo * method));
DO_APP_FUNC(0x021CCAC0, void, X509Chain__ctor_1, (X509Chain * __this, bool useMachineContext, MethodInfo * method));
DO_APP_FUNC(0x021CCC20, X509ChainPolicy *, X509Chain_get_ChainPolicy, (X509Chain * __this, MethodInfo * method));
DO_APP_FUNC(0x021CCC50, void, X509Chain_set_ChainPolicy, (X509Chain * __this, X509ChainPolicy * value, MethodInfo * method));
DO_APP_FUNC(0x021CCC90, X509ChainStatus__Array *, X509Chain_get_ChainStatus, (X509Chain * __this, MethodInfo * method));
DO_APP_FUNC(0x021CCCC0, bool, X509Chain_Build, (X509Chain * __this, X509Certificate2 * certificate, MethodInfo * method));
DO_APP_FUNC(0x021CCD00, X509Chain *, X509Chain_Create, (MethodInfo * method));
DO_APP_FUNC(0x021CCE40, void, X509Chain_Dispose, (X509Chain * __this, MethodInfo * method));
DO_APP_FUNC(0x021CCEF0, void, X509Chain_Dispose_1, (X509Chain * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x021CCFC0, void, X509Chain_Finalize, (X509Chain * __this, MethodInfo * method));
DO_APP_FUNC(0x021CD040, void, X509ChainElement__ctor, (X509ChainElement * __this, X509Certificate2 * certificate, MethodInfo * method));
DO_APP_FUNC(0x002FA280, X509Certificate2 *, X509ChainElement_get_Certificate, (X509ChainElement * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, X509ChainStatus__Array *, X509ChainElement_get_ChainElementStatus, (X509ChainElement * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB970, X509ChainStatusFlags__Enum, X509ChainElement_get_StatusFlags, (X509ChainElement * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB980, void, X509ChainElement_set_StatusFlags, (X509ChainElement * __this, X509ChainStatusFlags__Enum value, MethodInfo * method));
DO_APP_FUNC(0x021CD0E0, int32_t, X509ChainElement_Count, (X509ChainElement * __this, X509ChainStatusFlags__Enum flags, MethodInfo * method));
DO_APP_FUNC(0x021CD110, void, X509ChainElement_Set, (X509ChainElement * __this, X509ChainStatus__Array * status, int32_t * position, X509ChainStatusFlags__Enum flags, X509ChainStatusFlags__Enum mask, MethodInfo * method));
DO_APP_FUNC(0x021CD1A0, void, X509ChainElement_UncompressFlags, (X509ChainElement * __this, MethodInfo * method));
DO_APP_FUNC(0x021CDC90, void, X509ChainElementCollection__ctor, (X509ChainElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x016D95F0, int32_t, X509ChainElementCollection_get_Count, (X509ChainElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x021CDDE0, bool, X509ChainElementCollection_get_IsSynchronized, (X509ChainElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x021CDE10, X509ChainElement *, X509ChainElementCollection_get_Item, (X509ChainElementCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01BCB830, Object *, X509ChainElementCollection_get_SyncRoot, (X509ChainElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FF5420, void, X509ChainElementCollection_System_Collections_ICollection_CopyTo, (X509ChainElementCollection * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x021CDF10, X509ChainElementEnumerator *, X509ChainElementCollection_GetEnumerator, (X509ChainElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x021CE060, IEnumerator *, X509ChainElementCollection_System_Collections_IEnumerable_GetEnumerator, (X509ChainElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x021CE1B0, void, X509ChainElementCollection_Add, (X509ChainElementCollection * __this, X509Certificate2 * certificate, MethodInfo * method));
DO_APP_FUNC(0x01717420, void, X509ChainElementCollection_Clear, (X509ChainElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x021CE390, bool, X509ChainElementCollection_Contains, (X509ChainElementCollection * __this, X509Certificate2 * certificate, MethodInfo * method));
DO_APP_FUNC(0x021CE540, void, X509ChainElementEnumerator__ctor, (X509ChainElementEnumerator * __this, IEnumerable * enumerable, MethodInfo * method));
DO_APP_FUNC(0x021CE5E0, X509ChainElement *, X509ChainElementEnumerator_get_Current, (X509ChainElementEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x021CE6D0, Object *, X509ChainElementEnumerator_System_Collections_IEnumerator_get_Current, (X509ChainElementEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x021CE760, bool, X509ChainElementEnumerator_MoveNext, (X509ChainElementEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x021CE7F0, void, X509ChainElementEnumerator_Reset, (X509ChainElementEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x021CE880, void, X509ChainImpl_Dispose, (X509ChainImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, X509ChainImpl_Dispose_1, (X509ChainImpl * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x021CE930, void, X509ChainImpl_Finalize, (X509ChainImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, X509ChainImpl__ctor, (X509ChainImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x021CE9B0, void, X509ChainImplMono__ctor, (X509ChainImplMono * __this, bool useMachineContext, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, X509ChainImplMono_get_IsValid, (X509ChainImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, X509ChainPolicy *, X509ChainImplMono_get_ChainPolicy, (X509ChainImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, X509ChainImplMono_set_ChainPolicy, (X509ChainImplMono * __this, X509ChainPolicy * value, MethodInfo * method));
DO_APP_FUNC(0x021CED00, X509ChainStatus__Array *, X509ChainImplMono_get_ChainStatus, (X509ChainImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x021CEDB0, bool, X509ChainImplMono_Build, (X509ChainImplMono * __this, X509Certificate2 * certificate, MethodInfo * method));
DO_APP_FUNC(0x021CF6C0, void, X509ChainImplMono_Reset, (X509ChainImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x021CF7D0, X509Certificate2Collection *, X509ChainImplMono_get_Roots, (X509ChainImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x021CF9A0, X509Certificate2Collection *, X509ChainImplMono_get_CertificateAuthorities, (X509ChainImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x021CFB70, X509Store *, X509ChainImplMono_get_LMRootStore, (X509ChainImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x021CFD00, X509Store *, X509ChainImplMono_get_UserRootStore, (X509ChainImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x021CFE90, X509Store *, X509ChainImplMono_get_LMCAStore, (X509ChainImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x021D0020, X509Store *, X509ChainImplMono_get_UserCAStore, (X509ChainImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x021D01B0, X509Certificate2Collection *, X509ChainImplMono_get_CertificateCollection, (X509ChainImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x021D03A0, X509ChainStatusFlags__Enum, X509ChainImplMono_BuildChainFrom, (X509ChainImplMono * __this, X509Certificate2 * certificate, MethodInfo * method));
DO_APP_FUNC(0x021D0620, X509Certificate2 *, X509ChainImplMono_SelectBestFromCollection, (X509ChainImplMono * __this, X509Certificate2 * child, X509Certificate2Collection * c, MethodInfo * method));
DO_APP_FUNC(0x021D09C0, X509Certificate2 *, X509ChainImplMono_FindParent, (X509ChainImplMono * __this, X509Certificate2 * certificate, MethodInfo * method));
DO_APP_FUNC(0x021D0B90, bool, X509ChainImplMono_IsChainComplete, (X509ChainImplMono * __this, X509Certificate2 * certificate, MethodInfo * method));
DO_APP_FUNC(0x021D0CF0, bool, X509ChainImplMono_IsSelfIssued, (X509ChainImplMono * __this, X509Certificate2 * certificate, MethodInfo * method));
DO_APP_FUNC(0x021D0DD0, void, X509ChainImplMono_ValidateChain, (X509ChainImplMono * __this, X509ChainStatusFlags__Enum flag, MethodInfo * method));
DO_APP_FUNC(0x021D1040, void, X509ChainImplMono_Process, (X509ChainImplMono * __this, int32_t n, MethodInfo * method));
DO_APP_FUNC(0x021D1A40, void, X509ChainImplMono_PrepareForNextCertificate, (X509ChainImplMono * __this, int32_t n, MethodInfo * method));
DO_APP_FUNC(0x021D1E60, void, X509ChainImplMono_WrapUp, (X509ChainImplMono * __this, MethodInfo * method));
DO_APP_FUNC(0x021D1F30, void, X509ChainImplMono_ProcessCertificateExtensions, (X509ChainImplMono * __this, X509ChainElement * element, MethodInfo * method));
DO_APP_FUNC(0x021D2350, bool, X509ChainImplMono_IsSignedWith, (X509ChainImplMono * __this, X509Certificate2 * signed_1, AsymmetricAlgorithm * pubkey, MethodInfo * method));
DO_APP_FUNC(0x021D24D0, String *, X509ChainImplMono_GetSubjectKeyIdentifier, (X509ChainImplMono * __this, X509Certificate2 * certificate, MethodInfo * method));
DO_APP_FUNC(0x021D25E0, String *, X509ChainImplMono_GetAuthorityKeyIdentifier, (X509Certificate2 * certificate, MethodInfo * method));
DO_APP_FUNC(0x021D27D0, String *, X509ChainImplMono_GetAuthorityKeyIdentifier_1, (X509Crl * crl, MethodInfo * method));
DO_APP_FUNC(0x021D28A0, String *, X509ChainImplMono_GetAuthorityKeyIdentifier_2, (X509Extension_2 * ext, MethodInfo * method));
DO_APP_FUNC(0x021D2C90, void, X509ChainImplMono_CheckRevocationOnChain, (X509ChainImplMono * __this, X509ChainStatusFlags__Enum flag, MethodInfo * method));
DO_APP_FUNC(0x021D2F30, X509ChainStatusFlags__Enum, X509ChainImplMono_CheckRevocation, (X509ChainImplMono * __this, X509Certificate2 * certificate, int32_t ca, bool online, MethodInfo * method));
DO_APP_FUNC(0x021D3060, X509ChainStatusFlags__Enum, X509ChainImplMono_CheckRevocation_1, (X509ChainImplMono * __this, X509Certificate2 * certificate, X509Certificate2 * ca_cert, bool online, MethodInfo * method));
DO_APP_FUNC(0x021D34C0, X509Crl *, X509ChainImplMono_CheckCrls, (String * subject, String * ski, X509Store_1 * store, MethodInfo * method));
DO_APP_FUNC(0x021D3770, X509Crl *, X509ChainImplMono_FindCrl, (X509ChainImplMono * __this, X509Certificate2 * caCertificate, MethodInfo * method));
DO_APP_FUNC(0x021D39C0, bool, X509ChainImplMono_ProcessCrlExtensions, (X509ChainImplMono * __this, X509Crl * crl, MethodInfo * method));
DO_APP_FUNC(0x021D3C80, bool, X509ChainImplMono_ProcessCrlEntryExtensions, (X509ChainImplMono * __this, X509Crl_X509CrlEntry * entry, MethodInfo * method));
DO_APP_FUNC(0x021D3F00, void, X509ChainImplMono__cctor, (MethodInfo * method));
DO_APP_FUNC(0x021D3F90, void, X509ChainPolicy__ctor, (X509ChainPolicy * __this, MethodInfo * method));
DO_APP_FUNC(0x021D3FA0, void, X509ChainPolicy__ctor_1, (X509ChainPolicy * __this, X509CertificateCollection_1 * store, MethodInfo * method));
DO_APP_FUNC(0x021D3FB0, X509Certificate2Collection *, X509ChainPolicy_get_ExtraStore, (X509ChainPolicy * __this, MethodInfo * method));
DO_APP_FUNC(0x00654950, X509RevocationFlag__Enum, X509ChainPolicy_get_RevocationFlag, (X509ChainPolicy * __this, MethodInfo * method));
DO_APP_FUNC(0x021D4370, void, X509ChainPolicy_set_RevocationFlag, (X509ChainPolicy * __this, X509RevocationFlag__Enum value, MethodInfo * method));
DO_APP_FUNC(0x00998570, X509RevocationMode__Enum, X509ChainPolicy_get_RevocationMode, (X509ChainPolicy * __this, MethodInfo * method));
DO_APP_FUNC(0x021D4430, void, X509ChainPolicy_set_RevocationMode, (X509ChainPolicy * __this, X509RevocationMode__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FB9C0, void, X509ChainPolicy_set_UrlRetrievalTimeout, (X509ChainPolicy * __this, TimeSpan value, MethodInfo * method));
DO_APP_FUNC(0x004E57A0, X509VerificationFlags__Enum, X509ChainPolicy_get_VerificationFlags, (X509ChainPolicy * __this, MethodInfo * method));
DO_APP_FUNC(0x021D44F0, void, X509ChainPolicy_set_VerificationFlags, (X509ChainPolicy * __this, X509VerificationFlags__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, DateTime, X509ChainPolicy_get_VerificationTime, (X509ChainPolicy * __this, MethodInfo * method));
DO_APP_FUNC(0x021D45B0, void, X509ChainPolicy_Reset, (X509ChainPolicy * __this, MethodInfo * method));
DO_APP_FUNC(0x001DE2E0, void, X509ChainStatus__ctor, (X509ChainStatus__Boxed * __this, X509ChainStatusFlags__Enum flag, MethodInfo * method));
DO_APP_FUNC(0x0010E170, X509ChainStatusFlags__Enum, X509ChainStatus_get_Status, (X509ChainStatus__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0010DB80, void, X509ChainStatus_set_Status, (X509ChainStatus__Boxed * __this, X509ChainStatusFlags__Enum value, MethodInfo * method));
DO_APP_FUNC(0x0010D3A0, void, X509ChainStatus_set_StatusInformation, (X509ChainStatus__Boxed * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x021D4840, String *, X509ChainStatus_GetInformation, (X509ChainStatusFlags__Enum flags, MethodInfo * method));
DO_APP_FUNC(0x021D4A00, void, X509EnhancedKeyUsageExtension__ctor, (X509EnhancedKeyUsageExtension * __this, AsnEncodedData * encodedEnhancedKeyUsages, bool critical, MethodInfo * method));
DO_APP_FUNC(0x021D4B90, void, X509EnhancedKeyUsageExtension_CopyFrom, (X509EnhancedKeyUsageExtension * __this, AsnEncodedData * asnEncodedData, MethodInfo * method));
DO_APP_FUNC(0x021D4EA0, AsnDecodeStatus__Enum, X509EnhancedKeyUsageExtension_Decode, (X509EnhancedKeyUsageExtension * __this, Byte__Array * extension, MethodInfo * method));
DO_APP_FUNC(0x021D52F0, String *, X509EnhancedKeyUsageExtension_ToString, (X509EnhancedKeyUsageExtension * __this, bool multiLine, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, X509Extension_1__ctor, (X509Extension_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x021D56E0, void, X509Extension_1__ctor_1, (X509Extension_1 * __this, String * oid, Byte__Array * rawData, bool critical, MethodInfo * method));
DO_APP_FUNC(0x0052A030, bool, X509Extension_1_get_Critical, (X509Extension_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A040, void, X509Extension_1_set_Critical, (X509Extension_1 * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x021D5710, void, X509Extension_1_CopyFrom, (X509Extension_1 * __this, AsnEncodedData * asnEncodedData, MethodInfo * method));
DO_APP_FUNC(0x021D5860, String *, X509Extension_1_FormatUnkownData, (X509Extension_1 * __this, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x021D5A60, void, X509ExtensionCollection_2__ctor, (X509ExtensionCollection_2 * __this, X509Certificate_2 * cert, MethodInfo * method));
DO_APP_FUNC(0x016D95F0, int32_t, X509ExtensionCollection_2_get_Count, (X509ExtensionCollection_2 * __this, MethodInfo * method));
DO_APP_FUNC(0x021CDDE0, bool, X509ExtensionCollection_2_get_IsSynchronized, (X509ExtensionCollection_2 * __this, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, Object *, X509ExtensionCollection_2_get_SyncRoot, (X509ExtensionCollection_2 * __this, MethodInfo * method));
DO_APP_FUNC(0x021D66D0, X509Extension_1 *, X509ExtensionCollection_2_get_Item, (X509ExtensionCollection_2 * __this, String * oid, MethodInfo * method));
DO_APP_FUNC(0x021D6950, void, X509ExtensionCollection_2_System_Collections_ICollection_CopyTo, (X509ExtensionCollection_2 * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x021D6AB0, X509ExtensionEnumerator *, X509ExtensionCollection_2_GetEnumerator, (X509ExtensionCollection_2 * __this, MethodInfo * method));
DO_APP_FUNC(0x021D6C20, IEnumerator *, X509ExtensionCollection_2_System_Collections_IEnumerable_GetEnumerator, (X509ExtensionCollection_2 * __this, MethodInfo * method));
DO_APP_FUNC(0x021D6D90, void, X509ExtensionCollection_2__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0257B9A0, void, X509ExtensionEnumerator__ctor, (X509ExtensionEnumerator * __this, ArrayList * list, MethodInfo * method));
DO_APP_FUNC(0x0257B9E0, X509Extension_1 *, X509ExtensionEnumerator_get_Current, (X509ExtensionEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0257BAD0, Object *, X509ExtensionEnumerator_System_Collections_IEnumerator_get_Current, (X509ExtensionEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0257BB60, bool, X509ExtensionEnumerator_MoveNext, (X509ExtensionEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0257BBF0, void, X509ExtensionEnumerator_Reset, (X509ExtensionEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0257BC80, int64_t, X509Helper2_GetSubjectNameHash, (X509Certificate_1 * certificate, MethodInfo * method));
DO_APP_FUNC(0x0257BCB0, int64_t, X509Helper2_GetSubjectNameHash_1, (X509CertificateImpl * impl, MethodInfo * method));
DO_APP_FUNC(0x0257BD00, void, X509Helper2_ExportAsPEM, (X509Certificate_1 * certificate, Stream * stream, bool includeHumanReadableForm, MethodInfo * method));
DO_APP_FUNC(0x0257BD40, void, X509Helper2_ExportAsPEM_1, (X509CertificateImpl * impl, Stream * stream, bool includeHumanReadableForm, MethodInfo * method));
DO_APP_FUNC(0x0257BD90, void, X509Helper2_Initialize, (MethodInfo * method));
DO_APP_FUNC(0x0257BF40, void, X509Helper2_ThrowIfContextInvalid, (X509CertificateImpl * impl, MethodInfo * method));
DO_APP_FUNC(0x0257BF50, X509Certificate_1 *, X509Helper2_GetNativeInstance, (X509CertificateImpl * impl, MethodInfo * method));
DO_APP_FUNC(0x0257BFA0, X509Certificate2Impl *, X509Helper2_Import, (Byte__Array * rawData, String * password, X509KeyStorageFlags__Enum keyStorageFlags, bool disableProvider, MethodInfo * method));
DO_APP_FUNC(0x0257C120, X509Certificate2Impl *, X509Helper2_Import_1, (X509Certificate_1 * cert, bool disableProvider, MethodInfo * method));
DO_APP_FUNC(0x021C5A50, X509Certificate_2 *, X509Helper2_GetMonoCertificate, (X509Certificate2 * certificate, MethodInfo * method));
DO_APP_FUNC(0x0257C2A0, X509ChainImpl *, X509Helper2_CreateChainImpl, (bool useMachineContext, MethodInfo * method));
DO_APP_FUNC(0x01E17CF0, bool, X509Helper2_IsValid, (X509ChainImpl * impl, MethodInfo * method));
DO_APP_FUNC(0x0257C3F0, void, X509Helper2_ThrowIfContextInvalid_1, (X509ChainImpl * impl, MethodInfo * method));
DO_APP_FUNC(0x0257C4A0, Exception *, X509Helper2_GetInvalidChainContextException, (MethodInfo * method));
DO_APP_FUNC(0x0257C600, X509CertificateImpl *, X509Helper2_MyNativeHelper_Import, (X509Helper2_MyNativeHelper * __this, X509Certificate_1 * cert, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, X509Helper2_MyNativeHelper__ctor, (X509Helper2_MyNativeHelper * __this, MethodInfo * method));
DO_APP_FUNC(0x0257C610, void, X509KeyUsageExtension__ctor, (X509KeyUsageExtension * __this, MethodInfo * method));
DO_APP_FUNC(0x0257C770, void, X509KeyUsageExtension__ctor_1, (X509KeyUsageExtension * __this, AsnEncodedData * encodedKeyUsage, bool critical, MethodInfo * method));
DO_APP_FUNC(0x0257C900, void, X509KeyUsageExtension__ctor_2, (X509KeyUsageExtension * __this, X509KeyUsageFlags__Enum keyUsages, bool critical, MethodInfo * method));
DO_APP_FUNC(0x0257CAA0, X509KeyUsageFlags__Enum, X509KeyUsageExtension_get_KeyUsages, (X509KeyUsageExtension * __this, MethodInfo * method));
DO_APP_FUNC(0x0257CB60, void, X509KeyUsageExtension_CopyFrom, (X509KeyUsageExtension * __this, AsnEncodedData * asnEncodedData, MethodInfo * method));
DO_APP_FUNC(0x0257CE70, X509KeyUsageFlags__Enum, X509KeyUsageExtension_GetValidFlags, (X509KeyUsageExtension * __this, X509KeyUsageFlags__Enum flags, MethodInfo * method));
DO_APP_FUNC(0x0257CE80, AsnDecodeStatus__Enum, X509KeyUsageExtension_Decode, (X509KeyUsageExtension * __this, Byte__Array * extension, MethodInfo * method));
DO_APP_FUNC(0x0257D0F0, Byte__Array *, X509KeyUsageExtension_Encode, (X509KeyUsageExtension * __this, MethodInfo * method));
DO_APP_FUNC(0x0257D640, String *, X509KeyUsageExtension_ToString, (X509KeyUsageExtension * __this, bool multiLine, MethodInfo * method));
DO_APP_FUNC(0x0257DBC0, void, X509Store__ctor, (X509Store * __this, StoreName__Enum storeName, StoreLocation__Enum storeLocation, MethodInfo * method));
DO_APP_FUNC(0x0257DD10, X509Certificate2Collection *, X509Store_get_Certificates, (X509Store * __this, MethodInfo * method));
DO_APP_FUNC(0x0257DE90, X509Stores *, X509Store_get_Factory, (X509Store * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, X509Store_1 *, X509Store_get_Store, (X509Store * __this, MethodInfo * method));
DO_APP_FUNC(0x0257DEB0, void, X509Store_Close, (X509Store * __this, MethodInfo * method));
DO_APP_FUNC(0x0257DF30, void, X509Store_Dispose, (X509Store * __this, MethodInfo * method));
DO_APP_FUNC(0x0257DF40, void, X509Store_Open, (X509Store * __this, OpenFlags__Enum flags, MethodInfo * method));
DO_APP_FUNC(0x0257E3B0, void, X509SubjectKeyIdentifierExtension__ctor, (X509SubjectKeyIdentifierExtension * __this, MethodInfo * method));
DO_APP_FUNC(0x0257E510, void, X509SubjectKeyIdentifierExtension__ctor_1, (X509SubjectKeyIdentifierExtension * __this, AsnEncodedData * encodedSubjectKeyIdentifier, bool critical, MethodInfo * method));
DO_APP_FUNC(0x0257E6A0, void, X509SubjectKeyIdentifierExtension__ctor_2, (X509SubjectKeyIdentifierExtension * __this, Byte__Array * subjectKeyIdentifier, bool critical, MethodInfo * method));
DO_APP_FUNC(0x0257E960, void, X509SubjectKeyIdentifierExtension__ctor_3, (X509SubjectKeyIdentifierExtension * __this, String * subjectKeyIdentifier, bool critical, MethodInfo * method));
DO_APP_FUNC(0x0257EB70, void, X509SubjectKeyIdentifierExtension__ctor_4, (X509SubjectKeyIdentifierExtension * __this, PublicKey * key, bool critical, MethodInfo * method));
DO_APP_FUNC(0x0257EB90, void, X509SubjectKeyIdentifierExtension__ctor_5, (X509SubjectKeyIdentifierExtension * __this, PublicKey * key, X509SubjectKeyIdentifierHashAlgorithm__Enum algorithm, bool critical, MethodInfo * method));
DO_APP_FUNC(0x0257F380, String *, X509SubjectKeyIdentifierExtension_get_SubjectKeyIdentifier, (X509SubjectKeyIdentifierExtension * __this, MethodInfo * method));
DO_APP_FUNC(0x0257F450, void, X509SubjectKeyIdentifierExtension_CopyFrom, (X509SubjectKeyIdentifierExtension * __this, AsnEncodedData * asnEncodedData, MethodInfo * method));
DO_APP_FUNC(0x0257F760, uint8_t, X509SubjectKeyIdentifierExtension_FromHexChar, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x0257F790, uint8_t, X509SubjectKeyIdentifierExtension_FromHexChars, (uint16_t c1, uint16_t c2, MethodInfo * method));
DO_APP_FUNC(0x0257F810, Byte__Array *, X509SubjectKeyIdentifierExtension_FromHex, (String * hex, MethodInfo * method));
DO_APP_FUNC(0x0257F9B0, AsnDecodeStatus__Enum, X509SubjectKeyIdentifierExtension_Decode, (X509SubjectKeyIdentifierExtension * __this, Byte__Array * extension, MethodInfo * method));
DO_APP_FUNC(0x0257FBF0, Byte__Array *, X509SubjectKeyIdentifierExtension_Encode, (X509SubjectKeyIdentifierExtension * __this, MethodInfo * method));
DO_APP_FUNC(0x0257FD50, String *, X509SubjectKeyIdentifierExtension_ToString, (X509SubjectKeyIdentifierExtension * __this, bool multiLine, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, GeneratedCodeAttribute__ctor, (GeneratedCodeAttribute * __this, String * tool, String * version, MethodInfo * method));
DO_APP_FUNC(0x0200A8A0, ISite *, FileSystemWatcher_get_Site, (FileSystemWatcher * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, FileSystemWatcher_set_Site, (FileSystemWatcher * __this, ISite * value, MethodInfo * method));
DO_APP_FUNC(0x0200A8F0, void, FileSystemWatcher_BeginInit, (FileSystemWatcher * __this, MethodInfo * method));
DO_APP_FUNC(0x0200A940, void, FileSystemWatcher_EndInit, (FileSystemWatcher * __this, MethodInfo * method));
DO_APP_FUNC(0x0200A990, void, FileSystemWatcher_Dispose, (FileSystemWatcher * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x0200A9E0, void, InvalidDataException__ctor, (InvalidDataException * __this, MethodInfo * method));
DO_APP_FUNC(0x0200AA70, void, InvalidDataException__ctor_1, (InvalidDataException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, InvalidDataException__ctor_2, (InvalidDataException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02009FA0, void, GZipStream__ctor, (GZipStream * __this, Stream * stream, CompressionMode__Enum mode, MethodInfo * method));
DO_APP_FUNC(0x02009FC0, void, GZipStream__ctor_1, (GZipStream * __this, Stream * stream, CompressionMode__Enum mode, bool leaveOpen, MethodInfo * method));
DO_APP_FUNC(0x0200A160, bool, GZipStream_get_CanRead, (GZipStream * __this, MethodInfo * method));
DO_APP_FUNC(0x0200A180, bool, GZipStream_get_CanWrite, (GZipStream * __this, MethodInfo * method));
DO_APP_FUNC(0x0200A1A0, bool, GZipStream_get_CanSeek, (GZipStream * __this, MethodInfo * method));
DO_APP_FUNC(0x0200A1C0, int64_t, GZipStream_get_Length, (GZipStream * __this, MethodInfo * method));
DO_APP_FUNC(0x0200A220, int64_t, GZipStream_get_Position, (GZipStream * __this, MethodInfo * method));
DO_APP_FUNC(0x0200A280, void, GZipStream_set_Position, (GZipStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x0200A2E0, void, GZipStream_Flush, (GZipStream * __this, MethodInfo * method));
DO_APP_FUNC(0x0200A310, int64_t, GZipStream_Seek, (GZipStream * __this, int64_t offset, SeekOrigin__Enum origin, MethodInfo * method));
DO_APP_FUNC(0x0200A370, void, GZipStream_SetLength, (GZipStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x0200A3D0, int32_t, GZipStream_ReadByte, (GZipStream * __this, MethodInfo * method));
DO_APP_FUNC(0x0200A400, IAsyncResult *, GZipStream_BeginRead, (GZipStream * __this, Byte__Array * array, int32_t offset, int32_t count, AsyncCallback * asyncCallback, Object * asyncState, MethodInfo * method));
DO_APP_FUNC(0x0200A500, int32_t, GZipStream_EndRead, (GZipStream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x0200A580, int32_t, GZipStream_Read, (GZipStream * __this, Byte__Array * array, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0200A5B0, IAsyncResult *, GZipStream_BeginWrite, (GZipStream * __this, Byte__Array * array, int32_t offset, int32_t count, AsyncCallback * asyncCallback, Object * asyncState, MethodInfo * method));
DO_APP_FUNC(0x0200A6B0, void, GZipStream_EndWrite, (GZipStream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x0200A6C0, void, GZipStream_Write, (GZipStream * __this, Byte__Array * array, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0200A6F0, void, GZipStream_Dispose, (GZipStream * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x0200A790, Task_1_System_Int32_ *, GZipStream_ReadAsync, (GZipStream * __this, Byte__Array * array, int32_t offset, int32_t count, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x0200A7C0, Task *, GZipStream_WriteAsync, (GZipStream * __this, Byte__Array * array, int32_t offset, int32_t count, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x0200A7F0, Task *, GZipStream_FlushAsync, (GZipStream * __this, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x0200A820, void, GZipStream_CheckDeflateStream, (GZipStream * __this, MethodInfo * method));
DO_APP_FUNC(0x0200A840, void, GZipStream_ThrowStreamClosedException, (MethodInfo * method));
DO_APP_FUNC(0x02006900, void, DeflateStream__ctor, (DeflateStream * __this, Stream * stream, CompressionMode__Enum mode, MethodInfo * method));
DO_APP_FUNC(0x02006920, void, DeflateStream__ctor_1, (DeflateStream * __this, Stream * stream, CompressionMode__Enum mode, bool leaveOpen, int32_t windowsBits, MethodInfo * method));
DO_APP_FUNC(0x02006940, void, DeflateStream__ctor_2, (DeflateStream * __this, Stream * compressedStream, CompressionMode__Enum mode, bool leaveOpen, bool gzip, MethodInfo * method));
DO_APP_FUNC(0x02006AC0, void, DeflateStream_Dispose, (DeflateStream * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x02006B30, int32_t, DeflateStream_ReadInternal, (DeflateStream * __this, Byte__Array * array, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02006C70, int32_t, DeflateStream_Read, (DeflateStream * __this, Byte__Array * array, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02006F90, void, DeflateStream_WriteInternal, (DeflateStream * __this, Byte__Array * array, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x020070C0, void, DeflateStream_Write, (DeflateStream * __this, Byte__Array * array, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x020073E0, void, DeflateStream_Flush, (DeflateStream * __this, MethodInfo * method));
DO_APP_FUNC(0x020075C0, IAsyncResult *, DeflateStream_BeginRead, (DeflateStream * __this, Byte__Array * array, int32_t offset, int32_t count, AsyncCallback * asyncCallback, Object * asyncState, MethodInfo * method));
DO_APP_FUNC(0x02007990, IAsyncResult *, DeflateStream_BeginWrite, (DeflateStream * __this, Byte__Array * array, int32_t offset, int32_t count, AsyncCallback * asyncCallback, Object * asyncState, MethodInfo * method));
DO_APP_FUNC(0x02007D60, int32_t, DeflateStream_EndRead, (DeflateStream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x02007F30, void, DeflateStream_EndWrite, (DeflateStream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x020080E0, int64_t, DeflateStream_Seek, (DeflateStream * __this, int64_t offset, SeekOrigin__Enum origin, MethodInfo * method));
DO_APP_FUNC(0x02008130, void, DeflateStream_SetLength, (DeflateStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x02008180, bool, DeflateStream_get_CanRead, (DeflateStream * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, DeflateStream_get_CanSeek, (DeflateStream * __this, MethodInfo * method));
DO_APP_FUNC(0x020081C0, bool, DeflateStream_get_CanWrite, (DeflateStream * __this, MethodInfo * method));
DO_APP_FUNC(0x02008200, int64_t, DeflateStream_get_Length, (DeflateStream * __this, MethodInfo * method));
DO_APP_FUNC(0x02008250, int64_t, DeflateStream_get_Position, (DeflateStream * __this, MethodInfo * method));
DO_APP_FUNC(0x020082A0, void, DeflateStream_set_Position, (DeflateStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, DeflateStream_ReadMethod__ctor, (DeflateStream_ReadMethod * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01D2E1F0, int32_t, DeflateStream_ReadMethod_Invoke, (DeflateStream_ReadMethod * __this, Byte__Array * array, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x020082F0, IAsyncResult *, DeflateStream_ReadMethod_BeginInvoke, (DeflateStream_ReadMethod * __this, Byte__Array * array, int32_t offset, int32_t count, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00F550D0, int32_t, DeflateStream_ReadMethod_EndInvoke, (DeflateStream_ReadMethod * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, DeflateStream_WriteMethod__ctor, (DeflateStream_WriteMethod * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01D2E820, void, DeflateStream_WriteMethod_Invoke, (DeflateStream_WriteMethod * __this, Byte__Array * array, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x020083D0, IAsyncResult *, DeflateStream_WriteMethod_BeginInvoke, (DeflateStream_WriteMethod * __this, Byte__Array * array, int32_t offset, int32_t count, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, DeflateStream_WriteMethod_EndInvoke, (DeflateStream_WriteMethod * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DeflateStreamNative__ctor, (DeflateStreamNative * __this, MethodInfo * method));
DO_APP_FUNC(0x020084B0, DeflateStreamNative *, DeflateStreamNative_Create, (Stream * compressedStream, CompressionMode__Enum mode, bool gzip, MethodInfo * method));
DO_APP_FUNC(0x02008810, void, DeflateStreamNative_Finalize, (DeflateStreamNative * __this, MethodInfo * method));
DO_APP_FUNC(0x020088F0, void, DeflateStreamNative_Dispose, (DeflateStreamNative * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x020089E0, void, DeflateStreamNative_Flush, (DeflateStreamNative * __this, MethodInfo * method));
DO_APP_FUNC(0x02008AE0, int32_t, DeflateStreamNative_ReadZStream, (DeflateStreamNative * __this, void * buffer, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x02008BE0, void, DeflateStreamNative_WriteZStream, (DeflateStreamNative * __this, void * buffer, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x02008CE0, int32_t, DeflateStreamNative_UnmanagedRead, (void * buffer, int32_t length, void * data, MethodInfo * method));
DO_APP_FUNC(0x02008F00, int32_t, DeflateStreamNative_UnmanagedRead_1, (DeflateStreamNative * __this, void * buffer, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x02009070, int32_t, DeflateStreamNative_UnmanagedWrite, (void * buffer, int32_t length, void * data, MethodInfo * method));
DO_APP_FUNC(0x020092B0, int32_t, DeflateStreamNative_UnmanagedWrite_1, (DeflateStreamNative * __this, void * buffer, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x02009430, void, DeflateStreamNative_CheckResult, (int32_t result, String * where, MethodInfo * method));
DO_APP_FUNC(0x02009590, DeflateStreamNative_SafeDeflateStreamHandle *, DeflateStreamNative_CreateZStream, (CompressionMode__Enum compress, bool gzip, DeflateStreamNative_UnmanagedReadOrWrite * feeder, void * data, MethodInfo * method));
DO_APP_FUNC(0x020097D0, int32_t, DeflateStreamNative_CloseZStream, (void * stream, MethodInfo * method));
DO_APP_FUNC(0x020097E0, int32_t, DeflateStreamNative_Flush_1, (DeflateStreamNative_SafeDeflateStreamHandle * stream, MethodInfo * method));
DO_APP_FUNC(0x02009880, int32_t, DeflateStreamNative_ReadZStream_1, (DeflateStreamNative_SafeDeflateStreamHandle * stream, void * buffer, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x02009900, int32_t, DeflateStreamNative_WriteZStream_1, (DeflateStreamNative_SafeDeflateStreamHandle * stream, void * buffer, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, DeflateStreamNative_UnmanagedReadOrWrite__ctor, (DeflateStreamNative_UnmanagedReadOrWrite * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x02009B10, int32_t, DeflateStreamNative_UnmanagedReadOrWrite_Invoke, (DeflateStreamNative_UnmanagedReadOrWrite * __this, void * buffer, int32_t length, void * data, MethodInfo * method));
DO_APP_FUNC(0x02009EB0, IAsyncResult *, DeflateStreamNative_UnmanagedReadOrWrite_BeginInvoke, (DeflateStreamNative_UnmanagedReadOrWrite * __this, void * buffer, int32_t length, void * data, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00F550D0, int32_t, DeflateStreamNative_UnmanagedReadOrWrite_EndInvoke, (DeflateStreamNative_UnmanagedReadOrWrite * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x02009980, bool, DeflateStreamNative_SafeDeflateStreamHandle_get_IsInvalid, (DeflateStreamNative_SafeDeflateStreamHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x02009A00, void, DeflateStreamNative_SafeDeflateStreamHandle__ctor, (DeflateStreamNative_SafeDeflateStreamHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x02009AF0, bool, DeflateStreamNative_SafeDeflateStreamHandle_ReleaseHandle, (DeflateStreamNative_SafeDeflateStreamHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x01E58EB0, String *, HttpStatusDescription_Get, (HttpStatusCode__Enum code, MethodInfo * method));
DO_APP_FUNC(0x01E58EC0, String *, HttpStatusDescription_Get_1, (int32_t code, MethodInfo * method));
DO_APP_FUNC(0x01E71D10, void, NetEventSource_Enter, (Object * thisOrContextObject, FormattableString * formattableString, String * memberName, MethodInfo * method));
DO_APP_FUNC(0x01E71E70, void, NetEventSource_Enter_1, (Object * thisOrContextObject, Object * arg0, String * memberName, MethodInfo * method));
DO_APP_FUNC(0x01E72000, void, NetEventSource_Enter_2, (Object * thisOrContextObject, Object * arg0, Object * arg1, String * memberName, MethodInfo * method));
DO_APP_FUNC(0x01E721A0, void, NetEventSource_Enter_3, (Object * thisOrContextObject, Object * arg0, Object * arg1, Object * arg2, String * memberName, MethodInfo * method));
DO_APP_FUNC(0x01E72350, void, NetEventSource_Enter_4, (NetEventSource * __this, String * thisOrContextObject, String * memberName, String * parameters, MethodInfo * method));
DO_APP_FUNC(0x01E72430, void, NetEventSource_Exit, (Object * thisOrContextObject, FormattableString * formattableString, String * memberName, MethodInfo * method));
DO_APP_FUNC(0x01E72590, void, NetEventSource_Exit_1, (Object * thisOrContextObject, Object * arg0, String * memberName, MethodInfo * method));
DO_APP_FUNC(0x01E726E0, void, NetEventSource_Exit_2, (Object * thisOrContextObject, Object * arg0, Object * arg1, String * memberName, MethodInfo * method));
DO_APP_FUNC(0x01E72880, void, NetEventSource_Exit_3, (NetEventSource * __this, String * thisOrContextObject, String * memberName, String * result, MethodInfo * method));
DO_APP_FUNC(0x01E72960, void, NetEventSource_Info, (Object * thisOrContextObject, FormattableString * formattableString, String * memberName, MethodInfo * method));
DO_APP_FUNC(0x01E72AC0, void, NetEventSource_Info_1, (Object * thisOrContextObject, Object * message, String * memberName, MethodInfo * method));
DO_APP_FUNC(0x01E72C10, void, NetEventSource_Info_2, (NetEventSource * __this, String * thisOrContextObject, String * memberName, String * message, MethodInfo * method));
DO_APP_FUNC(0x01E72CF0, void, NetEventSource_Error, (Object * thisOrContextObject, FormattableString * formattableString, String * memberName, MethodInfo * method));
DO_APP_FUNC(0x01E72E20, void, NetEventSource_Error_1, (Object * thisOrContextObject, Object * message, String * memberName, MethodInfo * method));
DO_APP_FUNC(0x01E72F70, void, NetEventSource_ErrorMessage, (NetEventSource * __this, String * thisOrContextObject, String * memberName, String * message, MethodInfo * method));
DO_APP_FUNC(0x01E73050, void, NetEventSource_Fail, (Object * thisOrContextObject, FormattableString * formattableString, String * memberName, MethodInfo * method));
DO_APP_FUNC(0x01E73180, void, NetEventSource_Fail_1, (Object * thisOrContextObject, Object * message, String * memberName, MethodInfo * method));
DO_APP_FUNC(0x01E732D0, void, NetEventSource_CriticalFailure, (NetEventSource * __this, String * thisOrContextObject, String * memberName, String * message, MethodInfo * method));
DO_APP_FUNC(0x01E733B0, void, NetEventSource_DumpBuffer, (Object * thisOrContextObject, Byte__Array * buffer, String * memberName, MethodInfo * method));
DO_APP_FUNC(0x01E73490, void, NetEventSource_DumpBuffer_1, (Object * thisOrContextObject, Byte__Array * buffer, int32_t offset, int32_t count, String * memberName, MethodInfo * method));
DO_APP_FUNC(0x01E73940, void, NetEventSource_DumpBuffer_2, (Object * thisOrContextObject, void * bufferPtr, int32_t count, String * memberName, MethodInfo * method));
DO_APP_FUNC(0x01E73B80, void, NetEventSource_DumpBuffer_3, (NetEventSource * __this, String * thisOrContextObject, String * memberName, Byte__Array * buffer, MethodInfo * method));
DO_APP_FUNC(0x01E73C60, void, NetEventSource_Associate, (Object * first, Object * second, String * memberName, MethodInfo * method));
DO_APP_FUNC(0x01E73DB0, void, NetEventSource_Associate_1, (Object * thisOrContextObject, Object * first, Object * second, String * memberName, MethodInfo * method));
DO_APP_FUNC(0x01E73F00, void, NetEventSource_Associate_2, (NetEventSource * __this, String * thisOrContextObject, String * memberName, String * first, String * second, MethodInfo * method));
DO_APP_FUNC(0x01E73FE0, void, NetEventSource_DebugValidateArg, (Object * arg, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, NetEventSource_DebugValidateArg_1, (FormattableString * arg, MethodInfo * method));
DO_APP_FUNC(0x01E74070, bool, NetEventSource_get_IsEnabled, (MethodInfo * method));
DO_APP_FUNC(0x01E74120, String *, NetEventSource_IdOf, (Object * value, MethodInfo * method));
DO_APP_FUNC(0x01E74250, int32_t, NetEventSource_GetHashCode, (Object * value, MethodInfo * method));
DO_APP_FUNC(0x01E74270, Object *, NetEventSource_Format, (Object * value, MethodInfo * method));
DO_APP_FUNC(0x01E745F0, String *, NetEventSource_Format_1, (FormattableString * s, MethodInfo * method));
DO_APP_FUNC(0x01E749E0, void, NetEventSource_WriteEvent, (NetEventSource * __this, int32_t eventId, String * arg1, String * arg2, String * arg3, String * arg4, MethodInfo * method));
DO_APP_FUNC(0x01E74BA0, void, NetEventSource_WriteEvent_1, (NetEventSource * __this, int32_t eventId, String * arg1, String * arg2, Byte__Array * arg3, MethodInfo * method));
DO_APP_FUNC(0x01E74DE0, void, NetEventSource_WriteEvent_2, (NetEventSource * __this, int32_t eventId, String * arg1, int32_t arg2, int32_t arg3, int32_t arg4, MethodInfo * method));
DO_APP_FUNC(0x01E74F20, void, NetEventSource_WriteEvent_3, (NetEventSource * __this, int32_t eventId, String * arg1, int32_t arg2, String * arg3, MethodInfo * method));
DO_APP_FUNC(0x01E75070, void, NetEventSource_WriteEvent_4, (NetEventSource * __this, int32_t eventId, String * arg1, String * arg2, int32_t arg3, MethodInfo * method));
DO_APP_FUNC(0x01E751D0, void, NetEventSource_WriteEvent_5, (NetEventSource * __this, int32_t eventId, String * arg1, String * arg2, String * arg3, int32_t arg4, MethodInfo * method));
DO_APP_FUNC(0x01E75370, void, NetEventSource__ctor, (NetEventSource * __this, MethodInfo * method));
DO_APP_FUNC(0x01E75410, void, NetEventSource__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, NetEventSource_Keywords__ctor, (NetEventSource_Keywords * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD3210, void, SecurityProtocol_ThrowOnNotAllowed, (SslProtocols__Enum protocols, bool allowNone, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, AuthenticationSchemeSelector__ctor, (AuthenticationSchemeSelector * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x020105B0, AuthenticationSchemes__Enum, AuthenticationSchemeSelector_Invoke, (AuthenticationSchemeSelector * __this, HttpListenerRequest * httpRequest, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, AuthenticationSchemeSelector_BeginInvoke, (AuthenticationSchemeSelector * __this, HttpListenerRequest * httpRequest, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00F550D0, AuthenticationSchemes__Enum, AuthenticationSchemeSelector_EndInvoke, (AuthenticationSchemeSelector * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x02010AA0, void, Authorization__ctor, (Authorization * __this, String * token, MethodInfo * method));
DO_APP_FUNC(0x02010B60, void, Authorization__ctor_1, (Authorization * __this, String * token, bool finished, MethodInfo * method));
DO_APP_FUNC(0x02010C30, void, Authorization__ctor_2, (Authorization * __this, String * token, bool finished, String * connectionGroupId, MethodInfo * method));
DO_APP_FUNC(0x02010D20, void, Authorization__ctor_3, (Authorization * __this, String * token, bool finished, String * connectionGroupId, bool mutualAuth, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, Authorization_get_Message, (Authorization * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, Authorization_get_ConnectionGroupId, (Authorization * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A280, bool, Authorization_get_Complete, (Authorization * __this, MethodInfo * method));
DO_APP_FUNC(0x00533150, void, Authorization_SetComplete, (Authorization * __this, bool complete, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String__Array *, Authorization_get_ProtectionRealm, (Authorization * __this, MethodInfo * method));
DO_APP_FUNC(0x02010E10, void, Authorization_set_ProtectionRealm, (Authorization * __this, String__Array * value, MethodInfo * method));
DO_APP_FUNC(0x02010EE0, bool, Authorization_get_MutuallyAuthenticated, (Authorization * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A060, void, Authorization_set_MutuallyAuthenticated, (Authorization * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01EA98F0, bool, CredentialCache_get_IsDefaultInCache, (CredentialCache * __this, MethodInfo * method));
DO_APP_FUNC(0x01EA9900, void, CredentialCache__ctor, (CredentialCache * __this, MethodInfo * method));
DO_APP_FUNC(0x01EA9B30, void, CredentialCache_Add, (CredentialCache * __this, Uri * uriPrefix, String * authType, NetworkCredential * cred, MethodInfo * method));
DO_APP_FUNC(0x01EA9E30, void, CredentialCache_Add_1, (CredentialCache * __this, String * host, int32_t port, String * authenticationType, NetworkCredential * credential, MethodInfo * method));
DO_APP_FUNC(0x01EAA1B0, void, CredentialCache_Remove, (CredentialCache * __this, Uri * uriPrefix, String * authType, MethodInfo * method));
DO_APP_FUNC(0x01EAA3E0, void, CredentialCache_Remove_1, (CredentialCache * __this, String * host, int32_t port, String * authenticationType, MethodInfo * method));
DO_APP_FUNC(0x01EAA5C0, NetworkCredential *, CredentialCache_GetCredential, (CredentialCache * __this, Uri * uriPrefix, String * authType, MethodInfo * method));
DO_APP_FUNC(0x01EAA8E0, NetworkCredential *, CredentialCache_GetCredential_1, (CredentialCache * __this, String * host, int32_t port, String * authenticationType, MethodInfo * method));
DO_APP_FUNC(0x01EAAC70, IEnumerator *, CredentialCache_GetEnumerator, (CredentialCache * __this, MethodInfo * method));
DO_APP_FUNC(0x01EAADF0, ICredentials *, CredentialCache_get_DefaultCredentials, (MethodInfo * method));
DO_APP_FUNC(0x01EAAE90, NetworkCredential *, CredentialCache_get_DefaultNetworkCredentials, (MethodInfo * method));
DO_APP_FUNC(0x01EAAF30, void, CredentialCache_CredentialEnumerator__ctor, (CredentialCache_CredentialEnumerator * __this, CredentialCache * cache, Hashtable * table, Hashtable * hostTable, int32_t version, MethodInfo * method));
DO_APP_FUNC(0x01EAB0C0, Object *, CredentialCache_CredentialEnumerator_System_Collections_IEnumerator_get_Current, (CredentialCache_CredentialEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01EAB220, bool, CredentialCache_CredentialEnumerator_System_Collections_IEnumerator_MoveNext, (CredentialCache_CredentialEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x00443280, void, CredentialCache_CredentialEnumerator_System_Collections_IEnumerator_Reset, (CredentialCache_CredentialEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x020A5D30, void, SystemNetworkCredential__ctor, (SystemNetworkCredential * __this, MethodInfo * method));
DO_APP_FUNC(0x020A5DF0, void, SystemNetworkCredential__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01EAB330, void, CredentialHostKey__ctor, (CredentialHostKey * __this, String * host, int32_t port, String * authenticationType, MethodInfo * method));
DO_APP_FUNC(0x01EAB340, bool, CredentialHostKey_Match, (CredentialHostKey * __this, String * host, int32_t port, String * authenticationType, MethodInfo * method));
DO_APP_FUNC(0x01EAB570, int32_t, CredentialHostKey_GetHashCode, (CredentialHostKey * __this, MethodInfo * method));
DO_APP_FUNC(0x01EAB610, bool, CredentialHostKey_Equals, (CredentialHostKey * __this, Object * comparand, MethodInfo * method));
DO_APP_FUNC(0x01EAB8F0, String *, CredentialHostKey_ToString, (CredentialHostKey * __this, MethodInfo * method));
DO_APP_FUNC(0x01EABCD0, void, CredentialKey__ctor, (CredentialKey * __this, Uri * uriPrefix, String * authenticationType, MethodInfo * method));
DO_APP_FUNC(0x01EABD30, bool, CredentialKey_Match, (CredentialKey * __this, Uri * uri, String * authenticationType, MethodInfo * method));
DO_APP_FUNC(0x01EABEF0, bool, CredentialKey_IsPrefix, (CredentialKey * __this, Uri * uri, Uri * prefixUri, MethodInfo * method));
DO_APP_FUNC(0x01EAC0C0, int32_t, CredentialKey_GetHashCode, (CredentialKey * __this, MethodInfo * method));
DO_APP_FUNC(0x01EAC150, bool, CredentialKey_Equals, (CredentialKey * __this, Object * comparand, MethodInfo * method));
DO_APP_FUNC(0x01EAC350, String *, CredentialKey_ToString, (CredentialKey * __this, MethodInfo * method));
DO_APP_FUNC(0x01EB37F0, void, DnsEndPoint__ctor, (DnsEndPoint * __this, String * host, int32_t port, MethodInfo * method));
DO_APP_FUNC(0x01EB3810, void, DnsEndPoint__ctor_1, (DnsEndPoint * __this, String * host, int32_t port, AddressFamily__Enum addressFamily, MethodInfo * method));
DO_APP_FUNC(0x01EB3A10, bool, DnsEndPoint_Equals, (DnsEndPoint * __this, Object * comparand, MethodInfo * method));
DO_APP_FUNC(0x01EB3B40, int32_t, DnsEndPoint_GetHashCode, (DnsEndPoint * __this, MethodInfo * method));
DO_APP_FUNC(0x01EB3C20, String *, DnsEndPoint_ToString, (DnsEndPoint * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, DnsEndPoint_get_Host, (DnsEndPoint * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A010, AddressFamily__Enum, DnsEndPoint_get_AddressFamily, (DnsEndPoint * __this, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, DnsEndPoint_get_Port, (DnsEndPoint * __this, MethodInfo * method));
DO_APP_FUNC(0x01EB4230, AddressFamily__Enum, EndPoint_get_AddressFamily, (EndPoint * __this, MethodInfo * method));
DO_APP_FUNC(0x01EB4270, SocketAddress *, EndPoint_Serialize, (EndPoint * __this, MethodInfo * method));
DO_APP_FUNC(0x01EB42B0, EndPoint *, EndPoint_Create, (EndPoint * __this, SocketAddress * socketAddress, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, EndPoint__ctor, (EndPoint * __this, MethodInfo * method));
DO_APP_FUNC(0x01D389E0, IWebProxy *, GlobalProxySelection_get_Select, (MethodInfo * method));
DO_APP_FUNC(0x01D38C60, void, GlobalProxySelection_set_Select, (IWebProxy * value, MethodInfo * method));
DO_APP_FUNC(0x01D38D80, IWebProxy *, GlobalProxySelection_GetEmptyWebProxy, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, GlobalProxySelection__ctor, (GlobalProxySelection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D45800, void, HttpListenerException__ctor, (HttpListenerException * __this, MethodInfo * method));
DO_APP_FUNC(0x01D45900, void, HttpListenerException__ctor_1, (HttpListenerException * __this, int32_t errorCode, MethodInfo * method));
DO_APP_FUNC(0x01D459B0, void, HttpListenerException__ctor_2, (HttpListenerException * __this, int32_t errorCode, String * message, MethodInfo * method));
DO_APP_FUNC(0x01D45A70, void, HttpListenerException__ctor_3, (HttpListenerException * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x00989BF0, int32_t, HttpListenerException_get_ErrorCode, (HttpListenerException * __this, MethodInfo * method));
DO_APP_FUNC(0x01D4A6A0, void, HttpListenerRequestUriBuilder__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01D4A9D0, void, HttpListenerRequestUriBuilder__ctor, (HttpListenerRequestUriBuilder * __this, String * rawUri, String * cookedUriScheme, String * cookedUriHost, String * cookedUriPath, String * cookedUriQuery, MethodInfo * method));
DO_APP_FUNC(0x01D4AAC0, Uri *, HttpListenerRequestUriBuilder_GetRequestUri, (String * rawUri, String * cookedUriScheme, String * cookedUriHost, String * cookedUriPath, String * cookedUriQuery, MethodInfo * method));
DO_APP_FUNC(0x01D4ADD0, Uri *, HttpListenerRequestUriBuilder_Build, (HttpListenerRequestUriBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x01D4AF10, void, HttpListenerRequestUriBuilder_BuildRequestUriUsingCookedPath, (HttpListenerRequestUriBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x01D4B330, void, HttpListenerRequestUriBuilder_BuildRequestUriUsingRawPath, (HttpListenerRequestUriBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x01D4B890, Encoding *, HttpListenerRequestUriBuilder_GetEncoding, (HttpListenerRequestUriBuilder_EncodingType__Enum type, MethodInfo * method));
DO_APP_FUNC(0x01D4B970, HttpListenerRequestUriBuilder_ParsingResult__Enum, HttpListenerRequestUriBuilder_BuildRequestUriUsingRawPath_1, (HttpListenerRequestUriBuilder * __this, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x01D4BE80, HttpListenerRequestUriBuilder_ParsingResult__Enum, HttpListenerRequestUriBuilder_ParseRawPath, (HttpListenerRequestUriBuilder * __this, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x01D4C030, bool, HttpListenerRequestUriBuilder_AppendUnicodeCodePointValuePercentEncoded, (HttpListenerRequestUriBuilder * __this, String * codePoint, MethodInfo * method));
DO_APP_FUNC(0x01D4C370, bool, HttpListenerRequestUriBuilder_AddPercentEncodedOctetToRawOctetsList, (HttpListenerRequestUriBuilder * __this, Encoding * encoding, String * escapedCharacter, MethodInfo * method));
DO_APP_FUNC(0x01D4C570, bool, HttpListenerRequestUriBuilder_EmptyDecodeAndAppendRawOctetsList, (HttpListenerRequestUriBuilder * __this, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x01D4C9F0, void, HttpListenerRequestUriBuilder_AppendOctetsPercentEncoded, (StringBuilder * target, IEnumerable_1_System_Byte_ * octets, MethodInfo * method));
DO_APP_FUNC(0x01D4CBE0, String *, HttpListenerRequestUriBuilder_GetOctetsAsString, (IEnumerable_1_System_Byte_ * octets, MethodInfo * method));
DO_APP_FUNC(0x01D4CEF0, String *, HttpListenerRequestUriBuilder_GetPath, (String * uriString, MethodInfo * method));
DO_APP_FUNC(0x01D4D220, String *, HttpListenerRequestUriBuilder_AddSlashToAsteriskOnlyPath, (String * path, MethodInfo * method));
DO_APP_FUNC(0x01D4D2D0, void, HttpListenerRequestUriBuilder_LogWarning, (HttpListenerRequestUriBuilder * __this, String * methodName, String * message, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, HttpVersion__ctor, (HttpVersion * __this, MethodInfo * method));
DO_APP_FUNC(0x01E598C0, void, HttpVersion__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01E66070, void, IPAddress__ctor, (IPAddress * __this, int64_t newAddress, MethodInfo * method));
DO_APP_FUNC(0x01E66150, void, IPAddress__ctor_1, (IPAddress * __this, Byte__Array * address, int64_t scopeid, MethodInfo * method));
DO_APP_FUNC(0x01E66380, void, IPAddress__ctor_2, (IPAddress * __this, UInt16__Array * address, uint32_t scopeid, MethodInfo * method));
DO_APP_FUNC(0x01E66430, void, IPAddress__ctor_3, (IPAddress * __this, Byte__Array * address, MethodInfo * method));
DO_APP_FUNC(0x01E66680, void, IPAddress__ctor_4, (IPAddress * __this, int32_t newAddress, MethodInfo * method));
DO_APP_FUNC(0x01E66720, bool, IPAddress_TryParse, (String * ipString, IPAddress * * address, MethodInfo * method));
DO_APP_FUNC(0x01E667E0, IPAddress *, IPAddress_Parse, (String * ipString, MethodInfo * method));
DO_APP_FUNC(0x01E66880, IPAddress *, IPAddress_InternalParse, (String * ipString, bool tryParse, MethodInfo * method));
DO_APP_FUNC(0x01E66E60, int64_t, IPAddress_get_Address, (IPAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x01E66F10, void, IPAddress_set_Address, (IPAddress * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01E66FE0, Byte__Array *, IPAddress_GetAddressBytes, (IPAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, AddressFamily__Enum, IPAddress_get_AddressFamily, (IPAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x01E67200, int64_t, IPAddress_get_ScopeId, (IPAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x01E672B0, void, IPAddress_set_ScopeId, (IPAddress * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01E673B0, String *, IPAddress_ToString, (IPAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x01E675D0, int64_t, IPAddress_HostToNetworkOrder, (int64_t host, MethodInfo * method));
DO_APP_FUNC(0x01E67690, int32_t, IPAddress_HostToNetworkOrder_1, (int32_t host, MethodInfo * method));
DO_APP_FUNC(0x01E67760, int16_t, IPAddress_HostToNetworkOrder_2, (int16_t host, MethodInfo * method));
DO_APP_FUNC(0x01E67770, int64_t, IPAddress_NetworkToHostOrder, (int64_t network, MethodInfo * method));
DO_APP_FUNC(0x01E678B0, int32_t, IPAddress_NetworkToHostOrder_1, (int32_t network, MethodInfo * method));
DO_APP_FUNC(0x01E67950, int16_t, IPAddress_NetworkToHostOrder_2, (int16_t network, MethodInfo * method));
DO_APP_FUNC(0x01E67A00, bool, IPAddress_IsLoopback, (IPAddress * address, MethodInfo * method));
DO_APP_FUNC(0x01E67B50, bool, IPAddress_get_IsBroadcast, (IPAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x01E67C20, bool, IPAddress_get_IsIPv6Multicast, (IPAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x01E67C70, bool, IPAddress_get_IsIPv6LinkLocal, (IPAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x01E67CD0, bool, IPAddress_get_IsIPv6SiteLocal, (IPAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x01E67D30, bool, IPAddress_get_IsIPv6Teredo, (IPAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x01E67DB0, bool, IPAddress_get_IsIPv4MappedToIPv6, (IPAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x01E67E40, bool, IPAddress_Equals, (IPAddress * __this, Object * comparandObj, bool compareScopeId, MethodInfo * method));
DO_APP_FUNC(0x01E67FB0, bool, IPAddress_Equals_1, (IPAddress * __this, Object * comparand, MethodInfo * method));
DO_APP_FUNC(0x01E67FC0, int32_t, IPAddress_GetHashCode, (IPAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x01E680C0, IPAddress *, IPAddress_Snapshot, (IPAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x01E68340, IPAddress *, IPAddress_MapToIPv6, (IPAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x01E68570, IPAddress *, IPAddress_MapToIPv4, (IPAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x01E68760, void, IPAddress__cctor, (MethodInfo * method));
DO_APP_FUNC(0x004F0AC0, AddressFamily__Enum, IPEndPoint_get_AddressFamily, (IPEndPoint * __this, MethodInfo * method));
DO_APP_FUNC(0x01E68D80, void, IPEndPoint__ctor, (IPEndPoint * __this, int64_t address, int32_t port, MethodInfo * method));
DO_APP_FUNC(0x01E68F50, void, IPEndPoint__ctor_1, (IPEndPoint * __this, IPAddress * address, int32_t port, MethodInfo * method));
DO_APP_FUNC(0x002FA280, IPAddress *, IPEndPoint_get_Address, (IPEndPoint * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, IPEndPoint_set_Address, (IPEndPoint * __this, IPAddress * value, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, IPEndPoint_get_Port, (IPEndPoint * __this, MethodInfo * method));
DO_APP_FUNC(0x01E69070, void, IPEndPoint_set_Port, (IPEndPoint * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01E69150, String *, IPEndPoint_ToString, (IPEndPoint * __this, MethodInfo * method));
DO_APP_FUNC(0x01E69290, SocketAddress *, IPEndPoint_Serialize, (IPEndPoint * __this, MethodInfo * method));
DO_APP_FUNC(0x01E69440, EndPoint *, IPEndPoint_Create, (IPEndPoint * __this, SocketAddress * socketAddress, MethodInfo * method));
DO_APP_FUNC(0x01E697C0, bool, IPEndPoint_Equals, (IPEndPoint * __this, Object * comparand, MethodInfo * method));
DO_APP_FUNC(0x01E69980, int32_t, IPEndPoint_GetHashCode, (IPEndPoint * __this, MethodInfo * method));
DO_APP_FUNC(0x01E699C0, IPEndPoint *, IPEndPoint_Snapshot, (IPEndPoint * __this, MethodInfo * method));
DO_APP_FUNC(0x01E69B30, void, IPEndPoint__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, IPHostEntry_get_HostName, (IPHostEntry * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, IPHostEntry_set_HostName, (IPHostEntry * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String__Array *, IPHostEntry_get_Aliases, (IPHostEntry * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, IPHostEntry_set_Aliases, (IPHostEntry * __this, String__Array * value, MethodInfo * method));
DO_APP_FUNC(0x002FB950, IPAddress__Array *, IPHostEntry_get_AddressList, (IPHostEntry * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, IPHostEntry_set_AddressList, (IPHostEntry * __this, IPAddress__Array * value, MethodInfo * method));
DO_APP_FUNC(0x00953E60, void, IPHostEntry__ctor, (IPHostEntry * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6A500, void *, IntPtrHelper_Add, (void * a, int32_t b, MethodInfo * method));
DO_APP_FUNC(0x01E6A510, int64_t, IntPtrHelper_Subtract, (void * a, void * b, MethodInfo * method));
DO_APP_FUNC(0x01E25790, void, InternalException__ctor, (InternalException * __this, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, InternalException__ctor_1, (InternalException * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01E70E40, bool, NclUtilities_IsThreadPoolLow, (MethodInfo * method));
DO_APP_FUNC(0x01E70E70, bool, NclUtilities_get_HasShutdownStarted, (MethodInfo * method));
DO_APP_FUNC(0x01E70FC0, bool, NclUtilities_IsCredentialFailure, (SecurityStatus__Enum error, MethodInfo * method));
DO_APP_FUNC(0x01E70FF0, bool, NclUtilities_IsClientFault, (SecurityStatus__Enum error, MethodInfo * method));
DO_APP_FUNC(0x01E71020, ContextCallback *, NclUtilities_get_ContextRelativeDemandCallback, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, NclUtilities_DemandCallback, (Object * state, MethodInfo * method));
DO_APP_FUNC(0x01E711C0, bool, NclUtilities_GuessWhetherHostIsLoopback, (String * host, MethodInfo * method));
DO_APP_FUNC(0x01E712B0, bool, NclUtilities_IsFatal, (Exception * exception, MethodInfo * method));
DO_APP_FUNC(0x01E713B0, bool, NclUtilities_IsAddressLocal, (IPAddress * ipAddress, MethodInfo * method));
DO_APP_FUNC(0x01E71450, IPHostEntry *, NclUtilities_GetLocalHost, (MethodInfo * method));
DO_APP_FUNC(0x01E714F0, IPAddress__Array *, NclUtilities_get_LocalAddresses, (MethodInfo * method));
DO_APP_FUNC(0x01E71B90, Object *, NclUtilities_get_LocalAddressesLock, (MethodInfo * method));
DO_APP_FUNC(0x01E70C20, void, NclConstants__cctor, (MethodInfo * method));
DO_APP_FUNC(0x001267F0, void, InterlockedGate_Reset, (InterlockedGate__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D7280, bool, InterlockedGate_Trigger, (InterlockedGate__Boxed * __this, bool exclusive, MethodInfo * method));
DO_APP_FUNC(0x001D7350, bool, InterlockedGate_StartTriggering, (InterlockedGate__Boxed * __this, bool exclusive, MethodInfo * method));
DO_APP_FUNC(0x001D7420, void, InterlockedGate_FinishTriggering, (InterlockedGate__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D74D0, bool, InterlockedGate_StartSignaling, (InterlockedGate__Boxed * __this, bool exclusive, MethodInfo * method));
DO_APP_FUNC(0x001D75A0, void, InterlockedGate_FinishSignaling, (InterlockedGate__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D7650, bool, InterlockedGate_Complete, (InterlockedGate__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x020AD050, String__Array *, ValidationHelper_MakeEmptyArrayNull, (String__Array * stringArray, MethodInfo * method));
DO_APP_FUNC(0x020AD070, String *, ValidationHelper_MakeStringNull, (String * stringValue, MethodInfo * method));
DO_APP_FUNC(0x020AD090, String *, ValidationHelper_ExceptionMessage, (Exception * exception, MethodInfo * method));
DO_APP_FUNC(0x020AD1C0, String *, ValidationHelper_ToString, (Object * objectValue, MethodInfo * method));
DO_APP_FUNC(0x020AD3D0, String *, ValidationHelper_HashString, (Object * objectValue, MethodInfo * method));
DO_APP_FUNC(0x020AD4E0, bool, ValidationHelper_IsInvalidHttpString, (String * stringValue, MethodInfo * method));
DO_APP_FUNC(0x01E28500, bool, ValidationHelper_IsBlankString, (String * stringValue, MethodInfo * method));
DO_APP_FUNC(0x020AD5C0, bool, ValidationHelper_ValidateTcpPort, (int32_t port, MethodInfo * method));
DO_APP_FUNC(0x020AD5E0, bool, ValidationHelper_ValidateRange, (int32_t actual, int32_t fromAllowed, int32_t toAllowed, MethodInfo * method));
DO_APP_FUNC(0x020AD5F0, void, ValidationHelper_ValidateSegment, (ArraySegment_1_Byte_ segment, MethodInfo * method));
DO_APP_FUNC(0x020AD6F0, void, ValidationHelper__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01D27350, NotImplementedException *, ExceptionHelper_get_MethodNotImplementedException, (MethodInfo * method));
DO_APP_FUNC(0x01D274B0, NotImplementedException *, ExceptionHelper_get_PropertyNotImplementedException, (MethodInfo * method));
DO_APP_FUNC(0x01D27610, NotSupportedException *, ExceptionHelper_get_MethodNotSupportedException, (MethodInfo * method));
DO_APP_FUNC(0x01D27770, NotSupportedException *, ExceptionHelper_get_PropertyNotSupportedException, (MethodInfo * method));
DO_APP_FUNC(0x01D278D0, WebException *, ExceptionHelper_get_IsolatedException, (MethodInfo * method));
DO_APP_FUNC(0x01D27A40, WebException *, ExceptionHelper_get_RequestAbortedException, (MethodInfo * method));
DO_APP_FUNC(0x01D27BB0, WebException *, ExceptionHelper_get_CacheEntryNotFoundException, (MethodInfo * method));
DO_APP_FUNC(0x01D27D20, WebException *, ExceptionHelper_get_RequestProhibitedByCachePolicyException, (MethodInfo * method));
DO_APP_FUNC(0x01BD3190, void, SecurityBufferStruct__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01BD2F00, void, SecurityBuffer__ctor, (SecurityBuffer * __this, Byte__Array * data, int32_t offset, int32_t size, BufferType__Enum tokentype, MethodInfo * method));
DO_APP_FUNC(0x01BD3030, void, SecurityBuffer__ctor_1, (SecurityBuffer * __this, Byte__Array * data, BufferType__Enum tokentype, MethodInfo * method));
DO_APP_FUNC(0x01BD3070, void, SecurityBuffer__ctor_2, (SecurityBuffer * __this, int32_t size, BufferType__Enum tokentype, MethodInfo * method));
DO_APP_FUNC(0x01BD3130, void, SecurityBuffer__ctor_3, (SecurityBuffer * __this, ChannelBinding * binding, MethodInfo * method));
DO_APP_FUNC(0x01BD3180, void, SecurityBufferDescriptor__ctor, (SecurityBufferDescriptor * __this, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SecurityBufferDescriptor_DebugDump, (SecurityBufferDescriptor * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SecChannelBindings__ctor, (SecChannelBindings * __this, MethodInfo * method));
DO_APP_FUNC(0x021B8380, IWebRequestCreate *, WebRequestPrefixElement_get_Creator, (WebRequestPrefixElement * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, WebRequestPrefixElement_set_Creator, (WebRequestPrefixElement * __this, IWebRequestCreate * value, MethodInfo * method));
DO_APP_FUNC(0x021B8580, void, WebRequestPrefixElement__ctor, (WebRequestPrefixElement * __this, String * P, Type * creatorType, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, WebRequestPrefixElement__ctor_1, (WebRequestPrefixElement * __this, String * P, IWebRequestCreate * C, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, HttpAbortDelegate__ctor, (HttpAbortDelegate * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01D3D560, bool, HttpAbortDelegate_Invoke, (HttpAbortDelegate * __this, HttpWebRequest * request, WebException * webException, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, HttpAbortDelegate_BeginInvoke, (HttpAbortDelegate * __this, HttpWebRequest * request, WebException * webException, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x008A1BF0, bool, HttpAbortDelegate_EndInvoke, (HttpAbortDelegate * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, HttpContinueDelegate__ctor, (HttpContinueDelegate * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x015C22A0, void, HttpContinueDelegate_Invoke, (HttpContinueDelegate * __this, int32_t StatusCode, WebHeaderCollection * httpHeaders, MethodInfo * method));
DO_APP_FUNC(0x01D406D0, IAsyncResult *, HttpContinueDelegate_BeginInvoke, (HttpContinueDelegate * __this, int32_t StatusCode, WebHeaderCollection * httpHeaders, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, HttpContinueDelegate_EndInvoke, (HttpContinueDelegate * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnlockConnectionDelegate__ctor, (UnlockConnectionDelegate * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x00611820, void, UnlockConnectionDelegate_Invoke, (UnlockConnectionDelegate * __this, MethodInfo * method));
DO_APP_FUNC(0x00611B10, IAsyncResult *, UnlockConnectionDelegate_BeginInvoke, (UnlockConnectionDelegate * __this, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, UnlockConnectionDelegate_EndInvoke, (UnlockConnectionDelegate * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01E6A970, void, KnownHttpVerb__ctor, (KnownHttpVerb * __this, String * name, bool requireContentBody, bool contentBodyNotAllowed, bool connectRequest, bool expectNoContentResponse, MethodInfo * method));
DO_APP_FUNC(0x01E6A990, void, KnownHttpVerb__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01E6B1B0, bool, KnownHttpVerb_Equals, (KnownHttpVerb * __this, KnownHttpVerb * verb, MethodInfo * method));
DO_APP_FUNC(0x01E6B340, KnownHttpVerb *, KnownHttpVerb_Parse, (String * name, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, HttpProtocolUtils__ctor, (HttpProtocolUtils * __this, MethodInfo * method));
DO_APP_FUNC(0x01E58B00, DateTime, HttpProtocolUtils_string2date, (String * S, MethodInfo * method));
DO_APP_FUNC(0x01E58BE0, String *, HttpProtocolUtils_date2string, (DateTime D, MethodInfo * method));
DO_APP_FUNC(0x020A53C0, void, SplitWritesState__ctor, (SplitWritesState * __this, BufferOffsetSize_1__Array * buffers, MethodInfo * method));
DO_APP_FUNC(0x020A53D0, bool, SplitWritesState_get_IsDone, (SplitWritesState * __this, MethodInfo * method));
DO_APP_FUNC(0x020A5440, BufferOffsetSize_1__Array *, SplitWritesState_GetNextBuffers, (SplitWritesState * __this, MethodInfo * method));
DO_APP_FUNC(0x01E75AC0, void, NetworkCredential__ctor, (NetworkCredential * __this, MethodInfo * method));
DO_APP_FUNC(0x01E75B80, void, NetworkCredential__ctor_1, (NetworkCredential * __this, String * userName, String * password, MethodInfo * method));
DO_APP_FUNC(0x01E75C50, void, NetworkCredential__ctor_2, (NetworkCredential * __this, String * userName, SecureString * password, MethodInfo * method));
DO_APP_FUNC(0x01E75D10, void, NetworkCredential__ctor_3, (NetworkCredential * __this, String * userName, String * password, String * domain, MethodInfo * method));
DO_APP_FUNC(0x01E75D60, void, NetworkCredential__ctor_4, (NetworkCredential * __this, String * userName, SecureString * password, String * domain, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, NetworkCredential_get_UserName, (NetworkCredential * __this, MethodInfo * method));
DO_APP_FUNC(0x01E75EE0, void, NetworkCredential_set_UserName, (NetworkCredential * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E75F90, String *, NetworkCredential_get_Password, (NetworkCredential * __this, MethodInfo * method));
DO_APP_FUNC(0x01E75FA0, void, NetworkCredential_set_Password, (NetworkCredential * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E75FC0, SecureString *, NetworkCredential_get_SecurePassword, (NetworkCredential * __this, MethodInfo * method));
DO_APP_FUNC(0x01E75FE0, void, NetworkCredential_set_SecurePassword, (NetworkCredential * __this, SecureString * value, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, NetworkCredential_get_Domain, (NetworkCredential * __this, MethodInfo * method));
DO_APP_FUNC(0x01E76150, void, NetworkCredential_set_Domain, (NetworkCredential * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, NetworkCredential_InternalGetUserName, (NetworkCredential * __this, MethodInfo * method));
DO_APP_FUNC(0x01E75F90, String *, NetworkCredential_InternalGetPassword, (NetworkCredential * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, SecureString *, NetworkCredential_InternalGetSecurePassword, (NetworkCredential * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, NetworkCredential_InternalGetDomain, (NetworkCredential * __this, MethodInfo * method));
DO_APP_FUNC(0x01E76200, String *, NetworkCredential_InternalGetDomainUserName, (NetworkCredential * __this, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, NetworkCredential *, NetworkCredential_GetCredential, (NetworkCredential * __this, Uri * uri, String * authType, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, NetworkCredential *, NetworkCredential_GetCredential_1, (NetworkCredential * __this, String * host, int32_t port, String * authenticationType, MethodInfo * method));
DO_APP_FUNC(0x01BCD840, void, ProtocolViolationException__ctor, (ProtocolViolationException * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCD850, void, ProtocolViolationException__ctor_1, (ProtocolViolationException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, ProtocolViolationException__ctor_2, (ProtocolViolationException * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01BCD870, void, ProtocolViolationException_System_Runtime_Serialization_ISerializable_GetObjectData, (ProtocolViolationException * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01BCD870, void, ProtocolViolationException_GetObjectData, (ProtocolViolationException * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01BDB850, AddressFamily__Enum, SocketAddress_get_Family, (SocketAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, SocketAddress_get_Size, (SocketAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDB8C0, uint8_t, SocketAddress_get_Item, (SocketAddress * __this, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x01BDB9A0, void, SocketAddress_set_Item, (SocketAddress * __this, int32_t offset, uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x01BDBAB0, void, SocketAddress__ctor, (SocketAddress * __this, AddressFamily__Enum family, MethodInfo * method));
DO_APP_FUNC(0x01BDBAC0, void, SocketAddress__ctor_1, (SocketAddress * __this, AddressFamily__Enum family, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01BDBC00, void, SocketAddress__ctor_2, (SocketAddress * __this, IPAddress * ipAddress, MethodInfo * method));
DO_APP_FUNC(0x01BDBFF0, void, SocketAddress__ctor_3, (SocketAddress * __this, IPAddress * ipaddress, int32_t port, MethodInfo * method));
DO_APP_FUNC(0x01BDC070, IPAddress *, SocketAddress_GetIPAddress, (SocketAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDC5D0, IPEndPoint *, SocketAddress_GetIPEndPoint, (SocketAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDC7A0, void, SocketAddress_CopyAddressSizeIntoBuffer, (SocketAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDC8A0, int32_t, SocketAddress_GetAddressSizeOffset, (SocketAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDC8C0, void, SocketAddress_SetSize, (SocketAddress * __this, void * ptr, MethodInfo * method));
DO_APP_FUNC(0x01BDC8D0, bool, SocketAddress_Equals, (SocketAddress * __this, Object * comparand, MethodInfo * method));
DO_APP_FUNC(0x01BDC9F0, int32_t, SocketAddress_GetHashCode, (SocketAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDCBB0, String *, SocketAddress_ToString, (SocketAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x020AAA60, IEnumerable_1_System_Security_Authentication_ExtendedProtection_TokenBinding_ *, TransportContext_GetTlsTokenBindings, (TransportContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TransportContext__ctor, (TransportContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, CachedTransportContext__ctor, (CachedTransportContext * __this, ChannelBinding * binding, MethodInfo * method));
DO_APP_FUNC(0x02016510, ChannelBinding *, CachedTransportContext_GetChannelBinding, (CachedTransportContext * __this, ChannelBindingKind__Enum kind, MethodInfo * method));
DO_APP_FUNC(0x01D6FAD0, void, WebException__ctor, (WebException * __this, MethodInfo * method));
DO_APP_FUNC(0x01D6FAF0, void, WebException__ctor_1, (WebException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01D6FB20, void, WebException__ctor_2, (WebException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x01D6FB50, void, WebException__ctor_3, (WebException * __this, String * message, WebExceptionStatus__Enum status, MethodInfo * method));
DO_APP_FUNC(0x01D6FB70, void, WebException__ctor_4, (WebException * __this, String * message, WebExceptionStatus__Enum status, WebExceptionInternalStatus__Enum internalStatus, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x01D6FC60, void, WebException__ctor_5, (WebException * __this, String * message, Exception * innerException, WebExceptionStatus__Enum status, WebResponse * response, MethodInfo * method));
DO_APP_FUNC(0x01D6FD40, void, WebException__ctor_6, (WebException * __this, String * message, String * data, Exception * innerException, WebExceptionStatus__Enum status, WebResponse * response, MethodInfo * method));
DO_APP_FUNC(0x01D6FE40, void, WebException__ctor_7, (WebException * __this, String * message, Exception * innerException, WebExceptionStatus__Enum status, WebResponse * response, WebExceptionInternalStatus__Enum internalStatus, MethodInfo * method));
DO_APP_FUNC(0x01D6FF30, void, WebException__ctor_8, (WebException * __this, String * message, String * data, Exception * innerException, WebExceptionStatus__Enum status, WebResponse * response, WebExceptionInternalStatus__Enum internalStatus, MethodInfo * method));
DO_APP_FUNC(0x01D70040, void, WebException__ctor_9, (WebException * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x00C53AA0, void, WebException_System_Runtime_Serialization_ISerializable_GetObjectData, (WebException * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01BCD870, void, WebException_GetObjectData, (WebException * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x00989BF0, WebExceptionStatus__Enum, WebException_get_Status, (WebException * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC40, WebResponse *, WebException_get_Response, (WebException * __this, MethodInfo * method));
DO_APP_FUNC(0x00736620, WebExceptionInternalStatus__Enum, WebException_get_InternalStatus, (WebException * __this, MethodInfo * method));
DO_APP_FUNC(0x01D70070, String *, WebExceptionMapping_GetWebStatusString, (WebExceptionStatus__Enum status, MethodInfo * method));
DO_APP_FUNC(0x01D70280, void, WebExceptionMapping__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01D70310, String *, WebHeaderCollection_get_ContentLength, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D70420, String *, WebHeaderCollection_get_CacheControl, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D70530, String *, WebHeaderCollection_get_ContentType, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D70640, String *, WebHeaderCollection_get_Date, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D70750, String *, WebHeaderCollection_get_Expires, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D70860, String *, WebHeaderCollection_get_ETag, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D70970, String *, WebHeaderCollection_get_LastModified, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D70A80, String *, WebHeaderCollection_get_Location, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D70BA0, String *, WebHeaderCollection_get_ProxyAuthenticate, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D70CB0, String *, WebHeaderCollection_get_SetCookie2, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D70DC0, String *, WebHeaderCollection_get_SetCookie, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D70EE0, String *, WebHeaderCollection_get_Server, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D71000, String *, WebHeaderCollection_get_Via, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D71120, void, WebHeaderCollection_NormalizeCommonHeaders, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D712F0, NameValueCollection *, WebHeaderCollection_get_InnerCollection, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D71490, bool, WebHeaderCollection_AllowMultiValues, (String * name, MethodInfo * method));
DO_APP_FUNC(0x01D715A0, bool, WebHeaderCollection_get_AllowHttpRequestHeader, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D715E0, bool, WebHeaderCollection_get_AllowHttpResponseHeader, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D71620, String *, WebHeaderCollection_get_Item, (WebHeaderCollection * __this, HttpRequestHeader__Enum header, MethodInfo * method));
DO_APP_FUNC(0x01D71750, void, WebHeaderCollection_set_Item, (WebHeaderCollection * __this, HttpRequestHeader__Enum header, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D71880, String *, WebHeaderCollection_get_Item_1, (WebHeaderCollection * __this, HttpResponseHeader__Enum header, MethodInfo * method));
DO_APP_FUNC(0x01D71A10, void, WebHeaderCollection_set_Item_1, (WebHeaderCollection * __this, HttpResponseHeader__Enum header, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D71C10, void, WebHeaderCollection_Add, (WebHeaderCollection * __this, HttpRequestHeader__Enum header, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D71D40, void, WebHeaderCollection_Add_1, (WebHeaderCollection * __this, HttpResponseHeader__Enum header, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D71F40, void, WebHeaderCollection_Set, (WebHeaderCollection * __this, HttpRequestHeader__Enum header, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D72070, void, WebHeaderCollection_Set_1, (WebHeaderCollection * __this, HttpResponseHeader__Enum header, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D72270, void, WebHeaderCollection_SetInternal, (WebHeaderCollection * __this, HttpResponseHeader__Enum header, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D72460, void, WebHeaderCollection_Remove, (WebHeaderCollection * __this, HttpRequestHeader__Enum header, MethodInfo * method));
DO_APP_FUNC(0x01D72590, void, WebHeaderCollection_Remove_1, (WebHeaderCollection * __this, HttpResponseHeader__Enum header, MethodInfo * method));
DO_APP_FUNC(0x01D726C0, void, WebHeaderCollection_AddWithoutValidate, (WebHeaderCollection * __this, String * headerName, String * headerValue, MethodInfo * method));
DO_APP_FUNC(0x01D72890, void, WebHeaderCollection_SetAddVerified, (WebHeaderCollection * __this, String * name, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D72A00, void, WebHeaderCollection_AddInternal, (WebHeaderCollection * __this, String * name, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D72A70, void, WebHeaderCollection_ChangeInternal, (WebHeaderCollection * __this, String * name, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D72AE0, void, WebHeaderCollection_RemoveInternal, (WebHeaderCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01D72B30, void, WebHeaderCollection_CheckUpdate, (WebHeaderCollection * __this, String * name, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D72C30, void, WebHeaderCollection_AddInternalNotCommon, (WebHeaderCollection * __this, String * name, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D72C80, String *, WebHeaderCollection_CheckBadChars, (String * name, bool isHeaderValue, MethodInfo * method));
DO_APP_FUNC(0x01D73150, bool, WebHeaderCollection_IsValidToken, (String * token, MethodInfo * method));
DO_APP_FUNC(0x01D73290, bool, WebHeaderCollection_ContainsNonAsciiChars, (String * token, MethodInfo * method));
DO_APP_FUNC(0x01D73300, void, WebHeaderCollection_ThrowOnRestrictedHeader, (WebHeaderCollection * __this, String * headerName, MethodInfo * method));
DO_APP_FUNC(0x01D73560, void, WebHeaderCollection_Add_2, (WebHeaderCollection * __this, String * name, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D73740, void, WebHeaderCollection_Add_3, (WebHeaderCollection * __this, String * header, MethodInfo * method));
DO_APP_FUNC(0x01D73A10, void, WebHeaderCollection_Set_2, (WebHeaderCollection * __this, String * name, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D73C50, void, WebHeaderCollection_SetInternal_1, (WebHeaderCollection * __this, String * name, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D73E80, void, WebHeaderCollection_Remove_2, (WebHeaderCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01D73FD0, String__Array *, WebHeaderCollection_GetValues, (WebHeaderCollection * __this, String * header, MethodInfo * method));
DO_APP_FUNC(0x01D74300, String *, WebHeaderCollection_ToString, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D743A0, String *, WebHeaderCollection_ToString_1, (WebHeaderCollection * __this, bool forTrace, MethodInfo * method));
DO_APP_FUNC(0x01D74440, String *, WebHeaderCollection_GetAsString, (NameValueCollection * cc, bool winInetCompat, bool forTrace, MethodInfo * method));
DO_APP_FUNC(0x01D747B0, Byte__Array *, WebHeaderCollection_ToByteArray, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D748C0, bool, WebHeaderCollection_IsRestricted, (String * headerName, MethodInfo * method));
DO_APP_FUNC(0x01D74A20, bool, WebHeaderCollection_IsRestricted_1, (String * headerName, bool response, MethodInfo * method));
DO_APP_FUNC(0x01D74B80, void, WebHeaderCollection__ctor, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D74C30, void, WebHeaderCollection__ctor_1, (WebHeaderCollection * __this, WebHeaderCollectionType__Enum type, MethodInfo * method));
DO_APP_FUNC(0x01D74D50, void, WebHeaderCollection__ctor_2, (WebHeaderCollection * __this, NameValueCollection * cc, MethodInfo * method));
DO_APP_FUNC(0x01D75040, void, WebHeaderCollection__ctor_3, (WebHeaderCollection * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebHeaderCollection_OnDeserialization, (WebHeaderCollection * __this, Object * sender, MethodInfo * method));
DO_APP_FUNC(0x01D752E0, void, WebHeaderCollection_GetObjectData, (WebHeaderCollection * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01D754A0, DataParseStatus__Enum, WebHeaderCollection_ParseHeaders, (WebHeaderCollection * __this, Byte__Array * buffer, int32_t size, int32_t * unparsed, int32_t * totalResponseHeadersLength, int32_t maximumResponseHeadersLength, WebParseError * parseError, MethodInfo * method));
DO_APP_FUNC(0x01D75940, DataParseStatus__Enum, WebHeaderCollection_ParseHeadersStrict, (WebHeaderCollection * __this, Byte__Array * buffer, int32_t size, int32_t * unparsed, int32_t * totalResponseHeadersLength, int32_t maximumResponseHeadersLength, WebParseError * parseError, MethodInfo * method));
DO_APP_FUNC(0x01D76590, void, WebHeaderCollection_System_Runtime_Serialization_ISerializable_GetObjectData, (WebHeaderCollection * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01D765C0, String *, WebHeaderCollection_Get, (WebHeaderCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01D76A00, IEnumerator *, WebHeaderCollection_GetEnumerator, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D76B70, int32_t, WebHeaderCollection_get_Count, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D76BB0, NameObjectCollectionBase_KeysCollection *, WebHeaderCollection_get_Keys, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D76BF0, bool, WebHeaderCollection_InternalHasKeys, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D76C30, String *, WebHeaderCollection_Get_1, (WebHeaderCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01D76C80, String__Array *, WebHeaderCollection_GetValues_1, (WebHeaderCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01D76CD0, String *, WebHeaderCollection_GetKey, (WebHeaderCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01D76D20, String__Array *, WebHeaderCollection_get_AllKeys, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D76D60, void, WebHeaderCollection_Clear, (WebHeaderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D76D90, void, WebHeaderCollection__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01D77690, String *, WebHeaderCollection_HeaderEncoding_GetString, (Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, MethodInfo * method));
DO_APP_FUNC(0x01D776C0, String *, WebHeaderCollection_HeaderEncoding_GetString_1, (uint8_t * pBytes, int32_t byteCount, MethodInfo * method));
DO_APP_FUNC(0x01D77810, int32_t, WebHeaderCollection_HeaderEncoding_GetByteCount, (String * myString, MethodInfo * method));
DO_APP_FUNC(0x01D77830, void, WebHeaderCollection_HeaderEncoding_GetBytes, (String * myString, int32_t charIndex, int32_t charCount, Byte__Array * bytes, int32_t byteIndex, MethodInfo * method));
DO_APP_FUNC(0x01D778C0, Byte__Array *, WebHeaderCollection_HeaderEncoding_GetBytes_1, (String * myString, MethodInfo * method));
DO_APP_FUNC(0x01D779B0, String *, WebHeaderCollection_HeaderEncoding_DecodeUtf8FromString, (String * input, MethodInfo * method));
DO_APP_FUNC(0x02016520, int32_t, CaseInsensitiveAscii_GetHashCode, (CaseInsensitiveAscii * __this, Object * myObject, MethodInfo * method));
DO_APP_FUNC(0x020166A0, int32_t, CaseInsensitiveAscii_Compare, (CaseInsensitiveAscii * __this, Object * firstObject, Object * secondObject, MethodInfo * method));
DO_APP_FUNC(0x02016890, int32_t, CaseInsensitiveAscii_FastGetHashCode, (CaseInsensitiveAscii * __this, String * myString, MethodInfo * method));
DO_APP_FUNC(0x02016A00, bool, CaseInsensitiveAscii_Equals, (CaseInsensitiveAscii * __this, Object * firstObject, Object * secondObject, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CaseInsensitiveAscii__ctor, (CaseInsensitiveAscii * __this, MethodInfo * method));
DO_APP_FUNC(0x02016BE0, void, CaseInsensitiveAscii__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01D3D310, void, HostHeaderString__ctor, (HostHeaderString * __this, MethodInfo * method));
DO_APP_FUNC(0x01D3D320, void, HostHeaderString__ctor_1, (HostHeaderString * __this, String * s, MethodInfo * method));
DO_APP_FUNC(0x01D3D320, void, HostHeaderString_Init, (HostHeaderString * __this, String * s, MethodInfo * method));
DO_APP_FUNC(0x01D3D340, void, HostHeaderString_Convert, (HostHeaderString * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, HostHeaderString_get_String, (HostHeaderString * __this, MethodInfo * method));
DO_APP_FUNC(0x01D3D320, void, HostHeaderString_set_String, (HostHeaderString * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D3D4B0, int32_t, HostHeaderString_get_ByteCount, (HostHeaderString * __this, MethodInfo * method));
DO_APP_FUNC(0x01D3D4E0, Byte__Array *, HostHeaderString_get_Bytes, (HostHeaderString * __this, MethodInfo * method));
DO_APP_FUNC(0x01D3D500, void, HostHeaderString_Copy, (HostHeaderString * __this, Byte__Array * destBytes, int32_t destByteIndex, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, WebPermissionAttribute__ctor, (WebPermissionAttribute * __this, SecurityAction__Enum action, MethodInfo * method));
DO_APP_FUNC(0x01D7F640, String *, WebPermissionAttribute_get_Connect, (WebPermissionAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01D7F6E0, void, WebPermissionAttribute_set_Connect, (WebPermissionAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D7F820, String *, WebPermissionAttribute_get_Accept, (WebPermissionAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01D7F8C0, void, WebPermissionAttribute_set_Accept, (WebPermissionAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D7FA00, String *, WebPermissionAttribute_get_ConnectPattern, (WebPermissionAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01D7FB40, void, WebPermissionAttribute_set_ConnectPattern, (WebPermissionAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D7FDA0, String *, WebPermissionAttribute_get_AcceptPattern, (WebPermissionAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01D7FEE0, void, WebPermissionAttribute_set_AcceptPattern, (WebPermissionAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D80140, IPermission *, WebPermissionAttribute_CreatePermission, (WebPermissionAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01EAC710, void, DelayedRegex__ctor, (DelayedRegex * __this, String * regexString, MethodInfo * method));
DO_APP_FUNC(0x01EAC7D0, void, DelayedRegex__ctor_1, (DelayedRegex * __this, Regex * regex, MethodInfo * method));
DO_APP_FUNC(0x01EAC890, Regex *, DelayedRegex_get_AsRegex, (DelayedRegex * __this, MethodInfo * method));
DO_APP_FUNC(0x01EACA10, String *, DelayedRegex_ToString, (DelayedRegex * __this, MethodInfo * method));
DO_APP_FUNC(0x01D77B80, Regex *, WebPermission_get_MatchAllRegex, (MethodInfo * method));
DO_APP_FUNC(0x01D77D10, IEnumerator *, WebPermission_get_ConnectList, (WebPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01D78130, IEnumerator *, WebPermission_get_AcceptList, (WebPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01D78550, void, WebPermission__ctor, (WebPermission * __this, PermissionState__Enum state, MethodInfo * method));
DO_APP_FUNC(0x01D78770, void, WebPermission__ctor_1, (WebPermission * __this, bool unrestricted, MethodInfo * method));
DO_APP_FUNC(0x01D78990, void, WebPermission__ctor_2, (WebPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01D78BA0, void, WebPermission__ctor_3, (WebPermission * __this, NetworkAccess__Enum access, MethodInfo * method));
DO_APP_FUNC(0x01D78DD0, void, WebPermission__ctor_4, (WebPermission * __this, NetworkAccess__Enum access, Regex * uriRegex, MethodInfo * method));
DO_APP_FUNC(0x01D79010, void, WebPermission__ctor_5, (WebPermission * __this, NetworkAccess__Enum access, String * uriString, MethodInfo * method));
DO_APP_FUNC(0x01D79250, void, WebPermission__ctor_6, (WebPermission * __this, NetworkAccess__Enum access, Uri * uri, MethodInfo * method));
DO_APP_FUNC(0x01D79490, void, WebPermission_AddPermission, (WebPermission * __this, NetworkAccess__Enum access, String * uriString, MethodInfo * method));
DO_APP_FUNC(0x01D79A80, void, WebPermission_AddPermission_1, (WebPermission * __this, NetworkAccess__Enum access, Uri * uri, MethodInfo * method));
DO_APP_FUNC(0x01D79F60, void, WebPermission_AddPermission_2, (WebPermission * __this, NetworkAccess__Enum access, Regex * uriRegex, MethodInfo * method));
DO_APP_FUNC(0x01D7A210, void, WebPermission_AddAsPattern, (WebPermission * __this, NetworkAccess__Enum access, DelayedRegex * uriRegexPattern, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, WebPermission_IsUnrestricted, (WebPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01D7A7F0, IPermission *, WebPermission_Copy, (WebPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01D7AB40, bool, WebPermission_IsSubsetOf, (WebPermission * __this, IPermission * target, MethodInfo * method));
DO_APP_FUNC(0x01D7B160, bool, WebPermission_isSpecialSubsetCase, (String * regexToCheck, ArrayList * permList, MethodInfo * method));
DO_APP_FUNC(0x01D7B730, IPermission *, WebPermission_Union, (WebPermission * __this, IPermission * target, MethodInfo * method));
DO_APP_FUNC(0x01D7BE00, IPermission *, WebPermission_Intersect, (WebPermission * __this, IPermission * target, MethodInfo * method));
DO_APP_FUNC(0x01D7C190, void, WebPermission_FromXml, (WebPermission * __this, SecurityElement * securityElement, MethodInfo * method));
DO_APP_FUNC(0x01D7CE60, SecurityElement *, WebPermission_ToXml, (WebPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01D7DC80, bool, WebPermission_isMatchedURI, (Object * uriToCheck, ArrayList * uriPatternList, MethodInfo * method));
DO_APP_FUNC(0x01D7E1C0, void, WebPermission_intersectList, (ArrayList * A, ArrayList * B, ArrayList * result, MethodInfo * method));
DO_APP_FUNC(0x01D7EEA0, Object *, WebPermission_intersectPair, (Object * L, Object * R, bool * isUri, MethodInfo * method));
DO_APP_FUNC(0x021B35D0, IWebRequestCreate *, WebRequest_get_CreatorInstance, (WebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebRequest_RegisterPortableWebRequestCreator, (IWebRequestCreate * creator, MethodInfo * method));
DO_APP_FUNC(0x021B3670, Object *, WebRequest_get_InternalSyncObject, (MethodInfo * method));
DO_APP_FUNC(0x021B3850, TimerThread_Queue *, WebRequest_get_DefaultTimerQueue, (MethodInfo * method));
DO_APP_FUNC(0x021B38F0, WebRequest *, WebRequest_Create, (Uri * requestUri, bool useUriBase, MethodInfo * method));
DO_APP_FUNC(0x021B3C40, WebRequest *, WebRequest_Create_1, (String * requestUriString, MethodInfo * method));
DO_APP_FUNC(0x021B3DF0, WebRequest *, WebRequest_Create_2, (Uri * requestUri, MethodInfo * method));
DO_APP_FUNC(0x021B3EE0, WebRequest *, WebRequest_CreateDefault, (Uri * requestUri, MethodInfo * method));
DO_APP_FUNC(0x021B3FD0, HttpWebRequest *, WebRequest_CreateHttp, (String * requestUriString, MethodInfo * method));
DO_APP_FUNC(0x021B4180, HttpWebRequest *, WebRequest_CreateHttp_1, (Uri * requestUri, MethodInfo * method));
DO_APP_FUNC(0x021B4470, bool, WebRequest_RegisterPrefix, (String * prefix, IWebRequestCreate * creator, MethodInfo * method));
DO_APP_FUNC(0x021B4B80, ArrayList *, WebRequest_get_PrefixList, (MethodInfo * method));
DO_APP_FUNC(0x021B4DC0, void, WebRequest_set_PrefixList, (ArrayList * value, MethodInfo * method));
DO_APP_FUNC(0x021B4E70, ArrayList *, WebRequest_PopulatePrefixList, (MethodInfo * method));
DO_APP_FUNC(0x021B5580, void, WebRequest__ctor, (WebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebRequest__ctor_1, (WebRequest * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01D28380, void, WebRequest_System_Runtime_Serialization_ISerializable_GetObjectData, (WebRequest * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebRequest_GetObjectData, (WebRequest * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x021B5590, RequestCachePolicy *, WebRequest_get_DefaultCachePolicy, (MethodInfo * method));
DO_APP_FUNC(0x021B5650, void, WebRequest_set_DefaultCachePolicy, (RequestCachePolicy * value, MethodInfo * method));
DO_APP_FUNC(0x002FB950, RequestCachePolicy *, WebRequest_get_CachePolicy, (WebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x021B5810, void, WebRequest_set_CachePolicy, (WebRequest * __this, RequestCachePolicy * value, MethodInfo * method));
DO_APP_FUNC(0x021B5820, void, WebRequest_InternalSetCachePolicy, (WebRequest * __this, RequestCachePolicy * policy, MethodInfo * method));
DO_APP_FUNC(0x021B5910, String *, WebRequest_get_Method, (WebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x021B5950, void, WebRequest_set_Method, (WebRequest * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x021B5990, Uri *, WebRequest_get_RequestUri, (WebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x021B59D0, String *, WebRequest_get_ConnectionGroupName, (WebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x021B5A10, void, WebRequest_set_ConnectionGroupName, (WebRequest * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x021B5A50, WebHeaderCollection *, WebRequest_get_Headers, (WebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x021B5A90, void, WebRequest_set_Headers, (WebRequest * __this, WebHeaderCollection * value, MethodInfo * method));
DO_APP_FUNC(0x021B5AD0, int64_t, WebRequest_get_ContentLength, (WebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x021B5B10, void, WebRequest_set_ContentLength, (WebRequest * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x021B5B50, String *, WebRequest_get_ContentType, (WebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x021B5B90, void, WebRequest_set_ContentType, (WebRequest * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x021B5BD0, ICredentials *, WebRequest_get_Credentials, (WebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x021B5C10, void, WebRequest_set_Credentials, (WebRequest * __this, ICredentials * value, MethodInfo * method));
DO_APP_FUNC(0x021B5C50, bool, WebRequest_get_UseDefaultCredentials, (WebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x021B5C90, void, WebRequest_set_UseDefaultCredentials, (WebRequest * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x021B5CD0, IWebProxy *, WebRequest_get_Proxy, (WebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x021B5D10, void, WebRequest_set_Proxy, (WebRequest * __this, IWebProxy * value, MethodInfo * method));
DO_APP_FUNC(0x021B5D50, bool, WebRequest_get_PreAuthenticate, (WebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x021B5D90, void, WebRequest_set_PreAuthenticate, (WebRequest * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x021B5DD0, int32_t, WebRequest_get_Timeout, (WebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x021B5E10, void, WebRequest_set_Timeout, (WebRequest * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x021B5E50, Stream *, WebRequest_GetRequestStream, (WebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x021B5E90, WebResponse *, WebRequest_GetResponse, (WebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x021B5ED0, IAsyncResult *, WebRequest_BeginGetResponse, (WebRequest * __this, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x021B5F10, WebResponse *, WebRequest_EndGetResponse, (WebRequest * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x021B5F50, IAsyncResult *, WebRequest_BeginGetRequestStream, (WebRequest * __this, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x021B5F90, Stream *, WebRequest_EndGetRequestStream, (WebRequest * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x021B5FD0, Task_1_System_IO_Stream_ *, WebRequest_GetRequestStreamAsync, (WebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x021B6400, Task_1_System_Net_WebResponse_ *, WebRequest_GetResponseAsync, (WebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x021B6830, WindowsIdentity *, WebRequest_SafeCaptureIdenity, (WebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x021B68C0, void, WebRequest_Abort, (WebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, RequestCacheProtocol *, WebRequest_get_CacheProtocol, (WebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB10, void, WebRequest_set_CacheProtocol, (WebRequest * __this, RequestCacheProtocol * value, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, AuthenticationLevel__Enum, WebRequest_get_AuthenticationLevel, (WebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A000, void, WebRequest_set_AuthenticationLevel, (WebRequest * __this, AuthenticationLevel__Enum value, MethodInfo * method));
DO_APP_FUNC(0x0052A010, TokenImpersonationLevel__Enum, WebRequest_get_ImpersonationLevel, (WebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A020, void, WebRequest_set_ImpersonationLevel, (WebRequest * __this, TokenImpersonationLevel__Enum value, MethodInfo * method));
DO_APP_FUNC(0x021B6900, void, WebRequest_RequestCallback, (WebRequest * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x021B6940, IWebProxy *, WebRequest_get_InternalDefaultWebProxy, (MethodInfo * method));
DO_APP_FUNC(0x021B6BC0, void, WebRequest_set_InternalDefaultWebProxy, (IWebProxy * value, MethodInfo * method));
DO_APP_FUNC(0x021B6DF0, IWebProxy *, WebRequest_get_DefaultWebProxy, (MethodInfo * method));
DO_APP_FUNC(0x021B6E80, void, WebRequest_set_DefaultWebProxy, (IWebProxy * value, MethodInfo * method));
DO_APP_FUNC(0x021B6F20, IWebProxy *, WebRequest_GetSystemWebProxy, (MethodInfo * method));
DO_APP_FUNC(0x02018EF0, IWebProxy *, WebRequest_InternalGetSystemWebProxy, (MethodInfo * method));
DO_APP_FUNC(0x021B6FB0, void, WebRequest_SetupCacheProtocol, (WebRequest * __this, Uri * uri, MethodInfo * method));
DO_APP_FUNC(0x021B7170, void, WebRequest__cctor, (MethodInfo * method));
DO_APP_FUNC(0x021B72F0, Task_1_System_IO_Stream_ *, WebRequest__GetRequestStreamAsync_b__78_0, (WebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x021B75A0, Task_1_System_Net_WebResponse_ *, WebRequest__GetResponseAsync_b__79_0, (WebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x021B8050, WebRequest *, WebRequest_DesignerWebRequestCreate_Create, (WebRequest_DesignerWebRequestCreate * __this, Uri * uri, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebRequest_DesignerWebRequestCreate__ctor, (WebRequest_DesignerWebRequestCreate * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, WebRequest_WebProxyWrapperOpaque__ctor, (WebRequest_WebProxyWrapperOpaque * __this, WebProxy * webProxy, MethodInfo * method));
DO_APP_FUNC(0x021B80F0, Uri *, WebRequest_WebProxyWrapperOpaque_GetProxy, (WebRequest_WebProxyWrapperOpaque * __this, Uri * destination, MethodInfo * method));
DO_APP_FUNC(0x021B8110, bool, WebRequest_WebProxyWrapperOpaque_IsBypassed, (WebRequest_WebProxyWrapperOpaque * __this, Uri * host, MethodInfo * method));
DO_APP_FUNC(0x01A88520, ICredentials *, WebRequest_WebProxyWrapperOpaque_get_Credentials, (WebRequest_WebProxyWrapperOpaque * __this, MethodInfo * method));
DO_APP_FUNC(0x021B8260, void, WebRequest_WebProxyWrapperOpaque_set_Credentials, (WebRequest_WebProxyWrapperOpaque * __this, ICredentials * value, MethodInfo * method));
DO_APP_FUNC(0x021B8280, ProxyChain *, WebRequest_WebProxyWrapperOpaque_GetProxies, (WebRequest_WebProxyWrapperOpaque * __this, Uri * destination, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, WebRequest_WebProxyWrapper__ctor, (WebRequest_WebProxyWrapper * __this, WebProxy * webProxy, MethodInfo * method));
DO_APP_FUNC(0x002FA280, WebProxy *, WebRequest_WebProxyWrapper_get_WebProxy, (WebRequest_WebProxyWrapper * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebRequest_c_DisplayClass78_0__ctor, (WebRequest_c_DisplayClass78_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x021B7850, Task_1_System_IO_Stream_ *, WebRequest_c_DisplayClass78_0__GetRequestStreamAsync_b__1, (WebRequest_c_DisplayClass78_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebRequest_c_DisplayClass79_0__ctor, (WebRequest_c_DisplayClass79_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x021B7C50, Task_1_System_Net_WebResponse_ *, WebRequest_c_DisplayClass79_0__GetResponseAsync_b__1, (WebRequest_c_DisplayClass79_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebResponse__ctor, (WebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebResponse__ctor_1, (WebResponse * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01D28380, void, WebResponse_System_Runtime_Serialization_ISerializable_GetObjectData, (WebResponse * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebResponse_GetObjectData, (WebResponse * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebResponse_Close, (WebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x021B8730, void, WebResponse_Dispose, (WebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x021B87E0, void, WebResponse_Dispose_1, (WebResponse * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x00533160, bool, WebResponse_get_IsFromCache, (WebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x00533170, void, WebResponse_set_InternalSetFromCache, (WebResponse * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x0052A280, bool, WebResponse_get_IsCacheFresh, (WebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x00533150, void, WebResponse_set_InternalSetIsCacheFresh, (WebResponse * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, WebResponse_get_IsMutuallyAuthenticated, (WebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x021B8890, int64_t, WebResponse_get_ContentLength, (WebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x021B88D0, void, WebResponse_set_ContentLength, (WebResponse * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x021B8910, String *, WebResponse_get_ContentType, (WebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x021B8950, void, WebResponse_set_ContentType, (WebResponse * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x021B8990, Stream *, WebResponse_GetResponseStream, (WebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x021B89D0, Uri *, WebResponse_get_ResponseUri, (WebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x021B8A10, WebHeaderCollection *, WebResponse_get_Headers, (WebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, WebResponse_get_SupportsHeaders, (WebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x021B8A50, String *, WebUtility_HtmlEncode, (String * value, MethodInfo * method));
DO_APP_FUNC(0x021B8C70, void, WebUtility_HtmlEncode_1, (String * value, TextWriter * output, MethodInfo * method));
DO_APP_FUNC(0x021B9060, String *, WebUtility_HtmlDecode, (String * value, MethodInfo * method));
DO_APP_FUNC(0x021B9270, void, WebUtility_HtmlDecode_1, (String * value, TextWriter * output, MethodInfo * method));
DO_APP_FUNC(0x021B96F0, int32_t, WebUtility_IndexOfHtmlEncodingChars, (String * s, int32_t startPos, MethodInfo * method));
DO_APP_FUNC(0x021B9880, UnicodeDecodingConformance__Enum, WebUtility_get_HtmlDecodeConformance, (MethodInfo * method));
DO_APP_FUNC(0x021B99F0, UnicodeEncodingConformance__Enum, WebUtility_get_HtmlEncodeConformance, (MethodInfo * method));
DO_APP_FUNC(0x021B9B60, Byte__Array *, WebUtility_UrlEncode, (Byte__Array * bytes, int32_t offset, int32_t count, bool alwaysCreateNewReturnValue, MethodInfo * method));
DO_APP_FUNC(0x021B9CF0, Byte__Array *, WebUtility_UrlEncode_1, (Byte__Array * bytes, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x021BA090, String *, WebUtility_UrlEncode_2, (String * value, MethodInfo * method));
DO_APP_FUNC(0x021BA240, Byte__Array *, WebUtility_UrlEncodeToBytes, (Byte__Array * value, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x021BA310, String *, WebUtility_UrlDecodeInternal, (String * value, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x021BA700, Byte__Array *, WebUtility_UrlDecodeInternal_1, (Byte__Array * bytes, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x021BA990, String *, WebUtility_UrlDecode, (String * encodedValue, MethodInfo * method));
DO_APP_FUNC(0x021BAA60, Byte__Array *, WebUtility_UrlDecodeToBytes, (Byte__Array * encodedValue, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x021BAB20, void, WebUtility_ConvertSmpToUtf16, (uint32_t smpChar, uint16_t * leadingSurrogate, uint16_t * trailingSurrogate, MethodInfo * method));
DO_APP_FUNC(0x021BAB60, int32_t, WebUtility_GetNextUnicodeScalarValueFromUtf16Surrogate, (uint16_t * * pch, int32_t * charsRemaining, MethodInfo * method));
DO_APP_FUNC(0x021BAC60, int32_t, WebUtility_HexToInt, (uint16_t h, MethodInfo * method));
DO_APP_FUNC(0x021BACA0, uint16_t, WebUtility_IntToHex, (int32_t n, MethodInfo * method));
DO_APP_FUNC(0x021BACB0, bool, WebUtility_IsUrlSafeChar, (uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x021BAD30, bool, WebUtility_ValidateUrlEncodingParameters, (Byte__Array * bytes, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x021BAE80, bool, WebUtility_StringRequiresHtmlDecoding, (String * s, MethodInfo * method));
DO_APP_FUNC(0x021BAFE0, void, WebUtility__cctor, (MethodInfo * method));
DO_APP_FUNC(0x021BB4D0, void, WebUtility_UrlDecoder_FlushBytes, (WebUtility_UrlDecoder * __this, MethodInfo * method));
DO_APP_FUNC(0x021BB540, void, WebUtility_UrlDecoder__ctor, (WebUtility_UrlDecoder * __this, int32_t bufferSize, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x021BB5E0, void, WebUtility_UrlDecoder_AddChar, (WebUtility_UrlDecoder * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x021BB690, void, WebUtility_UrlDecoder_AddByte, (WebUtility_UrlDecoder * __this, uint8_t b, MethodInfo * method));
DO_APP_FUNC(0x021BB760, String *, WebUtility_UrlDecoder_GetString, (WebUtility_UrlDecoder * __this, MethodInfo * method));
DO_APP_FUNC(0x021BB0F0, uint16_t, WebUtility_HtmlEntities_Lookup, (String * entity, MethodInfo * method));
DO_APP_FUNC(0x021BB360, int64_t, WebUtility_HtmlEntities_CalculateKeyValue, (String * s, MethodInfo * method));
DO_APP_FUNC(0x021BB3F0, void, WebUtility_HtmlEntities__cctor, (MethodInfo * method));
DO_APP_FUNC(0x021BB870, void, WriteStreamClosedEventArgs__ctor, (WriteStreamClosedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Exception *, WriteStreamClosedEventArgs_get_Error, (WriteStreamClosedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, WriteStreamClosedEventHandler__ctor, (WriteStreamClosedEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, WriteStreamClosedEventHandler_Invoke, (WriteStreamClosedEventHandler * __this, Object * sender, WriteStreamClosedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, WriteStreamClosedEventHandler_BeginInvoke, (WriteStreamClosedEventHandler * __this, Object * sender, WriteStreamClosedEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, WriteStreamClosedEventHandler_EndInvoke, (WriteStreamClosedEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x020155B0, void, BufferOffsetSize_1__ctor, (BufferOffsetSize_1 * __this, Byte__Array * buffer, int32_t offset, int32_t size, bool copyBuffer, MethodInfo * method));
DO_APP_FUNC(0x020156A0, void, BufferOffsetSize_1__ctor_1, (BufferOffsetSize_1 * __this, Byte__Array * buffer, bool copyBuffer, MethodInfo * method));
DO_APP_FUNC(0x01D407A0, uint16_t, HttpDateParse_MAKE_UPPER, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x01D40870, int32_t, HttpDateParse_MapDayMonthToDword, (Char__Array * lpszDay, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01D40C30, bool, HttpDateParse_ParseHttpDate, (String * DateString, DateTime * dtOut, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, HeaderParser__ctor, (HeaderParser * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x014347E0, String__Array *, HeaderParser_Invoke, (HeaderParser * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, HeaderParser_BeginInvoke, (HeaderParser * __this, String * value, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, String__Array *, HeaderParser_EndInvoke, (HeaderParser * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01D38EC0, void, HeaderInfo__ctor, (HeaderInfo * __this, String * name, bool requestRestricted, bool responseRestricted, bool multi, HeaderParser * p, MethodInfo * method));
DO_APP_FUNC(0x01D38EE0, String__Array *, HeaderInfoTable_ParseSingleValue, (String * value, MethodInfo * method));
DO_APP_FUNC(0x01D38FD0, String__Array *, HeaderInfoTable_ParseMultiValue, (String * value, MethodInfo * method));
DO_APP_FUNC(0x01D39420, void, HeaderInfoTable__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01D3D1B0, HeaderInfo *, HeaderInfoTable_get_Item, (HeaderInfoTable * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, HeaderInfoTable__ctor, (HeaderInfoTable * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6B520, LazyAsyncResult_ThreadContext *, LazyAsyncResult_get_CurrentThreadContext, (MethodInfo * method));
DO_APP_FUNC(0x01E6B6E0, void, LazyAsyncResult__ctor, (LazyAsyncResult * __this, Object * myObject, Object * myState, AsyncCallback * myCallBack, MethodInfo * method));
DO_APP_FUNC(0x01E6B7C0, void, LazyAsyncResult__ctor_1, (LazyAsyncResult * __this, Object * myObject, Object * myState, AsyncCallback * myCallBack, Object * result, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Object *, LazyAsyncResult_get_AsyncObject, (LazyAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Object *, LazyAsyncResult_get_AsyncState, (LazyAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, AsyncCallback *, LazyAsyncResult_get_AsyncCallback, (LazyAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, LazyAsyncResult_set_AsyncCallback, (LazyAsyncResult * __this, AsyncCallback * value, MethodInfo * method));
DO_APP_FUNC(0x01E6B7F0, WaitHandle *, LazyAsyncResult_get_AsyncWaitHandle, (LazyAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6B8E0, bool, LazyAsyncResult_LazilyCreateEvent, (LazyAsyncResult * __this, ManualResetEvent * * waitHandle, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, LazyAsyncResult_DebugProtectState, (LazyAsyncResult * __this, bool protect, MethodInfo * method));
DO_APP_FUNC(0x01E6BB30, bool, LazyAsyncResult_get_CompletedSynchronously, (LazyAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6BB50, bool, LazyAsyncResult_get_IsCompleted, (LazyAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6BB70, bool, LazyAsyncResult_get_InternalPeekCompleted, (LazyAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6BB80, Object *, LazyAsyncResult_get_Result, (LazyAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB10, void, LazyAsyncResult_set_Result, (LazyAsyncResult * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x004358D0, bool, LazyAsyncResult_get_EndCalled, (LazyAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x00447370, void, LazyAsyncResult_set_EndCalled, (LazyAsyncResult * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00654950, int32_t, LazyAsyncResult_get_ErrorCode, (LazyAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x00654960, void, LazyAsyncResult_set_ErrorCode, (LazyAsyncResult * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01E6BC50, void, LazyAsyncResult_ProtectedInvokeCallback, (LazyAsyncResult * __this, Object * result, void * userToken, MethodInfo * method));
DO_APP_FUNC(0x01E6BE10, void, LazyAsyncResult_InvokeCallback, (LazyAsyncResult * __this, Object * result, MethodInfo * method));
DO_APP_FUNC(0x01E6BEA0, void, LazyAsyncResult_InvokeCallback_1, (LazyAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6BF20, void, LazyAsyncResult_Complete, (LazyAsyncResult * __this, void * userToken, MethodInfo * method));
DO_APP_FUNC(0x01E6C1A0, void, LazyAsyncResult_WorkerThreadComplete, (LazyAsyncResult * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, LazyAsyncResult_Cleanup, (LazyAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6C260, Object *, LazyAsyncResult_InternalWaitForCompletion, (LazyAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6C270, Object *, LazyAsyncResult_WaitForCompletion, (LazyAsyncResult * __this, bool snap, MethodInfo * method));
DO_APP_FUNC(0x01E6C4F0, void, LazyAsyncResult_InternalCleanup, (LazyAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, LazyAsyncResult_ThreadContext__ctor, (LazyAsyncResult_ThreadContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BaseLoggingObject__ctor, (BaseLoggingObject * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BaseLoggingObject_EnterFunc, (BaseLoggingObject * __this, String * funcname, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BaseLoggingObject_LeaveFunc, (BaseLoggingObject * __this, String * funcname, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BaseLoggingObject_DumpArrayToConsole, (BaseLoggingObject * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BaseLoggingObject_PrintLine, (BaseLoggingObject * __this, String * msg, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BaseLoggingObject_DumpArray, (BaseLoggingObject * __this, bool shouldClose, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BaseLoggingObject_DumpArrayToFile, (BaseLoggingObject * __this, bool shouldClose, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BaseLoggingObject_Flush, (BaseLoggingObject * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BaseLoggingObject_Flush_1, (BaseLoggingObject * __this, bool close, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BaseLoggingObject_LoggingMonitorTick, (BaseLoggingObject * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BaseLoggingObject_Dump, (BaseLoggingObject * __this, Byte__Array * buffer, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BaseLoggingObject_Dump_1, (BaseLoggingObject * __this, Byte__Array * buffer, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BaseLoggingObject_Dump_2, (BaseLoggingObject * __this, Byte__Array * buffer, int32_t offset, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BaseLoggingObject_Dump_3, (BaseLoggingObject * __this, void * pBuffer, int32_t offset, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01D383E0, BaseLoggingObject *, GlobalLog_LoggingInitialize, (MethodInfo * method));
DO_APP_FUNC(0x00420EE0, ThreadKinds__Enum, GlobalLog_get_CurrentThreadKind, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, GlobalLog_SetThreadSource, (ThreadKinds__Enum source, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, GlobalLog_ThreadContract, (ThreadKinds__Enum kind, String * errorMsg, MethodInfo * method));
DO_APP_FUNC(0x01D38520, void, GlobalLog_ThreadContract_1, (ThreadKinds__Enum kind, ThreadKinds__Enum allowedSources, String * errorMsg, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, GlobalLog_AddToArray, (String * msg, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, GlobalLog_Ignore, (Object * msg, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, GlobalLog_Print, (String * msg, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, GlobalLog_PrintHex, (String * msg, Object * value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, GlobalLog_Enter, (String * func, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, GlobalLog_Enter_1, (String * func, String * parms, MethodInfo * method));
DO_APP_FUNC(0x01D38600, void, GlobalLog_Assert, (bool condition, String * messageFormat, Object__Array * data, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, GlobalLog_Assert_1, (String * message, MethodInfo * method));
DO_APP_FUNC(0x01D386F0, void, GlobalLog_Assert_2, (String * message, String * detailMessage, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, GlobalLog_LeaveException, (String * func, Exception * exception, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, GlobalLog_Leave, (String * func, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, GlobalLog_Leave_1, (String * func, String * result, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, GlobalLog_Leave_2, (String * func, int32_t returnval, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, GlobalLog_Leave_3, (String * func, bool returnval, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, GlobalLog_DumpArray, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, GlobalLog_Dump, (Byte__Array * buffer, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, GlobalLog_Dump_1, (Byte__Array * buffer, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, GlobalLog_Dump_2, (Byte__Array * buffer, int32_t offset, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, GlobalLog_Dump_3, (void * buffer, int32_t offset, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01D38840, void, GlobalLog__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, NetRes__ctor, (NetRes * __this, MethodInfo * method));
DO_APP_FUNC(0x01E755E0, String *, NetRes_GetWebStatusString, (String * Res, WebExceptionStatus__Enum Status, MethodInfo * method));
DO_APP_FUNC(0x01E75720, String *, NetRes_GetWebStatusString_1, (WebExceptionStatus__Enum Status, MethodInfo * method));
DO_APP_FUNC(0x01E757C0, String *, NetRes_GetWebStatusCodeString, (HttpStatusCode__Enum statusCode, String * statusDescription, MethodInfo * method));
DO_APP_FUNC(0x01E75940, String *, NetRes_GetWebStatusCodeString_1, (FtpStatusCode__Enum statusCode, String * statusDescription, MethodInfo * method));
DO_APP_FUNC(0x01BCBCB0, void, PooledStream__ctor, (PooledStream * __this, Object * owner, MethodInfo * method));
DO_APP_FUNC(0x01BCBF20, void, PooledStream__ctor_1, (PooledStream * __this, ConnectionPool * connectionPool, TimeSpan lifetime, bool checkLifetime, MethodInfo * method));
DO_APP_FUNC(0x01BCC0D0, bool, PooledStream_get_JustConnected, (PooledStream * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, IPAddress *, PooledStream_get_ServerAddress, (PooledStream * __this, MethodInfo * method));
DO_APP_FUNC(0x004F2320, bool, PooledStream_get_IsInitalizing, (PooledStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCC0F0, bool, PooledStream_get_CanBePooled, (PooledStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCC160, void, PooledStream_set_CanBePooled, (PooledStream * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01BCC170, bool, PooledStream_get_IsEmancipated, (PooledStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCC1B0, Object *, PooledStream_get_Owner, (PooledStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCC200, void, PooledStream_set_Owner, (PooledStream * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, ConnectionPool *, PooledStream_get_Pool, (PooledStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCC2F0, ServicePoint *, PooledStream_get_ServicePoint, (PooledStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCC310, bool, PooledStream_Activate, (PooledStream * __this, Object * owningObject, GeneralAsyncDelegate * asyncCallback, MethodInfo * method));
DO_APP_FUNC(0x01BCC340, bool, PooledStream_Activate_1, (PooledStream * __this, Object * owningObject, bool async, GeneralAsyncDelegate * asyncCallback, MethodInfo * method));
DO_APP_FUNC(0x01BCC4A0, void, PooledStream_Deactivate, (PooledStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCC5D0, void, PooledStream_ConnectionCallback, (PooledStream * __this, Object * owningObject, Exception * e, Socket * socket, IPAddress * address, MethodInfo * method));
DO_APP_FUNC(0x01BCC730, void, PooledStream_CheckLifetime, (PooledStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCC840, void, PooledStream_UpdateLifetime, (PooledStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCC890, void, PooledStream_PrePush, (PooledStream * __this, Object * expectedOwner, MethodInfo * method));
DO_APP_FUNC(0x01BCCAC0, void, PooledStream_PostPop, (PooledStream * __this, Object * newOwner, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, PooledStream_get_UsingSecureStream, (PooledStream * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, NetworkStream *, PooledStream_get_NetworkStream, (PooledStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCCDE0, void, PooledStream_set_NetworkStream, (PooledStream * __this, NetworkStream * value, MethodInfo * method));
DO_APP_FUNC(0x01BCCDF0, Socket *, PooledStream_get_Socket, (PooledStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCCEE0, bool, PooledStream_get_CanRead, (PooledStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCCF10, bool, PooledStream_get_CanSeek, (PooledStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCCF40, bool, PooledStream_get_CanWrite, (PooledStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCCF70, bool, PooledStream_get_CanTimeout, (PooledStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCCFA0, int32_t, PooledStream_get_ReadTimeout, (PooledStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCCFD0, void, PooledStream_set_ReadTimeout, (PooledStream * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01BCD000, int32_t, PooledStream_get_WriteTimeout, (PooledStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCD030, void, PooledStream_set_WriteTimeout, (PooledStream * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01BCD060, int64_t, PooledStream_get_Length, (PooledStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCD090, int64_t, PooledStream_get_Position, (PooledStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCD0C0, void, PooledStream_set_Position, (PooledStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01BCD0F0, int64_t, PooledStream_Seek, (PooledStream * __this, int64_t offset, SeekOrigin__Enum origin, MethodInfo * method));
DO_APP_FUNC(0x01BCD120, int32_t, PooledStream_Read, (PooledStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01BCD150, void, PooledStream_Write, (PooledStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01BCD180, void, PooledStream_MultipleWrite, (PooledStream * __this, BufferOffsetSize_1__Array * buffers, MethodInfo * method));
DO_APP_FUNC(0x01BCD1B0, void, PooledStream_Dispose, (PooledStream * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01BCD290, void, PooledStream_CloseSocket, (PooledStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCD300, void, PooledStream_Close, (PooledStream * __this, int32_t timeout, MethodInfo * method));
DO_APP_FUNC(0x01BCD420, IAsyncResult *, PooledStream_BeginRead, (PooledStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BCD450, IAsyncResult *, PooledStream_UnsafeBeginRead, (PooledStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BCD480, int32_t, PooledStream_EndRead, (PooledStream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01BCD4B0, IAsyncResult *, PooledStream_BeginWrite, (PooledStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BCD4E0, IAsyncResult *, PooledStream_UnsafeBeginWrite, (PooledStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BCD510, void, PooledStream_EndWrite, (PooledStream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01BCD540, IAsyncResult *, PooledStream_BeginMultipleWrite, (PooledStream * __this, BufferOffsetSize_1__Array * buffers, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BCD570, void, PooledStream_EndMultipleWrite, (PooledStream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01BCD5A0, void, PooledStream_Flush, (PooledStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCD5D0, Task *, PooledStream_FlushAsync, (PooledStream * __this, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x01BCD600, void, PooledStream_SetLength, (PooledStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01BCD630, void, PooledStream_SetSocketTimeoutOption, (PooledStream * __this, SocketShutdown__Enum mode, int32_t timeout, bool silent, MethodInfo * method));
DO_APP_FUNC(0x01BCD660, bool, PooledStream_Poll, (PooledStream * __this, int32_t microSeconds, SelectMode__Enum mode, MethodInfo * method));
DO_APP_FUNC(0x01BCD7F0, bool, PooledStream_PollRead, (PooledStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCD890, void, ProxyChain__ctor, (ProxyChain * __this, Uri * destination, MethodInfo * method));
DO_APP_FUNC(0x01BCD9F0, IEnumerator_1_System_Uri_ *, ProxyChain_GetEnumerator, (ProxyChain * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCDB50, IEnumerator *, ProxyChain_System_Collections_IEnumerable_GetEnumerator, (ProxyChain * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ProxyChain_Dispose, (ProxyChain * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCDB60, IEnumerator_1_System_Uri_ *, ProxyChain_get_Enumerator, (ProxyChain * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, Uri *, ProxyChain_get_Destination, (ProxyChain * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ProxyChain_Abort, (ProxyChain * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCDB80, bool, ProxyChain_HttpAbort, (ProxyChain * __this, HttpWebRequest * request, WebException * webException, MethodInfo * method));
DO_APP_FUNC(0x01BCDBA0, HttpAbortDelegate *, ProxyChain_get_HttpAbortDelegate, (ProxyChain * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCDD10, void, ProxyChain_ProxyEnumerator__ctor, (ProxyChain_ProxyEnumerator * __this, ProxyChain * chain, MethodInfo * method));
DO_APP_FUNC(0x01BCDD20, Uri *, ProxyChain_ProxyEnumerator_get_Current, (ProxyChain_ProxyEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCDD20, Object *, ProxyChain_ProxyEnumerator_System_Collections_IEnumerator_get_Current, (ProxyChain_ProxyEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCDE20, bool, ProxyChain_ProxyEnumerator_MoveNext, (ProxyChain_ProxyEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCE170, void, ProxyChain_ProxyEnumerator_Reset, (ProxyChain_ProxyEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ProxyChain_ProxyEnumerator_Dispose, (ProxyChain_ProxyEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCE180, void, ProxyScriptChain__ctor, (ProxyScriptChain * __this, WebProxy * proxy, Uri * destination, MethodInfo * method));
DO_APP_FUNC(0x01BCE1B0, bool, ProxyScriptChain_GetNextProxy, (ProxyScriptChain * __this, Uri * * proxy, MethodInfo * method));
DO_APP_FUNC(0x01BCE3F0, void, ProxyScriptChain_Abort, (ProxyScriptChain * __this, MethodInfo * method));
DO_APP_FUNC(0x01EB0B10, void, DirectProxy__ctor, (DirectProxy * __this, Uri * destination, MethodInfo * method));
DO_APP_FUNC(0x01EB0B20, bool, DirectProxy_GetNextProxy, (DirectProxy * __this, Uri * * proxy, MethodInfo * method));
DO_APP_FUNC(0x020A5B70, void, StaticProxy__ctor, (StaticProxy * __this, Uri * destination, Uri * proxy, MethodInfo * method));
DO_APP_FUNC(0x020A5C60, bool, StaticProxy_GetNextProxy, (StaticProxy * __this, Uri * * proxy, MethodInfo * method));
DO_APP_FUNC(0x01BD0570, void, ScatterGatherBuffers__ctor, (ScatterGatherBuffers * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD0580, void, ScatterGatherBuffers__ctor_1, (ScatterGatherBuffers * __this, int64_t totalSize, MethodInfo * method));
DO_APP_FUNC(0x01BD05C0, BufferOffsetSize_1__Array *, ScatterGatherBuffers_GetBuffers, (ScatterGatherBuffers * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD08B0, bool, ScatterGatherBuffers_get_Empty, (ScatterGatherBuffers * __this, MethodInfo * method));
DO_APP_FUNC(0x00529E80, int32_t, ScatterGatherBuffers_get_Length, (ScatterGatherBuffers * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD08D0, void, ScatterGatherBuffers_Write, (ScatterGatherBuffers * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01BD09F0, ScatterGatherBuffers_MemoryChunk *, ScatterGatherBuffers_AllocateMemoryChunk, (ScatterGatherBuffers * __this, int32_t newSize, MethodInfo * method));
DO_APP_FUNC(0x01BD0BD0, void, ScatterGatherBuffers_MemoryChunk__ctor, (ScatterGatherBuffers_MemoryChunk * __this, int32_t bufferSize, MethodInfo * method));
DO_APP_FUNC(0x01BD32D0, void, Semaphore_1__ctor, (Semaphore_1 * __this, int32_t initialCount, int32_t maxCount, MethodInfo * method));
DO_APP_FUNC(0x01BD34A0, bool, Semaphore_1_ReleaseSemaphore, (Semaphore_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD3990, ServiceNameCollection *, ServiceNameStore_get_ServiceNames, (ServiceNameStore * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD3AF0, void, ServiceNameStore__ctor, (ServiceNameStore * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD3C40, bool, ServiceNameStore_AddSingleServiceName, (ServiceNameStore * __this, String * spn, MethodInfo * method));
DO_APP_FUNC(0x01BD3D20, bool, ServiceNameStore_Add, (ServiceNameStore * __this, String * uriPrefix, MethodInfo * method));
DO_APP_FUNC(0x01BD3F20, bool, ServiceNameStore_Remove, (ServiceNameStore * __this, String * uriPrefix, MethodInfo * method));
DO_APP_FUNC(0x01BD40A0, bool, ServiceNameStore_Contains, (ServiceNameStore * __this, String * newServiceName, MethodInfo * method));
DO_APP_FUNC(0x01BD40C0, void, ServiceNameStore_Clear, (ServiceNameStore * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD4170, String *, ServiceNameStore_ExtractHostname, (ServiceNameStore * __this, String * uriPrefix, bool allowInvalidUriStrings, MethodInfo * method));
DO_APP_FUNC(0x01BD43F0, String *, ServiceNameStore_BuildSimpleServiceName, (ServiceNameStore * __this, String * uriPrefix, MethodInfo * method));
DO_APP_FUNC(0x01BD44B0, String__Array *, ServiceNameStore_BuildServiceNames, (ServiceNameStore * __this, String * uriPrefix, MethodInfo * method));
DO_APP_FUNC(0x020A5FD0, void, TimerThread__cctor, (MethodInfo * method));
DO_APP_FUNC(0x020A6780, TimerThread_Queue *, TimerThread_CreateQueue, (int32_t durationMilliseconds, MethodInfo * method));
DO_APP_FUNC(0x020A6D40, TimerThread_Queue *, TimerThread_GetOrCreateQueue, (int32_t durationMilliseconds, MethodInfo * method));
DO_APP_FUNC(0x020A79A0, void, TimerThread_Prod, (MethodInfo * method));
DO_APP_FUNC(0x020A7C30, void, TimerThread_ThreadProc, (MethodInfo * method));
DO_APP_FUNC(0x020A8550, void, TimerThread_StopTimerThread, (MethodInfo * method));
DO_APP_FUNC(0x020A8620, bool, TimerThread_IsTickBetween, (int32_t start, int32_t end, int32_t comparand, MethodInfo * method));
DO_APP_FUNC(0x020A8640, void, TimerThread_OnDomainUnload, (Object * sender, EventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, TimerThread_Queue__ctor, (TimerThread_Queue * __this, int32_t durationMilliseconds, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, TimerThread_Queue_get_Duration, (TimerThread_Queue * __this, MethodInfo * method));
DO_APP_FUNC(0x020A8FA0, TimerThread_Timer *, TimerThread_Queue_CreateTimer, (TimerThread_Queue * __this, MethodInfo * method));
DO_APP_FUNC(0x020A8FC0, void, TimerThread_Timer__ctor, (TimerThread_Timer * __this, int32_t durationMilliseconds, MethodInfo * method));
DO_APP_FUNC(0x00CC59E0, int32_t, TimerThread_Timer_get_Duration, (TimerThread_Timer * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, TimerThread_Timer_get_StartTime, (TimerThread_Timer * __this, MethodInfo * method));
DO_APP_FUNC(0x020A9010, int32_t, TimerThread_Timer_get_Expiration, (TimerThread_Timer * __this, MethodInfo * method));
DO_APP_FUNC(0x020A9020, int32_t, TimerThread_Timer_get_TimeRemaining, (TimerThread_Timer * __this, MethodInfo * method));
DO_APP_FUNC(0x00CC2AF0, void, TimerThread_Timer_Dispose, (TimerThread_Timer * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, TimerThread_Callback__ctor, (TimerThread_Callback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x020A87A0, void, TimerThread_Callback_Invoke, (TimerThread_Callback * __this, TimerThread_Timer * timer, int32_t timeNoticed, Object * context, MethodInfo * method));
DO_APP_FUNC(0x020A8CF0, IAsyncResult *, TimerThread_Callback_BeginInvoke, (TimerThread_Callback * __this, TimerThread_Timer * timer, int32_t timeNoticed, Object * context, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, TimerThread_Callback_EndInvoke, (TimerThread_Callback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x020A96E0, void, TimerThread_TimerQueue__ctor, (TimerThread_TimerQueue * __this, int32_t durationMilliseconds, MethodInfo * method));
DO_APP_FUNC(0x020A9880, TimerThread_Timer *, TimerThread_TimerQueue_CreateTimer, (TimerThread_TimerQueue * __this, TimerThread_Callback * callback, Object * context, MethodInfo * method));
DO_APP_FUNC(0x020A9BF0, bool, TimerThread_TimerQueue_Fire, (TimerThread_TimerQueue * __this, int32_t * nextExpiration, MethodInfo * method));
DO_APP_FUNC(0x01D1D120, void, TimerThread_InfiniteTimerQueue__ctor, (TimerThread_InfiniteTimerQueue * __this, MethodInfo * method));
DO_APP_FUNC(0x020A8E30, TimerThread_Timer *, TimerThread_InfiniteTimerQueue_CreateTimer, (TimerThread_InfiniteTimerQueue * __this, TimerThread_Callback * callback, Object * context, MethodInfo * method));
DO_APP_FUNC(0x020A9190, void, TimerThread_TimerNode__ctor, (TimerThread_TimerNode * __this, TimerThread_Callback * callback, Object * context, int32_t durationMilliseconds, Object * queueLock, MethodInfo * method));
DO_APP_FUNC(0x020A9210, void, TimerThread_TimerNode__ctor_1, (TimerThread_TimerNode * __this, MethodInfo * method));
DO_APP_FUNC(0x020A9270, bool, TimerThread_TimerNode_get_HasExpired, (TimerThread_TimerNode * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, TimerThread_TimerNode *, TimerThread_TimerNode_get_Next, (TimerThread_TimerNode * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9C0, void, TimerThread_TimerNode_set_Next, (TimerThread_TimerNode * __this, TimerThread_TimerNode * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, TimerThread_TimerNode *, TimerThread_TimerNode_get_Prev, (TimerThread_TimerNode * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9E0, void, TimerThread_TimerNode_set_Prev, (TimerThread_TimerNode * __this, TimerThread_TimerNode * value, MethodInfo * method));
DO_APP_FUNC(0x020A9280, bool, TimerThread_TimerNode_Cancel, (TimerThread_TimerNode * __this, MethodInfo * method));
DO_APP_FUNC(0x020A93F0, bool, TimerThread_TimerNode_Fire, (TimerThread_TimerNode * __this, MethodInfo * method));
DO_APP_FUNC(0x020A8DD0, void, TimerThread_InfiniteTimer__ctor, (TimerThread_InfiniteTimer * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, TimerThread_InfiniteTimer_get_HasExpired, (TimerThread_InfiniteTimer * __this, MethodInfo * method));
DO_APP_FUNC(0x020A8E20, bool, TimerThread_InfiniteTimer_Cancel, (TimerThread_InfiniteTimer * __this, MethodInfo * method));
DO_APP_FUNC(0x021B1D30, WebProxyData *, WebProxyDataBuilder_Build, (WebProxyDataBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x021B1E90, void, WebProxyDataBuilder_SetProxyAndBypassList, (WebProxyDataBuilder * __this, String * addressString, String * bypassListString, MethodInfo * method));
DO_APP_FUNC(0x021B2070, void, WebProxyDataBuilder_SetAutoProxyUrl, (WebProxyDataBuilder * __this, String * autoConfigUrl, MethodInfo * method));
DO_APP_FUNC(0x021B2160, void, WebProxyDataBuilder_SetAutoDetectSettings, (WebProxyDataBuilder * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x021B2180, Uri *, WebProxyDataBuilder_ParseProxyUri, (String * proxyString, MethodInfo * method));
DO_APP_FUNC(0x021B2360, Hashtable *, WebProxyDataBuilder_ParseProtocolProxies, (String * proxyListString, MethodInfo * method));
DO_APP_FUNC(0x021B2890, FormatException *, WebProxyDataBuilder_CreateInvalidProxyStringException, (String * originalProxyString, MethodInfo * method));
DO_APP_FUNC(0x021B2A90, String *, WebProxyDataBuilder_BypassStringEscape, (String * rawString, MethodInfo * method));
DO_APP_FUNC(0x021B2FE0, String *, WebProxyDataBuilder_ConvertRegexReservedChars, (String * rawString, MethodInfo * method));
DO_APP_FUNC(0x021B3210, ArrayList *, WebProxyDataBuilder_ParseBypassList, (String * bypassListString, bool * bypassOnLocal, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebProxyDataBuilder__ctor, (WebProxyDataBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, EmptyWebProxy__ctor, (EmptyWebProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x00502220, Uri *, EmptyWebProxy_GetProxy, (EmptyWebProxy * __this, Uri * uri, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, EmptyWebProxy_IsBypassed, (EmptyWebProxy * __this, Uri * uri, MethodInfo * method));
DO_APP_FUNC(0x002FA280, ICredentials *, EmptyWebProxy_get_Credentials, (EmptyWebProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, EmptyWebProxy_set_Credentials, (EmptyWebProxy * __this, ICredentials * value, MethodInfo * method));
DO_APP_FUNC(0x01EB40E0, ProxyChain *, EmptyWebProxy_System_Net_IAutoWebProxy_GetProxies, (EmptyWebProxy * __this, Uri * destination, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, GeneralAsyncDelegate__ctor, (GeneralAsyncDelegate * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x015FE410, void, GeneralAsyncDelegate_Invoke, (GeneralAsyncDelegate * __this, Object * request, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, GeneralAsyncDelegate_BeginInvoke, (GeneralAsyncDelegate * __this, Object * request, Object * state, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, GeneralAsyncDelegate_EndInvoke, (GeneralAsyncDelegate * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, CreateConnectionDelegate__ctor, (CreateConnectionDelegate * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x014347E0, PooledStream *, CreateConnectionDelegate_Invoke, (CreateConnectionDelegate * __this, ConnectionPool * pool, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, CreateConnectionDelegate_BeginInvoke, (CreateConnectionDelegate * __this, ConnectionPool * pool, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, PooledStream *, CreateConnectionDelegate_EndInvoke, (CreateConnectionDelegate * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01E99BC0, Mutex *, ConnectionPool_get_CreationMutex, (ConnectionPool * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99C90, ManualResetEvent *, ConnectionPool_get_ErrorEvent, (ConnectionPool * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99D60, Semaphore_1 *, ConnectionPool_get_Semaphore, (ConnectionPool * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99E30, void, ConnectionPool__ctor, (ConnectionPool * __this, ServicePoint * servicePoint, int32_t maxPoolSize, int32_t minPoolSize, int32_t idleTimeout, CreateConnectionDelegate * createConnectionCallback, MethodInfo * method));
DO_APP_FUNC(0x01E99FA0, void, ConnectionPool_Initialize, (ConnectionPool * __this, MethodInfo * method));
DO_APP_FUNC(0x01E9A700, void, ConnectionPool_QueueRequest, (ConnectionPool * __this, ConnectionPool_AsyncConnectionPoolRequest * asyncRequest, MethodInfo * method));
DO_APP_FUNC(0x01E9AA60, void, ConnectionPool_AsyncThread, (ConnectionPool * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD750, int32_t, ConnectionPool_get_Count, (ConnectionPool * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC00, ServicePoint *, ConnectionPool_get_ServicePoint, (ConnectionPool * __this, MethodInfo * method));
DO_APP_FUNC(0x003FF8B0, int32_t, ConnectionPool_get_MaxPoolSize, (ConnectionPool * __this, MethodInfo * method));
DO_APP_FUNC(0x006DC050, int32_t, ConnectionPool_get_MinPoolSize, (ConnectionPool * __this, MethodInfo * method));
DO_APP_FUNC(0x01E9AEC0, bool, ConnectionPool_get_ErrorOccurred, (ConnectionPool * __this, MethodInfo * method));
DO_APP_FUNC(0x01E9AED0, void, ConnectionPool_CleanupCallbackWrapper, (TimerThread_Timer * timer, int32_t timeNoticed, Object * context, MethodInfo * method));
DO_APP_FUNC(0x01E9B0B0, void, ConnectionPool_ForceCleanup, (ConnectionPool * __this, MethodInfo * method));
DO_APP_FUNC(0x01E9B220, void, ConnectionPool_CleanupCallback, (ConnectionPool * __this, MethodInfo * method));
DO_APP_FUNC(0x01E9B460, PooledStream *, ConnectionPool_Create, (ConnectionPool * __this, CreateConnectionDelegate * createConnectionCallback, MethodInfo * method));
DO_APP_FUNC(0x01E9B6D0, void, ConnectionPool_Destroy, (ConnectionPool * __this, PooledStream * pooledStream, MethodInfo * method));
DO_APP_FUNC(0x01E9B870, void, ConnectionPool_CancelErrorCallbackWrapper, (TimerThread_Timer * timer, int32_t timeNoticed, Object * context, MethodInfo * method));
DO_APP_FUNC(0x01E9B9D0, void, ConnectionPool_CancelErrorCallback, (ConnectionPool * __this, MethodInfo * method));
DO_APP_FUNC(0x01E9BA30, PooledStream *, ConnectionPool_GetFromPool, (ConnectionPool * __this, Object * owningObject, MethodInfo * method));
DO_APP_FUNC(0x01E9BB90, PooledStream *, ConnectionPool_Get, (ConnectionPool * __this, Object * owningObject, int32_t result, bool * continueLoop, WaitHandle__Array * * waitHandles, MethodInfo * method));
DO_APP_FUNC(0x01E9BF00, void, ConnectionPool_Abort, (ConnectionPool * __this, MethodInfo * method));
DO_APP_FUNC(0x01E9C110, PooledStream *, ConnectionPool_GetConnection, (ConnectionPool * __this, Object * owningObject, GeneralAsyncDelegate * asyncCallback, int32_t creationTimeout, MethodInfo * method));
DO_APP_FUNC(0x01E9C470, void, ConnectionPool_PutConnection, (ConnectionPool * __this, PooledStream * pooledStream, Object * owningObject, int32_t creationTimeout, MethodInfo * method));
DO_APP_FUNC(0x01E9C490, void, ConnectionPool_PutConnection_1, (ConnectionPool * __this, PooledStream * pooledStream, Object * owningObject, int32_t creationTimeout, bool canReuse, MethodInfo * method));
DO_APP_FUNC(0x01E9C840, void, ConnectionPool_PutNew, (ConnectionPool * __this, PooledStream * pooledStream, MethodInfo * method));
DO_APP_FUNC(0x01E9C8C0, bool, ConnectionPool_ReclaimEmancipatedObjects, (ConnectionPool * __this, MethodInfo * method));
DO_APP_FUNC(0x01E9CBC0, PooledStream *, ConnectionPool_UserCreateRequest, (ConnectionPool * __this, MethodInfo * method));
DO_APP_FUNC(0x01E9CC20, void, ConnectionPool__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01E9CEA0, void, ConnectionPool_AsyncConnectionPoolRequest__ctor, (ConnectionPool_AsyncConnectionPoolRequest * __this, ConnectionPool * pool, Object * owningObject, GeneralAsyncDelegate * asyncCallback, int32_t creationTimeout, MethodInfo * method));
DO_APP_FUNC(0x01E6A520, void, InterlockedStack__ctor, (InterlockedStack * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6A670, void, InterlockedStack_Push, (InterlockedStack * __this, Object * pooledStream, MethodInfo * method));
DO_APP_FUNC(0x01E6A820, Object *, InterlockedStack_Pop, (InterlockedStack * __this, MethodInfo * method));
DO_APP_FUNC(0x01E9CEC0, void, Cookie__ctor, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x01E9D020, void, Cookie__ctor_1, (Cookie * __this, String * name, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E9D1B0, void, Cookie__ctor_2, (Cookie * __this, String * name, String * value, String * path, MethodInfo * method));
DO_APP_FUNC(0x01E9D1E0, void, Cookie__ctor_3, (Cookie * __this, String * name, String * value, String * path, String * domain, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, Cookie_get_Comment, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x01E9D220, void, Cookie_set_Comment, (Cookie * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Uri *, Cookie_get_CommentUri, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, Cookie_set_CommentUri, (Cookie * __this, Uri * value, MethodInfo * method));
DO_APP_FUNC(0x015CCAD0, bool, Cookie_get_HttpOnly, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x015CCAE0, void, Cookie_set_HttpOnly, (Cookie * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x007EC400, bool, Cookie_get_Discard, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x007EC410, void, Cookie_set_Discard, (Cookie * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, Cookie_get_Domain, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x01E9D2D0, void, Cookie_set_Domain, (Cookie * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E9D390, String *, Cookie_get__Domain, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A050, bool, Cookie_get_DomainImplicit, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A060, void, Cookie_set_DomainImplicit, (Cookie * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01E9D480, bool, Cookie_get_Expired, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x01E9D5A0, void, Cookie_set_Expired, (Cookie * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, DateTime, Cookie_get_Expires, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9C0, void, Cookie_set_Expires, (Cookie * __this, DateTime value, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, String *, Cookie_get_Name, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x01E9D650, void, Cookie_set_Name, (Cookie * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E9D800, bool, Cookie_InternalSetName, (Cookie * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, String *, Cookie_get_Path, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x01E9D940, void, Cookie_set_Path, (Cookie * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E9D9F0, String *, Cookie_get__Path, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC7EC0, bool, Cookie_get_Plain, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x01E9DAB0, Cookie *, Cookie_Clone, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x01E9DCE0, bool, Cookie_IsDomainEqualToHost, (String * domain, String * host, MethodInfo * method));
DO_APP_FUNC(0x01E9DD50, bool, Cookie_VerifySetDefaults, (Cookie * __this, CookieVariant__Enum variant, Uri * uri, bool isLocalDomain, String * localDomain, bool set_default, bool isThrow, MethodInfo * method));
DO_APP_FUNC(0x01E9EE90, bool, Cookie_DomainCharsTest, (String * name, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, String *, Cookie_get_Port, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x01E9EF20, void, Cookie_set_Port, (Cookie * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, Int32__Array *, Cookie_get_PortList, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x01E9F590, String *, Cookie_get__Port, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x00405F50, bool, Cookie_get_Secure, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x00724140, void, Cookie_set_Secure, (Cookie * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FBBE0, DateTime, Cookie_get_TimeStamp, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC00, String *, Cookie_get_Value, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x01E9F680, void, Cookie_set_Value, (Cookie * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, CookieVariant__Enum, Cookie_get_Variant, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1E0, void, Cookie_set_Variant, (Cookie * __this, CookieVariant__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01E9F730, String *, Cookie_get_DomainKey, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x00989BF0, int32_t, Cookie_get_Version, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x01E9F750, void, Cookie_set_Version, (Cookie * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01E9F820, String *, Cookie_get__Version, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x01E9F960, IComparer *, Cookie_GetComparer, (MethodInfo * method));
DO_APP_FUNC(0x01E9FA00, bool, Cookie_Equals, (Cookie * __this, Object * comparand, MethodInfo * method));
DO_APP_FUNC(0x01E9FE10, int32_t, Cookie_GetHashCode, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x01EA0200, String *, Cookie_ToString, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x01EA0970, String *, Cookie_ToServerString, (Cookie * __this, MethodInfo * method));
DO_APP_FUNC(0x01EA0CB0, void, Cookie__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01EA8A40, void, CookieTokenizer__ctor, (CookieTokenizer * __this, String * tokenStream, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, CookieTokenizer_get_EndOfCookie, (CookieTokenizer * __this, MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, CookieTokenizer_set_EndOfCookie, (CookieTokenizer * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01EA8A60, bool, CookieTokenizer_get_Eof, (CookieTokenizer * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, CookieTokenizer_get_Name, (CookieTokenizer * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, CookieTokenizer_set_Name, (CookieTokenizer * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x004F4CE0, bool, CookieTokenizer_get_Quoted, (CookieTokenizer * __this, MethodInfo * method));
DO_APP_FUNC(0x004F4CF0, void, CookieTokenizer_set_Quoted, (CookieTokenizer * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00654950, CookieToken__Enum, CookieTokenizer_get_Token, (CookieTokenizer * __this, MethodInfo * method));
DO_APP_FUNC(0x00654960, void, CookieTokenizer_set_Token, (CookieTokenizer * __this, CookieToken__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, String *, CookieTokenizer_get_Value, (CookieTokenizer * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9E0, void, CookieTokenizer_set_Value, (CookieTokenizer * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01EA8A70, String *, CookieTokenizer_Extract, (CookieTokenizer * __this, MethodInfo * method));
DO_APP_FUNC(0x01EA8B40, CookieToken__Enum, CookieTokenizer_FindNext, (CookieTokenizer * __this, bool ignoreComma, bool ignoreEquals, MethodInfo * method));
DO_APP_FUNC(0x01EA8E20, CookieToken__Enum, CookieTokenizer_Next, (CookieTokenizer * __this, bool first, bool parseResponseCookies, MethodInfo * method));
DO_APP_FUNC(0x01EA8FD0, void, CookieTokenizer_Reset, (CookieTokenizer * __this, MethodInfo * method));
DO_APP_FUNC(0x01EA9090, CookieToken__Enum, CookieTokenizer_TokenFromName, (CookieTokenizer * __this, bool parseResponseCookies, MethodInfo * method));
DO_APP_FUNC(0x01EA9380, void, CookieTokenizer__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0011D2D0, void, CookieTokenizer_RecognizedAttribute__ctor, (CookieTokenizer_RecognizedAttribute__Boxed * __this, String * name, CookieToken__Enum token, MethodInfo * method));
DO_APP_FUNC(0x0010A860, CookieToken__Enum, CookieTokenizer_RecognizedAttribute_get_Token, (CookieTokenizer_RecognizedAttribute__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D7BA0, bool, CookieTokenizer_RecognizedAttribute_IsEqualTo, (CookieTokenizer_RecognizedAttribute__Boxed * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01EA7850, void, CookieParser__ctor, (CookieParser * __this, String * cookieString, MethodInfo * method));
DO_APP_FUNC(0x01EA79B0, Cookie *, CookieParser_Get, (CookieParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01EA8210, Cookie *, CookieParser_GetServer, (CookieParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01EA8950, String *, CookieParser_CheckQuoted, (String * value, MethodInfo * method));
DO_APP_FUNC(0x02017D00, int32_t, Comparer_1_System_Collections_IComparer_Compare, (Comparer_1 * __this, Object * ol, Object * or_1, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Comparer_1__ctor, (Comparer_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01EA0EE0, void, CookieCollection__ctor, (CookieCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01EA1070, void, CookieCollection__ctor_1, (CookieCollection * __this, bool IsReadOnly, MethodInfo * method));
DO_APP_FUNC(0x00F5DF30, bool, CookieCollection_get_IsReadOnly, (CookieCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01EA1200, Cookie *, CookieCollection_get_Item, (CookieCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01EA1320, Cookie *, CookieCollection_get_Item_1, (CookieCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01EA1600, void, CookieCollection_Add, (CookieCollection * __this, Cookie * cookie, MethodInfo * method));
DO_APP_FUNC(0x01EA1720, void, CookieCollection_Add_1, (CookieCollection * __this, CookieCollection * cookies, MethodInfo * method));
DO_APP_FUNC(0x01E1A180, int32_t, CookieCollection_get_Count, (CookieCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, CookieCollection_get_IsSynchronized, (CookieCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, Object *, CookieCollection_get_SyncRoot, (CookieCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01EA1950, void, CookieCollection_CopyTo, (CookieCollection * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01EA1950, void, CookieCollection_CopyTo_1, (CookieCollection * __this, Cookie__Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01EA1980, DateTime, CookieCollection_TimeStamp, (CookieCollection * __this, CookieCollection_Stamp__Enum how, MethodInfo * method));
DO_APP_FUNC(0x004F4CE0, bool, CookieCollection_get_IsOtherVersionSeen, (CookieCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01EA1AE0, int32_t, CookieCollection_InternalAdd, (CookieCollection * __this, Cookie * cookie, bool isStrict, MethodInfo * method));
DO_APP_FUNC(0x01EA1E20, int32_t, CookieCollection_IndexOf, (CookieCollection * __this, Cookie * cookie, MethodInfo * method));
DO_APP_FUNC(0x01EA2060, void, CookieCollection_RemoveAt, (CookieCollection * __this, int32_t idx, MethodInfo * method));
DO_APP_FUNC(0x01EA2090, IEnumerator *, CookieCollection_GetEnumerator, (CookieCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01EA2210, void, CookieCollection_CookieCollectionEnumerator__ctor, (CookieCollection_CookieCollectionEnumerator * __this, CookieCollection * cookies, MethodInfo * method));
DO_APP_FUNC(0x01EA2270, Object *, CookieCollection_CookieCollectionEnumerator_System_Collections_IEnumerator_get_Current, (CookieCollection_CookieCollectionEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01EA23A0, bool, CookieCollection_CookieCollectionEnumerator_System_Collections_IEnumerator_MoveNext, (CookieCollection_CookieCollectionEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01EA24A0, void, CookieCollection_CookieCollectionEnumerator_System_Collections_IEnumerator_Reset, (CookieCollection_CookieCollectionEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0011D2D0, void, HeaderVariantInfo__ctor, (HeaderVariantInfo__Boxed * __this, String * name, CookieVariant__Enum variant, MethodInfo * method));
DO_APP_FUNC(0x00107C00, String *, HeaderVariantInfo_get_Name, (HeaderVariantInfo__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0010A860, CookieVariant__Enum, HeaderVariantInfo_get_Variant, (HeaderVariantInfo__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01EA24B0, void, CookieContainer__ctor, (CookieContainer * __this, MethodInfo * method));
DO_APP_FUNC(0x01EA2680, void, CookieContainer__ctor_1, (CookieContainer * __this, int32_t capacity, MethodInfo * method));
DO_APP_FUNC(0x01EA2760, void, CookieContainer__ctor_2, (CookieContainer * __this, int32_t capacity, int32_t perDomainCapacity, int32_t maxCookieSize, MethodInfo * method));
DO_APP_FUNC(0x0052A010, int32_t, CookieContainer_get_Capacity, (CookieContainer * __this, MethodInfo * method));
DO_APP_FUNC(0x01EA2A00, void, CookieContainer_set_Capacity, (CookieContainer * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x00529E80, int32_t, CookieContainer_get_Count, (CookieContainer * __this, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, CookieContainer_get_MaxCookieSize, (CookieContainer * __this, MethodInfo * method));
DO_APP_FUNC(0x01EA2BC0, void, CookieContainer_set_MaxCookieSize, (CookieContainer * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, int32_t, CookieContainer_get_PerDomainCapacity, (CookieContainer * __this, MethodInfo * method));
DO_APP_FUNC(0x01EA2C80, void, CookieContainer_set_PerDomainCapacity, (CookieContainer * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01EA2D60, void, CookieContainer_Add, (CookieContainer * __this, Cookie * cookie, MethodInfo * method));
DO_APP_FUNC(0x01EA3280, void, CookieContainer_AddRemoveDomain, (CookieContainer * __this, String * key, PathList * value, MethodInfo * method));
DO_APP_FUNC(0x01EA33E0, void, CookieContainer_Add_1, (CookieContainer * __this, Cookie * cookie, bool throwOnError, MethodInfo * method));
DO_APP_FUNC(0x01EA3D20, bool, CookieContainer_AgeCookies, (CookieContainer * __this, String * domain, MethodInfo * method));
DO_APP_FUNC(0x01EA4C40, int32_t, CookieContainer_ExpireCollection, (CookieContainer * __this, CookieCollection * cc, MethodInfo * method));
DO_APP_FUNC(0x01EA4DD0, void, CookieContainer_Add_2, (CookieContainer * __this, CookieCollection * cookies, MethodInfo * method));
DO_APP_FUNC(0x01EA5000, bool, CookieContainer_IsLocalDomain, (CookieContainer * __this, String * host, MethodInfo * method));
DO_APP_FUNC(0x01EA5420, void, CookieContainer_Add_3, (CookieContainer * __this, Uri * uri, Cookie * cookie, MethodInfo * method));
DO_APP_FUNC(0x01EA55C0, void, CookieContainer_Add_4, (CookieContainer * __this, Uri * uri, CookieCollection * cookies, MethodInfo * method));
DO_APP_FUNC(0x01EA58E0, CookieCollection *, CookieContainer_CookieCutter, (CookieContainer * __this, Uri * uri, String * headerName, String * setCookieHeader, bool isThrow, MethodInfo * method));
DO_APP_FUNC(0x01EA6240, CookieCollection *, CookieContainer_GetCookies, (CookieContainer * __this, Uri * uri, MethodInfo * method));
DO_APP_FUNC(0x01EA6320, CookieCollection *, CookieContainer_InternalGetCookies, (CookieContainer * __this, Uri * uri, MethodInfo * method));
DO_APP_FUNC(0x01EA68D0, void, CookieContainer_BuildCookieCollectionFromDomainMatches, (CookieContainer * __this, Uri * uri, bool isSecure, int32_t port, CookieCollection * cookies, List_1_System_String_ * domainAttribute, bool matchOnlyPlainCookie, MethodInfo * method));
DO_APP_FUNC(0x01EA6FB0, void, CookieContainer_MergeUpdateCollections, (CookieContainer * __this, CookieCollection * destination, CookieCollection * source, int32_t port, bool isSecure, bool isPlainOnly, MethodInfo * method));
DO_APP_FUNC(0x01EA71F0, String *, CookieContainer_GetCookieHeader, (CookieContainer * __this, Uri * uri, MethodInfo * method));
DO_APP_FUNC(0x01EA72E0, String *, CookieContainer_GetCookieHeader_1, (CookieContainer * __this, Uri * uri, String * * optCookie2, MethodInfo * method));
DO_APP_FUNC(0x01EA75F0, void, CookieContainer_SetCookies, (CookieContainer * __this, Uri * uri, String * cookieHeader, MethodInfo * method));
DO_APP_FUNC(0x01EA7730, void, CookieContainer__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01BCB300, void, PathList__ctor, (PathList * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCB4B0, int32_t, PathList_get_Count, (PathList * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCB4E0, int32_t, PathList_GetCookiesCount, (PathList * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCB830, ICollection *, PathList_get_Values, (PathList * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCB860, Object *, PathList_get_Item, (PathList * __this, String * s, MethodInfo * method));
DO_APP_FUNC(0x01BCB890, void, PathList_set_Item, (PathList * __this, String * s, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01717520, IEnumerator *, PathList_GetEnumerator, (PathList * __this, MethodInfo * method));
DO_APP_FUNC(0x017173F0, Object *, PathList_get_SyncRoot, (PathList * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCB9C0, int32_t, PathList_PathListComparer_System_Collections_IComparer_Compare, (PathList_PathListComparer * __this, Object * ol, Object * or_1, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, PathList_PathListComparer__ctor, (PathList_PathListComparer * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCBB70, void, PathList_PathListComparer__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01EA7840, void, CookieException__ctor, (CookieException * __this, MethodInfo * method));
DO_APP_FUNC(0x01A1CA20, void, CookieException__ctor_1, (CookieException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01A1CA40, void, CookieException__ctor_2, (CookieException * __this, String * message, Exception * inner, MethodInfo * method));
DO_APP_FUNC(0x01A0FAA0, void, CookieException__ctor_3, (CookieException * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01BCD870, void, CookieException_System_Runtime_Serialization_ISerializable_GetObjectData, (CookieException * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01BCD870, void, CookieException_GetObjectData, (CookieException * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01D27E90, void, FileWebRequest__ctor, (FileWebRequest * __this, Uri * uri, MethodInfo * method));
DO_APP_FUNC(0x01D280C0, void, FileWebRequest__ctor_1, (FileWebRequest * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01D28380, void, FileWebRequest_System_Runtime_Serialization_ISerializable_GetObjectData, (FileWebRequest * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01D283B0, void, FileWebRequest_GetObjectData, (FileWebRequest * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01D285A0, bool, FileWebRequest_get_Aborted, (FileWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, String *, FileWebRequest_get_ConnectionGroupName, (FileWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9C0, void, FileWebRequest_set_ConnectionGroupName, (FileWebRequest * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, int64_t, FileWebRequest_get_ContentLength, (FileWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D285B0, void, FileWebRequest_set_ContentLength, (FileWebRequest * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01D28680, String *, FileWebRequest_get_ContentType, (FileWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D28720, void, FileWebRequest_set_ContentType, (FileWebRequest * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, ICredentials *, FileWebRequest_get_Credentials, (FileWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBA00, void, FileWebRequest_set_Credentials, (FileWebRequest * __this, ICredentials * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, WebHeaderCollection *, FileWebRequest_get_Headers, (FileWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, String *, FileWebRequest_get_Method, (FileWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D287D0, void, FileWebRequest_set_Method, (FileWebRequest * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0051DB40, bool, FileWebRequest_get_PreAuthenticate, (FileWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x008C1CB0, void, FileWebRequest_set_PreAuthenticate, (FileWebRequest * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, IWebProxy *, FileWebRequest_get_Proxy, (FileWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBD0, void, FileWebRequest_set_Proxy, (FileWebRequest * __this, IWebProxy * value, MethodInfo * method));
DO_APP_FUNC(0x007007F0, int32_t, FileWebRequest_get_Timeout, (FileWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D288D0, void, FileWebRequest_set_Timeout, (FileWebRequest * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x002FBC80, Uri *, FileWebRequest_get_RequestUri, (FileWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D289A0, IAsyncResult *, FileWebRequest_BeginGetRequestStream, (FileWebRequest * __this, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01D28E20, IAsyncResult *, FileWebRequest_BeginGetResponse, (FileWebRequest * __this, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01D29170, bool, FileWebRequest_CanGetRequestStream, (FileWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D29220, Stream *, FileWebRequest_EndGetRequestStream, (FileWebRequest * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01D294C0, WebResponse *, FileWebRequest_EndGetResponse, (FileWebRequest * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01D29760, Stream *, FileWebRequest_GetRequestStream, (FileWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D299D0, WebResponse *, FileWebRequest_GetResponse, (FileWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D29C50, void, FileWebRequest_GetRequestStreamCallback, (Object * state, MethodInfo * method));
DO_APP_FUNC(0x01D2A080, void, FileWebRequest_GetResponseCallback, (Object * state, MethodInfo * method));
DO_APP_FUNC(0x01D2A5E0, void, FileWebRequest_UnblockReader, (FileWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2A6C0, bool, FileWebRequest_get_UseDefaultCredentials, (FileWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2A700, void, FileWebRequest_set_UseDefaultCredentials, (FileWebRequest * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01D2A740, void, FileWebRequest_Abort, (FileWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2AB10, void, FileWebRequest__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, FileWebRequestCreator__ctor, (FileWebRequestCreator * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2AD50, WebRequest *, FileWebRequestCreator_Create, (FileWebRequestCreator * __this, Uri * uri, MethodInfo * method));
DO_APP_FUNC(0x01D2BB10, void, FileWebStream__ctor, (FileWebStream * __this, FileWebRequest * request, String * path, FileMode__Enum mode, FileAccess__Enum access, FileShare__Enum sharing, MethodInfo * method));
DO_APP_FUNC(0x01D2BC10, void, FileWebStream__ctor_1, (FileWebStream * __this, FileWebRequest * request, String * path, FileMode__Enum mode, FileAccess__Enum access, FileShare__Enum sharing, int32_t length, bool async, MethodInfo * method));
DO_APP_FUNC(0x01D2BD30, void, FileWebStream_Dispose, (FileWebStream * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01D2BDF0, void, FileWebStream_System_Net_ICloseEx_CloseEx, (FileWebStream * __this, CloseExState__Enum closeState, MethodInfo * method));
DO_APP_FUNC(0x01D2BE40, int32_t, FileWebStream_Read, (FileWebStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01D2BF20, void, FileWebStream_Write, (FileWebStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01D2C000, IAsyncResult *, FileWebStream_BeginRead, (FileWebStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01D2C100, int32_t, FileWebStream_EndRead, (FileWebStream * __this, IAsyncResult * ar, MethodInfo * method));
DO_APP_FUNC(0x01D2C1C0, IAsyncResult *, FileWebStream_BeginWrite, (FileWebStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01D2C2C0, void, FileWebStream_EndWrite, (FileWebStream * __this, IAsyncResult * ar, MethodInfo * method));
DO_APP_FUNC(0x01D2C380, void, FileWebStream_CheckError, (FileWebStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2AEA0, void, FileWebResponse__ctor, (FileWebResponse * __this, FileWebRequest * request, Uri * uri, FileAccess__Enum access, bool asyncHint, MethodInfo * method));
DO_APP_FUNC(0x01D2B360, void, FileWebResponse__ctor_1, (FileWebResponse * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01D28380, void, FileWebResponse_System_Runtime_Serialization_ISerializable_GetObjectData, (FileWebResponse * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01D2B540, void, FileWebResponse_GetObjectData, (FileWebResponse * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01D2B6A0, int64_t, FileWebResponse_get_ContentLength, (FileWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2B6C0, String *, FileWebResponse_get_ContentType, (FileWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2B750, WebHeaderCollection *, FileWebResponse_get_Headers, (FileWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, FileWebResponse_get_SupportsHeaders, (FileWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2B770, Uri *, FileWebResponse_get_ResponseUri, (FileWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2B790, void, FileWebResponse_CheckDisposed, (FileWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2B870, void, FileWebResponse_Close, (FileWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2B900, void, FileWebResponse_System_Net_ICloseEx_CloseEx, (FileWebResponse * __this, CloseExState__Enum closeState, MethodInfo * method));
DO_APP_FUNC(0x01D2BA80, Stream *, FileWebResponse_GetResponseStream, (FileWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x02010F00, void, Base64Stream__ctor, (Base64Stream * __this, Stream * stream, Base64WriteStateInfo * writeStateInfo, MethodInfo * method));
DO_APP_FUNC(0x02011110, void, Base64Stream__ctor_1, (Base64Stream * __this, Stream * stream, int32_t lineLength, MethodInfo * method));
DO_APP_FUNC(0x02011300, void, Base64Stream__ctor_2, (Base64Stream * __this, Base64WriteStateInfo * writeStateInfo, MethodInfo * method));
DO_APP_FUNC(0x01706DA0, bool, Base64Stream_get_CanWrite, (Base64Stream * __this, MethodInfo * method));
DO_APP_FUNC(0x020113C0, Base64Stream_ReadStateInfo *, Base64Stream_get_ReadState, (Base64Stream * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, Base64WriteStateInfo *, Base64Stream_get_WriteState, (Base64Stream * __this, MethodInfo * method));
DO_APP_FUNC(0x02011510, IAsyncResult *, Base64Stream_BeginRead, (Base64Stream * __this, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x02011760, IAsyncResult *, Base64Stream_BeginWrite, (Base64Stream * __this, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x020119B0, void, Base64Stream_Close, (Base64Stream * __this, MethodInfo * method));
DO_APP_FUNC(0x02011D60, int32_t, Base64Stream_DecodeBytes, (Base64Stream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02012090, int32_t, Base64Stream_EncodeBytes, (Base64Stream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x020120C0, int32_t, Base64Stream_EncodeBytes_1, (Base64Stream * __this, Byte__Array * buffer, int32_t offset, int32_t count, bool dontDeferFinalBytes, bool shouldAppendSpaceToCRLF, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, Stream *, Base64Stream_GetStream, (Base64Stream * __this, MethodInfo * method));
DO_APP_FUNC(0x02012F90, String *, Base64Stream_GetEncodedString, (Base64Stream * __this, MethodInfo * method));
DO_APP_FUNC(0x02012FF0, int32_t, Base64Stream_EndRead, (Base64Stream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x02013180, void, Base64Stream_EndWrite, (Base64Stream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x02013340, void, Base64Stream_Flush, (Base64Stream * __this, MethodInfo * method));
DO_APP_FUNC(0x02013390, void, Base64Stream_FlushInternal, (Base64Stream * __this, MethodInfo * method));
DO_APP_FUNC(0x020134D0, int32_t, Base64Stream_Read, (Base64Stream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02013740, void, Base64Stream_Write, (Base64Stream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02013900, void, Base64Stream__cctor, (MethodInfo * method));
DO_APP_FUNC(0x020139E0, void, Base64Stream_ReadAsyncResult__ctor, (Base64Stream_ReadAsyncResult * __this, Base64Stream * parent, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x02013A50, bool, Base64Stream_ReadAsyncResult_CompleteRead, (Base64Stream_ReadAsyncResult * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x02013AE0, void, Base64Stream_ReadAsyncResult_Read, (Base64Stream_ReadAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x02013D80, void, Base64Stream_ReadAsyncResult_OnRead, (IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x02013F10, int32_t, Base64Stream_ReadAsyncResult_End, (IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x02013FF0, void, Base64Stream_ReadAsyncResult__cctor, (MethodInfo * method));
DO_APP_FUNC(0x020139E0, void, Base64Stream_WriteAsyncResult__ctor, (Base64Stream_WriteAsyncResult * __this, Base64Stream * parent, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x02014150, void, Base64Stream_WriteAsyncResult_Write, (Base64Stream_WriteAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x02014420, void, Base64Stream_WriteAsyncResult_CompleteWrite, (Base64Stream_WriteAsyncResult * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x02014490, void, Base64Stream_WriteAsyncResult_OnWrite, (IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x02014620, void, Base64Stream_WriteAsyncResult_End, (IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x02014740, void, Base64Stream_WriteAsyncResult__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0052B590, uint8_t, Base64Stream_ReadStateInfo_get_Val, (Base64Stream_ReadStateInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, Base64Stream_ReadStateInfo_set_Val, (Base64Stream_ReadStateInfo * __this, uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x00504D80, uint8_t, Base64Stream_ReadStateInfo_get_Pos, (Base64Stream_ReadStateInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0052C660, void, Base64Stream_ReadStateInfo_set_Pos, (Base64Stream_ReadStateInfo * __this, uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Base64Stream_ReadStateInfo__ctor, (Base64Stream_ReadStateInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02017B50, void, ClosableStream__ctor, (ClosableStream * __this, Stream * stream, EventHandler * onClose, MethodInfo * method));
DO_APP_FUNC(0x02017B80, void, ClosableStream_Close, (ClosableStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01EACA50, void, DelegatedStream__ctor, (DelegatedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01EACAE0, void, DelegatedStream__ctor_1, (DelegatedStream * __this, Stream * stream, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, Stream *, DelegatedStream_get_BaseStream, (DelegatedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01706D40, bool, DelegatedStream_get_CanRead, (DelegatedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01706D70, bool, DelegatedStream_get_CanSeek, (DelegatedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01706DA0, bool, DelegatedStream_get_CanWrite, (DelegatedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01EACC00, int64_t, DelegatedStream_get_Length, (DelegatedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01EACCF0, int64_t, DelegatedStream_get_Position, (DelegatedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01EACDE0, void, DelegatedStream_set_Position, (DelegatedStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01EACEE0, IAsyncResult *, DelegatedStream_BeginRead, (DelegatedStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01EAD060, IAsyncResult *, DelegatedStream_BeginWrite, (DelegatedStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01EAD1E0, void, DelegatedStream_Close, (DelegatedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01EAD210, int32_t, DelegatedStream_EndRead, (DelegatedStream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01EAD310, void, DelegatedStream_EndWrite, (DelegatedStream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01706BF0, void, DelegatedStream_Flush, (DelegatedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD2820, Task *, DelegatedStream_FlushAsync, (DelegatedStream * __this, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x01EAD410, int32_t, DelegatedStream_Read, (DelegatedStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01EAD530, Task_1_System_Int32_ *, DelegatedStream_ReadAsync, (DelegatedStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x01EAD650, int64_t, DelegatedStream_Seek, (DelegatedStream * __this, int64_t offset, SeekOrigin__Enum origin, MethodInfo * method));
DO_APP_FUNC(0x01EAD760, void, DelegatedStream_SetLength, (DelegatedStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01EAD860, void, DelegatedStream_Write, (DelegatedStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01EAD980, Task *, DelegatedStream_WriteAsync, (DelegatedStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x020A9E30, void, TrackingStringDictionary__ctor, (TrackingStringDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x020A9E50, void, TrackingStringDictionary__ctor_1, (TrackingStringDictionary * __this, bool isReadOnly, MethodInfo * method));
DO_APP_FUNC(0x0052A280, bool, TrackingStringDictionary_get_IsChanged, (TrackingStringDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x00533150, void, TrackingStringDictionary_set_IsChanged, (TrackingStringDictionary * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x020A9E80, void, TrackingStringDictionary_Add, (TrackingStringDictionary * __this, String * key, String * value, MethodInfo * method));
DO_APP_FUNC(0x020A9F60, void, TrackingStringDictionary_Clear, (TrackingStringDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x020AA050, void, TrackingStringDictionary_Remove, (TrackingStringDictionary * __this, String * key, MethodInfo * method));
DO_APP_FUNC(0x020AA130, String *, TrackingStringDictionary_get_Item, (TrackingStringDictionary * __this, String * key, MethodInfo * method));
DO_APP_FUNC(0x020AA140, void, TrackingStringDictionary_set_Item, (TrackingStringDictionary * __this, String * key, String * value, MethodInfo * method));
DO_APP_FUNC(0x020AA220, void, TrackingValidationObjectDictionary__ctor, (TrackingValidationObjectDictionary * __this, IDictionary_2_System_String_System_Net_TrackingValidationObjectDictionary_ValidateAndParseValue_ * validators, MethodInfo * method));
DO_APP_FUNC(0x020AA250, void, TrackingValidationObjectDictionary_PersistValue, (TrackingValidationObjectDictionary * __this, String * key, String * value, bool addValue, MethodInfo * method));
DO_APP_FUNC(0x004F4CE0, bool, TrackingValidationObjectDictionary_get_IsChanged, (TrackingValidationObjectDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x004F4CF0, void, TrackingValidationObjectDictionary_set_IsChanged, (TrackingValidationObjectDictionary * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x020AA5C0, Object *, TrackingValidationObjectDictionary_InternalGet, (TrackingValidationObjectDictionary * __this, String * key, MethodInfo * method));
DO_APP_FUNC(0x020AA6A0, void, TrackingValidationObjectDictionary_InternalSet, (TrackingValidationObjectDictionary * __this, String * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x020AA130, String *, TrackingValidationObjectDictionary_get_Item, (TrackingValidationObjectDictionary * __this, String * key, MethodInfo * method));
DO_APP_FUNC(0x020AA890, void, TrackingValidationObjectDictionary_set_Item, (TrackingValidationObjectDictionary * __this, String * key, String * value, MethodInfo * method));
DO_APP_FUNC(0x020AA8B0, void, TrackingValidationObjectDictionary_Add, (TrackingValidationObjectDictionary * __this, String * key, String * value, MethodInfo * method));
DO_APP_FUNC(0x020AA8D0, void, TrackingValidationObjectDictionary_Clear, (TrackingValidationObjectDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x020AA980, void, TrackingValidationObjectDictionary_Remove, (TrackingValidationObjectDictionary * __this, String * key, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, TrackingValidationObjectDictionary_ValidateAndParseValue__ctor, (TrackingValidationObjectDictionary_ValidateAndParseValue * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01852930, Object *, TrackingValidationObjectDictionary_ValidateAndParseValue_Invoke, (TrackingValidationObjectDictionary_ValidateAndParseValue * __this, Object * valueToValidate, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, TrackingValidationObjectDictionary_ValidateAndParseValue_BeginInvoke, (TrackingValidationObjectDictionary_ValidateAndParseValue * __this, Object * valueToValidate, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, Object *, TrackingValidationObjectDictionary_ValidateAndParseValue_EndInvoke, (TrackingValidationObjectDictionary_ValidateAndParseValue * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x020AD8D0, void, WebClient__ctor, (WebClient * __this, MethodInfo * method));
DO_APP_FUNC(0x020AD9F0, void, WebClient_InitWebClientAsync, (WebClient * __this, MethodInfo * method));
DO_APP_FUNC(0x020AE460, void, WebClient_ClearWebClientState, (WebClient * __this, MethodInfo * method));
DO_APP_FUNC(0x020AE580, void, WebClient_CompleteWebClientState, (WebClient * __this, MethodInfo * method));
DO_APP_FUNC(0x0061E2F0, bool, WebClient_get_AllowReadStreamBuffering, (WebClient * __this, MethodInfo * method));
DO_APP_FUNC(0x0061E2E0, void, WebClient_set_AllowReadStreamBuffering, (WebClient * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00CA2550, bool, WebClient_get_AllowWriteStreamBuffering, (WebClient * __this, MethodInfo * method));
DO_APP_FUNC(0x00CA2560, void, WebClient_set_AllowWriteStreamBuffering, (WebClient * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebClient_add_WriteStreamClosed, (WebClient * __this, WriteStreamClosedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebClient_remove_WriteStreamClosed, (WebClient * __this, WriteStreamClosedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebClient_OnWriteStreamClosed, (WebClient * __this, WriteStreamClosedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, Encoding *, WebClient_get_Encoding, (WebClient * __this, MethodInfo * method));
DO_APP_FUNC(0x020AE590, void, WebClient_set_Encoding, (WebClient * __this, Encoding * value, MethodInfo * method));
DO_APP_FUNC(0x020AE650, String *, WebClient_get_BaseAddress, (WebClient * __this, MethodInfo * method));
DO_APP_FUNC(0x020AE730, void, WebClient_set_BaseAddress, (WebClient * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB990, ICredentials *, WebClient_get_Credentials, (WebClient * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9A0, void, WebClient_set_Credentials, (WebClient * __this, ICredentials * value, MethodInfo * method));
DO_APP_FUNC(0x020AE910, bool, WebClient_get_UseDefaultCredentials, (WebClient * __this, MethodInfo * method));
DO_APP_FUNC(0x020AE9E0, void, WebClient_set_UseDefaultCredentials, (WebClient * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x020AEA10, WebHeaderCollection *, WebClient_get_Headers, (WebClient * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9C0, void, WebClient_set_Headers, (WebClient * __this, WebHeaderCollection * value, MethodInfo * method));
DO_APP_FUNC(0x020AEB70, NameValueCollection *, WebClient_get_QueryString, (WebClient * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9E0, void, WebClient_set_QueryString, (WebClient * __this, NameValueCollection * value, MethodInfo * method));
DO_APP_FUNC(0x020AECD0, WebHeaderCollection *, WebClient_get_ResponseHeaders, (WebClient * __this, MethodInfo * method));
DO_APP_FUNC(0x020AECF0, IWebProxy *, WebClient_get_Proxy, (WebClient * __this, MethodInfo * method));
DO_APP_FUNC(0x020AEDA0, void, WebClient_set_Proxy, (WebClient * __this, IWebProxy * value, MethodInfo * method));
DO_APP_FUNC(0x002FBC40, RequestCachePolicy *, WebClient_get_CachePolicy, (WebClient * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC50, void, WebClient_set_CachePolicy, (WebClient * __this, RequestCachePolicy * value, MethodInfo * method));
DO_APP_FUNC(0x020AEDB0, bool, WebClient_get_IsBusy, (WebClient * __this, MethodInfo * method));
DO_APP_FUNC(0x020AEDC0, WebRequest *, WebClient_GetWebRequest, (WebClient * __this, Uri * address, MethodInfo * method));
DO_APP_FUNC(0x020AEF60, WebResponse *, WebClient_GetWebResponse, (WebClient * __this, WebRequest * request, MethodInfo * method));
DO_APP_FUNC(0x020AEFA0, WebResponse *, WebClient_GetWebResponse_1, (WebClient * __this, WebRequest * request, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x020AEFE0, Byte__Array *, WebClient_DownloadData, (WebClient * __this, String * address, MethodInfo * method));
DO_APP_FUNC(0x020AF0B0, Byte__Array *, WebClient_DownloadData_1, (WebClient * __this, Uri * address, MethodInfo * method));
DO_APP_FUNC(0x020AF260, Byte__Array *, WebClient_DownloadDataInternal, (WebClient * __this, Uri * address, WebRequest * * request, MethodInfo * method));
DO_APP_FUNC(0x020AF440, void, WebClient_DownloadFile, (WebClient * __this, String * address, String * fileName, MethodInfo * method));
DO_APP_FUNC(0x020AF520, void, WebClient_DownloadFile_1, (WebClient * __this, Uri * address, String * fileName, MethodInfo * method));
DO_APP_FUNC(0x020AF980, Stream *, WebClient_OpenRead, (WebClient * __this, String * address, MethodInfo * method));
DO_APP_FUNC(0x020AFA50, Stream *, WebClient_OpenRead_1, (WebClient * __this, Uri * address, MethodInfo * method));
DO_APP_FUNC(0x020AFD50, Stream *, WebClient_OpenWrite, (WebClient * __this, String * address, MethodInfo * method));
DO_APP_FUNC(0x020AFE30, Stream *, WebClient_OpenWrite_1, (WebClient * __this, Uri * address, MethodInfo * method));
DO_APP_FUNC(0x020AFE40, Stream *, WebClient_OpenWrite_2, (WebClient * __this, String * address, String * method_1, MethodInfo * method));
DO_APP_FUNC(0x020AFF20, Stream *, WebClient_OpenWrite_3, (WebClient * __this, Uri * address, String * method_1, MethodInfo * method));
DO_APP_FUNC(0x020B0300, Byte__Array *, WebClient_UploadData, (WebClient * __this, String * address, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x020B03F0, Byte__Array *, WebClient_UploadData_1, (WebClient * __this, Uri * address, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x020B0410, Byte__Array *, WebClient_UploadData_2, (WebClient * __this, String * address, String * method_1, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x020B0510, Byte__Array *, WebClient_UploadData_3, (WebClient * __this, Uri * address, String * method_1, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x020B0750, Byte__Array *, WebClient_UploadDataInternal, (WebClient * __this, Uri * address, String * method_1, Byte__Array * data, WebRequest * * request, MethodInfo * method));
DO_APP_FUNC(0x020B0970, void, WebClient_OpenFileInternal, (WebClient * __this, bool needsHeaderAndBoundary, String * fileName, FileStream * * fs, Byte__Array * * buffer, Byte__Array * * formHeaderBytes, Byte__Array * * boundaryBytes, MethodInfo * method));
DO_APP_FUNC(0x020B1330, Byte__Array *, WebClient_UploadFile, (WebClient * __this, String * address, String * fileName, MethodInfo * method));
DO_APP_FUNC(0x020B1420, Byte__Array *, WebClient_UploadFile_1, (WebClient * __this, Uri * address, String * fileName, MethodInfo * method));
DO_APP_FUNC(0x020B1440, Byte__Array *, WebClient_UploadFile_2, (WebClient * __this, String * address, String * method_1, String * fileName, MethodInfo * method));
DO_APP_FUNC(0x020B1490, Byte__Array *, WebClient_UploadFile_3, (WebClient * __this, Uri * address, String * method_1, String * fileName, MethodInfo * method));
DO_APP_FUNC(0x020B1900, Byte__Array *, WebClient_UploadValuesInternal, (WebClient * __this, NameValueCollection * data, MethodInfo * method));
DO_APP_FUNC(0x020B1E40, Byte__Array *, WebClient_UploadValues, (WebClient * __this, String * address, NameValueCollection * data, MethodInfo * method));
DO_APP_FUNC(0x020B1F30, Byte__Array *, WebClient_UploadValues_1, (WebClient * __this, Uri * address, NameValueCollection * data, MethodInfo * method));
DO_APP_FUNC(0x020B1F50, Byte__Array *, WebClient_UploadValues_2, (WebClient * __this, String * address, String * method_1, NameValueCollection * data, MethodInfo * method));
DO_APP_FUNC(0x020B2050, Byte__Array *, WebClient_UploadValues_3, (WebClient * __this, Uri * address, String * method_1, NameValueCollection * data, MethodInfo * method));
DO_APP_FUNC(0x020B23E0, String *, WebClient_UploadString, (WebClient * __this, String * address, String * data, MethodInfo * method));
DO_APP_FUNC(0x020B24D0, String *, WebClient_UploadString_1, (WebClient * __this, Uri * address, String * data, MethodInfo * method));
DO_APP_FUNC(0x020B24F0, String *, WebClient_UploadString_2, (WebClient * __this, String * address, String * method_1, String * data, MethodInfo * method));
DO_APP_FUNC(0x020B25F0, String *, WebClient_UploadString_3, (WebClient * __this, Uri * address, String * method_1, String * data, MethodInfo * method));
DO_APP_FUNC(0x020B2860, String *, WebClient_DownloadString, (WebClient * __this, String * address, MethodInfo * method));
DO_APP_FUNC(0x020B2930, String *, WebClient_DownloadString_1, (WebClient * __this, Uri * address, MethodInfo * method));
DO_APP_FUNC(0x020B2AF0, void, WebClient_AbortRequest, (WebRequest * request, MethodInfo * method));
DO_APP_FUNC(0x020B2BF0, void, WebClient_CopyHeadersTo, (WebClient * __this, WebRequest * request, MethodInfo * method));
DO_APP_FUNC(0x020B33C0, Uri *, WebClient_GetUri, (WebClient * __this, String * path, MethodInfo * method));
DO_APP_FUNC(0x020B3760, Uri *, WebClient_GetUri_1, (WebClient * __this, Uri * address, MethodInfo * method));
DO_APP_FUNC(0x020B3E70, void, WebClient_DownloadBitsResponseCallback, (IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x020B4250, void, WebClient_DownloadBitsReadCallback, (IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x020B4350, void, WebClient_DownloadBitsReadCallbackState, (WebClient_DownloadBitsState * state, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x020B4730, Byte__Array *, WebClient_DownloadBits, (WebClient * __this, WebRequest * request, Stream * writeStream, CompletionDelegate * completionDelegate, AsyncOperation * asyncOp, MethodInfo * method));
DO_APP_FUNC(0x020B4A40, void, WebClient_UploadBitsRequestCallback, (IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x020B4E00, void, WebClient_UploadBitsWriteCallback, (IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x020B5210, void, WebClient_UploadBits, (WebClient * __this, WebRequest * request, Stream * readStream, Byte__Array * buffer, int32_t chunkSize, Byte__Array * header, Byte__Array * footer, CompletionDelegate * uploadCompletionDelegate, CompletionDelegate * downloadCompletionDelegate, AsyncOperation * asyncOp, MethodInfo * method));
DO_APP_FUNC(0x020B5650, bool, WebClient_ByteArrayHasPrefix, (WebClient * __this, Byte__Array * prefix, Byte__Array * byteArray, MethodInfo * method));
DO_APP_FUNC(0x020B56D0, String *, WebClient_GetStringUsingEncoding, (WebClient * __this, WebRequest * request, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x020B5BF0, String *, WebClient_MapToDefaultMethod, (WebClient * __this, Uri * address, MethodInfo * method));
DO_APP_FUNC(0x020B5E40, String *, WebClient_UrlEncode, (String * str, MethodInfo * method));
DO_APP_FUNC(0x020B5EF0, String *, WebClient_UrlEncode_1, (String * str, Encoding * e, MethodInfo * method));
DO_APP_FUNC(0x020B5FA0, Byte__Array *, WebClient_UrlEncodeToBytes, (String * str, Encoding * e, MethodInfo * method));
DO_APP_FUNC(0x020B6000, Byte__Array *, WebClient_UrlEncodeBytesToBytesInternal, (Byte__Array * bytes, int32_t offset, int32_t count, bool alwaysCreateReturnValue, MethodInfo * method));
DO_APP_FUNC(0x020B6310, uint16_t, WebClient_IntToHex, (int32_t n, MethodInfo * method));
DO_APP_FUNC(0x020B6320, bool, WebClient_IsSafe, (uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x020B63A0, void, WebClient_InvokeOperationCompleted, (WebClient * __this, AsyncOperation * asyncOp, SendOrPostCallback * callback, AsyncCompletedEventArgs * eventArgs, MethodInfo * method));
DO_APP_FUNC(0x020B6400, bool, WebClient_AnotherCallInProgress, (WebClient * __this, int32_t callNesting, MethodInfo * method));
DO_APP_FUNC(0x020B6410, void, WebClient_add_OpenReadCompleted, (WebClient * __this, OpenReadCompletedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x020B6500, void, WebClient_remove_OpenReadCompleted, (WebClient * __this, OpenReadCompletedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x017F0830, void, WebClient_OnOpenReadCompleted, (WebClient * __this, OpenReadCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x020B65F0, void, WebClient_OpenReadOperationCompleted, (WebClient * __this, Object * arg, MethodInfo * method));
DO_APP_FUNC(0x020B66E0, void, WebClient_OpenReadAsyncCallback, (WebClient * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x020B6C90, void, WebClient_OpenReadAsync, (WebClient * __this, Uri * address, MethodInfo * method));
DO_APP_FUNC(0x020B6CA0, void, WebClient_OpenReadAsync_1, (WebClient * __this, Uri * address, Object * userToken, MethodInfo * method));
DO_APP_FUNC(0x020B71D0, void, WebClient_add_OpenWriteCompleted, (WebClient * __this, OpenWriteCompletedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x020B72C0, void, WebClient_remove_OpenWriteCompleted, (WebClient * __this, OpenWriteCompletedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x020B73B0, void, WebClient_OnOpenWriteCompleted, (WebClient * __this, OpenWriteCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x020B73D0, void, WebClient_OpenWriteOperationCompleted, (WebClient * __this, Object * arg, MethodInfo * method));
DO_APP_FUNC(0x020B74C0, void, WebClient_OpenWriteAsyncCallback, (WebClient * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x020B79D0, void, WebClient_OpenWriteAsync, (WebClient * __this, Uri * address, MethodInfo * method));
DO_APP_FUNC(0x020B79F0, void, WebClient_OpenWriteAsync_1, (WebClient * __this, Uri * address, String * method_1, MethodInfo * method));
DO_APP_FUNC(0x020B7A10, void, WebClient_OpenWriteAsync_2, (WebClient * __this, Uri * address, String * method_1, Object * userToken, MethodInfo * method));
DO_APP_FUNC(0x020B7F60, void, WebClient_add_DownloadStringCompleted, (WebClient * __this, DownloadStringCompletedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x020B8050, void, WebClient_remove_DownloadStringCompleted, (WebClient * __this, DownloadStringCompletedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x020B8140, void, WebClient_OnDownloadStringCompleted, (WebClient * __this, DownloadStringCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x020B8160, void, WebClient_DownloadStringOperationCompleted, (WebClient * __this, Object * arg, MethodInfo * method));
DO_APP_FUNC(0x020B8250, void, WebClient_DownloadStringAsyncCallback, (WebClient * __this, Byte__Array * returnBytes, Exception * exception, Object * state, MethodInfo * method));
DO_APP_FUNC(0x020B8500, void, WebClient_DownloadStringAsync, (WebClient * __this, Uri * address, MethodInfo * method));
DO_APP_FUNC(0x020B8510, void, WebClient_DownloadStringAsync_1, (WebClient * __this, Uri * address, Object * userToken, MethodInfo * method));
DO_APP_FUNC(0x020B8930, void, WebClient_add_DownloadDataCompleted, (WebClient * __this, DownloadDataCompletedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x020B8A20, void, WebClient_remove_DownloadDataCompleted, (WebClient * __this, DownloadDataCompletedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x020B8B10, void, WebClient_OnDownloadDataCompleted, (WebClient * __this, DownloadDataCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x020B8B30, void, WebClient_DownloadDataOperationCompleted, (WebClient * __this, Object * arg, MethodInfo * method));
DO_APP_FUNC(0x020B8C20, void, WebClient_DownloadDataAsyncCallback, (WebClient * __this, Byte__Array * returnBytes, Exception * exception, Object * state, MethodInfo * method));
DO_APP_FUNC(0x020B8E20, void, WebClient_DownloadDataAsync, (WebClient * __this, Uri * address, MethodInfo * method));
DO_APP_FUNC(0x020B8E30, void, WebClient_DownloadDataAsync_1, (WebClient * __this, Uri * address, Object * userToken, MethodInfo * method));
DO_APP_FUNC(0x020B9250, void, WebClient_add_DownloadFileCompleted, (WebClient * __this, AsyncCompletedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x020B9340, void, WebClient_remove_DownloadFileCompleted, (WebClient * __this, AsyncCompletedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x020B9430, void, WebClient_OnDownloadFileCompleted, (WebClient * __this, AsyncCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x020B9450, void, WebClient_DownloadFileOperationCompleted, (WebClient * __this, Object * arg, MethodInfo * method));
DO_APP_FUNC(0x020B9540, void, WebClient_DownloadFileAsyncCallback, (WebClient * __this, Byte__Array * returnBytes, Exception * exception, Object * state, MethodInfo * method));
DO_APP_FUNC(0x020B9730, void, WebClient_DownloadFileAsync, (WebClient * __this, Uri * address, String * fileName, MethodInfo * method));
DO_APP_FUNC(0x020B9750, void, WebClient_DownloadFileAsync_1, (WebClient * __this, Uri * address, String * fileName, Object * userToken, MethodInfo * method));
DO_APP_FUNC(0x020B9CD0, void, WebClient_add_UploadStringCompleted, (WebClient * __this, UploadStringCompletedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x020B9DC0, void, WebClient_remove_UploadStringCompleted, (WebClient * __this, UploadStringCompletedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x020B9EB0, void, WebClient_OnUploadStringCompleted, (WebClient * __this, UploadStringCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x020B9ED0, void, WebClient_UploadStringOperationCompleted, (WebClient * __this, Object * arg, MethodInfo * method));
DO_APP_FUNC(0x020B9FC0, void, WebClient_StartDownloadAsync, (WebClient * __this, WebClient_UploadBitsState * state, MethodInfo * method));
DO_APP_FUNC(0x020BA250, void, WebClient_UploadStringAsyncWriteCallback, (WebClient * __this, Byte__Array * returnBytes, Exception * exception, Object * state, MethodInfo * method));
DO_APP_FUNC(0x020BA4B0, void, WebClient_UploadStringAsyncReadCallback, (WebClient * __this, Byte__Array * returnBytes, Exception * exception, Object * state, MethodInfo * method));
DO_APP_FUNC(0x020BA760, void, WebClient_UploadStringAsync, (WebClient * __this, Uri * address, String * data, MethodInfo * method));
DO_APP_FUNC(0x020BA780, void, WebClient_UploadStringAsync_1, (WebClient * __this, Uri * address, String * method_1, String * data, MethodInfo * method));
DO_APP_FUNC(0x020BA7A0, void, WebClient_UploadStringAsync_2, (WebClient * __this, Uri * address, String * method_1, String * data, Object * userToken, MethodInfo * method));
DO_APP_FUNC(0x020BAE50, void, WebClient_add_UploadDataCompleted, (WebClient * __this, UploadDataCompletedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x020BAF40, void, WebClient_remove_UploadDataCompleted, (WebClient * __this, UploadDataCompletedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x020BB030, void, WebClient_OnUploadDataCompleted, (WebClient * __this, UploadDataCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x020BB050, void, WebClient_UploadDataOperationCompleted, (WebClient * __this, Object * arg, MethodInfo * method));
DO_APP_FUNC(0x020BB140, void, WebClient_UploadDataAsyncWriteCallback, (WebClient * __this, Byte__Array * returnBytes, Exception * exception, Object * state, MethodInfo * method));
DO_APP_FUNC(0x020BB3B0, void, WebClient_UploadDataAsyncReadCallback, (WebClient * __this, Byte__Array * returnBytes, Exception * exception, Object * state, MethodInfo * method));
DO_APP_FUNC(0x020BB5B0, void, WebClient_UploadDataAsync, (WebClient * __this, Uri * address, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x020BB5D0, void, WebClient_UploadDataAsync_1, (WebClient * __this, Uri * address, String * method_1, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x020BB5F0, void, WebClient_UploadDataAsync_2, (WebClient * __this, Uri * address, String * method_1, Byte__Array * data, Object * userToken, MethodInfo * method));
DO_APP_FUNC(0x020BBCA0, void, WebClient_add_UploadFileCompleted, (WebClient * __this, UploadFileCompletedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x020BBD90, void, WebClient_remove_UploadFileCompleted, (WebClient * __this, UploadFileCompletedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x020BBE80, void, WebClient_OnUploadFileCompleted, (WebClient * __this, UploadFileCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x020BBEA0, void, WebClient_UploadFileOperationCompleted, (WebClient * __this, Object * arg, MethodInfo * method));
DO_APP_FUNC(0x020BBF90, void, WebClient_UploadFileAsyncWriteCallback, (WebClient * __this, Byte__Array * returnBytes, Exception * exception, Object * state, MethodInfo * method));
DO_APP_FUNC(0x020BC200, void, WebClient_UploadFileAsyncReadCallback, (WebClient * __this, Byte__Array * returnBytes, Exception * exception, Object * state, MethodInfo * method));
DO_APP_FUNC(0x020BC400, void, WebClient_UploadFileAsync, (WebClient * __this, Uri * address, String * fileName, MethodInfo * method));
DO_APP_FUNC(0x020BC420, void, WebClient_UploadFileAsync_1, (WebClient * __this, Uri * address, String * method_1, String * fileName, MethodInfo * method));
DO_APP_FUNC(0x020BC440, void, WebClient_UploadFileAsync_2, (WebClient * __this, Uri * address, String * method_1, String * fileName, Object * userToken, MethodInfo * method));
DO_APP_FUNC(0x020BCB90, void, WebClient_add_UploadValuesCompleted, (WebClient * __this, UploadValuesCompletedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x020BCC80, void, WebClient_remove_UploadValuesCompleted, (WebClient * __this, UploadValuesCompletedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x020BCD70, void, WebClient_OnUploadValuesCompleted, (WebClient * __this, UploadValuesCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x020BCD90, void, WebClient_UploadValuesOperationCompleted, (WebClient * __this, Object * arg, MethodInfo * method));
DO_APP_FUNC(0x020BCE80, void, WebClient_UploadValuesAsyncWriteCallback, (WebClient * __this, Byte__Array * returnBytes, Exception * exception, Object * state, MethodInfo * method));
DO_APP_FUNC(0x020BD0F0, void, WebClient_UploadValuesAsyncReadCallback, (WebClient * __this, Byte__Array * returnBytes, Exception * exception, Object * state, MethodInfo * method));
DO_APP_FUNC(0x020BD2F0, void, WebClient_UploadValuesAsync, (WebClient * __this, Uri * address, NameValueCollection * data, MethodInfo * method));
DO_APP_FUNC(0x020BD310, void, WebClient_UploadValuesAsync_1, (WebClient * __this, Uri * address, String * method_1, NameValueCollection * data, MethodInfo * method));
DO_APP_FUNC(0x020BD330, void, WebClient_UploadValuesAsync_2, (WebClient * __this, Uri * address, String * method_1, NameValueCollection * data, Object * userToken, MethodInfo * method));
DO_APP_FUNC(0x020BDA00, void, WebClient_CancelAsync, (WebClient * __this, MethodInfo * method));
DO_APP_FUNC(0x020BDA10, Task_1_System_String_ *, WebClient_DownloadStringTaskAsync, (WebClient * __this, String * address, MethodInfo * method));
DO_APP_FUNC(0x020BDA40, Task_1_System_String_ *, WebClient_DownloadStringTaskAsync_1, (WebClient * __this, Uri * address, MethodInfo * method));
DO_APP_FUNC(0x020BDE90, Task_1_System_IO_Stream_ *, WebClient_OpenReadTaskAsync, (WebClient * __this, String * address, MethodInfo * method));
DO_APP_FUNC(0x020BDEC0, Task_1_System_IO_Stream_ *, WebClient_OpenReadTaskAsync_1, (WebClient * __this, Uri * address, MethodInfo * method));
DO_APP_FUNC(0x020BE310, Task_1_System_IO_Stream_ *, WebClient_OpenWriteTaskAsync, (WebClient * __this, String * address, MethodInfo * method));
DO_APP_FUNC(0x020BE340, Task_1_System_IO_Stream_ *, WebClient_OpenWriteTaskAsync_1, (WebClient * __this, Uri * address, MethodInfo * method));
DO_APP_FUNC(0x020BE350, Task_1_System_IO_Stream_ *, WebClient_OpenWriteTaskAsync_2, (WebClient * __this, String * address, String * method_1, MethodInfo * method));
DO_APP_FUNC(0x020BE390, Task_1_System_IO_Stream_ *, WebClient_OpenWriteTaskAsync_3, (WebClient * __this, Uri * address, String * method_1, MethodInfo * method));
DO_APP_FUNC(0x020BE7E0, Task_1_System_String_ *, WebClient_UploadStringTaskAsync, (WebClient * __this, String * address, String * data, MethodInfo * method));
DO_APP_FUNC(0x020BE820, Task_1_System_String_ *, WebClient_UploadStringTaskAsync_1, (WebClient * __this, Uri * address, String * data, MethodInfo * method));
DO_APP_FUNC(0x020BE840, Task_1_System_String_ *, WebClient_UploadStringTaskAsync_2, (WebClient * __this, String * address, String * method_1, String * data, MethodInfo * method));
DO_APP_FUNC(0x020BE890, Task_1_System_String_ *, WebClient_UploadStringTaskAsync_3, (WebClient * __this, Uri * address, String * method_1, String * data, MethodInfo * method));
DO_APP_FUNC(0x020BED00, Task_1_System_Byte_ *, WebClient_DownloadDataTaskAsync, (WebClient * __this, String * address, MethodInfo * method));
DO_APP_FUNC(0x020BED30, Task_1_System_Byte_ *, WebClient_DownloadDataTaskAsync_1, (WebClient * __this, Uri * address, MethodInfo * method));
DO_APP_FUNC(0x020BF0E0, Task *, WebClient_DownloadFileTaskAsync, (WebClient * __this, String * address, String * fileName, MethodInfo * method));
DO_APP_FUNC(0x020BF120, Task *, WebClient_DownloadFileTaskAsync_1, (WebClient * __this, Uri * address, String * fileName, MethodInfo * method));
DO_APP_FUNC(0x020BF570, Task_1_System_Byte_ *, WebClient_UploadDataTaskAsync, (WebClient * __this, String * address, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x020BF5B0, Task_1_System_Byte_ *, WebClient_UploadDataTaskAsync_1, (WebClient * __this, Uri * address, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x020BF5D0, Task_1_System_Byte_ *, WebClient_UploadDataTaskAsync_2, (WebClient * __this, String * address, String * method_1, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x020BF620, Task_1_System_Byte_ *, WebClient_UploadDataTaskAsync_3, (WebClient * __this, Uri * address, String * method_1, Byte__Array * data, MethodInfo * method));
DO_APP_FUNC(0x020BF9E0, Task_1_System_Byte_ *, WebClient_UploadFileTaskAsync, (WebClient * __this, String * address, String * fileName, MethodInfo * method));
DO_APP_FUNC(0x020BFA20, Task_1_System_Byte_ *, WebClient_UploadFileTaskAsync_1, (WebClient * __this, Uri * address, String * fileName, MethodInfo * method));
DO_APP_FUNC(0x020BFA40, Task_1_System_Byte_ *, WebClient_UploadFileTaskAsync_2, (WebClient * __this, String * address, String * method_1, String * fileName, MethodInfo * method));
DO_APP_FUNC(0x020BFA90, Task_1_System_Byte_ *, WebClient_UploadFileTaskAsync_3, (WebClient * __this, Uri * address, String * method_1, String * fileName, MethodInfo * method));
DO_APP_FUNC(0x020BFF00, Task_1_System_Byte_ *, WebClient_UploadValuesTaskAsync, (WebClient * __this, String * address, NameValueCollection * data, MethodInfo * method));
DO_APP_FUNC(0x020BFF40, Task_1_System_Byte_ *, WebClient_UploadValuesTaskAsync_1, (WebClient * __this, String * address, String * method_1, NameValueCollection * data, MethodInfo * method));
DO_APP_FUNC(0x020BFF90, Task_1_System_Byte_ *, WebClient_UploadValuesTaskAsync_2, (WebClient * __this, Uri * address, NameValueCollection * data, MethodInfo * method));
DO_APP_FUNC(0x020BFFB0, Task_1_System_Byte_ *, WebClient_UploadValuesTaskAsync_3, (WebClient * __this, Uri * address, String * method_1, NameValueCollection * data, MethodInfo * method));
DO_APP_FUNC(0x020C0420, void, WebClient_add_DownloadProgressChanged, (WebClient * __this, DownloadProgressChangedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x020C0510, void, WebClient_remove_DownloadProgressChanged, (WebClient * __this, DownloadProgressChangedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x020C0600, void, WebClient_add_UploadProgressChanged, (WebClient * __this, UploadProgressChangedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x020C06F0, void, WebClient_remove_UploadProgressChanged, (WebClient * __this, UploadProgressChangedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x020C07E0, void, WebClient_OnDownloadProgressChanged, (WebClient * __this, DownloadProgressChangedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x020C0800, void, WebClient_OnUploadProgressChanged, (WebClient * __this, UploadProgressChangedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x020C0820, void, WebClient_ReportDownloadProgressChanged, (WebClient * __this, Object * arg, MethodInfo * method));
DO_APP_FUNC(0x020C0910, void, WebClient_ReportUploadProgressChanged, (WebClient * __this, Object * arg, MethodInfo * method));
DO_APP_FUNC(0x020C0A00, void, WebClient_PostProgressChanged, (WebClient * __this, AsyncOperation * asyncOp, WebClient_ProgressData * progress, MethodInfo * method));
DO_APP_FUNC(0x01D60B20, void, WebClient_ProgressData_Reset, (WebClient_ProgressData * __this, MethodInfo * method));
DO_APP_FUNC(0x01D60B40, void, WebClient_ProgressData__ctor, (WebClient_ProgressData * __this, MethodInfo * method));
DO_APP_FUNC(0x01D60120, void, WebClient_DownloadBitsState__ctor, (WebClient_DownloadBitsState * __this, WebRequest * request, Stream * writeStream, CompletionDelegate * completionDelegate, AsyncOperation * asyncOp, WebClient_ProgressData * progress, WebClient * webClient, MethodInfo * method));
DO_APP_FUNC(0x01D60150, bool, WebClient_DownloadBitsState_get_Async, (WebClient_DownloadBitsState * __this, MethodInfo * method));
DO_APP_FUNC(0x01D60160, int32_t, WebClient_DownloadBitsState_SetResponse, (WebClient_DownloadBitsState * __this, WebResponse * response, MethodInfo * method));
DO_APP_FUNC(0x01D605F0, bool, WebClient_DownloadBitsState_RetrieveBytes, (WebClient_DownloadBitsState * __this, int32_t * bytesRetrieved, MethodInfo * method));
DO_APP_FUNC(0x01D60AD0, void, WebClient_DownloadBitsState_Close, (WebClient_DownloadBitsState * __this, MethodInfo * method));
DO_APP_FUNC(0x01D60B60, void, WebClient_UploadBitsState__ctor, (WebClient_UploadBitsState * __this, WebRequest * request, Stream * readStream, Byte__Array * buffer, int32_t chunkSize, Byte__Array * header, Byte__Array * footer, CompletionDelegate * uploadCompletionDelegate, CompletionDelegate * downloadCompletionDelegate, AsyncOperation * asyncOp, WebClient_ProgressData * progress, WebClient * webClient, MethodInfo * method));
DO_APP_FUNC(0x01D60C50, bool, WebClient_UploadBitsState_get_FileUpload, (WebClient_UploadBitsState * __this, MethodInfo * method));
DO_APP_FUNC(0x00938890, bool, WebClient_UploadBitsState_get_Async, (WebClient_UploadBitsState * __this, MethodInfo * method));
DO_APP_FUNC(0x01D60C60, void, WebClient_UploadBitsState_SetRequestStream, (WebClient_UploadBitsState * __this, Stream * writeStream, MethodInfo * method));
DO_APP_FUNC(0x01D60EA0, bool, WebClient_UploadBitsState_WriteBytes, (WebClient_UploadBitsState * __this, MethodInfo * method));
DO_APP_FUNC(0x01D61190, void, WebClient_UploadBitsState_Close, (WebClient_UploadBitsState * __this, MethodInfo * method));
DO_APP_FUNC(0x01D611E0, void, WebClient_WebClientWriteStream__ctor, (WebClient_WebClientWriteStream * __this, Stream * stream, WebRequest * request, WebClient * webClient, MethodInfo * method));
DO_APP_FUNC(0x01D612A0, bool, WebClient_WebClientWriteStream_get_CanRead, (WebClient_WebClientWriteStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D612D0, bool, WebClient_WebClientWriteStream_get_CanSeek, (WebClient_WebClientWriteStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D61300, bool, WebClient_WebClientWriteStream_get_CanWrite, (WebClient_WebClientWriteStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D61330, bool, WebClient_WebClientWriteStream_get_CanTimeout, (WebClient_WebClientWriteStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D61360, int32_t, WebClient_WebClientWriteStream_get_ReadTimeout, (WebClient_WebClientWriteStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D61390, void, WebClient_WebClientWriteStream_set_ReadTimeout, (WebClient_WebClientWriteStream * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01D613C0, int32_t, WebClient_WebClientWriteStream_get_WriteTimeout, (WebClient_WebClientWriteStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D613F0, void, WebClient_WebClientWriteStream_set_WriteTimeout, (WebClient_WebClientWriteStream * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01D61420, int64_t, WebClient_WebClientWriteStream_get_Length, (WebClient_WebClientWriteStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D61450, int64_t, WebClient_WebClientWriteStream_get_Position, (WebClient_WebClientWriteStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D61480, void, WebClient_WebClientWriteStream_set_Position, (WebClient_WebClientWriteStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01D614B0, IAsyncResult *, WebClient_WebClientWriteStream_BeginRead, (WebClient_WebClientWriteStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01D614E0, IAsyncResult *, WebClient_WebClientWriteStream_BeginWrite, (WebClient_WebClientWriteStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01D61510, void, WebClient_WebClientWriteStream_Dispose, (WebClient_WebClientWriteStream * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01D61600, int32_t, WebClient_WebClientWriteStream_EndRead, (WebClient_WebClientWriteStream * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01D61630, void, WebClient_WebClientWriteStream_EndWrite, (WebClient_WebClientWriteStream * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01D61660, void, WebClient_WebClientWriteStream_Flush, (WebClient_WebClientWriteStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D61690, int32_t, WebClient_WebClientWriteStream_Read, (WebClient_WebClientWriteStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01D616C0, int64_t, WebClient_WebClientWriteStream_Seek, (WebClient_WebClientWriteStream * __this, int64_t offset, SeekOrigin__Enum origin, MethodInfo * method));
DO_APP_FUNC(0x01D616F0, void, WebClient_WebClientWriteStream_SetLength, (WebClient_WebClientWriteStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01D61720, void, WebClient_WebClientWriteStream_Write, (WebClient_WebClientWriteStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebClient_c_DisplayClass219_0__ctor, (WebClient_c_DisplayClass219_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x01D5E2A0, void, WebClient_c_DisplayClass219_0__DownloadStringTaskAsync_b__0, (WebClient_c_DisplayClass219_0 * __this, Object * sender, DownloadStringCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01D5DF80, void, WebClient_c__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebClient_c__ctor, (WebClient_c * __this, MethodInfo * method));
DO_APP_FUNC(0x01D5E0C0, String *, WebClient_c__DownloadStringTaskAsync_b__219_1, (WebClient_c * __this, DownloadStringCompletedEventArgs * args, MethodInfo * method));
DO_APP_FUNC(0x01D5E0F0, void, WebClient_c__DownloadStringTaskAsync_b__219_2, (WebClient_c * __this, WebClient * webClient, DownloadStringCompletedEventHandler * completion, MethodInfo * method));
DO_APP_FUNC(0x01D5E0C0, Stream *, WebClient_c__OpenReadTaskAsync_b__221_1, (WebClient_c * __this, OpenReadCompletedEventArgs * args, MethodInfo * method));
DO_APP_FUNC(0x01D5E120, void, WebClient_c__OpenReadTaskAsync_b__221_2, (WebClient_c * __this, WebClient * webClient, OpenReadCompletedEventHandler * completion, MethodInfo * method));
DO_APP_FUNC(0x01D5E0C0, Stream *, WebClient_c__OpenWriteTaskAsync_b__225_1, (WebClient_c * __this, OpenWriteCompletedEventArgs * args, MethodInfo * method));
DO_APP_FUNC(0x01D5E150, void, WebClient_c__OpenWriteTaskAsync_b__225_2, (WebClient_c * __this, WebClient * webClient, OpenWriteCompletedEventHandler * completion, MethodInfo * method));
DO_APP_FUNC(0x01D5E0C0, String *, WebClient_c__UploadStringTaskAsync_b__229_1, (WebClient_c * __this, UploadStringCompletedEventArgs * args, MethodInfo * method));
DO_APP_FUNC(0x01D5E180, void, WebClient_c__UploadStringTaskAsync_b__229_2, (WebClient_c * __this, WebClient * webClient, UploadStringCompletedEventHandler * completion, MethodInfo * method));
DO_APP_FUNC(0x01D5E0C0, Byte__Array *, WebClient_c__DownloadDataTaskAsync_b__231_1, (WebClient_c * __this, DownloadDataCompletedEventArgs * args, MethodInfo * method));
DO_APP_FUNC(0x01D5E1B0, void, WebClient_c__DownloadDataTaskAsync_b__231_2, (WebClient_c * __this, WebClient * webClient, DownloadDataCompletedEventHandler * completion, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Object *, WebClient_c__DownloadFileTaskAsync_b__233_1, (WebClient_c * __this, AsyncCompletedEventArgs * args, MethodInfo * method));
DO_APP_FUNC(0x01D5E1E0, void, WebClient_c__DownloadFileTaskAsync_b__233_2, (WebClient_c * __this, WebClient * webClient, AsyncCompletedEventHandler * completion, MethodInfo * method));
DO_APP_FUNC(0x01D5E0C0, Byte__Array *, WebClient_c__UploadDataTaskAsync_b__237_1, (WebClient_c * __this, UploadDataCompletedEventArgs * args, MethodInfo * method));
DO_APP_FUNC(0x01D5E210, void, WebClient_c__UploadDataTaskAsync_b__237_2, (WebClient_c * __this, WebClient * webClient, UploadDataCompletedEventHandler * completion, MethodInfo * method));
DO_APP_FUNC(0x01D5E0C0, Byte__Array *, WebClient_c__UploadFileTaskAsync_b__241_1, (WebClient_c * __this, UploadFileCompletedEventArgs * args, MethodInfo * method));
DO_APP_FUNC(0x01D5E240, void, WebClient_c__UploadFileTaskAsync_b__241_2, (WebClient_c * __this, WebClient * webClient, UploadFileCompletedEventHandler * completion, MethodInfo * method));
DO_APP_FUNC(0x01D5E0C0, Byte__Array *, WebClient_c__UploadValuesTaskAsync_b__245_1, (WebClient_c * __this, UploadValuesCompletedEventArgs * args, MethodInfo * method));
DO_APP_FUNC(0x01D5E270, void, WebClient_c__UploadValuesTaskAsync_b__245_2, (WebClient_c * __this, WebClient * webClient, UploadValuesCompletedEventHandler * completion, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebClient_c_DisplayClass221_0__ctor, (WebClient_c_DisplayClass221_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x01D5E600, void, WebClient_c_DisplayClass221_0__OpenReadTaskAsync_b__0, (WebClient_c_DisplayClass221_0 * __this, Object * sender, OpenReadCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebClient_c_DisplayClass225_0__ctor, (WebClient_c_DisplayClass225_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x01D5E960, void, WebClient_c_DisplayClass225_0__OpenWriteTaskAsync_b__0, (WebClient_c_DisplayClass225_0 * __this, Object * sender, OpenWriteCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebClient_c_DisplayClass229_0__ctor, (WebClient_c_DisplayClass229_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x01D5ECC0, void, WebClient_c_DisplayClass229_0__UploadStringTaskAsync_b__0, (WebClient_c_DisplayClass229_0 * __this, Object * sender, UploadStringCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebClient_c_DisplayClass231_0__ctor, (WebClient_c_DisplayClass231_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x01D5F020, void, WebClient_c_DisplayClass231_0__DownloadDataTaskAsync_b__0, (WebClient_c_DisplayClass231_0 * __this, Object * sender, DownloadDataCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebClient_c_DisplayClass233_0__ctor, (WebClient_c_DisplayClass233_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x01D5F380, void, WebClient_c_DisplayClass233_0__DownloadFileTaskAsync_b__0, (WebClient_c_DisplayClass233_0 * __this, Object * sender, AsyncCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebClient_c_DisplayClass237_0__ctor, (WebClient_c_DisplayClass237_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x01D5F6E0, void, WebClient_c_DisplayClass237_0__UploadDataTaskAsync_b__0, (WebClient_c_DisplayClass237_0 * __this, Object * sender, UploadDataCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebClient_c_DisplayClass241_0__ctor, (WebClient_c_DisplayClass241_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x01D5FA40, void, WebClient_c_DisplayClass241_0__UploadFileTaskAsync_b__0, (WebClient_c_DisplayClass241_0 * __this, Object * sender, UploadFileCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebClient_c_DisplayClass245_0__ctor, (WebClient_c_DisplayClass245_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x01D5FDB0, void, WebClient_c_DisplayClass245_0__UploadValuesTaskAsync_b__0, (WebClient_c_DisplayClass245_0 * __this, Object * sender, UploadValuesCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, CompletionDelegate__ctor, (CompletionDelegate * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01434270, void, CompletionDelegate_Invoke, (CompletionDelegate * __this, Byte__Array * responseBytes, Exception * exception, Object * State, MethodInfo * method));
DO_APP_FUNC(0x00DC7DB0, IAsyncResult *, CompletionDelegate_BeginInvoke, (CompletionDelegate * __this, Byte__Array * responseBytes, Exception * exception, Object * State, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, CompletionDelegate_EndInvoke, (CompletionDelegate * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, OpenReadCompletedEventHandler__ctor, (OpenReadCompletedEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, OpenReadCompletedEventHandler_Invoke, (OpenReadCompletedEventHandler * __this, Object * sender, OpenReadCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, OpenReadCompletedEventHandler_BeginInvoke, (OpenReadCompletedEventHandler * __this, Object * sender, OpenReadCompletedEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, OpenReadCompletedEventHandler_EndInvoke, (OpenReadCompletedEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01BCB240, void, OpenReadCompletedEventArgs__ctor, (OpenReadCompletedEventArgs * __this, Stream * result, Exception * exception, bool cancelled, Object * userToken, MethodInfo * method));
DO_APP_FUNC(0x01BCB280, Stream *, OpenReadCompletedEventArgs_get_Result, (OpenReadCompletedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCB2A0, void, OpenReadCompletedEventArgs__ctor_1, (OpenReadCompletedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, OpenWriteCompletedEventHandler__ctor, (OpenWriteCompletedEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, OpenWriteCompletedEventHandler_Invoke, (OpenWriteCompletedEventHandler * __this, Object * sender, OpenWriteCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, OpenWriteCompletedEventHandler_BeginInvoke, (OpenWriteCompletedEventHandler * __this, Object * sender, OpenWriteCompletedEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, OpenWriteCompletedEventHandler_EndInvoke, (OpenWriteCompletedEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01BCB240, void, OpenWriteCompletedEventArgs__ctor, (OpenWriteCompletedEventArgs * __this, Stream * result, Exception * exception, bool cancelled, Object * userToken, MethodInfo * method));
DO_APP_FUNC(0x01BCB280, Stream *, OpenWriteCompletedEventArgs_get_Result, (OpenWriteCompletedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCB2D0, void, OpenWriteCompletedEventArgs__ctor_1, (OpenWriteCompletedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, DownloadStringCompletedEventHandler__ctor, (DownloadStringCompletedEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, DownloadStringCompletedEventHandler_Invoke, (DownloadStringCompletedEventHandler * __this, Object * sender, DownloadStringCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, DownloadStringCompletedEventHandler_BeginInvoke, (DownloadStringCompletedEventHandler * __this, Object * sender, DownloadStringCompletedEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, DownloadStringCompletedEventHandler_EndInvoke, (DownloadStringCompletedEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01BCB240, void, DownloadStringCompletedEventArgs__ctor, (DownloadStringCompletedEventArgs * __this, String * result, Exception * exception, bool cancelled, Object * userToken, MethodInfo * method));
DO_APP_FUNC(0x01BCB280, String *, DownloadStringCompletedEventArgs_get_Result, (DownloadStringCompletedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x01EB40B0, void, DownloadStringCompletedEventArgs__ctor_1, (DownloadStringCompletedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, DownloadDataCompletedEventHandler__ctor, (DownloadDataCompletedEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, DownloadDataCompletedEventHandler_Invoke, (DownloadDataCompletedEventHandler * __this, Object * sender, DownloadDataCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, DownloadDataCompletedEventHandler_BeginInvoke, (DownloadDataCompletedEventHandler * __this, Object * sender, DownloadDataCompletedEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, DownloadDataCompletedEventHandler_EndInvoke, (DownloadDataCompletedEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01BCB240, void, DownloadDataCompletedEventArgs__ctor, (DownloadDataCompletedEventArgs * __this, Byte__Array * result, Exception * exception, bool cancelled, Object * userToken, MethodInfo * method));
DO_APP_FUNC(0x01BCB280, Byte__Array *, DownloadDataCompletedEventArgs_get_Result, (DownloadDataCompletedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x01EB4020, void, DownloadDataCompletedEventArgs__ctor_1, (DownloadDataCompletedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UploadStringCompletedEventHandler__ctor, (UploadStringCompletedEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, UploadStringCompletedEventHandler_Invoke, (UploadStringCompletedEventHandler * __this, Object * sender, UploadStringCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, UploadStringCompletedEventHandler_BeginInvoke, (UploadStringCompletedEventHandler * __this, Object * sender, UploadStringCompletedEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, UploadStringCompletedEventHandler_EndInvoke, (UploadStringCompletedEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01BCB240, void, UploadStringCompletedEventArgs__ctor, (UploadStringCompletedEventArgs * __this, String * result, Exception * exception, bool cancelled, Object * userToken, MethodInfo * method));
DO_APP_FUNC(0x01BCB280, String *, UploadStringCompletedEventArgs_get_Result, (UploadStringCompletedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x020ACFF0, void, UploadStringCompletedEventArgs__ctor_1, (UploadStringCompletedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UploadDataCompletedEventHandler__ctor, (UploadDataCompletedEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, UploadDataCompletedEventHandler_Invoke, (UploadDataCompletedEventHandler * __this, Object * sender, UploadDataCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, UploadDataCompletedEventHandler_BeginInvoke, (UploadDataCompletedEventHandler * __this, Object * sender, UploadDataCompletedEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, UploadDataCompletedEventHandler_EndInvoke, (UploadDataCompletedEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01BCB240, void, UploadDataCompletedEventArgs__ctor, (UploadDataCompletedEventArgs * __this, Byte__Array * result, Exception * exception, bool cancelled, Object * userToken, MethodInfo * method));
DO_APP_FUNC(0x01BCB280, Byte__Array *, UploadDataCompletedEventArgs_get_Result, (UploadDataCompletedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x020ACF10, void, UploadDataCompletedEventArgs__ctor_1, (UploadDataCompletedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UploadFileCompletedEventHandler__ctor, (UploadFileCompletedEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, UploadFileCompletedEventHandler_Invoke, (UploadFileCompletedEventHandler * __this, Object * sender, UploadFileCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, UploadFileCompletedEventHandler_BeginInvoke, (UploadFileCompletedEventHandler * __this, Object * sender, UploadFileCompletedEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, UploadFileCompletedEventHandler_EndInvoke, (UploadFileCompletedEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01BCB240, void, UploadFileCompletedEventArgs__ctor, (UploadFileCompletedEventArgs * __this, Byte__Array * result, Exception * exception, bool cancelled, Object * userToken, MethodInfo * method));
DO_APP_FUNC(0x01BCB280, Byte__Array *, UploadFileCompletedEventArgs_get_Result, (UploadFileCompletedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x020ACF40, void, UploadFileCompletedEventArgs__ctor_1, (UploadFileCompletedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UploadValuesCompletedEventHandler__ctor, (UploadValuesCompletedEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, UploadValuesCompletedEventHandler_Invoke, (UploadValuesCompletedEventHandler * __this, Object * sender, UploadValuesCompletedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, UploadValuesCompletedEventHandler_BeginInvoke, (UploadValuesCompletedEventHandler * __this, Object * sender, UploadValuesCompletedEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, UploadValuesCompletedEventHandler_EndInvoke, (UploadValuesCompletedEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01BCB240, void, UploadValuesCompletedEventArgs__ctor, (UploadValuesCompletedEventArgs * __this, Byte__Array * result, Exception * exception, bool cancelled, Object * userToken, MethodInfo * method));
DO_APP_FUNC(0x01BCB280, Byte__Array *, UploadValuesCompletedEventArgs_get_Result, (UploadValuesCompletedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x020AD020, void, UploadValuesCompletedEventArgs__ctor_1, (UploadValuesCompletedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, DownloadProgressChangedEventHandler__ctor, (DownloadProgressChangedEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, DownloadProgressChangedEventHandler_Invoke, (DownloadProgressChangedEventHandler * __this, Object * sender, DownloadProgressChangedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, DownloadProgressChangedEventHandler_BeginInvoke, (DownloadProgressChangedEventHandler * __this, Object * sender, DownloadProgressChangedEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, DownloadProgressChangedEventHandler_EndInvoke, (DownloadProgressChangedEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01EB4050, void, DownloadProgressChangedEventArgs__ctor, (DownloadProgressChangedEventArgs * __this, int32_t progressPercentage, Object * userToken, int64_t bytesReceived, int64_t totalBytesToReceive, MethodInfo * method));
DO_APP_FUNC(0x002FB950, int64_t, DownloadProgressChangedEventArgs_get_BytesReceived, (DownloadProgressChangedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, int64_t, DownloadProgressChangedEventArgs_get_TotalBytesToReceive, (DownloadProgressChangedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x01EB4080, void, DownloadProgressChangedEventArgs__ctor_1, (DownloadProgressChangedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UploadProgressChangedEventHandler__ctor, (UploadProgressChangedEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, UploadProgressChangedEventHandler_Invoke, (UploadProgressChangedEventHandler * __this, Object * sender, UploadProgressChangedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, UploadProgressChangedEventHandler_BeginInvoke, (UploadProgressChangedEventHandler * __this, Object * sender, UploadProgressChangedEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, UploadProgressChangedEventHandler_EndInvoke, (UploadProgressChangedEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x020ACF70, void, UploadProgressChangedEventArgs__ctor, (UploadProgressChangedEventArgs * __this, int32_t progressPercentage, Object * userToken, int64_t bytesSent, int64_t totalBytesToSend, int64_t bytesReceived, int64_t totalBytesToReceive, MethodInfo * method));
DO_APP_FUNC(0x002FB950, int64_t, UploadProgressChangedEventArgs_get_BytesReceived, (UploadProgressChangedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, int64_t, UploadProgressChangedEventArgs_get_TotalBytesToReceive, (UploadProgressChangedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, int64_t, UploadProgressChangedEventArgs_get_BytesSent, (UploadProgressChangedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, int64_t, UploadProgressChangedEventArgs_get_TotalBytesToSend, (UploadProgressChangedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x020ACFC0, void, UploadProgressChangedEventArgs__ctor_1, (UploadProgressChangedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebProxyData__ctor, (WebProxyData * __this, MethodInfo * method));
DO_APP_FUNC(0x01D805A0, void, WebProxy__ctor, (WebProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x01D80630, void, WebProxy__ctor_1, (WebProxy * __this, Uri * Address, MethodInfo * method));
DO_APP_FUNC(0x01D806D0, void, WebProxy__ctor_2, (WebProxy * __this, Uri * Address, bool BypassOnLocal, MethodInfo * method));
DO_APP_FUNC(0x01D80780, void, WebProxy__ctor_3, (WebProxy * __this, Uri * Address, bool BypassOnLocal, String__Array * BypassList, MethodInfo * method));
DO_APP_FUNC(0x01D807A0, void, WebProxy__ctor_4, (WebProxy * __this, Uri * Address, bool BypassOnLocal, String__Array * BypassList, ICredentials * Credentials, MethodInfo * method));
DO_APP_FUNC(0x01D80920, void, WebProxy__ctor_5, (WebProxy * __this, String * Host, int32_t Port, MethodInfo * method));
DO_APP_FUNC(0x01D80B40, void, WebProxy__ctor_6, (WebProxy * __this, String * Address, MethodInfo * method));
DO_APP_FUNC(0x01D80BF0, void, WebProxy__ctor_7, (WebProxy * __this, String * Address, bool BypassOnLocal, MethodInfo * method));
DO_APP_FUNC(0x01D80CB0, void, WebProxy__ctor_8, (WebProxy * __this, String * Address, bool BypassOnLocal, String__Array * BypassList, MethodInfo * method));
DO_APP_FUNC(0x01D80D10, void, WebProxy__ctor_9, (WebProxy * __this, String * Address, bool BypassOnLocal, String__Array * BypassList, ICredentials * Credentials, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Uri *, WebProxy_get_Address, (WebProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x01D80D60, void, WebProxy_set_Address, (WebProxy * __this, Uri * value, MethodInfo * method));
DO_APP_FUNC(0x01D80D80, void, WebProxy_set_AutoDetect, (WebProxy * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01D80EE0, void, WebProxy_set_ScriptLocation, (WebProxy * __this, Uri * value, MethodInfo * method));
DO_APP_FUNC(0x00504D80, bool, WebProxy_get_BypassProxyOnLocal, (WebProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x01D81040, void, WebProxy_set_BypassProxyOnLocal, (WebProxy * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01D81060, String__Array *, WebProxy_get_BypassList, (WebProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x01D81240, void, WebProxy_set_BypassList, (WebProxy * __this, String__Array * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, ICredentials *, WebProxy_get_Credentials, (WebProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB10, void, WebProxy_set_Credentials, (WebProxy * __this, ICredentials * value, MethodInfo * method));
DO_APP_FUNC(0x01D813B0, bool, WebProxy_get_UseDefaultCredentials, (WebProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x01D81480, void, WebProxy_set_UseDefaultCredentials, (WebProxy * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01D814B0, ArrayList *, WebProxy_get_BypassArrayList, (WebProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x003F8E90, void, WebProxy_CheckForChanges, (WebProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x01D81610, Uri *, WebProxy_GetProxy, (WebProxy * __this, Uri * destination, MethodInfo * method));
DO_APP_FUNC(0x01D817D0, Uri *, WebProxy_CreateProxyUri, (String * address, MethodInfo * method));
DO_APP_FUNC(0x01D81970, void, WebProxy_UpdateRegExList, (WebProxy * __this, bool canThrow, MethodInfo * method));
DO_APP_FUNC(0x01D81C80, bool, WebProxy_IsMatchInBypassList, (WebProxy * __this, Uri * input, MethodInfo * method));
DO_APP_FUNC(0x01D81F40, bool, WebProxy_IsLocal, (WebProxy * __this, Uri * host, MethodInfo * method));
DO_APP_FUNC(0x01D822A0, bool, WebProxy_IsLocalInProxyHash, (WebProxy * __this, Uri * host, MethodInfo * method));
DO_APP_FUNC(0x01D823F0, bool, WebProxy_IsBypassed, (WebProxy * __this, Uri * host, MethodInfo * method));
DO_APP_FUNC(0x01D82530, bool, WebProxy_IsBypassedManual, (WebProxy * __this, Uri * host, MethodInfo * method));
DO_APP_FUNC(0x01D82740, WebProxy *, WebProxy_GetDefaultProxy, (MethodInfo * method));
DO_APP_FUNC(0x01D82880, void, WebProxy__ctor_10, (WebProxy * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x00C53AA0, void, WebProxy_System_Runtime_Serialization_ISerializable_GetObjectData, (WebProxy * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01D82AE0, void, WebProxy_GetObjectData, (WebProxy * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, AutoWebProxyScriptEngine *, WebProxy_get_ScriptEngine, (WebProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9E0, void, WebProxy_set_ScriptEngine, (WebProxy * __this, AutoWebProxyScriptEngine * value, MethodInfo * method));
DO_APP_FUNC(0x01D82C80, IWebProxy *, WebProxy_CreateDefaultProxy, (MethodInfo * method));
DO_APP_FUNC(0x01D82DC0, void, WebProxy__ctor_11, (WebProxy * __this, bool enableAutoproxy, MethodInfo * method));
DO_APP_FUNC(0x01D82DD0, void, WebProxy_DeleteScriptEngine, (WebProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x00B80D80, void, WebProxy_UnsafeUpdateFromRegistry, (WebProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x01D82DE0, void, WebProxy_Update, (WebProxy * __this, WebProxyData * webProxyData, MethodInfo * method));
DO_APP_FUNC(0x01D82F30, ProxyChain *, WebProxy_System_Net_IAutoWebProxy_GetProxies, (WebProxy * __this, Uri * destination, MethodInfo * method));
DO_APP_FUNC(0x01D830E0, bool, WebProxy_GetProxyAuto, (WebProxy * __this, Uri * destination, Uri * * proxyUri, MethodInfo * method));
DO_APP_FUNC(0x01D83170, bool, WebProxy_IsBypassedAuto, (WebProxy * __this, Uri * destination, bool * isBypassed, MethodInfo * method));
DO_APP_FUNC(0x01D831F0, Uri__Array *, WebProxy_GetProxiesAuto, (WebProxy * __this, Uri * destination, int32_t * syncStatus, MethodInfo * method));
DO_APP_FUNC(0x003F8E90, void, WebProxy_AbortGetProxiesAuto, (WebProxy * __this, int32_t * syncStatus, MethodInfo * method));
DO_APP_FUNC(0x01D83260, Uri *, WebProxy_GetProxyAutoFailover, (WebProxy * __this, Uri * destination, MethodInfo * method));
DO_APP_FUNC(0x01D833A0, bool, WebProxy_AreAllBypassed, (IEnumerable_1_System_String_ * proxies, bool checkFirstOnly, MethodInfo * method));
DO_APP_FUNC(0x01D83540, Uri *, WebProxy_ProxyUri, (String * proxyName, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AutoWebProxyScriptEngine__ctor, (AutoWebProxyScriptEngine * __this, WebProxy * proxy, bool useRegistry, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Uri *, AutoWebProxyScriptEngine_get_AutomaticConfigurationScript, (AutoWebProxyScriptEngine * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, AutoWebProxyScriptEngine_set_AutomaticConfigurationScript, (AutoWebProxyScriptEngine * __this, Uri * value, MethodInfo * method));
DO_APP_FUNC(0x0052A280, bool, AutoWebProxyScriptEngine_get_AutomaticallyDetectSettings, (AutoWebProxyScriptEngine * __this, MethodInfo * method));
DO_APP_FUNC(0x00533150, void, AutoWebProxyScriptEngine_set_AutomaticallyDetectSettings, (AutoWebProxyScriptEngine * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x02010EF0, bool, AutoWebProxyScriptEngine_GetProxies, (AutoWebProxyScriptEngine * __this, Uri * destination, IList_1_System_String_ * * proxyList, MethodInfo * method));
DO_APP_FUNC(0x02010EF0, bool, AutoWebProxyScriptEngine_GetProxies_1, (AutoWebProxyScriptEngine * __this, Uri * destination, IList_1_System_String_ * * proxyList, int32_t * syncStatus, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AutoWebProxyScriptEngine_Close, (AutoWebProxyScriptEngine * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AutoWebProxyScriptEngine_Abort, (AutoWebProxyScriptEngine * __this, int32_t * syncStatus, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AutoWebProxyScriptEngine_CheckForChanges, (AutoWebProxyScriptEngine * __this, MethodInfo * method));
DO_APP_FUNC(0x020AAAB0, void, UnsafeNclNativeMethods_HttpApi__cctor, (MethodInfo * method));
DO_APP_FUNC(0x020AB630, String *, UnsafeNclNativeMethods_HttpApi_HTTP_REQUEST_HEADER_ID_ToString, (int32_t position, MethodInfo * method));
DO_APP_FUNC(0x020AB700, void, UnsafeNclNativeMethods_HttpApi_HTTP_REQUEST_HEADER_ID__cctor, (MethodInfo * method));
DO_APP_FUNC(0x020AC690, void, UnsafeNclNativeMethods_HttpApi_HTTP_RESPONSE_HEADER_ID__cctor, (MethodInfo * method));
DO_APP_FUNC(0x020AC8B0, int32_t, UnsafeNclNativeMethods_HttpApi_HTTP_RESPONSE_HEADER_ID_IndexOfKnownHeader, (String * HeaderName, MethodInfo * method));
DO_APP_FUNC(0x020AC9B0, String *, UnsafeNclNativeMethods_HttpApi_HTTP_RESPONSE_HEADER_ID_ToString, (int32_t position, MethodInfo * method));
DO_APP_FUNC(0x020ACA80, String *, UnsafeNclNativeMethods_SecureStringHelper_CreateString, (SecureString * secureString, MethodInfo * method));
DO_APP_FUNC(0x020ACCD0, SecureString *, UnsafeNclNativeMethods_SecureStringHelper_CreateSecureString, (String * plainString, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, TraceSource *, Logging_get_Web, (MethodInfo * method));
DO_APP_FUNC(0x00420EE0, TraceSource *, Logging_get_HttpListener, (MethodInfo * method));
DO_APP_FUNC(0x00420EE0, TraceSource *, Logging_get_Sockets, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Logging_Enter, (TraceSource * traceSource, Object * obj, String * method_1, Object * paramObject, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Logging_Enter_1, (TraceSource * traceSource, String * msg, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Logging_Enter_2, (TraceSource * traceSource, String * msg, String * parameters, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Logging_Exception, (TraceSource * traceSource, Object * obj, String * method_1, Exception * e, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Logging_Exit, (TraceSource * traceSource, Object * obj, String * method_1, Object * retObject, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Logging_Exit_1, (TraceSource * traceSource, String * msg, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Logging_Exit_2, (TraceSource * traceSource, String * msg, String * parameters, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Logging_PrintInfo, (TraceSource * traceSource, Object * obj, String * method_1, String * msg, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Logging_PrintInfo_1, (TraceSource * traceSource, Object * obj, String * msg, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Logging_PrintInfo_2, (TraceSource * traceSource, String * msg, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Logging_PrintWarning, (TraceSource * traceSource, Object * obj, String * method_1, String * msg, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Logging_PrintWarning_1, (TraceSource * traceSource, String * msg, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Logging_PrintError, (TraceSource * traceSource, String * msg, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Logging__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TraceSource__ctor, (TraceSource * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD34E0, void, ServerCertValidationCallback__ctor, (ServerCertValidationCallback * __this, RemoteCertificateValidationCallback * validationCallback, MethodInfo * method));
DO_APP_FUNC(0x002FA280, RemoteCertificateValidationCallback *, ServerCertValidationCallback_get_ValidationCallback, (ServerCertValidationCallback * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD3590, void, ServerCertValidationCallback_Callback, (ServerCertValidationCallback * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BD36B0, bool, ServerCertValidationCallback_Invoke, (ServerCertValidationCallback * __this, Object * request, X509Certificate_1 * certificate, X509Chain * chain, SslPolicyErrors__Enum sslPolicyErrors, MethodInfo * method));
DO_APP_FUNC(0x01BD3970, void, ServerCertValidationCallback_CallbackContext__ctor, (ServerCertValidationCallback_CallbackContext * __this, Object * request, X509Certificate_1 * certificate, X509Chain * chain, SslPolicyErrors__Enum sslPolicyErrors, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AuthenticationManager__ctor, (AuthenticationManager * __this, MethodInfo * method));
DO_APP_FUNC(0x0200E810, void, AuthenticationManager_EnsureModules, (MethodInfo * method));
DO_APP_FUNC(0x0200EEC0, ICredentialPolicy *, AuthenticationManager_get_CredentialPolicy, (MethodInfo * method));
DO_APP_FUNC(0x0200EF60, void, AuthenticationManager_set_CredentialPolicy, (ICredentialPolicy * value, MethodInfo * method));
DO_APP_FUNC(0x0200F010, Exception *, AuthenticationManager_GetMustImplement, (MethodInfo * method));
DO_APP_FUNC(0x0200F150, StringDictionary *, AuthenticationManager_get_CustomTargetNameDictionary, (MethodInfo * method));
DO_APP_FUNC(0x0200F1F0, IEnumerator *, AuthenticationManager_get_RegisteredModules, (MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, AuthenticationManager_get_OSSupportsExtendedProtection, (MethodInfo * method));
DO_APP_FUNC(0x0200F2B0, void, AuthenticationManager_Clear, (MethodInfo * method));
DO_APP_FUNC(0x0200F460, Authorization *, AuthenticationManager_Authenticate, (String * challenge, WebRequest * request, ICredentials * credentials, MethodInfo * method));
DO_APP_FUNC(0x0200F5C0, Authorization *, AuthenticationManager_DoAuthenticate, (String * challenge, WebRequest * request, ICredentials * credentials, MethodInfo * method));
DO_APP_FUNC(0x0200F8E0, Authorization *, AuthenticationManager_PreAuthenticate, (WebRequest * request, ICredentials * credentials, MethodInfo * method));
DO_APP_FUNC(0x0200FCD0, void, AuthenticationManager_Register, (IAuthenticationModule * authenticationModule, MethodInfo * method));
DO_APP_FUNC(0x0200FED0, void, AuthenticationManager_Unregister, (IAuthenticationModule * authenticationModule, MethodInfo * method));
DO_APP_FUNC(0x0200FFC0, void, AuthenticationManager_Unregister_1, (String * authenticationScheme, MethodInfo * method));
DO_APP_FUNC(0x020100A0, void, AuthenticationManager_DoUnregister, (String * authenticationScheme, bool throwEx, MethodInfo * method));
DO_APP_FUNC(0x02010450, void, AuthenticationManager__cctor, (MethodInfo * method));
DO_APP_FUNC(0x020148A0, Authorization *, BasicClient_Authenticate, (BasicClient * __this, String * challenge, WebRequest * webRequest, ICredentials * credentials, MethodInfo * method));
DO_APP_FUNC(0x020149B0, Byte__Array *, BasicClient_GetBytes, (String * str, MethodInfo * method));
DO_APP_FUNC(0x02014AA0, Authorization *, BasicClient_InternalAuthenticate, (WebRequest * webRequest, ICredentials * credentials, MethodInfo * method));
DO_APP_FUNC(0x02014EC0, Authorization *, BasicClient_PreAuthenticate, (BasicClient * __this, WebRequest * webRequest, ICredentials * credentials, MethodInfo * method));
DO_APP_FUNC(0x02014EE0, String *, BasicClient_get_AuthenticationType, (BasicClient * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, BasicClient_get_CanPreAuthenticate, (BasicClient * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BasicClient__ctor, (BasicClient * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, BindIPEndPoint__ctor, (BindIPEndPoint * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x02014F60, IPEndPoint *, BindIPEndPoint_Invoke, (BindIPEndPoint * __this, ServicePoint * servicePoint, IPEndPoint * remoteEndPoint, int32_t retryCount, MethodInfo * method));
DO_APP_FUNC(0x020154D0, IAsyncResult *, BindIPEndPoint_BeginInvoke, (BindIPEndPoint * __this, ServicePoint * servicePoint, IPEndPoint * remoteEndPoint, int32_t retryCount, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, IPEndPoint *, BindIPEndPoint_EndInvoke, (BindIPEndPoint * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x02016D60, void, ChunkedInputStream__ctor, (ChunkedInputStream * __this, HttpListenerContext * context, Stream * stream, Byte__Array * buffer, int32_t offset, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, MonoChunkStream *, ChunkedInputStream_get_Decoder, (ChunkedInputStream * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB70, void, ChunkedInputStream_set_Decoder, (ChunkedInputStream * __this, MonoChunkStream * value, MethodInfo * method));
DO_APP_FUNC(0x02016F70, int32_t, ChunkedInputStream_Read, (ChunkedInputStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x02016FC0, IAsyncResult *, ChunkedInputStream_BeginRead, (ChunkedInputStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * cback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x020174E0, void, ChunkedInputStream_OnRead, (ChunkedInputStream * __this, IAsyncResult * base_ares, MethodInfo * method));
DO_APP_FUNC(0x020178F0, int32_t, ChunkedInputStream_EndRead, (ChunkedInputStream * __this, IAsyncResult * ares, MethodInfo * method));
DO_APP_FUNC(0x02017B20, void, ChunkedInputStream_Close, (ChunkedInputStream * __this, MethodInfo * method));
DO_APP_FUNC(0x02017B30, void, ChunkedInputStream_ReadBufferState__ctor, (ChunkedInputStream_ReadBufferState * __this, Byte__Array * buffer, int32_t offset, int32_t count, HttpStreamAsyncResult * ares, MethodInfo * method));
DO_APP_FUNC(0x01EAC660, bool, DefaultCertificatePolicy_CheckValidationResult, (DefaultCertificatePolicy * __this, ServicePoint * point, X509Certificate_1 * certificate, WebRequest * request, int32_t certificateProblem, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DefaultCertificatePolicy__ctor, (DefaultCertificatePolicy * __this, MethodInfo * method));
DO_APP_FUNC(0x01EAEAB0, void, DigestHeaderParser__ctor, (DigestHeaderParser * __this, String * header, MethodInfo * method));
DO_APP_FUNC(0x00791D90, String *, DigestHeaderParser_get_Realm, (DigestHeaderParser * __this, MethodInfo * method));
DO_APP_FUNC(0x00791DD0, String *, DigestHeaderParser_get_Opaque, (DigestHeaderParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01EAEBA0, String *, DigestHeaderParser_get_Nonce, (DigestHeaderParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01EAEBE0, String *, DigestHeaderParser_get_Algorithm, (DigestHeaderParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01EAEC20, String *, DigestHeaderParser_get_QOP, (DigestHeaderParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01EAEC60, bool, DigestHeaderParser_Parse, (DigestHeaderParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01EAEEF0, void, DigestHeaderParser_SkipWhitespace, (DigestHeaderParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01EAEF60, String *, DigestHeaderParser_GetKey, (DigestHeaderParser * __this, MethodInfo * method));
DO_APP_FUNC(0x01EAF010, bool, DigestHeaderParser_GetKeywordAndValue, (DigestHeaderParser * __this, String * * key, String * * value, MethodInfo * method));
DO_APP_FUNC(0x01EAF290, void, DigestHeaderParser__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01EAF500, void, DigestSession__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01EAF590, void, DigestSession__ctor, (DigestSession * __this, MethodInfo * method));
DO_APP_FUNC(0x01EAF640, String *, DigestSession_get_Algorithm, (DigestSession * __this, MethodInfo * method));
DO_APP_FUNC(0x01EAF690, String *, DigestSession_get_Realm, (DigestSession * __this, MethodInfo * method));
DO_APP_FUNC(0x01EAF6E0, String *, DigestSession_get_Nonce, (DigestSession * __this, MethodInfo * method));
DO_APP_FUNC(0x01EAF730, String *, DigestSession_get_Opaque, (DigestSession * __this, MethodInfo * method));
DO_APP_FUNC(0x01EAF780, String *, DigestSession_get_QOP, (DigestSession * __this, MethodInfo * method));
DO_APP_FUNC(0x01EAF7D0, String *, DigestSession_get_CNonce, (DigestSession * __this, MethodInfo * method));
DO_APP_FUNC(0x01EAF910, bool, DigestSession_Parse, (DigestSession * __this, String * challenge, MethodInfo * method));
DO_APP_FUNC(0x01EAFBD0, String *, DigestSession_HashToHexString, (DigestSession * __this, String * toBeHashed, MethodInfo * method));
DO_APP_FUNC(0x01EAFE30, String *, DigestSession_HA1, (DigestSession * __this, String * username, String * password, MethodInfo * method));
DO_APP_FUNC(0x01EB00E0, String *, DigestSession_HA2, (DigestSession * __this, HttpWebRequest * webRequest, MethodInfo * method));
DO_APP_FUNC(0x01EB0280, String *, DigestSession_Response, (DigestSession * __this, String * username, String * password, HttpWebRequest * webRequest, MethodInfo * method));
DO_APP_FUNC(0x01EB0510, Authorization *, DigestSession_Authenticate, (DigestSession * __this, WebRequest * webRequest, ICredentials * credentials, MethodInfo * method));
DO_APP_FUNC(0x002FA280, DateTime, DigestSession_get_LastUse, (DigestSession * __this, MethodInfo * method));
DO_APP_FUNC(0x01EADAA0, Hashtable *, DigestClient_get_Cache, (MethodInfo * method));
DO_APP_FUNC(0x01EADCB0, void, DigestClient_CheckExpired, (int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01EAE310, Authorization *, DigestClient_Authenticate, (DigestClient * __this, String * challenge, WebRequest * webRequest, ICredentials * credentials, MethodInfo * method));
DO_APP_FUNC(0x01EAE730, Authorization *, DigestClient_PreAuthenticate, (DigestClient * __this, WebRequest * webRequest, ICredentials * credentials, MethodInfo * method));
DO_APP_FUNC(0x01EAE8D0, String *, DigestClient_get_AuthenticationType, (DigestClient * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, DigestClient_get_CanPreAuthenticate, (DigestClient * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DigestClient__ctor, (DigestClient * __this, MethodInfo * method));
DO_APP_FUNC(0x01EAE950, void, DigestClient__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Dns__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01EB0B40, IAsyncResult *, Dns_BeginGetHostByName, (String * hostName, AsyncCallback * requestCallback, Object * stateObject, MethodInfo * method));
DO_APP_FUNC(0x01EB0D00, IAsyncResult *, Dns_BeginResolve, (String * hostName, AsyncCallback * requestCallback, Object * stateObject, MethodInfo * method));
DO_APP_FUNC(0x01EB0EC0, IAsyncResult *, Dns_BeginGetHostAddresses, (String * hostNameOrAddress, AsyncCallback * requestCallback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01EB1120, IAsyncResult *, Dns_BeginGetHostEntry, (String * hostNameOrAddress, AsyncCallback * requestCallback, Object * stateObject, MethodInfo * method));
DO_APP_FUNC(0x01EB1380, IAsyncResult *, Dns_BeginGetHostEntry_1, (IPAddress * address, AsyncCallback * requestCallback, Object * stateObject, MethodInfo * method));
DO_APP_FUNC(0x01EB1540, IPHostEntry *, Dns_EndGetHostByName, (IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01EB16E0, IPHostEntry *, Dns_EndResolve, (IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01EB1880, IPAddress__Array *, Dns_EndGetHostAddresses, (IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01EB1A20, IPHostEntry *, Dns_EndGetHostEntry, (IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01EB1C20, bool, Dns_GetHostByName_internal, (String * host, String * * h_name, String__Array * * h_aliases, String__Array * * h_addr_list, int32_t hint, MethodInfo * method));
DO_APP_FUNC(0x01EB1C30, bool, Dns_GetHostByAddr_internal, (String * addr, String * * h_name, String__Array * * h_aliases, String__Array * * h_addr_list, int32_t hint, MethodInfo * method));
DO_APP_FUNC(0x01EB1C40, bool, Dns_GetHostName_internal, (String * * h_name, MethodInfo * method));
DO_APP_FUNC(0x01EB1D40, void, Dns_Error_11001, (String * hostName, MethodInfo * method));
DO_APP_FUNC(0x01EB1DB0, IPHostEntry *, Dns_hostent_to_IPHostEntry, (String * originalHostName, String * h_name, String__Array * h_aliases, String__Array * h_addrlist, MethodInfo * method));
DO_APP_FUNC(0x01EB21E0, IPHostEntry *, Dns_GetHostByAddress, (IPAddress * address, MethodInfo * method));
DO_APP_FUNC(0x01EB22D0, IPHostEntry *, Dns_GetHostByAddress_1, (String * address, MethodInfo * method));
DO_APP_FUNC(0x01EB23B0, IPHostEntry *, Dns_GetHostByAddressFromString, (String * address, bool parse, MethodInfo * method));
DO_APP_FUNC(0x01EB2570, IPHostEntry *, Dns_GetHostEntry, (String * hostNameOrAddress, MethodInfo * method));
DO_APP_FUNC(0x01EB2830, IPHostEntry *, Dns_GetHostEntry_1, (IPAddress * address, MethodInfo * method));
DO_APP_FUNC(0x01EB2920, IPAddress__Array *, Dns_GetHostAddresses, (String * hostNameOrAddress, MethodInfo * method));
DO_APP_FUNC(0x01EB2B50, IPHostEntry *, Dns_GetHostByName, (String * hostName, MethodInfo * method));
DO_APP_FUNC(0x01EB2CD0, String *, Dns_GetHostName, (MethodInfo * method));
DO_APP_FUNC(0x01EB2E60, IPHostEntry *, Dns_Resolve, (String * hostName, MethodInfo * method));
DO_APP_FUNC(0x01EB3010, Task_1_System_Net_IPAddress_ *, Dns_GetHostAddressesAsync, (String * hostNameOrAddress, MethodInfo * method));
DO_APP_FUNC(0x01EB32B0, Task_1_System_Net_IPHostEntry_ *, Dns_GetHostEntryAsync, (IPAddress * address, MethodInfo * method));
DO_APP_FUNC(0x01EB3550, Task_1_System_Net_IPHostEntry_ *, Dns_GetHostEntryAsync_1, (String * hostNameOrAddress, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, Dns_GetHostByNameCallback__ctor, (Dns_GetHostByNameCallback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01852930, IPHostEntry *, Dns_GetHostByNameCallback_Invoke, (Dns_GetHostByNameCallback * __this, String * hostName, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, Dns_GetHostByNameCallback_BeginInvoke, (Dns_GetHostByNameCallback * __this, String * hostName, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, IPHostEntry *, Dns_GetHostByNameCallback_EndInvoke, (Dns_GetHostByNameCallback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, Dns_ResolveCallback__ctor, (Dns_ResolveCallback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01852930, IPHostEntry *, Dns_ResolveCallback_Invoke, (Dns_ResolveCallback * __this, String * hostName, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, Dns_ResolveCallback_BeginInvoke, (Dns_ResolveCallback * __this, String * hostName, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, IPHostEntry *, Dns_ResolveCallback_EndInvoke, (Dns_ResolveCallback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, Dns_GetHostEntryNameCallback__ctor, (Dns_GetHostEntryNameCallback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01852930, IPHostEntry *, Dns_GetHostEntryNameCallback_Invoke, (Dns_GetHostEntryNameCallback * __this, String * hostName, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, Dns_GetHostEntryNameCallback_BeginInvoke, (Dns_GetHostEntryNameCallback * __this, String * hostName, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, IPHostEntry *, Dns_GetHostEntryNameCallback_EndInvoke, (Dns_GetHostEntryNameCallback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, Dns_GetHostEntryIPCallback__ctor, (Dns_GetHostEntryIPCallback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01852930, IPHostEntry *, Dns_GetHostEntryIPCallback_Invoke, (Dns_GetHostEntryIPCallback * __this, IPAddress * hostAddress, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, Dns_GetHostEntryIPCallback_BeginInvoke, (Dns_GetHostEntryIPCallback * __this, IPAddress * hostAddress, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, IPHostEntry *, Dns_GetHostEntryIPCallback_EndInvoke, (Dns_GetHostEntryIPCallback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, Dns_GetHostAddressesCallback__ctor, (Dns_GetHostAddressesCallback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x014347E0, IPAddress__Array *, Dns_GetHostAddressesCallback_Invoke, (Dns_GetHostAddressesCallback * __this, String * hostName, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, Dns_GetHostAddressesCallback_BeginInvoke, (Dns_GetHostAddressesCallback * __this, String * hostName, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, IPAddress__Array *, Dns_GetHostAddressesCallback_EndInvoke, (Dns_GetHostAddressesCallback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01EB42F0, void, EndPointListener__ctor, (EndPointListener * __this, HttpListener * listener, IPAddress * addr, int32_t port, bool secure, MethodInfo * method));
DO_APP_FUNC(0x002FA280, HttpListener *, EndPointListener_get_Listener, (EndPointListener * __this, MethodInfo * method));
DO_APP_FUNC(0x01EB4AF0, void, EndPointListener_Accept, (Socket * socket, SocketAsyncEventArgs * e, Socket * * accepted, MethodInfo * method));
DO_APP_FUNC(0x01EB4C10, void, EndPointListener_ProcessAccept, (SocketAsyncEventArgs * args, MethodInfo * method));
DO_APP_FUNC(0x01EB4F60, void, EndPointListener_OnAccept, (Object * sender, SocketAsyncEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01EB4F70, void, EndPointListener_RemoveConnection, (EndPointListener * __this, HttpConnection * conn, MethodInfo * method));
DO_APP_FUNC(0x01EB50C0, bool, EndPointListener_BindContext, (EndPointListener * __this, HttpListenerContext * context, MethodInfo * method));
DO_APP_FUNC(0x01EB5130, void, EndPointListener_UnbindContext, (EndPointListener * __this, HttpListenerContext * context, MethodInfo * method));
DO_APP_FUNC(0x01EB5160, HttpListener *, EndPointListener_SearchListener, (EndPointListener * __this, Uri * uri, ListenerPrefix * * prefix, MethodInfo * method));
DO_APP_FUNC(0x01EB56B0, HttpListener *, EndPointListener_MatchFromList, (EndPointListener * __this, String * host, String * path, ArrayList * list, ListenerPrefix * * prefix, MethodInfo * method));
DO_APP_FUNC(0x01EB5960, void, EndPointListener_AddSpecial, (EndPointListener * __this, ArrayList * coll, ListenerPrefix * prefix, MethodInfo * method));
DO_APP_FUNC(0x01EB5BD0, bool, EndPointListener_RemoveSpecial, (EndPointListener * __this, ArrayList * coll, ListenerPrefix * prefix, MethodInfo * method));
DO_APP_FUNC(0x01EB5D30, void, EndPointListener_CheckIfRemove, (EndPointListener * __this, MethodInfo * method));
DO_APP_FUNC(0x01EB5E40, void, EndPointListener_Close, (EndPointListener * __this, MethodInfo * method));
DO_APP_FUNC(0x01EB6190, void, EndPointListener_AddPrefix, (EndPointListener * __this, ListenerPrefix * prefix, HttpListener * listener, MethodInfo * method));
DO_APP_FUNC(0x01EB66D0, void, EndPointListener_RemovePrefix, (EndPointListener * __this, ListenerPrefix * prefix, HttpListener * listener, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, EndPointManager__ctor, (EndPointManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01EB6B90, void, EndPointManager_AddListener, (HttpListener * listener, MethodInfo * method));
DO_APP_FUNC(0x01EB70B0, void, EndPointManager_AddPrefix, (String * prefix, HttpListener * listener, MethodInfo * method));
DO_APP_FUNC(0x01EB7250, void, EndPointManager_AddPrefixInternal, (String * p, HttpListener * listener, MethodInfo * method));
DO_APP_FUNC(0x01EB74E0, EndPointListener *, EndPointManager_GetEPListener, (String * host, int32_t port, HttpListener * listener, bool secure, MethodInfo * method));
DO_APP_FUNC(0x01EB7AF0, void, EndPointManager_RemoveEndPoint, (EndPointListener * epl, IPEndPoint * ep, MethodInfo * method));
DO_APP_FUNC(0x01EB7DE0, void, EndPointManager_RemoveListener, (HttpListener * listener, MethodInfo * method));
DO_APP_FUNC(0x01EB8050, void, EndPointManager_RemovePrefix, (String * prefix, HttpListener * listener, MethodInfo * method));
DO_APP_FUNC(0x01EB81F0, void, EndPointManager_RemovePrefixInternal, (String * prefix, HttpListener * listener, MethodInfo * method));
DO_APP_FUNC(0x01EB8420, void, EndPointManager__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01D25D60, void, EndpointPermission__ctor, (EndpointPermission * __this, String * hostname, int32_t port, TransportType__Enum transport, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, EndpointPermission_get_Hostname, (EndpointPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, EndpointPermission_get_Port, (EndpointPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A010, TransportType__Enum, EndpointPermission_get_Transport, (EndpointPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01D25E50, bool, EndpointPermission_Equals, (EndpointPermission * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01D25F50, int32_t, EndpointPermission_GetHashCode, (EndpointPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01D25F90, String *, EndpointPermission_ToString, (EndpointPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01D26210, bool, EndpointPermission_IsSubsetOf, (EndpointPermission * __this, EndpointPermission * perm, MethodInfo * method));
DO_APP_FUNC(0x01D263A0, bool, EndpointPermission_IsSubsetOf_1, (EndpointPermission * __this, String * addr1, String * addr2, MethodInfo * method));
DO_APP_FUNC(0x01D26570, EndpointPermission *, EndpointPermission_Intersect, (EndpointPermission * __this, EndpointPermission * perm, MethodInfo * method));
DO_APP_FUNC(0x01D26750, String *, EndpointPermission_IntersectHostname, (EndpointPermission * __this, EndpointPermission * perm, MethodInfo * method));
DO_APP_FUNC(0x01D26A00, String *, EndpointPermission_Intersect_1, (EndpointPermission * __this, String * addr1, String * addr2, MethodInfo * method));
DO_APP_FUNC(0x01D26E80, int32_t, EndpointPermission_ToNumber, (EndpointPermission * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D27010, void, EndpointPermission_Resolve, (EndpointPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x00CE0760, void, EndpointPermission_UndoResolve, (EndpointPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01D27260, void, EndpointPermission__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01D27320, void, EndpointPermission__ctor_1, (EndpointPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2C460, void, FtpAsyncResult__ctor, (FtpAsyncResult * __this, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, Object *, FtpAsyncResult_get_AsyncState, (FtpAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2C5C0, WaitHandle *, FtpAsyncResult_get_AsyncWaitHandle, (FtpAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x00444DC0, bool, FtpAsyncResult_get_CompletedSynchronously, (FtpAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2C7F0, bool, FtpAsyncResult_get_IsCompleted, (FtpAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x00519280, bool, FtpAsyncResult_get_GotException, (FtpAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, Exception *, FtpAsyncResult_get_Exception, (FtpAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, FtpWebResponse *, FtpAsyncResult_get_Response, (FtpAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, FtpAsyncResult_set_Response, (FtpAsyncResult * __this, FtpWebResponse * value, MethodInfo * method));
DO_APP_FUNC(0x002FB990, Stream *, FtpAsyncResult_get_Stream, (FtpAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9A0, void, FtpAsyncResult_set_Stream, (FtpAsyncResult * __this, Stream * value, MethodInfo * method));
DO_APP_FUNC(0x01D2C8E0, void, FtpAsyncResult_WaitUntilComplete, (FtpAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2C930, bool, FtpAsyncResult_WaitUntilComplete_1, (FtpAsyncResult * __this, int32_t timeout, bool exitContext, MethodInfo * method));
DO_APP_FUNC(0x01D2C9B0, void, FtpAsyncResult_SetCompleted, (FtpAsyncResult * __this, bool synch, Exception * exc, FtpWebResponse * response, MethodInfo * method));
DO_APP_FUNC(0x01D2CAB0, void, FtpAsyncResult_SetCompleted_1, (FtpAsyncResult * __this, bool synch, FtpWebResponse * response, MethodInfo * method));
DO_APP_FUNC(0x01D2CAD0, void, FtpAsyncResult_SetCompleted_2, (FtpAsyncResult * __this, bool synch, Exception * exc, MethodInfo * method));
DO_APP_FUNC(0x01D2CAF0, void, FtpAsyncResult_DoCallback, (FtpAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2CBA0, void, FtpAsyncResult_Reset, (FtpAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2CC90, void, FtpDataStream__ctor, (FtpDataStream * __this, FtpWebRequest * request, Stream * stream, bool isRead, MethodInfo * method));
DO_APP_FUNC(0x004379C0, bool, FtpDataStream_get_CanRead, (FtpDataStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2CD90, bool, FtpDataStream_get_CanWrite, (FtpDataStream * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, FtpDataStream_get_CanSeek, (FtpDataStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2CDA0, int64_t, FtpDataStream_get_Length, (FtpDataStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2CDF0, int64_t, FtpDataStream_get_Position, (FtpDataStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2CE40, void, FtpDataStream_set_Position, (FtpDataStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01D2CE90, Stream *, FtpDataStream_get_NetworkStream, (FtpDataStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2CEB0, void, FtpDataStream_Close, (FtpDataStream * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, FtpDataStream_Flush, (FtpDataStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2CED0, int64_t, FtpDataStream_Seek, (FtpDataStream * __this, int64_t offset, SeekOrigin__Enum origin, MethodInfo * method));
DO_APP_FUNC(0x01D2CF20, void, FtpDataStream_SetLength, (FtpDataStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01D2CF70, int32_t, FtpDataStream_ReadInternal, (FtpDataStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01D2D0F0, IAsyncResult *, FtpDataStream_BeginRead, (FtpDataStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, AsyncCallback * cb, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01D2D420, int32_t, FtpDataStream_EndRead, (FtpDataStream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01D2D5F0, int32_t, FtpDataStream_Read, (FtpDataStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01D2D7A0, void, FtpDataStream_WriteInternal, (FtpDataStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01D2D8C0, IAsyncResult *, FtpDataStream_BeginWrite, (FtpDataStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, AsyncCallback * cb, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01D2DBF0, void, FtpDataStream_EndWrite, (FtpDataStream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01D2DDA0, void, FtpDataStream_Write, (FtpDataStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01D2DF50, void, FtpDataStream_Finalize, (FtpDataStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2DFD0, void, FtpDataStream_System_IDisposable_Dispose, (FtpDataStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2E080, void, FtpDataStream_Dispose, (FtpDataStream * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01D2E110, void, FtpDataStream_CheckDisposed, (FtpDataStream * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, FtpDataStream_WriteDelegate__ctor, (FtpDataStream_WriteDelegate * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01D2E820, void, FtpDataStream_WriteDelegate_Invoke, (FtpDataStream_WriteDelegate * __this, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01D2ED60, IAsyncResult *, FtpDataStream_WriteDelegate_BeginInvoke, (FtpDataStream_WriteDelegate * __this, Byte__Array * buffer, int32_t offset, int32_t size, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, FtpDataStream_WriteDelegate_EndInvoke, (FtpDataStream_WriteDelegate * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, FtpDataStream_ReadDelegate__ctor, (FtpDataStream_ReadDelegate * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01D2E1F0, int32_t, FtpDataStream_ReadDelegate_Invoke, (FtpDataStream_ReadDelegate * __this, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01D2E740, IAsyncResult *, FtpDataStream_ReadDelegate_BeginInvoke, (FtpDataStream_ReadDelegate * __this, Byte__Array * buffer, int32_t offset, int32_t size, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00F550D0, int32_t, FtpDataStream_ReadDelegate_EndInvoke, (FtpDataStream_ReadDelegate * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01D2EE40, WebRequest *, FtpRequestCreator_Create, (FtpRequestCreator * __this, Uri * uri, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, FtpRequestCreator__ctor, (FtpRequestCreator * __this, MethodInfo * method));
DO_APP_FUNC(0x0091DD30, void, FtpStatus__ctor, (FtpStatus * __this, FtpStatusCode__Enum statusCode, String * statusDescription, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, FtpStatusCode__Enum, FtpStatus_get_StatusCode, (FtpStatus * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, FtpStatus_get_StatusDescription, (FtpStatus * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2EF90, void, FtpWebRequest__ctor, (FtpWebRequest * __this, Uri * uri, MethodInfo * method));
DO_APP_FUNC(0x01D2F150, Exception *, FtpWebRequest_GetMustImplement, (MethodInfo * method));
DO_APP_FUNC(0x01D2F290, X509CertificateCollection_1 *, FtpWebRequest_get_ClientCertificates, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2F330, void, FtpWebRequest_set_ClientCertificates, (FtpWebRequest * __this, X509CertificateCollection_1 * value, MethodInfo * method));
DO_APP_FUNC(0x01D2F3D0, String *, FtpWebRequest_get_ConnectionGroupName, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2F470, void, FtpWebRequest_set_ConnectionGroupName, (FtpWebRequest * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D2F510, String *, FtpWebRequest_get_ContentType, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2F560, void, FtpWebRequest_set_ContentType, (FtpWebRequest * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, int64_t, FtpWebRequest_get_ContentLength, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, FtpWebRequest_set_ContentLength, (FtpWebRequest * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x002FBC80, int64_t, FtpWebRequest_get_ContentOffset, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2F5B0, void, FtpWebRequest_set_ContentOffset, (FtpWebRequest * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, ICredentials *, FtpWebRequest_get_Credentials, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2F670, void, FtpWebRequest_set_Credentials, (FtpWebRequest * __this, ICredentials * value, MethodInfo * method));
DO_APP_FUNC(0x005035A0, bool, FtpWebRequest_get_EnableSsl, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2F7D0, void, FtpWebRequest_set_EnableSsl, (FtpWebRequest * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01D2F800, WebHeaderCollection *, FtpWebRequest_get_Headers, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2F8A0, void, FtpWebRequest_set_Headers, (FtpWebRequest * __this, WebHeaderCollection * value, MethodInfo * method));
DO_APP_FUNC(0x01D2F940, bool, FtpWebRequest_get_KeepAlive, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2F950, void, FtpWebRequest_set_KeepAlive, (FtpWebRequest * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FBCC0, String *, FtpWebRequest_get_Method, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2F960, void, FtpWebRequest_set_Method, (FtpWebRequest * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D2FB80, bool, FtpWebRequest_get_PreAuthenticate, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2FBD0, void, FtpWebRequest_set_PreAuthenticate, (FtpWebRequest * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FBC40, IWebProxy *, FtpWebRequest_get_Proxy, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2FC20, void, FtpWebRequest_set_Proxy, (FtpWebRequest * __this, IWebProxy * value, MethodInfo * method));
DO_APP_FUNC(0x007007F0, int32_t, FtpWebRequest_get_ReadWriteTimeout, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2FC50, void, FtpWebRequest_set_ReadWriteTimeout, (FtpWebRequest * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x002FBCE0, String *, FtpWebRequest_get_RenameTo, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2FD10, void, FtpWebRequest_set_RenameTo, (FtpWebRequest * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, Uri *, FtpWebRequest_get_RequestUri, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2FDF0, ServicePoint *, FtpWebRequest_get_ServicePoint, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2FE00, bool, FtpWebRequest_get_UsePassive, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2FE10, void, FtpWebRequest_set_UsePassive, (FtpWebRequest * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01D2FE40, bool, FtpWebRequest_get_UseDefaultCredentials, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2FEE0, void, FtpWebRequest_set_UseDefaultCredentials, (FtpWebRequest * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x006C14C0, bool, FtpWebRequest_get_UseBinary, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2FF80, void, FtpWebRequest_set_UseBinary, (FtpWebRequest * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00736620, int32_t, FtpWebRequest_get_Timeout, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D2FFB0, void, FtpWebRequest_set_Timeout, (FtpWebRequest * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01D30070, String *, FtpWebRequest_get_DataType, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D30100, FtpWebRequest_RequestState__Enum, FtpWebRequest_get_State, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D301F0, void, FtpWebRequest_set_State, (FtpWebRequest * __this, FtpWebRequest_RequestState__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01D303A0, void, FtpWebRequest_Abort, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D30670, IAsyncResult *, FtpWebRequest_BeginGetResponse, (FtpWebRequest * __this, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01D30B60, WebResponse *, FtpWebRequest_EndGetResponse, (FtpWebRequest * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01D30D50, WebResponse *, FtpWebRequest_GetResponse, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D30D90, IAsyncResult *, FtpWebRequest_BeginGetRequestStream, (FtpWebRequest * __this, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01D312C0, Stream *, FtpWebRequest_EndGetRequestStream, (FtpWebRequest * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01D31520, Stream *, FtpWebRequest_GetRequestStream, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D31560, ServicePoint *, FtpWebRequest_GetServicePoint, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D31630, void, FtpWebRequest_ResolveHost, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D317B0, void, FtpWebRequest_ProcessRequest, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D31B70, void, FtpWebRequest_SetType, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D31D30, String *, FtpWebRequest_GetRemoteFolderPath, (FtpWebRequest * __this, Uri * uri, MethodInfo * method));
DO_APP_FUNC(0x01D32290, void, FtpWebRequest_CWDAndSetFileName, (FtpWebRequest * __this, Uri * uri, MethodInfo * method));
DO_APP_FUNC(0x01D324B0, void, FtpWebRequest_ProcessMethod, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D32BE0, void, FtpWebRequest_CloseControlConnection, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D32CB0, void, FtpWebRequest_CloseDataConnection, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D32CE0, void, FtpWebRequest_CloseConnection, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D32DD0, void, FtpWebRequest_ProcessSimpleMethod, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D33570, void, FtpWebRequest_UploadData, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D33720, void, FtpWebRequest_DownloadData, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D338C0, void, FtpWebRequest_CheckRequestStarted, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D33970, void, FtpWebRequest_OpenControlConnection, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D34140, String *, FtpWebRequest_GetInitialPath, (FtpStatus * status, MethodInfo * method));
DO_APP_FUNC(0x01D34390, Socket *, FtpWebRequest_SetupPassiveConnection, (FtpWebRequest * __this, String * statusDescription, bool ipv6, MethodInfo * method));
DO_APP_FUNC(0x01D34720, int32_t, FtpWebRequest_GetPortV4, (FtpWebRequest * __this, String * responseString, MethodInfo * method));
DO_APP_FUNC(0x01D34A10, int32_t, FtpWebRequest_GetPortV6, (FtpWebRequest * __this, String * responseString, MethodInfo * method));
DO_APP_FUNC(0x01D34CD0, String *, FtpWebRequest_FormatAddress, (FtpWebRequest * __this, IPAddress * address, int32_t Port, MethodInfo * method));
DO_APP_FUNC(0x01D35170, String *, FtpWebRequest_FormatAddressV6, (FtpWebRequest * __this, IPAddress * address, int32_t port, MethodInfo * method));
DO_APP_FUNC(0x01D35380, Exception *, FtpWebRequest_CreateExceptionFromResponse, (FtpWebRequest * __this, FtpStatus * status, MethodInfo * method));
DO_APP_FUNC(0x01D35610, void, FtpWebRequest_SetTransferCompleted, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D356B0, void, FtpWebRequest_OperationCompleted, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D356D0, void, FtpWebRequest_SetCompleteWithError, (FtpWebRequest * __this, Exception * exc, MethodInfo * method));
DO_APP_FUNC(0x01D35700, Socket *, FtpWebRequest_InitDataConnection, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D35C60, void, FtpWebRequest_OpenDataConnection, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D361E0, void, FtpWebRequest_Authenticate, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D369A0, FtpStatus *, FtpWebRequest_SendCommand, (FtpWebRequest * __this, String * command, String__Array * parameters, MethodInfo * method));
DO_APP_FUNC(0x01D369C0, FtpStatus *, FtpWebRequest_SendCommand_1, (FtpWebRequest * __this, bool waitResponse, String * command, String__Array * parameters, MethodInfo * method));
DO_APP_FUNC(0x01D36C50, FtpStatus *, FtpWebRequest_ServiceNotAvailable, (MethodInfo * method));
DO_APP_FUNC(0x01D36DA0, FtpStatus *, FtpWebRequest_GetResponseStatus, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D37170, void, FtpWebRequest_InitiateSecureConnection, (FtpWebRequest * __this, Stream * * stream, MethodInfo * method));
DO_APP_FUNC(0x01D372C0, bool, FtpWebRequest_ChangeToSSLSocket, (FtpWebRequest * __this, Stream * * stream, MethodInfo * method));
DO_APP_FUNC(0x01D37440, bool, FtpWebRequest_InFinalState, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D37490, bool, FtpWebRequest_InProgress, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D374E0, void, FtpWebRequest_CheckIfAborted, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D375A0, void, FtpWebRequest_CheckFinalState, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D37670, void, FtpWebRequest__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01D37BB0, void, FtpWebRequest__ctor_1, (FtpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D37BE0, void, FtpWebResponse__ctor, (FtpWebResponse * __this, FtpWebRequest * request, Uri * uri, String * method_1, bool keepAlive, MethodInfo * method));
DO_APP_FUNC(0x01D37D00, void, FtpWebResponse__ctor_1, (FtpWebResponse * __this, FtpWebRequest * request, Uri * uri, String * method_1, FtpStatusCode__Enum statusCode, String * statusDescription, MethodInfo * method));
DO_APP_FUNC(0x01D37E30, void, FtpWebResponse__ctor_2, (FtpWebResponse * __this, FtpWebRequest * request, Uri * uri, String * method_1, FtpStatus * status, MethodInfo * method));
DO_APP_FUNC(0x002FBBE0, int64_t, FtpWebResponse_get_ContentLength, (FtpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01D37E70, WebHeaderCollection *, FtpWebResponse_get_Headers, (FtpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, Uri *, FtpWebResponse_get_ResponseUri, (FtpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, DateTime, FtpWebResponse_get_LastModified, (FtpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9C0, void, FtpWebResponse_set_LastModified, (FtpWebResponse * __this, DateTime value, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, String *, FtpWebResponse_get_BannerMessage, (FtpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9E0, void, FtpWebResponse_set_BannerMessage, (FtpWebResponse * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, String *, FtpWebResponse_get_WelcomeMessage, (FtpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBA00, void, FtpWebResponse_set_WelcomeMessage, (FtpWebResponse * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, String *, FtpWebResponse_get_ExitMessage, (FtpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, FtpWebResponse_set_ExitMessage, (FtpWebResponse * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x00654950, FtpStatusCode__Enum, FtpWebResponse_get_StatusCode, (FtpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x00654960, void, FtpWebResponse_set_StatusCode, (FtpWebResponse * __this, FtpStatusCode__Enum value, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, FtpWebResponse_get_SupportsHeaders, (FtpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, String *, FtpWebResponse_get_StatusDescription, (FtpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB70, void, FtpWebResponse_set_StatusDescription, (FtpWebResponse * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01D37FB0, void, FtpWebResponse_Close, (FtpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01D380B0, Stream *, FtpWebResponse_GetResponseStream, (FtpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, FtpWebResponse_set_Stream, (FtpWebResponse * __this, Stream * value, MethodInfo * method));
DO_APP_FUNC(0x002FB950, Stream *, FtpWebResponse_get_Stream, (FtpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01D38290, void, FtpWebResponse_UpdateStatus, (FtpWebResponse * __this, FtpStatus * status, MethodInfo * method));
DO_APP_FUNC(0x01D382C0, void, FtpWebResponse_CheckDisposed, (FtpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01D383A0, bool, FtpWebResponse_IsFinal, (FtpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01D383B0, void, FtpWebResponse__ctor_3, (FtpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01D3DAA0, void, HttpConnection__ctor, (HttpConnection * __this, Socket * sock, EndPointListener * epl, bool secure, X509Certificate_1 * cert, MethodInfo * method));
DO_APP_FUNC(0x002FBCA0, SslStream *, HttpConnection_get_SslStream, (HttpConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC60, Int32__Array *, HttpConnection_get_ClientCertificateErrors, (HttpConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC80, X509Certificate2 *, HttpConnection_get_ClientCertificate, (HttpConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D3E060, void, HttpConnection_Init, (HttpConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x0150AEB0, bool, HttpConnection_get_IsClosed, (HttpConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x003FF3C0, int32_t, HttpConnection_get_Reuses, (HttpConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D3E2A0, IPEndPoint *, HttpConnection_get_LocalEndPoint, (HttpConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D3E3A0, IPEndPoint *, HttpConnection_get_RemoteEndPoint, (HttpConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x00675C60, bool, HttpConnection_get_IsSecure, (HttpConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, ListenerPrefix *, HttpConnection_get_Prefix, (HttpConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBA00, void, HttpConnection_set_Prefix, (HttpConnection * __this, ListenerPrefix * value, MethodInfo * method));
DO_APP_FUNC(0x01D3E5A0, void, HttpConnection_OnTimeout, (HttpConnection * __this, Object * unused, MethodInfo * method));
DO_APP_FUNC(0x01D3E600, void, HttpConnection_BeginReadRequest, (HttpConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D3E7B0, RequestStream *, HttpConnection_GetRequestStream, (HttpConnection * __this, bool chunked, int64_t contentlength, MethodInfo * method));
DO_APP_FUNC(0x01D3EBC0, ResponseStream *, HttpConnection_GetResponseStream, (HttpConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D3EE70, void, HttpConnection_OnRead, (IAsyncResult * ares, MethodInfo * method));
DO_APP_FUNC(0x01D3EF40, void, HttpConnection_OnReadInternal, (HttpConnection * __this, IAsyncResult * ares, MethodInfo * method));
DO_APP_FUNC(0x01D3F420, void, HttpConnection_RemoveConnection, (HttpConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D3F480, bool, HttpConnection_ProcessInput, (HttpConnection * __this, MemoryStream * ms, MethodInfo * method));
DO_APP_FUNC(0x01D3F7D0, String *, HttpConnection_ReadLine, (HttpConnection * __this, Byte__Array * buffer, int32_t offset, int32_t len, int32_t * used, MethodInfo * method));
DO_APP_FUNC(0x01D3FA30, void, HttpConnection_SendError, (HttpConnection * __this, String * msg, int32_t status, MethodInfo * method));
DO_APP_FUNC(0x01D3FD20, void, HttpConnection_SendError_1, (HttpConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D3FD50, void, HttpConnection_Unbind, (HttpConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D3FDA0, void, HttpConnection_Close, (HttpConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D3FDB0, void, HttpConnection_CloseSocket, (HttpConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D3FF00, void, HttpConnection_Close_1, (HttpConnection * __this, bool force_close, MethodInfo * method));
DO_APP_FUNC(0x01D40360, void, HttpConnection__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01D404C0, bool, HttpConnection___ctor_b__24_0, (HttpConnection * __this, Object * t, X509Certificate_1 * c, X509Chain * ch, SslPolicyErrors__Enum e, MethodInfo * method));
DO_APP_FUNC(0x01D411E0, void, HttpListener__ctor, (HttpListener * __this, X509Certificate_1 * certificate, MonoTlsProvider * tlsProvider, MonoTlsSettings * tlsSettings, MethodInfo * method));
DO_APP_FUNC(0x01D41230, X509Certificate_1 *, HttpListener_LoadCertificateAndKey, (HttpListener * __this, IPAddress * addr, int32_t port, MethodInfo * method));
DO_APP_FUNC(0x01D41710, SslStream *, HttpListener_CreateSslStream, (HttpListener * __this, Stream * innerStream, bool ownsStream, RemoteCertificateValidationCallback * callback, MethodInfo * method));
DO_APP_FUNC(0x01D41AD0, void, HttpListener__ctor_1, (HttpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB970, AuthenticationSchemes__Enum, HttpListener_get_AuthenticationSchemes, (HttpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x01D423C0, void, HttpListener_set_AuthenticationSchemes, (HttpListener * __this, AuthenticationSchemes__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, AuthenticationSchemeSelector *, HttpListener_get_AuthenticationSchemeSelectorDelegate, (HttpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x01D423F0, void, HttpListener_set_AuthenticationSchemeSelectorDelegate, (HttpListener * __this, AuthenticationSchemeSelector * value, MethodInfo * method));
DO_APP_FUNC(0x002FBC20, HttpListener_ExtendedProtectionSelector *, HttpListener_get_ExtendedProtectionSelectorDelegate, (HttpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x01D42420, void, HttpListener_set_ExtendedProtectionSelectorDelegate, (HttpListener * __this, HttpListener_ExtendedProtectionSelector * value, MethodInfo * method));
DO_APP_FUNC(0x003FCB00, bool, HttpListener_get_IgnoreWriteExceptions, (HttpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x01D42530, void, HttpListener_set_IgnoreWriteExceptions, (HttpListener * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00EEDBB0, bool, HttpListener_get_IsListening, (HttpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, HttpListener_get_IsSupported, (MethodInfo * method));
DO_APP_FUNC(0x01D42560, HttpListenerPrefixCollection *, HttpListener_get_Prefixes, (HttpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x01D42580, HttpListenerTimeoutManager *, HttpListener_get_TimeoutManager, (HttpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC00, ExtendedProtectionPolicy *, HttpListener_get_ExtendedProtectionPolicy, (HttpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x01D425D0, void, HttpListener_set_ExtendedProtectionPolicy, (HttpListener * __this, ExtendedProtectionPolicy * value, MethodInfo * method));
DO_APP_FUNC(0x01D426C0, ServiceNameCollection *, HttpListener_get_DefaultServiceNames, (HttpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, String *, HttpListener_get_Realm, (HttpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x01D42830, void, HttpListener_set_Realm, (HttpListener * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x00614BA0, bool, HttpListener_get_UnsafeConnectionNtlmAuthentication, (HttpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x01D42860, void, HttpListener_set_UnsafeConnectionNtlmAuthentication, (HttpListener * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01D42890, void, HttpListener_Abort, (HttpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x01D428B0, void, HttpListener_Close, (HttpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x01D428F0, void, HttpListener_Close_1, (HttpListener * __this, bool force, MethodInfo * method));
DO_APP_FUNC(0x01D429B0, void, HttpListener_Cleanup, (HttpListener * __this, bool close_existing, MethodInfo * method));
DO_APP_FUNC(0x01D43410, IAsyncResult *, HttpListener_BeginGetContext, (HttpListener * __this, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01D439A0, HttpListenerContext *, HttpListener_EndGetContext, (HttpListener * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01D43CE0, AuthenticationSchemes__Enum, HttpListener_SelectAuthenticationScheme, (HttpListener * __this, HttpListenerContext * context, MethodInfo * method));
DO_APP_FUNC(0x01D43D20, HttpListenerContext *, HttpListener_GetContext, (HttpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x01D43ED0, void, HttpListener_Start, (HttpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x01D43F80, void, HttpListener_Stop, (HttpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x01D43FB0, void, HttpListener_System_IDisposable_Dispose, (HttpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x01D43FE0, Task_1_System_Net_HttpListenerContext_ *, HttpListener_GetContextAsync, (HttpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x01D44280, void, HttpListener_CheckDisposed, (HttpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x01D44360, HttpListenerContext *, HttpListener_GetContextFromQueue, (HttpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x01D44490, void, HttpListener_RegisterContext, (HttpListener * __this, HttpListenerContext * context, MethodInfo * method));
DO_APP_FUNC(0x01D448B0, void, HttpListener_UnregisterContext, (HttpListener * __this, HttpListenerContext * context, MethodInfo * method));
DO_APP_FUNC(0x01D44AD0, void, HttpListener_AddConnection, (HttpListener * __this, HttpConnection * cnc, MethodInfo * method));
DO_APP_FUNC(0x01D44B00, void, HttpListener_RemoveConnection, (HttpListener * __this, HttpConnection * cnc, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, HttpListener_ExtendedProtectionSelector__ctor, (HttpListener_ExtendedProtectionSelector * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x014347E0, ExtendedProtectionPolicy *, HttpListener_ExtendedProtectionSelector_Invoke, (HttpListener_ExtendedProtectionSelector * __this, HttpListenerRequest * request, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, HttpListener_ExtendedProtectionSelector_BeginInvoke, (HttpListener_ExtendedProtectionSelector * __this, HttpListenerRequest * request, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, ExtendedProtectionPolicy *, HttpListener_ExtendedProtectionSelector_EndInvoke, (HttpListener_ExtendedProtectionSelector * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01D44B30, void, HttpListenerBasicIdentity__ctor, (HttpListenerBasicIdentity * __this, String * username, String * password, MethodInfo * method));
DO_APP_FUNC(0x002FBC20, String *, HttpListenerBasicIdentity_get_Password, (HttpListenerBasicIdentity * __this, MethodInfo * method));
DO_APP_FUNC(0x01D44CE0, void, HttpListenerContext__ctor, (HttpListenerContext * __this, HttpConnection * cnc, MethodInfo * method));
DO_APP_FUNC(0x003FC7F0, int32_t, HttpListenerContext_get_ErrorStatus, (HttpListenerContext * __this, MethodInfo * method));
DO_APP_FUNC(0x00617D40, void, HttpListenerContext_set_ErrorStatus, (HttpListenerContext * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, HttpListenerContext_get_ErrorMessage, (HttpListenerContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9A0, void, HttpListenerContext_set_ErrorMessage, (HttpListenerContext * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x00519290, bool, HttpListenerContext_get_HaveError, (HttpListenerContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, HttpConnection *, HttpListenerContext_get_Connection, (HttpListenerContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, HttpListenerRequest *, HttpListenerContext_get_Request, (HttpListenerContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, HttpListenerResponse *, HttpListenerContext_get_Response, (HttpListenerContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, IPrincipal *, HttpListenerContext_get_User, (HttpListenerContext * __this, MethodInfo * method));
DO_APP_FUNC(0x01D45050, void, HttpListenerContext_ParseAuthentication, (HttpListenerContext * __this, AuthenticationSchemes__Enum expectedSchemes, MethodInfo * method));
DO_APP_FUNC(0x01D45200, IPrincipal *, HttpListenerContext_ParseBasicAuthentication, (HttpListenerContext * __this, String * authData, MethodInfo * method));
DO_APP_FUNC(0x01D45690, Task_1_System_Net_WebSockets_HttpListenerWebSocketContext_ *, HttpListenerContext_AcceptWebSocketAsync, (HttpListenerContext * __this, String * subProtocol, MethodInfo * method));
DO_APP_FUNC(0x01D456E0, Task_1_System_Net_WebSockets_HttpListenerWebSocketContext_ *, HttpListenerContext_AcceptWebSocketAsync_1, (HttpListenerContext * __this, String * subProtocol, TimeSpan keepAliveInterval, MethodInfo * method));
DO_APP_FUNC(0x01D45730, Task_1_System_Net_WebSockets_HttpListenerWebSocketContext_ *, HttpListenerContext_AcceptWebSocketAsync_2, (HttpListenerContext * __this, String * subProtocol, int32_t receiveBufferSize, TimeSpan keepAliveInterval, MethodInfo * method));
DO_APP_FUNC(0x01D45780, Task_1_System_Net_WebSockets_HttpListenerWebSocketContext_ *, HttpListenerContext_AcceptWebSocketAsync_3, (HttpListenerContext * __this, String * subProtocol, int32_t receiveBufferSize, TimeSpan keepAliveInterval, ArraySegment_1_Byte_ internalBuffer, MethodInfo * method));
DO_APP_FUNC(0x01D457D0, void, HttpListenerContext__ctor_1, (HttpListenerContext * __this, MethodInfo * method));
DO_APP_FUNC(0x01D45B30, void, HttpListenerPrefixCollection__ctor, (HttpListenerPrefixCollection * __this, HttpListener * listener, MethodInfo * method));
DO_APP_FUNC(0x01D45C90, int32_t, HttpListenerPrefixCollection_get_Count, (HttpListenerPrefixCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, HttpListenerPrefixCollection_get_IsReadOnly, (HttpListenerPrefixCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, HttpListenerPrefixCollection_get_IsSynchronized, (HttpListenerPrefixCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D45D20, void, HttpListenerPrefixCollection_Add, (HttpListenerPrefixCollection * __this, String * uriPrefix, MethodInfo * method));
DO_APP_FUNC(0x01D45E50, void, HttpListenerPrefixCollection_Clear, (HttpListenerPrefixCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D45F50, bool, HttpListenerPrefixCollection_Contains, (HttpListenerPrefixCollection * __this, String * uriPrefix, MethodInfo * method));
DO_APP_FUNC(0x01D46010, void, HttpListenerPrefixCollection_CopyTo, (HttpListenerPrefixCollection * __this, String__Array * array, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x01D460F0, void, HttpListenerPrefixCollection_CopyTo_1, (HttpListenerPrefixCollection * __this, Array * array, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x01D461B0, IEnumerator_1_System_String_ *, HttpListenerPrefixCollection_GetEnumerator, (HttpListenerPrefixCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D46280, IEnumerator *, HttpListenerPrefixCollection_System_Collections_IEnumerable_GetEnumerator, (HttpListenerPrefixCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D46350, bool, HttpListenerPrefixCollection_Remove, (HttpListenerPrefixCollection * __this, String * uriPrefix, MethodInfo * method));
DO_APP_FUNC(0x01D464B0, void, HttpListenerPrefixCollection__ctor_1, (HttpListenerPrefixCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D464E0, void, HttpListenerRequest__ctor, (HttpListenerRequest * __this, HttpListenerContext * context, MethodInfo * method));
DO_APP_FUNC(0x01D46670, void, HttpListenerRequest_SetRequestLine, (HttpListenerRequest * __this, String * req, MethodInfo * method));
DO_APP_FUNC(0x01D46A50, void, HttpListenerRequest_CreateQueryString, (HttpListenerRequest * __this, String * query, MethodInfo * method));
DO_APP_FUNC(0x01D46F70, bool, HttpListenerRequest_MaybeUri, (String * s, MethodInfo * method));
DO_APP_FUNC(0x01D47060, bool, HttpListenerRequest_IsPredefinedScheme, (String * scheme, MethodInfo * method));
DO_APP_FUNC(0x01D47280, void, HttpListenerRequest_FinishInitialization, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D47ED0, String *, HttpListenerRequest_Unquote, (String * str, MethodInfo * method));
DO_APP_FUNC(0x01D47F70, void, HttpListenerRequest_AddHeader, (HttpListenerRequest * __this, String * header, MethodInfo * method));
DO_APP_FUNC(0x01D48C00, bool, HttpListenerRequest_FlushInput, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String__Array *, HttpListenerRequest_get_AcceptTypes, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D48EB0, int32_t, HttpListenerRequest_get_ClientCertificateError, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D48FC0, Encoding *, HttpListenerRequest_get_ContentEncoding, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D48FF0, int64_t, HttpListenerRequest_get_ContentLength64, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D49010, String *, HttpListenerRequest_get_ContentType, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D490B0, CookieCollection *, HttpListenerRequest_get_Cookies, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D49210, bool, HttpListenerRequest_get_HasEntityBody, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, NameValueCollection *, HttpListenerRequest_get_Headers, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, String *, HttpListenerRequest_get_HttpMethod, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D49230, Stream *, HttpListenerRequest_get_InputStream, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, HttpListenerRequest_get_IsAuthenticated, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D49330, bool, HttpListenerRequest_get_IsLocal, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D493C0, bool, HttpListenerRequest_get_IsSecureConnection, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D493F0, bool, HttpListenerRequest_get_KeepAlive, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D49780, IPEndPoint *, HttpListenerRequest_get_LocalEndPoint, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, Version *, HttpListenerRequest_get_ProtocolVersion, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, NameValueCollection *, HttpListenerRequest_get_QueryString, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, String *, HttpListenerRequest_get_RawUrl, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D498B0, IPEndPoint *, HttpListenerRequest_get_RemoteEndPoint, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D498E0, Guid, HttpListenerRequest_get_RequestTraceIdentifier, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, Uri *, HttpListenerRequest_get_Url, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, Uri *, HttpListenerRequest_get_UrlReferrer, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D49990, String *, HttpListenerRequest_get_UserAgent, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D49A30, String *, HttpListenerRequest_get_UserHostAddress, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D49A60, String *, HttpListenerRequest_get_UserHostName, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBE0, String__Array *, HttpListenerRequest_get_UserLanguages, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D49B00, IAsyncResult *, HttpListenerRequest_BeginGetClientCertificate, (HttpListenerRequest * __this, AsyncCallback * requestCallback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01D49CB0, X509Certificate2 *, HttpListenerRequest_EndGetClientCertificate, (HttpListenerRequest * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01D49DC0, X509Certificate2 *, HttpListenerRequest_GetClientCertificate, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, String *, HttpListenerRequest_get_ServiceName, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D49E00, TransportContext *, HttpListenerRequest_get_TransportContext, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, HttpListenerRequest_get_IsWebSocketRequest, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D49F40, Task_1_System_Security_Cryptography_X509Certificates_X509Certificate2_ *, HttpListenerRequest_GetClientCertificateAsync, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D4A1E0, void, HttpListenerRequest__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01D4A2E0, void, HttpListenerRequest__ctor_1, (HttpListenerRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D4A310, ChannelBinding *, HttpListenerRequest_Context_GetChannelBinding, (HttpListenerRequest_Context * __this, ChannelBindingKind__Enum kind, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, HttpListenerRequest_Context__ctor, (HttpListenerRequest_Context * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, HttpListenerRequest_GCCDelegate__ctor, (HttpListenerRequest_GCCDelegate * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01D4A360, X509Certificate2 *, HttpListenerRequest_GCCDelegate_Invoke, (HttpListenerRequest_GCCDelegate * __this, MethodInfo * method));
DO_APP_FUNC(0x00611B10, IAsyncResult *, HttpListenerRequest_GCCDelegate_BeginInvoke, (HttpListenerRequest_GCCDelegate * __this, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, X509Certificate2 *, HttpListenerRequest_GCCDelegate_EndInvoke, (HttpListenerRequest_GCCDelegate * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01E55510, void, HttpListenerResponse__ctor, (HttpListenerResponse * __this, HttpListenerContext * context, MethodInfo * method));
DO_APP_FUNC(0x0061E2F0, bool, HttpListenerResponse_get_ForceCloseChunked, (HttpListenerResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01D48FC0, Encoding *, HttpListenerResponse_get_ContentEncoding, (HttpListenerResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E55770, void, HttpListenerResponse_set_ContentEncoding, (HttpListenerResponse * __this, Encoding * value, MethodInfo * method));
DO_APP_FUNC(0x002FB950, int64_t, HttpListenerResponse_get_ContentLength64, (HttpListenerResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E55890, void, HttpListenerResponse_set_ContentLength64, (HttpListenerResponse * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, HttpListenerResponse_get_ContentType, (HttpListenerResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E559F0, void, HttpListenerResponse_set_ContentType, (HttpListenerResponse * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E55B10, CookieCollection *, HttpListenerResponse_get_Cookies, (HttpListenerResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9C0, void, HttpListenerResponse_set_Cookies, (HttpListenerResponse * __this, CookieCollection * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, WebHeaderCollection *, HttpListenerResponse_get_Headers, (HttpListenerResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9E0, void, HttpListenerResponse_set_Headers, (HttpListenerResponse * __this, WebHeaderCollection * value, MethodInfo * method));
DO_APP_FUNC(0x003FCB00, bool, HttpListenerResponse_get_KeepAlive, (HttpListenerResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E55C70, void, HttpListenerResponse_set_KeepAlive, (HttpListenerResponse * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01E55D90, Stream *, HttpListenerResponse_get_OutputStream, (HttpListenerResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, Version *, HttpListenerResponse_get_ProtocolVersion, (HttpListenerResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E55DE0, void, HttpListenerResponse_set_ProtocolVersion, (HttpListenerResponse * __this, Version * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, String *, HttpListenerResponse_get_RedirectLocation, (HttpListenerResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E56010, void, HttpListenerResponse_set_RedirectLocation, (HttpListenerResponse * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x005D8A80, bool, HttpListenerResponse_get_SendChunked, (HttpListenerResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E56130, void, HttpListenerResponse_set_SendChunked, (HttpListenerResponse * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x003FF610, int32_t, HttpListenerResponse_get_StatusCode, (HttpListenerResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E56250, void, HttpListenerResponse_set_StatusCode, (HttpListenerResponse * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, String *, HttpListenerResponse_get_StatusDescription, (HttpListenerResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBD0, void, HttpListenerResponse_set_StatusDescription, (HttpListenerResponse * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E563B0, void, HttpListenerResponse_System_IDisposable_Dispose, (HttpListenerResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E563F0, void, HttpListenerResponse_Abort, (HttpListenerResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E56440, void, HttpListenerResponse_AddHeader, (HttpListenerResponse * __this, String * name, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E565E0, void, HttpListenerResponse_AppendCookie, (HttpListenerResponse * __this, Cookie * cookie, MethodInfo * method));
DO_APP_FUNC(0x01E567E0, void, HttpListenerResponse_AppendHeader, (HttpListenerResponse * __this, String * name, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E56980, void, HttpListenerResponse_Close, (HttpListenerResponse * __this, bool force, MethodInfo * method));
DO_APP_FUNC(0x01E569C0, void, HttpListenerResponse_Close_1, (HttpListenerResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E56A10, void, HttpListenerResponse_Close_2, (HttpListenerResponse * __this, Byte__Array * responseEntity, bool willBlock, MethodInfo * method));
DO_APP_FUNC(0x01E56CD0, void, HttpListenerResponse_CopyFrom, (HttpListenerResponse * __this, HttpListenerResponse * templateResponse, MethodInfo * method));
DO_APP_FUNC(0x01E56D60, void, HttpListenerResponse_Redirect, (HttpListenerResponse * __this, String * url, MethodInfo * method));
DO_APP_FUNC(0x01E56D90, bool, HttpListenerResponse_FindCookie, (HttpListenerResponse * __this, Cookie * cookie, MethodInfo * method));
DO_APP_FUNC(0x01E57030, void, HttpListenerResponse_SendHeaders, (HttpListenerResponse * __this, bool closing, MemoryStream * ms, MethodInfo * method));
DO_APP_FUNC(0x01E57A40, String *, HttpListenerResponse_FormatHeaders, (WebHeaderCollection * headers, MethodInfo * method));
DO_APP_FUNC(0x01E57DE0, String *, HttpListenerResponse_CookieToClientString, (Cookie * cookie, MethodInfo * method));
DO_APP_FUNC(0x01E58170, String *, HttpListenerResponse_QuotedString, (Cookie * cookie, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E58360, bool, HttpListenerResponse_IsToken, (String * value, MethodInfo * method));
DO_APP_FUNC(0x01E58490, void, HttpListenerResponse_SetCookie, (HttpListenerResponse * __this, Cookie * cookie, MethodInfo * method));
DO_APP_FUNC(0x01E58680, void, HttpListenerResponse__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01E58710, void, HttpListenerResponse__ctor_1, (HttpListenerResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E58740, TimeSpan, HttpListenerTimeoutManager_get_EntityBody, (HttpListenerTimeoutManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01E58790, void, HttpListenerTimeoutManager_set_EntityBody, (HttpListenerTimeoutManager * __this, TimeSpan value, MethodInfo * method));
DO_APP_FUNC(0x01E587E0, TimeSpan, HttpListenerTimeoutManager_get_DrainEntityBody, (HttpListenerTimeoutManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01E58830, void, HttpListenerTimeoutManager_set_DrainEntityBody, (HttpListenerTimeoutManager * __this, TimeSpan value, MethodInfo * method));
DO_APP_FUNC(0x01E58880, TimeSpan, HttpListenerTimeoutManager_get_RequestQueue, (HttpListenerTimeoutManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01E588D0, void, HttpListenerTimeoutManager_set_RequestQueue, (HttpListenerTimeoutManager * __this, TimeSpan value, MethodInfo * method));
DO_APP_FUNC(0x01E58920, TimeSpan, HttpListenerTimeoutManager_get_IdleConnection, (HttpListenerTimeoutManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01E58970, void, HttpListenerTimeoutManager_set_IdleConnection, (HttpListenerTimeoutManager * __this, TimeSpan value, MethodInfo * method));
DO_APP_FUNC(0x01E589C0, TimeSpan, HttpListenerTimeoutManager_get_HeaderWait, (HttpListenerTimeoutManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01E58A10, void, HttpListenerTimeoutManager_set_HeaderWait, (HttpListenerTimeoutManager * __this, TimeSpan value, MethodInfo * method));
DO_APP_FUNC(0x01E58A60, int64_t, HttpListenerTimeoutManager_get_MinSendBytesPerSecond, (HttpListenerTimeoutManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01E58AB0, void, HttpListenerTimeoutManager_set_MinSendBytesPerSecond, (HttpListenerTimeoutManager * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, HttpListenerTimeoutManager__ctor, (HttpListenerTimeoutManager * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, HttpRequestCreator__ctor, (HttpRequestCreator * __this, MethodInfo * method));
DO_APP_FUNC(0x01E58D60, WebRequest *, HttpRequestCreator_Create, (HttpRequestCreator * __this, Uri * uri, MethodInfo * method));
DO_APP_FUNC(0x01E59310, void, HttpStreamAsyncResult_Complete, (HttpStreamAsyncResult * __this, Exception * e, MethodInfo * method));
DO_APP_FUNC(0x01E59320, void, HttpStreamAsyncResult_Complete_1, (HttpStreamAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, Object *, HttpStreamAsyncResult_get_AsyncState, (HttpStreamAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01E59430, WaitHandle *, HttpStreamAsyncResult_get_AsyncWaitHandle, (HttpStreamAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01E59680, bool, HttpStreamAsyncResult_get_CompletedSynchronously, (HttpStreamAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01E59690, bool, HttpStreamAsyncResult_get_IsCompleted, (HttpStreamAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01E59780, void, HttpStreamAsyncResult__ctor, (HttpStreamAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01E59BB0, void, HttpWebRequest__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01E59C30, void, HttpWebRequest__ctor, (HttpWebRequest * __this, Uri * uri, MethodInfo * method));
DO_APP_FUNC(0x01E59F70, void, HttpWebRequest__ctor_1, (HttpWebRequest * __this, Uri * uri, MonoTlsProvider * tlsProvider, MonoTlsSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x01E59FB0, void, HttpWebRequest__ctor_2, (HttpWebRequest * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01E5A630, void, HttpWebRequest_ResetAuthorization, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5A670, void, HttpWebRequest_SetSpecialHeaders, (HttpWebRequest * __this, String * HeaderName, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E5A7B0, String *, HttpWebRequest_get_Accept, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5A850, void, HttpWebRequest_set_Accept, (HttpWebRequest * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, Uri *, HttpWebRequest_get_Address, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9E0, void, HttpWebRequest_set_Address, (HttpWebRequest * __this, Uri * value, MethodInfo * method));
DO_APP_FUNC(0x00614BA0, bool, HttpWebRequest_get_AllowAutoRedirect, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x00614BB0, void, HttpWebRequest_set_AllowAutoRedirect, (HttpWebRequest * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00EEDBB0, bool, HttpWebRequest_get_AllowWriteStreamBuffering, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x00EEDBC0, void, HttpWebRequest_set_AllowWriteStreamBuffering, (HttpWebRequest * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, HttpWebRequest_get_AllowReadStreamBuffering, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5A8F0, void, HttpWebRequest_set_AllowReadStreamBuffering, (HttpWebRequest * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01E5A990, Exception *, HttpWebRequest_GetMustImplement, (MethodInfo * method));
DO_APP_FUNC(0x0040EF70, DecompressionMethods__Enum, HttpWebRequest_get_AutomaticDecompression, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5AAD0, void, HttpWebRequest_set_AutomaticDecompression, (HttpWebRequest * __this, DecompressionMethods__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01E5AB00, bool, HttpWebRequest_get_InternalAllowBuffering, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5AB10, bool, HttpWebRequest_get_MethodWithBuffer, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x007008C0, MonoTlsProvider *, HttpWebRequest_get_TlsProvider, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x00FAE9A0, MonoTlsSettings *, HttpWebRequest_get_TlsSettings, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5AC70, X509CertificateCollection_1 *, HttpWebRequest_get_ClientCertificates, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5ADD0, void, HttpWebRequest_set_ClientCertificates, (HttpWebRequest * __this, X509CertificateCollection_1 * value, MethodInfo * method));
DO_APP_FUNC(0x01E5AE90, String *, HttpWebRequest_get_Connection, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5AF30, void, HttpWebRequest_set_Connection, (HttpWebRequest * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, String *, HttpWebRequest_get_ConnectionGroupName, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB70, void, HttpWebRequest_set_ConnectionGroupName, (HttpWebRequest * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, int64_t, HttpWebRequest_get_ContentLength, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5B110, void, HttpWebRequest_set_ContentLength, (HttpWebRequest * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x002FBBB0, void, HttpWebRequest_set_InternalContentLength, (HttpWebRequest * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01E5B1E0, bool, HttpWebRequest_get_ThrowOnError, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5B1F0, void, HttpWebRequest_set_ThrowOnError, (HttpWebRequest * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01E5B200, String *, HttpWebRequest_get_ContentType, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5B2A0, void, HttpWebRequest_set_ContentType, (HttpWebRequest * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, HttpContinueDelegate *, HttpWebRequest_get_ContinueDelegate, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBD0, void, HttpWebRequest_set_ContinueDelegate, (HttpWebRequest * __this, HttpContinueDelegate * value, MethodInfo * method));
DO_APP_FUNC(0x002FBBE0, CookieContainer *, HttpWebRequest_get_CookieContainer, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBF0, void, HttpWebRequest_set_CookieContainer, (HttpWebRequest * __this, CookieContainer * value, MethodInfo * method));
DO_APP_FUNC(0x002FBC00, ICredentials *, HttpWebRequest_get_Credentials, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC10, void, HttpWebRequest_set_Credentials, (HttpWebRequest * __this, ICredentials * value, MethodInfo * method));
DO_APP_FUNC(0x01E5B340, DateTime, HttpWebRequest_get_Date, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5B4A0, void, HttpWebRequest_set_Date, (HttpWebRequest * __this, DateTime value, MethodInfo * method));
DO_APP_FUNC(0x01E5B5F0, void, HttpWebRequest_SetDateHeaderHelper, (HttpWebRequest * __this, String * headerName, DateTime dateTime, MethodInfo * method));
DO_APP_FUNC(0x01E5B6E0, int32_t, HttpWebRequest_get_DefaultMaximumErrorResponseLength, (MethodInfo * method));
DO_APP_FUNC(0x01E5B780, void, HttpWebRequest_set_DefaultMaximumErrorResponseLength, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01E5B820, String *, HttpWebRequest_get_Expect, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5B8C0, void, HttpWebRequest_set_Expect, (HttpWebRequest * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x003FFE10, bool, HttpWebRequest_get_HaveResponse, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC40, WebHeaderCollection *, HttpWebRequest_get_Headers, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5BA70, void, HttpWebRequest_set_Headers, (HttpWebRequest * __this, WebHeaderCollection * value, MethodInfo * method));
DO_APP_FUNC(0x01E5BC70, String *, HttpWebRequest_get_Host, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5BCA0, void, HttpWebRequest_set_Host, (HttpWebRequest * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E5BF10, bool, HttpWebRequest_CheckValidHost, (String * scheme, String * val, MethodInfo * method));
DO_APP_FUNC(0x01E5C090, DateTime, HttpWebRequest_get_IfModifiedSince, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5C1A0, void, HttpWebRequest_set_IfModifiedSince, (HttpWebRequest * __this, DateTime value, MethodInfo * method));
DO_APP_FUNC(0x0061E2F0, bool, HttpWebRequest_get_KeepAlive, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x0061E2E0, void, HttpWebRequest_set_KeepAlive, (HttpWebRequest * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x007007F0, int32_t, HttpWebRequest_get_MaximumAutomaticRedirections, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5C280, void, HttpWebRequest_set_MaximumAutomaticRedirections, (HttpWebRequest * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x011A8110, int32_t, HttpWebRequest_get_MaximumResponseHeadersLength, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5C340, void, HttpWebRequest_set_MaximumResponseHeadersLength, (HttpWebRequest * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01E5C350, int32_t, HttpWebRequest_get_DefaultMaximumResponseHeadersLength, (MethodInfo * method));
DO_APP_FUNC(0x01E5C3F0, void, HttpWebRequest_set_DefaultMaximumResponseHeadersLength, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01E5C4A0, int32_t, HttpWebRequest_get_ReadWriteTimeout, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5C4B0, void, HttpWebRequest_set_ReadWriteTimeout, (HttpWebRequest * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01E5C5B0, int32_t, HttpWebRequest_get_ContinueTimeout, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5C600, void, HttpWebRequest_set_ContinueTimeout, (HttpWebRequest * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x002FBC80, String *, HttpWebRequest_get_MediaType, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC90, void, HttpWebRequest_set_MediaType, (HttpWebRequest * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBCA0, String *, HttpWebRequest_get_Method, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5C650, void, HttpWebRequest_set_Method, (HttpWebRequest * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x005DA240, bool, HttpWebRequest_get_Pipelined, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x009AD920, void, HttpWebRequest_set_Pipelined, (HttpWebRequest * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00762910, bool, HttpWebRequest_get_PreAuthenticate, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x008555F0, void, HttpWebRequest_set_PreAuthenticate, (HttpWebRequest * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FBD00, Version *, HttpWebRequest_get_ProtocolVersion, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5C880, void, HttpWebRequest_set_ProtocolVersion, (HttpWebRequest * __this, Version * value, MethodInfo * method));
DO_APP_FUNC(0x002FBD60, IWebProxy *, HttpWebRequest_get_Proxy, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5CA10, void, HttpWebRequest_set_Proxy, (HttpWebRequest * __this, IWebProxy * value, MethodInfo * method));
DO_APP_FUNC(0x01E5CA50, String *, HttpWebRequest_get_Referer, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5CAF0, void, HttpWebRequest_set_Referer, (HttpWebRequest * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, Uri *, HttpWebRequest_get_RequestUri, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFEA0, bool, HttpWebRequest_get_SendChunked, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5CC30, void, HttpWebRequest_set_SendChunked, (HttpWebRequest * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01E5CC60, ServicePoint *, HttpWebRequest_get_ServicePoint, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x005B0220, ServicePoint *, HttpWebRequest_get_ServicePointNoLock, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, HttpWebRequest_get_SupportsCookieContainer, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x010B5C70, int32_t, HttpWebRequest_get_Timeout, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5CC70, void, HttpWebRequest_set_Timeout, (HttpWebRequest * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01E5CD30, String *, HttpWebRequest_get_TransferEncoding, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5CDD0, void, HttpWebRequest_set_TransferEncoding, (HttpWebRequest * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E5CFC0, bool, HttpWebRequest_get_UseDefaultCredentials, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5D000, void, HttpWebRequest_set_UseDefaultCredentials, (HttpWebRequest * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01E5D040, String *, HttpWebRequest_get_UserAgent, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5D0E0, void, HttpWebRequest_set_UserAgent, (HttpWebRequest * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E5D190, bool, HttpWebRequest_get_UnsafeAuthenticatedConnectionSharing, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5D1A0, void, HttpWebRequest_set_UnsafeAuthenticatedConnectionSharing, (HttpWebRequest * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x005B38C0, bool, HttpWebRequest_get_GotRequestStream, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x014DF990, bool, HttpWebRequest_get_ExpectContinue, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5D1B0, void, HttpWebRequest_set_ExpectContinue, (HttpWebRequest * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, Uri *, HttpWebRequest_get_AuthUri, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5D1C0, bool, HttpWebRequest_get_ProxyQuery, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01B1A9A0, ServerCertValidationCallback *, HttpWebRequest_get_ServerCertValidationCallback, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5D200, RemoteCertificateValidationCallback *, HttpWebRequest_get_ServerCertificateValidationCallback, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5D220, void, HttpWebRequest_set_ServerCertificateValidationCallback, (HttpWebRequest * __this, RemoteCertificateValidationCallback * value, MethodInfo * method));
DO_APP_FUNC(0x01E5D390, ServicePoint *, HttpWebRequest_GetServicePoint, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5D530, void, HttpWebRequest_AddRange, (HttpWebRequest * __this, int32_t range, MethodInfo * method));
DO_APP_FUNC(0x01E5D5D0, void, HttpWebRequest_AddRange_1, (HttpWebRequest * __this, int32_t from, int32_t to, MethodInfo * method));
DO_APP_FUNC(0x01E5D680, void, HttpWebRequest_AddRange_2, (HttpWebRequest * __this, String * rangeSpecifier, int32_t range, MethodInfo * method));
DO_APP_FUNC(0x01E5D690, void, HttpWebRequest_AddRange_3, (HttpWebRequest * __this, String * rangeSpecifier, int32_t from, int32_t to, MethodInfo * method));
DO_APP_FUNC(0x01E5D6B0, void, HttpWebRequest_AddRange_4, (HttpWebRequest * __this, int64_t range, MethodInfo * method));
DO_APP_FUNC(0x01E5D750, void, HttpWebRequest_AddRange_5, (HttpWebRequest * __this, int64_t from, int64_t to, MethodInfo * method));
DO_APP_FUNC(0x01E5D800, void, HttpWebRequest_AddRange_6, (HttpWebRequest * __this, String * rangeSpecifier, int64_t range, MethodInfo * method));
DO_APP_FUNC(0x01E5DB60, void, HttpWebRequest_AddRange_7, (HttpWebRequest * __this, String * rangeSpecifier, int64_t from, int64_t to, MethodInfo * method));
DO_APP_FUNC(0x01E5DDE0, IAsyncResult *, HttpWebRequest_BeginGetRequestStream, (HttpWebRequest * __this, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01E5E3D0, Stream *, HttpWebRequest_EndGetRequestStream, (HttpWebRequest * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01E5E560, Stream *, HttpWebRequest_GetRequestStream, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5E710, Stream *, HttpWebRequest_GetRequestStream_1, (HttpWebRequest * __this, TransportContext * * context, MethodInfo * method));
DO_APP_FUNC(0x01E5E760, bool, HttpWebRequest_CheckIfForceWrite, (HttpWebRequest * __this, SimpleAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01E5E940, IAsyncResult *, HttpWebRequest_BeginGetResponse, (HttpWebRequest * __this, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01E5EEE0, WebResponse *, HttpWebRequest_EndGetResponse, (HttpWebRequest * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01E5F0A0, Stream *, HttpWebRequest_EndGetRequestStream_1, (HttpWebRequest * __this, IAsyncResult * asyncResult, TransportContext * * context, MethodInfo * method));
DO_APP_FUNC(0x01E5F0C0, WebResponse *, HttpWebRequest_GetResponse, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x006D6470, bool, HttpWebRequest_get_FinishedReading, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x00A5B6A0, void, HttpWebRequest_set_FinishedReading, (HttpWebRequest * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01E5F1C0, bool, HttpWebRequest_get_Aborted, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5F1E0, void, HttpWebRequest_Abort, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01D28380, void, HttpWebRequest_System_Runtime_Serialization_ISerializable_GetObjectData, (HttpWebRequest * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01E5F670, void, HttpWebRequest_GetObjectData, (HttpWebRequest * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01E5F9A0, void, HttpWebRequest_CheckRequestStarted, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5FA50, void, HttpWebRequest_DoContinueDelegate, (HttpWebRequest * __this, int32_t statusCode, WebHeaderCollection * headers, MethodInfo * method));
DO_APP_FUNC(0x01E5FA70, void, HttpWebRequest_RewriteRedirectToGet, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E5FB60, bool, HttpWebRequest_Redirect, (HttpWebRequest * __this, WebAsyncResult * result, HttpStatusCode__Enum code, WebResponse * response, MethodInfo * method));
DO_APP_FUNC(0x01E60420, String *, HttpWebRequest_GetHeaders, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E60D60, void, HttpWebRequest_DoPreAuthenticate, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E60F80, void, HttpWebRequest_SetWriteStreamError, (HttpWebRequest * __this, WebExceptionStatus__Enum status, Exception * exc, MethodInfo * method));
DO_APP_FUNC(0x01E612F0, Byte__Array *, HttpWebRequest_GetRequestHeaders, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E618A0, void, HttpWebRequest_SetWriteStream, (HttpWebRequest * __this, WebConnectionStream * stream, MethodInfo * method));
DO_APP_FUNC(0x01E61AC0, void, HttpWebRequest_SetWriteStreamInner, (HttpWebRequest * __this, SimpleAsyncCallback * callback, MethodInfo * method));
DO_APP_FUNC(0x01E61C20, void, HttpWebRequest_SetWriteStreamError_1, (HttpWebRequest * __this, Exception * exc, MethodInfo * method));
DO_APP_FUNC(0x01E61D00, void, HttpWebRequest_SetResponseError, (HttpWebRequest * __this, WebExceptionStatus__Enum status, Exception * e, String * where, MethodInfo * method));
DO_APP_FUNC(0x01E62100, void, HttpWebRequest_CheckSendError, (HttpWebRequest * __this, WebConnectionData * data, MethodInfo * method));
DO_APP_FUNC(0x01E62330, bool, HttpWebRequest_HandleNtlmAuth, (HttpWebRequest * __this, WebAsyncResult * r, MethodInfo * method));
DO_APP_FUNC(0x01E62550, void, HttpWebRequest_SetResponseData, (HttpWebRequest * __this, WebConnectionData * data, MethodInfo * method));
DO_APP_FUNC(0x01E63050, bool, HttpWebRequest_CheckAuthorization, (HttpWebRequest * __this, WebResponse * response, HttpStatusCode__Enum code, MethodInfo * method));
DO_APP_FUNC(0x01E63080, bool, HttpWebRequest_CheckFinalStatus, (HttpWebRequest * __this, WebAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01E63BA0, bool, HttpWebRequest_get_ReuseConnection, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x01E63BB0, void, HttpWebRequest_set_ReuseConnection, (HttpWebRequest * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01E63BC0, StringBuilder *, HttpWebRequest_GenerateConnectionGroup, (String * connectionGroupName, bool unsafeConnectionGroup, bool isInternalGroup, MethodInfo * method));
DO_APP_FUNC(0x01E63D90, void, HttpWebRequest__SetWriteStream_b__258_0, (HttpWebRequest * __this, SimpleAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01E64060, void, HttpWebRequest__SetWriteStream_b__258_1, (HttpWebRequest * __this, SimpleAsyncResult * inner, MethodInfo * method));
DO_APP_FUNC(0x01E64100, bool, HttpWebRequest__SetWriteStreamInner_b__259_0, (HttpWebRequest * __this, SimpleAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01E64200, void, HttpWebRequest__ctor_3, (HttpWebRequest * __this, MethodInfo * method));
DO_APP_FUNC(0x00114130, bool, HttpWebRequest_AuthorizationState_get_IsCompleted, (HttpWebRequest_AuthorizationState__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001155B0, HttpWebRequest_NtlmAuthState__Enum, HttpWebRequest_AuthorizationState_get_NtlmAuthState, (HttpWebRequest_AuthorizationState__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D70A0, bool, HttpWebRequest_AuthorizationState_get_IsNtlmAuthenticated, (HttpWebRequest_AuthorizationState__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D70C0, void, HttpWebRequest_AuthorizationState__ctor, (HttpWebRequest_AuthorizationState__Boxed * __this, HttpWebRequest * request, bool isProxy, MethodInfo * method));
DO_APP_FUNC(0x001D70E0, bool, HttpWebRequest_AuthorizationState_CheckAuthorization, (HttpWebRequest_AuthorizationState__Boxed * __this, WebResponse * response, HttpStatusCode__Enum code, MethodInfo * method));
DO_APP_FUNC(0x001D70F0, void, HttpWebRequest_AuthorizationState_Reset, (HttpWebRequest_AuthorizationState__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D7100, String *, HttpWebRequest_AuthorizationState_ToString, (HttpWebRequest_AuthorizationState__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, HttpWebRequest_c_DisplayClass238_0__ctor, (HttpWebRequest_c_DisplayClass238_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x01E64230, void, HttpWebRequest_c_DisplayClass238_0__BeginGetResponse_b__0, (HttpWebRequest_c_DisplayClass238_0 * __this, SimpleAsyncResult * inner, MethodInfo * method));
DO_APP_FUNC(0x01E64990, void, HttpWebResponse__ctor, (HttpWebResponse * __this, Uri * uri, String * method_1, WebConnectionData * data, CookieContainer * container, MethodInfo * method));
DO_APP_FUNC(0x01E64DD0, void, HttpWebResponse__ctor_1, (HttpWebResponse * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01E65080, String *, HttpWebResponse_get_CharacterSet, (HttpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E651C0, String *, HttpWebResponse_get_ContentEncoding, (HttpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, int64_t, HttpWebResponse_get_ContentLength, (HttpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E65280, String *, HttpWebResponse_get_ContentType, (HttpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E65330, CookieCollection *, HttpWebResponse_get_Cookies, (HttpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E65490, void, HttpWebResponse_set_Cookies, (HttpWebResponse * __this, CookieCollection * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, WebHeaderCollection *, HttpWebResponse_get_Headers, (HttpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E654C0, Exception *, HttpWebResponse_GetMustImplement, (MethodInfo * method));
DO_APP_FUNC(0x01E65600, bool, HttpWebResponse_get_IsMutuallyAuthenticated, (HttpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E65640, DateTime, HttpWebResponse_get_LastModified, (HttpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E65750, String *, HttpWebResponse_get_Method, (HttpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E65770, Version *, HttpWebResponse_get_ProtocolVersion, (HttpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E65790, Uri *, HttpWebResponse_get_ResponseUri, (HttpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E657B0, String *, HttpWebResponse_get_Server, (HttpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x006410F0, HttpStatusCode__Enum, HttpWebResponse_get_StatusCode, (HttpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E65870, String *, HttpWebResponse_get_StatusDescription, (HttpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, HttpWebResponse_get_SupportsHeaders, (HttpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E65890, String *, HttpWebResponse_GetResponseHeader, (HttpWebResponse * __this, String * headerName, MethodInfo * method));
DO_APP_FUNC(0x01E65950, void, HttpWebResponse_ReadAll, (HttpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E65A30, Stream *, HttpWebResponse_GetResponseStream, (HttpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01D28380, void, HttpWebResponse_System_Runtime_Serialization_ISerializable_GetObjectData, (HttpWebResponse * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01E65C00, void, HttpWebResponse_GetObjectData, (HttpWebResponse * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x01E65D60, void, HttpWebResponse_Close, (HttpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3FCE0, void, HttpWebResponse_System_IDisposable_Dispose, (HttpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E65D90, void, HttpWebResponse_Dispose, (HttpWebResponse * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01E65DA0, void, HttpWebResponse_CheckDisposed, (HttpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E65E80, void, HttpWebResponse_FillCookies, (HttpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x01E66040, void, HttpWebResponse__ctor_2, (HttpWebResponse * __this, MethodInfo * method));
DO_APP_FUNC(0x00110270, void, IPv6AddressFormatter__ctor, (IPv6AddressFormatter__Boxed * __this, UInt16__Array * addr, int64_t scopeId, MethodInfo * method));
DO_APP_FUNC(0x01E69DB0, uint16_t, IPv6AddressFormatter_SwapUShort, (uint16_t number, MethodInfo * method));
DO_APP_FUNC(0x001D7240, uint32_t, IPv6AddressFormatter_AsIPv4Int, (IPv6AddressFormatter__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D7250, bool, IPv6AddressFormatter_IsIPv4Compatible, (IPv6AddressFormatter__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D7260, bool, IPv6AddressFormatter_IsIPv4Mapped, (IPv6AddressFormatter__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001D7270, String *, IPv6AddressFormatter_ToString, (IPv6AddressFormatter__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6C530, void, ListenerAsyncResult__ctor, (ListenerAsyncResult * __this, AsyncCallback * cb, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01E6C690, void, ListenerAsyncResult_Complete, (ListenerAsyncResult * __this, Exception * exc, MethodInfo * method));
DO_APP_FUNC(0x01E6C970, void, ListenerAsyncResult_InvokeCallback, (Object * o, MethodInfo * method));
DO_APP_FUNC(0x01E6CAB0, void, ListenerAsyncResult_Complete_1, (ListenerAsyncResult * __this, HttpListenerContext * context, MethodInfo * method));
DO_APP_FUNC(0x01E6CAC0, void, ListenerAsyncResult_Complete_2, (ListenerAsyncResult * __this, HttpListenerContext * context, bool synch, MethodInfo * method));
DO_APP_FUNC(0x01E6D230, HttpListenerContext *, ListenerAsyncResult_GetContext, (ListenerAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6D2E0, Object *, ListenerAsyncResult_get_AsyncState, (ListenerAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6D300, WaitHandle *, ListenerAsyncResult_get_AsyncWaitHandle, (ListenerAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6D560, bool, ListenerAsyncResult_get_CompletedSynchronously, (ListenerAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6D580, bool, ListenerAsyncResult_get_IsCompleted, (ListenerAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6D690, void, ListenerAsyncResult__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01E6D7F0, void, ListenerPrefix__ctor, (ListenerPrefix * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, ListenerPrefix_ToString, (ListenerPrefix * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, IPAddress__Array *, ListenerPrefix_get_Addresses, (ListenerPrefix * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9C0, void, ListenerPrefix_set_Addresses, (ListenerPrefix * __this, IPAddress__Array * value, MethodInfo * method));
DO_APP_FUNC(0x0052A050, bool, ListenerPrefix_get_Secure, (ListenerPrefix * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, ListenerPrefix_get_Host, (ListenerPrefix * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6D800, int32_t, ListenerPrefix_get_Port, (ListenerPrefix * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, ListenerPrefix_get_Path, (ListenerPrefix * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6D810, bool, ListenerPrefix_Equals, (ListenerPrefix * __this, Object * o, MethodInfo * method));
DO_APP_FUNC(0x0150BDE0, int32_t, ListenerPrefix_GetHashCode, (ListenerPrefix * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6D900, void, ListenerPrefix_Parse, (ListenerPrefix * __this, String * uri, MethodInfo * method));
DO_APP_FUNC(0x01E6DD30, void, ListenerPrefix_CheckUri, (String * uri, MethodInfo * method));
DO_APP_FUNC(0x01E6F210, void, MonoChunkStream__ctor, (MonoChunkStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, WebHeaderCollection * headers, MethodInfo * method));
DO_APP_FUNC(0x01E6F280, void, MonoChunkStream__ctor_1, (MonoChunkStream * __this, WebHeaderCollection * headers, MethodInfo * method));
DO_APP_FUNC(0x01E6F4B0, void, MonoChunkStream_ResetBuffer, (MonoChunkStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6F4F0, void, MonoChunkStream_WriteAndReadBack, (MonoChunkStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, int32_t * read, MethodInfo * method));
DO_APP_FUNC(0x01E6F570, int32_t, MonoChunkStream_Read, (MonoChunkStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01E6F580, int32_t, MonoChunkStream_ReadFromChunks, (MonoChunkStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01E6F930, void, MonoChunkStream_Write, (MonoChunkStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01E6F960, void, MonoChunkStream_InternalWrite, (MonoChunkStream * __this, Byte__Array * buffer, int32_t * offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01E6FBA0, bool, MonoChunkStream_get_WantMore, (MonoChunkStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6FBC0, bool, MonoChunkStream_get_DataAvailable, (MonoChunkStream * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, int32_t, MonoChunkStream_get_TotalDataSize, (MonoChunkStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6FD30, int32_t, MonoChunkStream_get_ChunkLeft, (MonoChunkStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6FD40, MonoChunkStream_State__Enum, MonoChunkStream_ReadBody, (MonoChunkStream * __this, Byte__Array * buffer, int32_t * offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01E6FF40, MonoChunkStream_State__Enum, MonoChunkStream_GetChunkSize, (MonoChunkStream * __this, Byte__Array * buffer, int32_t * offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01E70220, String *, MonoChunkStream_RemoveChunkExtension, (String * input, MethodInfo * method));
DO_APP_FUNC(0x01E70280, MonoChunkStream_State__Enum, MonoChunkStream_ReadCRLF, (MonoChunkStream * __this, Byte__Array * buffer, int32_t * offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01E703B0, MonoChunkStream_State__Enum, MonoChunkStream_ReadTrailer, (MonoChunkStream * __this, Byte__Array * buffer, int32_t * offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01E70800, void, MonoChunkStream_ThrowProtocolViolation, (String * message, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, MonoChunkStream_Chunk__ctor, (MonoChunkStream_Chunk * __this, Byte__Array * chunk, MethodInfo * method));
DO_APP_FUNC(0x01E70870, int32_t, MonoChunkStream_Chunk_Read, (MonoChunkStream_Chunk * __this, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01E708E0, DateTime, MonoHttpDate_Parse, (String * dateStr, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MonoHttpDate__ctor, (MonoHttpDate * __this, MethodInfo * method));
DO_APP_FUNC(0x01E70A10, void, MonoHttpDate__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01E71D00, void, NetConfig__ctor, (NetConfig * __this, MethodInfo * method));
DO_APP_FUNC(0x0173F610, Object *, NetConfig_System_ICloneable_Clone, (NetConfig * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCAFC0, void, NtlmClient_1__ctor, (NtlmClient_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCB100, Authorization *, NtlmClient_1_Authenticate, (NtlmClient_1 * __this, String * challenge, WebRequest * webRequest, ICredentials * credentials, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Authorization *, NtlmClient_1_PreAuthenticate, (NtlmClient_1 * __this, WebRequest * webRequest, ICredentials * credentials, MethodInfo * method));
DO_APP_FUNC(0x01BCB1C0, String *, NtlmClient_1_get_AuthenticationType, (NtlmClient_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, NtlmClient_1_get_CanPreAuthenticate, (NtlmClient_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCE410, void, RequestStream__ctor, (RequestStream * __this, Stream * stream, Byte__Array * buffer, int32_t offset, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01BCE440, void, RequestStream__ctor_1, (RequestStream * __this, Stream * stream, Byte__Array * buffer, int32_t offset, int32_t length, int64_t contentlength, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, RequestStream_get_CanRead, (RequestStream * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, RequestStream_get_CanSeek, (RequestStream * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, RequestStream_get_CanWrite, (RequestStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCE510, int64_t, RequestStream_get_Length, (RequestStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCE560, int64_t, RequestStream_get_Position, (RequestStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCE5B0, void, RequestStream_set_Position, (RequestStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01132D30, void, RequestStream_Close, (RequestStream * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RequestStream_Flush, (RequestStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCE600, int32_t, RequestStream_FillFromBuffer, (RequestStream * __this, Byte__Array * buffer, int32_t off, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01BCE8F0, int32_t, RequestStream_Read, (RequestStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01BCEA80, IAsyncResult *, RequestStream_BeginRead, (RequestStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * cback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BCED70, int32_t, RequestStream_EndRead, (RequestStream * __this, IAsyncResult * ares, MethodInfo * method));
DO_APP_FUNC(0x01BCEFC0, int64_t, RequestStream_Seek, (RequestStream * __this, int64_t offset, SeekOrigin__Enum origin, MethodInfo * method));
DO_APP_FUNC(0x01BCF010, void, RequestStream_SetLength, (RequestStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01BCF060, void, RequestStream_Write, (RequestStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01BCF0B0, IAsyncResult *, RequestStream_BeginWrite, (RequestStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * cback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BCF100, void, RequestStream_EndWrite, (RequestStream * __this, IAsyncResult * async_result, MethodInfo * method));
DO_APP_FUNC(0x01BCF150, void, ResponseStream__ctor, (ResponseStream * __this, Stream * stream, HttpListenerResponse * response, bool ignore_errors, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, ResponseStream_get_CanRead, (ResponseStream * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, ResponseStream_get_CanSeek, (ResponseStream * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, ResponseStream_get_CanWrite, (ResponseStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCF210, int64_t, ResponseStream_get_Length, (ResponseStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCF260, int64_t, ResponseStream_get_Position, (ResponseStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCF2B0, void, ResponseStream_set_Position, (ResponseStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01BCF300, void, ResponseStream_Close, (ResponseStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCF5A0, MemoryStream *, ResponseStream_GetHeaders, (ResponseStream * __this, bool closing, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ResponseStream_Flush, (ResponseStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCF840, Byte__Array *, ResponseStream_GetChunkSizeBytes, (int32_t size, bool final_1, MethodInfo * method));
DO_APP_FUNC(0x01BCF970, void, ResponseStream_InternalWrite, (ResponseStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01BCFA80, void, ResponseStream_Write, (ResponseStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01BCFDF0, IAsyncResult *, ResponseStream_BeginWrite, (ResponseStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * cback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BD00B0, void, ResponseStream_EndWrite, (ResponseStream * __this, IAsyncResult * ares, MethodInfo * method));
DO_APP_FUNC(0x01BD0310, int32_t, ResponseStream_Read, (ResponseStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01BD0360, IAsyncResult *, ResponseStream_BeginRead, (ResponseStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * cback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BD03B0, int32_t, ResponseStream_EndRead, (ResponseStream * __this, IAsyncResult * ares, MethodInfo * method));
DO_APP_FUNC(0x01BD0400, int64_t, ResponseStream_Seek, (ResponseStream * __this, int64_t offset, SeekOrigin__Enum origin, MethodInfo * method));
DO_APP_FUNC(0x01BD0450, void, ResponseStream_SetLength, (ResponseStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01BD04A0, void, ResponseStream__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01BD4A90, void, ServicePoint__ctor, (ServicePoint * __this, Uri * uri, int32_t connectionLimit, int32_t maxIdleTime, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Uri *, ServicePoint_get_Address, (ServicePoint * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD4C30, Exception *, ServicePoint_GetMustImplement, (MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, BindIPEndPoint *, ServicePoint_get_BindIPEndPointDelegate, (ServicePoint * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBD0, void, ServicePoint_set_BindIPEndPointDelegate, (ServicePoint * __this, BindIPEndPoint * value, MethodInfo * method));
DO_APP_FUNC(0x01BD4D70, int32_t, ServicePoint_get_ConnectionLeaseTimeout, (ServicePoint * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD4DB0, void, ServicePoint_set_ConnectionLeaseTimeout, (ServicePoint * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, ServicePoint_get_ConnectionLimit, (ServicePoint * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD4DF0, void, ServicePoint_set_ConnectionLimit, (ServicePoint * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01BD4EA0, String *, ServicePoint_get_ConnectionName, (ServicePoint * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, int32_t, ServicePoint_get_CurrentConnections, (ServicePoint * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD4EC0, DateTime, ServicePoint_get_IdleSince, (ServicePoint * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A010, int32_t, ServicePoint_get_MaxIdleTime, (ServicePoint * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD4ED0, void, ServicePoint_set_MaxIdleTime, (ServicePoint * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, Version *, ServicePoint_get_ProtocolVersion, (ServicePoint * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD5050, int32_t, ServicePoint_get_ReceiveBufferSize, (ServicePoint * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD5090, void, ServicePoint_set_ReceiveBufferSize, (ServicePoint * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01BD50D0, bool, ServicePoint_get_SupportsPipelining, (ServicePoint * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD5190, bool, ServicePoint_get_Expect100Continue, (ServicePoint * __this, MethodInfo * method));
DO_APP_FUNC(0x00585320, void, ServicePoint_set_Expect100Continue, (ServicePoint * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x0051DB40, bool, ServicePoint_get_UseNagleAlgorithm, (ServicePoint * __this, MethodInfo * method));
DO_APP_FUNC(0x0051DB50, void, ServicePoint_set_UseNagleAlgorithm, (ServicePoint * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01BD51A0, bool, ServicePoint_get_SendContinue, (ServicePoint * __this, MethodInfo * method));
DO_APP_FUNC(0x00585320, void, ServicePoint_set_SendContinue, (ServicePoint * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01BD5300, void, ServicePoint_SetTcpKeepAlive, (ServicePoint * __this, bool enabled, int32_t keepAliveTime, int32_t keepAliveInterval, MethodInfo * method));
DO_APP_FUNC(0x01BD5420, void, ServicePoint_KeepAliveSetup, (ServicePoint * __this, Socket * socket, MethodInfo * method));
DO_APP_FUNC(0x01BD5680, void, ServicePoint_PutBytes, (Byte__Array * bytes, uint32_t v, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x003FCB00, bool, ServicePoint_get_UsesProxy, (ServicePoint * __this, MethodInfo * method));
DO_APP_FUNC(0x004C6650, void, ServicePoint_set_UsesProxy, (ServicePoint * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00DFE800, bool, ServicePoint_get_UseConnect, (ServicePoint * __this, MethodInfo * method));
DO_APP_FUNC(0x00DFE810, void, ServicePoint_set_UseConnect, (ServicePoint * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01BD5890, WebConnectionGroup *, ServicePoint_GetConnectionGroup, (ServicePoint * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01BD5D30, void, ServicePoint_RemoveConnectionGroup, (ServicePoint * __this, WebConnectionGroup * group, MethodInfo * method));
DO_APP_FUNC(0x01BD5E10, bool, ServicePoint_CheckAvailableForRecycling, (ServicePoint * __this, DateTime * outIdleSince, MethodInfo * method));
DO_APP_FUNC(0x01BD65A0, void, ServicePoint_IdleTimerCallback, (ServicePoint * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01BD65C0, bool, ServicePoint_get_HasTimedOut, (ServicePoint * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD6780, IPHostEntry *, ServicePoint_get_HostEntry, (ServicePoint * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9C0, void, ServicePoint_SetVersion, (ServicePoint * __this, Version * version, MethodInfo * method));
DO_APP_FUNC(0x01BD6C10, EventHandler *, ServicePoint_SendRequest, (ServicePoint * __this, HttpWebRequest * request, String * groupName, MethodInfo * method));
DO_APP_FUNC(0x01BD6F90, bool, ServicePoint_CloseConnectionGroup, (ServicePoint * __this, String * connectionGroupName, MethodInfo * method));
DO_APP_FUNC(0x01BD70C0, X509Certificate_1 *, ServicePoint_get_Certificate, (ServicePoint * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD7300, void, ServicePoint_UpdateServerCertificate, (ServicePoint * __this, X509Certificate_1 * certificate, MethodInfo * method));
DO_APP_FUNC(0x01BD7340, X509Certificate_1 *, ServicePoint_get_ClientCertificate, (ServicePoint * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD7580, void, ServicePoint_UpdateClientCertificate, (ServicePoint * __this, X509Certificate_1 * certificate, MethodInfo * method));
DO_APP_FUNC(0x01BD75C0, bool, ServicePoint_CallEndPointDelegate, (ServicePoint * __this, Socket * sock, IPEndPoint * remote, MethodInfo * method));
DO_APP_FUNC(0x01BD7710, Socket *, ServicePoint_GetConnection, (ServicePoint * __this, PooledStream * PooledStream, Object * owner, bool async, IPAddress * * address, Socket * * abortSocket, Socket * * abortSocket6, MethodInfo * method));
DO_APP_FUNC(0x01BD7760, void, ServicePoint__GetConnectionGroup_b__66_0, (ServicePoint * __this, Object * s, EventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01BD7770, void, ServicePoint__ctor_1, (ServicePoint * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD77A0, void, ServicePointManager__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ServicePointManager__ctor, (ServicePointManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD7970, ICertificatePolicy *, ServicePointManager_get_CertificatePolicy, (MethodInfo * method));
DO_APP_FUNC(0x01BD7B50, void, ServicePointManager_set_CertificatePolicy, (ICertificatePolicy * value, MethodInfo * method));
DO_APP_FUNC(0x01BD7C00, ICertificatePolicy *, ServicePointManager_GetLegacyCertificatePolicy, (MethodInfo * method));
DO_APP_FUNC(0x01BD7CA0, bool, ServicePointManager_get_CheckCertificateRevocationList, (MethodInfo * method));
DO_APP_FUNC(0x01BD7D40, void, ServicePointManager_set_CheckCertificateRevocationList, (bool value, MethodInfo * method));
DO_APP_FUNC(0x01BD7DE0, int32_t, ServicePointManager_get_DefaultConnectionLimit, (MethodInfo * method));
DO_APP_FUNC(0x01BD7E80, void, ServicePointManager_set_DefaultConnectionLimit, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01BD7F60, Exception *, ServicePointManager_GetMustImplement, (MethodInfo * method));
DO_APP_FUNC(0x01BD80A0, int32_t, ServicePointManager_get_DnsRefreshTimeout, (MethodInfo * method));
DO_APP_FUNC(0x01BD8140, void, ServicePointManager_set_DnsRefreshTimeout, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01BD8230, bool, ServicePointManager_get_EnableDnsRoundRobin, (MethodInfo * method));
DO_APP_FUNC(0x01BD82D0, void, ServicePointManager_set_EnableDnsRoundRobin, (bool value, MethodInfo * method));
DO_APP_FUNC(0x01BD8370, int32_t, ServicePointManager_get_MaxServicePointIdleTime, (MethodInfo * method));
DO_APP_FUNC(0x01BD8410, void, ServicePointManager_set_MaxServicePointIdleTime, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01BD84F0, int32_t, ServicePointManager_get_MaxServicePoints, (MethodInfo * method));
DO_APP_FUNC(0x01BD8590, void, ServicePointManager_set_MaxServicePoints, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, ServicePointManager_get_ReusePort, (MethodInfo * method));
DO_APP_FUNC(0x01BD8670, void, ServicePointManager_set_ReusePort, (bool value, MethodInfo * method));
DO_APP_FUNC(0x01BD86C0, SecurityProtocolType__Enum, ServicePointManager_get_SecurityProtocol, (MethodInfo * method));
DO_APP_FUNC(0x01BD8760, void, ServicePointManager_set_SecurityProtocol, (SecurityProtocolType__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01BD8810, ServerCertValidationCallback *, ServicePointManager_get_ServerCertValidationCallback, (MethodInfo * method));
DO_APP_FUNC(0x01BD88B0, RemoteCertificateValidationCallback *, ServicePointManager_get_ServerCertificateValidationCallback, (MethodInfo * method));
DO_APP_FUNC(0x01BD8990, void, ServicePointManager_set_ServerCertificateValidationCallback, (RemoteCertificateValidationCallback * value, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, EncryptionPolicy__Enum, ServicePointManager_get_EncryptionPolicy, (MethodInfo * method));
DO_APP_FUNC(0x01BD8B60, bool, ServicePointManager_get_Expect100Continue, (MethodInfo * method));
DO_APP_FUNC(0x01BD8C00, void, ServicePointManager_set_Expect100Continue, (bool value, MethodInfo * method));
DO_APP_FUNC(0x01BD8CB0, bool, ServicePointManager_get_UseNagleAlgorithm, (MethodInfo * method));
DO_APP_FUNC(0x01BD8D50, void, ServicePointManager_set_UseNagleAlgorithm, (bool value, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, ServicePointManager_get_DisableStrongCrypto, (MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, ServicePointManager_get_DisableSendAuxRecord, (MethodInfo * method));
DO_APP_FUNC(0x01BD8E00, void, ServicePointManager_SetTcpKeepAlive, (bool enabled, int32_t keepAliveTime, int32_t keepAliveInterval, MethodInfo * method));
DO_APP_FUNC(0x01BD8F60, ServicePoint *, ServicePointManager_FindServicePoint, (Uri * address, MethodInfo * method));
DO_APP_FUNC(0x01BD9000, ServicePoint *, ServicePointManager_FindServicePoint_1, (String * uriString, IWebProxy * proxy, MethodInfo * method));
DO_APP_FUNC(0x01BD9180, ServicePoint *, ServicePointManager_FindServicePoint_2, (Uri * address, IWebProxy * proxy, MethodInfo * method));
DO_APP_FUNC(0x01BD9C30, void, ServicePointManager_CloseConnectionGroup, (String * connectionGroupName, MethodInfo * method));
DO_APP_FUNC(0x010415E0, void, ServicePointManager_SPKey__ctor, (ServicePointManager_SPKey * __this, Uri * uri, Uri * proxy, bool use_connect, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Uri *, ServicePointManager_SPKey_get_Uri, (ServicePointManager_SPKey * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A030, bool, ServicePointManager_SPKey_get_UseConnect, (ServicePointManager_SPKey * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD9FC0, bool, ServicePointManager_SPKey_get_UsesProxy, (ServicePointManager_SPKey * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDA060, int32_t, ServicePointManager_SPKey_GetHashCode, (ServicePointManager_SPKey * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDA180, bool, ServicePointManager_SPKey_Equals, (ServicePointManager_SPKey * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, SimpleAsyncCallback__ctor, (SimpleAsyncCallback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x00673B90, void, SimpleAsyncCallback_Invoke, (SimpleAsyncCallback * __this, SimpleAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, SimpleAsyncCallback_BeginInvoke, (SimpleAsyncCallback * __this, SimpleAsyncResult * result, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, SimpleAsyncCallback_EndInvoke, (SimpleAsyncCallback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01BDA2F0, void, SimpleAsyncResult__ctor, (SimpleAsyncResult * __this, SimpleAsyncCallback * cb, MethodInfo * method));
DO_APP_FUNC(0x01BDA440, void, SimpleAsyncResult__ctor_1, (SimpleAsyncResult * __this, AsyncCallback * cb, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BDA740, void, SimpleAsyncResult_Run, (Func_2_System_Net_SimpleAsyncResult_Boolean_ * func, SimpleAsyncCallback * callback, MethodInfo * method));
DO_APP_FUNC(0x01BDAA30, void, SimpleAsyncResult_RunWithLock, (Object * locker, Func_2_System_Net_SimpleAsyncResult_Boolean_ * func, SimpleAsyncCallback * callback, MethodInfo * method));
DO_APP_FUNC(0x01BDAD50, void, SimpleAsyncResult_Reset_internal, (SimpleAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDAE40, void, SimpleAsyncResult_SetCompleted, (SimpleAsyncResult * __this, bool synch, Exception * e, MethodInfo * method));
DO_APP_FUNC(0x01BDAE80, void, SimpleAsyncResult_SetCompleted_1, (SimpleAsyncResult * __this, bool synch, MethodInfo * method));
DO_APP_FUNC(0x01BDAEC0, void, SimpleAsyncResult_SetCompleted_internal, (SimpleAsyncResult * __this, bool synch, Exception * e, MethodInfo * method));
DO_APP_FUNC(0x01BDAFB0, void, SimpleAsyncResult_SetCompleted_internal_1, (SimpleAsyncResult * __this, bool synch, MethodInfo * method));
DO_APP_FUNC(0x01BDAFC0, void, SimpleAsyncResult_DoCallback_private, (SimpleAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDAFF0, void, SimpleAsyncResult_DoCallback_internal, (SimpleAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDB020, void, SimpleAsyncResult_WaitUntilComplete, (SimpleAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDB070, bool, SimpleAsyncResult_WaitUntilComplete_1, (SimpleAsyncResult * __this, int32_t timeout, bool exitContext, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, Object *, SimpleAsyncResult_get_AsyncState, (SimpleAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDB0F0, WaitHandle *, SimpleAsyncResult_get_AsyncWaitHandle, (SimpleAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDB340, bool, SimpleAsyncResult_get_CompletedSynchronously, (SimpleAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A280, bool, SimpleAsyncResult_get_CompletedSynchronouslyPeek, (SimpleAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDB500, bool, SimpleAsyncResult_get_IsCompleted, (SimpleAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x00938880, bool, SimpleAsyncResult_get_GotException, (SimpleAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, Exception *, SimpleAsyncResult_get_Exception, (SimpleAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SimpleAsyncResult_c_DisplayClass9_0__ctor, (SimpleAsyncResult_c_DisplayClass9_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDB830, void, SimpleAsyncResult_c_DisplayClass9_0___ctor_b__0, (SimpleAsyncResult_c_DisplayClass9_0 * __this, SimpleAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SimpleAsyncResult_c_DisplayClass11_0__ctor, (SimpleAsyncResult_c_DisplayClass11_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDB5F0, bool, SimpleAsyncResult_c_DisplayClass11_0__RunWithLock_b__0, (SimpleAsyncResult_c_DisplayClass11_0 * __this, SimpleAsyncResult * inner, MethodInfo * method));
DO_APP_FUNC(0x01BDB6D0, void, SimpleAsyncResult_c_DisplayClass11_0__RunWithLock_b__1, (SimpleAsyncResult_c_DisplayClass11_0 * __this, SimpleAsyncResult * inner, MethodInfo * method));
DO_APP_FUNC(0x01BDD090, void, SocketPermission__ctor, (SocketPermission * __this, PermissionState__Enum state, MethodInfo * method));
DO_APP_FUNC(0x01BDD2B0, void, SocketPermission__ctor_1, (SocketPermission * __this, NetworkAccess__Enum access, TransportType__Enum transport, String * hostName, int32_t portNumber, MethodInfo * method));
DO_APP_FUNC(0x01BDD500, IEnumerator *, SocketPermission_get_AcceptList, (SocketPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDD530, IEnumerator *, SocketPermission_get_ConnectList, (SocketPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDD560, void, SocketPermission_AddPermission, (SocketPermission * __this, NetworkAccess__Enum access, TransportType__Enum transport, String * hostName, int32_t portNumber, MethodInfo * method));
DO_APP_FUNC(0x01BDD720, IPermission *, SocketPermission_Copy, (SocketPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDD980, IPermission *, SocketPermission_Intersect, (SocketPermission * __this, IPermission * target, MethodInfo * method));
DO_APP_FUNC(0x01BDDCB0, bool, SocketPermission_IntersectEmpty, (SocketPermission * __this, SocketPermission * permission, MethodInfo * method));
DO_APP_FUNC(0x01BDDD20, void, SocketPermission_Intersect_1, (SocketPermission * __this, ArrayList * list1, ArrayList * list2, ArrayList * result, MethodInfo * method));
DO_APP_FUNC(0x01BDE110, bool, SocketPermission_IsSubsetOf, (SocketPermission * __this, IPermission * target, MethodInfo * method));
DO_APP_FUNC(0x01BDE340, bool, SocketPermission_IsSubsetOf_1, (SocketPermission * __this, ArrayList * list1, ArrayList * list2, MethodInfo * method));
DO_APP_FUNC(0x0052A030, bool, SocketPermission_IsUnrestricted, (SocketPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDE690, SecurityElement *, SocketPermission_ToXml, (SocketPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDE950, void, SocketPermission_ToXml_1, (SocketPermission * __this, SecurityElement * root, String * childName, IEnumerator * enumerator, MethodInfo * method));
DO_APP_FUNC(0x01BDEE20, void, SocketPermission_FromXml, (SocketPermission * __this, SecurityElement * securityElement, MethodInfo * method));
DO_APP_FUNC(0x01BDF300, void, SocketPermission_FromXml_1, (SocketPermission * __this, ArrayList * endpoints, NetworkAccess__Enum access, MethodInfo * method));
DO_APP_FUNC(0x01BDF640, IPermission *, SocketPermission_Union, (SocketPermission * __this, IPermission * target, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, SocketPermissionAttribute__ctor, (SocketPermissionAttribute * __this, SecurityAction__Enum action, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, SocketPermissionAttribute_get_Access, (SocketPermissionAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDF8D0, void, SocketPermissionAttribute_set_Access, (SocketPermissionAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, SocketPermissionAttribute_get_Host, (SocketPermissionAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDF970, void, SocketPermissionAttribute_set_Host, (SocketPermissionAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, SocketPermissionAttribute_get_Port, (SocketPermissionAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDFA10, void, SocketPermissionAttribute_set_Port, (SocketPermissionAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, SocketPermissionAttribute_get_Transport, (SocketPermissionAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01BDFAB0, void, SocketPermissionAttribute_set_Transport, (SocketPermissionAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01BDFB50, IPermission *, SocketPermissionAttribute_CreatePermission, (SocketPermissionAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE01F0, void, SocketPermissionAttribute_AlreadySet, (SocketPermissionAttribute * __this, String * property, MethodInfo * method));
DO_APP_FUNC(0x020AD7F0, void, WebAsyncResult__ctor, (WebAsyncResult * __this, AsyncCallback * cb, Object * state, MethodInfo * method));
DO_APP_FUNC(0x020AD800, void, WebAsyncResult__ctor_1, (WebAsyncResult * __this, HttpWebRequest * request, AsyncCallback * cb, Object * state, MethodInfo * method));
DO_APP_FUNC(0x020AD840, void, WebAsyncResult__ctor_2, (WebAsyncResult * __this, AsyncCallback * cb, Object * state, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x020AD880, void, WebAsyncResult_Reset, (WebAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x020AD8A0, void, WebAsyncResult_SetCompleted, (WebAsyncResult * __this, bool synch, int32_t nbytes, MethodInfo * method));
DO_APP_FUNC(0x020AD8B0, void, WebAsyncResult_SetCompleted_1, (WebAsyncResult * __this, bool synch, Stream * writeStream, MethodInfo * method));
DO_APP_FUNC(0x020AD8C0, void, WebAsyncResult_SetCompleted_2, (WebAsyncResult * __this, bool synch, HttpWebResponse * response, MethodInfo * method));
DO_APP_FUNC(0x01BDAFF0, void, WebAsyncResult_DoCallback, (WebAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD490, int32_t, WebAsyncResult_get_NBytes, (WebAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD4A0, void, WebAsyncResult_set_NBytes, (WebAsyncResult * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, IAsyncResult *, WebAsyncResult_get_InnerAsyncResult, (WebAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB70, void, WebAsyncResult_set_InnerAsyncResult, (WebAsyncResult * __this, IAsyncResult * value, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, Stream *, WebAsyncResult_get_WriteStream, (WebAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, HttpWebResponse *, WebAsyncResult_get_Response, (WebAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, Byte__Array *, WebAsyncResult_get_Buffer, (WebAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x003FF8B0, int32_t, WebAsyncResult_get_Offset, (WebAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x006DC050, int32_t, WebAsyncResult_get_Size, (WebAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, MonoChunkStream *, WebConnection_get_MonoChunkStream, (WebConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D61750, void, WebConnection__ctor, (WebConnection * __this, IWebConnectionState * wcs, ServicePoint * sPoint, MethodInfo * method));
DO_APP_FUNC(0x01D61BC0, bool, WebConnection_CanReuse, (WebConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D61BF0, void, WebConnection_Connect, (WebConnection * __this, HttpWebRequest * request, MethodInfo * method));
DO_APP_FUNC(0x01D62380, bool, WebConnection_CreateTunnel, (WebConnection * __this, HttpWebRequest * request, Uri * connectUri, Stream * stream, Byte__Array * * buffer, MethodInfo * method));
DO_APP_FUNC(0x01D62D20, WebHeaderCollection *, WebConnection_ReadHeaders, (WebConnection * __this, Stream * stream, Byte__Array * * retBuffer, int32_t * status, MethodInfo * method));
DO_APP_FUNC(0x01D63400, void, WebConnection_FlushContents, (WebConnection * __this, Stream * stream, int32_t contentLength, MethodInfo * method));
DO_APP_FUNC(0x01D634D0, bool, WebConnection_CreateStream, (WebConnection * __this, HttpWebRequest * request, MethodInfo * method));
DO_APP_FUNC(0x01D63950, void, WebConnection_HandleError, (WebConnection * __this, WebExceptionStatus__Enum st, Exception * e, String * where, MethodInfo * method));
DO_APP_FUNC(0x01D63C30, void, WebConnection_ReadDone, (WebConnection * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01D643D0, bool, WebConnection_ExpectContent, (int32_t statusCode, String * method_1, MethodInfo * method));
DO_APP_FUNC(0x01D644B0, void, WebConnection_InitRead, (WebConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D646C0, int32_t, WebConnection_GetResponse, (WebConnectionData * data, ServicePoint * sPoint, Byte__Array * buffer, int32_t max, MethodInfo * method));
DO_APP_FUNC(0x01D65060, void, WebConnection_InitConnection, (WebConnection * __this, HttpWebRequest * request, MethodInfo * method));
DO_APP_FUNC(0x01D656D0, EventHandler *, WebConnection_SendRequest, (WebConnection * __this, HttpWebRequest * request, MethodInfo * method));
DO_APP_FUNC(0x01D65A20, void, WebConnection_SendNext, (WebConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D65C00, void, WebConnection_NextRead, (WebConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D66040, bool, WebConnection_ReadLine, (Byte__Array * buffer, int32_t * start, int32_t max, String * * output, MethodInfo * method));
DO_APP_FUNC(0x01D66320, IAsyncResult *, WebConnection_BeginRead, (WebConnection * __this, HttpWebRequest * request, Byte__Array * buffer, int32_t offset, int32_t size, AsyncCallback * cb, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01D668A0, int32_t, WebConnection_EndRead, (WebConnection * __this, HttpWebRequest * request, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01D66E60, int32_t, WebConnection_EnsureRead, (WebConnection * __this, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01D67010, bool, WebConnection_CompleteChunkedRead, (WebConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D670F0, IAsyncResult *, WebConnection_BeginWrite, (WebConnection * __this, HttpWebRequest * request, Byte__Array * buffer, int32_t offset, int32_t size, AsyncCallback * cb, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01D674C0, bool, WebConnection_EndWrite, (WebConnection * __this, HttpWebRequest * request, bool throwOnError, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01D67800, int32_t, WebConnection_Read, (WebConnection * __this, HttpWebRequest * request, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01D67C20, bool, WebConnection_Write, (WebConnection * __this, HttpWebRequest * request, Byte__Array * buffer, int32_t offset, int32_t size, String * * err_msg, MethodInfo * method));
DO_APP_FUNC(0x01D67EF0, void, WebConnection_Close, (WebConnection * __this, bool sendNext, MethodInfo * method));
DO_APP_FUNC(0x01D68300, void, WebConnection_Abort, (WebConnection * __this, Object * sender, EventArgs * args, MethodInfo * method));
DO_APP_FUNC(0x01D687D0, void, WebConnection_ResetNtlm, (WebConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D687F0, bool, WebConnection_get_Connected, (WebConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC10, void, WebConnection_set_PriorityRequest, (WebConnection * __this, HttpWebRequest * value, MethodInfo * method));
DO_APP_FUNC(0x00739A80, bool, WebConnection_get_NtlmAuthenticated, (WebConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x0094FCE0, void, WebConnection_set_NtlmAuthenticated, (WebConnection * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FBC20, NetworkCredential *, WebConnection_get_NtlmCredential, (WebConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC30, void, WebConnection_set_NtlmCredential, (WebConnection * __this, NetworkCredential * value, MethodInfo * method));
DO_APP_FUNC(0x00AB7980, bool, WebConnection_get_UnsafeAuthenticatedConnectionSharing, (WebConnection * __this, MethodInfo * method));
DO_APP_FUNC(0x01D688F0, void, WebConnection_set_UnsafeAuthenticatedConnectionSharing, (WebConnection * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01D68900, void, WebConnection__SendRequest_b__41_0, (WebConnection * __this, Object * o, MethodInfo * method));
DO_APP_FUNC(0x01D68A00, void, WebConnection_AbortHelper_Abort, (WebConnection_AbortHelper * __this, Object * sender, EventArgs * args, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebConnection_AbortHelper__ctor, (WebConnection_AbortHelper * __this, MethodInfo * method));
DO_APP_FUNC(0x00C26ED0, void, WebConnectionData__ctor, (WebConnectionData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, WebConnectionData__ctor_1, (WebConnectionData * __this, HttpWebRequest * request, MethodInfo * method));
DO_APP_FUNC(0x002FA280, HttpWebRequest *, WebConnectionData_get_request, (WebConnectionData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, WebConnectionData_set_request, (WebConnectionData * __this, HttpWebRequest * value, MethodInfo * method));
DO_APP_FUNC(0x002FD490, ReadState__Enum, WebConnectionData_get_ReadState, (WebConnectionData * __this, MethodInfo * method));
DO_APP_FUNC(0x01D68B50, void, WebConnectionData_set_ReadState, (WebConnectionData * __this, ReadState__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01D68CC0, void, WebConnectionGroup__ctor, (WebConnectionGroup * __this, ServicePoint * sPoint, String * name, MethodInfo * method));
DO_APP_FUNC(0x01D68EF0, void, WebConnectionGroup_add_ConnectionClosed, (WebConnectionGroup * __this, EventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x01D68FE0, void, WebConnectionGroup_remove_ConnectionClosed, (WebConnectionGroup * __this, EventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x01D690D0, void, WebConnectionGroup_OnConnectionClosed, (WebConnectionGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x01D690F0, void, WebConnectionGroup_Close, (WebConnectionGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x01D694E0, WebConnection *, WebConnectionGroup_GetConnection, (WebConnectionGroup * __this, HttpWebRequest * request, bool * created, MethodInfo * method));
DO_APP_FUNC(0x01D695F0, void, WebConnectionGroup_PrepareSharingNtlm, (WebConnection * cnc, HttpWebRequest * request, MethodInfo * method));
DO_APP_FUNC(0x01D69860, WebConnectionGroup_ConnectionState *, WebConnectionGroup_FindIdleConnection, (WebConnectionGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x01D69A90, WebConnection *, WebConnectionGroup_CreateOrReuseConnection, (WebConnectionGroup * __this, HttpWebRequest * request, bool * created, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, WebConnectionGroup_get_Name, (WebConnectionGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, Queue *, WebConnectionGroup_get_Queue, (WebConnectionGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x01D69D60, bool, WebConnectionGroup_TryRecycle, (WebConnectionGroup * __this, TimeSpan maxIdleTime, DateTime * idleSince, MethodInfo * method));
DO_APP_FUNC(0x002FA280, WebConnection *, WebConnectionGroup_ConnectionState_get_Connection, (WebConnectionGroup_ConnectionState * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, WebConnectionGroup_ConnectionState_set_Connection, (WebConnectionGroup_ConnectionState * __this, WebConnection * value, MethodInfo * method));
DO_APP_FUNC(0x002FB930, WebConnectionGroup *, WebConnectionGroup_ConnectionState_get_Group, (WebConnectionGroup_ConnectionState * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, WebConnectionGroup_ConnectionState_set_Group, (WebConnectionGroup_ConnectionState * __this, WebConnectionGroup * value, MethodInfo * method));
DO_APP_FUNC(0x0195B0F0, ServicePoint *, WebConnectionGroup_ConnectionState_get_ServicePoint, (WebConnectionGroup_ConnectionState * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A030, bool, WebConnectionGroup_ConnectionState_get_Busy, (WebConnectionGroup_ConnectionState * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, DateTime, WebConnectionGroup_ConnectionState_get_IdleSince, (WebConnectionGroup_ConnectionState * __this, MethodInfo * method));
DO_APP_FUNC(0x01D6A3A0, bool, WebConnectionGroup_ConnectionState_TrySetBusy, (WebConnectionGroup_ConnectionState * __this, MethodInfo * method));
DO_APP_FUNC(0x01D6A590, void, WebConnectionGroup_ConnectionState_SetIdle, (WebConnectionGroup_ConnectionState * __this, MethodInfo * method));
DO_APP_FUNC(0x01D6A700, void, WebConnectionGroup_ConnectionState__ctor, (WebConnectionGroup_ConnectionState * __this, WebConnectionGroup * group, MethodInfo * method));
DO_APP_FUNC(0x01D6A890, void, WebConnectionStream__ctor, (WebConnectionStream * __this, WebConnection * cnc, WebConnectionData * data, MethodInfo * method));
DO_APP_FUNC(0x01D6ADF0, void, WebConnectionStream__ctor_1, (WebConnectionStream * __this, WebConnection * cnc, HttpWebRequest * request, MethodInfo * method));
DO_APP_FUNC(0x01D6B260, bool, WebConnectionStream_CheckAuthHeader, (WebConnectionStream * __this, String * headerName, MethodInfo * method));
DO_APP_FUNC(0x01D6B370, bool, WebConnectionStream_IsNtlmAuth, (WebConnectionStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D6B490, void, WebConnectionStream_CheckResponseInBuffer, (WebConnectionStream * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, HttpWebRequest *, WebConnectionStream_get_Request, (WebConnectionStream * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, WebConnection *, WebConnectionStream_get_Connection, (WebConnectionStream * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, WebConnectionStream_get_CanTimeout, (WebConnectionStream * __this, MethodInfo * method));
DO_APP_FUNC(0x00855600, int32_t, WebConnectionStream_get_ReadTimeout, (WebConnectionStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D6B4E0, void, WebConnectionStream_set_ReadTimeout, (WebConnectionStream * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x008519C0, int32_t, WebConnectionStream_get_WriteTimeout, (WebConnectionStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D6B5A0, void, WebConnectionStream_set_WriteTimeout, (WebConnectionStream * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01D6B660, bool, WebConnectionStream_get_CompleteRequestWritten, (WebConnectionStream * __this, MethodInfo * method));
DO_APP_FUNC(0x003FBE60, void, WebConnectionStream_set_SendChunked, (WebConnectionStream * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FB9E0, void, WebConnectionStream_set_ReadBuffer, (WebConnectionStream * __this, Byte__Array * value, MethodInfo * method));
DO_APP_FUNC(0x008F7CD0, void, WebConnectionStream_set_ReadBufferOffset, (WebConnectionStream * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x00843E80, void, WebConnectionStream_set_ReadBufferSize, (WebConnectionStream * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01D6B670, Byte__Array *, WebConnectionStream_get_WriteBuffer, (WebConnectionStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D6B6A0, int32_t, WebConnectionStream_get_WriteBufferLength, (WebConnectionStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D6B6D0, void, WebConnectionStream_ForceCompletion, (WebConnectionStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D6B720, void, WebConnectionStream_CheckComplete, (WebConnectionStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D6B760, void, WebConnectionStream_ReadAll, (WebConnectionStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D6BC60, void, WebConnectionStream_WriteCallbackWrapper, (WebConnectionStream * __this, IAsyncResult * r, MethodInfo * method));
DO_APP_FUNC(0x01D6BDE0, void, WebConnectionStream_ReadCallbackWrapper, (WebConnectionStream * __this, IAsyncResult * r, MethodInfo * method));
DO_APP_FUNC(0x01D6BF60, int32_t, WebConnectionStream_Read, (WebConnectionStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01D6C130, IAsyncResult *, WebConnectionStream_BeginRead, (WebConnectionStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, AsyncCallback * cb, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01D6C620, int32_t, WebConnectionStream_EndRead, (WebConnectionStream * __this, IAsyncResult * r, MethodInfo * method));
DO_APP_FUNC(0x01D6CA30, void, WebConnectionStream_WriteAsyncCB, (WebConnectionStream * __this, IAsyncResult * r, MethodInfo * method));
DO_APP_FUNC(0x01D6CD90, IAsyncResult *, WebConnectionStream_BeginWrite, (WebConnectionStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, AsyncCallback * cb, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01D6D8F0, void, WebConnectionStream_CheckWriteOverflow, (WebConnectionStream * __this, int64_t contentLength, int64_t totalWritten, int64_t size, MethodInfo * method));
DO_APP_FUNC(0x01D6DA00, void, WebConnectionStream_EndWrite, (WebConnectionStream * __this, IAsyncResult * r, MethodInfo * method));
DO_APP_FUNC(0x01D6DCD0, void, WebConnectionStream_Write, (WebConnectionStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebConnectionStream_Flush, (WebConnectionStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D6DEB0, void, WebConnectionStream_SetHeadersAsync, (WebConnectionStream * __this, bool setInternalLength, SimpleAsyncCallback * callback, MethodInfo * method));
DO_APP_FUNC(0x01D6E100, bool, WebConnectionStream_SetHeadersAsync_1, (WebConnectionStream * __this, SimpleAsyncResult * result, bool setInternalLength, MethodInfo * method));
DO_APP_FUNC(0x0061E2F0, bool, WebConnectionStream_get_RequestWritten, (WebConnectionStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D6E6C0, SimpleAsyncResult *, WebConnectionStream_WriteRequestAsync, (WebConnectionStream * __this, SimpleAsyncCallback * callback, MethodInfo * method));
DO_APP_FUNC(0x01D6E800, bool, WebConnectionStream_WriteRequestAsync_1, (WebConnectionStream * __this, SimpleAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00A48970, void, WebConnectionStream_InternalClose, (WebConnectionStream * __this, MethodInfo * method));
DO_APP_FUNC(0x009CA200, bool, WebConnectionStream_get_GetResponseOnClose, (WebConnectionStream * __this, MethodInfo * method));
DO_APP_FUNC(0x009CA210, void, WebConnectionStream_set_GetResponseOnClose, (WebConnectionStream * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01D6EB90, void, WebConnectionStream_Close, (WebConnectionStream * __this, MethodInfo * method));
DO_APP_FUNC(0x006DF410, void, WebConnectionStream_KillBuffer, (WebConnectionStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D6EF70, int64_t, WebConnectionStream_Seek, (WebConnectionStream * __this, int64_t a, SeekOrigin__Enum b, MethodInfo * method));
DO_APP_FUNC(0x01D6EFC0, void, WebConnectionStream_SetLength, (WebConnectionStream * __this, int64_t a, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, WebConnectionStream_get_CanSeek, (WebConnectionStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D6F010, bool, WebConnectionStream_get_CanRead, (WebConnectionStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D6F030, bool, WebConnectionStream_get_CanWrite, (WebConnectionStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D6F050, int64_t, WebConnectionStream_get_Length, (WebConnectionStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D6F100, int64_t, WebConnectionStream_get_Position, (WebConnectionStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01D6F150, void, WebConnectionStream_set_Position, (WebConnectionStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01D6F1A0, void, WebConnectionStream__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebConnectionStream_c_DisplayClass75_0__ctor, (WebConnectionStream_c_DisplayClass75_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x01D6F270, bool, WebConnectionStream_c_DisplayClass75_0__SetHeadersAsync_b__0, (WebConnectionStream_c_DisplayClass75_0 * __this, SimpleAsyncResult * r, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebConnectionStream_c_DisplayClass76_0__ctor, (WebConnectionStream_c_DisplayClass76_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x01D6F2A0, void, WebConnectionStream_c_DisplayClass76_0__SetHeadersAsync_b__0, (WebConnectionStream_c_DisplayClass76_0 * __this, IAsyncResult * r, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, WebConnectionStream_c_DisplayClass80_0__ctor, (WebConnectionStream_c_DisplayClass80_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x01D6F600, void, WebConnectionStream_c_DisplayClass80_0__WriteRequestAsync_b__0, (WebConnectionStream_c_DisplayClass80_0 * __this, SimpleAsyncResult * inner, MethodInfo * method));
DO_APP_FUNC(0x01D6F950, void, WebConnectionStream_c_DisplayClass80_0__WriteRequestAsync_b__1, (WebConnectionStream_c_DisplayClass80_0 * __this, IAsyncResult * r, MethodInfo * method));
DO_APP_FUNC(0x01E6E080, void, MailAddress__ctor, (MailAddress * __this, String * address, MethodInfo * method));
DO_APP_FUNC(0x01E6E180, void, MailAddress__ctor_1, (MailAddress * __this, String * address, String * displayName, MethodInfo * method));
DO_APP_FUNC(0x01E6E2B0, void, MailAddress__ctor_2, (MailAddress * __this, String * address, String * displayName, Encoding * displayNameEncoding, MethodInfo * method));
DO_APP_FUNC(0x01E6E3D0, void, MailAddress_ParseAddress, (MailAddress * __this, String * address, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, MailAddress_get_Address, (MailAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6E7E0, String *, MailAddress_get_DisplayName, (MailAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6E870, bool, MailAddress_Equals, (MailAddress * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01D25F50, int32_t, MailAddress_GetHashCode, (MailAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6EA20, String *, MailAddress_ToString, (MailAddress * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6EBA0, FormatException *, MailAddress_CreateFormatException, (MethodInfo * method));
DO_APP_FUNC(0x01E6ECF0, void, Base64WriteStateInfo__ctor, (Base64WriteStateInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x003FC7F0, int32_t, Base64WriteStateInfo_get_Padding, (Base64WriteStateInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00617D40, void, Base64WriteStateInfo_set_Padding, (Base64WriteStateInfo * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x004E5A00, uint8_t, Base64WriteStateInfo_get_LastBits, (Base64WriteStateInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x004E5A10, void, Base64WriteStateInfo_set_LastBits, (Base64WriteStateInfo * __this, uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x00AE2690, int32_t, EncodedStreamFactory_get_DefaultMaxLineLength, (MethodInfo * method));
DO_APP_FUNC(0x01E6ECF0, void, WriteStateInfoBase__ctor, (WriteStateInfoBase * __this, MethodInfo * method));
DO_APP_FUNC(0x01A92400, int32_t, WriteStateInfoBase_get_FooterLength, (WriteStateInfoBase * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Byte__Array *, WriteStateInfoBase_get_Footer, (WriteStateInfoBase * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Byte__Array *, WriteStateInfoBase_get_Header, (WriteStateInfoBase * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, Byte__Array *, WriteStateInfoBase_get_Buffer, (WriteStateInfoBase * __this, MethodInfo * method));
DO_APP_FUNC(0x00998570, int32_t, WriteStateInfoBase_get_Length, (WriteStateInfoBase * __this, MethodInfo * method));
DO_APP_FUNC(0x00654950, int32_t, WriteStateInfoBase_get_CurrentLineLength, (WriteStateInfoBase * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6EDB0, void, WriteStateInfoBase_EnsureSpaceInBuffer, (WriteStateInfoBase * __this, int32_t moreBytes, MethodInfo * method));
DO_APP_FUNC(0x01E6EEA0, void, WriteStateInfoBase_Append, (WriteStateInfoBase * __this, uint8_t aByte, MethodInfo * method));
DO_APP_FUNC(0x01E6EF00, void, WriteStateInfoBase_Append_1, (WriteStateInfoBase * __this, Byte__Array * bytes, MethodInfo * method));
DO_APP_FUNC(0x01E6EF50, void, WriteStateInfoBase_AppendCRLF, (WriteStateInfoBase * __this, bool includeSpace, MethodInfo * method));
DO_APP_FUNC(0x01E6F140, void, WriteStateInfoBase_AppendHeader, (WriteStateInfoBase * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6F1A0, void, WriteStateInfoBase_AppendFooter, (WriteStateInfoBase * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, int32_t, WriteStateInfoBase_get_MaxLineLength, (WriteStateInfoBase * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6F200, void, WriteStateInfoBase_Reset, (WriteStateInfoBase * __this, MethodInfo * method));
DO_APP_FUNC(0x020A2700, int32_t, SocketException_WSAGetLastError_internal, (MethodInfo * method));
DO_APP_FUNC(0x020A2730, void, SocketException__ctor, (SocketException * __this, MethodInfo * method));
DO_APP_FUNC(0x020A2800, void, SocketException__ctor_1, (SocketException * __this, int32_t error, String * message, MethodInfo * method));
DO_APP_FUNC(0x020A28C0, void, SocketException__ctor_2, (SocketException * __this, int32_t errorCode, MethodInfo * method));
DO_APP_FUNC(0x020A2970, void, SocketException__ctor_3, (SocketException * __this, SocketError__Enum socketError, MethodInfo * method));
DO_APP_FUNC(0x020A2A20, void, SocketException__ctor_4, (SocketException * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x00989BF0, int32_t, SocketException_get_ErrorCode, (SocketException * __this, MethodInfo * method));
DO_APP_FUNC(0x020A2AE0, String *, SocketException_get_Message, (SocketException * __this, MethodInfo * method));
DO_APP_FUNC(0x00989BF0, SocketError__Enum, SocketException_get_SocketErrorCode, (SocketException * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE0270, void, LingerOption__ctor, (LingerOption * __this, bool enable, int32_t seconds, MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, LingerOption_set_Enabled, (LingerOption * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00E39C80, void, LingerOption_set_LingerTime, (LingerOption * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01BE0280, void, NetworkStream__ctor, (NetworkStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE0330, void, NetworkStream__ctor_1, (NetworkStream * __this, Socket * socket, MethodInfo * method));
DO_APP_FUNC(0x01BE0430, void, NetworkStream__ctor_2, (NetworkStream * __this, Socket * socket, bool ownsSocket, MethodInfo * method));
DO_APP_FUNC(0x01BE0540, Socket *, NetworkStream_get_InternalSocket, (NetworkStream * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A050, bool, NetworkStream_get_CanRead, (NetworkStream * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, NetworkStream_get_CanSeek, (NetworkStream * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A070, bool, NetworkStream_get_CanWrite, (NetworkStream * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, NetworkStream_get_CanTimeout, (NetworkStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE0630, int32_t, NetworkStream_get_ReadTimeout, (NetworkStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE0700, void, NetworkStream_set_ReadTimeout, (NetworkStream * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01BE0810, int32_t, NetworkStream_get_WriteTimeout, (NetworkStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE08E0, void, NetworkStream_set_WriteTimeout, (NetworkStream * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01BE09F0, bool, NetworkStream_get_DataAvailable, (NetworkStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE0C40, int64_t, NetworkStream_get_Length, (NetworkStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE0CB0, int64_t, NetworkStream_get_Position, (NetworkStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE0D20, void, NetworkStream_set_Position, (NetworkStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01BE0D90, int64_t, NetworkStream_Seek, (NetworkStream * __this, int64_t offset, SeekOrigin__Enum origin, MethodInfo * method));
DO_APP_FUNC(0x01BE0E00, void, NetworkStream_InitNetworkStream, (NetworkStream * __this, Socket * socket, FileAccess__Enum Access, MethodInfo * method));
DO_APP_FUNC(0x01BE0FB0, bool, NetworkStream_PollRead, (NetworkStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE0FF0, bool, NetworkStream_Poll, (NetworkStream * __this, int32_t microSeconds, SelectMode__Enum mode, MethodInfo * method));
DO_APP_FUNC(0x01BE1180, int32_t, NetworkStream_Read, (NetworkStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01BE15F0, void, NetworkStream_Write, (NetworkStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01BE1A60, void, NetworkStream_Close, (NetworkStream * __this, int32_t timeout, MethodInfo * method));
DO_APP_FUNC(0x01BE1B30, void, NetworkStream_Dispose, (NetworkStream * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01BE1BA0, void, NetworkStream_Finalize, (NetworkStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE1C20, bool, NetworkStream_get_Connected, (NetworkStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE1C50, IAsyncResult *, NetworkStream_BeginRead, (NetworkStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BE2030, IAsyncResult *, NetworkStream_UnsafeBeginRead, (NetworkStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BE2310, int32_t, NetworkStream_EndRead, (NetworkStream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01BE25E0, IAsyncResult *, NetworkStream_BeginWrite, (NetworkStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BE29C0, IAsyncResult *, NetworkStream_UnsafeBeginWrite, (NetworkStream * __this, Byte__Array * buffer, int32_t offset, int32_t size, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BE2CD0, void, NetworkStream_EndWrite, (NetworkStream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01BE2FA0, void, NetworkStream_MultipleWrite, (NetworkStream * __this, BufferOffsetSize_1__Array * buffers, MethodInfo * method));
DO_APP_FUNC(0x01BE3210, IAsyncResult *, NetworkStream_BeginMultipleWrite, (NetworkStream * __this, BufferOffsetSize_1__Array * buffers, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BE3490, void, NetworkStream_EndMultipleWrite, (NetworkStream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, NetworkStream_Flush, (NetworkStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE3700, Task *, NetworkStream_FlushAsync, (NetworkStream * __this, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x01BE3790, void, NetworkStream_SetLength, (NetworkStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01BE3800, void, NetworkStream_SetSocketTimeoutOption, (NetworkStream * __this, SocketShutdown__Enum mode, int32_t timeout, bool silent, MethodInfo * method));
DO_APP_FUNC(0x01BE48E0, void, Socket__ctor, (Socket * __this, AddressFamily__Enum addressFamily, SocketType__Enum socketType, ProtocolType__Enum protocolType, MethodInfo * method));
DO_APP_FUNC(0x01BE4E80, bool, Socket_get_SupportsIPv4, (MethodInfo * method));
DO_APP_FUNC(0x01BE4F30, bool, Socket_get_OSSupportsIPv4, (MethodInfo * method));
DO_APP_FUNC(0x01BE4FE0, bool, Socket_get_SupportsIPv6, (MethodInfo * method));
DO_APP_FUNC(0x01BE5090, bool, Socket_get_OSSupportsIPv6, (MethodInfo * method));
DO_APP_FUNC(0x01BE5140, void *, Socket_get_Handle, (Socket * __this, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, AddressFamily__Enum, Socket_get_AddressFamily, (Socket * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A010, SocketType__Enum, Socket_get_SocketType, (Socket * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, ProtocolType__Enum, Socket_get_ProtocolType, (Socket * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE5160, void, Socket_set_ExclusiveAddressUse, (Socket * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01BE5250, void, Socket_set_DontFragment, (Socket * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01BE5330, bool, Socket_get_DualMode, (Socket * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE5440, void, Socket_set_DualMode, (Socket * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01BE5530, bool, Socket_get_IsDualMode, (Socket * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE5650, int32_t, Socket_Send, (Socket * __this, IList_1_System_ArraySegment_1_ * buffers, SocketFlags__Enum socketFlags, MethodInfo * method));
DO_APP_FUNC(0x01BE5730, int32_t, Socket_Send_1, (Socket * __this, Byte__Array * buffer, int32_t offset, int32_t size, SocketFlags__Enum socketFlags, MethodInfo * method));
DO_APP_FUNC(0x01BE5830, int32_t, Socket_Receive, (Socket * __this, Byte__Array * buffer, int32_t offset, int32_t size, SocketFlags__Enum socketFlags, MethodInfo * method));
DO_APP_FUNC(0x01BE5930, int32_t, Socket_Receive_1, (Socket * __this, IList_1_System_ArraySegment_1_ * buffers, SocketFlags__Enum socketFlags, MethodInfo * method));
DO_APP_FUNC(0x01BE5A10, int32_t, Socket_IOControl, (Socket * __this, IOControlCode__Enum ioControlCode, Byte__Array * optionInValue, Byte__Array * optionOutValue, MethodInfo * method));
DO_APP_FUNC(0x01BE5BB0, void, Socket_SetIPProtectionLevel, (Socket * __this, IPProtectionLevel__Enum level, MethodInfo * method));
DO_APP_FUNC(0x01BE5D00, IAsyncResult *, Socket_BeginSend, (Socket * __this, Byte__Array * buffer, int32_t offset, int32_t size, SocketFlags__Enum socketFlags, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BE5E30, IAsyncResult *, Socket_BeginSend_1, (Socket * __this, IList_1_System_ArraySegment_1_ * buffers, SocketFlags__Enum socketFlags, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BE5F40, int32_t, Socket_EndSend, (Socket * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01BE60E0, IAsyncResult *, Socket_BeginReceive, (Socket * __this, Byte__Array * buffer, int32_t offset, int32_t size, SocketFlags__Enum socketFlags, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BE6210, int32_t, Socket_EndReceive, (Socket * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01BE63B0, Object *, Socket_get_InternalSyncObject, (MethodInfo * method));
DO_APP_FUNC(0x01BE6590, bool, Socket_get_CleanedUp, (Socket * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE65A0, void, Socket_InitializeSockets, (MethodInfo * method));
DO_APP_FUNC(0x01BE6880, void, Socket_Dispose, (Socket * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE6930, void, Socket_Finalize, (Socket * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE69B0, void, Socket_InternalShutdown, (Socket * __this, SocketShutdown__Enum how, MethodInfo * method));
DO_APP_FUNC(0x01BE6A80, IAsyncResult *, Socket_UnsafeBeginSend, (Socket * __this, Byte__Array * buffer, int32_t offset, int32_t size, SocketFlags__Enum socketFlags, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BE6A90, IAsyncResult *, Socket_UnsafeBeginReceive, (Socket * __this, Byte__Array * buffer, int32_t offset, int32_t size, SocketFlags__Enum socketFlags, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BE6AA0, IAsyncResult *, Socket_BeginMultipleSend, (Socket * __this, BufferOffsetSize_1__Array * buffers, SocketFlags__Enum socketFlags, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BE6E60, int32_t, Socket_EndMultipleSend, (Socket * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01BE6E70, void, Socket_MultipleSend, (Socket * __this, BufferOffsetSize_1__Array * buffers, SocketFlags__Enum socketFlags, MethodInfo * method));
DO_APP_FUNC(0x01BE7160, void, Socket_SetSocketOption, (Socket * __this, SocketOptionLevel__Enum optionLevel, SocketOptionName__Enum optionName, int32_t optionValue, bool silent, MethodInfo * method));
DO_APP_FUNC(0x01BE7300, void, Socket__ctor_1, (Socket * __this, AddressFamily__Enum family, SocketType__Enum type, ProtocolType__Enum proto, SafeSocketHandle * safe_handle, MethodInfo * method));
DO_APP_FUNC(0x01BE7590, void, Socket_SocketDefaults, (Socket * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE7700, void *, Socket_Socket_internal, (Socket * __this, AddressFamily__Enum family, SocketType__Enum type, ProtocolType__Enum proto, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x01BE78A0, int32_t, Socket_get_Available, (Socket * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE7990, int32_t, Socket_Available_internal, (SafeSocketHandle * safeHandle, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x01BE7B60, int32_t, Socket_Available_internal_1, (void * socket, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x00614BA0, bool, Socket_get_IsBound, (Socket * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE7C10, EndPoint *, Socket_get_LocalEndPoint, (Socket * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE7D50, SocketAddress *, Socket_LocalEndPoint_internal, (SafeSocketHandle * safeHandle, int32_t family, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x01BE7F50, SocketAddress *, Socket_LocalEndPoint_internal_1, (void * socket, int32_t family, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x003FCB00, bool, Socket_get_Blocking, (Socket * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE8000, void, Socket_set_Blocking, (Socket * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01BE8100, void, Socket_Blocking_internal, (SafeSocketHandle * safeHandle, bool block, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x01BE82B0, void, Socket_Blocking_internal_1, (void * socket, bool block, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x00EEDBB0, bool, Socket_get_Connected, (Socket * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE8340, void, Socket_set_NoDelay, (Socket * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01BE8420, EndPoint *, Socket_get_RemoteEndPoint, (Socket * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE8560, SocketAddress *, Socket_RemoteEndPoint_internal, (SafeSocketHandle * safeHandle, int32_t family, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x01BE8760, SocketAddress *, Socket_RemoteEndPoint_internal_1, (void * socket, int32_t family, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x01BE8810, bool, Socket_Poll, (Socket * __this, int32_t microSeconds, SelectMode__Enum mode, MethodInfo * method));
DO_APP_FUNC(0x01BE89D0, bool, Socket_Poll_internal, (SafeSocketHandle * safeHandle, SelectMode__Enum mode, int32_t timeout, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x01BE8B70, bool, Socket_Poll_internal_1, (void * socket, SelectMode__Enum mode, int32_t timeout, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x01BE8B80, Socket *, Socket_Accept, (Socket * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE8DB0, void, Socket_Accept_1, (Socket * __this, Socket * acceptSocket, MethodInfo * method));
DO_APP_FUNC(0x01BE8F00, bool, Socket_AcceptAsync, (Socket * __this, SocketAsyncEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01BE9250, Socket *, Socket_EndAccept, (Socket * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01BE9350, Socket *, Socket_EndAccept_1, (Socket * __this, Byte__Array * * buffer, int32_t * bytesTransferred, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01BE9480, SafeSocketHandle *, Socket_Accept_internal, (SafeSocketHandle * safeHandle, int32_t * error, bool blocking, MethodInfo * method));
DO_APP_FUNC(0x01BE97D0, void *, Socket_Accept_internal_1, (void * sock, int32_t * error, bool blocking, MethodInfo * method));
DO_APP_FUNC(0x01BE9910, void, Socket_Bind, (Socket * __this, EndPoint * localEP, MethodInfo * method));
DO_APP_FUNC(0x01BE9AD0, void, Socket_Bind_internal, (SafeSocketHandle * safeHandle, SocketAddress * sa, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x01BE9C40, void, Socket_Bind_internal_1, (void * sock, SocketAddress * sa, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x01BE9C50, void, Socket_Listen, (Socket * __this, int32_t backlog, MethodInfo * method));
DO_APP_FUNC(0x01BE9D90, void, Socket_Listen_internal, (SafeSocketHandle * safeHandle, int32_t backlog, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x01BE9F40, void, Socket_Listen_internal_1, (void * sock, int32_t backlog, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x01BE9FC0, void, Socket_Connect, (Socket * __this, IPAddress * address, int32_t port, MethodInfo * method));
DO_APP_FUNC(0x01BEA130, void, Socket_Connect_1, (Socket * __this, EndPoint * remoteEP, MethodInfo * method));
DO_APP_FUNC(0x01BEA540, IAsyncResult *, Socket_BeginConnect, (Socket * __this, String * host, int32_t port, AsyncCallback * requestCallback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BEA720, IAsyncResult *, Socket_BeginConnect_1, (Socket * __this, IPAddress__Array * addresses, int32_t port, AsyncCallback * requestCallback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BEAA10, void, Socket_BeginMConnect, (SocketAsyncResult * sockares, MethodInfo * method));
DO_APP_FUNC(0x01BEAC50, void, Socket_BeginSConnect, (SocketAsyncResult * sockares, MethodInfo * method));
DO_APP_FUNC(0x01BEB480, void, Socket_EndConnect, (Socket * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01BEB580, void, Socket_Connect_internal, (SafeSocketHandle * safeHandle, SocketAddress * sa, int32_t * error, bool blocking, MethodInfo * method));
DO_APP_FUNC(0x01BEB6E0, void, Socket_Connect_internal_1, (void * sock, SocketAddress * sa, int32_t * error, bool blocking, MethodInfo * method));
DO_APP_FUNC(0x01BEB6F0, void, Socket_Disconnect, (Socket * __this, bool reuseSocket, MethodInfo * method));
DO_APP_FUNC(0x01BEB820, void, Socket_EndDisconnect, (Socket * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01BEB920, void, Socket_Disconnect_internal, (SafeSocketHandle * safeHandle, bool reuse, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x01BEBAC0, void, Socket_Disconnect_internal_1, (void * sock, bool reuse, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x01BEBB40, int32_t, Socket_Receive_2, (Socket * __this, Byte__Array * buffer, int32_t offset, int32_t size, SocketFlags__Enum socketFlags, SocketError__Enum * errorCode, MethodInfo * method));
DO_APP_FUNC(0x01BEBCB0, int32_t, Socket_Receive_3, (Socket * __this, IList_1_System_ArraySegment_1_ * buffers, SocketFlags__Enum socketFlags, SocketError__Enum * errorCode, MethodInfo * method));
DO_APP_FUNC(0x01BEC190, IAsyncResult *, Socket_BeginReceive_1, (Socket * __this, Byte__Array * buffer, int32_t offset, int32_t size, SocketFlags__Enum socketFlags, SocketError__Enum * errorCode, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BEC490, int32_t, Socket_EndReceive_1, (Socket * __this, IAsyncResult * asyncResult, SocketError__Enum * errorCode, MethodInfo * method));
DO_APP_FUNC(0x01BEC5C0, int32_t, Socket_Receive_internal, (SafeSocketHandle * safeHandle, Socket_WSABUF * bufarray, int32_t count, SocketFlags__Enum flags, int32_t * error, bool blocking, MethodInfo * method));
DO_APP_FUNC(0x01BEC7A0, int32_t, Socket_Receive_internal_1, (void * sock, Socket_WSABUF * bufarray, int32_t count, SocketFlags__Enum flags, int32_t * error, bool blocking, MethodInfo * method));
DO_APP_FUNC(0x01BEC860, int32_t, Socket_Receive_internal_2, (SafeSocketHandle * safeHandle, uint8_t * buffer, int32_t count, SocketFlags__Enum flags, int32_t * error, bool blocking, MethodInfo * method));
DO_APP_FUNC(0x01BECA80, int32_t, Socket_Receive_internal_3, (void * sock, uint8_t * buffer, int32_t count, SocketFlags__Enum flags, int32_t * error, bool blocking, MethodInfo * method));
DO_APP_FUNC(0x01BECB90, int32_t, Socket_ReceiveFrom, (Socket * __this, Byte__Array * buffer, int32_t offset, int32_t size, SocketFlags__Enum socketFlags, EndPoint * * remoteEP, SocketError__Enum * errorCode, MethodInfo * method));
DO_APP_FUNC(0x01BECD60, int32_t, Socket_EndReceiveFrom, (Socket * __this, IAsyncResult * asyncResult, EndPoint * * endPoint, MethodInfo * method));
DO_APP_FUNC(0x01BECEB0, int32_t, Socket_ReceiveFrom_internal, (SafeSocketHandle * safeHandle, uint8_t * buffer, int32_t count, SocketFlags__Enum flags, SocketAddress * * sockaddr, int32_t * error, bool blocking, MethodInfo * method));
DO_APP_FUNC(0x01BED050, int32_t, Socket_ReceiveFrom_internal_1, (void * sock, uint8_t * buffer, int32_t count, SocketFlags__Enum flags, SocketAddress * * sockaddr, int32_t * error, bool blocking, MethodInfo * method));
DO_APP_FUNC(0x01BED060, int32_t, Socket_Send_2, (Socket * __this, Byte__Array * buffer, int32_t offset, int32_t size, SocketFlags__Enum socketFlags, SocketError__Enum * errorCode, MethodInfo * method));
DO_APP_FUNC(0x01BED200, int32_t, Socket_Send_3, (Socket * __this, IList_1_System_ArraySegment_1_ * buffers, SocketFlags__Enum socketFlags, SocketError__Enum * errorCode, MethodInfo * method));
DO_APP_FUNC(0x01BED710, IAsyncResult *, Socket_BeginSend_2, (Socket * __this, Byte__Array * buffer, int32_t offset, int32_t size, SocketFlags__Enum socketFlags, SocketError__Enum * errorCode, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BEDB30, void, Socket_BeginSendCallback, (SocketAsyncResult * sockares, int32_t sent_so_far, MethodInfo * method));
DO_APP_FUNC(0x01BEDFC0, IAsyncResult *, Socket_BeginSend_3, (Socket * __this, IList_1_System_ArraySegment_1_ * buffers, SocketFlags__Enum socketFlags, SocketError__Enum * errorCode, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BEE2D0, int32_t, Socket_EndSend_1, (Socket * __this, IAsyncResult * asyncResult, SocketError__Enum * errorCode, MethodInfo * method));
DO_APP_FUNC(0x01BEE400, int32_t, Socket_Send_internal, (SafeSocketHandle * safeHandle, Socket_WSABUF * bufarray, int32_t count, SocketFlags__Enum flags, int32_t * error, bool blocking, MethodInfo * method));
DO_APP_FUNC(0x01BEE5E0, int32_t, Socket_Send_internal_1, (void * sock, Socket_WSABUF * bufarray, int32_t count, SocketFlags__Enum flags, int32_t * error, bool blocking, MethodInfo * method));
DO_APP_FUNC(0x01BEE6A0, int32_t, Socket_Send_internal_2, (SafeSocketHandle * safeHandle, uint8_t * buffer, int32_t count, SocketFlags__Enum flags, int32_t * error, bool blocking, MethodInfo * method));
DO_APP_FUNC(0x01BEE870, int32_t, Socket_Send_internal_3, (void * sock, uint8_t * buffer, int32_t count, SocketFlags__Enum flags, int32_t * error, bool blocking, MethodInfo * method));
DO_APP_FUNC(0x01BEE930, int32_t, Socket_EndSendTo, (Socket * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01BEEA30, Object *, Socket_GetSocketOption, (Socket * __this, SocketOptionLevel__Enum optionLevel, SocketOptionName__Enum optionName, MethodInfo * method));
DO_APP_FUNC(0x01BEEBE0, void, Socket_GetSocketOption_obj_internal, (SafeSocketHandle * safeHandle, SocketOptionLevel__Enum level, SocketOptionName__Enum name, Object * * obj_val, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x01BEED70, void, Socket_GetSocketOption_obj_internal_1, (void * socket, SocketOptionLevel__Enum level, SocketOptionName__Enum name, Object * * obj_val, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x01BEED80, void, Socket_SetSocketOption_1, (Socket * __this, SocketOptionLevel__Enum optionLevel, SocketOptionName__Enum optionName, int32_t optionValue, MethodInfo * method));
DO_APP_FUNC(0x01BEEEE0, void, Socket_SetSocketOption_internal, (SafeSocketHandle * safeHandle, SocketOptionLevel__Enum level, SocketOptionName__Enum name, Object * obj_val, Byte__Array * byte_val, int32_t int_val, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x01BEF090, void, Socket_SetSocketOption_internal_1, (void * socket, SocketOptionLevel__Enum level, SocketOptionName__Enum name, Object * obj_val, Byte__Array * byte_val, int32_t int_val, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x01BEF0A0, int32_t, Socket_IOControl_1, (Socket * __this, int32_t ioControlCode, Byte__Array * optionInValue, Byte__Array * optionOutValue, MethodInfo * method));
DO_APP_FUNC(0x01BEF240, int32_t, Socket_IOControl_internal, (SafeSocketHandle * safeHandle, int32_t ioctl_code, Byte__Array * input, Byte__Array * output, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x01BEF490, int32_t, Socket_IOControl_internal_1, (void * sock, int32_t ioctl_code, Byte__Array * input, Byte__Array * output, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x01BEF5C0, void, Socket_Close, (Socket * __this, MethodInfo * method));
DO_APP_FUNC(0x01BEF5D0, void, Socket_Close_1, (Socket * __this, int32_t timeout, MethodInfo * method));
DO_APP_FUNC(0x01BEF5E0, void, Socket_Close_internal, (void * socket, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x01BEF6A0, void, Socket_Shutdown, (Socket * __this, SocketShutdown__Enum how, MethodInfo * method));
DO_APP_FUNC(0x01BEF7D0, void, Socket_Shutdown_internal, (SafeSocketHandle * safeHandle, SocketShutdown__Enum how, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x01BEF980, void, Socket_Shutdown_internal_1, (void * socket, SocketShutdown__Enum how, int32_t * error, MethodInfo * method));
DO_APP_FUNC(0x01BEFA00, void, Socket_Dispose_1, (Socket * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01BEFA70, void, Socket_Linger, (Socket * __this, void * handle, MethodInfo * method));
DO_APP_FUNC(0x01BEFDB0, void, Socket_ThrowIfDisposedAndClosed, (Socket * __this, MethodInfo * method));
DO_APP_FUNC(0x01BEFE90, void, Socket_ThrowIfBufferNull, (Socket * __this, Byte__Array * buffer, MethodInfo * method));
DO_APP_FUNC(0x01BEFF40, void, Socket_ThrowIfBufferOutOfRange, (Socket * __this, Byte__Array * buffer, int32_t offset, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x01BF00E0, void, Socket_ThrowIfUdp, (Socket * __this, MethodInfo * method));
DO_APP_FUNC(0x01BF0190, SocketAsyncResult *, Socket_ValidateEndIAsyncResult, (Socket * __this, IAsyncResult * ares, String * methodName, String * argName, MethodInfo * method));
DO_APP_FUNC(0x01BF02F0, void, Socket_QueueIOSelectorJob, (Socket * __this, SemaphoreSlim * sem, void * handle, IOSelectorJob * job, MethodInfo * method));
DO_APP_FUNC(0x01BF05D0, void, Socket_InitSocketAsyncEventArgs, (Socket * __this, SocketAsyncEventArgs * e, AsyncCallback * callback, Object * state, SocketOperation__Enum operation, MethodInfo * method));
DO_APP_FUNC(0x01BF08D0, SocketAsyncOperation__Enum, Socket_SocketOperationToSocketAsyncOperation, (Socket * __this, SocketOperation__Enum op, MethodInfo * method));
DO_APP_FUNC(0x01BF0A60, IPEndPoint *, Socket_RemapIPEndPoint, (Socket * __this, IPEndPoint * input, MethodInfo * method));
DO_APP_FUNC(0x01BF0D10, void, Socket_cancel_blocking_socket_operation, (Thread * thread, MethodInfo * method));
DO_APP_FUNC(0x01BF0D30, int32_t, Socket_get_FamilyHint, (MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, Socket_IsProtocolSupported_internal, (NetworkInterfaceComponent__Enum networkInterface, MethodInfo * method));
DO_APP_FUNC(0x01BF0E10, bool, Socket_IsProtocolSupported, (NetworkInterfaceComponent__Enum networkInterface, MethodInfo * method));
DO_APP_FUNC(0x01BF0EA0, void, Socket__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0209ED40, void, Socket_c__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Socket_c__ctor, (Socket_c * __this, MethodInfo * method));
DO_APP_FUNC(0x0209EE80, void, Socket_c__BeginSend_b__241_0, (Socket_c * __this, IOAsyncResult * s, MethodInfo * method));
DO_APP_FUNC(0x0209EF50, void, Socket_c___cctor_b__309_0, (Socket_c * __this, IAsyncResult * ares, MethodInfo * method));
DO_APP_FUNC(0x0209F3C0, void, Socket_c___cctor_b__309_1, (Socket_c * __this, IOAsyncResult * ares, MethodInfo * method));
DO_APP_FUNC(0x0209F500, void, Socket_c___cctor_b__309_2, (Socket_c * __this, IOAsyncResult * ares, MethodInfo * method));
DO_APP_FUNC(0x0209F790, void, Socket_c___cctor_b__309_3, (Socket_c * __this, IAsyncResult * ares, MethodInfo * method));
DO_APP_FUNC(0x0209F9F0, void, Socket_c___cctor_b__309_4, (Socket_c * __this, IOAsyncResult * ares, MethodInfo * method));
DO_APP_FUNC(0x0209FEB0, void, Socket_c___cctor_b__309_5, (Socket_c * __this, IAsyncResult * ares, MethodInfo * method));
DO_APP_FUNC(0x020A01E0, void, Socket_c___cctor_b__309_6, (Socket_c * __this, IOAsyncResult * ares, MethodInfo * method));
DO_APP_FUNC(0x020A03F0, void, Socket_c___cctor_b__309_7, (Socket_c * __this, IAsyncResult * ares, MethodInfo * method));
DO_APP_FUNC(0x020A0650, void, Socket_c___cctor_b__309_8, (Socket_c * __this, IOAsyncResult * ares, MethodInfo * method));
DO_APP_FUNC(0x020A0830, void, Socket_c___cctor_b__309_9, (Socket_c * __this, IOAsyncResult * ares, MethodInfo * method));
DO_APP_FUNC(0x020A09E0, void, Socket_c___cctor_b__309_10, (Socket_c * __this, IAsyncResult * ares, MethodInfo * method));
DO_APP_FUNC(0x020A0D50, void, Socket_c___cctor_b__309_11, (Socket_c * __this, IOAsyncResult * ares, MethodInfo * method));
DO_APP_FUNC(0x020A0F80, void, Socket_c___cctor_b__309_12, (Socket_c * __this, IAsyncResult * ares, MethodInfo * method));
DO_APP_FUNC(0x020A11E0, void, Socket_c___cctor_b__309_13, (Socket_c * __this, IOAsyncResult * ares, MethodInfo * method));
DO_APP_FUNC(0x020A1300, void, Socket_c___cctor_b__309_14, (Socket_c * __this, IAsyncResult * ares, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Socket_c_DisplayClass242_0__ctor, (Socket_c_DisplayClass242_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x020A1630, void, Socket_c_DisplayClass242_0__BeginSendCallback_b__0, (Socket_c_DisplayClass242_0 * __this, IOAsyncResult * s, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Socket_c_DisplayClass298_0__ctor, (Socket_c_DisplayClass298_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x020A1710, void, Socket_c_DisplayClass298_0__QueueIOSelectorJob_b__0, (Socket_c_DisplayClass298_0 * __this, Task * t, MethodInfo * method));
DO_APP_FUNC(0x020A2BC0, void, TcpClient__ctor, (TcpClient * __this, MethodInfo * method));
DO_APP_FUNC(0x020A2C70, void, TcpClient__ctor_1, (TcpClient * __this, AddressFamily__Enum family, MethodInfo * method));
DO_APP_FUNC(0x020A2F10, void, TcpClient__ctor_2, (TcpClient * __this, String * hostname, int32_t port, MethodInfo * method));
DO_APP_FUNC(0x020A3130, void, TcpClient__ctor_3, (TcpClient * __this, Socket * acceptedSocket, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Socket *, TcpClient_get_Client, (TcpClient * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, TcpClient_set_Client, (TcpClient * __this, Socket * value, MethodInfo * method));
DO_APP_FUNC(0x020A31E0, void, TcpClient_Connect, (TcpClient * __this, String * hostname, int32_t port, MethodInfo * method));
DO_APP_FUNC(0x020A3A60, void, TcpClient_Connect_1, (TcpClient * __this, IPEndPoint * remoteEP, MethodInfo * method));
DO_APP_FUNC(0x020A3BD0, IAsyncResult *, TcpClient_BeginConnect, (TcpClient * __this, String * host, int32_t port, AsyncCallback * requestCallback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x020A3CC0, void, TcpClient_EndConnect, (TcpClient * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x020A3D80, NetworkStream *, TcpClient_GetStream, (TcpClient * __this, MethodInfo * method));
DO_APP_FUNC(0x020A3FE0, void, TcpClient_Close, (TcpClient * __this, MethodInfo * method));
DO_APP_FUNC(0x020A4080, void, TcpClient_Dispose, (TcpClient * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x020A4270, void, TcpClient_Dispose_1, (TcpClient * __this, MethodInfo * method));
DO_APP_FUNC(0x020A4290, void, TcpClient_Finalize, (TcpClient * __this, MethodInfo * method));
DO_APP_FUNC(0x020A4310, void, TcpClient_initialize, (TcpClient * __this, MethodInfo * method));
DO_APP_FUNC(0x020A4480, void, TcpListener__ctor, (TcpListener * __this, IPEndPoint * localEP, MethodInfo * method));
DO_APP_FUNC(0x020A4680, void, TcpListener__ctor_1, (TcpListener * __this, IPAddress * localaddr, int32_t port, MethodInfo * method));
DO_APP_FUNC(0x020A49C0, TcpListener *, TcpListener_Create, (int32_t port, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Socket *, TcpListener_get_Server, (TcpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x020A4C10, void, TcpListener_Start, (TcpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x020A4C20, void, TcpListener_Start_1, (TcpListener * __this, int32_t backlog, MethodInfo * method));
DO_APP_FUNC(0x020A4DD0, void, TcpListener_Stop, (TcpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x020A5080, bool, TcpListener_Pending, (TcpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x020A5160, TcpClient *, TcpListener_AcceptTcpClient, (TcpListener * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE38C0, void, SafeSocketHandle__ctor, (SafeSocketHandle * __this, void * preexistingHandle, bool ownsHandle, MethodInfo * method));
DO_APP_FUNC(0x01BE3A80, bool, SafeSocketHandle_ReleaseHandle, (SafeSocketHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE4180, void, SafeSocketHandle_RegisterForBlockingSyscall, (SafeSocketHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE45E0, void, SafeSocketHandle_UnRegisterForBlockingSyscall, (SafeSocketHandle * __this, MethodInfo * method));
DO_APP_FUNC(0x01BE4800, void, SafeSocketHandle__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FB990, Socket *, SocketAsyncEventArgs_get_AcceptSocket, (SocketAsyncEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9A0, void, SocketAsyncEventArgs_set_AcceptSocket, (SocketAsyncEventArgs * __this, Socket * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, IList_1_System_ArraySegment_1_ *, SocketAsyncEventArgs_get_BufferList, (SocketAsyncEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x004E57B0, void, SocketAsyncEventArgs_set_BytesTransferred, (SocketAsyncEventArgs * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0057AAC0, int32_t, SocketAsyncEventArgs_get_Count, (SocketAsyncEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x008F7CD0, void, SocketAsyncEventArgs_set_LastOperation, (SocketAsyncEventArgs * __this, SocketAsyncOperation__Enum value, MethodInfo * method));
DO_APP_FUNC(0x00843E80, void, SocketAsyncEventArgs_set_SendPacketsSendSize, (SocketAsyncEventArgs * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x002FD490, SocketError__Enum, SocketAsyncEventArgs_get_SocketError, (SocketAsyncEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD4A0, void, SocketAsyncEventArgs_set_SocketError, (SocketAsyncEventArgs * __this, SocketError__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, Object *, SocketAsyncEventArgs_get_UserToken, (SocketAsyncEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB70, void, SocketAsyncEventArgs_set_UserToken, (SocketAsyncEventArgs * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x020A1770, void, SocketAsyncEventArgs_add_Completed, (SocketAsyncEventArgs * __this, EventHandler_1_System_Net_Sockets_SocketAsyncEventArgs_ * value, MethodInfo * method));
DO_APP_FUNC(0x020A1860, void, SocketAsyncEventArgs_remove_Completed, (SocketAsyncEventArgs * __this, EventHandler_1_System_Net_Sockets_SocketAsyncEventArgs_ * value, MethodInfo * method));
DO_APP_FUNC(0x020A1950, void, SocketAsyncEventArgs__ctor, (SocketAsyncEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x020A1AC0, void, SocketAsyncEventArgs_Finalize, (SocketAsyncEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x020A1AE0, void, SocketAsyncEventArgs_Dispose, (SocketAsyncEventArgs * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x020A1AF0, void, SocketAsyncEventArgs_Dispose_1, (SocketAsyncEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x020A1BA0, void, SocketAsyncEventArgs_SetLastOperation, (SocketAsyncEventArgs * __this, SocketAsyncOperation__Enum op, MethodInfo * method));
DO_APP_FUNC(0x020A1CA0, void, SocketAsyncEventArgs_Complete, (SocketAsyncEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x020A1CC0, void, SocketAsyncEventArgs_OnCompleted, (SocketAsyncEventArgs * __this, SocketAsyncEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x020A1D60, void *, SocketAsyncResult_get_Handle, (SocketAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SocketAsyncResult__ctor, (SocketAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x020A1E00, void, SocketAsyncResult_Init, (SocketAsyncResult * __this, Socket * socket, AsyncCallback * callback, Object * state, SocketOperation__Enum operation, MethodInfo * method));
DO_APP_FUNC(0x020A1E90, void, SocketAsyncResult__ctor_1, (SocketAsyncResult * __this, Socket * socket, AsyncCallback * callback, Object * state, SocketOperation__Enum operation, MethodInfo * method));
DO_APP_FUNC(0x020A1EB0, SocketError__Enum, SocketAsyncResult_get_ErrorCode, (SocketAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x020A1F90, void, SocketAsyncResult_CheckIfThrowDelayedException, (SocketAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x020A20B0, void, SocketAsyncResult_CompleteDisposed, (SocketAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x020A20C0, void, SocketAsyncResult_Complete, (SocketAsyncResult * __this, MethodInfo * method));
DO_APP_FUNC(0x020A2480, void, SocketAsyncResult_Complete_1, (SocketAsyncResult * __this, bool synch, MethodInfo * method));
DO_APP_FUNC(0x020A2490, void, SocketAsyncResult_Complete_2, (SocketAsyncResult * __this, int32_t total, MethodInfo * method));
DO_APP_FUNC(0x020A24A0, void, SocketAsyncResult_Complete_3, (SocketAsyncResult * __this, Exception * e, bool synch, MethodInfo * method));
DO_APP_FUNC(0x020A24B0, void, SocketAsyncResult_Complete_4, (SocketAsyncResult * __this, Exception * e, MethodInfo * method));
DO_APP_FUNC(0x020A24C0, void, SocketAsyncResult_Complete_5, (SocketAsyncResult * __this, Socket * s, MethodInfo * method));
DO_APP_FUNC(0x020A24D0, void, SocketAsyncResult_Complete_6, (SocketAsyncResult * __this, Socket * s, int32_t total, MethodInfo * method));
DO_APP_FUNC(0x020A24F0, void, SocketAsyncResult_c__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SocketAsyncResult_c__ctor, (SocketAsyncResult_c * __this, MethodInfo * method));
DO_APP_FUNC(0x020A2630, void, SocketAsyncResult_c__Complete_b__27_0, (SocketAsyncResult_c * __this, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01BD0C70, void, AuthenticatedStream__ctor, (AuthenticatedStream * __this, Stream * innerStream, bool leaveInnerStreamOpen, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, Stream *, AuthenticatedStream_get_InnerStream, (AuthenticatedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD0E40, void, AuthenticatedStream_Dispose, (AuthenticatedStream * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, RemoteCertificateValidationCallback__ctor, (RemoteCertificateValidationCallback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01BD1590, bool, RemoteCertificateValidationCallback_Invoke, (RemoteCertificateValidationCallback * __this, Object * sender, X509Certificate_1 * certificate, X509Chain * chain, SslPolicyErrors__Enum sslPolicyErrors, MethodInfo * method));
DO_APP_FUNC(0x01BD1BA0, IAsyncResult *, RemoteCertificateValidationCallback_BeginInvoke, (RemoteCertificateValidationCallback * __this, Object * sender, X509Certificate_1 * certificate, X509Chain * chain, SslPolicyErrors__Enum sslPolicyErrors, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x008A1BF0, bool, RemoteCertificateValidationCallback_EndInvoke, (RemoteCertificateValidationCallback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, LocalCertSelectionCallback__ctor, (LocalCertSelectionCallback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01BD0F10, X509Certificate_1 *, LocalCertSelectionCallback_Invoke, (LocalCertSelectionCallback * __this, String * targetHost, X509CertificateCollection_1 * localCertificates, X509Certificate_1 * remoteCertificate, String__Array * acceptableIssuers, MethodInfo * method));
DO_APP_FUNC(0x01BD1540, IAsyncResult *, LocalCertSelectionCallback_BeginInvoke, (LocalCertSelectionCallback * __this, String * targetHost, X509CertificateCollection_1 * localCertificates, X509Certificate_1 * remoteCertificate, String__Array * acceptableIssuers, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, X509Certificate_1 *, LocalCertSelectionCallback_EndInvoke, (LocalCertSelectionCallback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01BD1C90, IMonoSslStream *, SslStream_get_Impl, (SslStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD1D40, void, SslStream__ctor, (SslStream * __this, Stream * innerStream, bool leaveInnerStreamOpen, MonoTlsProvider * provider, MonoTlsSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x01BD1DC0, IMonoSslStream *, SslStream_CreateMonoSslStream, (Stream * innerStream, bool leaveInnerStreamOpen, MonoTlsProvider * provider, MonoTlsSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x01BD1F50, void, SslStream_AuthenticateAsServer, (SslStream * __this, X509Certificate_1 * serverCertificate, bool clientCertificateRequired, SslProtocols__Enum enabledSslProtocols, bool checkCertificateRevocation, MethodInfo * method));
DO_APP_FUNC(0x01BD20A0, bool, SslStream_get_IsAuthenticated, (SslStream * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, SslStream_get_CanSeek, (SslStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD2140, bool, SslStream_get_CanRead, (SslStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD21E0, bool, SslStream_get_CanTimeout, (SslStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD2210, bool, SslStream_get_CanWrite, (SslStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD22B0, int32_t, SslStream_get_ReadTimeout, (SslStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD2350, void, SslStream_set_ReadTimeout, (SslStream * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01BD2400, int32_t, SslStream_get_WriteTimeout, (SslStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD24A0, void, SslStream_set_WriteTimeout, (SslStream * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01BD2550, int64_t, SslStream_get_Length, (SslStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD25F0, int64_t, SslStream_get_Position, (SslStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD2690, void, SslStream_set_Position, (SslStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01BD2700, void, SslStream_SetLength, (SslStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01BD27B0, int64_t, SslStream_Seek, (SslStream * __this, int64_t offset, SeekOrigin__Enum origin, MethodInfo * method));
DO_APP_FUNC(0x01BD2820, Task *, SslStream_FlushAsync, (SslStream * __this, CancellationToken cancellationToken, MethodInfo * method));
DO_APP_FUNC(0x01706BF0, void, SslStream_Flush, (SslStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD2850, void, SslStream_CheckDisposed, (SslStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01BD2900, void, SslStream_Dispose, (SslStream * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01BD2A40, int32_t, SslStream_Read, (SslStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01BD2B10, void, SslStream_Write, (SslStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01BD2BE0, IAsyncResult *, SslStream_BeginRead, (SslStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * asyncCallback, Object * asyncState, MethodInfo * method));
DO_APP_FUNC(0x01BD2CC0, int32_t, SslStream_EndRead, (SslStream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01BD2D70, IAsyncResult *, SslStream_BeginWrite, (SslStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * asyncCallback, Object * asyncState, MethodInfo * method));
DO_APP_FUNC(0x01BD2E50, void, SslStream_EndWrite, (SslStream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01E765D0, bool, IPGlobalProperties_get_PlatformNeedsLibCWorkaround, (MethodInfo * method));
DO_APP_FUNC(0x01E76650, IPGlobalProperties *, IPGlobalProperties_GetIPGlobalProperties, (MethodInfo * method));
DO_APP_FUNC(0x01E76A10, IPGlobalProperties *, IPGlobalProperties_InternalGetIPGlobalProperties, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, IPGlobalProperties__ctor, (IPGlobalProperties * __this, MethodInfo * method));
DO_APP_FUNC(0x01BC9610, void, NetworkInformationException__ctor, (NetworkInformationException * __this, MethodInfo * method));
DO_APP_FUNC(0x01BC9710, void, NetworkInformationException__ctor_1, (NetworkInformationException * __this, SerializationInfo * serializationInfo, StreamingContext streamingContext, MethodInfo * method));
DO_APP_FUNC(0x00989BF0, int32_t, NetworkInformationException_get_ErrorCode, (NetworkInformationException * __this, MethodInfo * method));
DO_APP_FUNC(0x01E762B0, int32_t, CommonUnixIPGlobalProperties_getdomainname, (Byte__Array * name, int32_t len, MethodInfo * method));
DO_APP_FUNC(0x01E76360, String *, CommonUnixIPGlobalProperties_get_DomainName, (CommonUnixIPGlobalProperties * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CommonUnixIPGlobalProperties__ctor, (CommonUnixIPGlobalProperties * __this, MethodInfo * method));
DO_APP_FUNC(0x01BC97D0, IPEndPoint__Array *, UnixIPGlobalProperties_GetActiveTcpListeners, (UnixIPGlobalProperties * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, UnixIPGlobalProperties__ctor, (UnixIPGlobalProperties * __this, MethodInfo * method));
DO_APP_FUNC(0x01BC9820, String *, UnixNoLibCIPGlobalProperties_get_DomainName, (UnixNoLibCIPGlobalProperties * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, UnixNoLibCIPGlobalProperties__ctor, (UnixNoLibCIPGlobalProperties * __this, MethodInfo * method));
DO_APP_FUNC(0x01E76A20, void, MibIPGlobalProperties__ctor, (MibIPGlobalProperties * __this, String * procDir, MethodInfo * method));
DO_APP_FUNC(0x01E76B50, Exception *, MibIPGlobalProperties_CreateException, (MibIPGlobalProperties * __this, String * file, String * msg, MethodInfo * method));
DO_APP_FUNC(0x01E76D20, IPEndPoint__Array *, MibIPGlobalProperties_GetLocalAddresses, (MibIPGlobalProperties * __this, List_1_System_String__1 * list, MethodInfo * method));
DO_APP_FUNC(0x01E76EA0, IPEndPoint *, MibIPGlobalProperties_ToEndpoint, (MibIPGlobalProperties * __this, String * s, MethodInfo * method));
DO_APP_FUNC(0x01E773E0, void, MibIPGlobalProperties_GetRows, (MibIPGlobalProperties * __this, String * file, List_1_System_String__1 * list, MethodInfo * method));
DO_APP_FUNC(0x01E77710, IPEndPoint__Array *, MibIPGlobalProperties_GetActiveTcpListeners, (MibIPGlobalProperties * __this, MethodInfo * method));
DO_APP_FUNC(0x01E77890, void, MibIPGlobalProperties__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01BC98A0, void, Win32IPGlobalProperties_FillTcpTable, (Win32IPGlobalProperties * __this, List_1_System_Net_NetworkInformation_Win32IPGlobalProperties_Win32_MIB_TCPROW_ * * tab4, List_1_System_Net_NetworkInformation_Win32IPGlobalProperties_Win32_MIB_TCP6ROW_ * * tab6, MethodInfo * method));
DO_APP_FUNC(0x01BCA1F0, bool, Win32IPGlobalProperties_IsListenerState, (Win32IPGlobalProperties * __this, TcpState__Enum state, MethodInfo * method));
DO_APP_FUNC(0x01BCA210, IPEndPoint__Array *, Win32IPGlobalProperties_GetActiveTcpListeners, (Win32IPGlobalProperties * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCA550, String *, Win32IPGlobalProperties_get_DomainName, (Win32IPGlobalProperties * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCA600, int32_t, Win32IPGlobalProperties_GetTcpTable, (Byte__Array * pTcpTable, int32_t * pdwSize, bool bOrder, MethodInfo * method));
DO_APP_FUNC(0x01BCA6D0, int32_t, Win32IPGlobalProperties_GetTcp6Table, (Byte__Array * TcpTable, int32_t * SizePointer, bool Order, MethodInfo * method));
DO_APP_FUNC(0x01BCA7A0, uint16_t, Win32IPGlobalProperties_ntohs, (uint16_t netshort, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Win32IPGlobalProperties__ctor, (Win32IPGlobalProperties * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCAA80, IPEndPoint *, Win32IPGlobalProperties_Win32_MIB_TCPROW_get_LocalEndPoint, (Win32IPGlobalProperties_Win32_MIB_TCPROW * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Win32IPGlobalProperties_Win32_MIB_TCPROW__ctor, (Win32IPGlobalProperties_Win32_MIB_TCPROW * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCA840, IPEndPoint *, Win32IPGlobalProperties_Win32_MIB_TCP6ROW_get_LocalEndPoint, (Win32IPGlobalProperties_Win32_MIB_TCP6ROW * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Win32IPGlobalProperties_Win32_MIB_TCP6ROW__ctor, (Win32IPGlobalProperties_Win32_MIB_TCP6ROW * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCABE0, int32_t, Win32NetworkInterface_GetNetworkParams, (void * ptr, int32_t * size, MethodInfo * method));
DO_APP_FUNC(0x01BCACE0, Win32_FIXED_INFO, Win32NetworkInterface_get_FixedInfo, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Win32NetworkInterface__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02018EF0, IWebProxy *, DefaultProxySectionInternal_GetDefaultProxy_UsingOldMonoCode, (MethodInfo * method));
DO_APP_FUNC(0x02018EF0, IWebProxy *, DefaultProxySectionInternal_GetSystemWebProxy, (MethodInfo * method));
DO_APP_FUNC(0x02018F00, Object *, DefaultProxySectionInternal_get_ClassSyncObject, (MethodInfo * method));
DO_APP_FUNC(0x02019070, DefaultProxySectionInternal *, DefaultProxySectionInternal_GetSection, (MethodInfo * method));
DO_APP_FUNC(0x002FA280, IWebProxy *, DefaultProxySectionInternal_get_WebProxy, (DefaultProxySectionInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DefaultProxySectionInternal__ctor, (DefaultProxySectionInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98AE0, SettingsSectionInternal *, SettingsSectionInternal_get_Section, (MethodInfo * method));
DO_APP_FUNC(0x0052A280, bool, SettingsSectionInternal_get_UseNagleAlgorithm, (SettingsSectionInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x00533150, void, SettingsSectionInternal_set_UseNagleAlgorithm, (SettingsSectionInternal * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00533160, bool, SettingsSectionInternal_get_Expect100Continue, (SettingsSectionInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x00533170, void, SettingsSectionInternal_set_Expect100Continue, (SettingsSectionInternal * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00F43310, bool, SettingsSectionInternal_get_CheckCertificateName, (SettingsSectionInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98B80, void, SettingsSectionInternal_set_CheckCertificateName, (SettingsSectionInternal * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x0052A010, int32_t, SettingsSectionInternal_get_DnsRefreshTimeout, (SettingsSectionInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A020, void, SettingsSectionInternal_set_DnsRefreshTimeout, (SettingsSectionInternal * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0052A030, bool, SettingsSectionInternal_get_EnableDnsRoundRobin, (SettingsSectionInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A040, void, SettingsSectionInternal_set_EnableDnsRoundRobin, (SettingsSectionInternal * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00DF3DF0, bool, SettingsSectionInternal_get_CheckCertificateRevocationList, (SettingsSectionInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x00DF3E00, void, SettingsSectionInternal_set_CheckCertificateRevocationList, (SettingsSectionInternal * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00529E80, EncryptionPolicy__Enum, SettingsSectionInternal_get_EncryptionPolicy, (SettingsSectionInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x00529E90, void, SettingsSectionInternal_set_EncryptionPolicy, (SettingsSectionInternal * __this, EncryptionPolicy__Enum value, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, SettingsSectionInternal_get_Ipv6Enabled, (SettingsSectionInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98B90, void, SettingsSectionInternal__ctor, (SettingsSectionInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98BA0, void, SettingsSectionInternal__cctor, (MethodInfo * method));
DO_APP_FUNC(0x020156D0, void, RequestCache__cctor, (MethodInfo * method));
DO_APP_FUNC(0x020157B0, RequestCacheBinding *, RequestCacheManager_GetBinding, (String * internedScheme, MethodInfo * method));
DO_APP_FUNC(0x02015AA0, void, RequestCacheManager_SetBinding, (String * uriScheme, RequestCacheBinding * binding, MethodInfo * method));
DO_APP_FUNC(0x02015DD0, void, RequestCacheManager_LoadConfigSettings, (MethodInfo * method));
DO_APP_FUNC(0x02016070, void, RequestCacheManager__cctor, (MethodInfo * method));
DO_APP_FUNC(0x020164C0, Object *, RequestCacheValidator_CreateValidator, (RequestCacheValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x00B80D80, void, RequestCachingSectionInternal__ctor, (RequestCachingSectionInternal * __this, MethodInfo * method));
DO_APP_FUNC(0x00522850, void, RequestCacheBinding__ctor, (RequestCacheBinding * __this, RequestCache * requestCache, RequestCacheValidator * cacheValidator, RequestCachePolicy * policy, MethodInfo * method));
DO_APP_FUNC(0x002FA280, RequestCache *, RequestCacheBinding_get_Cache, (RequestCacheBinding * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, RequestCacheValidator *, RequestCacheBinding_get_Validator, (RequestCacheBinding * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, RequestCachePolicy *, RequestCacheBinding_get_Policy, (RequestCacheBinding * __this, MethodInfo * method));
DO_APP_FUNC(0x020162E0, void, RequestCachePolicy__ctor, (RequestCachePolicy * __this, RequestCacheLevel__Enum level, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, RequestCacheLevel__Enum, RequestCachePolicy_get_Level, (RequestCachePolicy * __this, MethodInfo * method));
DO_APP_FUNC(0x020163A0, String *, RequestCachePolicy_ToString, (RequestCachePolicy * __this, MethodInfo * method));
DO_APP_FUNC(0x02016470, void, RequestCacheProtocol__ctor, (RequestCacheProtocol * __this, Object * arg1, Object * arg2, MethodInfo * method));
DO_APP_FUNC(0x001EF440, bool, BitVector32_get_Item, (BitVector32__Boxed * __this, int32_t bit, MethodInfo * method));
DO_APP_FUNC(0x001EF460, void, BitVector32_set_Item, (BitVector32__Boxed * __this, int32_t bit, bool value, MethodInfo * method));
DO_APP_FUNC(0x024925D0, int32_t, BitVector32_CreateMask, (MethodInfo * method));
DO_APP_FUNC(0x02492640, int32_t, BitVector32_CreateMask_1, (int32_t previous, MethodInfo * method));
DO_APP_FUNC(0x001EF480, bool, BitVector32_Equals, (BitVector32__Boxed * __this, Object * o, MethodInfo * method));
DO_APP_FUNC(0x001EF550, int32_t, BitVector32_GetHashCode, (BitVector32__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x02492720, String *, BitVector32_ToString, (BitVector32 value, MethodInfo * method));
DO_APP_FUNC(0x001EF5F0, String *, BitVector32_ToString_1, (BitVector32__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x024928E0, void, CaseSensitiveStringDictionary__ctor, (CaseSensitiveStringDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x024928F0, String *, CaseSensitiveStringDictionary_get_Item, (CaseSensitiveStringDictionary * __this, String * key, MethodInfo * method));
DO_APP_FUNC(0x024929F0, void, CaseSensitiveStringDictionary_set_Item, (CaseSensitiveStringDictionary * __this, String * key, String * value, MethodInfo * method));
DO_APP_FUNC(0x02492AE0, void, CaseSensitiveStringDictionary_Add, (CaseSensitiveStringDictionary * __this, String * key, String * value, MethodInfo * method));
DO_APP_FUNC(0x02492BD0, void, CaseSensitiveStringDictionary_Remove, (CaseSensitiveStringDictionary * __this, String * key, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, HybridDictionary__ctor, (HybridDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A040, void, HybridDictionary__ctor_1, (HybridDictionary * __this, bool caseInsensitive, MethodInfo * method));
DO_APP_FUNC(0x02493270, Object *, HybridDictionary_get_Item, (HybridDictionary * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x02493390, void, HybridDictionary_set_Item, (HybridDictionary * __this, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02493590, ListDictionary *, HybridDictionary_get_List, (HybridDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x02493710, void, HybridDictionary_ChangeOver, (HybridDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x02493B50, int32_t, HybridDictionary_get_Count, (HybridDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x02493B80, ICollection *, HybridDictionary_get_Keys, (HybridDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, HybridDictionary_get_IsReadOnly, (HybridDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, HybridDictionary_get_IsFixedSize, (HybridDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, HybridDictionary_get_IsSynchronized, (HybridDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, Object *, HybridDictionary_get_SyncRoot, (HybridDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x02493D20, ICollection *, HybridDictionary_get_Values, (HybridDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x02493EC0, void, HybridDictionary_Add, (HybridDictionary * __this, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x024940C0, void, HybridDictionary_Clear, (HybridDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x02494110, bool, HybridDictionary_Contains, (HybridDictionary * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x02494340, void, HybridDictionary_CopyTo, (HybridDictionary * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x024943B0, IDictionaryEnumerator *, HybridDictionary_GetEnumerator, (HybridDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x02494570, IEnumerator *, HybridDictionary_System_Collections_IEnumerable_GetEnumerator, (HybridDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x02494730, void, HybridDictionary_Remove, (HybridDictionary * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ListDictionary__ctor, (ListDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, ListDictionary__ctor_1, (ListDictionary * __this, IComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x02494840, Object *, ListDictionary_get_Item, (ListDictionary * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x024949A0, void, ListDictionary_set_Item, (ListDictionary * __this, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0052A010, int32_t, ListDictionary_get_Count, (ListDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x02494BF0, ICollection *, ListDictionary_get_Keys, (ListDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, ListDictionary_get_IsReadOnly, (ListDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, ListDictionary_get_IsFixedSize, (ListDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, ListDictionary_get_IsSynchronized, (ListDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x02494D40, Object *, ListDictionary_get_SyncRoot, (ListDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x02494EA0, ICollection *, ListDictionary_get_Values, (ListDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x02494FF0, void, ListDictionary_Add, (ListDictionary * __this, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02029A50, void, ListDictionary_Clear, (ListDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x02495270, bool, ListDictionary_Contains, (ListDictionary * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x024953C0, void, ListDictionary_CopyTo, (ListDictionary * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02495570, IDictionaryEnumerator *, ListDictionary_GetEnumerator, (ListDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x024956D0, IEnumerator *, ListDictionary_System_Collections_IEnumerable_GetEnumerator, (ListDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x02495830, void, ListDictionary_Remove, (ListDictionary * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x0202A190, void, ListDictionary_NodeEnumerator__ctor, (ListDictionary_NodeEnumerator * __this, ListDictionary * list, MethodInfo * method));
DO_APP_FUNC(0x024959B0, Object *, ListDictionary_NodeEnumerator_get_Current, (ListDictionary_NodeEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02495B00, DictionaryEntry, ListDictionary_NodeEnumerator_get_Entry, (ListDictionary_NodeEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02495BE0, Object *, ListDictionary_NodeEnumerator_get_Key, (ListDictionary_NodeEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02495CB0, Object *, ListDictionary_NodeEnumerator_get_Value, (ListDictionary_NodeEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02495D80, bool, ListDictionary_NodeEnumerator_MoveNext, (ListDictionary_NodeEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02495E90, void, ListDictionary_NodeEnumerator_Reset, (ListDictionary_NodeEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01669060, void, ListDictionary_NodeKeyValueCollection__ctor, (ListDictionary_NodeKeyValueCollection * __this, ListDictionary * list, bool isKeys, MethodInfo * method));
DO_APP_FUNC(0x02495F70, void, ListDictionary_NodeKeyValueCollection_System_Collections_ICollection_CopyTo, (ListDictionary_NodeKeyValueCollection * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0202A9B0, int32_t, ListDictionary_NodeKeyValueCollection_System_Collections_ICollection_get_Count, (ListDictionary_NodeKeyValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, ListDictionary_NodeKeyValueCollection_System_Collections_ICollection_get_IsSynchronized, (ListDictionary_NodeKeyValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x024960E0, Object *, ListDictionary_NodeKeyValueCollection_System_Collections_ICollection_get_SyncRoot, (ListDictionary_NodeKeyValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02496240, IEnumerator *, ListDictionary_NodeKeyValueCollection_System_Collections_IEnumerable_GetEnumerator, (ListDictionary_NodeKeyValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x0202ACC0, void, ListDictionary_NodeKeyValueCollection_NodeKeyValueEnumerator__ctor, (ListDictionary_NodeKeyValueCollection_NodeKeyValueEnumerator * __this, ListDictionary * list, bool isKeys, MethodInfo * method));
DO_APP_FUNC(0x024963B0, Object *, ListDictionary_NodeKeyValueCollection_NodeKeyValueEnumerator_get_Current, (ListDictionary_NodeKeyValueCollection_NodeKeyValueEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x02496490, bool, ListDictionary_NodeKeyValueCollection_NodeKeyValueEnumerator_MoveNext, (ListDictionary_NodeKeyValueCollection_NodeKeyValueEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x024965A0, void, ListDictionary_NodeKeyValueCollection_NodeKeyValueEnumerator_Reset, (ListDictionary_NodeKeyValueCollection_NodeKeyValueEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ListDictionary_DictionaryNode__ctor, (ListDictionary_DictionaryNode * __this, MethodInfo * method));
DO_APP_FUNC(0x02496680, void, NameObjectCollectionBase__ctor, (NameObjectCollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x02496730, void, NameObjectCollectionBase__ctor_1, (NameObjectCollectionBase * __this, IEqualityComparer * equalityComparer, MethodInfo * method));
DO_APP_FUNC(0x02496800, void, NameObjectCollectionBase__ctor_2, (NameObjectCollectionBase * __this, int32_t capacity, IEqualityComparer * equalityComparer, MethodInfo * method));
DO_APP_FUNC(0x02496840, void, NameObjectCollectionBase__ctor_3, (NameObjectCollectionBase * __this, int32_t capacity, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, NameObjectCollectionBase__ctor_4, (NameObjectCollectionBase * __this, DBNull * dummy, MethodInfo * method));
DO_APP_FUNC(0x002FB9E0, void, NameObjectCollectionBase__ctor_5, (NameObjectCollectionBase * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02496900, void, NameObjectCollectionBase_GetObjectData, (NameObjectCollectionBase * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02496E30, void, NameObjectCollectionBase_OnDeserialization, (NameObjectCollectionBase * __this, Object * sender, MethodInfo * method));
DO_APP_FUNC(0x024975D0, void, NameObjectCollectionBase_Reset, (NameObjectCollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x02497810, void, NameObjectCollectionBase_Reset_1, (NameObjectCollectionBase * __this, int32_t capacity, MethodInfo * method));
DO_APP_FUNC(0x02497A60, NameObjectCollectionBase_NameObjectEntry *, NameObjectCollectionBase_FindEntry, (NameObjectCollectionBase * __this, String * key, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, NameObjectCollectionBase_get_IsReadOnly, (NameObjectCollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x02497B80, bool, NameObjectCollectionBase_BaseHasKeys, (NameObjectCollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x02497BC0, void, NameObjectCollectionBase_BaseAdd, (NameObjectCollectionBase * __this, String * name, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02497E00, void, NameObjectCollectionBase_BaseRemove, (NameObjectCollectionBase * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x02498080, void, NameObjectCollectionBase_BaseClear, (NameObjectCollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x02498150, Object *, NameObjectCollectionBase_BaseGet, (NameObjectCollectionBase * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x02498170, void, NameObjectCollectionBase_BaseSet, (NameObjectCollectionBase * __this, String * name, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02498280, Object *, NameObjectCollectionBase_BaseGet_1, (NameObjectCollectionBase * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x024983C0, String *, NameObjectCollectionBase_BaseGetKey, (NameObjectCollectionBase * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02498500, IEnumerator *, NameObjectCollectionBase_GetEnumerator, (NameObjectCollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x01E1A180, int32_t, NameObjectCollectionBase_get_Count, (NameObjectCollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x02498660, void, NameObjectCollectionBase_System_Collections_ICollection_CopyTo, (NameObjectCollectionBase * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02498980, Object *, NameObjectCollectionBase_System_Collections_ICollection_get_SyncRoot, (NameObjectCollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, NameObjectCollectionBase_System_Collections_ICollection_get_IsSynchronized, (NameObjectCollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x02498AE0, String__Array *, NameObjectCollectionBase_BaseGetAllKeys, (NameObjectCollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x02498C20, NameObjectCollectionBase_KeysCollection *, NameObjectCollectionBase_get_Keys, (NameObjectCollectionBase * __this, MethodInfo * method));
DO_APP_FUNC(0x02498D70, void, NameObjectCollectionBase__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, NameObjectCollectionBase_NameObjectEntry__ctor, (NameObjectCollectionBase_NameObjectEntry * __this, String * name, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02499460, void, NameObjectCollectionBase_NameObjectKeysEnumerator__ctor, (NameObjectCollectionBase_NameObjectKeysEnumerator * __this, NameObjectCollectionBase * coll, MethodInfo * method));
DO_APP_FUNC(0x02499490, bool, NameObjectCollectionBase_NameObjectKeysEnumerator_MoveNext, (NameObjectCollectionBase_NameObjectKeysEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x024995C0, void, NameObjectCollectionBase_NameObjectKeysEnumerator_Reset, (NameObjectCollectionBase_NameObjectKeysEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x024996A0, Object *, NameObjectCollectionBase_NameObjectKeysEnumerator_get_Current, (NameObjectCollectionBase_NameObjectKeysEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, NameObjectCollectionBase_KeysCollection__ctor, (NameObjectCollectionBase_KeysCollection * __this, NameObjectCollectionBase * coll, MethodInfo * method));
DO_APP_FUNC(0x02498E10, IEnumerator *, NameObjectCollectionBase_KeysCollection_GetEnumerator, (NameObjectCollectionBase_KeysCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01717150, int32_t, NameObjectCollectionBase_KeysCollection_get_Count, (NameObjectCollectionBase_KeysCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02498F70, void, NameObjectCollectionBase_KeysCollection_System_Collections_ICollection_CopyTo, (NameObjectCollectionBase_KeysCollection * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x024993A0, Object *, NameObjectCollectionBase_KeysCollection_System_Collections_ICollection_get_SyncRoot, (NameObjectCollectionBase_KeysCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, NameObjectCollectionBase_KeysCollection_System_Collections_ICollection_get_IsSynchronized, (NameObjectCollectionBase_KeysCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02499430, void, NameObjectCollectionBase_KeysCollection__ctor_1, (NameObjectCollectionBase_KeysCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, CompatibleComparer_1__ctor, (CompatibleComparer_1 * __this, IComparer * comparer, IHashCodeProvider * hashCodeProvider, MethodInfo * method));
DO_APP_FUNC(0x02492CB0, bool, CompatibleComparer_1_Equals, (CompatibleComparer_1 * __this, Object * a, Object * b, MethodInfo * method));
DO_APP_FUNC(0x02492E00, int32_t, CompatibleComparer_1_GetHashCode, (CompatibleComparer_1 * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x002FA280, IComparer *, CompatibleComparer_1_get_Comparer, (CompatibleComparer_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, IHashCodeProvider *, CompatibleComparer_1_get_HashCodeProvider, (CompatibleComparer_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02492EF0, IComparer *, CompatibleComparer_1_get_DefaultComparer, (MethodInfo * method));
DO_APP_FUNC(0x024930B0, IHashCodeProvider *, CompatibleComparer_1_get_DefaultHashCodeProvider, (MethodInfo * method));
DO_APP_FUNC(0x024997A0, void, NameValueCollection__ctor, (NameValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x024998E0, void, NameValueCollection__ctor_1, (NameValueCollection * __this, int32_t capacity, MethodInfo * method));
DO_APP_FUNC(0x02499A10, void, NameValueCollection__ctor_2, (NameValueCollection * __this, int32_t capacity, IEqualityComparer * equalityComparer, MethodInfo * method));
DO_APP_FUNC(0x02499AD0, void, NameValueCollection__ctor_3, (NameValueCollection * __this, DBNull * dummy, MethodInfo * method));
DO_APP_FUNC(0x02499B60, void, NameValueCollection__ctor_4, (NameValueCollection * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x02499C10, void, NameValueCollection_InvalidateCachedArrays, (NameValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02499C20, String *, NameValueCollection_GetAsOneString, (ArrayList * list, MethodInfo * method));
DO_APP_FUNC(0x0249A000, String__Array *, NameValueCollection_GetAsStringArray, (ArrayList * list, MethodInfo * method));
DO_APP_FUNC(0x0249A0F0, void, NameValueCollection_Add, (NameValueCollection * __this, NameValueCollection * c, MethodInfo * method));
DO_APP_FUNC(0x0249A290, void, NameValueCollection_Clear, (NameValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x0249A400, bool, NameValueCollection_HasKeys, (NameValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02497B80, bool, NameValueCollection_InternalHasKeys, (NameValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x0249A420, void, NameValueCollection_Add_1, (NameValueCollection * __this, String * name, String * value, MethodInfo * method));
DO_APP_FUNC(0x0249A6E0, String *, NameValueCollection_Get, (NameValueCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x0249A7E0, String__Array *, NameValueCollection_GetValues, (NameValueCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x0249A8E0, void, NameValueCollection_Set, (NameValueCollection * __this, String * name, String * value, MethodInfo * method));
DO_APP_FUNC(0x0249ABD0, void, NameValueCollection_Remove, (NameValueCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x0249ABF0, String *, NameValueCollection_get_Item, (NameValueCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x0249AC10, void, NameValueCollection_set_Item, (NameValueCollection * __this, String * name, String * value, MethodInfo * method));
DO_APP_FUNC(0x0249AC30, String *, NameValueCollection_Get_1, (NameValueCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0249AD20, String__Array *, NameValueCollection_GetValues_1, (NameValueCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0249AE10, String *, NameValueCollection_GetKey, (NameValueCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x018687B0, String *, NameValueCollection_get_Item_1, (NameValueCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0249AE20, String__Array *, NameValueCollection_get_AllKeys, (NameValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x0249AF80, void, NotifyCollectionChangedEventArgs__ctor, (NotifyCollectionChangedEventArgs * __this, NotifyCollectionChangedAction__Enum action, MethodInfo * method));
DO_APP_FUNC(0x0249B130, void, NotifyCollectionChangedEventArgs__ctor_1, (NotifyCollectionChangedEventArgs * __this, NotifyCollectionChangedAction__Enum action, Object * changedItem, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0249B3A0, void, NotifyCollectionChangedEventArgs__ctor_2, (NotifyCollectionChangedEventArgs * __this, NotifyCollectionChangedAction__Enum action, Object * newItem, Object * oldItem, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0249B620, void, NotifyCollectionChangedEventArgs__ctor_3, (NotifyCollectionChangedEventArgs * __this, NotifyCollectionChangedAction__Enum action, IList * newItems, IList * oldItems, int32_t startingIndex, MethodInfo * method));
DO_APP_FUNC(0x0249B820, void, NotifyCollectionChangedEventArgs_InitializeAddOrRemove, (NotifyCollectionChangedEventArgs * __this, NotifyCollectionChangedAction__Enum action, IList * changedItems, int32_t startingIndex, MethodInfo * method));
DO_APP_FUNC(0x0249B850, void, NotifyCollectionChangedEventArgs_InitializeAdd, (NotifyCollectionChangedEventArgs * __this, NotifyCollectionChangedAction__Enum action, IList * newItems, int32_t newStartingIndex, MethodInfo * method));
DO_APP_FUNC(0x0249B930, void, NotifyCollectionChangedEventArgs_InitializeRemove, (NotifyCollectionChangedEventArgs * __this, NotifyCollectionChangedAction__Enum action, IList * oldItems, int32_t oldStartingIndex, MethodInfo * method));
DO_APP_FUNC(0x0249BA10, void, NotifyCollectionChangedEventArgs_InitializeMoveOrReplace, (NotifyCollectionChangedEventArgs * __this, NotifyCollectionChangedAction__Enum action, IList * newItems, IList * oldItems, int32_t startingIndex, int32_t oldStartingIndex, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, NotifyCollectionChangedEventHandler__ctor, (NotifyCollectionChangedEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, NotifyCollectionChangedEventHandler_Invoke, (NotifyCollectionChangedEventHandler * __this, Object * sender, NotifyCollectionChangedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, NotifyCollectionChangedEventHandler_BeginInvoke, (NotifyCollectionChangedEventHandler * __this, Object * sender, NotifyCollectionChangedEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, NotifyCollectionChangedEventHandler_EndInvoke, (NotifyCollectionChangedEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x0249BA70, void, OrderedDictionary__ctor, (OrderedDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x0249BA80, void, OrderedDictionary__ctor_1, (OrderedDictionary * __this, int32_t capacity, MethodInfo * method));
DO_APP_FUNC(0x0249BA90, void, OrderedDictionary__ctor_2, (OrderedDictionary * __this, int32_t capacity, IEqualityComparer * comparer, MethodInfo * method));
DO_APP_FUNC(0x002FB9E0, void, OrderedDictionary__ctor_3, (OrderedDictionary * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0249BAA0, int32_t, OrderedDictionary_get_Count, (OrderedDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A050, bool, OrderedDictionary_System_Collections_IDictionary_get_IsFixedSize, (OrderedDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A050, bool, OrderedDictionary_get_IsReadOnly, (OrderedDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, OrderedDictionary_System_Collections_ICollection_get_IsSynchronized, (OrderedDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x0249BAD0, ICollection *, OrderedDictionary_get_Keys, (OrderedDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x0249BC20, ArrayList *, OrderedDictionary_get_objectsArray, (OrderedDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x0249BD80, Hashtable *, OrderedDictionary_get_objectsTable, (OrderedDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x0249BF00, Object *, OrderedDictionary_System_Collections_ICollection_get_SyncRoot, (OrderedDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x0249C060, Object *, OrderedDictionary_get_Item, (OrderedDictionary * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x0249C0A0, void, OrderedDictionary_set_Item, (OrderedDictionary * __this, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0249C380, ICollection *, OrderedDictionary_get_Values, (OrderedDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x0249C4D0, void, OrderedDictionary_Add, (OrderedDictionary * __this, Object * key, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0249C620, void, OrderedDictionary_Clear, (OrderedDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x0249C730, bool, OrderedDictionary_Contains, (OrderedDictionary * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x0249C770, void, OrderedDictionary_CopyTo, (OrderedDictionary * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0249C7C0, int32_t, OrderedDictionary_IndexOfKey, (OrderedDictionary * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x0249C950, void, OrderedDictionary_OnDeserialization, (OrderedDictionary * __this, Object * sender, MethodInfo * method));
DO_APP_FUNC(0x0249CCC0, void, OrderedDictionary_Remove, (OrderedDictionary * __this, Object * key, MethodInfo * method));
DO_APP_FUNC(0x0249CE40, IDictionaryEnumerator *, OrderedDictionary_GetEnumerator, (OrderedDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x0249CFC0, IEnumerator *, OrderedDictionary_System_Collections_IEnumerable_GetEnumerator, (OrderedDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x0249D140, void, OrderedDictionary_GetObjectData, (OrderedDictionary * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x018687B0, void, OrderedDictionary_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization, (OrderedDictionary * __this, Object * sender, MethodInfo * method));
DO_APP_FUNC(0x0249D300, void, OrderedDictionary_OrderedDictionaryEnumerator__ctor, (OrderedDictionary_OrderedDictionaryEnumerator * __this, ArrayList * array, int32_t objectReturnType, MethodInfo * method));
DO_APP_FUNC(0x0249D350, Object *, OrderedDictionary_OrderedDictionaryEnumerator_get_Current, (OrderedDictionary_OrderedDictionaryEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0249D5E0, DictionaryEntry, OrderedDictionary_OrderedDictionaryEnumerator_get_Entry, (OrderedDictionary_OrderedDictionaryEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0249D720, Object *, OrderedDictionary_OrderedDictionaryEnumerator_get_Key, (OrderedDictionary_OrderedDictionaryEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0249D7E0, Object *, OrderedDictionary_OrderedDictionaryEnumerator_get_Value, (OrderedDictionary_OrderedDictionaryEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0249D8B0, bool, OrderedDictionary_OrderedDictionaryEnumerator_MoveNext, (OrderedDictionary_OrderedDictionaryEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0249D940, void, OrderedDictionary_OrderedDictionaryEnumerator_Reset, (OrderedDictionary_OrderedDictionaryEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01669060, void, OrderedDictionary_OrderedDictionaryKeyValueCollection__ctor, (OrderedDictionary_OrderedDictionaryKeyValueCollection * __this, ArrayList * array, bool isKeys, MethodInfo * method));
DO_APP_FUNC(0x0249D9D0, void, OrderedDictionary_OrderedDictionaryKeyValueCollection_System_Collections_ICollection_CopyTo, (OrderedDictionary_OrderedDictionaryKeyValueCollection * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x016D95F0, int32_t, OrderedDictionary_OrderedDictionaryKeyValueCollection_System_Collections_ICollection_get_Count, (OrderedDictionary_OrderedDictionaryKeyValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, OrderedDictionary_OrderedDictionaryKeyValueCollection_System_Collections_ICollection_get_IsSynchronized, (OrderedDictionary_OrderedDictionaryKeyValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01BCB830, Object *, OrderedDictionary_OrderedDictionaryKeyValueCollection_System_Collections_ICollection_get_SyncRoot, (OrderedDictionary_OrderedDictionaryKeyValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x0249DCB0, IEnumerator *, OrderedDictionary_OrderedDictionaryKeyValueCollection_System_Collections_IEnumerable_GetEnumerator, (OrderedDictionary_OrderedDictionaryKeyValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x0249DE30, String *, StringCollection_get_Item, (StringCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0249DF00, void, StringCollection_set_Item, (StringCollection * __this, int32_t index, String * value, MethodInfo * method));
DO_APP_FUNC(0x016D95F0, int32_t, StringCollection_get_Count, (StringCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, StringCollection_System_Collections_IList_get_IsReadOnly, (StringCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, StringCollection_System_Collections_IList_get_IsFixedSize, (StringCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x021C0B60, int32_t, StringCollection_Add, (StringCollection * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01717420, void, StringCollection_Clear, (StringCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01DFFCE0, bool, StringCollection_Contains, (StringCollection * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01FF5420, void, StringCollection_CopyTo, (StringCollection * __this, String__Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02031830, int32_t, StringCollection_IndexOf, (StringCollection * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0249DF30, void, StringCollection_Insert, (StringCollection * __this, int32_t index, String * value, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, StringCollection_get_IsSynchronized, (StringCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x0249DF60, void, StringCollection_Remove, (StringCollection * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0249DF90, void, StringCollection_RemoveAt, (StringCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01BCB830, Object *, StringCollection_get_SyncRoot, (StringCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x0249DE30, Object *, StringCollection_System_Collections_IList_get_Item, (StringCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x0249DFC0, void, StringCollection_System_Collections_IList_set_Item, (StringCollection * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0249E0A0, int32_t, StringCollection_System_Collections_IList_Add, (StringCollection * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0249E170, bool, StringCollection_System_Collections_IList_Contains, (StringCollection * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0249E240, int32_t, StringCollection_System_Collections_IList_IndexOf, (StringCollection * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0249E310, void, StringCollection_System_Collections_IList_Insert, (StringCollection * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0249E3F0, void, StringCollection_System_Collections_IList_Remove, (StringCollection * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FF5420, void, StringCollection_System_Collections_ICollection_CopyTo, (StringCollection * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01BDD500, IEnumerator *, StringCollection_System_Collections_IEnumerable_GetEnumerator, (StringCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x0249E4C0, void, StringCollection__ctor, (StringCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x0249E610, void, StringDictionary__ctor, (StringDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x0249E770, String *, StringDictionary_get_Item, (StringDictionary * __this, String * key, MethodInfo * method));
DO_APP_FUNC(0x0249E8B0, void, StringDictionary_set_Item, (StringDictionary * __this, String * key, String * value, MethodInfo * method));
DO_APP_FUNC(0x0249E9D0, void, StringDictionary_Add, (StringDictionary * __this, String * key, String * value, MethodInfo * method));
DO_APP_FUNC(0x01BCB4B0, void, StringDictionary_Clear, (StringDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x01717450, IEnumerator *, StringDictionary_GetEnumerator, (StringDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x0249EAF0, void, StringDictionary_Remove, (StringDictionary * __this, String * key, MethodInfo * method));
DO_APP_FUNC(0x024922E0, void, CDSCollectionETWBCLProvider_1__ctor, (CDSCollectionETWBCLProvider_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02492380, void, CDSCollectionETWBCLProvider_1_ConcurrentBag_TryTakeSteals, (CDSCollectionETWBCLProvider_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x024923C0, void, CDSCollectionETWBCLProvider_1_ConcurrentBag_TryPeekSteals, (CDSCollectionETWBCLProvider_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02492400, void, CDSCollectionETWBCLProvider_1__cctor, (MethodInfo * method));
DO_APP_FUNC(0x004AB190, uint32_t, _PrivateImplementationDetails__1_ComputeStringHash, (String * s, MethodInfo * method));
DO_APP_FUNC(0x02961750, void, ConfigurationException__ctor, (ConfigurationException * __this, MethodInfo * method));
DO_APP_FUNC(0x02961780, void, ConfigurationException__ctor_1, (ConfigurationException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x029617B0, void, ConfigurationException__ctor_2, (ConfigurationException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x029617E0, void, ConfigurationException__ctor_3, (ConfigurationException * __this, String * message, Exception * inner, MethodInfo * method));
DO_APP_FUNC(0x02961810, void, ConfigurationException__ctor_4, (ConfigurationException * __this, String * message, Exception * inner, String * filename, int32_t line, MethodInfo * method));
DO_APP_FUNC(0x02961840, void, ConfigurationException__ctor_5, (ConfigurationException * __this, String * message, Exception * inner, XmlNode * node, MethodInfo * method));
DO_APP_FUNC(0x02961870, void, ConfigurationException__ctor_6, (ConfigurationException * __this, String * message, String * filename, int32_t line, MethodInfo * method));
DO_APP_FUNC(0x029618A0, void, ConfigurationException__ctor_7, (ConfigurationException * __this, String * message, XmlNode * node, MethodInfo * method));
DO_APP_FUNC(0x029618D0, String *, ConfigurationException_get_BareMessage, (ConfigurationException * __this, MethodInfo * method));
DO_APP_FUNC(0x02961900, String *, ConfigurationException_get_Filename, (ConfigurationException * __this, MethodInfo * method));
DO_APP_FUNC(0x02961930, int32_t, ConfigurationException_get_Line, (ConfigurationException * __this, MethodInfo * method));
DO_APP_FUNC(0x02961960, String *, ConfigurationException_GetXmlNodeFilename, (XmlNode * node, MethodInfo * method));
DO_APP_FUNC(0x02961990, int32_t, ConfigurationException_GetXmlNodeLineNumber, (XmlNode * node, MethodInfo * method));
DO_APP_FUNC(0x021BC570, void, StandardOleMarshalObject__ctor, (StandardOleMarshalObject * __this, MethodInfo * method));
DO_APP_FUNC(0x02962950, void, SettingsBase__ctor, (SettingsBase * __this, MethodInfo * method));
DO_APP_FUNC(0x02962980, SettingsContext *, SettingsBase_get_Context, (SettingsBase * __this, MethodInfo * method));
DO_APP_FUNC(0x029629B0, bool, SettingsBase_get_IsSynchronized, (SettingsBase * __this, MethodInfo * method));
DO_APP_FUNC(0x029629E0, Object *, SettingsBase_get_Item, (SettingsBase * __this, String * propertyName, MethodInfo * method));
DO_APP_FUNC(0x02962A10, void, SettingsBase_set_Item, (SettingsBase * __this, String * propertyName, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02962A40, SettingsPropertyCollection *, SettingsBase_get_Properties, (SettingsBase * __this, MethodInfo * method));
DO_APP_FUNC(0x02962A70, SettingsPropertyValueCollection *, SettingsBase_get_PropertyValues, (SettingsBase * __this, MethodInfo * method));
DO_APP_FUNC(0x02962AA0, SettingsProviderCollection *, SettingsBase_get_Providers, (SettingsBase * __this, MethodInfo * method));
DO_APP_FUNC(0x02962AD0, void, SettingsBase_Initialize, (SettingsBase * __this, SettingsContext * context, SettingsPropertyCollection * properties, SettingsProviderCollection * providers, MethodInfo * method));
DO_APP_FUNC(0x02962B00, void, SettingsBase_Save, (SettingsBase * __this, MethodInfo * method));
DO_APP_FUNC(0x02962B30, SettingsBase *, SettingsBase_Synchronized, (SettingsBase * settingsBase, MethodInfo * method));
DO_APP_FUNC(0x02962B60, void, SettingsContext__ctor, (SettingsContext * __this, MethodInfo * method));
DO_APP_FUNC(0x02963130, void, SettingsPropertyCollection__ctor, (SettingsPropertyCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02963160, int32_t, SettingsPropertyCollection_get_Count, (SettingsPropertyCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02963190, bool, SettingsPropertyCollection_get_IsSynchronized, (SettingsPropertyCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x029631C0, SettingsProperty *, SettingsPropertyCollection_get_Item, (SettingsPropertyCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x029631F0, Object *, SettingsPropertyCollection_get_SyncRoot, (SettingsPropertyCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02963220, void, SettingsPropertyCollection_Add, (SettingsPropertyCollection * __this, SettingsProperty * property, MethodInfo * method));
DO_APP_FUNC(0x02963250, void, SettingsPropertyCollection_Clear, (SettingsPropertyCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02963280, Object *, SettingsPropertyCollection_Clone, (SettingsPropertyCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x029632B0, void, SettingsPropertyCollection_CopyTo, (SettingsPropertyCollection * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x029632E0, IEnumerator *, SettingsPropertyCollection_GetEnumerator, (SettingsPropertyCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02963310, void, SettingsPropertyCollection_OnAdd, (SettingsPropertyCollection * __this, SettingsProperty * property, MethodInfo * method));
DO_APP_FUNC(0x02963340, void, SettingsPropertyCollection_OnAddComplete, (SettingsPropertyCollection * __this, SettingsProperty * property, MethodInfo * method));
DO_APP_FUNC(0x02963370, void, SettingsPropertyCollection_OnClear, (SettingsPropertyCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x029633A0, void, SettingsPropertyCollection_OnClearComplete, (SettingsPropertyCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x029633D0, void, SettingsPropertyCollection_OnRemove, (SettingsPropertyCollection * __this, SettingsProperty * property, MethodInfo * method));
DO_APP_FUNC(0x02963400, void, SettingsPropertyCollection_OnRemoveComplete, (SettingsPropertyCollection * __this, SettingsProperty * property, MethodInfo * method));
DO_APP_FUNC(0x02963430, void, SettingsPropertyCollection_Remove, (SettingsPropertyCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x02963460, void, SettingsPropertyCollection_SetReadOnly, (SettingsPropertyCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02962D70, void, SettingsProperty__ctor, (SettingsProperty * __this, SettingsProperty * propertyToCopy, MethodInfo * method));
DO_APP_FUNC(0x02962DA0, void, SettingsProperty__ctor_1, (SettingsProperty * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x02962DD0, void, SettingsProperty__ctor_2, (SettingsProperty * __this, String * name, Type * propertyType, SettingsProvider * provider, bool isReadOnly, Object * defaultValue, SettingsSerializeAs__Enum serializeAs, SettingsAttributeDictionary * attributes, bool throwOnErrorDeserializing, bool throwOnErrorSerializing, MethodInfo * method));
DO_APP_FUNC(0x02962E00, SettingsAttributeDictionary *, SettingsProperty_get_Attributes, (SettingsProperty * __this, MethodInfo * method));
DO_APP_FUNC(0x02962E30, Object *, SettingsProperty_get_DefaultValue, (SettingsProperty * __this, MethodInfo * method));
DO_APP_FUNC(0x02962E60, void, SettingsProperty_set_DefaultValue, (SettingsProperty * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02962E90, bool, SettingsProperty_get_IsReadOnly, (SettingsProperty * __this, MethodInfo * method));
DO_APP_FUNC(0x02962EC0, void, SettingsProperty_set_IsReadOnly, (SettingsProperty * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x02962EF0, String *, SettingsProperty_get_Name, (SettingsProperty * __this, MethodInfo * method));
DO_APP_FUNC(0x02962F20, void, SettingsProperty_set_Name, (SettingsProperty * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x02962F50, Type *, SettingsProperty_get_PropertyType, (SettingsProperty * __this, MethodInfo * method));
DO_APP_FUNC(0x02962F80, void, SettingsProperty_set_PropertyType, (SettingsProperty * __this, Type * value, MethodInfo * method));
DO_APP_FUNC(0x02962FB0, SettingsProvider *, SettingsProperty_get_Provider, (SettingsProperty * __this, MethodInfo * method));
DO_APP_FUNC(0x02962FE0, void, SettingsProperty_set_Provider, (SettingsProperty * __this, SettingsProvider * value, MethodInfo * method));
DO_APP_FUNC(0x02963010, SettingsSerializeAs__Enum, SettingsProperty_get_SerializeAs, (SettingsProperty * __this, MethodInfo * method));
DO_APP_FUNC(0x02963040, void, SettingsProperty_set_SerializeAs, (SettingsProperty * __this, SettingsSerializeAs__Enum value, MethodInfo * method));
DO_APP_FUNC(0x02963070, bool, SettingsProperty_get_ThrowOnErrorDeserializing, (SettingsProperty * __this, MethodInfo * method));
DO_APP_FUNC(0x029630A0, void, SettingsProperty_set_ThrowOnErrorDeserializing, (SettingsProperty * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x029630D0, bool, SettingsProperty_get_ThrowOnErrorSerializing, (SettingsProperty * __this, MethodInfo * method));
DO_APP_FUNC(0x02963100, void, SettingsProperty_set_ThrowOnErrorSerializing, (SettingsProperty * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01FFE0B0, void, SettingsProvider__ctor, (SettingsProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFDDB0, void, SettingsPropertyValueCollection__ctor, (SettingsPropertyValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFDDE0, int32_t, SettingsPropertyValueCollection_get_Count, (SettingsPropertyValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFDE10, bool, SettingsPropertyValueCollection_get_IsSynchronized, (SettingsPropertyValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFDE40, SettingsPropertyValue *, SettingsPropertyValueCollection_get_Item, (SettingsPropertyValueCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01FFDE70, Object *, SettingsPropertyValueCollection_get_SyncRoot, (SettingsPropertyValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFDEA0, void, SettingsPropertyValueCollection_Add, (SettingsPropertyValueCollection * __this, SettingsPropertyValue * property, MethodInfo * method));
DO_APP_FUNC(0x01FFDED0, void, SettingsPropertyValueCollection_Clear, (SettingsPropertyValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFDF00, Object *, SettingsPropertyValueCollection_Clone, (SettingsPropertyValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFDF30, void, SettingsPropertyValueCollection_CopyTo, (SettingsPropertyValueCollection * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01FFDF60, IEnumerator *, SettingsPropertyValueCollection_GetEnumerator, (SettingsPropertyValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFDF90, void, SettingsPropertyValueCollection_Remove, (SettingsPropertyValueCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01FFDFC0, void, SettingsPropertyValueCollection_SetReadOnly, (SettingsPropertyValueCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFDB70, void, SettingsPropertyValue__ctor, (SettingsPropertyValue * __this, SettingsProperty * property, MethodInfo * method));
DO_APP_FUNC(0x01FFDBA0, bool, SettingsPropertyValue_get_Deserialized, (SettingsPropertyValue * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFDBD0, void, SettingsPropertyValue_set_Deserialized, (SettingsPropertyValue * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01FFDC00, bool, SettingsPropertyValue_get_IsDirty, (SettingsPropertyValue * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFDC30, void, SettingsPropertyValue_set_IsDirty, (SettingsPropertyValue * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01FFDC60, String *, SettingsPropertyValue_get_Name, (SettingsPropertyValue * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFDC90, SettingsProperty *, SettingsPropertyValue_get_Property, (SettingsPropertyValue * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFDCC0, Object *, SettingsPropertyValue_get_PropertyValue, (SettingsPropertyValue * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFDCF0, void, SettingsPropertyValue_set_PropertyValue, (SettingsPropertyValue * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FFDD20, Object *, SettingsPropertyValue_get_SerializedValue, (SettingsPropertyValue * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFDD50, void, SettingsPropertyValue_set_SerializedValue, (SettingsPropertyValue * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FFDD80, bool, SettingsPropertyValue_get_UsingDefaultValue, (SettingsPropertyValue * __this, MethodInfo * method));
DO_APP_FUNC(0x029628F0, void, SettingsAttributeDictionary__ctor, (SettingsAttributeDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x02962920, void, SettingsAttributeDictionary__ctor_1, (SettingsAttributeDictionary * __this, SettingsAttributeDictionary * attributes, MethodInfo * method));
DO_APP_FUNC(0x01FFE110, void, SettingsProviderCollection__ctor, (SettingsProviderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFE140, SettingsProvider *, SettingsProviderCollection_get_Item, (SettingsProviderCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01FFE170, void, SettingsProviderCollection_Add, (SettingsProviderCollection * __this, ProviderBase * provider, MethodInfo * method));
DO_APP_FUNC(0x01EB3EA0, void, DnsPermission__ctor, (DnsPermission * __this, PermissionState__Enum state, MethodInfo * method));
DO_APP_FUNC(0x01EB3ED0, IPermission *, DnsPermission_Copy, (DnsPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01EB3F00, void, DnsPermission_FromXml, (DnsPermission * __this, SecurityElement * securityElement, MethodInfo * method));
DO_APP_FUNC(0x01EB3F30, IPermission *, DnsPermission_Intersect, (DnsPermission * __this, IPermission * target, MethodInfo * method));
DO_APP_FUNC(0x01EB3F60, bool, DnsPermission_IsSubsetOf, (DnsPermission * __this, IPermission * target, MethodInfo * method));
DO_APP_FUNC(0x01EB3F90, bool, DnsPermission_IsUnrestricted, (DnsPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x01EB3FC0, SecurityElement *, DnsPermission_ToXml, (DnsPermission * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DnsPermissionAttribute__ctor, (DnsPermissionAttribute * __this, SecurityAction__Enum action, MethodInfo * method));
DO_APP_FUNC(0x01EB3FF0, IPermission *, DnsPermissionAttribute_CreatePermission, (DnsPermissionAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x020180B0, void, AuthenticationModuleElement__ctor, (AuthenticationModuleElement * __this, MethodInfo * method));
DO_APP_FUNC(0x020180E0, void, AuthenticationModuleElement__ctor_1, (AuthenticationModuleElement * __this, String * typeName, MethodInfo * method));
DO_APP_FUNC(0x02018110, ConfigurationPropertyCollection *, AuthenticationModuleElement_get_Properties, (AuthenticationModuleElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02018140, String *, AuthenticationModuleElement_get_Type, (AuthenticationModuleElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02018170, void, AuthenticationModuleElement_set_Type, (AuthenticationModuleElement * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x020181A0, void, AuthenticationModuleElementCollection__ctor, (AuthenticationModuleElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x020181D0, AuthenticationModuleElement *, AuthenticationModuleElementCollection_get_Item, (AuthenticationModuleElementCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02018200, void, AuthenticationModuleElementCollection_set_Item, (AuthenticationModuleElementCollection * __this, int32_t index, AuthenticationModuleElement * value, MethodInfo * method));
DO_APP_FUNC(0x02018230, AuthenticationModuleElement *, AuthenticationModuleElementCollection_get_Item_1, (AuthenticationModuleElementCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x02018260, void, AuthenticationModuleElementCollection_set_Item_1, (AuthenticationModuleElementCollection * __this, String * name, AuthenticationModuleElement * value, MethodInfo * method));
DO_APP_FUNC(0x02018290, void, AuthenticationModuleElementCollection_Add, (AuthenticationModuleElementCollection * __this, AuthenticationModuleElement * element, MethodInfo * method));
DO_APP_FUNC(0x020182C0, void, AuthenticationModuleElementCollection_Clear, (AuthenticationModuleElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x020182F0, ConfigurationElement *, AuthenticationModuleElementCollection_CreateNewElement, (AuthenticationModuleElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02018320, Object *, AuthenticationModuleElementCollection_GetElementKey, (AuthenticationModuleElementCollection * __this, ConfigurationElement * element, MethodInfo * method));
DO_APP_FUNC(0x02018350, int32_t, AuthenticationModuleElementCollection_IndexOf, (AuthenticationModuleElementCollection * __this, AuthenticationModuleElement * element, MethodInfo * method));
DO_APP_FUNC(0x02018380, void, AuthenticationModuleElementCollection_Remove, (AuthenticationModuleElementCollection * __this, AuthenticationModuleElement * element, MethodInfo * method));
DO_APP_FUNC(0x020183B0, void, AuthenticationModuleElementCollection_Remove_1, (AuthenticationModuleElementCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x020183E0, void, AuthenticationModuleElementCollection_RemoveAt, (AuthenticationModuleElementCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02018410, void, AuthenticationModulesSection__ctor, (AuthenticationModulesSection * __this, MethodInfo * method));
DO_APP_FUNC(0x02018440, AuthenticationModuleElementCollection *, AuthenticationModulesSection_get_AuthenticationModules, (AuthenticationModulesSection * __this, MethodInfo * method));
DO_APP_FUNC(0x02018470, ConfigurationPropertyCollection *, AuthenticationModulesSection_get_Properties, (AuthenticationModulesSection * __this, MethodInfo * method));
DO_APP_FUNC(0x020184A0, void, AuthenticationModulesSection_InitializeDefault, (AuthenticationModulesSection * __this, MethodInfo * method));
DO_APP_FUNC(0x020184D0, void, AuthenticationModulesSection_PostDeserialize, (AuthenticationModulesSection * __this, MethodInfo * method));
DO_APP_FUNC(0x02018500, void, BypassElement__ctor, (BypassElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02018530, void, BypassElement__ctor_1, (BypassElement * __this, String * address, MethodInfo * method));
DO_APP_FUNC(0x02018560, String *, BypassElement_get_Address, (BypassElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02018590, void, BypassElement_set_Address, (BypassElement * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x020185C0, ConfigurationPropertyCollection *, BypassElement_get_Properties, (BypassElement * __this, MethodInfo * method));
DO_APP_FUNC(0x020185F0, void, BypassElementCollection__ctor, (BypassElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02018620, BypassElement *, BypassElementCollection_get_Item, (BypassElementCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02018650, void, BypassElementCollection_set_Item, (BypassElementCollection * __this, int32_t index, BypassElement * value, MethodInfo * method));
DO_APP_FUNC(0x02018680, BypassElement *, BypassElementCollection_get_Item_1, (BypassElementCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x020186B0, void, BypassElementCollection_set_Item_1, (BypassElementCollection * __this, String * name, BypassElement * value, MethodInfo * method));
DO_APP_FUNC(0x020186E0, bool, BypassElementCollection_get_ThrowOnDuplicate, (BypassElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02018710, void, BypassElementCollection_Add, (BypassElementCollection * __this, BypassElement * element, MethodInfo * method));
DO_APP_FUNC(0x02018740, void, BypassElementCollection_Clear, (BypassElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02018770, ConfigurationElement *, BypassElementCollection_CreateNewElement, (BypassElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x020187A0, Object *, BypassElementCollection_GetElementKey, (BypassElementCollection * __this, ConfigurationElement * element, MethodInfo * method));
DO_APP_FUNC(0x020187D0, int32_t, BypassElementCollection_IndexOf, (BypassElementCollection * __this, BypassElement * element, MethodInfo * method));
DO_APP_FUNC(0x02018800, void, BypassElementCollection_Remove, (BypassElementCollection * __this, BypassElement * element, MethodInfo * method));
DO_APP_FUNC(0x02018830, void, BypassElementCollection_Remove_1, (BypassElementCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x02018860, void, BypassElementCollection_RemoveAt, (BypassElementCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02018890, void, ConnectionManagementElement__ctor, (ConnectionManagementElement * __this, MethodInfo * method));
DO_APP_FUNC(0x020188C0, void, ConnectionManagementElement__ctor_1, (ConnectionManagementElement * __this, String * address, int32_t maxConnection, MethodInfo * method));
DO_APP_FUNC(0x020188F0, String *, ConnectionManagementElement_get_Address, (ConnectionManagementElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02018920, void, ConnectionManagementElement_set_Address, (ConnectionManagementElement * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x02018950, int32_t, ConnectionManagementElement_get_MaxConnection, (ConnectionManagementElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02018980, void, ConnectionManagementElement_set_MaxConnection, (ConnectionManagementElement * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x020189B0, ConfigurationPropertyCollection *, ConnectionManagementElement_get_Properties, (ConnectionManagementElement * __this, MethodInfo * method));
DO_APP_FUNC(0x020189E0, void, ConnectionManagementElementCollection__ctor, (ConnectionManagementElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02018A10, ConnectionManagementElement *, ConnectionManagementElementCollection_get_Item, (ConnectionManagementElementCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02018A40, void, ConnectionManagementElementCollection_set_Item, (ConnectionManagementElementCollection * __this, int32_t index, ConnectionManagementElement * value, MethodInfo * method));
DO_APP_FUNC(0x02018A70, ConnectionManagementElement *, ConnectionManagementElementCollection_get_Item_1, (ConnectionManagementElementCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x02018AA0, void, ConnectionManagementElementCollection_set_Item_1, (ConnectionManagementElementCollection * __this, String * name, ConnectionManagementElement * value, MethodInfo * method));
DO_APP_FUNC(0x02018AD0, void, ConnectionManagementElementCollection_Add, (ConnectionManagementElementCollection * __this, ConnectionManagementElement * element, MethodInfo * method));
DO_APP_FUNC(0x02018B00, void, ConnectionManagementElementCollection_Clear, (ConnectionManagementElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02018B30, ConfigurationElement *, ConnectionManagementElementCollection_CreateNewElement, (ConnectionManagementElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02018B60, Object *, ConnectionManagementElementCollection_GetElementKey, (ConnectionManagementElementCollection * __this, ConfigurationElement * element, MethodInfo * method));
DO_APP_FUNC(0x02018B90, int32_t, ConnectionManagementElementCollection_IndexOf, (ConnectionManagementElementCollection * __this, ConnectionManagementElement * element, MethodInfo * method));
DO_APP_FUNC(0x02018BC0, void, ConnectionManagementElementCollection_Remove, (ConnectionManagementElementCollection * __this, ConnectionManagementElement * element, MethodInfo * method));
DO_APP_FUNC(0x02018BF0, void, ConnectionManagementElementCollection_Remove_1, (ConnectionManagementElementCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x02018C20, void, ConnectionManagementElementCollection_RemoveAt, (ConnectionManagementElementCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02018C50, void, ConnectionManagementSection__ctor, (ConnectionManagementSection * __this, MethodInfo * method));
DO_APP_FUNC(0x02018C80, ConnectionManagementElementCollection *, ConnectionManagementSection_get_ConnectionManagement, (ConnectionManagementSection * __this, MethodInfo * method));
DO_APP_FUNC(0x02018CB0, ConfigurationPropertyCollection *, ConnectionManagementSection_get_Properties, (ConnectionManagementSection * __this, MethodInfo * method));
DO_APP_FUNC(0x02018CE0, void, DefaultProxySection__ctor, (DefaultProxySection * __this, MethodInfo * method));
DO_APP_FUNC(0x02018D10, BypassElementCollection *, DefaultProxySection_get_BypassList, (DefaultProxySection * __this, MethodInfo * method));
DO_APP_FUNC(0x02018D40, bool, DefaultProxySection_get_Enabled, (DefaultProxySection * __this, MethodInfo * method));
DO_APP_FUNC(0x02018D70, void, DefaultProxySection_set_Enabled, (DefaultProxySection * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x02018DA0, ModuleElement *, DefaultProxySection_get_Module, (DefaultProxySection * __this, MethodInfo * method));
DO_APP_FUNC(0x02018DD0, ConfigurationPropertyCollection *, DefaultProxySection_get_Properties, (DefaultProxySection * __this, MethodInfo * method));
DO_APP_FUNC(0x02018E00, ProxyElement *, DefaultProxySection_get_Proxy, (DefaultProxySection * __this, MethodInfo * method));
DO_APP_FUNC(0x02018E30, bool, DefaultProxySection_get_UseDefaultCredentials, (DefaultProxySection * __this, MethodInfo * method));
DO_APP_FUNC(0x02018E60, void, DefaultProxySection_set_UseDefaultCredentials, (DefaultProxySection * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x02018E90, void, DefaultProxySection_PostDeserialize, (DefaultProxySection * __this, MethodInfo * method));
DO_APP_FUNC(0x02018EC0, void, DefaultProxySection_Reset, (DefaultProxySection * __this, ConfigurationElement * parentElement, MethodInfo * method));
DO_APP_FUNC(0x02019CB0, void, ModuleElement__ctor, (ModuleElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02019CE0, ConfigurationPropertyCollection *, ModuleElement_get_Properties, (ModuleElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02019D10, String *, ModuleElement_get_Type, (ModuleElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02019D40, void, ModuleElement_set_Type, (ModuleElement * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x02019FE0, void, ProxyElement__ctor, (ProxyElement * __this, MethodInfo * method));
DO_APP_FUNC(0x0201A010, ProxyElement_AutoDetectValues__Enum, ProxyElement_get_AutoDetect, (ProxyElement * __this, MethodInfo * method));
DO_APP_FUNC(0x0201A040, void, ProxyElement_set_AutoDetect, (ProxyElement * __this, ProxyElement_AutoDetectValues__Enum value, MethodInfo * method));
DO_APP_FUNC(0x0201A070, ProxyElement_BypassOnLocalValues__Enum, ProxyElement_get_BypassOnLocal, (ProxyElement * __this, MethodInfo * method));
DO_APP_FUNC(0x0201A0A0, void, ProxyElement_set_BypassOnLocal, (ProxyElement * __this, ProxyElement_BypassOnLocalValues__Enum value, MethodInfo * method));
DO_APP_FUNC(0x0201A0D0, ConfigurationPropertyCollection *, ProxyElement_get_Properties, (ProxyElement * __this, MethodInfo * method));
DO_APP_FUNC(0x0201A100, Uri *, ProxyElement_get_ProxyAddress, (ProxyElement * __this, MethodInfo * method));
DO_APP_FUNC(0x0201A130, void, ProxyElement_set_ProxyAddress, (ProxyElement * __this, Uri * value, MethodInfo * method));
DO_APP_FUNC(0x0201A160, Uri *, ProxyElement_get_ScriptLocation, (ProxyElement * __this, MethodInfo * method));
DO_APP_FUNC(0x0201A190, void, ProxyElement_set_ScriptLocation, (ProxyElement * __this, Uri * value, MethodInfo * method));
DO_APP_FUNC(0x0201A1C0, ProxyElement_UseSystemDefaultValues__Enum, ProxyElement_get_UseSystemDefault, (ProxyElement * __this, MethodInfo * method));
DO_APP_FUNC(0x0201A1F0, void, ProxyElement_set_UseSystemDefault, (ProxyElement * __this, ProxyElement_UseSystemDefaultValues__Enum value, MethodInfo * method));
DO_APP_FUNC(0x020193E0, void, FtpCachePolicyElement__ctor, (FtpCachePolicyElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02019410, RequestCacheLevel__Enum, FtpCachePolicyElement_get_PolicyLevel, (FtpCachePolicyElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02019440, void, FtpCachePolicyElement_set_PolicyLevel, (FtpCachePolicyElement * __this, RequestCacheLevel__Enum value, MethodInfo * method));
DO_APP_FUNC(0x02019470, ConfigurationPropertyCollection *, FtpCachePolicyElement_get_Properties, (FtpCachePolicyElement * __this, MethodInfo * method));
DO_APP_FUNC(0x020194A0, void, FtpCachePolicyElement_DeserializeElement, (FtpCachePolicyElement * __this, XmlReader * reader, bool serializeCollectionKey, MethodInfo * method));
DO_APP_FUNC(0x020194D0, void, FtpCachePolicyElement_Reset, (FtpCachePolicyElement * __this, ConfigurationElement * parentElement, MethodInfo * method));
DO_APP_FUNC(0x02019500, void, HttpCachePolicyElement__ctor, (HttpCachePolicyElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02019530, TimeSpan, HttpCachePolicyElement_get_MaximumAge, (HttpCachePolicyElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02019560, void, HttpCachePolicyElement_set_MaximumAge, (HttpCachePolicyElement * __this, TimeSpan value, MethodInfo * method));
DO_APP_FUNC(0x02019590, TimeSpan, HttpCachePolicyElement_get_MaximumStale, (HttpCachePolicyElement * __this, MethodInfo * method));
DO_APP_FUNC(0x020195C0, void, HttpCachePolicyElement_set_MaximumStale, (HttpCachePolicyElement * __this, TimeSpan value, MethodInfo * method));
DO_APP_FUNC(0x020195F0, TimeSpan, HttpCachePolicyElement_get_MinimumFresh, (HttpCachePolicyElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02019620, void, HttpCachePolicyElement_set_MinimumFresh, (HttpCachePolicyElement * __this, TimeSpan value, MethodInfo * method));
DO_APP_FUNC(0x02019650, HttpRequestCacheLevel__Enum, HttpCachePolicyElement_get_PolicyLevel, (HttpCachePolicyElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02019680, void, HttpCachePolicyElement_set_PolicyLevel, (HttpCachePolicyElement * __this, HttpRequestCacheLevel__Enum value, MethodInfo * method));
DO_APP_FUNC(0x020196B0, ConfigurationPropertyCollection *, HttpCachePolicyElement_get_Properties, (HttpCachePolicyElement * __this, MethodInfo * method));
DO_APP_FUNC(0x020196E0, void, HttpCachePolicyElement_DeserializeElement, (HttpCachePolicyElement * __this, XmlReader * reader, bool serializeCollectionKey, MethodInfo * method));
DO_APP_FUNC(0x02019710, void, HttpCachePolicyElement_Reset, (HttpCachePolicyElement * __this, ConfigurationElement * parentElement, MethodInfo * method));
DO_APP_FUNC(0x02019740, void, HttpListenerElement__ctor, (HttpListenerElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02019770, ConfigurationPropertyCollection *, HttpListenerElement_get_Properties, (HttpListenerElement * __this, MethodInfo * method));
DO_APP_FUNC(0x020197A0, HttpListenerTimeoutsElement *, HttpListenerElement_get_Timeouts, (HttpListenerElement * __this, MethodInfo * method));
DO_APP_FUNC(0x020197D0, bool, HttpListenerElement_get_UnescapeRequestUrl, (HttpListenerElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02019800, void, HttpListenerTimeoutsElement__ctor, (HttpListenerTimeoutsElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02019830, TimeSpan, HttpListenerTimeoutsElement_get_DrainEntityBody, (HttpListenerTimeoutsElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02019860, TimeSpan, HttpListenerTimeoutsElement_get_EntityBody, (HttpListenerTimeoutsElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02019890, TimeSpan, HttpListenerTimeoutsElement_get_HeaderWait, (HttpListenerTimeoutsElement * __this, MethodInfo * method));
DO_APP_FUNC(0x020198C0, TimeSpan, HttpListenerTimeoutsElement_get_IdleConnection, (HttpListenerTimeoutsElement * __this, MethodInfo * method));
DO_APP_FUNC(0x020198F0, int64_t, HttpListenerTimeoutsElement_get_MinSendBytesPerSecond, (HttpListenerTimeoutsElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02019920, ConfigurationPropertyCollection *, HttpListenerTimeoutsElement_get_Properties, (HttpListenerTimeoutsElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02019950, TimeSpan, HttpListenerTimeoutsElement_get_RequestQueue, (HttpListenerTimeoutsElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02019980, void, HttpWebRequestElement__ctor, (HttpWebRequestElement * __this, MethodInfo * method));
DO_APP_FUNC(0x020199B0, int32_t, HttpWebRequestElement_get_MaximumErrorResponseLength, (HttpWebRequestElement * __this, MethodInfo * method));
DO_APP_FUNC(0x020199E0, void, HttpWebRequestElement_set_MaximumErrorResponseLength, (HttpWebRequestElement * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x02019A10, int32_t, HttpWebRequestElement_get_MaximumResponseHeadersLength, (HttpWebRequestElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02019A40, void, HttpWebRequestElement_set_MaximumResponseHeadersLength, (HttpWebRequestElement * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x02019A70, int32_t, HttpWebRequestElement_get_MaximumUnauthorizedUploadLength, (HttpWebRequestElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02019AA0, void, HttpWebRequestElement_set_MaximumUnauthorizedUploadLength, (HttpWebRequestElement * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x02019AD0, ConfigurationPropertyCollection *, HttpWebRequestElement_get_Properties, (HttpWebRequestElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02019B00, bool, HttpWebRequestElement_get_UseUnsafeHeaderParsing, (HttpWebRequestElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02019B30, void, HttpWebRequestElement_set_UseUnsafeHeaderParsing, (HttpWebRequestElement * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x02019B60, void, HttpWebRequestElement_PostDeserialize, (HttpWebRequestElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02019B90, void, Ipv6Element__ctor, (Ipv6Element * __this, MethodInfo * method));
DO_APP_FUNC(0x02019BC0, bool, Ipv6Element_get_Enabled, (Ipv6Element * __this, MethodInfo * method));
DO_APP_FUNC(0x02019BF0, void, Ipv6Element_set_Enabled, (Ipv6Element * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x02019C20, ConfigurationPropertyCollection *, Ipv6Element_get_Properties, (Ipv6Element * __this, MethodInfo * method));
DO_APP_FUNC(0x02019C50, void, MailSettingsSectionGroup__ctor, (MailSettingsSectionGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x02019C80, SmtpSection *, MailSettingsSectionGroup_get_Smtp, (MailSettingsSectionGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99080, void, SmtpSection__ctor, (SmtpSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E990B0, SmtpDeliveryFormat__Enum, SmtpSection_get_DeliveryFormat, (SmtpSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E990E0, void, SmtpSection_set_DeliveryFormat, (SmtpSection * __this, SmtpDeliveryFormat__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01E99110, SmtpDeliveryMethod__Enum, SmtpSection_get_DeliveryMethod, (SmtpSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99140, void, SmtpSection_set_DeliveryMethod, (SmtpSection * __this, SmtpDeliveryMethod__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01E99170, String *, SmtpSection_get_From, (SmtpSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E991A0, void, SmtpSection_set_From, (SmtpSection * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E991D0, SmtpNetworkElement *, SmtpSection_get_Network, (SmtpSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99200, ConfigurationPropertyCollection *, SmtpSection_get_Properties, (SmtpSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99230, SmtpSpecifiedPickupDirectoryElement *, SmtpSection_get_SpecifiedPickupDirectory, (SmtpSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98CF0, void, SmtpNetworkElement__ctor, (SmtpNetworkElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98D20, String *, SmtpNetworkElement_get_ClientDomain, (SmtpNetworkElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98D50, void, SmtpNetworkElement_set_ClientDomain, (SmtpNetworkElement * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E98D80, bool, SmtpNetworkElement_get_DefaultCredentials, (SmtpNetworkElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98DB0, void, SmtpNetworkElement_set_DefaultCredentials, (SmtpNetworkElement * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01E98DE0, bool, SmtpNetworkElement_get_EnableSsl, (SmtpNetworkElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98E10, void, SmtpNetworkElement_set_EnableSsl, (SmtpNetworkElement * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01E98E40, String *, SmtpNetworkElement_get_Host, (SmtpNetworkElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98E70, void, SmtpNetworkElement_set_Host, (SmtpNetworkElement * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E98EA0, String *, SmtpNetworkElement_get_Password, (SmtpNetworkElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98ED0, void, SmtpNetworkElement_set_Password, (SmtpNetworkElement * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E98F00, int32_t, SmtpNetworkElement_get_Port, (SmtpNetworkElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98F30, void, SmtpNetworkElement_set_Port, (SmtpNetworkElement * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01E98F60, ConfigurationPropertyCollection *, SmtpNetworkElement_get_Properties, (SmtpNetworkElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98F90, String *, SmtpNetworkElement_get_TargetName, (SmtpNetworkElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98FC0, void, SmtpNetworkElement_set_TargetName, (SmtpNetworkElement * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E98FF0, String *, SmtpNetworkElement_get_UserName, (SmtpNetworkElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99020, void, SmtpNetworkElement_set_UserName, (SmtpNetworkElement * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E99050, void, SmtpNetworkElement_PostDeserialize, (SmtpNetworkElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99260, void, SmtpSpecifiedPickupDirectoryElement__ctor, (SmtpSpecifiedPickupDirectoryElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99290, String *, SmtpSpecifiedPickupDirectoryElement_get_PickupDirectoryLocation, (SmtpSpecifiedPickupDirectoryElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E992C0, void, SmtpSpecifiedPickupDirectoryElement_set_PickupDirectoryLocation, (SmtpSpecifiedPickupDirectoryElement * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E992F0, ConfigurationPropertyCollection *, SmtpSpecifiedPickupDirectoryElement_get_Properties, (SmtpSpecifiedPickupDirectoryElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02019D70, void, NetSectionGroup__ctor, (NetSectionGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x02019DA0, AuthenticationModulesSection *, NetSectionGroup_get_AuthenticationModules, (NetSectionGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x02019DD0, ConnectionManagementSection *, NetSectionGroup_get_ConnectionManagement, (NetSectionGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x02019E00, DefaultProxySection *, NetSectionGroup_get_DefaultProxy, (NetSectionGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x02019E30, MailSettingsSectionGroup *, NetSectionGroup_get_MailSettings, (NetSectionGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x02019E60, RequestCachingSection *, NetSectionGroup_get_RequestCaching, (NetSectionGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x02019E90, SettingsSection *, NetSectionGroup_get_Settings, (NetSectionGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x02019EC0, WebRequestModulesSection *, NetSectionGroup_get_WebRequestModules, (NetSectionGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x02019EF0, NetSectionGroup *, NetSectionGroup_GetSectionGroup, (Configuration * config, MethodInfo * method));
DO_APP_FUNC(0x01E98330, void, RequestCachingSection__ctor, (RequestCachingSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98360, FtpCachePolicyElement *, RequestCachingSection_get_DefaultFtpCachePolicy, (RequestCachingSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98390, HttpCachePolicyElement *, RequestCachingSection_get_DefaultHttpCachePolicy, (RequestCachingSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E983C0, RequestCacheLevel__Enum, RequestCachingSection_get_DefaultPolicyLevel, (RequestCachingSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E983F0, void, RequestCachingSection_set_DefaultPolicyLevel, (RequestCachingSection * __this, RequestCacheLevel__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01E98420, bool, RequestCachingSection_get_DisableAllCaching, (RequestCachingSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98450, void, RequestCachingSection_set_DisableAllCaching, (RequestCachingSection * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01E98480, bool, RequestCachingSection_get_IsPrivateCache, (RequestCachingSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E984B0, void, RequestCachingSection_set_IsPrivateCache, (RequestCachingSection * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01E984E0, ConfigurationPropertyCollection *, RequestCachingSection_get_Properties, (RequestCachingSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98510, TimeSpan, RequestCachingSection_get_UnspecifiedMaximumAge, (RequestCachingSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98540, void, RequestCachingSection_set_UnspecifiedMaximumAge, (RequestCachingSection * __this, TimeSpan value, MethodInfo * method));
DO_APP_FUNC(0x01E98570, void, RequestCachingSection_DeserializeElement, (RequestCachingSection * __this, XmlReader * reader, bool serializeCollectionKey, MethodInfo * method));
DO_APP_FUNC(0x01E985A0, void, RequestCachingSection_PostDeserialize, (RequestCachingSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98900, void, SettingsSection__ctor, (SettingsSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98930, HttpListenerElement *, SettingsSection_get_HttpListener, (SettingsSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98960, HttpWebRequestElement *, SettingsSection_get_HttpWebRequest, (SettingsSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98990, Ipv6Element *, SettingsSection_get_Ipv6, (SettingsSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E989C0, PerformanceCountersElement *, SettingsSection_get_PerformanceCounters, (SettingsSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E989F0, ConfigurationPropertyCollection *, SettingsSection_get_Properties, (SettingsSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98A20, ServicePointManagerElement *, SettingsSection_get_ServicePointManager, (SettingsSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98A50, SocketElement *, SettingsSection_get_Socket, (SettingsSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98A80, WebProxyScriptElement *, SettingsSection_get_WebProxyScript, (SettingsSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98AB0, WebUtilityElement *, SettingsSection_get_WebUtility, (SettingsSection * __this, MethodInfo * method));
DO_APP_FUNC(0x02019F20, void, PerformanceCountersElement__ctor, (PerformanceCountersElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02019F50, bool, PerformanceCountersElement_get_Enabled, (PerformanceCountersElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02019F80, void, PerformanceCountersElement_set_Enabled, (PerformanceCountersElement * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x02019FB0, ConfigurationPropertyCollection *, PerformanceCountersElement_get_Properties, (PerformanceCountersElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E985D0, void, ServicePointManagerElement__ctor, (ServicePointManagerElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98600, bool, ServicePointManagerElement_get_CheckCertificateName, (ServicePointManagerElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98630, void, ServicePointManagerElement_set_CheckCertificateName, (ServicePointManagerElement * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01E98660, bool, ServicePointManagerElement_get_CheckCertificateRevocationList, (ServicePointManagerElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98690, void, ServicePointManagerElement_set_CheckCertificateRevocationList, (ServicePointManagerElement * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01E986C0, int32_t, ServicePointManagerElement_get_DnsRefreshTimeout, (ServicePointManagerElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E986F0, void, ServicePointManagerElement_set_DnsRefreshTimeout, (ServicePointManagerElement * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01E98720, bool, ServicePointManagerElement_get_EnableDnsRoundRobin, (ServicePointManagerElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98750, void, ServicePointManagerElement_set_EnableDnsRoundRobin, (ServicePointManagerElement * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01E98780, EncryptionPolicy__Enum, ServicePointManagerElement_get_EncryptionPolicy, (ServicePointManagerElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E987B0, void, ServicePointManagerElement_set_EncryptionPolicy, (ServicePointManagerElement * __this, EncryptionPolicy__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01E987E0, bool, ServicePointManagerElement_get_Expect100Continue, (ServicePointManagerElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98810, void, ServicePointManagerElement_set_Expect100Continue, (ServicePointManagerElement * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01E98840, ConfigurationPropertyCollection *, ServicePointManagerElement_get_Properties, (ServicePointManagerElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E98870, bool, ServicePointManagerElement_get_UseNagleAlgorithm, (ServicePointManagerElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E988A0, void, ServicePointManagerElement_set_UseNagleAlgorithm, (ServicePointManagerElement * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01E988D0, void, ServicePointManagerElement_PostDeserialize, (ServicePointManagerElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99320, void, SocketElement__ctor, (SocketElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99350, bool, SocketElement_get_AlwaysUseCompletionPortsForAccept, (SocketElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99380, void, SocketElement_set_AlwaysUseCompletionPortsForAccept, (SocketElement * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01E993B0, bool, SocketElement_get_AlwaysUseCompletionPortsForConnect, (SocketElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E993E0, void, SocketElement_set_AlwaysUseCompletionPortsForConnect, (SocketElement * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01E99410, IPProtectionLevel__Enum, SocketElement_get_IPProtectionLevel, (SocketElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99440, void, SocketElement_set_IPProtectionLevel, (SocketElement * __this, IPProtectionLevel__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01E99470, ConfigurationPropertyCollection *, SocketElement_get_Properties, (SocketElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E994A0, void, SocketElement_PostDeserialize, (SocketElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E994D0, void, WebProxyScriptElement__ctor, (WebProxyScriptElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99500, TimeSpan, WebProxyScriptElement_get_DownloadTimeout, (WebProxyScriptElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99530, void, WebProxyScriptElement_set_DownloadTimeout, (WebProxyScriptElement * __this, TimeSpan value, MethodInfo * method));
DO_APP_FUNC(0x01E99560, ConfigurationPropertyCollection *, WebProxyScriptElement_get_Properties, (WebProxyScriptElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99590, void, WebProxyScriptElement_PostDeserialize, (WebProxyScriptElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99AA0, void, WebUtilityElement__ctor, (WebUtilityElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99AD0, ConfigurationPropertyCollection *, WebUtilityElement_get_Properties, (WebUtilityElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99B00, UnicodeDecodingConformance__Enum, WebUtilityElement_get_UnicodeDecodingConformance, (WebUtilityElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99B30, void, WebUtilityElement_set_UnicodeDecodingConformance, (WebUtilityElement * __this, UnicodeDecodingConformance__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01E99B60, UnicodeEncodingConformance__Enum, WebUtilityElement_get_UnicodeEncodingConformance, (WebUtilityElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99B90, void, WebUtilityElement_set_UnicodeEncodingConformance, (WebUtilityElement * __this, UnicodeEncodingConformance__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01E999B0, void, WebRequestModulesSection__ctor, (WebRequestModulesSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E999E0, ConfigurationPropertyCollection *, WebRequestModulesSection_get_Properties, (WebRequestModulesSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99A10, WebRequestModuleElementCollection *, WebRequestModulesSection_get_WebRequestModules, (WebRequestModulesSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99A40, void, WebRequestModulesSection_InitializeDefault, (WebRequestModulesSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99A70, void, WebRequestModulesSection_PostDeserialize, (WebRequestModulesSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99740, void, WebRequestModuleElementCollection__ctor, (WebRequestModuleElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99770, WebRequestModuleElement *, WebRequestModuleElementCollection_get_Item, (WebRequestModuleElementCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01E997A0, void, WebRequestModuleElementCollection_set_Item, (WebRequestModuleElementCollection * __this, int32_t index, WebRequestModuleElement * value, MethodInfo * method));
DO_APP_FUNC(0x01E997D0, WebRequestModuleElement *, WebRequestModuleElementCollection_get_Item_1, (WebRequestModuleElementCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01E99800, void, WebRequestModuleElementCollection_set_Item_1, (WebRequestModuleElementCollection * __this, String * name, WebRequestModuleElement * value, MethodInfo * method));
DO_APP_FUNC(0x01E99830, void, WebRequestModuleElementCollection_Add, (WebRequestModuleElementCollection * __this, WebRequestModuleElement * element, MethodInfo * method));
DO_APP_FUNC(0x01E99860, void, WebRequestModuleElementCollection_Clear, (WebRequestModuleElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99890, ConfigurationElement *, WebRequestModuleElementCollection_CreateNewElement, (WebRequestModuleElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01E998C0, Object *, WebRequestModuleElementCollection_GetElementKey, (WebRequestModuleElementCollection * __this, ConfigurationElement * element, MethodInfo * method));
DO_APP_FUNC(0x01E998F0, int32_t, WebRequestModuleElementCollection_IndexOf, (WebRequestModuleElementCollection * __this, WebRequestModuleElement * element, MethodInfo * method));
DO_APP_FUNC(0x01E99920, void, WebRequestModuleElementCollection_Remove, (WebRequestModuleElementCollection * __this, WebRequestModuleElement * element, MethodInfo * method));
DO_APP_FUNC(0x01E99950, void, WebRequestModuleElementCollection_Remove_1, (WebRequestModuleElementCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01E99980, void, WebRequestModuleElementCollection_RemoveAt, (WebRequestModuleElementCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01E995C0, void, WebRequestModuleElement__ctor, (WebRequestModuleElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E995F0, void, WebRequestModuleElement__ctor_1, (WebRequestModuleElement * __this, String * prefix, String * type, MethodInfo * method));
DO_APP_FUNC(0x01E99620, void, WebRequestModuleElement__ctor_2, (WebRequestModuleElement * __this, String * prefix, Type * type, MethodInfo * method));
DO_APP_FUNC(0x01E99650, String *, WebRequestModuleElement_get_Prefix, (WebRequestModuleElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99680, void, WebRequestModuleElement_set_Prefix, (WebRequestModuleElement * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01E996B0, ConfigurationPropertyCollection *, WebRequestModuleElement_get_Properties, (WebRequestModuleElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E996E0, Type *, WebRequestModuleElement_get_Type, (WebRequestModuleElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01E99710, void, WebRequestModuleElement_set_Type, (WebRequestModuleElement * __this, Type * value, MethodInfo * method));
DO_APP_FUNC(0x01FFE730, void, DiagnosticsConfigurationHandler__ctor, (DiagnosticsConfigurationHandler * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFE760, Object *, DiagnosticsConfigurationHandler_Create, (DiagnosticsConfigurationHandler * __this, Object * parent, Object * configContext, XmlNode * section, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ApplicationScopedSettingAttribute__ctor, (ApplicationScopedSettingAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SettingAttribute__ctor, (SettingAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02961000, void, ApplicationSettingsBase__ctor, (ApplicationSettingsBase * __this, MethodInfo * method));
DO_APP_FUNC(0x02961030, void, ApplicationSettingsBase__ctor_1, (ApplicationSettingsBase * __this, IComponent * owner, MethodInfo * method));
DO_APP_FUNC(0x02961060, void, ApplicationSettingsBase__ctor_2, (ApplicationSettingsBase * __this, IComponent * owner, String * settingsKey, MethodInfo * method));
DO_APP_FUNC(0x02961090, void, ApplicationSettingsBase__ctor_3, (ApplicationSettingsBase * __this, String * settingsKey, MethodInfo * method));
DO_APP_FUNC(0x029610C0, SettingsContext *, ApplicationSettingsBase_get_Context, (ApplicationSettingsBase * __this, MethodInfo * method));
DO_APP_FUNC(0x029610F0, Object *, ApplicationSettingsBase_get_Item, (ApplicationSettingsBase * __this, String * propertyName, MethodInfo * method));
DO_APP_FUNC(0x02961120, void, ApplicationSettingsBase_set_Item, (ApplicationSettingsBase * __this, String * propertyName, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02961150, SettingsPropertyCollection *, ApplicationSettingsBase_get_Properties, (ApplicationSettingsBase * __this, MethodInfo * method));
DO_APP_FUNC(0x02961180, SettingsPropertyValueCollection *, ApplicationSettingsBase_get_PropertyValues, (ApplicationSettingsBase * __this, MethodInfo * method));
DO_APP_FUNC(0x029611B0, SettingsProviderCollection *, ApplicationSettingsBase_get_Providers, (ApplicationSettingsBase * __this, MethodInfo * method));
DO_APP_FUNC(0x029611E0, String *, ApplicationSettingsBase_get_SettingsKey, (ApplicationSettingsBase * __this, MethodInfo * method));
DO_APP_FUNC(0x02961210, void, ApplicationSettingsBase_set_SettingsKey, (ApplicationSettingsBase * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x02961240, void, ApplicationSettingsBase_add_PropertyChanged, (ApplicationSettingsBase * __this, PropertyChangedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x02961270, void, ApplicationSettingsBase_remove_PropertyChanged, (ApplicationSettingsBase * __this, PropertyChangedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x029612A0, void, ApplicationSettingsBase_add_SettingChanging, (ApplicationSettingsBase * __this, SettingChangingEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x029612D0, void, ApplicationSettingsBase_remove_SettingChanging, (ApplicationSettingsBase * __this, SettingChangingEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x02961300, void, ApplicationSettingsBase_add_SettingsLoaded, (ApplicationSettingsBase * __this, SettingsLoadedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x02961330, void, ApplicationSettingsBase_remove_SettingsLoaded, (ApplicationSettingsBase * __this, SettingsLoadedEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x02961360, void, ApplicationSettingsBase_add_SettingsSaving, (ApplicationSettingsBase * __this, SettingsSavingEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x02961390, void, ApplicationSettingsBase_remove_SettingsSaving, (ApplicationSettingsBase * __this, SettingsSavingEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x029613C0, Object *, ApplicationSettingsBase_GetPreviousVersion, (ApplicationSettingsBase * __this, String * propertyName, MethodInfo * method));
DO_APP_FUNC(0x029613F0, void, ApplicationSettingsBase_OnPropertyChanged, (ApplicationSettingsBase * __this, Object * sender, PropertyChangedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x02961420, void, ApplicationSettingsBase_OnSettingChanging, (ApplicationSettingsBase * __this, Object * sender, SettingChangingEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x02961450, void, ApplicationSettingsBase_OnSettingsLoaded, (ApplicationSettingsBase * __this, Object * sender, SettingsLoadedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x02961480, void, ApplicationSettingsBase_OnSettingsSaving, (ApplicationSettingsBase * __this, Object * sender, CancelEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x029614B0, void, ApplicationSettingsBase_Reload, (ApplicationSettingsBase * __this, MethodInfo * method));
DO_APP_FUNC(0x029614E0, void, ApplicationSettingsBase_Reset, (ApplicationSettingsBase * __this, MethodInfo * method));
DO_APP_FUNC(0x02961510, void, ApplicationSettingsBase_Save, (ApplicationSettingsBase * __this, MethodInfo * method));
DO_APP_FUNC(0x02961540, void, ApplicationSettingsBase_Upgrade, (ApplicationSettingsBase * __this, MethodInfo * method));
DO_APP_FUNC(0x029622F0, void, SettingChangingEventHandler__ctor, (SettingChangingEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x02962320, void, SettingChangingEventHandler_Invoke, (SettingChangingEventHandler * __this, Object * sender, SettingChangingEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x02962350, IAsyncResult *, SettingChangingEventHandler_BeginInvoke, (SettingChangingEventHandler * __this, Object * sender, SettingChangingEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x02962380, void, SettingChangingEventHandler_EndInvoke, (SettingChangingEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x02962200, void, SettingChangingEventArgs__ctor, (SettingChangingEventArgs * __this, String * settingName, String * settingClass, String * settingKey, Object * newValue, bool cancel, MethodInfo * method));
DO_APP_FUNC(0x02962230, Object *, SettingChangingEventArgs_get_NewValue, (SettingChangingEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x02962260, String *, SettingChangingEventArgs_get_SettingClass, (SettingChangingEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x02962290, String *, SettingChangingEventArgs_get_SettingKey, (SettingChangingEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x029622C0, String *, SettingChangingEventArgs_get_SettingName, (SettingChangingEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x02962C80, void, SettingsLoadedEventHandler__ctor, (SettingsLoadedEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x02962CB0, void, SettingsLoadedEventHandler_Invoke, (SettingsLoadedEventHandler * __this, Object * sender, SettingsLoadedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x02962CE0, IAsyncResult *, SettingsLoadedEventHandler_BeginInvoke, (SettingsLoadedEventHandler * __this, Object * sender, SettingsLoadedEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x02962D10, void, SettingsLoadedEventHandler_EndInvoke, (SettingsLoadedEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x02962C20, void, SettingsLoadedEventArgs__ctor, (SettingsLoadedEventArgs * __this, SettingsProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x02962C50, SettingsProvider *, SettingsLoadedEventArgs_get_Provider, (SettingsLoadedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFE1A0, void, SettingsSavingEventHandler__ctor, (SettingsSavingEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01FFE1D0, void, SettingsSavingEventHandler_Invoke, (SettingsSavingEventHandler * __this, Object * sender, CancelEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01FFE200, IAsyncResult *, SettingsSavingEventHandler_BeginInvoke, (SettingsSavingEventHandler * __this, Object * sender, CancelEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x01FFE230, void, SettingsSavingEventHandler_EndInvoke, (SettingsSavingEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x02961570, void, ApplicationSettingsGroup__ctor, (ApplicationSettingsGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x02960FA0, void, AppSettingsReader__ctor, (AppSettingsReader * __this, MethodInfo * method));
DO_APP_FUNC(0x02960FD0, Object *, AppSettingsReader_GetValue, (AppSettingsReader * __this, String * key, Type * type, MethodInfo * method));
DO_APP_FUNC(0x029615A0, void, ClientSettingsSection__ctor, (ClientSettingsSection * __this, MethodInfo * method));
DO_APP_FUNC(0x029615D0, ConfigurationPropertyCollection *, ClientSettingsSection_get_Properties, (ClientSettingsSection * __this, MethodInfo * method));
DO_APP_FUNC(0x02961600, SettingElementCollection *, ClientSettingsSection_get_Settings, (ClientSettingsSection * __this, MethodInfo * method));
DO_APP_FUNC(0x02962560, void, SettingElementCollection__ctor, (SettingElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02962590, ConfigurationElementCollectionType__Enum, SettingElementCollection_get_CollectionType, (SettingElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x029625C0, String *, SettingElementCollection_get_ElementName, (SettingElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x029625F0, void, SettingElementCollection_Add, (SettingElementCollection * __this, SettingElement * element, MethodInfo * method));
DO_APP_FUNC(0x02962620, void, SettingElementCollection_Clear, (SettingElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02962650, ConfigurationElement *, SettingElementCollection_CreateNewElement, (SettingElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02962680, SettingElement *, SettingElementCollection_Get, (SettingElementCollection * __this, String * elementKey, MethodInfo * method));
DO_APP_FUNC(0x029626B0, Object *, SettingElementCollection_GetElementKey, (SettingElementCollection * __this, ConfigurationElement * element, MethodInfo * method));
DO_APP_FUNC(0x029626E0, void, SettingElementCollection_Remove, (SettingElementCollection * __this, SettingElement * element, MethodInfo * method));
DO_APP_FUNC(0x029623B0, void, SettingElement__ctor, (SettingElement * __this, MethodInfo * method));
DO_APP_FUNC(0x029623E0, void, SettingElement__ctor_1, (SettingElement * __this, String * name, SettingsSerializeAs__Enum serializeAs, MethodInfo * method));
DO_APP_FUNC(0x02962410, String *, SettingElement_get_Name, (SettingElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02962440, void, SettingElement_set_Name, (SettingElement * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x02962470, ConfigurationPropertyCollection *, SettingElement_get_Properties, (SettingElement * __this, MethodInfo * method));
DO_APP_FUNC(0x029624A0, SettingsSerializeAs__Enum, SettingElement_get_SerializeAs, (SettingElement * __this, MethodInfo * method));
DO_APP_FUNC(0x029624D0, void, SettingElement_set_SerializeAs, (SettingElement * __this, SettingsSerializeAs__Enum value, MethodInfo * method));
DO_APP_FUNC(0x02962500, SettingValueElement *, SettingElement_get_Value, (SettingElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02962530, void, SettingElement_set_Value, (SettingElement * __this, SettingValueElement * value, MethodInfo * method));
DO_APP_FUNC(0x02962710, void, SettingValueElement__ctor, (SettingValueElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02962740, ConfigurationPropertyCollection *, SettingValueElement_get_Properties, (SettingValueElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02962770, XmlNode *, SettingValueElement_get_ValueXml, (SettingValueElement * __this, MethodInfo * method));
DO_APP_FUNC(0x029627A0, void, SettingValueElement_set_ValueXml, (SettingValueElement * __this, XmlNode * value, MethodInfo * method));
DO_APP_FUNC(0x029627D0, void, SettingValueElement_DeserializeElement, (SettingValueElement * __this, XmlReader * reader, bool serializeCollectionKey, MethodInfo * method));
DO_APP_FUNC(0x02962800, bool, SettingValueElement_IsModified, (SettingValueElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02962830, void, SettingValueElement_Reset, (SettingValueElement * __this, ConfigurationElement * parentElement, MethodInfo * method));
DO_APP_FUNC(0x02962860, void, SettingValueElement_ResetModified, (SettingValueElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02962890, bool, SettingValueElement_SerializeToXmlElement, (SettingValueElement * __this, XmlWriter * writer, String * elementName, MethodInfo * method));
DO_APP_FUNC(0x029628C0, void, SettingValueElement_Unmerge, (SettingValueElement * __this, ConfigurationElement * sourceElement, ConfigurationElement * parentElement, ConfigurationSaveMode__Enum saveMode, MethodInfo * method));
DO_APP_FUNC(0x029619C0, void, ConfigurationSettings__ctor, (ConfigurationSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x029619F0, NameValueCollection *, ConfigurationSettings_get_AppSettings, (MethodInfo * method));
DO_APP_FUNC(0x02961A20, Object *, ConfigurationSettings_GetConfig, (String * sectionName, MethodInfo * method));
DO_APP_FUNC(0x02961630, void, ConfigXmlDocument__ctor, (ConfigXmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x02961660, String *, ConfigXmlDocument_get_Filename, (ConfigXmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x02961690, int32_t, ConfigXmlDocument_get_LineNumber, (ConfigXmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x029616C0, String *, ConfigXmlDocument_System_Configuration_Internal_IConfigErrorInfo_get_Filename, (ConfigXmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x029616F0, int32_t, ConfigXmlDocument_System_Configuration_Internal_IConfigErrorInfo_get_LineNumber, (ConfigXmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x02961720, void, ConfigXmlDocument_LoadSingleElement, (ConfigXmlDocument * __this, String * filename, XmlTextReader * sourceReader, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DefaultSettingValueAttribute__ctor, (DefaultSettingValueAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x02961A50, String *, DefaultSettingValueAttribute_get_Value, (DefaultSettingValueAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02961A80, void, DictionarySectionHandler__ctor, (DictionarySectionHandler * __this, MethodInfo * method));
DO_APP_FUNC(0x02961AB0, String *, DictionarySectionHandler_get_KeyAttributeName, (DictionarySectionHandler * __this, MethodInfo * method));
DO_APP_FUNC(0x02961AE0, String *, DictionarySectionHandler_get_ValueAttributeName, (DictionarySectionHandler * __this, MethodInfo * method));
DO_APP_FUNC(0x02961B10, Object *, DictionarySectionHandler_Create, (DictionarySectionHandler * __this, Object * parent, Object * context, XmlNode * section, MethodInfo * method));
DO_APP_FUNC(0x02961B40, void, IdnElement__ctor, (IdnElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02961B70, UriIdnScope__Enum, IdnElement_get_Enabled, (IdnElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02961BA0, void, IdnElement_set_Enabled, (IdnElement * __this, UriIdnScope__Enum value, MethodInfo * method));
DO_APP_FUNC(0x02961BD0, ConfigurationPropertyCollection *, IdnElement_get_Properties, (IdnElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02961C00, void, IgnoreSectionHandler__ctor, (IgnoreSectionHandler * __this, MethodInfo * method));
DO_APP_FUNC(0x02961C30, Object *, IgnoreSectionHandler_Create, (IgnoreSectionHandler * __this, Object * parent, Object * configContext, XmlNode * section, MethodInfo * method));
DO_APP_FUNC(0x02961C60, void, IriParsingElement__ctor, (IriParsingElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02961C90, bool, IriParsingElement_get_Enabled, (IriParsingElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02961CC0, void, IriParsingElement_set_Enabled, (IriParsingElement * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x02961CF0, ConfigurationPropertyCollection *, IriParsingElement_get_Properties, (IriParsingElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02961D20, void, LocalFileSettingsProvider__ctor, (LocalFileSettingsProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x02961D50, String *, LocalFileSettingsProvider_get_ApplicationName, (LocalFileSettingsProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x02961D80, void, LocalFileSettingsProvider_set_ApplicationName, (LocalFileSettingsProvider * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x02961DB0, SettingsPropertyValue *, LocalFileSettingsProvider_GetPreviousVersion, (LocalFileSettingsProvider * __this, SettingsContext * context, SettingsProperty * property, MethodInfo * method));
DO_APP_FUNC(0x02961DE0, SettingsPropertyValueCollection *, LocalFileSettingsProvider_GetPropertyValues, (LocalFileSettingsProvider * __this, SettingsContext * context, SettingsPropertyCollection * properties, MethodInfo * method));
DO_APP_FUNC(0x02961E10, void, LocalFileSettingsProvider_Initialize, (LocalFileSettingsProvider * __this, String * name, NameValueCollection * values, MethodInfo * method));
DO_APP_FUNC(0x02961E40, void, LocalFileSettingsProvider_Reset, (LocalFileSettingsProvider * __this, SettingsContext * context, MethodInfo * method));
DO_APP_FUNC(0x02961E70, void, LocalFileSettingsProvider_SetPropertyValues, (LocalFileSettingsProvider * __this, SettingsContext * context, SettingsPropertyValueCollection * values, MethodInfo * method));
DO_APP_FUNC(0x02961EA0, void, LocalFileSettingsProvider_Upgrade, (LocalFileSettingsProvider * __this, SettingsContext * context, SettingsPropertyCollection * properties, MethodInfo * method));
DO_APP_FUNC(0x02961ED0, void, NameValueFileSectionHandler__ctor, (NameValueFileSectionHandler * __this, MethodInfo * method));
DO_APP_FUNC(0x02961F00, Object *, NameValueFileSectionHandler_Create, (NameValueFileSectionHandler * __this, Object * parent, Object * configContext, XmlNode * section, MethodInfo * method));
DO_APP_FUNC(0x02961F30, void, NameValueSectionHandler__ctor, (NameValueSectionHandler * __this, MethodInfo * method));
DO_APP_FUNC(0x02961F60, String *, NameValueSectionHandler_get_KeyAttributeName, (NameValueSectionHandler * __this, MethodInfo * method));
DO_APP_FUNC(0x02961F90, String *, NameValueSectionHandler_get_ValueAttributeName, (NameValueSectionHandler * __this, MethodInfo * method));
DO_APP_FUNC(0x02961FC0, Object *, NameValueSectionHandler_Create, (NameValueSectionHandler * __this, Object * parent, Object * context, XmlNode * section, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, NoSettingsVersionUpgradeAttribute__ctor, (NoSettingsVersionUpgradeAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02961FF0, void, SchemeSettingElement__ctor, (SchemeSettingElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02962020, GenericUriParserOptions__Enum, SchemeSettingElement_get_GenericUriParserOptions, (SchemeSettingElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02962050, String *, SchemeSettingElement_get_Name, (SchemeSettingElement * __this, MethodInfo * method));
DO_APP_FUNC(0x02962080, ConfigurationPropertyCollection *, SchemeSettingElement_get_Properties, (SchemeSettingElement * __this, MethodInfo * method));
DO_APP_FUNC(0x029620B0, void, SchemeSettingElementCollection__ctor, (SchemeSettingElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x029620E0, ConfigurationElementCollectionType__Enum, SchemeSettingElementCollection_get_CollectionType, (SchemeSettingElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x02962110, SchemeSettingElement *, SchemeSettingElementCollection_get_Item, (SchemeSettingElementCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x02962140, SchemeSettingElement *, SchemeSettingElementCollection_get_Item_1, (SchemeSettingElementCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x02962170, ConfigurationElement *, SchemeSettingElementCollection_CreateNewElement, (SchemeSettingElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x029621A0, Object *, SchemeSettingElementCollection_GetElementKey, (SchemeSettingElementCollection * __this, ConfigurationElement * element, MethodInfo * method));
DO_APP_FUNC(0x029621D0, int32_t, SchemeSettingElementCollection_IndexOf, (SchemeSettingElementCollection * __this, SchemeSettingElement * element, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SettingsDescriptionAttribute__ctor, (SettingsDescriptionAttribute * __this, String * description, MethodInfo * method));
DO_APP_FUNC(0x02962B90, String *, SettingsDescriptionAttribute_get_Description, (SettingsDescriptionAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SettingsGroupDescriptionAttribute__ctor, (SettingsGroupDescriptionAttribute * __this, String * description, MethodInfo * method));
DO_APP_FUNC(0x02962BC0, String *, SettingsGroupDescriptionAttribute_get_Description, (SettingsGroupDescriptionAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SettingsGroupNameAttribute__ctor, (SettingsGroupNameAttribute * __this, String * groupName, MethodInfo * method));
DO_APP_FUNC(0x02962BF0, String *, SettingsGroupNameAttribute_get_GroupName, (SettingsGroupNameAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SettingsManageabilityAttribute__ctor, (SettingsManageabilityAttribute * __this, SettingsManageability__Enum manageability, MethodInfo * method));
DO_APP_FUNC(0x02962D40, SettingsManageability__Enum, SettingsManageabilityAttribute_get_Manageability, (SettingsManageabilityAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x02963490, void, SettingsPropertyIsReadOnlyException__ctor, (SettingsPropertyIsReadOnlyException * __this, MethodInfo * method));
DO_APP_FUNC(0x029634C0, void, SettingsPropertyIsReadOnlyException__ctor_1, (SettingsPropertyIsReadOnlyException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x029634F0, void, SettingsPropertyIsReadOnlyException__ctor_2, (SettingsPropertyIsReadOnlyException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x02963520, void, SettingsPropertyIsReadOnlyException__ctor_3, (SettingsPropertyIsReadOnlyException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x01FFDAB0, void, SettingsPropertyNotFoundException__ctor, (SettingsPropertyNotFoundException * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFDAE0, void, SettingsPropertyNotFoundException__ctor_1, (SettingsPropertyNotFoundException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01FFDB10, void, SettingsPropertyNotFoundException__ctor_2, (SettingsPropertyNotFoundException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01FFDB40, void, SettingsPropertyNotFoundException__ctor_3, (SettingsPropertyNotFoundException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x01FFDFF0, void, SettingsPropertyWrongTypeException__ctor, (SettingsPropertyWrongTypeException * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFE020, void, SettingsPropertyWrongTypeException__ctor_1, (SettingsPropertyWrongTypeException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01FFE050, void, SettingsPropertyWrongTypeException__ctor_2, (SettingsPropertyWrongTypeException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01FFE080, void, SettingsPropertyWrongTypeException__ctor_3, (SettingsPropertyWrongTypeException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SettingsProviderAttribute__ctor, (SettingsProviderAttribute * __this, String * providerTypeName, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SettingsProviderAttribute__ctor_1, (SettingsProviderAttribute * __this, Type * providerType, MethodInfo * method));
DO_APP_FUNC(0x01FFE0E0, String *, SettingsProviderAttribute_get_ProviderTypeName, (SettingsProviderAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SettingsSerializeAsAttribute__ctor, (SettingsSerializeAsAttribute * __this, SettingsSerializeAs__Enum serializeAs, MethodInfo * method));
DO_APP_FUNC(0x01FFE260, SettingsSerializeAs__Enum, SettingsSerializeAsAttribute_get_SerializeAs, (SettingsSerializeAsAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFE290, void, SingleTagSectionHandler__ctor, (SingleTagSectionHandler * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFE2C0, Object *, SingleTagSectionHandler_Create, (SingleTagSectionHandler * __this, Object * parent, Object * context, XmlNode * section, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SpecialSettingAttribute__ctor, (SpecialSettingAttribute * __this, SpecialSetting__Enum specialSetting, MethodInfo * method));
DO_APP_FUNC(0x01FFE2F0, SpecialSetting__Enum, SpecialSettingAttribute_get_SpecialSetting, (SpecialSettingAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFE320, void, UriSection__ctor, (UriSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFE350, IdnElement *, UriSection_get_Idn, (UriSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFE380, IriParsingElement *, UriSection_get_IriParsing, (UriSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFE3B0, ConfigurationPropertyCollection *, UriSection_get_Properties, (UriSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFE3E0, SchemeSettingElementCollection *, UriSection_get_SchemeSettings, (UriSection * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, UserScopedSettingAttribute__ctor, (UserScopedSettingAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FFE410, void, UserSettingsGroup__ctor, (UserSettingsGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x031A0FE0, void, ThrowStub_1_ThrowNotSupportedException, (MethodInfo * method));
DO_APP_FUNC(0x031BBDE0, void, ConfigurationSection_DeserializeSection, (ConfigurationSection * __this, XmlReader * reader, MethodInfo * method));
DO_APP_FUNC(0x031BBE10, bool, ConfigurationSection_IsModified, (ConfigurationSection * __this, MethodInfo * method));
DO_APP_FUNC(0x031BBE40, void, ConfigurationSection_ResetModified, (ConfigurationSection * __this, MethodInfo * method));
DO_APP_FUNC(0x031BBE70, String *, ConfigurationSection_SerializeSection, (ConfigurationSection * __this, ConfigurationElement * parentElement, String * name, ConfigurationSaveMode__Enum saveMode, MethodInfo * method));
DO_APP_FUNC(0x031BB900, ConfigurationPropertyCollection *, ConfigurationElement_get_Properties, (ConfigurationElement * __this, MethodInfo * method));
DO_APP_FUNC(0x031BB930, void, ConfigurationElement_DeserializeElement, (ConfigurationElement * __this, XmlReader * reader, bool serializeCollectionKey, MethodInfo * method));
DO_APP_FUNC(0x031BB960, void, ConfigurationElement_InitializeDefault, (ConfigurationElement * __this, MethodInfo * method));
DO_APP_FUNC(0x031BB990, bool, ConfigurationElement_IsModified, (ConfigurationElement * __this, MethodInfo * method));
DO_APP_FUNC(0x031BB9C0, void, ConfigurationElement_PostDeserialize, (ConfigurationElement * __this, MethodInfo * method));
DO_APP_FUNC(0x031BB9F0, void, ConfigurationElement_Reset, (ConfigurationElement * __this, ConfigurationElement * parentElement, MethodInfo * method));
DO_APP_FUNC(0x031BBA20, void, ConfigurationElement_ResetModified, (ConfigurationElement * __this, MethodInfo * method));
DO_APP_FUNC(0x031BBA50, bool, ConfigurationElement_SerializeToXmlElement, (ConfigurationElement * __this, XmlWriter * writer, String * elementName, MethodInfo * method));
DO_APP_FUNC(0x031BBA80, void, ConfigurationElement_Unmerge, (ConfigurationElement * __this, ConfigurationElement * sourceElement, ConfigurationElement * parentElement, ConfigurationSaveMode__Enum saveMode, MethodInfo * method));
DO_APP_FUNC(0x031BBAB0, ConfigurationElementCollectionType__Enum, ConfigurationElementCollection_get_CollectionType, (ConfigurationElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x031BBAE0, int32_t, ConfigurationElementCollection_get_Count, (ConfigurationElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x031BBB10, String *, ConfigurationElementCollection_get_ElementName, (ConfigurationElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x031BBB40, bool, ConfigurationElementCollection_get_IsSynchronized, (ConfigurationElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x031BBB70, Object *, ConfigurationElementCollection_get_SyncRoot, (ConfigurationElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x031BBBA0, bool, ConfigurationElementCollection_get_ThrowOnDuplicate, (ConfigurationElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x031BBBD0, IEnumerator *, ConfigurationElementCollection_GetEnumerator, (ConfigurationElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x031BBC00, bool, ConfigurationElementCollection_IsModified, (ConfigurationElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x031BBC30, void, ConfigurationElementCollection_Reset, (ConfigurationElementCollection * __this, ConfigurationElement * parentElement, MethodInfo * method));
DO_APP_FUNC(0x031BBC60, void, ConfigurationElementCollection_ResetModified, (ConfigurationElementCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x031BBC90, void, ConfigurationElementCollection_System_Collections_ICollection_CopyTo, (ConfigurationElementCollection * __this, Array * arr, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x031BBCC0, void, ConfigurationElementCollection_Unmerge, (ConfigurationElementCollection * __this, ConfigurationElement * sourceElement, ConfigurationElement * parentElement, ConfigurationSaveMode__Enum saveMode, MethodInfo * method));
DO_APP_FUNC(0x031BBCF0, int32_t, ConfigurationPropertyCollection_get_Count, (ConfigurationPropertyCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x031BBD20, bool, ConfigurationPropertyCollection_get_IsSynchronized, (ConfigurationPropertyCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x031BBD50, Object *, ConfigurationPropertyCollection_get_SyncRoot, (ConfigurationPropertyCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x031BBD80, IEnumerator *, ConfigurationPropertyCollection_GetEnumerator, (ConfigurationPropertyCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x031BBDB0, void, ConfigurationPropertyCollection_System_Collections_ICollection_CopyTo, (ConfigurationPropertyCollection * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ConfigurationCollectionAttribute__ctor, (ConfigurationCollectionAttribute * __this, Type * itemType, MethodInfo * method));
DO_APP_FUNC(0x031BB840, void, ConfigurationCollectionAttribute_set_AddItemName, (ConfigurationCollectionAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x031BB870, void, ConfigurationCollectionAttribute_set_ClearItemsName, (ConfigurationCollectionAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x031BB8A0, void, ConfigurationCollectionAttribute_set_CollectionType, (ConfigurationCollectionAttribute * __this, ConfigurationElementCollectionType__Enum value, MethodInfo * method));
DO_APP_FUNC(0x031BB8D0, void, ConfigurationCollectionAttribute_set_RemoveItemName, (ConfigurationCollectionAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x031BBFF0, void, ProviderBase_Initialize, (ProviderBase * __this, String * name, NameValueCollection * config, MethodInfo * method));
DO_APP_FUNC(0x031BC020, int32_t, ProviderCollection_get_Count, (ProviderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x031BC050, bool, ProviderCollection_get_IsSynchronized, (ProviderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x031BC080, Object *, ProviderCollection_get_SyncRoot, (ProviderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x031BC0B0, void, ProviderCollection_Add, (ProviderCollection * __this, ProviderBase * provider, MethodInfo * method));
DO_APP_FUNC(0x031BC0E0, IEnumerator *, ProviderCollection_GetEnumerator, (ProviderCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x031BC110, void, ProviderCollection_System_Collections_ICollection_CopyTo, (ProviderCollection * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x031BBEA0, void, IgnoreSection__ctor, (IgnoreSection * __this, MethodInfo * method));
DO_APP_FUNC(0x031BBED0, ConfigurationPropertyCollection *, IgnoreSection_get_Properties, (IgnoreSection * __this, MethodInfo * method));
DO_APP_FUNC(0x031BBF00, void, IgnoreSection_DeserializeSection, (IgnoreSection * __this, XmlReader * xmlReader, MethodInfo * method));
DO_APP_FUNC(0x031BBF30, bool, IgnoreSection_IsModified, (IgnoreSection * __this, MethodInfo * method));
DO_APP_FUNC(0x031BBF60, void, IgnoreSection_Reset, (IgnoreSection * __this, ConfigurationElement * parentSection, MethodInfo * method));
DO_APP_FUNC(0x031BBF90, void, IgnoreSection_ResetModified, (IgnoreSection * __this, MethodInfo * method));
DO_APP_FUNC(0x031BBFC0, String *, IgnoreSection_SerializeSection, (IgnoreSection * __this, ConfigurationElement * parentSection, String * name, ConfigurationSaveMode__Enum saveMode, MethodInfo * method));
DO_APP_FUNC(0x031BC140, void, ThrowStub_2_ThrowNotSupportedException, (MethodInfo * method));
DO_APP_FUNC(0x021E0B10, String *, SR_2_GetString, (String * name, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x021E0BD0, String *, SR_2_GetString_1, (CultureInfo * culture, String * name, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CodeDomProvider__ctor, (CodeDomProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CSharpCodeProvider__ctor, (CSharpCodeProvider * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AstNode__ctor, (AstNode * __this, MethodInfo * method));
DO_APP_FUNC(0x021D8C00, void, Axis__ctor, (Axis * __this, Axis_AxisType__Enum axisType, AstNode * input, String * prefix, String * name, XPathNodeType__Enum nodetype, MethodInfo * method));
DO_APP_FUNC(0x021D8CD0, void, Axis__ctor_1, (Axis * __this, Axis_AxisType__Enum axisType, AstNode * input, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, AstNode_AstType__Enum, Axis_get_Type, (Axis * __this, MethodInfo * method));
DO_APP_FUNC(0x00420230, XPathResultType__Enum, Axis_get_ReturnType, (Axis * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, AstNode *, Axis_get_Input, (Axis * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, Axis_set_Input, (Axis * __this, AstNode * value, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, Axis_get_Prefix, (Axis * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, Axis_get_Name, (Axis * __this, MethodInfo * method));
DO_APP_FUNC(0x00654950, XPathNodeType__Enum, Axis_get_NodeType, (Axis * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, Axis_AxisType__Enum, Axis_get_TypeOfAxis, (Axis * __this, MethodInfo * method));
DO_APP_FUNC(0x00446970, bool, Axis_get_AbbrAxis, (Axis * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, String *, Axis_get_Urn, (Axis * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9C0, void, Axis_set_Urn, (Axis * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, Filter__ctor, (Filter * __this, AstNode * input, AstNode * condition, MethodInfo * method));
DO_APP_FUNC(0x0043D9E0, AstNode_AstType__Enum, Filter_get_Type, (Filter * __this, MethodInfo * method));
DO_APP_FUNC(0x00420230, XPathResultType__Enum, Filter_get_ReturnType, (Filter * __this, MethodInfo * method));
DO_APP_FUNC(0x021D8DA0, void, Function__ctor, (Function * __this, Function_FunctionType__Enum ftype, ArrayList * argumentList, MethodInfo * method));
DO_APP_FUNC(0x021D8F00, void, Function__ctor_1, (Function * __this, String * prefix, String * name, ArrayList * argumentList, MethodInfo * method));
DO_APP_FUNC(0x021D9070, void, Function__ctor_2, (Function * __this, Function_FunctionType__Enum ftype, AstNode * arg, MethodInfo * method));
DO_APP_FUNC(0x00910BD0, AstNode_AstType__Enum, Function_get_Type, (Function * __this, MethodInfo * method));
DO_APP_FUNC(0x021D91F0, XPathResultType__Enum, Function_get_ReturnType, (Function * __this, MethodInfo * method));
DO_APP_FUNC(0x021D92C0, void, Function__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, Group_1__ctor, (Group_1 * __this, AstNode * groupNode, MethodInfo * method));
DO_APP_FUNC(0x008E77B0, AstNode_AstType__Enum, Group_1_get_Type, (Group_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x00420230, XPathResultType__Enum, Group_1_get_ReturnType, (Group_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x01DE2830, void, Operand__ctor, (Operand * __this, String * val, MethodInfo * method));
DO_APP_FUNC(0x021D9370, void, Operand__ctor_1, (Operand * __this, double val, MethodInfo * method));
DO_APP_FUNC(0x00420230, AstNode_AstType__Enum, Operand_get_Type, (Operand * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, XPathResultType__Enum, Operand_get_ReturnType, (Operand * __this, MethodInfo * method));
DO_APP_FUNC(0x0200ADC0, void, Operator__ctor, (Operator * __this, Operator_Op__Enum op, AstNode * opnd1, AstNode * opnd2, MethodInfo * method));
DO_APP_FUNC(0x00417920, AstNode_AstType__Enum, Operator_get_Type, (Operator * __this, MethodInfo * method));
DO_APP_FUNC(0x021D9420, XPathResultType__Enum, Operator_get_ReturnType, (Operator * __this, MethodInfo * method));
DO_APP_FUNC(0x021D9440, void, Operator__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Root__ctor, (Root * __this, MethodInfo * method));
DO_APP_FUNC(0x005D89A0, AstNode_AstType__Enum, Root_get_Type, (Root * __this, MethodInfo * method));
DO_APP_FUNC(0x00420230, XPathResultType__Enum, Root_get_ReturnType, (Root * __this, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, Variable__ctor, (Variable * __this, String * name, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x00AD8BA0, AstNode_AstType__Enum, Variable_get_Type, (Variable * __this, MethodInfo * method));
DO_APP_FUNC(0x008E77B0, XPathResultType__Enum, Variable_get_ReturnType, (Variable * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, XPathParser__ctor, (XPathParser * __this, XPathScanner * scanner, MethodInfo * method));
DO_APP_FUNC(0x021D94F0, AstNode *, XPathParser_ParseXPathExpresion, (String * xpathExpresion, MethodInfo * method));
DO_APP_FUNC(0x021D9810, AstNode *, XPathParser_ParseExpresion, (XPathParser * __this, AstNode * qyInput, MethodInfo * method));
DO_APP_FUNC(0x021D98D0, AstNode *, XPathParser_ParseOrExpr, (XPathParser * __this, AstNode * qyInput, MethodInfo * method));
DO_APP_FUNC(0x021D9B00, AstNode *, XPathParser_ParseAndExpr, (XPathParser * __this, AstNode * qyInput, MethodInfo * method));
DO_APP_FUNC(0x021D9D30, AstNode *, XPathParser_ParseEqualityExpr, (XPathParser * __this, AstNode * qyInput, MethodInfo * method));
DO_APP_FUNC(0x021D9F30, AstNode *, XPathParser_ParseRelationalExpr, (XPathParser * __this, AstNode * qyInput, MethodInfo * method));
DO_APP_FUNC(0x021DA140, AstNode *, XPathParser_ParseAdditiveExpr, (XPathParser * __this, AstNode * qyInput, MethodInfo * method));
DO_APP_FUNC(0x021DA340, AstNode *, XPathParser_ParseMultiplicativeExpr, (XPathParser * __this, AstNode * qyInput, MethodInfo * method));
DO_APP_FUNC(0x021DA600, AstNode *, XPathParser_ParseUnaryExpr, (XPathParser * __this, AstNode * qyInput, MethodInfo * method));
DO_APP_FUNC(0x021DA930, AstNode *, XPathParser_ParseUnionExpr, (XPathParser * __this, AstNode * qyInput, MethodInfo * method));
DO_APP_FUNC(0x021DAB60, bool, XPathParser_IsNodeType, (XPathScanner * scaner, MethodInfo * method));
DO_APP_FUNC(0x021DACE0, AstNode *, XPathParser_ParsePathExpr, (XPathParser * __this, AstNode * qyInput, MethodInfo * method));
DO_APP_FUNC(0x021DAFA0, AstNode *, XPathParser_ParseFilterExpr, (XPathParser * __this, AstNode * qyInput, MethodInfo * method));
DO_APP_FUNC(0x021DB190, AstNode *, XPathParser_ParsePredicate, (XPathParser * __this, AstNode * qyInput, MethodInfo * method));
DO_APP_FUNC(0x021DB240, AstNode *, XPathParser_ParseLocationPath, (XPathParser * __this, AstNode * qyInput, MethodInfo * method));
DO_APP_FUNC(0x021DB5E0, AstNode *, XPathParser_ParseRelativeLocationPath, (XPathParser * __this, AstNode * qyInput, MethodInfo * method));
DO_APP_FUNC(0x021DB7C0, bool, XPathParser_IsStep, (XPathScanner_LexKind__Enum lexKind, MethodInfo * method));
DO_APP_FUNC(0x021DB7F0, AstNode *, XPathParser_ParseStep, (XPathParser * __this, AstNode * qyInput, MethodInfo * method));
DO_APP_FUNC(0x021DBD60, AstNode *, XPathParser_ParseNodeTest, (XPathParser * __this, AstNode * qyInput, Axis_AxisType__Enum axisType, XPathNodeType__Enum nodeType, MethodInfo * method));
DO_APP_FUNC(0x021DC220, bool, XPathParser_IsPrimaryExpr, (XPathScanner * scanner, MethodInfo * method));
DO_APP_FUNC(0x021DC300, AstNode *, XPathParser_ParsePrimaryExpr, (XPathParser * __this, AstNode * qyInput, MethodInfo * method));
DO_APP_FUNC(0x021DC880, AstNode *, XPathParser_ParseMethod, (XPathParser * __this, AstNode * qyInput, MethodInfo * method));
DO_APP_FUNC(0x021DD5E0, void, XPathParser_CheckToken, (XPathParser * __this, XPathScanner_LexKind__Enum t, MethodInfo * method));
DO_APP_FUNC(0x021DD6C0, void, XPathParser_PassToken, (XPathParser * __this, XPathScanner_LexKind__Enum t, MethodInfo * method));
DO_APP_FUNC(0x021DD6F0, void, XPathParser_NextLex, (XPathParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021DD710, bool, XPathParser_TestOp, (XPathParser * __this, String * op, MethodInfo * method));
DO_APP_FUNC(0x021DD780, void, XPathParser_CheckNodeSet, (XPathParser * __this, XPathResultType__Enum t, MethodInfo * method));
DO_APP_FUNC(0x021DD850, Hashtable *, XPathParser_CreateFunctionTable, (MethodInfo * method));
DO_APP_FUNC(0x021DF450, Hashtable *, XPathParser_CreateAxesTable, (MethodInfo * method));
DO_APP_FUNC(0x021DF860, Axis_AxisType__Enum, XPathParser_GetAxis, (XPathParser * __this, XPathScanner * scaner, MethodInfo * method));
DO_APP_FUNC(0x021DF9B0, void, XPathParser__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, Function_FunctionType__Enum, XPathParser_ParamInfo_get_FType, (XPathParser_ParamInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00CC59E0, int32_t, XPathParser_ParamInfo_get_Minargs, (XPathParser_ParamInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, XPathParser_ParamInfo_get_Maxargs, (XPathParser_ParamInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, XPathResultType__Enum__Array *, XPathParser_ParamInfo_get_ArgTypes, (XPathParser_ParamInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x021DFD00, void, XPathParser_ParamInfo__ctor, (XPathParser_ParamInfo * __this, Function_FunctionType__Enum ftype, int32_t minargs, int32_t maxargs, XPathResultType__Enum__Array * argTypes, MethodInfo * method));
DO_APP_FUNC(0x021DFD20, void, XPathScanner__ctor, (XPathScanner * __this, String * xpathExpr, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, XPathScanner_get_SourceText, (XPathScanner * __this, MethodInfo * method));
DO_APP_FUNC(0x01E6D800, uint16_t, XPathScanner_get_CurerntChar, (XPathScanner * __this, MethodInfo * method));
DO_APP_FUNC(0x021DFE30, bool, XPathScanner_NextChar, (XPathScanner * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A010, XPathScanner_LexKind__Enum, XPathScanner_get_Kind, (XPathScanner * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, XPathScanner_get_Name, (XPathScanner * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, XPathScanner_get_Prefix, (XPathScanner * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, String *, XPathScanner_get_StringValue, (XPathScanner * __this, MethodInfo * method));
DO_APP_FUNC(0x021DFE90, double, XPathScanner_get_NumberValue, (XPathScanner * __this, MethodInfo * method));
DO_APP_FUNC(0x003FCB00, bool, XPathScanner_get_CanBeFunction, (XPathScanner * __this, MethodInfo * method));
DO_APP_FUNC(0x021DFEA0, void, XPathScanner_SkipSpace, (XPathScanner * __this, MethodInfo * method));
DO_APP_FUNC(0x021DFF40, bool, XPathScanner_NextLex, (XPathScanner * __this, MethodInfo * method));
DO_APP_FUNC(0x021E0560, double, XPathScanner_ScanNumber, (XPathScanner * __this, MethodInfo * method));
DO_APP_FUNC(0x021E0760, double, XPathScanner_ScanFraction, (XPathScanner * __this, MethodInfo * method));
DO_APP_FUNC(0x021E08A0, String *, XPathScanner_ScanString, (XPathScanner * __this, MethodInfo * method));
DO_APP_FUNC(0x021E0A50, String *, XPathScanner_ScanName, (XPathScanner * __this, MethodInfo * method));
DO_APP_FUNC(0x021D6E20, void, XPathDocumentNavigator__ctor, (XPathDocumentNavigator * __this, XPathNode__Array * pageCurrent, int32_t idxCurrent, XPathNode__Array * pageParent, int32_t idxParent, MethodInfo * method));
DO_APP_FUNC(0x021D6EF0, String *, XPathDocumentNavigator_get_Value, (XPathDocumentNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x021D72D0, XPathNavigator *, XPathDocumentNavigator_Clone, (XPathDocumentNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x021D74C0, XPathNodeType__Enum, XPathDocumentNavigator_get_NodeType, (XPathDocumentNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x021D7500, String *, XPathDocumentNavigator_get_LocalName, (XPathDocumentNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x021D7550, String *, XPathDocumentNavigator_get_NamespaceURI, (XPathDocumentNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x021D75A0, String *, XPathDocumentNavigator_get_Name, (XPathDocumentNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x021D75F0, String *, XPathDocumentNavigator_get_Prefix, (XPathDocumentNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x021D7640, XmlNameTable *, XPathDocumentNavigator_get_NameTable, (XPathDocumentNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x021D76A0, bool, XPathDocumentNavigator_MoveToFirstNamespace, (XPathDocumentNavigator * __this, XPathNamespaceScope__Enum namespaceScope, MethodInfo * method));
DO_APP_FUNC(0x021D7900, bool, XPathDocumentNavigator_MoveToNextNamespace, (XPathDocumentNavigator * __this, XPathNamespaceScope__Enum scope, MethodInfo * method));
DO_APP_FUNC(0x021D7A70, bool, XPathDocumentNavigator_MoveToParent, (XPathDocumentNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x021D7B00, bool, XPathDocumentNavigator_IsSamePosition, (XPathDocumentNavigator * __this, XPathNavigator * other, MethodInfo * method));
DO_APP_FUNC(0x01956D40, Object *, XPathDocumentNavigator_get_UnderlyingObject, (XPathDocumentNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x021D7BE0, bool, XPathDocumentNavigator_HasLineInfo, (XPathDocumentNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x021D7C40, int32_t, XPathDocumentNavigator_get_LineNumber, (XPathDocumentNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x021D7D00, int32_t, XPathDocumentNavigator_get_LinePosition, (XPathDocumentNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x021D7DD0, int32_t, XPathDocumentNavigator_GetPositionHashCode, (XPathDocumentNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x001DE330, XPathNodeType__Enum, XPathNode_get_NodeType, (XPathNode__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DE340, String *, XPathNode_get_Prefix, (XPathNode__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DE360, String *, XPathNode_get_LocalName, (XPathNode__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DE380, String *, XPathNode_get_Name, (XPathNode__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DE390, String *, XPathNode_get_NamespaceUri, (XPathNode__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DE3B0, XPathDocument *, XPathNode_get_Document, (XPathNode__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DE3D0, int32_t, XPathNode_get_LineNumber, (XPathNode__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DE400, int32_t, XPathNode_get_LinePosition, (XPathNode__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DE420, int32_t, XPathNode_get_CollapsedLinePosition, (XPathNode__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DE450, XPathNodePageInfo *, XPathNode_get_PageInfo, (XPathNode__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DE470, int32_t, XPathNode_GetParent, (XPathNode__Boxed * __this, XPathNode__Array * * pageNode, MethodInfo * method));
DO_APP_FUNC(0x001DE4A0, int32_t, XPathNode_GetSibling, (XPathNode__Boxed * __this, XPathNode__Array * * pageNode, MethodInfo * method));
DO_APP_FUNC(0x001DE4D0, bool, XPathNode_get_IsXmlNamespaceNode, (XPathNode__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DE4E0, bool, XPathNode_get_HasSibling, (XPathNode__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DE4F0, bool, XPathNode_get_HasCollapsedText, (XPathNode__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DE500, bool, XPathNode_get_IsText, (XPathNode__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DE510, bool, XPathNode_get_HasNamespaceDecls, (XPathNode__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00107C30, String *, XPathNode_get_Value, (XPathNode__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0011D2D0, void, XPathNodeRef__ctor, (XPathNodeRef__Boxed * __this, XPathNode__Array * page, int32_t idx, MethodInfo * method));
DO_APP_FUNC(0x00107C00, XPathNode__Array *, XPathNodeRef_get_Page, (XPathNodeRef__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0010A860, int32_t, XPathNodeRef_get_Index, (XPathNodeRef__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DE540, int32_t, XPathNodeRef_GetHashCode, (XPathNodeRef__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x021D8020, int32_t, XPathNodeHelper_GetLocalNamespaces, (XPathNode__Array * pageElem, int32_t idxElem, XPathNode__Array * * pageNmsp, MethodInfo * method));
DO_APP_FUNC(0x021D80B0, int32_t, XPathNodeHelper_GetInScopeNamespaces, (XPathNode__Array * pageElem, int32_t idxElem, XPathNode__Array * * pageNmsp, MethodInfo * method));
DO_APP_FUNC(0x021D81D0, bool, XPathNodeHelper_GetParent, (XPathNode__Array * * pageNode, int32_t * idxNode, MethodInfo * method));
DO_APP_FUNC(0x021D8240, int32_t, XPathNodeHelper_GetLocation, (XPathNode__Array * pageNode, int32_t idxNode, MethodInfo * method));
DO_APP_FUNC(0x021D82A0, bool, XPathNodeHelper_GetTextFollowing, (XPathNode__Array * * pageCurrent, int32_t * idxCurrent, XPathNode__Array * pageEnd, int32_t idxEnd, MethodInfo * method));
DO_APP_FUNC(0x021D8470, bool, XPathNodeHelper_GetNonDescendant, (XPathNode__Array * * pageNode, int32_t * idxNode, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, XPathNodePageInfo_get_PageNumber, (XPathNodePageInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00CC59E0, int32_t, XPathNodePageInfo_get_NodeCount, (XPathNodePageInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, XPathNode__Array *, XPathNodePageInfo_get_NextPage, (XPathNodePageInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, XPathNodePageInfo *, XPathNodeInfoAtom_get_PageInfo, (XPathNodeInfoAtom * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, XPathNodeInfoAtom_get_LocalName, (XPathNodeInfoAtom * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, XPathNodeInfoAtom_get_NamespaceUri, (XPathNodeInfoAtom * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, XPathNodeInfoAtom_get_Prefix, (XPathNodeInfoAtom * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, XPathNode__Array *, XPathNodeInfoAtom_get_SiblingPage, (XPathNodeInfoAtom * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, XPathNode__Array *, XPathNodeInfoAtom_get_ParentPage, (XPathNodeInfoAtom * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, XPathDocument *, XPathNodeInfoAtom_get_Document, (XPathNodeInfoAtom * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD490, int32_t, XPathNodeInfoAtom_get_LineNumberBase, (XPathNodeInfoAtom * __this, MethodInfo * method));
DO_APP_FUNC(0x003FDCE0, int32_t, XPathNodeInfoAtom_get_LinePositionBase, (XPathNodeInfoAtom * __this, MethodInfo * method));
DO_APP_FUNC(0x021D8550, int32_t, XPathNodeInfoAtom_GetHashCode, (XPathNodeInfoAtom * __this, MethodInfo * method));
DO_APP_FUNC(0x021D8670, bool, XPathNodeInfoAtom_Equals, (XPathNodeInfoAtom * __this, Object * other, MethodInfo * method));
DO_APP_FUNC(0x021D87B0, String *, XPathNodeInfoAtom_ToString, (XPathNodeInfoAtom * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MonoTODOAttribute_1__ctor, (MonoTODOAttribute_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, LocalAppContextSwitches_1__cctor, (MethodInfo * method));
DO_APP_FUNC(0x021E0BE0, void, AsyncHelper__cctor, (MethodInfo * method));
DO_APP_FUNC(0x021E1290, void, Base64Encoder__ctor, (Base64Encoder * __this, MethodInfo * method));
DO_APP_FUNC(0x021E1320, void, Base64Encoder_Encode, (Base64Encoder * __this, Byte__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x021E16E0, void, Base64Encoder_Flush, (Base64Encoder * __this, MethodInfo * method));
DO_APP_FUNC(0x01701830, void, XmlRawWriterBase64Encoder__ctor, (XmlRawWriterBase64Encoder * __this, XmlRawWriter * rawWriter, MethodInfo * method));
DO_APP_FUNC(0x01701860, void, XmlRawWriterBase64Encoder_WriteChars, (XmlRawWriterBase64Encoder * __this, Char__Array * chars, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01701830, void, XmlTextWriterBase64Encoder__ctor, (XmlTextWriterBase64Encoder * __this, XmlTextEncoder * xmlTextEncoder, MethodInfo * method));
DO_APP_FUNC(0x01FC3A00, void, XmlTextWriterBase64Encoder_WriteChars, (XmlTextWriterBase64Encoder * __this, Char__Array * chars, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x021E17F0, bool, BinHexDecoder_get_IsFull, (BinHexDecoder * __this, MethodInfo * method));
DO_APP_FUNC(0x021E1800, int32_t, BinHexDecoder_Decode, (BinHexDecoder * __this, Char__Array * chars, int32_t startPos, int32_t len, MethodInfo * method));
DO_APP_FUNC(0x021E1A50, Byte__Array *, BinHexDecoder_Decode_1, (Char__Array * chars, bool allowOddChars, MethodInfo * method));
DO_APP_FUNC(0x021E1C90, void, BinHexDecoder_Decode_2, (uint16_t * pChars, uint16_t * pCharsEndPos, uint8_t * pBytes, uint8_t * pBytesEndPos, bool * hasHalfByteCached, uint8_t * cachedHalfByte, int32_t * charsDecoded, int32_t * bytesDecoded, MethodInfo * method));
DO_APP_FUNC(0x021E1E90, void, BinHexEncoder_Encode, (Byte__Array * buffer, int32_t index, int32_t count, XmlWriter * writer, MethodInfo * method));
DO_APP_FUNC(0x021E20A0, String *, BinHexEncoder_Encode_1, (Byte__Array * inArray, int32_t offsetIn, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x021E2260, int32_t, BinHexEncoder_Encode_2, (Byte__Array * inArray, int32_t offsetIn, int32_t count, Char__Array * outArray, MethodInfo * method));
DO_APP_FUNC(0x001DE5A0, bool, BinXmlSqlDecimal_get_IsPositive, (BinXmlSqlDecimal__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DE5B0, void, BinXmlSqlDecimal__ctor, (BinXmlSqlDecimal__Boxed * __this, Byte__Array * data, int32_t offset, bool trim, MethodInfo * method));
DO_APP_FUNC(0x01B5AAD0, uint32_t, BinXmlSqlDecimal_UIntFromByteArray, (Byte__Array * data, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x021E67F0, void, BinXmlSqlDecimal_MpDiv1, (UInt32__Array * rgulU, int32_t * ciulU, uint32_t iulD, uint32_t * iulR, MethodInfo * method));
DO_APP_FUNC(0x021E6970, void, BinXmlSqlDecimal_MpNormalize, (UInt32__Array * rgulU, int32_t * ciulU, MethodInfo * method));
DO_APP_FUNC(0x021E69C0, uint16_t, BinXmlSqlDecimal_ChFromDigit, (uint32_t uiDigit, MethodInfo * method));
DO_APP_FUNC(0x001DE5C0, Decimal, BinXmlSqlDecimal_ToDecimal, (BinXmlSqlDecimal__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DE5F0, void, BinXmlSqlDecimal_TrimTrailingZeros, (BinXmlSqlDecimal__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DE600, String *, BinXmlSqlDecimal_ToString, (BinXmlSqlDecimal__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x021E7190, void, BinXmlSqlDecimal__cctor, (MethodInfo * method));
DO_APP_FUNC(0x001DE610, void, BinXmlSqlMoney__ctor, (BinXmlSqlMoney__Boxed * __this, int32_t v, MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, BinXmlSqlMoney__ctor_1, (BinXmlSqlMoney__Boxed * __this, int64_t v, MethodInfo * method));
DO_APP_FUNC(0x001DE620, Decimal, BinXmlSqlMoney_ToDecimal, (BinXmlSqlMoney__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DE650, String *, BinXmlSqlMoney_ToString, (BinXmlSqlMoney__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x021E2430, void, BinXmlDateTime_Write2Dig, (StringBuilder * sb, int32_t val, MethodInfo * method));
DO_APP_FUNC(0x021E2560, void, BinXmlDateTime_Write4DigNeg, (StringBuilder * sb, int32_t val, MethodInfo * method));
DO_APP_FUNC(0x021E2660, void, BinXmlDateTime_Write3Dec, (StringBuilder * sb, int32_t val, MethodInfo * method));
DO_APP_FUNC(0x021E2810, void, BinXmlDateTime_WriteDate, (StringBuilder * sb, int32_t yr, int32_t mnth, int32_t day, MethodInfo * method));
DO_APP_FUNC(0x021E29F0, void, BinXmlDateTime_WriteTime, (StringBuilder * sb, int32_t hr, int32_t min, int32_t sec, int32_t ms, MethodInfo * method));
DO_APP_FUNC(0x021E2B30, void, BinXmlDateTime_WriteTimeFullPrecision, (StringBuilder * sb, int32_t hr, int32_t min, int32_t sec, int32_t fraction, MethodInfo * method));
DO_APP_FUNC(0x021E2E70, void, BinXmlDateTime_WriteTimeZone, (StringBuilder * sb, TimeSpan zone, MethodInfo * method));
DO_APP_FUNC(0x021E2FD0, void, BinXmlDateTime_WriteTimeZone_1, (StringBuilder * sb, bool negTimeZone, int32_t hr, int32_t min, MethodInfo * method));
DO_APP_FUNC(0x021E3100, void, BinXmlDateTime_BreakDownXsdDateTime, (int64_t val, int32_t * yr, int32_t * mnth, int32_t * day, int32_t * hr, int32_t * min, int32_t * sec, int32_t * ms, MethodInfo * method));
DO_APP_FUNC(0x021E3320, void, BinXmlDateTime_BreakDownXsdDate, (int64_t val, int32_t * yr, int32_t * mnth, int32_t * day, bool * negTimeZone, int32_t * hr, int32_t * min, MethodInfo * method));
DO_APP_FUNC(0x021E34E0, void, BinXmlDateTime_BreakDownXsdTime, (int64_t val, int32_t * hr, int32_t * min, int32_t * sec, int32_t * ms, MethodInfo * method));
DO_APP_FUNC(0x021E3650, String *, BinXmlDateTime_XsdDateTimeToString, (int64_t val, MethodInfo * method));
DO_APP_FUNC(0x021E39F0, String *, BinXmlDateTime_XsdDateToString, (int64_t val, MethodInfo * method));
DO_APP_FUNC(0x021E3D20, String *, BinXmlDateTime_XsdTimeToString, (int64_t val, MethodInfo * method));
DO_APP_FUNC(0x021E4010, String *, BinXmlDateTime_SqlDateTimeToString, (int32_t dateticks, uint32_t timeticks, MethodInfo * method));
DO_APP_FUNC(0x021E4150, DateTime, BinXmlDateTime_SqlDateTimeToDateTime, (int32_t dateticks, uint32_t timeticks, MethodInfo * method));
DO_APP_FUNC(0x021E42D0, String *, BinXmlDateTime_SqlSmallDateTimeToString, (int16_t dateticks, uint16_t timeticks, MethodInfo * method));
DO_APP_FUNC(0x021E4460, DateTime, BinXmlDateTime_SqlSmallDateTimeToDateTime, (int16_t dateticks, uint16_t timeticks, MethodInfo * method));
DO_APP_FUNC(0x021E4520, DateTime, BinXmlDateTime_XsdKatmaiDateToDateTime, (Byte__Array * data, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x021E45F0, DateTime, BinXmlDateTime_XsdKatmaiDateTimeToDateTime, (Byte__Array * data, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x021E46D0, DateTime, BinXmlDateTime_XsdKatmaiTimeToDateTime, (Byte__Array * data, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x021E4780, DateTimeOffset, BinXmlDateTime_XsdKatmaiDateOffsetToDateTimeOffset, (Byte__Array * data, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x021E4850, DateTimeOffset, BinXmlDateTime_XsdKatmaiDateTimeOffsetToDateTimeOffset, (Byte__Array * data, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x021E49A0, DateTimeOffset, BinXmlDateTime_XsdKatmaiTimeOffsetToDateTimeOffset, (Byte__Array * data, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x021E4A70, String *, BinXmlDateTime_XsdKatmaiDateToString, (Byte__Array * data, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x021E4D00, String *, BinXmlDateTime_XsdKatmaiDateTimeToString, (Byte__Array * data, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x021E4FE0, String *, BinXmlDateTime_XsdKatmaiTimeToString, (Byte__Array * data, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x021E52D0, String *, BinXmlDateTime_XsdKatmaiDateOffsetToString, (Byte__Array * data, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x021E5590, String *, BinXmlDateTime_XsdKatmaiDateTimeOffsetToString, (Byte__Array * data, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x021E5900, String *, BinXmlDateTime_XsdKatmaiTimeOffsetToString, (Byte__Array * data, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x021E5C80, int64_t, BinXmlDateTime_GetKatmaiDateTicks, (Byte__Array * data, int32_t * pos, MethodInfo * method));
DO_APP_FUNC(0x021E5D20, int64_t, BinXmlDateTime_GetKatmaiTimeTicks, (Byte__Array * data, int32_t * pos, MethodInfo * method));
DO_APP_FUNC(0x021E60B0, int64_t, BinXmlDateTime_GetKatmaiTimeZoneTicks, (Byte__Array * data, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x021E6120, int32_t, BinXmlDateTime_GetFractions, (DateTime dt, MethodInfo * method));
DO_APP_FUNC(0x021E6260, int32_t, BinXmlDateTime_GetFractions_1, (DateTimeOffset dt, MethodInfo * method));
DO_APP_FUNC(0x021E6420, void, BinXmlDateTime__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01707790, void, XmlSqlBinaryReader__ctor, (XmlSqlBinaryReader * __this, Stream * stream, Byte__Array * data, int32_t len, String * baseUri, bool closeInput, XmlReaderSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x01707E60, XmlReaderSettings *, XmlSqlBinaryReader_get_Settings, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x005065F0, XmlNodeType__Enum, XmlSqlBinaryReader_get_NodeType, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBCA0, String *, XmlSqlBinaryReader_get_LocalName, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBCC0, String *, XmlSqlBinaryReader_get_NamespaceURI, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC80, String *, XmlSqlBinaryReader_get_Prefix, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01708100, String *, XmlSqlBinaryReader_get_Value, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017082E0, int32_t, XmlSqlBinaryReader_get_Depth, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC20, String *, XmlSqlBinaryReader_get_BaseURI, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017083B0, bool, XmlSqlBinaryReader_get_IsEmptyElement, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017083D0, XmlSpace__Enum, XmlSqlBinaryReader_get_XmlSpace, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01708460, String *, XmlSqlBinaryReader_get_XmlLang, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0065FBC0, Type *, XmlSqlBinaryReader_get_ValueType, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01708560, int32_t, XmlSqlBinaryReader_get_AttributeCount, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017085C0, String *, XmlSqlBinaryReader_GetAttribute, (XmlSqlBinaryReader * __this, String * name, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01708760, String *, XmlSqlBinaryReader_GetAttribute_1, (XmlSqlBinaryReader * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x017087D0, String *, XmlSqlBinaryReader_GetAttribute_2, (XmlSqlBinaryReader * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x017088D0, bool, XmlSqlBinaryReader_MoveToAttribute, (XmlSqlBinaryReader * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01708960, void, XmlSqlBinaryReader_MoveToAttribute_1, (XmlSqlBinaryReader * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x01708A70, bool, XmlSqlBinaryReader_MoveToFirstAttribute, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01708AF0, bool, XmlSqlBinaryReader_MoveToNextAttribute, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01708B90, bool, XmlSqlBinaryReader_MoveToElement, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01708C80, bool, XmlSqlBinaryReader_get_EOF, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01708C90, bool, XmlSqlBinaryReader_ReadAttributeValue, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01708EB0, void, XmlSqlBinaryReader_Close, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, XmlNameTable *, XmlSqlBinaryReader_get_NameTable, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01708F40, String *, XmlSqlBinaryReader_LookupNamespace, (XmlSqlBinaryReader * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01709090, void, XmlSqlBinaryReader_ResolveEntity, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017090E0, ReadState__Enum_1, XmlSqlBinaryReader_get_ReadState, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017091B0, bool, XmlSqlBinaryReader_Read, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01709370, IDictionary_2_System_String_System_String_ *, XmlSqlBinaryReader_System_Xml_IXmlNamespaceResolver_GetNamespacesInScope, (XmlSqlBinaryReader * __this, XmlNamespaceScope__Enum scope, MethodInfo * method));
DO_APP_FUNC(0x017097C0, String *, XmlSqlBinaryReader_System_Xml_IXmlNamespaceResolver_LookupPrefix, (XmlSqlBinaryReader * __this, String * namespaceName, MethodInfo * method));
DO_APP_FUNC(0x01709980, void, XmlSqlBinaryReader_VerifyVersion, (XmlSqlBinaryReader * __this, int32_t requiredVersion, BinXmlToken__Enum token, MethodInfo * method));
DO_APP_FUNC(0x01709A30, void, XmlSqlBinaryReader_AddInitNamespace, (XmlSqlBinaryReader * __this, String * prefix, String * uri, MethodInfo * method));
DO_APP_FUNC(0x01709C40, void, XmlSqlBinaryReader_AddName, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01709DE0, void, XmlSqlBinaryReader_AddQName, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170A1A0, void, XmlSqlBinaryReader_NameFlush, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170A200, void, XmlSqlBinaryReader_SkipExtn, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170A2C0, int32_t, XmlSqlBinaryReader_ReadQNameRef, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170A3A0, int32_t, XmlSqlBinaryReader_ReadNameRef, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170A480, bool, XmlSqlBinaryReader_FillAllowEOF, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170A6E0, void, XmlSqlBinaryReader_Fill_, (XmlSqlBinaryReader * __this, int32_t require, MethodInfo * method));
DO_APP_FUNC(0x0170A7A0, void, XmlSqlBinaryReader_Fill, (XmlSqlBinaryReader * __this, int32_t require, MethodInfo * method));
DO_APP_FUNC(0x0170A870, uint8_t, XmlSqlBinaryReader_ReadByte, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170A8C0, uint16_t, XmlSqlBinaryReader_ReadUShort, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170A950, int32_t, XmlSqlBinaryReader_ParseMB32, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170A9C0, int32_t, XmlSqlBinaryReader_ParseMB32_, (XmlSqlBinaryReader * __this, uint8_t b, MethodInfo * method));
DO_APP_FUNC(0x0170ABD0, int32_t, XmlSqlBinaryReader_ParseMB32_1, (XmlSqlBinaryReader * __this, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x0170A950, int32_t, XmlSqlBinaryReader_ParseMB64, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170AD90, BinXmlToken__Enum, XmlSqlBinaryReader_PeekToken, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170AE00, BinXmlToken__Enum, XmlSqlBinaryReader_ReadToken, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170AE80, BinXmlToken__Enum, XmlSqlBinaryReader_NextToken2, (XmlSqlBinaryReader * __this, BinXmlToken__Enum token, MethodInfo * method));
DO_APP_FUNC(0x0170B0E0, BinXmlToken__Enum, XmlSqlBinaryReader_NextToken1, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170B1B0, BinXmlToken__Enum, XmlSqlBinaryReader_NextToken, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170B2D0, BinXmlToken__Enum, XmlSqlBinaryReader_PeekNextToken, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170B2F0, BinXmlToken__Enum, XmlSqlBinaryReader_RescanNextToken, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170B690, String *, XmlSqlBinaryReader_ParseText, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170B770, int32_t, XmlSqlBinaryReader_ScanText, (XmlSqlBinaryReader * __this, int32_t * start, MethodInfo * method));
DO_APP_FUNC(0x0170B8A0, String *, XmlSqlBinaryReader_GetString, (XmlSqlBinaryReader * __this, int32_t pos, int32_t cch, MethodInfo * method));
DO_APP_FUNC(0x0170BA40, String *, XmlSqlBinaryReader_GetStringAligned, (XmlSqlBinaryReader * __this, Byte__Array * data, int32_t offset, int32_t cch, MethodInfo * method));
DO_APP_FUNC(0x0170BA70, String *, XmlSqlBinaryReader_GetAttributeText, (XmlSqlBinaryReader * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x0170BC60, int32_t, XmlSqlBinaryReader_LocateAttribute, (XmlSqlBinaryReader * __this, String * name, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0170BD10, int32_t, XmlSqlBinaryReader_LocateAttribute_1, (XmlSqlBinaryReader * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x0170BE60, void, XmlSqlBinaryReader_PositionOnAttribute, (XmlSqlBinaryReader * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x0170BFC0, void, XmlSqlBinaryReader_GrowElements, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170C0A0, void, XmlSqlBinaryReader_GrowAttributes, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170C170, void, XmlSqlBinaryReader_ClearAttributes, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170C190, void, XmlSqlBinaryReader_PushNamespace, (XmlSqlBinaryReader * __this, String * prefix, String * ns, bool implied, MethodInfo * method));
DO_APP_FUNC(0x0170C5B0, void, XmlSqlBinaryReader_PopNamespaces, (XmlSqlBinaryReader * __this, XmlSqlBinaryReader_NamespaceDecl * firstInScopeChain, MethodInfo * method));
DO_APP_FUNC(0x0170C6D0, void, XmlSqlBinaryReader_GenerateImpliedXmlnsAttrs, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170C8C0, bool, XmlSqlBinaryReader_ReadInit, (XmlSqlBinaryReader * __this, bool skipXmlDecl, MethodInfo * method));
DO_APP_FUNC(0x0170CD90, void, XmlSqlBinaryReader_ScanAttributes, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170D3F0, void, XmlSqlBinaryReader_SimpleCheckForDuplicateAttributes, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170D5A0, void, XmlSqlBinaryReader_HashCheckForDuplicateAttributes, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170D8F0, String *, XmlSqlBinaryReader_XmlDeclValue, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170DB20, String *, XmlSqlBinaryReader_CDATAValue, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170DD90, void, XmlSqlBinaryReader_FinishCDATA, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170DEC0, void, XmlSqlBinaryReader_FinishEndElement, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170E030, bool, XmlSqlBinaryReader_ReadDoc, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170E8A0, void, XmlSqlBinaryReader_ImplReadData, (XmlSqlBinaryReader * __this, BinXmlToken__Enum tokenType, MethodInfo * method));
DO_APP_FUNC(0x0170EA80, void, XmlSqlBinaryReader_ImplReadElement, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170EE10, void, XmlSqlBinaryReader_ImplReadEndElement, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170EF40, void, XmlSqlBinaryReader_ImplReadDoctype, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170F280, void, XmlSqlBinaryReader_ImplReadPI, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170F300, void, XmlSqlBinaryReader_ImplReadComment, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170F340, void, XmlSqlBinaryReader_ImplReadCDATA, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170F380, void, XmlSqlBinaryReader_ImplReadNest, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170F530, void, XmlSqlBinaryReader_ImplReadEndNest, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170F570, void, XmlSqlBinaryReader_ImplReadXmlText, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170FCF0, void, XmlSqlBinaryReader_UpdateFromTextReader, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170FDC0, bool, XmlSqlBinaryReader_UpdateFromTextReader_1, (XmlSqlBinaryReader * __this, bool needUpdate, MethodInfo * method));
DO_APP_FUNC(0x0170FDE0, void, XmlSqlBinaryReader_CheckAllowContent, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0170FE90, void, XmlSqlBinaryReader_GenerateTokenTypeMap, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01710E70, Type *, XmlSqlBinaryReader_GetValueType, (XmlSqlBinaryReader * __this, BinXmlToken__Enum token, MethodInfo * method));
DO_APP_FUNC(0x01710FA0, void, XmlSqlBinaryReader_ReScanOverValue, (XmlSqlBinaryReader * __this, BinXmlToken__Enum token, MethodInfo * method));
DO_APP_FUNC(0x01710FC0, XmlNodeType__Enum, XmlSqlBinaryReader_ScanOverValue, (XmlSqlBinaryReader * __this, BinXmlToken__Enum token, bool attr, bool checkChars, MethodInfo * method));
DO_APP_FUNC(0x017111F0, XmlNodeType__Enum, XmlSqlBinaryReader_ScanOverAnyValue, (XmlSqlBinaryReader * __this, BinXmlToken__Enum token, bool attr, bool checkChars, MethodInfo * method));
DO_APP_FUNC(0x01711790, XmlNodeType__Enum, XmlSqlBinaryReader_CheckText, (XmlSqlBinaryReader * __this, bool attr, MethodInfo * method));
DO_APP_FUNC(0x01711A30, XmlNodeType__Enum, XmlSqlBinaryReader_CheckTextIsWS, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01711AE0, void, XmlSqlBinaryReader_CheckValueTokenBounds, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01711B90, int32_t, XmlSqlBinaryReader_GetXsdKatmaiTokenLength, (XmlSqlBinaryReader * __this, BinXmlToken__Enum token, MethodInfo * method));
DO_APP_FUNC(0x01711D20, int32_t, XmlSqlBinaryReader_XsdKatmaiTimeScaleToValueLength, (XmlSqlBinaryReader * __this, uint8_t scale, MethodInfo * method));
DO_APP_FUNC(0x01711E30, int64_t, XmlSqlBinaryReader_ValueAsLong, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01712130, uint64_t, XmlSqlBinaryReader_ValueAsULong, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017121F0, Decimal, XmlSqlBinaryReader_ValueAsDecimal, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017124A0, double, XmlSqlBinaryReader_ValueAsDouble, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017126B0, String *, XmlSqlBinaryReader_ValueAsDateTimeString, (XmlSqlBinaryReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01712D40, String *, XmlSqlBinaryReader_ValueAsString, (XmlSqlBinaryReader * __this, BinXmlToken__Enum token, MethodInfo * method));
DO_APP_FUNC(0x017135A0, int16_t, XmlSqlBinaryReader_GetInt16, (XmlSqlBinaryReader * __this, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x017135A0, uint16_t, XmlSqlBinaryReader_GetUInt16, (XmlSqlBinaryReader * __this, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x01713610, int32_t, XmlSqlBinaryReader_GetInt32, (XmlSqlBinaryReader * __this, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x01713610, uint32_t, XmlSqlBinaryReader_GetUInt32, (XmlSqlBinaryReader * __this, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x017136D0, int64_t, XmlSqlBinaryReader_GetInt64, (XmlSqlBinaryReader * __this, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x017136D0, uint64_t, XmlSqlBinaryReader_GetUInt64, (XmlSqlBinaryReader * __this, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x01713880, float, XmlSqlBinaryReader_GetSingle, (XmlSqlBinaryReader * __this, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x01713940, double, XmlSqlBinaryReader_GetDouble, (XmlSqlBinaryReader * __this, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x01713B70, Exception *, XmlSqlBinaryReader_ThrowUnexpectedToken, (XmlSqlBinaryReader * __this, BinXmlToken__Enum token, MethodInfo * method));
DO_APP_FUNC(0x01713C00, Exception *, XmlSqlBinaryReader_ThrowXmlException, (XmlSqlBinaryReader * __this, String * res, MethodInfo * method));
DO_APP_FUNC(0x01713D60, Exception *, XmlSqlBinaryReader_ThrowXmlException_1, (XmlSqlBinaryReader * __this, String * res, String * arg1, String * arg2, MethodInfo * method));
DO_APP_FUNC(0x01713F80, Exception *, XmlSqlBinaryReader_ThrowNotSupported, (XmlSqlBinaryReader * __this, String * res, MethodInfo * method));
DO_APP_FUNC(0x017140E0, void, XmlSqlBinaryReader__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0013C860, void, XmlSqlBinaryReader_QName__ctor, (XmlSqlBinaryReader_QName__Boxed * __this, String * prefix, String * lname, String * nsUri, MethodInfo * method));
DO_APP_FUNC(0x0013C860, void, XmlSqlBinaryReader_QName_Set, (XmlSqlBinaryReader_QName__Boxed * __this, String * prefix, String * lname, String * nsUri, MethodInfo * method));
DO_APP_FUNC(0x0013C870, void, XmlSqlBinaryReader_QName_Clear, (XmlSqlBinaryReader_QName__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0013C7D0, bool, XmlSqlBinaryReader_QName_MatchNs, (XmlSqlBinaryReader_QName__Boxed * __this, String * lname, String * nsUri, MethodInfo * method));
DO_APP_FUNC(0x0013C880, bool, XmlSqlBinaryReader_QName_MatchPrefix, (XmlSqlBinaryReader_QName__Boxed * __this, String * prefix, String * lname, MethodInfo * method));
DO_APP_FUNC(0x0013C890, void, XmlSqlBinaryReader_QName_CheckPrefixNS, (XmlSqlBinaryReader_QName__Boxed * __this, String * prefix, String * namespaceUri, MethodInfo * method));
DO_APP_FUNC(0x0013C8A0, int32_t, XmlSqlBinaryReader_QName_GetHashCode, (XmlSqlBinaryReader_QName__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0013C900, int32_t, XmlSqlBinaryReader_QName_GetNSHashCode, (XmlSqlBinaryReader_QName__Boxed * __this, SecureStringHasher * hasher, MethodInfo * method));
DO_APP_FUNC(0x0013C960, bool, XmlSqlBinaryReader_QName_Equals, (XmlSqlBinaryReader_QName__Boxed * __this, Object * other, MethodInfo * method));
DO_APP_FUNC(0x0013C970, String *, XmlSqlBinaryReader_QName_ToString, (XmlSqlBinaryReader_QName__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01714810, bool, XmlSqlBinaryReader_QName_op_Equality, (XmlSqlBinaryReader_QName a, XmlSqlBinaryReader_QName b, MethodInfo * method));
DO_APP_FUNC(0x0013C830, void, XmlSqlBinaryReader_ElemInfo_Set, (XmlSqlBinaryReader_ElemInfo__Boxed * __this, XmlSqlBinaryReader_QName name, bool xmlspacePreserve, MethodInfo * method));
DO_APP_FUNC(0x0013C850, XmlSqlBinaryReader_NamespaceDecl *, XmlSqlBinaryReader_ElemInfo_Clear, (XmlSqlBinaryReader_ElemInfo__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x0013C710, void, XmlSqlBinaryReader_AttrInfo_Set, (XmlSqlBinaryReader_AttrInfo__Boxed * __this, XmlSqlBinaryReader_QName n, String * v, MethodInfo * method));
DO_APP_FUNC(0x0013C730, void, XmlSqlBinaryReader_AttrInfo_Set_1, (XmlSqlBinaryReader_AttrInfo__Boxed * __this, XmlSqlBinaryReader_QName n, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x0013C750, void, XmlSqlBinaryReader_AttrInfo_GetLocalnameAndNamespaceUri, (XmlSqlBinaryReader_AttrInfo__Boxed * __this, String * * localname, String * * namespaceUri, MethodInfo * method));
DO_APP_FUNC(0x0013C760, int32_t, XmlSqlBinaryReader_AttrInfo_GetLocalnameAndNamespaceUriAndHash, (XmlSqlBinaryReader_AttrInfo__Boxed * __this, SecureStringHasher * hasher, String * * localname, String * * namespaceUri, MethodInfo * method));
DO_APP_FUNC(0x0013C7D0, bool, XmlSqlBinaryReader_AttrInfo_MatchNS, (XmlSqlBinaryReader_AttrInfo__Boxed * __this, String * localname, String * namespaceUri, MethodInfo * method));
DO_APP_FUNC(0x0013C7E0, bool, XmlSqlBinaryReader_AttrInfo_MatchHashNS, (XmlSqlBinaryReader_AttrInfo__Boxed * __this, int32_t hash, String * localname, String * namespaceUri, MethodInfo * method));
DO_APP_FUNC(0x0013C800, void, XmlSqlBinaryReader_AttrInfo_AdjustPosition, (XmlSqlBinaryReader_AttrInfo__Boxed * __this, int32_t adj, MethodInfo * method));
DO_APP_FUNC(0x01714240, void, XmlSqlBinaryReader_NamespaceDecl__ctor, (XmlSqlBinaryReader_NamespaceDecl * __this, String * prefix, String * nsuri, XmlSqlBinaryReader_NamespaceDecl * nextInScope, XmlSqlBinaryReader_NamespaceDecl * prevDecl, int32_t scope, bool implied, MethodInfo * method));
DO_APP_FUNC(0x0013C9A0, void, XmlSqlBinaryReader_SymbolTables_Init, (XmlSqlBinaryReader_SymbolTables__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01714270, void, XmlSqlBinaryReader_NestedBinXml__ctor, (XmlSqlBinaryReader_NestedBinXml * __this, XmlSqlBinaryReader_SymbolTables symbolTables, int32_t docState, XmlSqlBinaryReader_NestedBinXml * next, MethodInfo * method));
DO_APP_FUNC(0x021E7820, void, BitStack__ctor, (BitStack * __this, MethodInfo * method));
DO_APP_FUNC(0x021E7830, void, BitStack_PushBit, (BitStack * __this, bool bit, MethodInfo * method));
DO_APP_FUNC(0x021E7980, bool, BitStack_PopBit, (BitStack * __this, MethodInfo * method));
DO_APP_FUNC(0x021E79F0, bool, BitStack_PeekBit, (BitStack * __this, MethodInfo * method));
DO_APP_FUNC(0x021E7A00, void, BitStack_PushCurr, (BitStack * __this, MethodInfo * method));
DO_APP_FUNC(0x021E7B20, void, BitStack_PopCurr, (BitStack * __this, MethodInfo * method));
DO_APP_FUNC(0x021E7B70, int32_t, Bits_Count, (uint32_t num, MethodInfo * method));
DO_APP_FUNC(0x021E7C60, int32_t, Bits_LeastPosition, (uint32_t num, MethodInfo * method));
DO_APP_FUNC(0x021E7E00, void, Bits__cctor, (MethodInfo * method));
DO_APP_FUNC(0x021E7EE0, void, ByteStack__ctor, (ByteStack * __this, int32_t growthRate, MethodInfo * method));
DO_APP_FUNC(0x021E7F80, void, ByteStack_Push, (ByteStack * __this, uint8_t data, MethodInfo * method));
DO_APP_FUNC(0x021E8090, uint8_t, ByteStack_Pop, (ByteStack * __this, MethodInfo * method));
DO_APP_FUNC(0x021E7500, bool, BinaryCompatibility_1_get_TargetsAtLeast_Desktop_V4_5_2, (MethodInfo * method));
DO_APP_FUNC(0x021E75A0, bool, BinaryCompatibility_1_RunningOnCheck, (String * propertyName, MethodInfo * method));
DO_APP_FUNC(0x021E7790, void, BinaryCompatibility_1__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, CharEntityEncoderFallback__ctor, (CharEntityEncoderFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x021E80E0, EncoderFallbackBuffer *, CharEntityEncoderFallback_CreateFallbackBuffer, (CharEntityEncoderFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x00ADC4A0, int32_t, CharEntityEncoderFallback_get_MaxCharCount, (CharEntityEncoderFallback * __this, MethodInfo * method));
DO_APP_FUNC(0x00654960, void, CharEntityEncoderFallback_set_StartOffset, (CharEntityEncoderFallback * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x021E82B0, void, CharEntityEncoderFallback_Reset, (CharEntityEncoderFallback * __this, Int32__Array * textContentMarks, int32_t endMarkPos, MethodInfo * method));
DO_APP_FUNC(0x021E82C0, bool, CharEntityEncoderFallback_CanReplaceAt, (CharEntityEncoderFallback * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x021E8320, void, CharEntityEncoderFallbackBuffer__ctor, (CharEntityEncoderFallbackBuffer * __this, CharEntityEncoderFallback * parent, MethodInfo * method));
DO_APP_FUNC(0x021E83C0, bool, CharEntityEncoderFallbackBuffer_Fallback, (CharEntityEncoderFallbackBuffer * __this, uint16_t charUnknown, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x021E87D0, bool, CharEntityEncoderFallbackBuffer_Fallback_1, (CharEntityEncoderFallbackBuffer * __this, uint16_t charUnknownHigh, uint16_t charUnknownLow, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x021E8C50, uint16_t, CharEntityEncoderFallbackBuffer_GetNextChar, (CharEntityEncoderFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x021E8CA0, bool, CharEntityEncoderFallbackBuffer_MovePrevious, (CharEntityEncoderFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x021E8CC0, int32_t, CharEntityEncoderFallbackBuffer_get_Remaining, (CharEntityEncoderFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x021E8CF0, void, CharEntityEncoderFallbackBuffer_Reset, (CharEntityEncoderFallbackBuffer * __this, MethodInfo * method));
DO_APP_FUNC(0x021E8D00, int32_t, CharEntityEncoderFallbackBuffer_SurrogateCharToUtf32, (CharEntityEncoderFallbackBuffer * __this, uint16_t highSurrogate, uint16_t lowSurrogate, MethodInfo * method));
DO_APP_FUNC(0x021F89F0, void, HtmlEncodedRawTextWriter__ctor, (HtmlEncodedRawTextWriter * __this, TextWriter * writer, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x021F8A20, void, HtmlEncodedRawTextWriter__ctor_1, (HtmlEncodedRawTextWriter * __this, Stream * stream, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, HtmlEncodedRawTextWriter_WriteXmlDeclaration, (HtmlEncodedRawTextWriter * __this, XmlStandalone__Enum standalone, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, HtmlEncodedRawTextWriter_WriteXmlDeclaration_1, (HtmlEncodedRawTextWriter * __this, String * xmldecl, MethodInfo * method));
DO_APP_FUNC(0x021F8A50, void, HtmlEncodedRawTextWriter_WriteDocType, (HtmlEncodedRawTextWriter * __this, String * name, String * pubid, String * sysid, String * subset, MethodInfo * method));
DO_APP_FUNC(0x021F8E60, void, HtmlEncodedRawTextWriter_WriteStartElement, (HtmlEncodedRawTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x021F9020, void, HtmlEncodedRawTextWriter_StartElementContent, (HtmlEncodedRawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x021F9090, void, HtmlEncodedRawTextWriter_WriteEndElement, (HtmlEncodedRawTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x021F9260, void, HtmlEncodedRawTextWriter_WriteFullEndElement, (HtmlEncodedRawTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x021F9430, void, HtmlEncodedRawTextWriter_WriteStartAttribute, (HtmlEncodedRawTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x021F9670, void, HtmlEncodedRawTextWriter_WriteEndAttribute, (HtmlEncodedRawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x021F9720, void, HtmlEncodedRawTextWriter_WriteProcessingInstruction, (HtmlEncodedRawTextWriter * __this, String * target, String * text, MethodInfo * method));
DO_APP_FUNC(0x021F98D0, void, HtmlEncodedRawTextWriter_WriteString, (HtmlEncodedRawTextWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x021F99C0, void, HtmlEncodedRawTextWriter_WriteEntityRef, (HtmlEncodedRawTextWriter * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x021F9A30, void, HtmlEncodedRawTextWriter_WriteCharEntity, (HtmlEncodedRawTextWriter * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x021F9AA0, void, HtmlEncodedRawTextWriter_WriteSurrogateCharEntity, (HtmlEncodedRawTextWriter * __this, uint16_t lowChar, uint16_t highChar, MethodInfo * method));
DO_APP_FUNC(0x01DB1D60, void, HtmlEncodedRawTextWriter_WriteChars, (HtmlEncodedRawTextWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x021F9B10, void, HtmlEncodedRawTextWriter_Init, (HtmlEncodedRawTextWriter * __this, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x021F9EC0, void, HtmlEncodedRawTextWriter_WriteMetaElement, (HtmlEncodedRawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x021FA080, void, HtmlEncodedRawTextWriter_WriteHtmlElementTextBlock, (HtmlEncodedRawTextWriter * __this, uint16_t * pSrc, uint16_t * pSrcEnd, MethodInfo * method));
DO_APP_FUNC(0x021FA0A0, void, HtmlEncodedRawTextWriter_WriteHtmlAttributeTextBlock, (HtmlEncodedRawTextWriter * __this, uint16_t * pSrc, uint16_t * pSrcEnd, MethodInfo * method));
DO_APP_FUNC(0x021FA0E0, void, HtmlEncodedRawTextWriter_WriteHtmlAttributeText, (HtmlEncodedRawTextWriter * __this, uint16_t * pSrc, uint16_t * pSrcEnd, MethodInfo * method));
DO_APP_FUNC(0x021FA4A0, void, HtmlEncodedRawTextWriter_WriteUriAttributeText, (HtmlEncodedRawTextWriter * __this, uint16_t * pSrc, uint16_t * pSrcEnd, MethodInfo * method));
DO_APP_FUNC(0x021FA920, void, HtmlEncodedRawTextWriter_OutputRestAmps, (HtmlEncodedRawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x021FAA40, void, HtmlEncodedRawTextWriterIndent__ctor, (HtmlEncodedRawTextWriterIndent * __this, TextWriter * writer, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x021FAAA0, void, HtmlEncodedRawTextWriterIndent__ctor_1, (HtmlEncodedRawTextWriterIndent * __this, Stream * stream, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x021FAB00, void, HtmlEncodedRawTextWriterIndent_WriteDocType, (HtmlEncodedRawTextWriterIndent * __this, String * name, String * pubid, String * sysid, String * subset, MethodInfo * method));
DO_APP_FUNC(0x021FAB30, void, HtmlEncodedRawTextWriterIndent_WriteStartElement, (HtmlEncodedRawTextWriterIndent * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x021FADC0, void, HtmlEncodedRawTextWriterIndent_StartElementContent, (HtmlEncodedRawTextWriterIndent * __this, MethodInfo * method));
DO_APP_FUNC(0x021FAE50, void, HtmlEncodedRawTextWriterIndent_WriteEndElement, (HtmlEncodedRawTextWriterIndent * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x021FAEF0, void, HtmlEncodedRawTextWriterIndent_WriteStartAttribute, (HtmlEncodedRawTextWriterIndent * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x021FAF90, void, HtmlEncodedRawTextWriterIndent_FlushBuffer, (HtmlEncodedRawTextWriterIndent * __this, MethodInfo * method));
DO_APP_FUNC(0x021FAFB0, void, HtmlEncodedRawTextWriterIndent_Init, (HtmlEncodedRawTextWriterIndent * __this, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x021FAFF0, void, HtmlEncodedRawTextWriterIndent_WriteIndent, (HtmlEncodedRawTextWriterIndent * __this, MethodInfo * method));
DO_APP_FUNC(0x0199B5B0, void, HtmlTernaryTree__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0199B690, void, HtmlUtf8RawTextWriter__ctor, (HtmlUtf8RawTextWriter * __this, Stream * stream, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, HtmlUtf8RawTextWriter_WriteXmlDeclaration, (HtmlUtf8RawTextWriter * __this, XmlStandalone__Enum standalone, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, HtmlUtf8RawTextWriter_WriteXmlDeclaration_1, (HtmlUtf8RawTextWriter * __this, String * xmldecl, MethodInfo * method));
DO_APP_FUNC(0x0199B6C0, void, HtmlUtf8RawTextWriter_WriteDocType, (HtmlUtf8RawTextWriter * __this, String * name, String * pubid, String * sysid, String * subset, MethodInfo * method));
DO_APP_FUNC(0x0199BA90, void, HtmlUtf8RawTextWriter_WriteStartElement, (HtmlUtf8RawTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0199BC30, void, HtmlUtf8RawTextWriter_StartElementContent, (HtmlUtf8RawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0199BC90, void, HtmlUtf8RawTextWriter_WriteEndElement, (HtmlUtf8RawTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0199BE20, void, HtmlUtf8RawTextWriter_WriteFullEndElement, (HtmlUtf8RawTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0199BFB0, void, HtmlUtf8RawTextWriter_WriteStartAttribute, (HtmlUtf8RawTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0199C1C0, void, HtmlUtf8RawTextWriter_WriteEndAttribute, (HtmlUtf8RawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0199C240, void, HtmlUtf8RawTextWriter_WriteProcessingInstruction, (HtmlUtf8RawTextWriter * __this, String * target, String * text, MethodInfo * method));
DO_APP_FUNC(0x0199C3B0, void, HtmlUtf8RawTextWriter_WriteString, (HtmlUtf8RawTextWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x0199C450, void, HtmlUtf8RawTextWriter_WriteEntityRef, (HtmlUtf8RawTextWriter * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x0199C4C0, void, HtmlUtf8RawTextWriter_WriteCharEntity, (HtmlUtf8RawTextWriter * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x0199C530, void, HtmlUtf8RawTextWriter_WriteSurrogateCharEntity, (HtmlUtf8RawTextWriter * __this, uint16_t lowChar, uint16_t highChar, MethodInfo * method));
DO_APP_FUNC(0x0199C5A0, void, HtmlUtf8RawTextWriter_WriteChars, (HtmlUtf8RawTextWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0199C600, void, HtmlUtf8RawTextWriter_Init, (HtmlUtf8RawTextWriter * __this, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x0199C9B0, void, HtmlUtf8RawTextWriter_WriteMetaElement, (HtmlUtf8RawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0199CB70, void, HtmlUtf8RawTextWriter_WriteHtmlElementTextBlock, (HtmlUtf8RawTextWriter * __this, uint16_t * pSrc, uint16_t * pSrcEnd, MethodInfo * method));
DO_APP_FUNC(0x0199CB90, void, HtmlUtf8RawTextWriter_WriteHtmlAttributeTextBlock, (HtmlUtf8RawTextWriter * __this, uint16_t * pSrc, uint16_t * pSrcEnd, MethodInfo * method));
DO_APP_FUNC(0x0199CBD0, void, HtmlUtf8RawTextWriter_WriteHtmlAttributeText, (HtmlUtf8RawTextWriter * __this, uint16_t * pSrc, uint16_t * pSrcEnd, MethodInfo * method));
DO_APP_FUNC(0x0199CED0, void, HtmlUtf8RawTextWriter_WriteUriAttributeText, (HtmlUtf8RawTextWriter * __this, uint16_t * pSrc, uint16_t * pSrcEnd, MethodInfo * method));
DO_APP_FUNC(0x0199D2F0, void, HtmlUtf8RawTextWriter_OutputRestAmps, (HtmlUtf8RawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0199D3E0, void, HtmlUtf8RawTextWriterIndent__ctor, (HtmlUtf8RawTextWriterIndent * __this, Stream * stream, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x0199D440, void, HtmlUtf8RawTextWriterIndent_WriteDocType, (HtmlUtf8RawTextWriterIndent * __this, String * name, String * pubid, String * sysid, String * subset, MethodInfo * method));
DO_APP_FUNC(0x0199D470, void, HtmlUtf8RawTextWriterIndent_WriteStartElement, (HtmlUtf8RawTextWriterIndent * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0199D6D0, void, HtmlUtf8RawTextWriterIndent_StartElementContent, (HtmlUtf8RawTextWriterIndent * __this, MethodInfo * method));
DO_APP_FUNC(0x0199D760, void, HtmlUtf8RawTextWriterIndent_WriteEndElement, (HtmlUtf8RawTextWriterIndent * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0199D800, void, HtmlUtf8RawTextWriterIndent_WriteStartAttribute, (HtmlUtf8RawTextWriterIndent * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0199D8A0, void, HtmlUtf8RawTextWriterIndent_FlushBuffer, (HtmlUtf8RawTextWriterIndent * __this, MethodInfo * method));
DO_APP_FUNC(0x0199D8C0, void, HtmlUtf8RawTextWriterIndent_Init, (HtmlUtf8RawTextWriterIndent * __this, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x0199D900, void, HtmlUtf8RawTextWriterIndent_WriteIndent, (HtmlUtf8RawTextWriterIndent * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, OnRemoveWriter__ctor, (OnRemoveWriter * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x00673B90, void, OnRemoveWriter_Invoke, (OnRemoveWriter * __this, XmlRawWriter * writer, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, OnRemoveWriter_BeginInvoke, (OnRemoveWriter * __this, XmlRawWriter * writer, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, OnRemoveWriter_EndInvoke, (OnRemoveWriter * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, IncrementalReadDecoder__ctor, (IncrementalReadDecoder * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, IncrementalReadDummyDecoder_get_IsFull, (IncrementalReadDummyDecoder * __this, MethodInfo * method));
DO_APP_FUNC(0x0199D990, int32_t, IncrementalReadDummyDecoder_Decode, (IncrementalReadDummyDecoder * __this, Char__Array * chars, int32_t startPos, int32_t len, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, IncrementalReadDummyDecoder__ctor, (IncrementalReadDummyDecoder * __this, MethodInfo * method));
DO_APP_FUNC(0x0199E650, void, QueryOutputWriter__ctor, (QueryOutputWriter * __this, XmlRawWriter * writer, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x0199EB10, void, QueryOutputWriter_set_NamespaceResolver, (QueryOutputWriter * __this, IXmlNamespaceResolver * value, MethodInfo * method));
DO_APP_FUNC(0x0199EB40, void, QueryOutputWriter_WriteXmlDeclaration, (QueryOutputWriter * __this, XmlStandalone__Enum standalone, MethodInfo * method));
DO_APP_FUNC(0x0199EB70, void, QueryOutputWriter_WriteXmlDeclaration_1, (QueryOutputWriter * __this, String * xmldecl, MethodInfo * method));
DO_APP_FUNC(0x0199EBA0, void, QueryOutputWriter_WriteDocType, (QueryOutputWriter * __this, String * name, String * pubid, String * sysid, String * subset, MethodInfo * method));
DO_APP_FUNC(0x0199EBE0, void, QueryOutputWriter_WriteStartElement, (QueryOutputWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0199EE10, void, QueryOutputWriter_WriteEndElement, (QueryOutputWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0199EE80, void, QueryOutputWriter_WriteFullEndElement, (QueryOutputWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0195E8E0, void, QueryOutputWriter_StartElementContent, (QueryOutputWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0199EEF0, void, QueryOutputWriter_WriteStartAttribute, (QueryOutputWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0199EF30, void, QueryOutputWriter_WriteEndAttribute, (QueryOutputWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0199EF60, void, QueryOutputWriter_WriteNamespaceDeclaration, (QueryOutputWriter * __this, String * prefix, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0195E9E0, bool, QueryOutputWriter_get_SupportsNamespaceDeclarationInChunks, (QueryOutputWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0199EF90, void, QueryOutputWriter_WriteStartNamespaceDeclaration, (QueryOutputWriter * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x0195EA70, void, QueryOutputWriter_WriteEndNamespaceDeclaration, (QueryOutputWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0199EFC0, void, QueryOutputWriter_WriteCData, (QueryOutputWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x0199EFF0, void, QueryOutputWriter_WriteComment, (QueryOutputWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x0199F020, void, QueryOutputWriter_WriteProcessingInstruction, (QueryOutputWriter * __this, String * name, String * text, MethodInfo * method));
DO_APP_FUNC(0x0199F050, void, QueryOutputWriter_WriteWhitespace, (QueryOutputWriter * __this, String * ws, MethodInfo * method));
DO_APP_FUNC(0x0199F0D0, void, QueryOutputWriter_WriteString, (QueryOutputWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x0199F150, void, QueryOutputWriter_WriteChars, (QueryOutputWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0199F1F0, void, QueryOutputWriter_WriteEntityRef, (QueryOutputWriter * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x0199F220, void, QueryOutputWriter_WriteCharEntity, (QueryOutputWriter * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x0199F250, void, QueryOutputWriter_WriteSurrogateCharEntity, (QueryOutputWriter * __this, uint16_t lowChar, uint16_t highChar, MethodInfo * method));
DO_APP_FUNC(0x0199F280, void, QueryOutputWriter_WriteRaw, (QueryOutputWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0199F320, void, QueryOutputWriter_WriteRaw_1, (QueryOutputWriter * __this, String * data, MethodInfo * method));
DO_APP_FUNC(0x0199F3A0, void, QueryOutputWriter_Close, (QueryOutputWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0199F4A0, void, QueryOutputWriter_Flush, (QueryOutputWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0199F4D0, bool, QueryOutputWriter_StartCDataSection, (QueryOutputWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0089F980, void, QueryOutputWriter_EndCDataSection, (QueryOutputWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0199F510, void, ReadContentAsBinaryHelper_Finish, (ReadContentAsBinaryHelper * __this, MethodInfo * method));
DO_APP_FUNC(0x0199F7B0, void, ReadContentAsBinaryHelper_Reset, (ReadContentAsBinaryHelper * __this, MethodInfo * method));
DO_APP_FUNC(0x0199F7C0, bool, ReadContentAsBinaryHelper_MoveToNextContentNode, (ReadContentAsBinaryHelper * __this, bool moveIfOnContentNode, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, TernaryTreeReadOnly__ctor, (TernaryTreeReadOnly * __this, Byte__Array * nodeBuffer, MethodInfo * method));
DO_APP_FUNC(0x01950650, uint8_t, TernaryTreeReadOnly_FindCaseInsensitiveString, (TernaryTreeReadOnly * __this, String * stringToFind, MethodInfo * method));
DO_APP_FUNC(0x01C8A800, void, SecureStringHasher__ctor, (SecureStringHasher * __this, MethodInfo * method));
DO_APP_FUNC(0x01C8A850, bool, SecureStringHasher_Equals, (SecureStringHasher * __this, String * x, String * y, MethodInfo * method));
DO_APP_FUNC(0x01C8A910, int32_t, SecureStringHasher_GetHashCode, (SecureStringHasher * __this, String * key, MethodInfo * method));
DO_APP_FUNC(0x01C8AA00, int32_t, SecureStringHasher_GetHashCodeOfString, (String * key, int32_t sLen, int64_t additionalEntropy, MethodInfo * method));
DO_APP_FUNC(0x01C8AB30, SecureStringHasher_HashCodeOfStringDelegate *, SecureStringHasher_GetHashCodeDelegate, (MethodInfo * method));
DO_APP_FUNC(0x00611810, void, SecureStringHasher_HashCodeOfStringDelegate__ctor, (SecureStringHasher_HashCodeOfStringDelegate * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01700900, int32_t, SecureStringHasher_HashCodeOfStringDelegate_Invoke, (SecureStringHasher_HashCodeOfStringDelegate * __this, String * s, int32_t sLen, int64_t additionalEntropy, MethodInfo * method));
DO_APP_FUNC(0x01C8AD70, IAsyncResult *, SecureStringHasher_HashCodeOfStringDelegate_BeginInvoke, (SecureStringHasher_HashCodeOfStringDelegate * __this, String * s, int32_t sLen, int64_t additionalEntropy, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00F550D0, int32_t, SecureStringHasher_HashCodeOfStringDelegate_EndInvoke, (SecureStringHasher_HashCodeOfStringDelegate * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x019507C0, void, TextEncodedRawTextWriter__ctor, (TextEncodedRawTextWriter * __this, TextWriter * writer, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x019507D0, void, TextEncodedRawTextWriter__ctor_1, (TextEncodedRawTextWriter * __this, Stream * stream, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextEncodedRawTextWriter_WriteXmlDeclaration, (TextEncodedRawTextWriter * __this, XmlStandalone__Enum standalone, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextEncodedRawTextWriter_WriteXmlDeclaration_1, (TextEncodedRawTextWriter * __this, String * xmldecl, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextEncodedRawTextWriter_WriteDocType, (TextEncodedRawTextWriter * __this, String * name, String * pubid, String * sysid, String * subset, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextEncodedRawTextWriter_WriteStartElement, (TextEncodedRawTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextEncodedRawTextWriter_WriteEndElement, (TextEncodedRawTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextEncodedRawTextWriter_WriteFullEndElement, (TextEncodedRawTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextEncodedRawTextWriter_StartElementContent, (TextEncodedRawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x019507E0, void, TextEncodedRawTextWriter_WriteStartAttribute, (TextEncodedRawTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x019507F0, void, TextEncodedRawTextWriter_WriteEndAttribute, (TextEncodedRawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextEncodedRawTextWriter_WriteNamespaceDeclaration, (TextEncodedRawTextWriter * __this, String * prefix, String * ns, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, TextEncodedRawTextWriter_get_SupportsNamespaceDeclarationInChunks, (TextEncodedRawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01950800, void, TextEncodedRawTextWriter_WriteCData, (TextEncodedRawTextWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextEncodedRawTextWriter_WriteComment, (TextEncodedRawTextWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextEncodedRawTextWriter_WriteProcessingInstruction, (TextEncodedRawTextWriter * __this, String * name, String * text, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextEncodedRawTextWriter_WriteEntityRef, (TextEncodedRawTextWriter * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextEncodedRawTextWriter_WriteCharEntity, (TextEncodedRawTextWriter * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextEncodedRawTextWriter_WriteSurrogateCharEntity, (TextEncodedRawTextWriter * __this, uint16_t lowChar, uint16_t highChar, MethodInfo * method));
DO_APP_FUNC(0x01950870, void, TextEncodedRawTextWriter_WriteWhitespace, (TextEncodedRawTextWriter * __this, String * ws, MethodInfo * method));
DO_APP_FUNC(0x01950870, void, TextEncodedRawTextWriter_WriteString, (TextEncodedRawTextWriter * __this, String * textBlock, MethodInfo * method));
DO_APP_FUNC(0x01950880, void, TextEncodedRawTextWriter_WriteChars, (TextEncodedRawTextWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01950880, void, TextEncodedRawTextWriter_WriteRaw, (TextEncodedRawTextWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01950870, void, TextEncodedRawTextWriter_WriteRaw_1, (TextEncodedRawTextWriter * __this, String * data, MethodInfo * method));
DO_APP_FUNC(0x019508A0, void, TextUtf8RawTextWriter__ctor, (TextUtf8RawTextWriter * __this, Stream * stream, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextUtf8RawTextWriter_WriteXmlDeclaration, (TextUtf8RawTextWriter * __this, XmlStandalone__Enum standalone, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextUtf8RawTextWriter_WriteXmlDeclaration_1, (TextUtf8RawTextWriter * __this, String * xmldecl, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextUtf8RawTextWriter_WriteDocType, (TextUtf8RawTextWriter * __this, String * name, String * pubid, String * sysid, String * subset, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextUtf8RawTextWriter_WriteStartElement, (TextUtf8RawTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextUtf8RawTextWriter_WriteEndElement, (TextUtf8RawTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextUtf8RawTextWriter_WriteFullEndElement, (TextUtf8RawTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextUtf8RawTextWriter_StartElementContent, (TextUtf8RawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x019507E0, void, TextUtf8RawTextWriter_WriteStartAttribute, (TextUtf8RawTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x019507F0, void, TextUtf8RawTextWriter_WriteEndAttribute, (TextUtf8RawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextUtf8RawTextWriter_WriteNamespaceDeclaration, (TextUtf8RawTextWriter * __this, String * prefix, String * ns, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, TextUtf8RawTextWriter_get_SupportsNamespaceDeclarationInChunks, (TextUtf8RawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x019508B0, void, TextUtf8RawTextWriter_WriteCData, (TextUtf8RawTextWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextUtf8RawTextWriter_WriteComment, (TextUtf8RawTextWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextUtf8RawTextWriter_WriteProcessingInstruction, (TextUtf8RawTextWriter * __this, String * name, String * text, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextUtf8RawTextWriter_WriteEntityRef, (TextUtf8RawTextWriter * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextUtf8RawTextWriter_WriteCharEntity, (TextUtf8RawTextWriter * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, TextUtf8RawTextWriter_WriteSurrogateCharEntity, (TextUtf8RawTextWriter * __this, uint16_t lowChar, uint16_t highChar, MethodInfo * method));
DO_APP_FUNC(0x019508F0, void, TextUtf8RawTextWriter_WriteWhitespace, (TextUtf8RawTextWriter * __this, String * ws, MethodInfo * method));
DO_APP_FUNC(0x019508F0, void, TextUtf8RawTextWriter_WriteString, (TextUtf8RawTextWriter * __this, String * textBlock, MethodInfo * method));
DO_APP_FUNC(0x01950940, void, TextUtf8RawTextWriter_WriteChars, (TextUtf8RawTextWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01950940, void, TextUtf8RawTextWriter_WriteRaw, (TextUtf8RawTextWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x019508F0, void, TextUtf8RawTextWriter_WriteRaw_1, (TextUtf8RawTextWriter * __this, String * data, MethodInfo * method));
DO_APP_FUNC(0x01954890, void, ValidatingReaderNodeData__ctor, (ValidatingReaderNodeData * __this, MethodInfo * method));
DO_APP_FUNC(0x019548A0, void, ValidatingReaderNodeData__ctor_1, (ValidatingReaderNodeData * __this, XmlNodeType__Enum nodeType, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, ValidatingReaderNodeData_get_LocalName, (ValidatingReaderNodeData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, ValidatingReaderNodeData_set_LocalName, (ValidatingReaderNodeData * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, ValidatingReaderNodeData_get_Namespace, (ValidatingReaderNodeData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, ValidatingReaderNodeData_set_Namespace, (ValidatingReaderNodeData * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, ValidatingReaderNodeData_get_Prefix, (ValidatingReaderNodeData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, ValidatingReaderNodeData_set_Prefix, (ValidatingReaderNodeData * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x019548B0, String *, ValidatingReaderNodeData_GetAtomizedNameWPrefix, (ValidatingReaderNodeData * __this, XmlNameTable * nameTable, MethodInfo * method));
DO_APP_FUNC(0x004E57A0, int32_t, ValidatingReaderNodeData_get_Depth, (ValidatingReaderNodeData * __this, MethodInfo * method));
DO_APP_FUNC(0x004E57B0, void, ValidatingReaderNodeData_set_Depth, (ValidatingReaderNodeData * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, ValidatingReaderNodeData_get_RawValue, (ValidatingReaderNodeData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9A0, void, ValidatingReaderNodeData_set_RawValue, (ValidatingReaderNodeData * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, String *, ValidatingReaderNodeData_get_OriginalStringValue, (ValidatingReaderNodeData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD490, XmlNodeType__Enum, ValidatingReaderNodeData_get_NodeType, (ValidatingReaderNodeData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD4A0, void, ValidatingReaderNodeData_set_NodeType, (ValidatingReaderNodeData * __this, XmlNodeType__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, AttributePSVIInfo *, ValidatingReaderNodeData_get_AttInfo, (ValidatingReaderNodeData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBA00, void, ValidatingReaderNodeData_set_AttInfo, (ValidatingReaderNodeData * __this, AttributePSVIInfo * value, MethodInfo * method));
DO_APP_FUNC(0x003FDCE0, int32_t, ValidatingReaderNodeData_get_LineNumber, (ValidatingReaderNodeData * __this, MethodInfo * method));
DO_APP_FUNC(0x004C6660, int32_t, ValidatingReaderNodeData_get_LinePosition, (ValidatingReaderNodeData * __this, MethodInfo * method));
DO_APP_FUNC(0x019549A0, void, ValidatingReaderNodeData_Clear, (ValidatingReaderNodeData * __this, XmlNodeType__Enum nodeType, MethodInfo * method));
DO_APP_FUNC(0x01954AA0, void, ValidatingReaderNodeData_SetLineInfo, (ValidatingReaderNodeData * __this, int32_t lineNo, int32_t linePos, MethodInfo * method));
DO_APP_FUNC(0x01954AB0, void, ValidatingReaderNodeData_SetLineInfo_1, (ValidatingReaderNodeData * __this, IXmlLineInfo * lineInfo, MethodInfo * method));
DO_APP_FUNC(0x01954B70, void, ValidatingReaderNodeData_SetItemData, (ValidatingReaderNodeData * __this, String * localName, String * prefix, String * ns, int32_t depth, MethodInfo * method));
DO_APP_FUNC(0x01954C30, void, ValidatingReaderNodeData_SetItemData_1, (ValidatingReaderNodeData * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x00D09510, void, ValidatingReaderNodeData_SetItemData_2, (ValidatingReaderNodeData * __this, String * value, String * originalStringValue, MethodInfo * method));
DO_APP_FUNC(0x002FA280, XmlReader *, XmlAsyncCheckReader_get_CoreReader, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01957F10, XmlAsyncCheckReader *, XmlAsyncCheckReader_CreateAsyncCheckWrapper, (XmlReader * reader, MethodInfo * method));
DO_APP_FUNC(0x01958530, void, XmlAsyncCheckReader__ctor, (XmlAsyncCheckReader * __this, XmlReader * reader, MethodInfo * method));
DO_APP_FUNC(0x01958610, void, XmlAsyncCheckReader_CheckAsync, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x019586F0, XmlReaderSettings *, XmlAsyncCheckReader_get_Settings, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01958900, XmlNodeType__Enum, XmlAsyncCheckReader_get_NodeType, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01958940, String *, XmlAsyncCheckReader_get_Name, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01958980, String *, XmlAsyncCheckReader_get_LocalName, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x019589C0, String *, XmlAsyncCheckReader_get_NamespaceURI, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01958A00, String *, XmlAsyncCheckReader_get_Prefix, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01958A40, String *, XmlAsyncCheckReader_get_Value, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01958A80, int32_t, XmlAsyncCheckReader_get_Depth, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01958AC0, String *, XmlAsyncCheckReader_get_BaseURI, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01958B00, bool, XmlAsyncCheckReader_get_IsEmptyElement, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01958B40, bool, XmlAsyncCheckReader_get_IsDefault, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01958B80, uint16_t, XmlAsyncCheckReader_get_QuoteChar, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01958BC0, XmlSpace__Enum, XmlAsyncCheckReader_get_XmlSpace, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01958C00, String *, XmlAsyncCheckReader_get_XmlLang, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01958C40, IXmlSchemaInfo *, XmlAsyncCheckReader_get_SchemaInfo, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01958C80, Type *, XmlAsyncCheckReader_get_ValueType, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01958CC0, int32_t, XmlAsyncCheckReader_get_AttributeCount, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01958D00, String *, XmlAsyncCheckReader_GetAttribute, (XmlAsyncCheckReader * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01958D50, String *, XmlAsyncCheckReader_GetAttribute_1, (XmlAsyncCheckReader * __this, String * name, String * namespaceURI, MethodInfo * method));
DO_APP_FUNC(0x01958DB0, String *, XmlAsyncCheckReader_GetAttribute_2, (XmlAsyncCheckReader * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x01958E00, bool, XmlAsyncCheckReader_MoveToAttribute, (XmlAsyncCheckReader * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01958E50, void, XmlAsyncCheckReader_MoveToAttribute_1, (XmlAsyncCheckReader * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x01958EA0, bool, XmlAsyncCheckReader_MoveToFirstAttribute, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01958EE0, bool, XmlAsyncCheckReader_MoveToNextAttribute, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01958F20, bool, XmlAsyncCheckReader_MoveToElement, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01958F60, bool, XmlAsyncCheckReader_ReadAttributeValue, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01958FA0, bool, XmlAsyncCheckReader_Read, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01958FE0, bool, XmlAsyncCheckReader_get_EOF, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01959020, void, XmlAsyncCheckReader_Close, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01959060, ReadState__Enum_1, XmlAsyncCheckReader_get_ReadState, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x019590A0, void, XmlAsyncCheckReader_Skip, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x019590E0, XmlNameTable *, XmlAsyncCheckReader_get_NameTable, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01959120, String *, XmlAsyncCheckReader_LookupNamespace, (XmlAsyncCheckReader * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01959170, bool, XmlAsyncCheckReader_get_CanResolveEntity, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x019591B0, void, XmlAsyncCheckReader_ResolveEntity, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x019591F0, bool, XmlAsyncCheckReader_get_CanReadValueChunk, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01959230, int32_t, XmlAsyncCheckReader_ReadValueChunk, (XmlAsyncCheckReader * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x019592A0, String *, XmlAsyncCheckReader_ReadString, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x019592E0, XmlNodeType__Enum, XmlAsyncCheckReader_MoveToContent, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01959320, void, XmlAsyncCheckReader_ReadStartElement, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01959360, String *, XmlAsyncCheckReader_ReadElementString, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x019593A0, void, XmlAsyncCheckReader_ReadEndElement, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x019593E0, bool, XmlAsyncCheckReader_IsStartElement, (XmlAsyncCheckReader * __this, String * localname, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01959440, String *, XmlAsyncCheckReader_ReadInnerXml, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01959480, bool, XmlAsyncCheckReader_get_HasAttributes, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x019594C0, void, XmlAsyncCheckReader_Dispose, (XmlAsyncCheckReader * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01959500, XmlNamespaceManager *, XmlAsyncCheckReader_get_NamespaceManager, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01959540, IDtdInfo *, XmlAsyncCheckReader_get_DtdInfo, (XmlAsyncCheckReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01959F90, void, XmlAsyncCheckReaderWithNS__ctor, (XmlAsyncCheckReaderWithNS * __this, XmlReader * reader, MethodInfo * method));
DO_APP_FUNC(0x0195A060, IDictionary_2_System_String_System_String_ *, XmlAsyncCheckReaderWithNS_System_Xml_IXmlNamespaceResolver_GetNamespacesInScope, (XmlAsyncCheckReaderWithNS * __this, XmlNamespaceScope__Enum scope, MethodInfo * method));
DO_APP_FUNC(0x0195A100, String *, XmlAsyncCheckReaderWithNS_System_Xml_IXmlNamespaceResolver_LookupNamespace, (XmlAsyncCheckReaderWithNS * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x0195A1B0, String *, XmlAsyncCheckReaderWithNS_System_Xml_IXmlNamespaceResolver_LookupPrefix, (XmlAsyncCheckReaderWithNS * __this, String * namespaceName, MethodInfo * method));
DO_APP_FUNC(0x01959580, void, XmlAsyncCheckReaderWithLineInfo__ctor, (XmlAsyncCheckReaderWithLineInfo * __this, XmlReader * reader, MethodInfo * method));
DO_APP_FUNC(0x01959650, bool, XmlAsyncCheckReaderWithLineInfo_HasLineInfo, (XmlAsyncCheckReaderWithLineInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x019596E0, int32_t, XmlAsyncCheckReaderWithLineInfo_get_LineNumber, (XmlAsyncCheckReaderWithLineInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01959770, int32_t, XmlAsyncCheckReaderWithLineInfo_get_LinePosition, (XmlAsyncCheckReaderWithLineInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01959800, void, XmlAsyncCheckReaderWithLineInfoNS__ctor, (XmlAsyncCheckReaderWithLineInfoNS * __this, XmlReader * reader, MethodInfo * method));
DO_APP_FUNC(0x019598D0, IDictionary_2_System_String_System_String_ *, XmlAsyncCheckReaderWithLineInfoNS_System_Xml_IXmlNamespaceResolver_GetNamespacesInScope, (XmlAsyncCheckReaderWithLineInfoNS * __this, XmlNamespaceScope__Enum scope, MethodInfo * method));
DO_APP_FUNC(0x01959970, String *, XmlAsyncCheckReaderWithLineInfoNS_System_Xml_IXmlNamespaceResolver_LookupNamespace, (XmlAsyncCheckReaderWithLineInfoNS * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01959A20, String *, XmlAsyncCheckReaderWithLineInfoNS_System_Xml_IXmlNamespaceResolver_LookupPrefix, (XmlAsyncCheckReaderWithLineInfoNS * __this, String * namespaceName, MethodInfo * method));
DO_APP_FUNC(0x01959AD0, void, XmlAsyncCheckReaderWithLineInfoNSSchema__ctor, (XmlAsyncCheckReaderWithLineInfoNSSchema * __this, XmlReader * reader, MethodInfo * method));
DO_APP_FUNC(0x01959BA0, XmlSchemaValidity__Enum, XmlAsyncCheckReaderWithLineInfoNSSchema_System_Xml_Schema_IXmlSchemaInfo_get_Validity, (XmlAsyncCheckReaderWithLineInfoNSSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x01959C30, bool, XmlAsyncCheckReaderWithLineInfoNSSchema_System_Xml_Schema_IXmlSchemaInfo_get_IsDefault, (XmlAsyncCheckReaderWithLineInfoNSSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x01959CC0, bool, XmlAsyncCheckReaderWithLineInfoNSSchema_System_Xml_Schema_IXmlSchemaInfo_get_IsNil, (XmlAsyncCheckReaderWithLineInfoNSSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x01959D50, XmlSchemaSimpleType *, XmlAsyncCheckReaderWithLineInfoNSSchema_System_Xml_Schema_IXmlSchemaInfo_get_MemberType, (XmlAsyncCheckReaderWithLineInfoNSSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x01959DE0, XmlSchemaType *, XmlAsyncCheckReaderWithLineInfoNSSchema_System_Xml_Schema_IXmlSchemaInfo_get_SchemaType, (XmlAsyncCheckReaderWithLineInfoNSSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x01959E70, XmlSchemaElement *, XmlAsyncCheckReaderWithLineInfoNSSchema_System_Xml_Schema_IXmlSchemaInfo_get_SchemaElement, (XmlAsyncCheckReaderWithLineInfoNSSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x01959F00, XmlSchemaAttribute *, XmlAsyncCheckReaderWithLineInfoNSSchema_System_Xml_Schema_IXmlSchemaInfo_get_SchemaAttribute, (XmlAsyncCheckReaderWithLineInfoNSSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x0195A260, void, XmlAsyncCheckWriter__ctor, (XmlAsyncCheckWriter * __this, XmlWriter * writer, MethodInfo * method));
DO_APP_FUNC(0x0195A320, void, XmlAsyncCheckWriter_CheckAsync, (XmlAsyncCheckWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0195A400, void, XmlAsyncCheckWriter_WriteStartDocument, (XmlAsyncCheckWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0195A440, void, XmlAsyncCheckWriter_WriteStartDocument_1, (XmlAsyncCheckWriter * __this, bool standalone, MethodInfo * method));
DO_APP_FUNC(0x0195A490, void, XmlAsyncCheckWriter_WriteEndDocument, (XmlAsyncCheckWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0195A4D0, void, XmlAsyncCheckWriter_WriteDocType, (XmlAsyncCheckWriter * __this, String * name, String * pubid, String * sysid, String * subset, MethodInfo * method));
DO_APP_FUNC(0x0195A540, void, XmlAsyncCheckWriter_WriteStartElement, (XmlAsyncCheckWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0195A5B0, void, XmlAsyncCheckWriter_WriteEndElement, (XmlAsyncCheckWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0195A5F0, void, XmlAsyncCheckWriter_WriteFullEndElement, (XmlAsyncCheckWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0195A630, void, XmlAsyncCheckWriter_WriteStartAttribute, (XmlAsyncCheckWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0195A6A0, void, XmlAsyncCheckWriter_WriteEndAttribute, (XmlAsyncCheckWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0195A6E0, void, XmlAsyncCheckWriter_WriteCData, (XmlAsyncCheckWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x0195A730, void, XmlAsyncCheckWriter_WriteComment, (XmlAsyncCheckWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x0195A780, void, XmlAsyncCheckWriter_WriteProcessingInstruction, (XmlAsyncCheckWriter * __this, String * name, String * text, MethodInfo * method));
DO_APP_FUNC(0x0195A7E0, void, XmlAsyncCheckWriter_WriteEntityRef, (XmlAsyncCheckWriter * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x0195A830, void, XmlAsyncCheckWriter_WriteCharEntity, (XmlAsyncCheckWriter * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x0195A880, void, XmlAsyncCheckWriter_WriteWhitespace, (XmlAsyncCheckWriter * __this, String * ws, MethodInfo * method));
DO_APP_FUNC(0x0195A8D0, void, XmlAsyncCheckWriter_WriteString, (XmlAsyncCheckWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x0195A920, void, XmlAsyncCheckWriter_WriteSurrogateCharEntity, (XmlAsyncCheckWriter * __this, uint16_t lowChar, uint16_t highChar, MethodInfo * method));
DO_APP_FUNC(0x0195A980, void, XmlAsyncCheckWriter_WriteChars, (XmlAsyncCheckWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0195A9F0, void, XmlAsyncCheckWriter_WriteRaw, (XmlAsyncCheckWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0195AA60, void, XmlAsyncCheckWriter_WriteRaw_1, (XmlAsyncCheckWriter * __this, String * data, MethodInfo * method));
DO_APP_FUNC(0x0195AAB0, void, XmlAsyncCheckWriter_WriteBase64, (XmlAsyncCheckWriter * __this, Byte__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0195AB20, void, XmlAsyncCheckWriter_WriteBinHex, (XmlAsyncCheckWriter * __this, Byte__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0195AB90, WriteState__Enum, XmlAsyncCheckWriter_get_WriteState, (XmlAsyncCheckWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0195ABD0, void, XmlAsyncCheckWriter_Close, (XmlAsyncCheckWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0195AC10, void, XmlAsyncCheckWriter_Flush, (XmlAsyncCheckWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0195AC50, String *, XmlAsyncCheckWriter_LookupPrefix, (XmlAsyncCheckWriter * __this, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0195ACA0, void, XmlAsyncCheckWriter_WriteValue, (XmlAsyncCheckWriter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0195ACF0, void, XmlAsyncCheckWriter_WriteAttributes, (XmlAsyncCheckWriter * __this, XmlReader * reader, bool defattr, MethodInfo * method));
DO_APP_FUNC(0x0195AD50, void, XmlAsyncCheckWriter_WriteNode, (XmlAsyncCheckWriter * __this, XmlReader * reader, bool defattr, MethodInfo * method));
DO_APP_FUNC(0x0195ADB0, void, XmlAsyncCheckWriter_Dispose, (XmlAsyncCheckWriter * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x0195DDC0, void, XmlAutoDetectWriter__ctor, (XmlAutoDetectWriter * __this, XmlWriterSettings * writerSettings, MethodInfo * method));
DO_APP_FUNC(0x0195DF50, void, XmlAutoDetectWriter__ctor_1, (XmlAutoDetectWriter * __this, TextWriter * textWriter, XmlWriterSettings * writerSettings, MethodInfo * method));
DO_APP_FUNC(0x0195DF80, void, XmlAutoDetectWriter__ctor_2, (XmlAutoDetectWriter * __this, Stream * strm, XmlWriterSettings * writerSettings, MethodInfo * method));
DO_APP_FUNC(0x0195DFB0, void, XmlAutoDetectWriter_WriteDocType, (XmlAutoDetectWriter * __this, String * name, String * pubid, String * sysid, String * subset, MethodInfo * method));
DO_APP_FUNC(0x0195E030, void, XmlAutoDetectWriter_WriteStartElement, (XmlAutoDetectWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0195E1A0, void, XmlAutoDetectWriter_WriteStartAttribute, (XmlAutoDetectWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0195E220, void, XmlAutoDetectWriter_WriteEndAttribute, (XmlAutoDetectWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0195E250, void, XmlAutoDetectWriter_WriteCData, (XmlAutoDetectWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x0195E2B0, void, XmlAutoDetectWriter_WriteComment, (XmlAutoDetectWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x0195E300, void, XmlAutoDetectWriter_WriteProcessingInstruction, (XmlAutoDetectWriter * __this, String * name, String * text, MethodInfo * method));
DO_APP_FUNC(0x0195E350, void, XmlAutoDetectWriter_WriteWhitespace, (XmlAutoDetectWriter * __this, String * ws, MethodInfo * method));
DO_APP_FUNC(0x0195E3A0, void, XmlAutoDetectWriter_WriteString, (XmlAutoDetectWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01701610, void, XmlAutoDetectWriter_WriteChars, (XmlAutoDetectWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0195E400, void, XmlAutoDetectWriter_WriteRaw, (XmlAutoDetectWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0195E440, void, XmlAutoDetectWriter_WriteRaw_1, (XmlAutoDetectWriter * __this, String * data, MethodInfo * method));
DO_APP_FUNC(0x0195E4A0, void, XmlAutoDetectWriter_WriteEntityRef, (XmlAutoDetectWriter * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x0195E500, void, XmlAutoDetectWriter_WriteCharEntity, (XmlAutoDetectWriter * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x0195E560, void, XmlAutoDetectWriter_WriteSurrogateCharEntity, (XmlAutoDetectWriter * __this, uint16_t lowChar, uint16_t highChar, MethodInfo * method));
DO_APP_FUNC(0x0195E5D0, void, XmlAutoDetectWriter_WriteBase64, (XmlAutoDetectWriter * __this, Byte__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0195E650, void, XmlAutoDetectWriter_WriteBinHex, (XmlAutoDetectWriter * __this, Byte__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0195E6D0, void, XmlAutoDetectWriter_Close, (XmlAutoDetectWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0195E720, void, XmlAutoDetectWriter_Flush, (XmlAutoDetectWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0195E770, void, XmlAutoDetectWriter_WriteValue, (XmlAutoDetectWriter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0195E7D0, void, XmlAutoDetectWriter_set_NamespaceResolver, (XmlAutoDetectWriter * __this, IXmlNamespaceResolver * value, MethodInfo * method));
DO_APP_FUNC(0x0195E820, void, XmlAutoDetectWriter_WriteXmlDeclaration, (XmlAutoDetectWriter * __this, XmlStandalone__Enum standalone, MethodInfo * method));
DO_APP_FUNC(0x0195E880, void, XmlAutoDetectWriter_WriteXmlDeclaration_1, (XmlAutoDetectWriter * __this, String * xmldecl, MethodInfo * method));
DO_APP_FUNC(0x0195E8E0, void, XmlAutoDetectWriter_StartElementContent, (XmlAutoDetectWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0195E910, void, XmlAutoDetectWriter_WriteEndElement, (XmlAutoDetectWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0195E940, void, XmlAutoDetectWriter_WriteFullEndElement, (XmlAutoDetectWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0195E970, void, XmlAutoDetectWriter_WriteNamespaceDeclaration, (XmlAutoDetectWriter * __this, String * prefix, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0195E9E0, bool, XmlAutoDetectWriter_get_SupportsNamespaceDeclarationInChunks, (XmlAutoDetectWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0195EA10, void, XmlAutoDetectWriter_WriteStartNamespaceDeclaration, (XmlAutoDetectWriter * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x0195EA70, void, XmlAutoDetectWriter_WriteEndNamespaceDeclaration, (XmlAutoDetectWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x0195EAA0, bool, XmlAutoDetectWriter_IsHtmlTag, (String * tagName, MethodInfo * method));
DO_APP_FUNC(0x0195EB80, void, XmlAutoDetectWriter_EnsureWrappedWriter, (XmlAutoDetectWriter * __this, XmlOutputMethod__Enum outMethod, MethodInfo * method));
DO_APP_FUNC(0x0195EB90, bool, XmlAutoDetectWriter_TextBlockCreatesWriter, (XmlAutoDetectWriter * __this, String * textBlock, MethodInfo * method));
DO_APP_FUNC(0x0195EC40, void, XmlAutoDetectWriter_CreateWrappedWriter, (XmlAutoDetectWriter * __this, XmlOutputMethod__Enum outMethod, MethodInfo * method));
DO_APP_FUNC(0x01DAF800, void, XmlEncodedRawTextWriter__ctor, (XmlEncodedRawTextWriter * __this, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x01DAF930, void, XmlEncodedRawTextWriter__ctor_1, (XmlEncodedRawTextWriter * __this, TextWriter * writer, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x01DAFA50, void, XmlEncodedRawTextWriter__ctor_2, (XmlEncodedRawTextWriter * __this, Stream * stream, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x01DAFE00, void, XmlEncodedRawTextWriter_WriteXmlDeclaration, (XmlEncodedRawTextWriter * __this, XmlStandalone__Enum standalone, MethodInfo * method));
DO_APP_FUNC(0x01DB0040, void, XmlEncodedRawTextWriter_WriteXmlDeclaration_1, (XmlEncodedRawTextWriter * __this, String * xmldecl, MethodInfo * method));
DO_APP_FUNC(0x01DB00F0, void, XmlEncodedRawTextWriter_WriteDocType, (XmlEncodedRawTextWriter * __this, String * name, String * pubid, String * sysid, String * subset, MethodInfo * method));
DO_APP_FUNC(0x01DB04A0, void, XmlEncodedRawTextWriter_WriteStartElement, (XmlEncodedRawTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01DB05B0, void, XmlEncodedRawTextWriter_StartElementContent, (XmlEncodedRawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB0600, void, XmlEncodedRawTextWriter_WriteEndElement, (XmlEncodedRawTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01DB0860, void, XmlEncodedRawTextWriter_WriteFullEndElement, (XmlEncodedRawTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01DB0A00, void, XmlEncodedRawTextWriter_WriteStartAttribute, (XmlEncodedRawTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01DB0BA0, void, XmlEncodedRawTextWriter_WriteEndAttribute, (XmlEncodedRawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB0C20, void, XmlEncodedRawTextWriter_WriteNamespaceDeclaration, (XmlEncodedRawTextWriter * __this, String * prefix, String * namespaceName, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlEncodedRawTextWriter_get_SupportsNamespaceDeclarationInChunks, (XmlEncodedRawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB0C80, void, XmlEncodedRawTextWriter_WriteStartNamespaceDeclaration, (XmlEncodedRawTextWriter * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01DB0E60, void, XmlEncodedRawTextWriter_WriteEndNamespaceDeclaration, (XmlEncodedRawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB0EE0, void, XmlEncodedRawTextWriter_WriteCData, (XmlEncodedRawTextWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01DB1270, void, XmlEncodedRawTextWriter_WriteComment, (XmlEncodedRawTextWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01DB1490, void, XmlEncodedRawTextWriter_WriteProcessingInstruction, (XmlEncodedRawTextWriter * __this, String * name, String * text, MethodInfo * method));
DO_APP_FUNC(0x01DB1670, void, XmlEncodedRawTextWriter_WriteEntityRef, (XmlEncodedRawTextWriter * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01DB1780, void, XmlEncodedRawTextWriter_WriteCharEntity, (XmlEncodedRawTextWriter * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x01DB1A30, void, XmlEncodedRawTextWriter_WriteWhitespace, (XmlEncodedRawTextWriter * __this, String * ws, MethodInfo * method));
DO_APP_FUNC(0x01DB1AB0, void, XmlEncodedRawTextWriter_WriteString, (XmlEncodedRawTextWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01DB1B30, void, XmlEncodedRawTextWriter_WriteSurrogateCharEntity, (XmlEncodedRawTextWriter * __this, uint16_t lowChar, uint16_t highChar, MethodInfo * method));
DO_APP_FUNC(0x01DB1D60, void, XmlEncodedRawTextWriter_WriteChars, (XmlEncodedRawTextWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01DB1E00, void, XmlEncodedRawTextWriter_WriteRaw, (XmlEncodedRawTextWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01950800, void, XmlEncodedRawTextWriter_WriteRaw_1, (XmlEncodedRawTextWriter * __this, String * data, MethodInfo * method));
DO_APP_FUNC(0x01DB1E90, void, XmlEncodedRawTextWriter_Close, (XmlEncodedRawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB2170, void, XmlEncodedRawTextWriter_Flush, (XmlEncodedRawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB21E0, void, XmlEncodedRawTextWriter_FlushBuffer, (XmlEncodedRawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB2470, void, XmlEncodedRawTextWriter_EncodeChars, (XmlEncodedRawTextWriter * __this, int32_t startOffset, int32_t endOffset, bool writeAllToStream, MethodInfo * method));
DO_APP_FUNC(0x01DB2600, void, XmlEncodedRawTextWriter_FlushEncoder, (XmlEncodedRawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB26E0, void, XmlEncodedRawTextWriter_WriteAttributeTextBlock, (XmlEncodedRawTextWriter * __this, uint16_t * pSrc, uint16_t * pSrcEnd, MethodInfo * method));
DO_APP_FUNC(0x01DB29E0, void, XmlEncodedRawTextWriter_WriteElementTextBlock, (XmlEncodedRawTextWriter * __this, uint16_t * pSrc, uint16_t * pSrcEnd, MethodInfo * method));
DO_APP_FUNC(0x01DB2D50, void, XmlEncodedRawTextWriter_RawText, (XmlEncodedRawTextWriter * __this, String * s, MethodInfo * method));
DO_APP_FUNC(0x01DB2D80, void, XmlEncodedRawTextWriter_RawText_1, (XmlEncodedRawTextWriter * __this, uint16_t * pSrcBegin, uint16_t * pSrcEnd, MethodInfo * method));
DO_APP_FUNC(0x01DB2F80, void, XmlEncodedRawTextWriter_WriteRawWithCharChecking, (XmlEncodedRawTextWriter * __this, uint16_t * pSrcBegin, uint16_t * pSrcEnd, MethodInfo * method));
DO_APP_FUNC(0x01DB32D0, void, XmlEncodedRawTextWriter_WriteCommentOrPi, (XmlEncodedRawTextWriter * __this, String * text, int32_t stopChar, MethodInfo * method));
DO_APP_FUNC(0x01DB3750, void, XmlEncodedRawTextWriter_WriteCDataSection, (XmlEncodedRawTextWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01DB3BA0, uint16_t *, XmlEncodedRawTextWriter_EncodeSurrogate, (uint16_t * pSrc, uint16_t * pSrcEnd, uint16_t * pDst, MethodInfo * method));
DO_APP_FUNC(0x01DB3D60, uint16_t *, XmlEncodedRawTextWriter_InvalidXmlChar, (XmlEncodedRawTextWriter * __this, int32_t ch, uint16_t * pDst, bool entitize, MethodInfo * method));
DO_APP_FUNC(0x01DB3F20, void, XmlEncodedRawTextWriter_EncodeChar, (XmlEncodedRawTextWriter * __this, uint16_t * * pSrc, uint16_t * pSrcEnd, uint16_t * * pDst, MethodInfo * method));
DO_APP_FUNC(0x01DB3FB0, void, XmlEncodedRawTextWriter_ChangeTextContentMark, (XmlEncodedRawTextWriter * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01DB40F0, void, XmlEncodedRawTextWriter_GrowTextContentMarks, (XmlEncodedRawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB41C0, uint16_t *, XmlEncodedRawTextWriter_WriteNewLine, (XmlEncodedRawTextWriter * __this, uint16_t * pDst, MethodInfo * method));
DO_APP_FUNC(0x01DB4240, uint16_t *, XmlEncodedRawTextWriter_LtEntity, (uint16_t * pDst, MethodInfo * method));
DO_APP_FUNC(0x01DB4260, uint16_t *, XmlEncodedRawTextWriter_GtEntity, (uint16_t * pDst, MethodInfo * method));
DO_APP_FUNC(0x01DB4280, uint16_t *, XmlEncodedRawTextWriter_AmpEntity, (uint16_t * pDst, MethodInfo * method));
DO_APP_FUNC(0x01DB42A0, uint16_t *, XmlEncodedRawTextWriter_QuoteEntity, (uint16_t * pDst, MethodInfo * method));
DO_APP_FUNC(0x01DB42C0, uint16_t *, XmlEncodedRawTextWriter_TabEntity, (uint16_t * pDst, MethodInfo * method));
DO_APP_FUNC(0x01DB42E0, uint16_t *, XmlEncodedRawTextWriter_LineFeedEntity, (uint16_t * pDst, MethodInfo * method));
DO_APP_FUNC(0x01DB4300, uint16_t *, XmlEncodedRawTextWriter_CarriageReturnEntity, (uint16_t * pDst, MethodInfo * method));
DO_APP_FUNC(0x01DB4320, uint16_t *, XmlEncodedRawTextWriter_CharEntity, (uint16_t * pDst, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x01DB4420, uint16_t *, XmlEncodedRawTextWriter_RawStartCData, (uint16_t * pDst, MethodInfo * method));
DO_APP_FUNC(0x01DB4450, uint16_t *, XmlEncodedRawTextWriter_RawEndCData, (uint16_t * pDst, MethodInfo * method));
DO_APP_FUNC(0x01DB4470, void, XmlEncodedRawTextWriter_ValidateContentChars, (XmlEncodedRawTextWriter * __this, String * chars, String * propertyName, bool allowOnlyWhitespace, MethodInfo * method));
DO_APP_FUNC(0x01DB4830, void, XmlEncodedRawTextWriterIndent__ctor, (XmlEncodedRawTextWriterIndent * __this, TextWriter * writer, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x01DB4860, void, XmlEncodedRawTextWriterIndent__ctor_1, (XmlEncodedRawTextWriterIndent * __this, Stream * stream, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x01DB4890, void, XmlEncodedRawTextWriterIndent_WriteDocType, (XmlEncodedRawTextWriterIndent * __this, String * name, String * pubid, String * sysid, String * subset, MethodInfo * method));
DO_APP_FUNC(0x01DB4900, void, XmlEncodedRawTextWriterIndent_WriteStartElement, (XmlEncodedRawTextWriterIndent * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01DB4990, void, XmlEncodedRawTextWriterIndent_StartElementContent, (XmlEncodedRawTextWriterIndent * __this, MethodInfo * method));
DO_APP_FUNC(0x00C74F00, void, XmlEncodedRawTextWriterIndent_OnRootElement, (XmlEncodedRawTextWriterIndent * __this, ConformanceLevel__Enum currentConformanceLevel, MethodInfo * method));
DO_APP_FUNC(0x01DB4A20, void, XmlEncodedRawTextWriterIndent_WriteEndElement, (XmlEncodedRawTextWriterIndent * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01DB4B00, void, XmlEncodedRawTextWriterIndent_WriteFullEndElement, (XmlEncodedRawTextWriterIndent * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01DB4BE0, void, XmlEncodedRawTextWriterIndent_WriteStartAttribute, (XmlEncodedRawTextWriterIndent * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01DB4C40, void, XmlEncodedRawTextWriterIndent_WriteCData, (XmlEncodedRawTextWriterIndent * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01DB4C50, void, XmlEncodedRawTextWriterIndent_WriteComment, (XmlEncodedRawTextWriterIndent * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01DB4C90, void, XmlEncodedRawTextWriterIndent_WriteProcessingInstruction, (XmlEncodedRawTextWriterIndent * __this, String * target, String * text, MethodInfo * method));
DO_APP_FUNC(0x01DB4CE0, void, XmlEncodedRawTextWriterIndent_WriteEntityRef, (XmlEncodedRawTextWriterIndent * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01DB4DF0, void, XmlEncodedRawTextWriterIndent_WriteCharEntity, (XmlEncodedRawTextWriterIndent * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x01DB4E00, void, XmlEncodedRawTextWriterIndent_WriteSurrogateCharEntity, (XmlEncodedRawTextWriterIndent * __this, uint16_t lowChar, uint16_t highChar, MethodInfo * method));
DO_APP_FUNC(0x01DB4E10, void, XmlEncodedRawTextWriterIndent_WriteWhitespace, (XmlEncodedRawTextWriterIndent * __this, String * ws, MethodInfo * method));
DO_APP_FUNC(0x01DB4E90, void, XmlEncodedRawTextWriterIndent_WriteString, (XmlEncodedRawTextWriterIndent * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01DB4F10, void, XmlEncodedRawTextWriterIndent_WriteChars, (XmlEncodedRawTextWriterIndent * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01DB4FB0, void, XmlEncodedRawTextWriterIndent_WriteRaw, (XmlEncodedRawTextWriterIndent * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01DB4FD0, void, XmlEncodedRawTextWriterIndent_WriteRaw_1, (XmlEncodedRawTextWriterIndent * __this, String * data, MethodInfo * method));
DO_APP_FUNC(0x01DB5040, void, XmlEncodedRawTextWriterIndent_WriteBase64, (XmlEncodedRawTextWriterIndent * __this, Byte__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01DB5060, void, XmlEncodedRawTextWriterIndent_Init, (XmlEncodedRawTextWriterIndent * __this, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x01DB5240, void, XmlEncodedRawTextWriterIndent_WriteIndent, (XmlEncodedRawTextWriterIndent * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB6180, void, XmlEventCache__ctor, (XmlEventCache * __this, String * baseUri, bool hasRootNode, MethodInfo * method));
DO_APP_FUNC(0x01DB6190, void, XmlEventCache_EndEvents, (XmlEventCache * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB61E0, void, XmlEventCache_EventsToWriter, (XmlEventCache * __this, XmlWriter * writer, MethodInfo * method));
DO_APP_FUNC(0x01DB6B00, void, XmlEventCache_WriteDocType, (XmlEventCache * __this, String * name, String * pubid, String * sysid, String * subset, MethodInfo * method));
DO_APP_FUNC(0x01DB6B90, void, XmlEventCache_WriteStartElement, (XmlEventCache * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01DB6BC0, void, XmlEventCache_WriteStartAttribute, (XmlEventCache * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01DB6BF0, void, XmlEventCache_WriteEndAttribute, (XmlEventCache * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB6C40, void, XmlEventCache_WriteCData, (XmlEventCache * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01DB6CA0, void, XmlEventCache_WriteComment, (XmlEventCache * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01DB6D00, void, XmlEventCache_WriteProcessingInstruction, (XmlEventCache * __this, String * name, String * text, MethodInfo * method));
DO_APP_FUNC(0x01DB6D70, void, XmlEventCache_WriteWhitespace, (XmlEventCache * __this, String * ws, MethodInfo * method));
DO_APP_FUNC(0x01DB6DD0, void, XmlEventCache_WriteString, (XmlEventCache * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01701610, void, XmlEventCache_WriteChars, (XmlEventCache * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0195E400, void, XmlEventCache_WriteRaw, (XmlEventCache * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01DB6E50, void, XmlEventCache_WriteRaw_1, (XmlEventCache * __this, String * data, MethodInfo * method));
DO_APP_FUNC(0x01DB6EB0, void, XmlEventCache_WriteEntityRef, (XmlEventCache * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01DB6F10, void, XmlEventCache_WriteCharEntity, (XmlEventCache * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x01DB6FF0, void, XmlEventCache_WriteSurrogateCharEntity, (XmlEventCache * __this, uint16_t lowChar, uint16_t highChar, MethodInfo * method));
DO_APP_FUNC(0x01DB7120, void, XmlEventCache_WriteBase64, (XmlEventCache * __this, Byte__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01DB71A0, void, XmlEventCache_WriteBinHex, (XmlEventCache * __this, Byte__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01DB7220, void, XmlEventCache_Close, (XmlEventCache * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB7270, void, XmlEventCache_Flush, (XmlEventCache * __this, MethodInfo * method));
DO_APP_FUNC(0x01701410, void, XmlEventCache_WriteValue, (XmlEventCache * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01DB72C0, void, XmlEventCache_Dispose, (XmlEventCache * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01DB73E0, void, XmlEventCache_WriteXmlDeclaration, (XmlEventCache * __this, XmlStandalone__Enum standalone, MethodInfo * method));
DO_APP_FUNC(0x01DB74C0, void, XmlEventCache_WriteXmlDeclaration_1, (XmlEventCache * __this, String * xmldecl, MethodInfo * method));
DO_APP_FUNC(0x01DB7520, void, XmlEventCache_StartElementContent, (XmlEventCache * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB7570, void, XmlEventCache_WriteEndElement, (XmlEventCache * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01DB75A0, void, XmlEventCache_WriteFullEndElement, (XmlEventCache * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01DB75D0, void, XmlEventCache_WriteNamespaceDeclaration, (XmlEventCache * __this, String * prefix, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01DB7640, void, XmlEventCache_WriteEndBase64, (XmlEventCache * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB7690, void, XmlEventCache_AddEvent, (XmlEventCache * __this, XmlEventCache_XmlEventType__Enum eventType, MethodInfo * method));
DO_APP_FUNC(0x01DB76E0, void, XmlEventCache_AddEvent_1, (XmlEventCache * __this, XmlEventCache_XmlEventType__Enum eventType, String * s1, MethodInfo * method));
DO_APP_FUNC(0x01DB7750, void, XmlEventCache_AddEvent_2, (XmlEventCache * __this, XmlEventCache_XmlEventType__Enum eventType, String * s1, String * s2, MethodInfo * method));
DO_APP_FUNC(0x01DB77D0, void, XmlEventCache_AddEvent_3, (XmlEventCache * __this, XmlEventCache_XmlEventType__Enum eventType, String * s1, String * s2, String * s3, MethodInfo * method));
DO_APP_FUNC(0x01DB7850, void, XmlEventCache_AddEvent_4, (XmlEventCache * __this, XmlEventCache_XmlEventType__Enum eventType, String * s1, String * s2, String * s3, Object * o, MethodInfo * method));
DO_APP_FUNC(0x01DB78E0, void, XmlEventCache_AddEvent_5, (XmlEventCache * __this, XmlEventCache_XmlEventType__Enum eventType, Object * o, MethodInfo * method));
DO_APP_FUNC(0x01DB7950, int32_t, XmlEventCache_NewEvent, (XmlEventCache * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB7B90, Byte__Array *, XmlEventCache_ToBytes, (Byte__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0010DB80, void, XmlEventCache_XmlEvent_InitEvent, (XmlEventCache_XmlEvent__Boxed * __this, XmlEventCache_XmlEventType__Enum eventType, MethodInfo * method));
DO_APP_FUNC(0x0013C010, void, XmlEventCache_XmlEvent_InitEvent_1, (XmlEventCache_XmlEvent__Boxed * __this, XmlEventCache_XmlEventType__Enum eventType, String * s1, MethodInfo * method));
DO_APP_FUNC(0x001CFA50, void, XmlEventCache_XmlEvent_InitEvent_2, (XmlEventCache_XmlEvent__Boxed * __this, XmlEventCache_XmlEventType__Enum eventType, String * s1, String * s2, MethodInfo * method));
DO_APP_FUNC(0x001CFA60, void, XmlEventCache_XmlEvent_InitEvent_3, (XmlEventCache_XmlEvent__Boxed * __this, XmlEventCache_XmlEventType__Enum eventType, String * s1, String * s2, String * s3, MethodInfo * method));
DO_APP_FUNC(0x001CFA80, void, XmlEventCache_XmlEvent_InitEvent_4, (XmlEventCache_XmlEvent__Boxed * __this, XmlEventCache_XmlEventType__Enum eventType, String * s1, String * s2, String * s3, Object * o, MethodInfo * method));
DO_APP_FUNC(0x001CFAA0, void, XmlEventCache_XmlEvent_InitEvent_5, (XmlEventCache_XmlEvent__Boxed * __this, XmlEventCache_XmlEventType__Enum eventType, Object * o, MethodInfo * method));
DO_APP_FUNC(0x0010E170, XmlEventCache_XmlEventType__Enum, XmlEventCache_XmlEvent_get_EventType, (XmlEventCache_XmlEvent__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00107C10, String *, XmlEventCache_XmlEvent_get_String1, (XmlEventCache_XmlEvent__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00107C20, String *, XmlEventCache_XmlEvent_get_String2, (XmlEventCache_XmlEvent__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00107C30, String *, XmlEventCache_XmlEvent_get_String3, (XmlEventCache_XmlEvent__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x00107C40, Object *, XmlEventCache_XmlEvent_get_Object, (XmlEventCache_XmlEvent__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x016FF100, void, XmlParserContext__ctor, (XmlParserContext * __this, XmlNameTable * nt, XmlNamespaceManager * nsMgr, String * xmlLang, XmlSpace__Enum xmlSpace, MethodInfo * method));
DO_APP_FUNC(0x016FF200, void, XmlParserContext__ctor_1, (XmlParserContext * __this, XmlNameTable * nt, XmlNamespaceManager * nsMgr, String * docTypeName, String * pubId, String * sysId, String * internalSubset, String * baseURI, String * xmlLang, XmlSpace__Enum xmlSpace, MethodInfo * method));
DO_APP_FUNC(0x016FF270, void, XmlParserContext__ctor_2, (XmlParserContext * __this, XmlNameTable * nt, XmlNamespaceManager * nsMgr, String * docTypeName, String * pubId, String * sysId, String * internalSubset, String * baseURI, String * xmlLang, XmlSpace__Enum xmlSpace, Encoding * enc, MethodInfo * method));
DO_APP_FUNC(0x002FA280, XmlNameTable *, XmlParserContext_get_NameTable, (XmlParserContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, XmlNamespaceManager *, XmlParserContext_get_NamespaceManager, (XmlParserContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, XmlParserContext_get_DocTypeName, (XmlParserContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, XmlParserContext_get_PublicId, (XmlParserContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, XmlParserContext_get_SystemId, (XmlParserContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, String *, XmlParserContext_get_BaseURI, (XmlParserContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, String *, XmlParserContext_get_InternalSubset, (XmlParserContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, String *, XmlParserContext_get_XmlLang, (XmlParserContext * __this, MethodInfo * method));
DO_APP_FUNC(0x006410F0, XmlSpace__Enum, XmlParserContext_get_XmlSpace, (XmlParserContext * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, Encoding *, XmlParserContext_get_Encoding, (XmlParserContext * __this, MethodInfo * method));
DO_APP_FUNC(0x016FF4E0, bool, XmlParserContext_get_HasDtdInfo, (XmlParserContext * __this, MethodInfo * method));
DO_APP_FUNC(0x01700F60, void, XmlRawWriter_WriteStartDocument, (XmlRawWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01700FD0, void, XmlRawWriter_WriteStartDocument_1, (XmlRawWriter * __this, bool standalone, MethodInfo * method));
DO_APP_FUNC(0x01701040, void, XmlRawWriter_WriteEndDocument, (XmlRawWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlRawWriter_WriteDocType, (XmlRawWriter * __this, String * name, String * pubid, String * sysid, String * subset, MethodInfo * method));
DO_APP_FUNC(0x017010B0, void, XmlRawWriter_WriteEndElement, (XmlRawWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01701120, void, XmlRawWriter_WriteFullEndElement, (XmlRawWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01701190, void, XmlRawWriter_WriteBase64, (XmlRawWriter * __this, Byte__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01701330, String *, XmlRawWriter_LookupPrefix, (XmlRawWriter * __this, String * ns, MethodInfo * method));
DO_APP_FUNC(0x017013A0, WriteState__Enum, XmlRawWriter_get_WriteState, (XmlRawWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01701410, void, XmlRawWriter_WriteCData, (XmlRawWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01701430, void, XmlRawWriter_WriteCharEntity, (XmlRawWriter * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x01701510, void, XmlRawWriter_WriteSurrogateCharEntity, (XmlRawWriter * __this, uint16_t lowChar, uint16_t highChar, MethodInfo * method));
DO_APP_FUNC(0x01701410, void, XmlRawWriter_WriteWhitespace, (XmlRawWriter * __this, String * ws, MethodInfo * method));
DO_APP_FUNC(0x01701610, void, XmlRawWriter_WriteChars, (XmlRawWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01701610, void, XmlRawWriter_WriteRaw, (XmlRawWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01701410, void, XmlRawWriter_WriteRaw_1, (XmlRawWriter * __this, String * data, MethodInfo * method));
DO_APP_FUNC(0x01701410, void, XmlRawWriter_WriteValue, (XmlRawWriter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01701650, void, XmlRawWriter_WriteAttributes, (XmlRawWriter * __this, XmlReader * reader, bool defattr, MethodInfo * method));
DO_APP_FUNC(0x017016C0, void, XmlRawWriter_WriteNode, (XmlRawWriter * __this, XmlReader * reader, bool defattr, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, XmlRawWriter_set_NamespaceResolver, (XmlRawWriter * __this, IXmlNamespaceResolver * value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlRawWriter_WriteXmlDeclaration, (XmlRawWriter * __this, XmlStandalone__Enum standalone, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlRawWriter_WriteXmlDeclaration_1, (XmlRawWriter * __this, String * xmldecl, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlRawWriter_OnRootElement, (XmlRawWriter * __this, ConformanceLevel__Enum conformanceLevel, MethodInfo * method));
DO_APP_FUNC(0x01701730, void, XmlRawWriter_WriteFullEndElement_1, (XmlRawWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, XmlRawWriter_get_SupportsNamespaceDeclarationInChunks, (XmlRawWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01701750, void, XmlRawWriter_WriteStartNamespaceDeclaration, (XmlRawWriter * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x017017A0, void, XmlRawWriter_WriteEndNamespaceDeclaration, (XmlRawWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x017017F0, void, XmlRawWriter_WriteEndBase64, (XmlRawWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01701810, void, XmlRawWriter_Close, (XmlRawWriter * __this, WriteState__Enum currentState, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlRawWriter__ctor, (XmlRawWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, XmlReaderSettings *, XmlReader_get_Settings, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01701890, String *, XmlReader_get_Name, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, XmlReader_get_IsDefault, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x00A79BB0, uint16_t, XmlReader_get_QuoteChar, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, XmlSpace__Enum, XmlReader_get_XmlSpace, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017019D0, String *, XmlReader_get_XmlLang, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01701A50, IXmlSchemaInfo *, XmlReader_get_SchemaInfo, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01701AD0, Type *, XmlReader_get_ValueType, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01701B70, void, XmlReader_MoveToAttribute, (XmlReader * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlReader_Close, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01701C90, void, XmlReader_Skip, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, XmlReader_get_CanResolveEntity, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, XmlReader_get_CanReadValueChunk, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01701D80, int32_t, XmlReader_ReadValueChunk, (XmlReader * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01701DF0, String *, XmlReader_ReadString, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01702090, XmlNodeType__Enum, XmlReader_MoveToContent, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01702120, void, XmlReader_ReadStartElement, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01702260, String *, XmlReader_ReadElementString, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01702510, void, XmlReader_ReadEndElement, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01702650, bool, XmlReader_IsStartElement, (XmlReader * __this, String * localname, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01702730, String *, XmlReader_ReadInnerXml, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01702C60, void, XmlReader_WriteNode, (XmlReader * __this, XmlWriter * xtw, bool defattr, MethodInfo * method));
DO_APP_FUNC(0x01703190, void, XmlReader_WriteAttributeValue, (XmlReader * __this, XmlWriter * xtw, MethodInfo * method));
DO_APP_FUNC(0x017032B0, XmlWriter *, XmlReader_CreateWriterForInnerOuterXml, (XmlReader * __this, StringWriter * sw, MethodInfo * method));
DO_APP_FUNC(0x01703410, void, XmlReader_SetNamespacesFlag, (XmlReader * __this, XmlTextWriter * xtw, MethodInfo * method));
DO_APP_FUNC(0x01703570, bool, XmlReader_get_HasAttributes, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01703590, void, XmlReader_Dispose, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017035B0, void, XmlReader_Dispose_1, (XmlReader * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, XmlNamespaceManager *, XmlReader_get_NamespaceManager, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017035F0, bool, XmlReader_IsTextualNode, (XmlNodeType__Enum nodeType, MethodInfo * method));
DO_APP_FUNC(0x017036B0, bool, XmlReader_HasValueInternal, (XmlNodeType__Enum nodeType, MethodInfo * method));
DO_APP_FUNC(0x01703770, bool, XmlReader_SkipSubtree, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01703850, bool, XmlReader_get_IsDefaultInternal, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, IDtdInfo *, XmlReader_get_DtdInfo, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01703920, XmlReader *, XmlReader_Create, (Stream * input, XmlReaderSettings * settings, String * baseUri, MethodInfo * method));
DO_APP_FUNC(0x01703AB0, XmlReader *, XmlReader_Create_1, (TextReader * input, XmlReaderSettings * settings, String * baseUri, MethodInfo * method));
DO_APP_FUNC(0x01703C30, XmlReader *, XmlReader_CreateSqlReader, (Stream * input, XmlReaderSettings * settings, XmlParserContext * inputContext, MethodInfo * method));
DO_APP_FUNC(0x01704160, int32_t, XmlReader_CalcBufferSize, (Stream * input, MethodInfo * method));
DO_APP_FUNC(0x01704260, Object *, XmlReader_get_debuggerDisplayProxy, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlReader__ctor, (XmlReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017042F0, void, XmlReader__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, XmlReader_XmlReaderDebuggerDisplayProxy__ctor, (XmlReader_XmlReaderDebuggerDisplayProxy__Boxed * __this, XmlReader * reader, MethodInfo * method));
DO_APP_FUNC(0x0013C490, String *, XmlReader_XmlReaderDebuggerDisplayProxy_ToString, (XmlReader_XmlReaderDebuggerDisplayProxy__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01704870, void, XmlReaderSettings__ctor, (XmlReaderSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, XmlReaderSettings_get_Async, (XmlReaderSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x01704880, void, XmlReaderSettings_set_Async, (XmlReaderSettings * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FB930, XmlNameTable *, XmlReaderSettings_get_NameTable, (XmlReaderSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x01704920, void, XmlReaderSettings_set_NameTable, (XmlReaderSettings * __this, XmlNameTable * value, MethodInfo * method));
DO_APP_FUNC(0x008543B0, bool, XmlReaderSettings_get_IsXmlResolverSet, (XmlReaderSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x00DC31D0, void, XmlReaderSettings_set_IsXmlResolverSet, (XmlReaderSettings * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x017049C0, void, XmlReaderSettings_set_XmlResolver, (XmlReaderSettings * __this, XmlResolver * value, MethodInfo * method));
DO_APP_FUNC(0x002FB950, XmlResolver *, XmlReaderSettings_GetXmlResolver, (XmlReaderSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x01704A60, XmlResolver *, XmlReaderSettings_GetXmlResolver_CheckConfig, (XmlReaderSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB970, int32_t, XmlReaderSettings_get_LineNumberOffset, (XmlReaderSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x01704A70, void, XmlReaderSettings_set_LineNumberOffset, (XmlReaderSettings * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x005C3FF0, int32_t, XmlReaderSettings_get_LinePositionOffset, (XmlReaderSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x01704B10, void, XmlReaderSettings_set_LinePositionOffset, (XmlReaderSettings * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x00654950, ConformanceLevel__Enum, XmlReaderSettings_get_ConformanceLevel, (XmlReaderSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x01704BB0, void, XmlReaderSettings_set_ConformanceLevel, (XmlReaderSettings * __this, ConformanceLevel__Enum value, MethodInfo * method));
DO_APP_FUNC(0x00446970, bool, XmlReaderSettings_get_CheckCharacters, (XmlReaderSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x01704C80, void, XmlReaderSettings_set_CheckCharacters, (XmlReaderSettings * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, int64_t, XmlReaderSettings_get_MaxCharactersInDocument, (XmlReaderSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x01704D20, void, XmlReaderSettings_set_MaxCharactersInDocument, (XmlReaderSettings * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, int64_t, XmlReaderSettings_get_MaxCharactersFromEntities, (XmlReaderSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x01704DF0, void, XmlReaderSettings_set_MaxCharactersFromEntities, (XmlReaderSettings * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x003FCB00, bool, XmlReaderSettings_get_IgnoreWhitespace, (XmlReaderSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x01704EC0, void, XmlReaderSettings_set_IgnoreWhitespace, (XmlReaderSettings * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00614BA0, bool, XmlReaderSettings_get_IgnoreProcessingInstructions, (XmlReaderSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x01704F60, void, XmlReaderSettings_set_IgnoreProcessingInstructions, (XmlReaderSettings * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00EEDBB0, bool, XmlReaderSettings_get_IgnoreComments, (XmlReaderSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x01705000, void, XmlReaderSettings_set_IgnoreComments, (XmlReaderSettings * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x003FD3F0, DtdProcessing__Enum, XmlReaderSettings_get_DtdProcessing, (XmlReaderSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x017050A0, void, XmlReaderSettings_set_DtdProcessing, (XmlReaderSettings * __this, DtdProcessing__Enum value, MethodInfo * method));
DO_APP_FUNC(0x0051DB40, bool, XmlReaderSettings_get_CloseInput, (XmlReaderSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x01705170, void, XmlReaderSettings_set_CloseInput, (XmlReaderSettings * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FD490, ValidationType__Enum, XmlReaderSettings_get_ValidationType, (XmlReaderSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x01705210, void, XmlReaderSettings_set_ValidationType, (XmlReaderSettings * __this, ValidationType__Enum value, MethodInfo * method));
DO_APP_FUNC(0x003FDCE0, XmlSchemaValidationFlags__Enum, XmlReaderSettings_get_ValidationFlags, (XmlReaderSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x017052E0, void, XmlReaderSettings_set_ValidationFlags, (XmlReaderSettings * __this, XmlSchemaValidationFlags__Enum value, MethodInfo * method));
DO_APP_FUNC(0x017053B0, XmlSchemaSet *, XmlReaderSettings_get_Schemas, (XmlReaderSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x01705510, void, XmlReaderSettings_set_Schemas, (XmlReaderSettings * __this, XmlSchemaSet * value, MethodInfo * method));
DO_APP_FUNC(0x017055B0, XmlReaderSettings *, XmlReaderSettings_Clone, (XmlReaderSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, ValidationEventHandler *, XmlReaderSettings_GetEventHandler, (XmlReaderSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x017056E0, XmlReader *, XmlReaderSettings_CreateReader, (XmlReaderSettings * __this, Stream * input, Uri * baseUri, String * baseUriString, XmlParserContext * inputContext, MethodInfo * method));
DO_APP_FUNC(0x01705940, XmlReader *, XmlReaderSettings_CreateReader_1, (XmlReaderSettings * __this, TextReader * input, String * baseUriString, XmlParserContext * inputContext, MethodInfo * method));
DO_APP_FUNC(0x00675C70, void, XmlReaderSettings_set_ReadOnly, (XmlReaderSettings * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01705B30, void, XmlReaderSettings_CheckReadOnly, (XmlReaderSettings * __this, String * propertyName, MethodInfo * method));
DO_APP_FUNC(0x01704870, void, XmlReaderSettings_Initialize, (XmlReaderSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x01705C30, void, XmlReaderSettings_Initialize_1, (XmlReaderSettings * __this, XmlResolver * resolver, MethodInfo * method));
DO_APP_FUNC(0x01705E30, XmlResolver *, XmlReaderSettings_CreateDefaultResolver, (MethodInfo * method));
DO_APP_FUNC(0x01705F70, XmlReader *, XmlReaderSettings_AddValidation, (XmlReaderSettings * __this, XmlReader * reader, MethodInfo * method));
DO_APP_FUNC(0x01706340, XmlValidatingReaderImpl *, XmlReaderSettings_CreateDtdValidatingReader, (XmlReaderSettings * __this, XmlReader * baseReader, MethodInfo * method));
DO_APP_FUNC(0x017064B0, bool, XmlReaderSettings_EnableLegacyXmlSettings, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlReaderSettings__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01714D10, void, XmlTextEncoder__ctor, (XmlTextEncoder * __this, TextWriter * textWriter, MethodInfo * method));
DO_APP_FUNC(0x01714D40, void, XmlTextEncoder_set_QuoteChar, (XmlTextEncoder * __this, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x01714D50, void, XmlTextEncoder_StartAttribute, (XmlTextEncoder * __this, bool cacheAttrValue, MethodInfo * method));
DO_APP_FUNC(0x01714ED0, void, XmlTextEncoder_EndAttribute, (XmlTextEncoder * __this, MethodInfo * method));
DO_APP_FUNC(0x01714F10, String *, XmlTextEncoder_get_AttributeValue, (XmlTextEncoder * __this, MethodInfo * method));
DO_APP_FUNC(0x01714FC0, void, XmlTextEncoder_WriteSurrogateChar, (XmlTextEncoder * __this, uint16_t lowChar, uint16_t highChar, MethodInfo * method));
DO_APP_FUNC(0x017150F0, void, XmlTextEncoder_Write, (XmlTextEncoder * __this, Char__Array * array, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x017155B0, void, XmlTextEncoder_WriteSurrogateCharEntity, (XmlTextEncoder * __this, uint16_t lowChar, uint16_t highChar, MethodInfo * method));
DO_APP_FUNC(0x017157B0, void, XmlTextEncoder_Write_1, (XmlTextEncoder * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01715DA0, void, XmlTextEncoder_WriteRawWithSurrogateChecking, (XmlTextEncoder * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01716010, void, XmlTextEncoder_WriteRaw, (XmlTextEncoder * __this, Char__Array * array, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x017161F0, void, XmlTextEncoder_WriteCharEntity, (XmlTextEncoder * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x01716360, void, XmlTextEncoder_WriteEntityRef, (XmlTextEncoder * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x017163E0, void, XmlTextEncoder_WriteStringFragment, (XmlTextEncoder * __this, String * str, int32_t offset, int32_t count, Char__Array * helperBuffer, MethodInfo * method));
DO_APP_FUNC(0x017164A0, void, XmlTextEncoder_WriteCharEntityImpl, (XmlTextEncoder * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x01716560, void, XmlTextEncoder_WriteCharEntityImpl_1, (XmlTextEncoder * __this, String * strVal, MethodInfo * method));
DO_APP_FUNC(0x01716650, void, XmlTextEncoder_WriteEntityRefImpl, (XmlTextEncoder * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x017166E0, void, XmlTextReader__ctor, (XmlTextReader * __this, Stream * input, MethodInfo * method));
DO_APP_FUNC(0x017169B0, void, XmlTextReader__ctor_1, (XmlTextReader * __this, String * url, Stream * input, XmlNameTable * nt, MethodInfo * method));
DO_APP_FUNC(0x01716B60, void, XmlTextReader__ctor_2, (XmlTextReader * __this, TextReader * input, MethodInfo * method));
DO_APP_FUNC(0x01716E30, void, XmlTextReader__ctor_3, (XmlTextReader * __this, TextReader * input, XmlNameTable * nt, MethodInfo * method));
DO_APP_FUNC(0x016D9400, XmlNodeType__Enum, XmlTextReader_get_NodeType, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717030, String *, XmlTextReader_get_Name, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717060, String *, XmlTextReader_get_LocalName, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717090, String *, XmlTextReader_get_NamespaceURI, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x00442880, String *, XmlTextReader_get_Prefix, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017170C0, String *, XmlTextReader_get_Value, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017170F0, int32_t, XmlTextReader_get_Depth, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717120, String *, XmlTextReader_get_BaseURI, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717150, bool, XmlTextReader_get_IsEmptyElement, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717180, bool, XmlTextReader_get_IsDefault, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017171B0, uint16_t, XmlTextReader_get_QuoteChar, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017171E0, XmlSpace__Enum, XmlTextReader_get_XmlSpace, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717210, String *, XmlTextReader_get_XmlLang, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717240, int32_t, XmlTextReader_get_AttributeCount, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717270, String *, XmlTextReader_GetAttribute, (XmlTextReader * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x017172A0, String *, XmlTextReader_GetAttribute_1, (XmlTextReader * __this, String * localName, String * namespaceURI, MethodInfo * method));
DO_APP_FUNC(0x017172D0, String *, XmlTextReader_GetAttribute_2, (XmlTextReader * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x01717300, bool, XmlTextReader_MoveToAttribute, (XmlTextReader * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01717330, void, XmlTextReader_MoveToAttribute_1, (XmlTextReader * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x01717360, bool, XmlTextReader_MoveToFirstAttribute, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717390, bool, XmlTextReader_MoveToNextAttribute, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017173C0, bool, XmlTextReader_MoveToElement, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017173F0, bool, XmlTextReader_ReadAttributeValue, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717420, bool, XmlTextReader_Read, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717450, bool, XmlTextReader_get_EOF, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x016FB480, void, XmlTextReader_Close, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x016FB7D0, ReadState__Enum_1, XmlTextReader_get_ReadState, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717480, void, XmlTextReader_Skip, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017174B0, XmlNameTable *, XmlTextReader_get_NameTable, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017174E0, String *, XmlTextReader_LookupNamespace, (XmlTextReader * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlTextReader_get_CanResolveEntity, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717520, void, XmlTextReader_ResolveEntity, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, XmlTextReader_get_CanReadValueChunk, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717550, String *, XmlTextReader_ReadString, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlTextReader_HasLineInfo, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717580, int32_t, XmlTextReader_get_LineNumber, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017175B0, int32_t, XmlTextReader_get_LinePosition, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017175E0, IDictionary_2_System_String_System_String_ *, XmlTextReader_System_Xml_IXmlNamespaceResolver_GetNamespacesInScope, (XmlTextReader * __this, XmlNamespaceScope__Enum scope, MethodInfo * method));
DO_APP_FUNC(0x01717620, String *, XmlTextReader_System_Xml_IXmlNamespaceResolver_LookupNamespace, (XmlTextReader * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01717650, String *, XmlTextReader_System_Xml_IXmlNamespaceResolver_LookupPrefix, (XmlTextReader * __this, String * namespaceName, MethodInfo * method));
DO_APP_FUNC(0x01717690, bool, XmlTextReader_get_Namespaces, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017176B0, bool, XmlTextReader_get_Normalization, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017176D0, void, XmlTextReader_set_Normalization, (XmlTextReader * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x017177E0, void, XmlTextReader_set_WhitespaceHandling, (XmlTextReader * __this, WhitespaceHandling__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01717910, void, XmlTextReader_set_EntityHandling, (XmlTextReader * __this, EntityHandling__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01717A00, void, XmlTextReader_set_XmlResolver, (XmlTextReader * __this, XmlResolver * value, MethodInfo * method));
DO_APP_FUNC(0x002FA280, XmlTextReaderImpl *, XmlTextReader_get_Impl, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717A20, XmlNamespaceManager *, XmlTextReader_get_NamespaceManager, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717A50, void, XmlTextReader_set_XmlValidatingReaderCompatibilityMode, (XmlTextReader * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01717A70, IDtdInfo *, XmlTextReader_get_DtdInfo, (XmlTextReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717AA0, void, XmlTextReaderImpl__ctor, (XmlTextReaderImpl * __this, XmlNameTable * nt, MethodInfo * method));
DO_APP_FUNC(0x017181C0, void, XmlTextReaderImpl__ctor_1, (XmlTextReaderImpl * __this, XmlResolver * resolver, XmlReaderSettings * settings, XmlParserContext * context, MethodInfo * method));
DO_APP_FUNC(0x01718AA0, void, XmlTextReaderImpl__ctor_2, (XmlTextReaderImpl * __this, Stream * input, MethodInfo * method));
DO_APP_FUNC(0x01718C20, void, XmlTextReaderImpl__ctor_3, (XmlTextReaderImpl * __this, String * url, Stream * input, XmlNameTable * nt, MethodInfo * method));
DO_APP_FUNC(0x01718E50, void, XmlTextReaderImpl__ctor_4, (XmlTextReaderImpl * __this, TextReader * input, MethodInfo * method));
DO_APP_FUNC(0x01718FD0, void, XmlTextReaderImpl__ctor_5, (XmlTextReaderImpl * __this, TextReader * input, XmlNameTable * nt, MethodInfo * method));
DO_APP_FUNC(0x01719090, void, XmlTextReaderImpl__ctor_6, (XmlTextReaderImpl * __this, String * url, TextReader * input, XmlNameTable * nt, MethodInfo * method));
DO_APP_FUNC(0x01719250, void, XmlTextReaderImpl__ctor_7, (XmlTextReaderImpl * __this, String * xmlFragment, XmlNodeType__Enum fragType, XmlParserContext * context, MethodInfo * method));
DO_APP_FUNC(0x01719460, void, XmlTextReaderImpl__ctor_8, (XmlTextReaderImpl * __this, String * xmlFragment, XmlParserContext * context, MethodInfo * method));
DO_APP_FUNC(0x01719660, void, XmlTextReaderImpl_FinishInitUriString, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01719A90, void, XmlTextReaderImpl__ctor_9, (XmlTextReaderImpl * __this, Stream * stream, Byte__Array * bytes, int32_t byteCount, XmlReaderSettings * settings, Uri * baseUri, String * baseUriStr, XmlParserContext * context, bool closeInput, MethodInfo * method));
DO_APP_FUNC(0x01719E80, void, XmlTextReaderImpl_FinishInitStream, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01719F70, void, XmlTextReaderImpl__ctor_10, (XmlTextReaderImpl * __this, TextReader * input, XmlReaderSettings * settings, String * baseUriStr, XmlParserContext * context, MethodInfo * method));
DO_APP_FUNC(0x0171A180, void, XmlTextReaderImpl_FinishInitTextReader, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171A220, void, XmlTextReaderImpl__ctor_11, (XmlTextReaderImpl * __this, String * xmlFragment, XmlParserContext * context, XmlReaderSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x0171A320, XmlReaderSettings *, XmlTextReaderImpl_get_Settings, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171A840, XmlNodeType__Enum, XmlTextReaderImpl_get_NodeType, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171A860, String *, XmlTextReaderImpl_get_Name, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01073370, String *, XmlTextReaderImpl_get_LocalName, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x00D07570, String *, XmlTextReaderImpl_get_NamespaceURI, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171A890, String *, XmlTextReaderImpl_get_Prefix, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171A8B0, String *, XmlTextReaderImpl_get_Value, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171A920, int32_t, XmlTextReaderImpl_get_Depth, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x006D64E0, String *, XmlTextReaderImpl_get_BaseURI, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171A940, bool, XmlTextReaderImpl_get_IsEmptyElement, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171A970, bool, XmlTextReaderImpl_get_IsDefault, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171A9A0, uint16_t, XmlTextReaderImpl_get_QuoteChar, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171A9E0, XmlSpace__Enum, XmlTextReaderImpl_get_XmlSpace, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01074330, String *, XmlTextReaderImpl_get_XmlLang, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171AA00, ReadState__Enum_1, XmlTextReaderImpl_get_ReadState, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171AA10, bool, XmlTextReaderImpl_get_EOF, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x00660430, XmlNameTable *, XmlTextReaderImpl_get_NameTable, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlTextReaderImpl_get_CanResolveEntity, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x008468B0, int32_t, XmlTextReaderImpl_get_AttributeCount, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171AA20, String *, XmlTextReaderImpl_GetAttribute, (XmlTextReaderImpl * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x0171AB00, String *, XmlTextReaderImpl_GetAttribute_1, (XmlTextReaderImpl * __this, String * localName, String * namespaceURI, MethodInfo * method));
DO_APP_FUNC(0x0171ACF0, String *, XmlTextReaderImpl_GetAttribute_2, (XmlTextReaderImpl * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x0171AE30, bool, XmlTextReaderImpl_MoveToAttribute, (XmlTextReaderImpl * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x0171AF10, void, XmlTextReaderImpl_MoveToAttribute_1, (XmlTextReaderImpl * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x0171B030, bool, XmlTextReaderImpl_MoveToFirstAttribute, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171B0B0, bool, XmlTextReaderImpl_MoveToNextAttribute, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171B150, bool, XmlTextReaderImpl_MoveToElement, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171B1F0, void, XmlTextReaderImpl_FinishInit, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171B240, bool, XmlTextReaderImpl_Read, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171B8B0, void, XmlTextReaderImpl_Close, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171BA00, void, XmlTextReaderImpl_Skip, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171BBF0, String *, XmlTextReaderImpl_LookupNamespace, (XmlTextReaderImpl * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x0171BC30, bool, XmlTextReaderImpl_ReadAttributeValue, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171BFB0, void, XmlTextReaderImpl_ResolveEntity, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171C270, void, XmlTextReaderImpl_set_OuterReader, (XmlTextReaderImpl * __this, XmlReader * value, MethodInfo * method));
DO_APP_FUNC(0x0171C280, void, XmlTextReaderImpl_MoveOffEntityReference, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171C390, String *, XmlTextReaderImpl_ReadString, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlTextReaderImpl_get_CanReadValueChunk, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171C3B0, int32_t, XmlTextReaderImpl_ReadValueChunk, (XmlTextReaderImpl * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlTextReaderImpl_HasLineInfo, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171C9D0, int32_t, XmlTextReaderImpl_get_LineNumber, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171C9F0, int32_t, XmlTextReaderImpl_get_LinePosition, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171CA10, IDictionary_2_System_String_System_String_ *, XmlTextReaderImpl_System_Xml_IXmlNamespaceResolver_GetNamespacesInScope, (XmlTextReaderImpl * __this, XmlNamespaceScope__Enum scope, MethodInfo * method));
DO_APP_FUNC(0x0171CA40, String *, XmlTextReaderImpl_System_Xml_IXmlNamespaceResolver_LookupNamespace, (XmlTextReaderImpl * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x0171CA60, String *, XmlTextReaderImpl_System_Xml_IXmlNamespaceResolver_LookupPrefix, (XmlTextReaderImpl * __this, String * namespaceName, MethodInfo * method));
DO_APP_FUNC(0x0171CA10, IDictionary_2_System_String_System_String_ *, XmlTextReaderImpl_GetNamespacesInScope, (XmlTextReaderImpl * __this, XmlNamespaceScope__Enum scope, MethodInfo * method));
DO_APP_FUNC(0x0171CA60, String *, XmlTextReaderImpl_LookupPrefix, (XmlTextReaderImpl * __this, String * namespaceName, MethodInfo * method));
DO_APP_FUNC(0x00974AC0, bool, XmlTextReaderImpl_get_Namespaces, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171CA90, void, XmlTextReaderImpl_set_Namespaces, (XmlTextReaderImpl * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00AE6060, bool, XmlTextReaderImpl_get_Normalization, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171CE40, void, XmlTextReaderImpl_set_Normalization, (XmlTextReaderImpl * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x0171CF40, void, XmlTextReaderImpl_set_WhitespaceHandling, (XmlTextReaderImpl * __this, WhitespaceHandling__Enum value, MethodInfo * method));
DO_APP_FUNC(0x0171D060, void, XmlTextReaderImpl_set_EntityHandling, (XmlTextReaderImpl * __this, EntityHandling__Enum value, MethodInfo * method));
DO_APP_FUNC(0x0171D140, bool, XmlTextReaderImpl_get_IsResolverSet, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171D150, void, XmlTextReaderImpl_set_XmlResolver, (XmlTextReaderImpl * __this, XmlResolver * value, MethodInfo * method));
DO_APP_FUNC(0x00660430, XmlNameTable *, XmlTextReaderImpl_get_DtdParserProxy_NameTable, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0071EAB0, IXmlNamespaceResolver *, XmlTextReaderImpl_get_DtdParserProxy_NamespaceResolver, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171D1D0, bool, XmlTextReaderImpl_get_DtdParserProxy_DtdValidation, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x00AE6060, bool, XmlTextReaderImpl_get_DtdParserProxy_Normalization, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x00974AC0, bool, XmlTextReaderImpl_get_DtdParserProxy_Namespaces, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x00A640A0, bool, XmlTextReaderImpl_get_DtdParserProxy_V1CompatibilityMode, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171D1E0, Uri *, XmlTextReaderImpl_get_DtdParserProxy_BaseUri, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFE10, bool, XmlTextReaderImpl_get_DtdParserProxy_IsEof, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, Char__Array *, XmlTextReaderImpl_get_DtdParserProxy_ParsingBuffer, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x00998570, int32_t, XmlTextReaderImpl_get_DtdParserProxy_ParsingBufferLength, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x00654950, int32_t, XmlTextReaderImpl_get_DtdParserProxy_CurrentPosition, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x00654960, void, XmlTextReaderImpl_set_DtdParserProxy_CurrentPosition, (XmlTextReaderImpl * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0171D2D0, int32_t, XmlTextReaderImpl_get_DtdParserProxy_EntityStackLength, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x00CA25B0, bool, XmlTextReaderImpl_get_DtdParserProxy_IsEntityEolNormalized, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x00813FA0, IValidationEventHandling *, XmlTextReaderImpl_get_DtdParserProxy_ValidationEventHandling, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171D2E0, void, XmlTextReaderImpl_DtdParserProxy_OnNewLine, (XmlTextReaderImpl * __this, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x003FF7B0, int32_t, XmlTextReaderImpl_get_DtdParserProxy_LineNo, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x003FF7D0, int32_t, XmlTextReaderImpl_get_DtdParserProxy_LineStartPosition, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171D2F0, int32_t, XmlTextReaderImpl_DtdParserProxy_ReadData, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171D300, int32_t, XmlTextReaderImpl_DtdParserProxy_ParseNumericCharRef, (XmlTextReaderImpl * __this, StringBuilder * internalSubsetBuilder, MethodInfo * method));
DO_APP_FUNC(0x0171D330, int32_t, XmlTextReaderImpl_DtdParserProxy_ParseNamedCharRef, (XmlTextReaderImpl * __this, bool expand, StringBuilder * internalSubsetBuilder, MethodInfo * method));
DO_APP_FUNC(0x0171D340, void, XmlTextReaderImpl_DtdParserProxy_ParsePI, (XmlTextReaderImpl * __this, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x0171D390, void, XmlTextReaderImpl_DtdParserProxy_ParseComment, (XmlTextReaderImpl * __this, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x0171D5C0, bool, XmlTextReaderImpl_get_IsResolverNull, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171D5D0, XmlResolver *, XmlTextReaderImpl_GetTempResolver, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171D720, bool, XmlTextReaderImpl_DtdParserProxy_PushEntity, (XmlTextReaderImpl * __this, IDtdEntityInfo * entity, int32_t * entityId, MethodInfo * method));
DO_APP_FUNC(0x0171D820, bool, XmlTextReaderImpl_DtdParserProxy_PopEntity, (XmlTextReaderImpl * __this, IDtdEntityInfo * * oldEntity, int32_t * newEntityId, MethodInfo * method));
DO_APP_FUNC(0x0171D880, bool, XmlTextReaderImpl_DtdParserProxy_PushExternalSubset, (XmlTextReaderImpl * __this, String * systemId, String * publicId, MethodInfo * method));
DO_APP_FUNC(0x0171DA00, void, XmlTextReaderImpl_DtdParserProxy_PushInternalDtd, (XmlTextReaderImpl * __this, String * baseUri, String * internalDtd, MethodInfo * method));
DO_APP_FUNC(0x0171DA90, void, XmlTextReaderImpl_DtdParserProxy_Throw, (XmlTextReaderImpl * __this, Exception * e, MethodInfo * method));
DO_APP_FUNC(0x0171DAA0, void, XmlTextReaderImpl_DtdParserProxy_OnSystemId, (XmlTextReaderImpl * __this, String * systemId, LineInfo keywordLineInfo, LineInfo systemLiteralLineInfo, MethodInfo * method));
DO_APP_FUNC(0x0171DB70, void, XmlTextReaderImpl_DtdParserProxy_OnPublicId, (XmlTextReaderImpl * __this, String * publicId, LineInfo keywordLineInfo, LineInfo publicLiteralLineInfo, MethodInfo * method));
DO_APP_FUNC(0x0171DC40, void, XmlTextReaderImpl_Throw, (XmlTextReaderImpl * __this, int32_t pos, String * res, String * arg, MethodInfo * method));
DO_APP_FUNC(0x0171DC70, void, XmlTextReaderImpl_Throw_1, (XmlTextReaderImpl * __this, int32_t pos, String * res, String__Array * args, MethodInfo * method));
DO_APP_FUNC(0x0171DCA0, void, XmlTextReaderImpl_Throw_2, (XmlTextReaderImpl * __this, int32_t pos, String * res, MethodInfo * method));
DO_APP_FUNC(0x0171DD10, void, XmlTextReaderImpl_Throw_3, (XmlTextReaderImpl * __this, String * res, MethodInfo * method));
DO_APP_FUNC(0x0171DD60, void, XmlTextReaderImpl_Throw_4, (XmlTextReaderImpl * __this, String * res, int32_t lineNo, int32_t linePos, MethodInfo * method));
DO_APP_FUNC(0x0171DE10, void, XmlTextReaderImpl_Throw_5, (XmlTextReaderImpl * __this, String * res, String * arg, MethodInfo * method));
DO_APP_FUNC(0x0171DEC0, void, XmlTextReaderImpl_Throw_6, (XmlTextReaderImpl * __this, String * res, String * arg, int32_t lineNo, int32_t linePos, MethodInfo * method));
DO_APP_FUNC(0x0171DF60, void, XmlTextReaderImpl_Throw_7, (XmlTextReaderImpl * __this, String * res, String__Array * args, MethodInfo * method));
DO_APP_FUNC(0x0171E010, void, XmlTextReaderImpl_Throw_8, (XmlTextReaderImpl * __this, String * res, String * arg, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x0171E0A0, void, XmlTextReaderImpl_Throw_9, (XmlTextReaderImpl * __this, String * res, String__Array * args, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x0171E150, void, XmlTextReaderImpl_Throw_10, (XmlTextReaderImpl * __this, Exception * e, MethodInfo * method));
DO_APP_FUNC(0x0171E280, void, XmlTextReaderImpl_ReThrow, (XmlTextReaderImpl * __this, Exception * e, int32_t lineNo, int32_t linePos, MethodInfo * method));
DO_APP_FUNC(0x0171E330, void, XmlTextReaderImpl_ThrowWithoutLineInfo, (XmlTextReaderImpl * __this, String * res, MethodInfo * method));
DO_APP_FUNC(0x0171E3D0, void, XmlTextReaderImpl_ThrowWithoutLineInfo_1, (XmlTextReaderImpl * __this, String * res, String * arg, MethodInfo * method));
DO_APP_FUNC(0x0171E460, void, XmlTextReaderImpl_ThrowWithoutLineInfo_2, (XmlTextReaderImpl * __this, String * res, String__Array * args, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x0171E500, void, XmlTextReaderImpl_ThrowInvalidChar, (XmlTextReaderImpl * __this, Char__Array * data, int32_t length, int32_t invCharPos, MethodInfo * method));
DO_APP_FUNC(0x0171E570, void, XmlTextReaderImpl_SetErrorState, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171E590, void, XmlTextReaderImpl_SendValidationEvent, (XmlTextReaderImpl * __this, XmlSeverityType__Enum severity, String * code, String * arg, int32_t lineNo, int32_t linePos, MethodInfo * method));
DO_APP_FUNC(0x0171E790, void, XmlTextReaderImpl_SendValidationEvent_1, (XmlTextReaderImpl * __this, XmlSeverityType__Enum severity, XmlSchemaException * exception, MethodInfo * method));
DO_APP_FUNC(0x0171E830, bool, XmlTextReaderImpl_get_InAttributeValueIterator, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171E850, void, XmlTextReaderImpl_FinishAttributeValueIterator, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171D1D0, bool, XmlTextReaderImpl_get_DtdValidation, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171E9D0, void, XmlTextReaderImpl_InitStreamInput, (XmlTextReaderImpl * __this, Stream * stream, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x0171EAA0, void, XmlTextReaderImpl_InitStreamInput_1, (XmlTextReaderImpl * __this, String * baseUriStr, Stream * stream, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x0171EAD0, void, XmlTextReaderImpl_InitStreamInput_2, (XmlTextReaderImpl * __this, Uri * baseUri, Stream * stream, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x0171EB50, void, XmlTextReaderImpl_InitStreamInput_3, (XmlTextReaderImpl * __this, Uri * baseUri, String * baseUriStr, Stream * stream, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x0171EB80, void, XmlTextReaderImpl_InitStreamInput_4, (XmlTextReaderImpl * __this, Uri * baseUri, String * baseUriStr, Stream * stream, Byte__Array * bytes, int32_t byteCount, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x0171EE60, void, XmlTextReaderImpl_InitTextReaderInput, (XmlTextReaderImpl * __this, String * baseUriStr, TextReader * input, MethodInfo * method));
DO_APP_FUNC(0x0171EE80, void, XmlTextReaderImpl_InitTextReaderInput_1, (XmlTextReaderImpl * __this, String * baseUriStr, Uri * baseUri, TextReader * input, MethodInfo * method));
DO_APP_FUNC(0x0171EF80, void, XmlTextReaderImpl_InitStringInput, (XmlTextReaderImpl * __this, String * baseUriStr, Encoding * originalEncoding, String * str, MethodInfo * method));
DO_APP_FUNC(0x0171F0C0, void, XmlTextReaderImpl_InitFragmentReader, (XmlTextReaderImpl * __this, XmlNodeType__Enum fragmentType, XmlParserContext * parserContext, bool allowXmlDeclFragment, MethodInfo * method));
DO_APP_FUNC(0x0171F4A0, void, XmlTextReaderImpl_ProcessDtdFromParserContext, (XmlTextReaderImpl * __this, XmlParserContext * context, MethodInfo * method));
DO_APP_FUNC(0x0171F550, void, XmlTextReaderImpl_OpenUrl, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171F810, void, XmlTextReaderImpl_OpenUrlDelegate, (XmlTextReaderImpl * __this, Object * xmlResolver, MethodInfo * method));
DO_APP_FUNC(0x0171F970, Encoding *, XmlTextReaderImpl_DetectEncoding, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171FCD0, void, XmlTextReaderImpl_SetupEncoding, (XmlTextReaderImpl * __this, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x01720060, void, XmlTextReaderImpl_SwitchEncoding, (XmlTextReaderImpl * __this, Encoding * newEncoding, MethodInfo * method));
DO_APP_FUNC(0x01720270, Encoding *, XmlTextReaderImpl_CheckEncoding, (XmlTextReaderImpl * __this, String * newEncodingName, MethodInfo * method));
DO_APP_FUNC(0x01720AF0, void, XmlTextReaderImpl_UnDecodeChars, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01720BA0, void, XmlTextReaderImpl_SwitchEncodingToUTF8, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01720D00, int32_t, XmlTextReaderImpl_ReadData, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01721280, int32_t, XmlTextReaderImpl_GetChars, (XmlTextReaderImpl * __this, int32_t maxCharsCount, MethodInfo * method));
DO_APP_FUNC(0x017213E0, void, XmlTextReaderImpl_InvalidCharRecovery, (XmlTextReaderImpl * __this, int32_t * bytesCount, int32_t * charsCount, MethodInfo * method));
DO_APP_FUNC(0x01721590, void, XmlTextReaderImpl_Close_1, (XmlTextReaderImpl * __this, bool closeInput, MethodInfo * method));
DO_APP_FUNC(0x017216E0, void, XmlTextReaderImpl_ShiftBuffer, (XmlTextReaderImpl * __this, int32_t sourcePos, int32_t destPos, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01721710, bool, XmlTextReaderImpl_ParseXmlDeclaration, (XmlTextReaderImpl * __this, bool isTextDecl, MethodInfo * method));
DO_APP_FUNC(0x01722630, bool, XmlTextReaderImpl_ParseDocumentContent, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01722BE0, bool, XmlTextReaderImpl_ParseElementContent, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01722F90, void, XmlTextReaderImpl_ThrowUnclosedElements, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x017231A0, void, XmlTextReaderImpl_ParseElement, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x017237C0, void, XmlTextReaderImpl_AddDefaultAttributesAndNormalize, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01723E50, void, XmlTextReaderImpl_ParseEndElement, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01724330, void, XmlTextReaderImpl_ThrowTagMismatch, (XmlTextReaderImpl * __this, XmlTextReaderImpl_NodeData * startTag, MethodInfo * method));
DO_APP_FUNC(0x01724590, void, XmlTextReaderImpl_ParseAttributes, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01724C80, void, XmlTextReaderImpl_ElementNamespaceLookup, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01724CF0, void, XmlTextReaderImpl_AttributeNamespaceLookup, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01724DB0, void, XmlTextReaderImpl_AttributeDuplCheck, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x017251E0, void, XmlTextReaderImpl_OnDefaultNamespaceDecl, (XmlTextReaderImpl * __this, XmlTextReaderImpl_NodeData * attr, MethodInfo * method));
DO_APP_FUNC(0x01725370, void, XmlTextReaderImpl_OnNamespaceDecl, (XmlTextReaderImpl * __this, XmlTextReaderImpl_NodeData * attr, MethodInfo * method));
DO_APP_FUNC(0x017254F0, void, XmlTextReaderImpl_OnXmlReservedAttribute, (XmlTextReaderImpl * __this, XmlTextReaderImpl_NodeData * attr, MethodInfo * method));
DO_APP_FUNC(0x017257E0, void, XmlTextReaderImpl_ParseAttributeValueSlow, (XmlTextReaderImpl * __this, int32_t curPos, uint16_t quoteChar, XmlTextReaderImpl_NodeData * attr, MethodInfo * method));
DO_APP_FUNC(0x01726A40, void, XmlTextReaderImpl_AddAttributeChunkToList, (XmlTextReaderImpl * __this, XmlTextReaderImpl_NodeData * attr, XmlTextReaderImpl_NodeData * chunk, XmlTextReaderImpl_NodeData * * lastChunk, MethodInfo * method));
DO_APP_FUNC(0x01726A70, bool, XmlTextReaderImpl_ParseText, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01726F50, bool, XmlTextReaderImpl_ParseText_1, (XmlTextReaderImpl * __this, int32_t * startPos, int32_t * endPos, int32_t * outOrChars, MethodInfo * method));
DO_APP_FUNC(0x017277C0, void, XmlTextReaderImpl_FinishPartialValue, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01727910, void, XmlTextReaderImpl_FinishOtherValueIterator, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01727B70, void, XmlTextReaderImpl_SkipPartialTextValue, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01727BD0, void, XmlTextReaderImpl_FinishReadValueChunk, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01727C10, void, XmlTextReaderImpl_FinishReadContentAsBinary, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01727D70, void, XmlTextReaderImpl_FinishReadElementContentAsBinary, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01727EB0, bool, XmlTextReaderImpl_ParseRootLevelWhitespace, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x017281B0, void, XmlTextReaderImpl_ParseEntityReference, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01728220, XmlTextReaderImpl_EntityType__Enum, XmlTextReaderImpl_HandleEntityReference, (XmlTextReaderImpl * __this, bool isInAttributeValue, XmlTextReaderImpl_EntityExpandType__Enum expandType, int32_t * charRefEndPos, MethodInfo * method));
DO_APP_FUNC(0x017284F0, XmlTextReaderImpl_EntityType__Enum, XmlTextReaderImpl_HandleGeneralEntityReference, (XmlTextReaderImpl * __this, String * name, bool isInAttributeValue, bool pushFakeEntityIfNullResolver, int32_t entityStartLinePos, MethodInfo * method));
DO_APP_FUNC(0x01728BE0, bool, XmlTextReaderImpl_get_InEntity, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01728BF0, bool, XmlTextReaderImpl_HandleEntityEnd, (XmlTextReaderImpl * __this, bool checkEntityNesting, MethodInfo * method));
DO_APP_FUNC(0x01728DD0, void, XmlTextReaderImpl_SetupEndEntityNodeInContent, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01728F30, void, XmlTextReaderImpl_SetupEndEntityNodeInAttribute, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01728FC0, bool, XmlTextReaderImpl_ParsePI, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01728FD0, bool, XmlTextReaderImpl_ParsePI_1, (XmlTextReaderImpl * __this, StringBuilder * piInDtdStringBuilder, MethodInfo * method));
DO_APP_FUNC(0x01729520, bool, XmlTextReaderImpl_ParsePIValue, (XmlTextReaderImpl * __this, int32_t * outStartPos, int32_t * outEndPos, MethodInfo * method));
DO_APP_FUNC(0x01729950, bool, XmlTextReaderImpl_ParseComment, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x017299B0, void, XmlTextReaderImpl_ParseCData, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x017299C0, void, XmlTextReaderImpl_ParseCDataOrComment, (XmlTextReaderImpl * __this, XmlNodeType__Enum type, MethodInfo * method));
DO_APP_FUNC(0x01729BA0, bool, XmlTextReaderImpl_ParseCDataOrComment_1, (XmlTextReaderImpl * __this, XmlNodeType__Enum type, int32_t * outStartPos, int32_t * outEndPos, MethodInfo * method));
DO_APP_FUNC(0x0172A040, bool, XmlTextReaderImpl_ParseDoctypeDecl, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0172A340, void, XmlTextReaderImpl_ParseDtd, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0172A680, void, XmlTextReaderImpl_SkipDtd, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0172AAB0, void, XmlTextReaderImpl_SkipPublicOrSystemIdLiteral, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0172AB90, void, XmlTextReaderImpl_SkipUntil, (XmlTextReaderImpl * __this, uint16_t stopChar, bool recognizeLiterals, MethodInfo * method));
DO_APP_FUNC(0x0172B140, int32_t, XmlTextReaderImpl_EatWhitespaces, (XmlTextReaderImpl * __this, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x0172B400, int32_t, XmlTextReaderImpl_ParseCharRefInline, (XmlTextReaderImpl * __this, int32_t startPos, int32_t * charCount, XmlTextReaderImpl_EntityType__Enum * entityType, MethodInfo * method));
DO_APP_FUNC(0x0172B490, int32_t, XmlTextReaderImpl_ParseNumericCharRef, (XmlTextReaderImpl * __this, bool expand, StringBuilder * internalSubsetBuilder, XmlTextReaderImpl_EntityType__Enum * entityType, MethodInfo * method));
DO_APP_FUNC(0x0172B590, int32_t, XmlTextReaderImpl_ParseNumericCharRefInline, (XmlTextReaderImpl * __this, int32_t startPos, bool expand, StringBuilder * internalSubsetBuilder, int32_t * charCount, XmlTextReaderImpl_EntityType__Enum * entityType, MethodInfo * method));
DO_APP_FUNC(0x0172BDD0, int32_t, XmlTextReaderImpl_ParseNamedCharRef, (XmlTextReaderImpl * __this, bool expand, StringBuilder * internalSubsetBuilder, MethodInfo * method));
DO_APP_FUNC(0x0172BE50, int32_t, XmlTextReaderImpl_ParseNamedCharRefInline, (XmlTextReaderImpl * __this, int32_t startPos, bool expand, StringBuilder * internalSubsetBuilder, MethodInfo * method));
DO_APP_FUNC(0x0172C240, int32_t, XmlTextReaderImpl_ParseName, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0172C270, int32_t, XmlTextReaderImpl_ParseQName, (XmlTextReaderImpl * __this, int32_t * colonPos, MethodInfo * method));
DO_APP_FUNC(0x0172C290, int32_t, XmlTextReaderImpl_ParseQName_1, (XmlTextReaderImpl * __this, bool isQName, int32_t startOffset, int32_t * colonPos, MethodInfo * method));
DO_APP_FUNC(0x0172C5D0, bool, XmlTextReaderImpl_ReadDataInName, (XmlTextReaderImpl * __this, int32_t * pos, MethodInfo * method));
DO_APP_FUNC(0x0172C620, String *, XmlTextReaderImpl_ParseEntityName, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0172C760, XmlTextReaderImpl_NodeData *, XmlTextReaderImpl_AddNode, (XmlTextReaderImpl * __this, int32_t nodeIndex, int32_t nodeDepth, MethodInfo * method));
DO_APP_FUNC(0x0172C7B0, XmlTextReaderImpl_NodeData *, XmlTextReaderImpl_AllocNode, (XmlTextReaderImpl * __this, int32_t nodeIndex, int32_t nodeDepth, MethodInfo * method));
DO_APP_FUNC(0x0172CA30, XmlTextReaderImpl_NodeData *, XmlTextReaderImpl_AddAttributeNoChecks, (XmlTextReaderImpl * __this, String * name, int32_t attrDepth, MethodInfo * method));
DO_APP_FUNC(0x0172CB00, XmlTextReaderImpl_NodeData *, XmlTextReaderImpl_AddAttribute, (XmlTextReaderImpl * __this, int32_t endNamePos, int32_t colonPos, MethodInfo * method));
DO_APP_FUNC(0x0172CD50, XmlTextReaderImpl_NodeData *, XmlTextReaderImpl_AddAttribute_1, (XmlTextReaderImpl * __this, String * localName, String * prefix, String * nameWPrefix, MethodInfo * method));
DO_APP_FUNC(0x0172CF10, void, XmlTextReaderImpl_PopElementContext, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0171D2E0, void, XmlTextReaderImpl_OnNewLine, (XmlTextReaderImpl * __this, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x0172CF90, void, XmlTextReaderImpl_OnEof, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0172D030, String *, XmlTextReaderImpl_LookupNamespace_1, (XmlTextReaderImpl * __this, XmlTextReaderImpl_NodeData * node, MethodInfo * method));
DO_APP_FUNC(0x0172D160, void, XmlTextReaderImpl_AddNamespace, (XmlTextReaderImpl * __this, String * prefix, String * uri, XmlTextReaderImpl_NodeData * attr, MethodInfo * method));
DO_APP_FUNC(0x0172D470, void, XmlTextReaderImpl_ResetAttributes, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0172D530, void, XmlTextReaderImpl_FullAttributeCleanup, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0172D5C0, void, XmlTextReaderImpl_PushXmlContext, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0172D750, void, XmlTextReaderImpl_PopXmlContext, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0172D790, XmlNodeType__Enum, XmlTextReaderImpl_GetWhitespaceType, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0172D7E0, XmlNodeType__Enum, XmlTextReaderImpl_GetTextNodeType, (XmlTextReaderImpl * __this, int32_t orChars, MethodInfo * method));
DO_APP_FUNC(0x0172D840, void, XmlTextReaderImpl_PushExternalEntityOrSubset, (XmlTextReaderImpl * __this, String * publicId, String * systemId, Uri * baseUri, String * entityName, MethodInfo * method));
DO_APP_FUNC(0x0172DBB0, bool, XmlTextReaderImpl_OpenAndPush, (XmlTextReaderImpl * __this, Uri * uri, MethodInfo * method));
DO_APP_FUNC(0x0172DEC0, bool, XmlTextReaderImpl_PushExternalEntity, (XmlTextReaderImpl * __this, IDtdEntityInfo * entity, MethodInfo * method));
DO_APP_FUNC(0x0172E0F0, void, XmlTextReaderImpl_PushInternalEntity, (XmlTextReaderImpl * __this, IDtdEntityInfo * entity, MethodInfo * method));
DO_APP_FUNC(0x0172E2B0, void, XmlTextReaderImpl_PopEntity, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0172E390, void, XmlTextReaderImpl_RegisterEntity, (XmlTextReaderImpl * __this, IDtdEntityInfo * entity, MethodInfo * method));
DO_APP_FUNC(0x0172E6A0, void, XmlTextReaderImpl_UnregisterEntity, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0172E740, void, XmlTextReaderImpl_PushParsingState, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0172E8E0, void, XmlTextReaderImpl_PopParsingState, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0172E9C0, int32_t, XmlTextReaderImpl_IncrementalRead, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0172F7D0, void, XmlTextReaderImpl_FinishIncrementalRead, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0172F930, bool, XmlTextReaderImpl_ParseFragmentAttribute, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0172F9D0, bool, XmlTextReaderImpl_ParseAttributeValueChunk, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x017300F0, void, XmlTextReaderImpl_ParseXmlDeclarationFragment, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x017301E0, void, XmlTextReaderImpl_ThrowUnexpectedToken, (XmlTextReaderImpl * __this, int32_t pos, String * expectedToken, MethodInfo * method));
DO_APP_FUNC(0x01730200, void, XmlTextReaderImpl_ThrowUnexpectedToken_1, (XmlTextReaderImpl * __this, String * expectedToken1, MethodInfo * method));
DO_APP_FUNC(0x01730210, void, XmlTextReaderImpl_ThrowUnexpectedToken_2, (XmlTextReaderImpl * __this, int32_t pos, String * expectedToken1, String * expectedToken2, MethodInfo * method));
DO_APP_FUNC(0x01730240, void, XmlTextReaderImpl_ThrowUnexpectedToken_3, (XmlTextReaderImpl * __this, String * expectedToken1, String * expectedToken2, MethodInfo * method));
DO_APP_FUNC(0x017303E0, String *, XmlTextReaderImpl_ParseUnexpectedToken, (XmlTextReaderImpl * __this, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x017303F0, String *, XmlTextReaderImpl_ParseUnexpectedToken_1, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01730510, void, XmlTextReaderImpl_ThrowExpectingWhitespace, (XmlTextReaderImpl * __this, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x017305C0, int32_t, XmlTextReaderImpl_GetIndexOfAttributeWithoutPrefix, (XmlTextReaderImpl * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x017306A0, int32_t, XmlTextReaderImpl_GetIndexOfAttributeWithPrefix, (XmlTextReaderImpl * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x017307B0, bool, XmlTextReaderImpl_ZeroEndingStream, (XmlTextReaderImpl * __this, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x01730830, void, XmlTextReaderImpl_ParseDtdFromParserContext, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01730A80, bool, XmlTextReaderImpl_MoveToNextContentNode, (XmlTextReaderImpl * __this, bool moveIfOnContentNode, MethodInfo * method));
DO_APP_FUNC(0x01730BA0, void, XmlTextReaderImpl_SetupFromParserContext, (XmlTextReaderImpl * __this, XmlParserContext * context, XmlReaderSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x007008C0, IDtdInfo *, XmlTextReaderImpl_get_DtdInfo, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01730FA0, void, XmlTextReaderImpl_SetDtdInfo, (XmlTextReaderImpl * __this, IDtdInfo * newDtdInfo, MethodInfo * method));
DO_APP_FUNC(0x0110EE00, void, XmlTextReaderImpl_set_ValidationEventHandling, (XmlTextReaderImpl * __this, IValidationEventHandling * value, MethodInfo * method));
DO_APP_FUNC(0x01731090, void, XmlTextReaderImpl_set_OnDefaultAttributeUse, (XmlTextReaderImpl * __this, XmlTextReaderImpl_OnDefaultAttributeUseDelegate * value, MethodInfo * method));
DO_APP_FUNC(0x017310A0, void, XmlTextReaderImpl_set_XmlValidatingReaderCompatibilityMode, (XmlTextReaderImpl * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x0129B9A0, XmlNodeType__Enum, XmlTextReaderImpl_get_FragmentType, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x017311B0, void, XmlTextReaderImpl_ChangeCurrentNodeType, (XmlTextReaderImpl * __this, XmlNodeType__Enum newNodeType, MethodInfo * method));
DO_APP_FUNC(0x00418200, XmlResolver *, XmlTextReaderImpl_GetResolver, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x017311D0, void, XmlTextReaderImpl_set_InternalSchemaType, (XmlTextReaderImpl * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01731200, Object *, XmlTextReaderImpl_get_InternalTypedValue, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01731230, void, XmlTextReaderImpl_set_InternalTypedValue, (XmlTextReaderImpl * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x00949CF0, bool, XmlTextReaderImpl_get_StandAlone, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x0071EAB0, XmlNamespaceManager *, XmlTextReaderImpl_get_NamespaceManager, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x00A640A0, bool, XmlTextReaderImpl_get_V1Compat, (XmlTextReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01731260, bool, XmlTextReaderImpl_AddDefaultAttributeDtd, (XmlTextReaderImpl * __this, IDtdDefaultAttributeInfo * defAttrInfo, bool definedInDtd, XmlTextReaderImpl_NodeData__Array * nameSortedNodeData, MethodInfo * method));
DO_APP_FUNC(0x017315A0, bool, XmlTextReaderImpl_AddDefaultAttributeNonDtd, (XmlTextReaderImpl * __this, SchemaAttDef * attrDef, MethodInfo * method));
DO_APP_FUNC(0x017318C0, XmlTextReaderImpl_NodeData *, XmlTextReaderImpl_AddDefaultAttributeInternal, (XmlTextReaderImpl * __this, String * localName, String * ns, String * prefix, String * value, int32_t lineNo, int32_t linePos, int32_t valueLineNo, int32_t valueLinePos, bool isXmlAttribute, MethodInfo * method));
DO_APP_FUNC(0x01731BE0, void, XmlTextReaderImpl_set_DisableUndeclaredEntityCheck, (XmlTextReaderImpl * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01731BF0, bool, XmlTextReaderImpl_UriEqual, (XmlTextReaderImpl * __this, Uri * uri1, String * uri1Str, String * uri2Str, XmlResolver * resolver, MethodInfo * method));
DO_APP_FUNC(0x01731D40, void, XmlTextReaderImpl_RegisterConsumedCharacters, (XmlTextReaderImpl * __this, int64_t characters, bool inEntityReference, MethodInfo * method));
DO_APP_FUNC(0x01731EA0, String *, XmlTextReaderImpl_StripSpaces, (String * value, MethodInfo * method));
DO_APP_FUNC(0x01732160, void, XmlTextReaderImpl_StripSpaces_1, (Char__Array * value, int32_t index, int32_t * len, MethodInfo * method));
DO_APP_FUNC(0x017322C0, void, XmlTextReaderImpl_BlockCopyChars, (Char__Array * src, int32_t srcOffset, Char__Array * dst, int32_t dstOffset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x017322E0, void, XmlTextReaderImpl_BlockCopy, (Byte__Array * src, int32_t srcOffset, Byte__Array * dst, int32_t dstOffset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01FBBBC0, void, XmlTextReaderImpl_LaterInitParam__ctor, (XmlTextReaderImpl_LaterInitParam * __this, MethodInfo * method));
DO_APP_FUNC(0x001DA3C0, void, XmlTextReaderImpl_ParsingState_Clear, (XmlTextReaderImpl_ParsingState__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DA3D0, void, XmlTextReaderImpl_ParsingState_Close, (XmlTextReaderImpl_ParsingState__Boxed * __this, bool closeInput, MethodInfo * method));
DO_APP_FUNC(0x00116320, int32_t, XmlTextReaderImpl_ParsingState_get_LineNo, (XmlTextReaderImpl_ParsingState__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DA410, int32_t, XmlTextReaderImpl_ParsingState_get_LinePos, (XmlTextReaderImpl_ParsingState__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBCA00, void, XmlTextReaderImpl_XmlContext__ctor, (XmlTextReaderImpl_XmlContext * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBCAB0, void, XmlTextReaderImpl_XmlContext__ctor_1, (XmlTextReaderImpl_XmlContext * __this, XmlTextReaderImpl_XmlContext * previousContext, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlTextReaderImpl_NoNamespaceManager__ctor, (XmlTextReaderImpl_NoNamespaceManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBBBD0, String *, XmlTextReaderImpl_NoNamespaceManager_get_DefaultNamespace, (XmlTextReaderImpl_NoNamespaceManager * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlTextReaderImpl_NoNamespaceManager_PushScope, (XmlTextReaderImpl_NoNamespaceManager * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, XmlTextReaderImpl_NoNamespaceManager_PopScope, (XmlTextReaderImpl_NoNamespaceManager * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlTextReaderImpl_NoNamespaceManager_AddNamespace, (XmlTextReaderImpl_NoNamespaceManager * __this, String * prefix, String * uri, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlTextReaderImpl_NoNamespaceManager_RemoveNamespace, (XmlTextReaderImpl_NoNamespaceManager * __this, String * prefix, String * uri, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, IEnumerator *, XmlTextReaderImpl_NoNamespaceManager_GetEnumerator, (XmlTextReaderImpl_NoNamespaceManager * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, IDictionary_2_System_String_System_String_ *, XmlTextReaderImpl_NoNamespaceManager_GetNamespacesInScope, (XmlTextReaderImpl_NoNamespaceManager * __this, XmlNamespaceScope__Enum scope, MethodInfo * method));
DO_APP_FUNC(0x01FBBC50, String *, XmlTextReaderImpl_NoNamespaceManager_LookupNamespace, (XmlTextReaderImpl_NoNamespaceManager * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, String *, XmlTextReaderImpl_NoNamespaceManager_LookupPrefix, (XmlTextReaderImpl_NoNamespaceManager * __this, String * uri, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, XmlTextReaderImpl_DtdParserProxy__ctor, (XmlTextReaderImpl_DtdParserProxy * __this, XmlTextReaderImpl * reader, MethodInfo * method));
DO_APP_FUNC(0x01FBB230, XmlNameTable *, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapter_get_NameTable, (XmlTextReaderImpl_DtdParserProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBB250, IXmlNamespaceResolver *, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapter_get_NamespaceResolver, (XmlTextReaderImpl_DtdParserProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBB270, Uri *, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapter_get_BaseUri, (XmlTextReaderImpl_DtdParserProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBB370, bool, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapter_get_IsEof, (XmlTextReaderImpl_DtdParserProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x01A88520, Char__Array *, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapter_get_ParsingBuffer, (XmlTextReaderImpl_DtdParserProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBB390, int32_t, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapter_get_ParsingBufferLength, (XmlTextReaderImpl_DtdParserProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBB3B0, int32_t, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapter_get_CurrentPosition, (XmlTextReaderImpl_DtdParserProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBB3D0, void, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapter_set_CurrentPosition, (XmlTextReaderImpl_DtdParserProxy * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01FBB3F0, int32_t, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapter_get_EntityStackLength, (XmlTextReaderImpl_DtdParserProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBB410, bool, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapter_get_IsEntityEolNormalized, (XmlTextReaderImpl_DtdParserProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBB430, void, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapter_OnNewLine, (XmlTextReaderImpl_DtdParserProxy * __this, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x01FBB460, int32_t, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapter_get_LineNo, (XmlTextReaderImpl_DtdParserProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBB480, int32_t, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapter_get_LineStartPosition, (XmlTextReaderImpl_DtdParserProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBB4A0, int32_t, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapter_ReadData, (XmlTextReaderImpl_DtdParserProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBB4C0, int32_t, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapter_ParseNumericCharRef, (XmlTextReaderImpl_DtdParserProxy * __this, StringBuilder * internalSubsetBuilder, MethodInfo * method));
DO_APP_FUNC(0x01FBB500, int32_t, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapter_ParseNamedCharRef, (XmlTextReaderImpl_DtdParserProxy * __this, bool expand, StringBuilder * internalSubsetBuilder, MethodInfo * method));
DO_APP_FUNC(0x01FBB520, void, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapter_ParsePI, (XmlTextReaderImpl_DtdParserProxy * __this, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x01FBB580, void, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapter_ParseComment, (XmlTextReaderImpl_DtdParserProxy * __this, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x01FBB5A0, bool, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapter_PushEntity, (XmlTextReaderImpl_DtdParserProxy * __this, IDtdEntityInfo * entity, int32_t * entityId, MethodInfo * method));
DO_APP_FUNC(0x01FBB6D0, bool, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapter_PopEntity, (XmlTextReaderImpl_DtdParserProxy * __this, IDtdEntityInfo * * oldEntity, int32_t * newEntityId, MethodInfo * method));
DO_APP_FUNC(0x01FBB740, bool, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapter_PushExternalSubset, (XmlTextReaderImpl_DtdParserProxy * __this, String * systemId, String * publicId, MethodInfo * method));
DO_APP_FUNC(0x01FBB8C0, void, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapter_PushInternalDtd, (XmlTextReaderImpl_DtdParserProxy * __this, String * baseUri, String * internalDtd, MethodInfo * method));
DO_APP_FUNC(0x01FBB960, void, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapter_Throw, (XmlTextReaderImpl_DtdParserProxy * __this, Exception * e, MethodInfo * method));
DO_APP_FUNC(0x01FBB990, void, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapter_OnSystemId, (XmlTextReaderImpl_DtdParserProxy * __this, String * systemId, LineInfo keywordLineInfo, LineInfo systemLiteralLineInfo, MethodInfo * method));
DO_APP_FUNC(0x01FBBA70, void, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapter_OnPublicId, (XmlTextReaderImpl_DtdParserProxy * __this, String * publicId, LineInfo keywordLineInfo, LineInfo publicLiteralLineInfo, MethodInfo * method));
DO_APP_FUNC(0x01FBBB50, bool, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapterWithValidation_get_DtdValidation, (XmlTextReaderImpl_DtdParserProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBBB80, IValidationEventHandling *, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapterWithValidation_get_ValidationEventHandling, (XmlTextReaderImpl_DtdParserProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x017176B0, bool, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapterV1_get_Normalization, (XmlTextReaderImpl_DtdParserProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x01717690, bool, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapterV1_get_Namespaces, (XmlTextReaderImpl_DtdParserProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBBBA0, bool, XmlTextReaderImpl_DtdParserProxy_System_Xml_IDtdParserAdapterV1_get_V1CompatibilityMode, (XmlTextReaderImpl_DtdParserProxy * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBBCD0, XmlTextReaderImpl_NodeData *, XmlTextReaderImpl_NodeData_get_None, (MethodInfo * method));
DO_APP_FUNC(0x01FBBE60, void, XmlTextReaderImpl_NodeData__ctor, (XmlTextReaderImpl_NodeData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD490, int32_t, XmlTextReaderImpl_NodeData_get_LineNo, (XmlTextReaderImpl_NodeData * __this, MethodInfo * method));
DO_APP_FUNC(0x003FDCE0, int32_t, XmlTextReaderImpl_NodeData_get_LinePos, (XmlTextReaderImpl_NodeData * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBBE80, bool, XmlTextReaderImpl_NodeData_get_IsEmptyElement, (XmlTextReaderImpl_NodeData * __this, MethodInfo * method));
DO_APP_FUNC(0x0051DB50, void, XmlTextReaderImpl_NodeData_set_IsEmptyElement, (XmlTextReaderImpl_NodeData * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01FBBE90, bool, XmlTextReaderImpl_NodeData_get_IsDefaultAttribute, (XmlTextReaderImpl_NodeData * __this, MethodInfo * method));
DO_APP_FUNC(0x0051DB50, void, XmlTextReaderImpl_NodeData_set_IsDefaultAttribute, (XmlTextReaderImpl_NodeData * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01FBBEA0, bool, XmlTextReaderImpl_NodeData_get_ValueBuffered, (XmlTextReaderImpl_NodeData * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBBEB0, String *, XmlTextReaderImpl_NodeData_get_StringValue, (XmlTextReaderImpl_NodeData * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBBEF0, void, XmlTextReaderImpl_NodeData_TrimSpacesInValue, (XmlTextReaderImpl_NodeData * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBC060, void, XmlTextReaderImpl_NodeData_Clear, (XmlTextReaderImpl_NodeData * __this, XmlNodeType__Enum type, MethodInfo * method));
DO_APP_FUNC(0x01FBC130, void, XmlTextReaderImpl_NodeData_ClearName, (XmlTextReaderImpl_NodeData * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBC200, void, XmlTextReaderImpl_NodeData_SetLineInfo, (XmlTextReaderImpl_NodeData * __this, int32_t lineNo, int32_t linePos, MethodInfo * method));
DO_APP_FUNC(0x01FBC210, void, XmlTextReaderImpl_NodeData_SetLineInfo2, (XmlTextReaderImpl_NodeData * __this, int32_t lineNo, int32_t linePos, MethodInfo * method));
DO_APP_FUNC(0x01FBC220, void, XmlTextReaderImpl_NodeData_SetValueNode, (XmlTextReaderImpl_NodeData * __this, XmlNodeType__Enum type, String * value, MethodInfo * method));
DO_APP_FUNC(0x01FBC250, void, XmlTextReaderImpl_NodeData_SetValueNode_1, (XmlTextReaderImpl_NodeData * __this, XmlNodeType__Enum type, Char__Array * chars, int32_t startPos, int32_t len, MethodInfo * method));
DO_APP_FUNC(0x01FBC2A0, void, XmlTextReaderImpl_NodeData_SetNamedNode, (XmlTextReaderImpl_NodeData * __this, XmlNodeType__Enum type, String * localName, MethodInfo * method));
DO_APP_FUNC(0x01FBC360, void, XmlTextReaderImpl_NodeData_SetNamedNode_1, (XmlTextReaderImpl_NodeData * __this, XmlNodeType__Enum type, String * localName, String * prefix, String * nameWPrefix, MethodInfo * method));
DO_APP_FUNC(0x01FBC440, void, XmlTextReaderImpl_NodeData_SetValue, (XmlTextReaderImpl_NodeData * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01FBC450, void, XmlTextReaderImpl_NodeData_SetValue_1, (XmlTextReaderImpl_NodeData * __this, Char__Array * chars, int32_t startPos, int32_t len, MethodInfo * method));
DO_APP_FUNC(0x01FBC470, void, XmlTextReaderImpl_NodeData_OnBufferInvalidated, (XmlTextReaderImpl_NodeData * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBC4C0, void, XmlTextReaderImpl_NodeData_CopyTo, (XmlTextReaderImpl_NodeData * __this, int32_t valueOffset, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x01FBC560, int32_t, XmlTextReaderImpl_NodeData_CopyTo_1, (XmlTextReaderImpl_NodeData * __this, int32_t valueOffset, Char__Array * buffer, int32_t offset, int32_t length, MethodInfo * method));
DO_APP_FUNC(0x01FBC5E0, String *, XmlTextReaderImpl_NodeData_GetNameWPrefix, (XmlTextReaderImpl_NodeData * __this, XmlNameTable * nt, MethodInfo * method));
DO_APP_FUNC(0x01FBC6D0, String *, XmlTextReaderImpl_NodeData_CreateNameWPrefix, (XmlTextReaderImpl_NodeData * __this, XmlNameTable * nt, MethodInfo * method));
DO_APP_FUNC(0x01FBC7B0, int32_t, XmlTextReaderImpl_NodeData_System_IComparable_CompareTo, (XmlTextReaderImpl_NodeData * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01FBACB0, IComparer_1_System_Object_ *, XmlTextReaderImpl_DtdDefaultAttributeInfoToNodeDataComparer_get_Instance, (MethodInfo * method));
DO_APP_FUNC(0x01FBAD50, int32_t, XmlTextReaderImpl_DtdDefaultAttributeInfoToNodeDataComparer_Compare, (XmlTextReaderImpl_DtdDefaultAttributeInfoToNodeDataComparer * __this, Object * x, Object * y, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlTextReaderImpl_DtdDefaultAttributeInfoToNodeDataComparer__ctor, (XmlTextReaderImpl_DtdDefaultAttributeInfoToNodeDataComparer * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBB0F0, void, XmlTextReaderImpl_DtdDefaultAttributeInfoToNodeDataComparer__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00611810, void, XmlTextReaderImpl_OnDefaultAttributeUseDelegate__ctor, (XmlTextReaderImpl_OnDefaultAttributeUseDelegate * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, XmlTextReaderImpl_OnDefaultAttributeUseDelegate_Invoke, (XmlTextReaderImpl_OnDefaultAttributeUseDelegate * __this, IDtdDefaultAttributeInfo * defaultAttribute, XmlTextReaderImpl * coreReader, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, XmlTextReaderImpl_OnDefaultAttributeUseDelegate_BeginInvoke, (XmlTextReaderImpl_OnDefaultAttributeUseDelegate * __this, IDtdDefaultAttributeInfo * defaultAttribute, XmlTextReaderImpl * coreReader, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, XmlTextReaderImpl_OnDefaultAttributeUseDelegate_EndInvoke, (XmlTextReaderImpl_OnDefaultAttributeUseDelegate * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01FBCAE0, void, XmlTextWriter__ctor, (XmlTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBCC40, void, XmlTextWriter__ctor_1, (XmlTextWriter * __this, Stream * w, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x01FBCF70, void, XmlTextWriter__ctor_2, (XmlTextWriter * __this, String * filename, Encoding * encoding, MethodInfo * method));
DO_APP_FUNC(0x01FBD100, void, XmlTextWriter__ctor_3, (XmlTextWriter * __this, TextWriter * w, MethodInfo * method));
DO_APP_FUNC(0x01FBD2A0, Stream *, XmlTextWriter_get_BaseStream, (XmlTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBD380, void, XmlTextWriter_set_Namespaces, (XmlTextWriter * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01FBD450, void, XmlTextWriter_set_Formatting, (XmlTextWriter * __this, Formatting__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01FBD460, void, XmlTextWriter_set_QuoteChar, (XmlTextWriter * __this, uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x01FBD540, void, XmlTextWriter_WriteStartDocument, (XmlTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBD550, void, XmlTextWriter_WriteStartDocument_1, (XmlTextWriter * __this, bool standalone, MethodInfo * method));
DO_APP_FUNC(0x01FBD570, void, XmlTextWriter_WriteEndDocument, (XmlTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBD730, void, XmlTextWriter_WriteDocType, (XmlTextWriter * __this, String * name, String * pubid, String * sysid, String * subset, MethodInfo * method));
DO_APP_FUNC(0x01FBDAB0, void, XmlTextWriter_WriteStartElement, (XmlTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01FBE080, void, XmlTextWriter_WriteEndElement, (XmlTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBE090, void, XmlTextWriter_WriteFullEndElement, (XmlTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBE0A0, void, XmlTextWriter_WriteStartAttribute, (XmlTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01FBE870, void, XmlTextWriter_WriteEndAttribute, (XmlTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBE930, void, XmlTextWriter_WriteCData, (XmlTextWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01FBEAE0, void, XmlTextWriter_WriteComment, (XmlTextWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01FBECB0, void, XmlTextWriter_WriteProcessingInstruction, (XmlTextWriter * __this, String * name, String * text, MethodInfo * method));
DO_APP_FUNC(0x01FBEF50, void, XmlTextWriter_WriteEntityRef, (XmlTextWriter * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01FBF0A0, void, XmlTextWriter_WriteCharEntity, (XmlTextWriter * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x01FBF2B0, void, XmlTextWriter_WriteWhitespace, (XmlTextWriter * __this, String * ws, MethodInfo * method));
DO_APP_FUNC(0x01FBF400, void, XmlTextWriter_WriteString, (XmlTextWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01FBF4F0, void, XmlTextWriter_WriteSurrogateCharEntity, (XmlTextWriter * __this, uint16_t lowChar, uint16_t highChar, MethodInfo * method));
DO_APP_FUNC(0x01FBF5E0, void, XmlTextWriter_WriteChars, (XmlTextWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01FBF6E0, void, XmlTextWriter_WriteRaw, (XmlTextWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01FBF7E0, void, XmlTextWriter_WriteRaw_1, (XmlTextWriter * __this, String * data, MethodInfo * method));
DO_APP_FUNC(0x01FBF8C0, void, XmlTextWriter_WriteBase64, (XmlTextWriter * __this, Byte__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01FBFAD0, void, XmlTextWriter_WriteBinHex, (XmlTextWriter * __this, Byte__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01FBFBD0, WriteState__Enum, XmlTextWriter_get_WriteState, (XmlTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBFC40, void, XmlTextWriter_Close, (XmlTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01F3EE40, void, XmlTextWriter_Flush, (XmlTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FBFDC0, String *, XmlTextWriter_LookupPrefix, (XmlTextWriter * __this, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01FBFF20, void, XmlTextWriter_StartDocument, (XmlTextWriter * __this, int32_t standalone, MethodInfo * method));
DO_APP_FUNC(0x01FC0270, void, XmlTextWriter_AutoComplete, (XmlTextWriter * __this, XmlTextWriter_Token__Enum token, MethodInfo * method));
DO_APP_FUNC(0x01FC08B0, void, XmlTextWriter_AutoCompleteAll, (XmlTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC0900, void, XmlTextWriter_InternalWriteEndElement, (XmlTextWriter * __this, bool longFormat, MethodInfo * method));
DO_APP_FUNC(0x01FC0D20, void, XmlTextWriter_WriteEndStartTag, (XmlTextWriter * __this, bool empty, MethodInfo * method));
DO_APP_FUNC(0x01FC1340, void, XmlTextWriter_WriteEndAttributeQuote, (XmlTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC13C0, void, XmlTextWriter_Indent, (XmlTextWriter * __this, bool beforeEndElement, MethodInfo * method));
DO_APP_FUNC(0x01FC14C0, void, XmlTextWriter_PushNamespace, (XmlTextWriter * __this, String * prefix, String * ns, bool declared, MethodInfo * method));
DO_APP_FUNC(0x01FC1860, void, XmlTextWriter_AddNamespace, (XmlTextWriter * __this, String * prefix, String * ns, bool declared, MethodInfo * method));
DO_APP_FUNC(0x01FC1BD0, void, XmlTextWriter_AddToNamespaceHashtable, (XmlTextWriter * __this, int32_t namespaceIndex, MethodInfo * method));
DO_APP_FUNC(0x01FC1DA0, void, XmlTextWriter_PopNamespaces, (XmlTextWriter * __this, int32_t indexFrom, int32_t indexTo, MethodInfo * method));
DO_APP_FUNC(0x01FC1ED0, String *, XmlTextWriter_GeneratePrefix, (XmlTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC2030, void, XmlTextWriter_InternalWriteProcessingInstruction, (XmlTextWriter * __this, String * name, String * text, MethodInfo * method));
DO_APP_FUNC(0x01FC2180, int32_t, XmlTextWriter_LookupNamespace, (XmlTextWriter * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01FC2310, int32_t, XmlTextWriter_LookupNamespaceInCurrentScope, (XmlTextWriter * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01FC2540, String *, XmlTextWriter_FindPrefix, (XmlTextWriter * __this, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01FC2680, void, XmlTextWriter_ValidateName, (XmlTextWriter * __this, String * name, bool isNCName, MethodInfo * method));
DO_APP_FUNC(0x01FC2940, void, XmlTextWriter_HandleSpecialAttribute, (XmlTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC2CA0, void, XmlTextWriter_VerifyPrefixXml, (XmlTextWriter * __this, String * prefix, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01FC2E20, void, XmlTextWriter_PushStack, (XmlTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC2F40, void, XmlTextWriter_FlushEncoders, (XmlTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC2F70, void, XmlTextWriter__cctor, (MethodInfo * method));
DO_APP_FUNC(0x001DAAC0, void, XmlTextWriter_TagInfo_Init, (XmlTextWriter_TagInfo__Boxed * __this, int32_t nsTop, MethodInfo * method));
DO_APP_FUNC(0x001DA650, void, XmlTextWriter_Namespace_Set, (XmlTextWriter_Namespace__Boxed * __this, String * prefix, String * ns, bool declared, MethodInfo * method));
DO_APP_FUNC(0x01FC4740, void, XmlUtf8RawTextWriter__ctor, (XmlUtf8RawTextWriter * __this, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x01FC4860, void, XmlUtf8RawTextWriter__ctor_1, (XmlUtf8RawTextWriter * __this, Stream * stream, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x01FC4AE0, void, XmlUtf8RawTextWriter_WriteXmlDeclaration, (XmlUtf8RawTextWriter * __this, XmlStandalone__Enum standalone, MethodInfo * method));
DO_APP_FUNC(0x01FC4D00, void, XmlUtf8RawTextWriter_WriteXmlDeclaration_1, (XmlUtf8RawTextWriter * __this, String * xmldecl, MethodInfo * method));
DO_APP_FUNC(0x01FC4DB0, void, XmlUtf8RawTextWriter_WriteDocType, (XmlUtf8RawTextWriter * __this, String * name, String * pubid, String * sysid, String * subset, MethodInfo * method));
DO_APP_FUNC(0x01FC5120, void, XmlUtf8RawTextWriter_WriteStartElement, (XmlUtf8RawTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01FC5200, void, XmlUtf8RawTextWriter_StartElementContent, (XmlUtf8RawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC5250, void, XmlUtf8RawTextWriter_WriteEndElement, (XmlUtf8RawTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01FC5460, void, XmlUtf8RawTextWriter_WriteFullEndElement, (XmlUtf8RawTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01FC55B0, void, XmlUtf8RawTextWriter_WriteStartAttribute, (XmlUtf8RawTextWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01FC5700, void, XmlUtf8RawTextWriter_WriteEndAttribute, (XmlUtf8RawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB0C20, void, XmlUtf8RawTextWriter_WriteNamespaceDeclaration, (XmlUtf8RawTextWriter * __this, String * prefix, String * namespaceName, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlUtf8RawTextWriter_get_SupportsNamespaceDeclarationInChunks, (XmlUtf8RawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC5750, void, XmlUtf8RawTextWriter_WriteStartNamespaceDeclaration, (XmlUtf8RawTextWriter * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01FC58E0, void, XmlUtf8RawTextWriter_WriteEndNamespaceDeclaration, (XmlUtf8RawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC5930, void, XmlUtf8RawTextWriter_WriteCData, (XmlUtf8RawTextWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01FC5C50, void, XmlUtf8RawTextWriter_WriteComment, (XmlUtf8RawTextWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01FC5E20, void, XmlUtf8RawTextWriter_WriteProcessingInstruction, (XmlUtf8RawTextWriter * __this, String * name, String * text, MethodInfo * method));
DO_APP_FUNC(0x01FC5FB0, void, XmlUtf8RawTextWriter_WriteEntityRef, (XmlUtf8RawTextWriter * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01FC6080, void, XmlUtf8RawTextWriter_WriteCharEntity, (XmlUtf8RawTextWriter * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x01FC62F0, void, XmlUtf8RawTextWriter_WriteWhitespace, (XmlUtf8RawTextWriter * __this, String * ws, MethodInfo * method));
DO_APP_FUNC(0x01FC62F0, void, XmlUtf8RawTextWriter_WriteString, (XmlUtf8RawTextWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01FC6330, void, XmlUtf8RawTextWriter_WriteSurrogateCharEntity, (XmlUtf8RawTextWriter * __this, uint16_t lowChar, uint16_t highChar, MethodInfo * method));
DO_APP_FUNC(0x0199C5A0, void, XmlUtf8RawTextWriter_WriteChars, (XmlUtf8RawTextWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01FC6520, void, XmlUtf8RawTextWriter_WriteRaw, (XmlUtf8RawTextWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x019508B0, void, XmlUtf8RawTextWriter_WriteRaw_1, (XmlUtf8RawTextWriter * __this, String * data, MethodInfo * method));
DO_APP_FUNC(0x01FC6580, void, XmlUtf8RawTextWriter_Close, (XmlUtf8RawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC6710, void, XmlUtf8RawTextWriter_Flush, (XmlUtf8RawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC6750, void, XmlUtf8RawTextWriter_FlushBuffer, (XmlUtf8RawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlUtf8RawTextWriter_FlushEncoder, (XmlUtf8RawTextWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC6AA0, void, XmlUtf8RawTextWriter_WriteAttributeTextBlock, (XmlUtf8RawTextWriter * __this, uint16_t * pSrc, uint16_t * pSrcEnd, MethodInfo * method));
DO_APP_FUNC(0x01FC6D60, void, XmlUtf8RawTextWriter_WriteElementTextBlock, (XmlUtf8RawTextWriter * __this, uint16_t * pSrc, uint16_t * pSrcEnd, MethodInfo * method));
DO_APP_FUNC(0x01FC7090, void, XmlUtf8RawTextWriter_RawText, (XmlUtf8RawTextWriter * __this, String * s, MethodInfo * method));
DO_APP_FUNC(0x01FC70C0, void, XmlUtf8RawTextWriter_RawText_1, (XmlUtf8RawTextWriter * __this, uint16_t * pSrcBegin, uint16_t * pSrcEnd, MethodInfo * method));
DO_APP_FUNC(0x01FC7230, void, XmlUtf8RawTextWriter_WriteRawWithCharChecking, (XmlUtf8RawTextWriter * __this, uint16_t * pSrcBegin, uint16_t * pSrcEnd, MethodInfo * method));
DO_APP_FUNC(0x01FC74E0, void, XmlUtf8RawTextWriter_WriteCommentOrPi, (XmlUtf8RawTextWriter * __this, String * text, int32_t stopChar, MethodInfo * method));
DO_APP_FUNC(0x01FC7880, void, XmlUtf8RawTextWriter_WriteCDataSection, (XmlUtf8RawTextWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01FC7BF0, bool, XmlUtf8RawTextWriter_IsSurrogateByte, (uint8_t b, MethodInfo * method));
DO_APP_FUNC(0x01FC7C00, uint8_t *, XmlUtf8RawTextWriter_EncodeSurrogate, (uint16_t * pSrc, uint16_t * pSrcEnd, uint8_t * pDst, MethodInfo * method));
DO_APP_FUNC(0x01FC7E00, uint8_t *, XmlUtf8RawTextWriter_InvalidXmlChar, (XmlUtf8RawTextWriter * __this, int32_t ch, uint8_t * pDst, bool entitize, MethodInfo * method));
DO_APP_FUNC(0x01FC7FF0, void, XmlUtf8RawTextWriter_EncodeChar, (XmlUtf8RawTextWriter * __this, uint16_t * * pSrc, uint16_t * pSrcEnd, uint8_t * * pDst, MethodInfo * method));
DO_APP_FUNC(0x01FC80C0, uint8_t *, XmlUtf8RawTextWriter_EncodeMultibyteUTF8, (int32_t ch, uint8_t * pDst, MethodInfo * method));
DO_APP_FUNC(0x01FC8110, void, XmlUtf8RawTextWriter_CharToUTF8, (uint16_t * * pSrc, uint16_t * pSrcEnd, uint8_t * * pDst, MethodInfo * method));
DO_APP_FUNC(0x01FC81C0, uint8_t *, XmlUtf8RawTextWriter_WriteNewLine, (XmlUtf8RawTextWriter * __this, uint8_t * pDst, MethodInfo * method));
DO_APP_FUNC(0x01FC8230, uint8_t *, XmlUtf8RawTextWriter_LtEntity, (uint8_t * pDst, MethodInfo * method));
DO_APP_FUNC(0x01FC8240, uint8_t *, XmlUtf8RawTextWriter_GtEntity, (uint8_t * pDst, MethodInfo * method));
DO_APP_FUNC(0x01FC8250, uint8_t *, XmlUtf8RawTextWriter_AmpEntity, (uint8_t * pDst, MethodInfo * method));
DO_APP_FUNC(0x01FC8260, uint8_t *, XmlUtf8RawTextWriter_QuoteEntity, (uint8_t * pDst, MethodInfo * method));
DO_APP_FUNC(0x01FC8280, uint8_t *, XmlUtf8RawTextWriter_TabEntity, (uint8_t * pDst, MethodInfo * method));
DO_APP_FUNC(0x01FC8290, uint8_t *, XmlUtf8RawTextWriter_LineFeedEntity, (uint8_t * pDst, MethodInfo * method));
DO_APP_FUNC(0x01FC82A0, uint8_t *, XmlUtf8RawTextWriter_CarriageReturnEntity, (uint8_t * pDst, MethodInfo * method));
DO_APP_FUNC(0x01FC82B0, uint8_t *, XmlUtf8RawTextWriter_CharEntity, (uint8_t * pDst, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x01FC83A0, uint8_t *, XmlUtf8RawTextWriter_RawStartCData, (uint8_t * pDst, MethodInfo * method));
DO_APP_FUNC(0x01FC83C0, uint8_t *, XmlUtf8RawTextWriter_RawEndCData, (uint8_t * pDst, MethodInfo * method));
DO_APP_FUNC(0x01FC83D0, void, XmlUtf8RawTextWriter_ValidateContentChars, (XmlUtf8RawTextWriter * __this, String * chars, String * propertyName, bool allowOnlyWhitespace, MethodInfo * method));
DO_APP_FUNC(0x01FC8790, void, XmlUtf8RawTextWriterIndent__ctor, (XmlUtf8RawTextWriterIndent * __this, Stream * stream, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x01FC87C0, void, XmlUtf8RawTextWriterIndent_WriteDocType, (XmlUtf8RawTextWriterIndent * __this, String * name, String * pubid, String * sysid, String * subset, MethodInfo * method));
DO_APP_FUNC(0x01FC8830, void, XmlUtf8RawTextWriterIndent_WriteStartElement, (XmlUtf8RawTextWriterIndent * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01FC88C0, void, XmlUtf8RawTextWriterIndent_StartElementContent, (XmlUtf8RawTextWriterIndent * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC8940, void, XmlUtf8RawTextWriterIndent_OnRootElement, (XmlUtf8RawTextWriterIndent * __this, ConformanceLevel__Enum currentConformanceLevel, MethodInfo * method));
DO_APP_FUNC(0x01FC8950, void, XmlUtf8RawTextWriterIndent_WriteEndElement, (XmlUtf8RawTextWriterIndent * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01FC8A30, void, XmlUtf8RawTextWriterIndent_WriteFullEndElement, (XmlUtf8RawTextWriterIndent * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01FC8B10, void, XmlUtf8RawTextWriterIndent_WriteStartAttribute, (XmlUtf8RawTextWriterIndent * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01FC8B70, void, XmlUtf8RawTextWriterIndent_WriteCData, (XmlUtf8RawTextWriterIndent * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01FC8B80, void, XmlUtf8RawTextWriterIndent_WriteComment, (XmlUtf8RawTextWriterIndent * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01FC8BC0, void, XmlUtf8RawTextWriterIndent_WriteProcessingInstruction, (XmlUtf8RawTextWriterIndent * __this, String * target, String * text, MethodInfo * method));
DO_APP_FUNC(0x01FC8C10, void, XmlUtf8RawTextWriterIndent_WriteEntityRef, (XmlUtf8RawTextWriterIndent * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01FC8CE0, void, XmlUtf8RawTextWriterIndent_WriteCharEntity, (XmlUtf8RawTextWriterIndent * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x01FC8CF0, void, XmlUtf8RawTextWriterIndent_WriteSurrogateCharEntity, (XmlUtf8RawTextWriterIndent * __this, uint16_t lowChar, uint16_t highChar, MethodInfo * method));
DO_APP_FUNC(0x01FC8D00, void, XmlUtf8RawTextWriterIndent_WriteWhitespace, (XmlUtf8RawTextWriterIndent * __this, String * ws, MethodInfo * method));
DO_APP_FUNC(0x01FC8D00, void, XmlUtf8RawTextWriterIndent_WriteString, (XmlUtf8RawTextWriterIndent * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01FC8D50, void, XmlUtf8RawTextWriterIndent_WriteChars, (XmlUtf8RawTextWriterIndent * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01FC8DB0, void, XmlUtf8RawTextWriterIndent_WriteRaw, (XmlUtf8RawTextWriterIndent * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01FC8E10, void, XmlUtf8RawTextWriterIndent_WriteRaw_1, (XmlUtf8RawTextWriterIndent * __this, String * data, MethodInfo * method));
DO_APP_FUNC(0x01FC8E60, void, XmlUtf8RawTextWriterIndent_WriteBase64, (XmlUtf8RawTextWriterIndent * __this, Byte__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01FC8E80, void, XmlUtf8RawTextWriterIndent_Init, (XmlUtf8RawTextWriterIndent * __this, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x01FC9050, void, XmlUtf8RawTextWriterIndent_WriteIndent, (XmlUtf8RawTextWriterIndent * __this, MethodInfo * method));
DO_APP_FUNC(0x016D9400, XmlNodeType__Enum, XmlValidatingReader_get_NodeType, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717030, String *, XmlValidatingReader_get_Name, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717060, String *, XmlValidatingReader_get_LocalName, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717090, String *, XmlValidatingReader_get_NamespaceURI, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x00442880, String *, XmlValidatingReader_get_Prefix, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017170C0, String *, XmlValidatingReader_get_Value, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017170F0, int32_t, XmlValidatingReader_get_Depth, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717120, String *, XmlValidatingReader_get_BaseURI, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717150, bool, XmlValidatingReader_get_IsEmptyElement, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717180, bool, XmlValidatingReader_get_IsDefault, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017171B0, uint16_t, XmlValidatingReader_get_QuoteChar, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017171E0, XmlSpace__Enum, XmlValidatingReader_get_XmlSpace, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717210, String *, XmlValidatingReader_get_XmlLang, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717240, int32_t, XmlValidatingReader_get_AttributeCount, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717270, String *, XmlValidatingReader_GetAttribute, (XmlValidatingReader * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x017172A0, String *, XmlValidatingReader_GetAttribute_1, (XmlValidatingReader * __this, String * localName, String * namespaceURI, MethodInfo * method));
DO_APP_FUNC(0x017172D0, String *, XmlValidatingReader_GetAttribute_2, (XmlValidatingReader * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x01717300, bool, XmlValidatingReader_MoveToAttribute, (XmlValidatingReader * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01717330, void, XmlValidatingReader_MoveToAttribute_1, (XmlValidatingReader * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x01717360, bool, XmlValidatingReader_MoveToFirstAttribute, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717390, bool, XmlValidatingReader_MoveToNextAttribute, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017173C0, bool, XmlValidatingReader_MoveToElement, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017173F0, bool, XmlValidatingReader_ReadAttributeValue, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717420, bool, XmlValidatingReader_Read, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717450, bool, XmlValidatingReader_get_EOF, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x016FB480, void, XmlValidatingReader_Close, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x016FB7D0, ReadState__Enum_1, XmlValidatingReader_get_ReadState, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017174B0, XmlNameTable *, XmlValidatingReader_get_NameTable, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017174E0, String *, XmlValidatingReader_LookupNamespace, (XmlValidatingReader * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlValidatingReader_get_CanResolveEntity, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717520, void, XmlValidatingReader_ResolveEntity, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC90E0, String *, XmlValidatingReader_ReadString, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlValidatingReader_HasLineInfo, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC9110, int32_t, XmlValidatingReader_get_LineNumber, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC9200, int32_t, XmlValidatingReader_get_LinePosition, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC92F0, IDictionary_2_System_String_System_String_ *, XmlValidatingReader_System_Xml_IXmlNamespaceResolver_GetNamespacesInScope, (XmlValidatingReader * __this, XmlNamespaceScope__Enum scope, MethodInfo * method));
DO_APP_FUNC(0x01717620, String *, XmlValidatingReader_System_Xml_IXmlNamespaceResolver_LookupNamespace, (XmlValidatingReader * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01FC9310, String *, XmlValidatingReader_System_Xml_IXmlNamespaceResolver_LookupPrefix, (XmlValidatingReader * __this, String * namespaceName, MethodInfo * method));
DO_APP_FUNC(0x01FC9330, bool, XmlValidatingReader_get_Namespaces, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717A70, IDtdInfo *, XmlValidatingReader_get_DtdInfo, (XmlValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC9360, void, XmlValidatingReaderImpl__ctor, (XmlValidatingReaderImpl * __this, XmlReader * reader, ValidationEventHandler * settingsEventHandler, bool processIdentityConstraints, MethodInfo * method));
DO_APP_FUNC(0x01FC9920, XmlReaderSettings *, XmlValidatingReaderImpl_get_Settings, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x016D9400, XmlNodeType__Enum, XmlValidatingReaderImpl_get_NodeType, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01717030, String *, XmlValidatingReaderImpl_get_Name, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01717060, String *, XmlValidatingReaderImpl_get_LocalName, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01717090, String *, XmlValidatingReaderImpl_get_NamespaceURI, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x00442880, String *, XmlValidatingReaderImpl_get_Prefix, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x017170C0, String *, XmlValidatingReaderImpl_get_Value, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x017170F0, int32_t, XmlValidatingReaderImpl_get_Depth, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01717120, String *, XmlValidatingReaderImpl_get_BaseURI, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01717150, bool, XmlValidatingReaderImpl_get_IsEmptyElement, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01717180, bool, XmlValidatingReaderImpl_get_IsDefault, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x017171B0, uint16_t, XmlValidatingReaderImpl_get_QuoteChar, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x017171E0, XmlSpace__Enum, XmlValidatingReaderImpl_get_XmlSpace, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01717210, String *, XmlValidatingReaderImpl_get_XmlLang, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC9B60, ReadState__Enum_1, XmlValidatingReaderImpl_get_ReadState, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01717450, bool, XmlValidatingReaderImpl_get_EOF, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x017174B0, XmlNameTable *, XmlValidatingReaderImpl_get_NameTable, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01717240, int32_t, XmlValidatingReaderImpl_get_AttributeCount, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01717270, String *, XmlValidatingReaderImpl_GetAttribute, (XmlValidatingReaderImpl * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x017172A0, String *, XmlValidatingReaderImpl_GetAttribute_1, (XmlValidatingReaderImpl * __this, String * localName, String * namespaceURI, MethodInfo * method));
DO_APP_FUNC(0x017172D0, String *, XmlValidatingReaderImpl_GetAttribute_2, (XmlValidatingReaderImpl * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x01FC9BA0, bool, XmlValidatingReaderImpl_MoveToAttribute, (XmlValidatingReaderImpl * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01FC9BF0, void, XmlValidatingReaderImpl_MoveToAttribute_1, (XmlValidatingReaderImpl * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x01FC9C30, bool, XmlValidatingReaderImpl_MoveToFirstAttribute, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC9C80, bool, XmlValidatingReaderImpl_MoveToNextAttribute, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC9CD0, bool, XmlValidatingReaderImpl_MoveToElement, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC9D20, bool, XmlValidatingReaderImpl_Read, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC9EE0, void, XmlValidatingReaderImpl_Close, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC9F20, String *, XmlValidatingReaderImpl_LookupNamespace, (XmlValidatingReaderImpl * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01FC9F50, bool, XmlValidatingReaderImpl_ReadAttributeValue, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlValidatingReaderImpl_get_CanResolveEntity, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC9FC0, void, XmlValidatingReaderImpl_ResolveEntity, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCA000, void, XmlValidatingReaderImpl_MoveOffEntityReference, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCA110, String *, XmlValidatingReaderImpl_ReadString, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlValidatingReaderImpl_HasLineInfo, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCA130, int32_t, XmlValidatingReaderImpl_get_LineNumber, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCA210, int32_t, XmlValidatingReaderImpl_get_LinePosition, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCA2F0, IDictionary_2_System_String_System_String_ *, XmlValidatingReaderImpl_System_Xml_IXmlNamespaceResolver_GetNamespacesInScope, (XmlValidatingReaderImpl * __this, XmlNamespaceScope__Enum scope, MethodInfo * method));
DO_APP_FUNC(0x0171CA40, String *, XmlValidatingReaderImpl_System_Xml_IXmlNamespaceResolver_LookupNamespace, (XmlValidatingReaderImpl * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01FCA300, String *, XmlValidatingReaderImpl_System_Xml_IXmlNamespaceResolver_LookupPrefix, (XmlValidatingReaderImpl * __this, String * namespaceName, MethodInfo * method));
DO_APP_FUNC(0x01FCA310, IDictionary_2_System_String_System_String_ *, XmlValidatingReaderImpl_GetNamespacesInScope, (XmlValidatingReaderImpl * __this, XmlNamespaceScope__Enum scope, MethodInfo * method));
DO_APP_FUNC(0x01FCA3B0, String *, XmlValidatingReaderImpl_LookupPrefix, (XmlValidatingReaderImpl * __this, String * namespaceName, MethodInfo * method));
DO_APP_FUNC(0x002FB970, ValidationType__Enum, XmlValidatingReaderImpl_get_ValidationType, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, XmlSchemaCollection *, XmlValidatingReaderImpl_get_Schemas, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCA460, bool, XmlValidatingReaderImpl_get_Namespaces, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCA480, void, XmlValidatingReaderImpl_ParseDtdFromParserContext, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCA6B0, void, XmlValidatingReaderImpl_ValidateDtd, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCA830, void, XmlValidatingReaderImpl_ResolveEntityInternally, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCA8D0, void, XmlValidatingReaderImpl_SetupValidation, (XmlValidatingReaderImpl * __this, ValidationType__Enum valType, MethodInfo * method));
DO_APP_FUNC(0x01FCAB50, XmlResolver *, XmlValidatingReaderImpl_GetResolver, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCAD40, void, XmlValidatingReaderImpl_ProcessCoreReaderEvent, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, BaseValidator *, XmlValidatingReaderImpl_get_Validator, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9A0, void, XmlValidatingReaderImpl_set_Validator, (XmlValidatingReaderImpl * __this, BaseValidator * value, MethodInfo * method));
DO_APP_FUNC(0x01FCAEC0, XmlNamespaceManager *, XmlValidatingReaderImpl_get_NamespaceManager, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCAEF0, bool, XmlValidatingReaderImpl_get_StandAlone, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCAF10, void, XmlValidatingReaderImpl_set_SchemaTypeObject, (XmlValidatingReaderImpl * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FCAF50, Object *, XmlValidatingReaderImpl_get_TypedValueObject, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCAF90, void, XmlValidatingReaderImpl_set_TypedValueObject, (XmlValidatingReaderImpl * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01FCAFD0, bool, XmlValidatingReaderImpl_AddDefaultAttribute, (XmlValidatingReaderImpl * __this, SchemaAttDef * attdef, MethodInfo * method));
DO_APP_FUNC(0x01FCAFF0, IDtdInfo *, XmlValidatingReaderImpl_get_DtdInfo, (XmlValidatingReaderImpl * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCB020, void, XmlValidatingReaderImpl_ValidateDefaultAttributeOnUse, (XmlValidatingReaderImpl * __this, IDtdDefaultAttributeInfo * defaultAttribute, XmlTextReaderImpl * coreReader, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, XmlValidatingReaderImpl_ValidationEventHandling__ctor, (XmlValidatingReaderImpl_ValidationEventHandling * __this, XmlValidatingReaderImpl * reader, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Object *, XmlValidatingReaderImpl_ValidationEventHandling_System_Xml_IValidationEventHandling_get_EventHandler, (XmlValidatingReaderImpl_ValidationEventHandling * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCB1B0, void, XmlValidatingReaderImpl_ValidationEventHandling_System_Xml_IValidationEventHandling_SendEvent, (XmlValidatingReaderImpl_ValidationEventHandling * __this, Exception * exception, XmlSeverityType__Enum severity, MethodInfo * method));
DO_APP_FUNC(0x01FCB3C0, void, XmlValidatingReaderImpl_ValidationEventHandling_AddHandler, (XmlValidatingReaderImpl_ValidationEventHandling * __this, ValidationEventHandler * handler, MethodInfo * method));
DO_APP_FUNC(0x01FCB480, void, XmlWellFormedWriter__ctor, (XmlWellFormedWriter * __this, XmlWriter * writer, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x01FCBAB0, WriteState__Enum, XmlWellFormedWriter_get_WriteState, (XmlWellFormedWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCBBA0, void, XmlWellFormedWriter_WriteStartDocument, (XmlWellFormedWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCBBB0, void, XmlWellFormedWriter_WriteStartDocument_1, (XmlWellFormedWriter * __this, bool standalone, MethodInfo * method));
DO_APP_FUNC(0x01FCBBE0, void, XmlWellFormedWriter_WriteEndDocument, (XmlWellFormedWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCBD30, void, XmlWellFormedWriter_WriteDocType, (XmlWellFormedWriter * __this, String * name, String * pubid, String * sysid, String * subset, MethodInfo * method));
DO_APP_FUNC(0x01FCC110, void, XmlWellFormedWriter_WriteStartElement, (XmlWellFormedWriter * __this, String * prefix, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01FCC460, void, XmlWellFormedWriter_WriteEndElement, (XmlWellFormedWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCC680, void, XmlWellFormedWriter_WriteFullEndElement, (XmlWellFormedWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCC8A0, void, XmlWellFormedWriter_WriteStartAttribute, (XmlWellFormedWriter * __this, String * prefix, String * localName, String * namespaceName, MethodInfo * method));
DO_APP_FUNC(0x01FCCFF0, void, XmlWellFormedWriter_WriteEndAttribute, (XmlWellFormedWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCD8C0, void, XmlWellFormedWriter_WriteCData, (XmlWellFormedWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01FCD9C0, void, XmlWellFormedWriter_WriteComment, (XmlWellFormedWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01FCDAC0, void, XmlWellFormedWriter_WriteProcessingInstruction, (XmlWellFormedWriter * __this, String * name, String * text, MethodInfo * method));
DO_APP_FUNC(0x01FCDDC0, void, XmlWellFormedWriter_WriteEntityRef, (XmlWellFormedWriter * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01FCDF20, void, XmlWellFormedWriter_WriteCharEntity, (XmlWellFormedWriter * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x01FCE170, void, XmlWellFormedWriter_WriteSurrogateCharEntity, (XmlWellFormedWriter * __this, uint16_t lowChar, uint16_t highChar, MethodInfo * method));
DO_APP_FUNC(0x01FCE310, void, XmlWellFormedWriter_WriteWhitespace, (XmlWellFormedWriter * __this, String * ws, MethodInfo * method));
DO_APP_FUNC(0x01FCE550, void, XmlWellFormedWriter_WriteString, (XmlWellFormedWriter * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01FCE6E0, void, XmlWellFormedWriter_WriteChars, (XmlWellFormedWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01FCE8F0, void, XmlWellFormedWriter_WriteRaw, (XmlWellFormedWriter * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01FCEB00, void, XmlWellFormedWriter_WriteRaw_1, (XmlWellFormedWriter * __this, String * data, MethodInfo * method));
DO_APP_FUNC(0x01FCEC80, void, XmlWellFormedWriter_WriteBase64, (XmlWellFormedWriter * __this, Byte__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01FCEE50, void, XmlWellFormedWriter_Close, (XmlWellFormedWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCF100, void, XmlWellFormedWriter_Flush, (XmlWellFormedWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCF1D0, String *, XmlWellFormedWriter_LookupPrefix, (XmlWellFormedWriter * __this, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01FCF400, void, XmlWellFormedWriter_WriteValue, (XmlWellFormedWriter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01FCF590, void, XmlWellFormedWriter_WriteBinHex, (XmlWellFormedWriter * __this, Byte__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x002FB950, XmlRawWriter *, XmlWellFormedWriter_get_RawWriter, (XmlWellFormedWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x016E76A0, bool, XmlWellFormedWriter_get_SaveAttrValue, (XmlWellFormedWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCF6D0, bool, XmlWellFormedWriter_get_InBase64, (XmlWellFormedWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCF6F0, void, XmlWellFormedWriter_SetSpecialAttribute, (XmlWellFormedWriter * __this, XmlWellFormedWriter_SpecialAttribute__Enum special, MethodInfo * method));
DO_APP_FUNC(0x01FCF9A0, void, XmlWellFormedWriter_WriteStartDocumentImpl, (XmlWellFormedWriter * __this, XmlStandalone__Enum standalone, MethodInfo * method));
DO_APP_FUNC(0x01FCFB40, void, XmlWellFormedWriter_StartFragment, (XmlWellFormedWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FCFB50, void, XmlWellFormedWriter_PushNamespaceImplicit, (XmlWellFormedWriter * __this, String * prefix, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01FD00E0, bool, XmlWellFormedWriter_PushNamespaceExplicit, (XmlWellFormedWriter * __this, String * prefix, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01FD0770, void, XmlWellFormedWriter_AddNamespace, (XmlWellFormedWriter * __this, String * prefix, String * ns, XmlWellFormedWriter_NamespaceKind__Enum kind, MethodInfo * method));
DO_APP_FUNC(0x01FD09F0, void, XmlWellFormedWriter_AddToNamespaceHashtable, (XmlWellFormedWriter * __this, int32_t namespaceIndex, MethodInfo * method));
DO_APP_FUNC(0x01FD0BB0, int32_t, XmlWellFormedWriter_LookupNamespaceIndex, (XmlWellFormedWriter * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01FD0D30, void, XmlWellFormedWriter_PopNamespaces, (XmlWellFormedWriter * __this, int32_t indexFrom, int32_t indexTo, MethodInfo * method));
DO_APP_FUNC(0x01FD0E60, XmlException *, XmlWellFormedWriter_DupAttrException, (String * prefix, String * localName, MethodInfo * method));
DO_APP_FUNC(0x01FD1100, void, XmlWellFormedWriter_AdvanceState, (XmlWellFormedWriter * __this, XmlWellFormedWriter_Token__Enum token, MethodInfo * method));
DO_APP_FUNC(0x01FD1540, void, XmlWellFormedWriter_StartElementContent, (XmlWellFormedWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD1630, String *, XmlWellFormedWriter_GetStateName, (XmlWellFormedWriter_State__Enum state, MethodInfo * method));
DO_APP_FUNC(0x01FD1710, String *, XmlWellFormedWriter_LookupNamespace, (XmlWellFormedWriter * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01FD1880, String *, XmlWellFormedWriter_LookupLocalNamespace, (XmlWellFormedWriter * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01FD19A0, String *, XmlWellFormedWriter_GeneratePrefix, (XmlWellFormedWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD1B20, void, XmlWellFormedWriter_CheckNCName, (XmlWellFormedWriter * __this, String * ncname, MethodInfo * method));
DO_APP_FUNC(0x01FD1CE0, Exception *, XmlWellFormedWriter_InvalidCharsException, (String * name, int32_t badCharIndex, MethodInfo * method));
DO_APP_FUNC(0x01FD1FF0, void, XmlWellFormedWriter_ThrowInvalidStateTransition, (XmlWellFormedWriter * __this, XmlWellFormedWriter_Token__Enum token, XmlWellFormedWriter_State__Enum currentState, MethodInfo * method));
DO_APP_FUNC(0x01FD2230, bool, XmlWellFormedWriter_get_IsClosedOrErrorState, (XmlWellFormedWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD2240, void, XmlWellFormedWriter_AddAttribute, (XmlWellFormedWriter * __this, String * prefix, String * localName, String * namespaceName, MethodInfo * method));
DO_APP_FUNC(0x01FD2660, void, XmlWellFormedWriter_AddToAttrHashTable, (XmlWellFormedWriter * __this, int32_t attributeIndex, MethodInfo * method));
DO_APP_FUNC(0x01FD2830, void, XmlWellFormedWriter__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, XmlWellFormedWriter_NamespaceResolverProxy__ctor, (XmlWellFormedWriter_NamespaceResolverProxy * __this, XmlWellFormedWriter * wfWriter, MethodInfo * method));
DO_APP_FUNC(0x01FD51D0, IDictionary_2_System_String_System_String_ *, XmlWellFormedWriter_NamespaceResolverProxy_System_Xml_IXmlNamespaceResolver_GetNamespacesInScope, (XmlWellFormedWriter_NamespaceResolverProxy * __this, XmlNamespaceScope__Enum scope, MethodInfo * method));
DO_APP_FUNC(0x01FD5220, String *, XmlWellFormedWriter_NamespaceResolverProxy_System_Xml_IXmlNamespaceResolver_LookupNamespace, (XmlWellFormedWriter_NamespaceResolverProxy * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01FD5240, String *, XmlWellFormedWriter_NamespaceResolverProxy_System_Xml_IXmlNamespaceResolver_LookupPrefix, (XmlWellFormedWriter_NamespaceResolverProxy * __this, String * namespaceName, MethodInfo * method));
DO_APP_FUNC(0x001DB2C0, void, XmlWellFormedWriter_ElementScope_Set, (XmlWellFormedWriter_ElementScope__Boxed * __this, String * prefix, String * localName, String * namespaceUri, int32_t prevNSTop, MethodInfo * method));
DO_APP_FUNC(0x001DB2F0, void, XmlWellFormedWriter_ElementScope_WriteEndElement, (XmlWellFormedWriter_ElementScope__Boxed * __this, XmlRawWriter * rawWriter, MethodInfo * method));
DO_APP_FUNC(0x001DB330, void, XmlWellFormedWriter_ElementScope_WriteFullEndElement, (XmlWellFormedWriter_ElementScope__Boxed * __this, XmlRawWriter * rawWriter, MethodInfo * method));
DO_APP_FUNC(0x001DB370, void, XmlWellFormedWriter_Namespace_Set, (XmlWellFormedWriter_Namespace__Boxed * __this, String * prefix, String * namespaceUri, XmlWellFormedWriter_NamespaceKind__Enum kind, MethodInfo * method));
DO_APP_FUNC(0x001DB390, void, XmlWellFormedWriter_Namespace_WriteDecl, (XmlWellFormedWriter_Namespace__Boxed * __this, XmlWriter * writer, XmlRawWriter * rawWriter, MethodInfo * method));
DO_APP_FUNC(0x001DAE60, void, XmlWellFormedWriter_AttrName_Set, (XmlWellFormedWriter_AttrName__Boxed * __this, String * prefix, String * localName, String * namespaceUri, MethodInfo * method));
DO_APP_FUNC(0x001DAE80, bool, XmlWellFormedWriter_AttrName_IsDuplicate, (XmlWellFormedWriter_AttrName__Boxed * __this, String * prefix, String * localName, String * namespaceUri, MethodInfo * method));
DO_APP_FUNC(0x01FD3600, String *, XmlWellFormedWriter_AttributeValueCache_get_StringValue, (XmlWellFormedWriter_AttributeValueCache * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD3640, void, XmlWellFormedWriter_AttributeValueCache_WriteEntityRef, (XmlWellFormedWriter_AttributeValueCache * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01FD38F0, void, XmlWellFormedWriter_AttributeValueCache_WriteCharEntity, (XmlWellFormedWriter_AttributeValueCache * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x01FD39F0, void, XmlWellFormedWriter_AttributeValueCache_WriteSurrogateCharEntity, (XmlWellFormedWriter_AttributeValueCache * __this, uint16_t lowChar, uint16_t highChar, MethodInfo * method));
DO_APP_FUNC(0x01FD3B60, void, XmlWellFormedWriter_AttributeValueCache_WriteWhitespace, (XmlWellFormedWriter_AttributeValueCache * __this, String * ws, MethodInfo * method));
DO_APP_FUNC(0x01FD3BF0, void, XmlWellFormedWriter_AttributeValueCache_WriteString, (XmlWellFormedWriter_AttributeValueCache * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01FD3C90, void, XmlWellFormedWriter_AttributeValueCache_WriteChars, (XmlWellFormedWriter_AttributeValueCache * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01FD3E70, void, XmlWellFormedWriter_AttributeValueCache_WriteRaw, (XmlWellFormedWriter_AttributeValueCache * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01FD4050, void, XmlWellFormedWriter_AttributeValueCache_WriteRaw_1, (XmlWellFormedWriter_AttributeValueCache * __this, String * data, MethodInfo * method));
DO_APP_FUNC(0x01FD40E0, void, XmlWellFormedWriter_AttributeValueCache_WriteValue, (XmlWellFormedWriter_AttributeValueCache * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01FD4170, void, XmlWellFormedWriter_AttributeValueCache_Replay, (XmlWellFormedWriter_AttributeValueCache * __this, XmlWriter * writer, MethodInfo * method));
DO_APP_FUNC(0x01FD45E0, void, XmlWellFormedWriter_AttributeValueCache_Trim, (XmlWellFormedWriter_AttributeValueCache * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD4C00, void, XmlWellFormedWriter_AttributeValueCache_Clear, (XmlWellFormedWriter_AttributeValueCache * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD4C40, void, XmlWellFormedWriter_AttributeValueCache_StartComplexValue, (XmlWellFormedWriter_AttributeValueCache * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD4C90, void, XmlWellFormedWriter_AttributeValueCache_AddItem, (XmlWellFormedWriter_AttributeValueCache * __this, XmlWellFormedWriter_AttributeValueCache_ItemType__Enum type, Object * data, MethodInfo * method));
DO_APP_FUNC(0x01FD4F10, void, XmlWellFormedWriter_AttributeValueCache__ctor, (XmlWellFormedWriter_AttributeValueCache * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlWellFormedWriter_AttributeValueCache_Item__ctor, (XmlWellFormedWriter_AttributeValueCache_Item * __this, MethodInfo * method));
DO_APP_FUNC(0x0091DD30, void, XmlWellFormedWriter_AttributeValueCache_Item_Set, (XmlWellFormedWriter_AttributeValueCache_Item * __this, XmlWellFormedWriter_AttributeValueCache_ItemType__Enum type, Object * data, MethodInfo * method));
DO_APP_FUNC(0x01DF8C80, void, XmlWellFormedWriter_AttributeValueCache_BufferChunk__ctor, (XmlWellFormedWriter_AttributeValueCache_BufferChunk * __this, Char__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01FD5540, void, XmlWriter_WriteStartElement, (XmlWriter * __this, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01FD5570, void, XmlWriter_WriteAttributeString, (XmlWriter * __this, String * localName, String * ns, String * value, MethodInfo * method));
DO_APP_FUNC(0x01FD55E0, void, XmlWriter_WriteAttributeString_1, (XmlWriter * __this, String * localName, String * value, MethodInfo * method));
DO_APP_FUNC(0x01FD5650, void, XmlWriter_WriteAttributeString_2, (XmlWriter * __this, String * prefix, String * localName, String * ns, String * value, MethodInfo * method));
DO_APP_FUNC(0x01FD56A0, void, XmlWriter_WriteBinHex, (XmlWriter * __this, Byte__Array * buffer, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlWriter_Close, (XmlWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD56D0, void, XmlWriter_WriteValue, (XmlWriter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01FD56F0, void, XmlWriter_WriteAttributes, (XmlWriter * __this, XmlReader * reader, bool defattr, MethodInfo * method));
DO_APP_FUNC(0x01FD5A80, void, XmlWriter_WriteNode, (XmlWriter * __this, XmlReader * reader, bool defattr, MethodInfo * method));
DO_APP_FUNC(0x01FD5F90, void, XmlWriter_WriteElementString, (XmlWriter * __this, String * localName, String * ns, String * value, MethodInfo * method));
DO_APP_FUNC(0x01FD6000, void, XmlWriter_Dispose, (XmlWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD6020, void, XmlWriter_Dispose_1, (XmlWriter * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01FD6060, XmlWriter *, XmlWriter_Create, (Stream * output, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x01FD61D0, XmlWriter *, XmlWriter_Create_1, (TextWriter * output, XmlWriterSettings * settings, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlWriter__ctor, (XmlWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD6340, void, XmlWriterSettings__ctor, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, XmlWriterSettings_get_Async, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Encoding *, XmlWriterSettings_get_Encoding, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A030, bool, XmlWriterSettings_get_OmitXmlDeclaration, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD6580, void, XmlWriterSettings_set_OmitXmlDeclaration, (XmlWriterSettings * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00529E80, NewLineHandling__Enum, XmlWriterSettings_get_NewLineHandling, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, XmlWriterSettings_get_NewLineChars, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x00AEDE20, bool, XmlWriterSettings_get_Indent, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD6620, void, XmlWriterSettings_set_Indent, (XmlWriterSettings * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, String *, XmlWriterSettings_get_IndentChars, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x00446590, bool, XmlWriterSettings_get_NewLineOnAttributes, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x00444DC0, bool, XmlWriterSettings_get_CloseOutput, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x006410F0, ConformanceLevel__Enum, XmlWriterSettings_get_ConformanceLevel, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD66D0, void, XmlWriterSettings_set_ConformanceLevel, (XmlWriterSettings * __this, ConformanceLevel__Enum value, MethodInfo * method));
DO_APP_FUNC(0x0098F4A0, bool, XmlWriterSettings_get_CheckCharacters, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x0057AAC0, NamespaceHandling__Enum, XmlWriterSettings_get_NamespaceHandling, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD67A0, void, XmlWriterSettings_set_NamespaceHandling, (XmlWriterSettings * __this, NamespaceHandling__Enum value, MethodInfo * method));
DO_APP_FUNC(0x0060CCA0, bool, XmlWriterSettings_get_WriteEndDocumentOnClose, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD490, XmlOutputMethod__Enum, XmlWriterSettings_get_OutputMethod, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD4A0, void, XmlWriterSettings_set_OutputMethod, (XmlWriterSettings * __this, XmlOutputMethod__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01FD6870, XmlWriterSettings *, XmlWriterSettings_Clone, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, List_1_System_Xml_XmlQualifiedName_ *, XmlWriterSettings_get_CDataSectionElements, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x002FCE30, bool, XmlWriterSettings_get_DoNotEscapeUriAttributes, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x00575450, bool, XmlWriterSettings_get_MergeCDataSections, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, String *, XmlWriterSettings_get_MediaType, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, String *, XmlWriterSettings_get_DocTypeSystem, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBE0, String *, XmlWriterSettings_get_DocTypePublic, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x00C03C70, XmlStandalone__Enum, XmlWriterSettings_get_Standalone, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x0085E270, bool, XmlWriterSettings_get_AutoXmlDeclaration, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x00654950, TriState__Enum, XmlWriterSettings_get_IndentInternal, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD6A80, bool, XmlWriterSettings_get_IsQuerySpecific, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD6B30, XmlWriter *, XmlWriterSettings_CreateWriter, (XmlWriterSettings * __this, Stream * output, MethodInfo * method));
DO_APP_FUNC(0x01FD7820, XmlWriter *, XmlWriterSettings_CreateWriter_1, (XmlWriterSettings * __this, TextWriter * output, MethodInfo * method));
DO_APP_FUNC(0x01356A90, void, XmlWriterSettings_set_ReadOnly, (XmlWriterSettings * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01FD8080, void, XmlWriterSettings_CheckReadOnly, (XmlWriterSettings * __this, String * propertyName, MethodInfo * method));
DO_APP_FUNC(0x01FD8180, void, XmlWriterSettings_Initialize, (XmlWriterSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD82A0, void, XsdCachingReader__ctor, (XsdCachingReader * __this, XmlReader * reader, IXmlLineInfo * lineInfo, CachingEventHandler * handlerMethod, MethodInfo * method));
DO_APP_FUNC(0x01FD8390, void, XsdCachingReader_Init, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD8550, void, XsdCachingReader_Reset, (XsdCachingReader * __this, XmlReader * reader, MethodInfo * method));
DO_APP_FUNC(0x01A488A0, XmlReaderSettings *, XsdCachingReader_get_Settings, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD8560, XmlNodeType__Enum, XsdCachingReader_get_NodeType, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD8580, String *, XsdCachingReader_get_Name, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01B5FE20, String *, XsdCachingReader_get_LocalName, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x005E0390, String *, XsdCachingReader_get_NamespaceURI, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD85B0, String *, XsdCachingReader_get_Prefix, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD85D0, String *, XsdCachingReader_get_Value, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD8610, int32_t, XsdCachingReader_get_Depth, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717120, String *, XsdCachingReader_get_BaseURI, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, XsdCachingReader_get_IsEmptyElement, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, XsdCachingReader_get_IsDefault, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017171B0, uint16_t, XsdCachingReader_get_QuoteChar, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017171E0, XmlSpace__Enum, XsdCachingReader_get_XmlSpace, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717210, String *, XsdCachingReader_get_XmlLang, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x004E57A0, int32_t, XsdCachingReader_get_AttributeCount, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD8630, String *, XsdCachingReader_GetAttribute, (XsdCachingReader * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01FD86E0, String *, XsdCachingReader_GetAttribute_1, (XsdCachingReader * __this, String * name, String * namespaceURI, MethodInfo * method));
DO_APP_FUNC(0x01FD8830, String *, XsdCachingReader_GetAttribute_2, (XsdCachingReader * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x01FD8930, bool, XsdCachingReader_MoveToAttribute, (XsdCachingReader * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01FD89E0, void, XsdCachingReader_MoveToAttribute_1, (XsdCachingReader * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x01FD8AD0, bool, XsdCachingReader_MoveToFirstAttribute, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD8B20, bool, XsdCachingReader_MoveToNextAttribute, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD8B80, bool, XsdCachingReader_MoveToElement, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD8BD0, bool, XsdCachingReader_Read, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD8F90, ValidatingReaderNodeData *, XsdCachingReader_RecordTextNode, (XsdCachingReader * __this, String * textValue, String * originalStringValue, int32_t depth, int32_t lineNo, int32_t linePos, MethodInfo * method));
DO_APP_FUNC(0x01FD8FF0, void, XsdCachingReader_SwitchTextNodeAndEndElement, (XsdCachingReader * __this, String * textValue, String * originalStringValue, MethodInfo * method));
DO_APP_FUNC(0x01FD9180, void, XsdCachingReader_RecordEndElementNode, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD9330, bool, XsdCachingReader_get_EOF, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD9370, void, XsdCachingReader_Close, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x016FB7D0, ReadState__Enum_1, XsdCachingReader_get_ReadState, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD93B0, void, XsdCachingReader_Skip, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, XmlNameTable *, XsdCachingReader_get_NameTable, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717620, String *, XsdCachingReader_LookupNamespace, (XsdCachingReader * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01FD9500, void, XsdCachingReader_ResolveEntity, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD9550, bool, XsdCachingReader_ReadAttributeValue, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XsdCachingReader_System_Xml_IXmlLineInfo_HasLineInfo, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD95A0, int32_t, XsdCachingReader_System_Xml_IXmlLineInfo_get_LineNumber, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD95C0, int32_t, XsdCachingReader_System_Xml_IXmlLineInfo_get_LinePosition, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD95E0, void, XsdCachingReader_SetToReplayMode, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, XmlReader *, XsdCachingReader_GetCoreReader, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, IXmlLineInfo *, XsdCachingReader_GetLineInfo, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD9610, void, XsdCachingReader_ClearAttributesInfo, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD9620, ValidatingReaderNodeData *, XsdCachingReader_AddAttribute, (XsdCachingReader * __this, int32_t attIndex, MethodInfo * method));
DO_APP_FUNC(0x01FD98C0, ValidatingReaderNodeData *, XsdCachingReader_AddContent, (XsdCachingReader * __this, XmlNodeType__Enum nodeType, MethodInfo * method));
DO_APP_FUNC(0x01FD9B70, void, XsdCachingReader_RecordAttributes, (XsdCachingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD9D70, int32_t, XsdCachingReader_GetAttributeIndexWithoutPrefix, (XsdCachingReader * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01FD9E20, int32_t, XsdCachingReader_GetAttributeIndexWithPrefix, (XsdCachingReader * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01FD9EF0, ValidatingReaderNodeData *, XsdCachingReader_CreateDummyTextNode, (XsdCachingReader * __this, String * attributeValue, int32_t depth, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, CachingEventHandler__ctor, (CachingEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x00673B90, void, CachingEventHandler_Invoke, (CachingEventHandler * __this, XsdCachingReader * cachingReader, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, CachingEventHandler_BeginInvoke, (CachingEventHandler * __this, XsdCachingReader * cachingReader, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, CachingEventHandler_EndInvoke, (CachingEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x021E1050, void, AttributePSVIInfo__ctor, (AttributePSVIInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x021E11B0, void, AttributePSVIInfo_Reset, (AttributePSVIInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x03102080, void, XsdValidatingReader__ctor, (XsdValidatingReader * __this, XmlReader * reader, XmlResolver * xmlResolver, XmlReaderSettings * readerSettings, XmlSchemaObject * partialValidationType, MethodInfo * method));
DO_APP_FUNC(0x031022D0, void, XsdValidatingReader__ctor_1, (XsdValidatingReader * __this, XmlReader * reader, XmlResolver * xmlResolver, XmlReaderSettings * readerSettings, MethodInfo * method));
DO_APP_FUNC(0x031022F0, void, XsdValidatingReader_Init, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03102800, void, XsdValidatingReader_SetupValidator, (XsdValidatingReader * __this, XmlReaderSettings * readerSettings, XmlReader * reader, XmlSchemaObject * partialValidationType, MethodInfo * method));
DO_APP_FUNC(0x03102C20, XmlReaderSettings *, XsdValidatingReader_get_Settings, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03102ED0, XmlNodeType__Enum, XsdValidatingReader_get_NodeType, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03102FB0, String *, XsdValidatingReader_get_Name, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03103170, String *, XsdValidatingReader_get_LocalName, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x031031C0, String *, XsdValidatingReader_get_NamespaceURI, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03103210, String *, XsdValidatingReader_get_Prefix, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03103260, String *, XsdValidatingReader_get_Value, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x031032B0, int32_t, XsdValidatingReader_get_Depth, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717120, String *, XsdValidatingReader_get_BaseURI, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717150, bool, XsdValidatingReader_get_IsEmptyElement, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03103300, bool, XsdValidatingReader_get_IsDefault, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017171B0, uint16_t, XsdValidatingReader_get_QuoteChar, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x017171E0, XmlSpace__Enum, XsdValidatingReader_get_XmlSpace, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717210, String *, XsdValidatingReader_get_XmlLang, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, IXmlSchemaInfo *, XsdValidatingReader_get_SchemaInfo, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03103340, Type *, XsdValidatingReader_get_ValueType, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x003FF7B0, int32_t, XsdValidatingReader_get_AttributeCount, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x031034A0, String *, XsdValidatingReader_GetAttribute, (XsdValidatingReader * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x03103510, String *, XsdValidatingReader_GetAttribute_1, (XsdValidatingReader * __this, String * name, String * namespaceURI, MethodInfo * method));
DO_APP_FUNC(0x03103690, String *, XsdValidatingReader_GetAttribute_2, (XsdValidatingReader * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x031037C0, bool, XsdValidatingReader_MoveToAttribute, (XsdValidatingReader * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x03103890, void, XsdValidatingReader_MoveToAttribute_1, (XsdValidatingReader * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x03103A50, bool, XsdValidatingReader_MoveToFirstAttribute, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03103BF0, bool, XsdValidatingReader_MoveToNextAttribute, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03103D80, bool, XsdValidatingReader_MoveToElement, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03103DD0, bool, XsdValidatingReader_Read, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01717450, bool, XsdValidatingReader_get_EOF, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03104200, void, XsdValidatingReader_Close, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03104240, ReadState__Enum_1, XsdValidatingReader_get_ReadState, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03104280, void, XsdValidatingReader_Skip, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBCC0, XmlNameTable *, XsdValidatingReader_get_NameTable, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03104480, String *, XsdValidatingReader_LookupNamespace, (XsdValidatingReader * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x03104530, void, XsdValidatingReader_ResolveEntity, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03104580, bool, XsdValidatingReader_ReadAttributeValue, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03104640, bool, XsdValidatingReader_System_Xml_Schema_IXmlSchemaInfo_get_IsDefault, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x031046F0, bool, XsdValidatingReader_System_Xml_Schema_IXmlSchemaInfo_get_IsNil, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03104740, XmlSchemaValidity__Enum, XsdValidatingReader_System_Xml_Schema_IXmlSchemaInfo_get_Validity, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03104810, XmlSchemaSimpleType *, XsdValidatingReader_System_Xml_Schema_IXmlSchemaInfo_get_MemberType, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x031048C0, XmlSchemaType *, XsdValidatingReader_System_Xml_Schema_IXmlSchemaInfo_get_SchemaType, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03104930, XmlSchemaElement *, XsdValidatingReader_System_Xml_Schema_IXmlSchemaInfo_get_SchemaElement, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03104990, XmlSchemaAttribute *, XsdValidatingReader_System_Xml_Schema_IXmlSchemaInfo_get_SchemaAttribute, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XsdValidatingReader_HasLineInfo, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x031049E0, int32_t, XsdValidatingReader_get_LineNumber, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03104A80, int32_t, XsdValidatingReader_get_LinePosition, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03104B20, IDictionary_2_System_String_System_String_ *, XsdValidatingReader_System_Xml_IXmlNamespaceResolver_GetNamespacesInScope, (XsdValidatingReader * __this, XmlNamespaceScope__Enum scope, MethodInfo * method));
DO_APP_FUNC(0x03104BF0, String *, XsdValidatingReader_System_Xml_IXmlNamespaceResolver_LookupNamespace, (XsdValidatingReader * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x03104CC0, String *, XsdValidatingReader_System_Xml_IXmlNamespaceResolver_LookupPrefix, (XsdValidatingReader * __this, String * namespaceName, MethodInfo * method));
DO_APP_FUNC(0x017170C0, Object *, XsdValidatingReader_GetStringValue, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03104D90, XmlSchemaInfo *, XsdValidatingReader_get_AttributeSchemaInfo, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03104DB0, void, XsdValidatingReader_ProcessReaderEvent, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03105140, void, XsdValidatingReader_ProcessElementEvent, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03105980, void, XsdValidatingReader_ProcessEndElementEvent, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03105B80, void, XsdValidatingReader_ValidateAttributes, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03105E80, void, XsdValidatingReader_ClearAttributesInfo, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03105ED0, AttributePSVIInfo *, XsdValidatingReader_GetAttributePSVI, (XsdValidatingReader * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x031060D0, AttributePSVIInfo *, XsdValidatingReader_GetAttributePSVI_1, (XsdValidatingReader * __this, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x03106140, ValidatingReaderNodeData *, XsdValidatingReader_GetDefaultAttribute, (XsdValidatingReader * __this, String * name, bool updatePosition, MethodInfo * method));
DO_APP_FUNC(0x031062D0, ValidatingReaderNodeData *, XsdValidatingReader_GetDefaultAttribute_1, (XsdValidatingReader * __this, String * attrLocalName, String * ns, bool updatePosition, MethodInfo * method));
DO_APP_FUNC(0x03106480, AttributePSVIInfo *, XsdValidatingReader_AddAttributePSVI, (XsdValidatingReader * __this, int32_t attIndex, MethodInfo * method));
DO_APP_FUNC(0x03106720, bool, XsdValidatingReader_IsXSDRoot, (XsdValidatingReader * __this, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x03106740, void, XsdValidatingReader_ProcessInlineSchema, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03106870, void, XsdValidatingReader_ReadAheadForMemberType, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03106CA0, void, XsdValidatingReader_GetIsDefault, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x031071F0, void, XsdValidatingReader_GetMemberType, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x03107390, XsdCachingReader *, XsdValidatingReader_GetCachingReader, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x031076B0, ValidatingReaderNodeData *, XsdValidatingReader_CreateDummyTextNode, (XsdValidatingReader * __this, String * attributeValue, int32_t depth, MethodInfo * method));
DO_APP_FUNC(0x03107850, void, XsdValidatingReader_CachingCallBack, (XsdValidatingReader * __this, XsdCachingReader * cachingReader, MethodInfo * method));
DO_APP_FUNC(0x03107880, String *, XsdValidatingReader_GetOriginalAtomicValueStringOfElement, (XsdValidatingReader * __this, MethodInfo * method));
DO_APP_FUNC(0x021E9360, void, DomNameTable__ctor, (DomNameTable * __this, XmlDocument * document, MethodInfo * method));
DO_APP_FUNC(0x021E9430, XmlName *, DomNameTable_GetName, (DomNameTable * __this, String * prefix, String * localName, String * ns, IXmlSchemaInfo * schemaInfo, MethodInfo * method));
DO_APP_FUNC(0x021E9600, XmlName *, DomNameTable_AddName, (DomNameTable * __this, String * prefix, String * localName, String * ns, IXmlSchemaInfo * schemaInfo, MethodInfo * method));
DO_APP_FUNC(0x021E9930, void, DomNameTable_Grow, (DomNameTable * __this, MethodInfo * method));
DO_APP_FUNC(0x0195ADF0, void, XmlAttribute__ctor, (XmlAttribute * __this, XmlName * name, XmlDocument * doc, MethodInfo * method));
DO_APP_FUNC(0x0195AF50, int32_t, XmlAttribute_get_LocalNameHash, (XmlAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0195AF70, void, XmlAttribute__ctor_1, (XmlAttribute * __this, String * prefix, String * localName, String * namespaceURI, XmlDocument * doc, MethodInfo * method));
DO_APP_FUNC(0x002FB930, XmlName *, XmlAttribute_get_XmlName, (XmlAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, XmlAttribute_set_XmlName, (XmlAttribute * __this, XmlName * value, MethodInfo * method));
DO_APP_FUNC(0x0195AFC0, XmlNode *, XmlAttribute_CloneNode, (XmlAttribute * __this, bool deep, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, XmlNode *, XmlAttribute_get_ParentNode, (XmlAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0195B0B0, String *, XmlAttribute_get_Name, (XmlAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x005E0120, String *, XmlAttribute_get_LocalName, (XmlAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0195B0D0, String *, XmlAttribute_get_NamespaceURI, (XmlAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0195B0F0, String *, XmlAttribute_get_Prefix, (XmlAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0195B110, void, XmlAttribute_set_Prefix, (XmlAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0043D9E0, XmlNodeType__Enum, XmlAttribute_get_NodeType, (XmlAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0195B1D0, XmlDocument *, XmlAttribute_get_OwnerDocument, (XmlAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0195B1F0, String *, XmlAttribute_get_Value, (XmlAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0195B210, void, XmlAttribute_set_Value, (XmlAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB930, IXmlSchemaInfo *, XmlAttribute_get_SchemaInfo, (XmlAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0195B230, void, XmlAttribute_set_InnerText, (XmlAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0195B2A0, bool, XmlAttribute_PrepareOwnerElementInElementIdAttrMap, (XmlAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0195B370, void, XmlAttribute_ResetOwnerElementInElementIdAttrMap, (XmlAttribute * __this, String * oldInnerText, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlAttribute_get_IsContainer, (XmlAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0195B4F0, XmlNode *, XmlAttribute_AppendChildForLoad, (XmlAttribute * __this, XmlNode * newChild, XmlDocument * doc, MethodInfo * method));
DO_APP_FUNC(0x002FB950, XmlLinkedNode *, XmlAttribute_get_LastNode, (XmlAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, XmlAttribute_set_LastNode, (XmlAttribute * __this, XmlLinkedNode * value, MethodInfo * method));
DO_APP_FUNC(0x0195B6C0, bool, XmlAttribute_IsValidChildType, (XmlAttribute * __this, XmlNodeType__Enum type, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlAttribute_get_Specified, (XmlAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0195B6D0, XmlNode *, XmlAttribute_InsertBefore, (XmlAttribute * __this, XmlNode * newChild, XmlNode * refChild, MethodInfo * method));
DO_APP_FUNC(0x0195B770, XmlNode *, XmlAttribute_InsertAfter, (XmlAttribute * __this, XmlNode * newChild, XmlNode * refChild, MethodInfo * method));
DO_APP_FUNC(0x0195B810, XmlNode *, XmlAttribute_RemoveChild, (XmlAttribute * __this, XmlNode * oldChild, MethodInfo * method));
DO_APP_FUNC(0x0195B890, XmlNode *, XmlAttribute_PrependChild, (XmlAttribute * __this, XmlNode * newChild, MethodInfo * method));
DO_APP_FUNC(0x0195B950, XmlNode *, XmlAttribute_AppendChild, (XmlAttribute * __this, XmlNode * newChild, MethodInfo * method));
DO_APP_FUNC(0x0195B9D0, XmlElement *, XmlAttribute_get_OwnerElement, (XmlAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0195BA90, void, XmlAttribute_set_InnerXml, (XmlAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0195BC10, void, XmlAttribute_WriteTo, (XmlAttribute * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x0195BCE0, void, XmlAttribute_WriteContentTo, (XmlAttribute * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x0195BD50, String *, XmlAttribute_get_BaseURI, (XmlAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, XmlAttribute_SetParent, (XmlAttribute * __this, XmlNode * node, MethodInfo * method));
DO_APP_FUNC(0x0195BE30, XmlSpace__Enum, XmlAttribute_get_XmlSpace, (XmlAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0195BE90, String *, XmlAttribute_get_XmlLang, (XmlAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, XmlAttributeCollection__ctor, (XmlAttributeCollection * __this, XmlNode * parent, MethodInfo * method));
DO_APP_FUNC(0x0195BF70, XmlAttribute *, XmlAttributeCollection_get_ItemOf, (XmlAttributeCollection * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x0195C0A0, XmlAttribute *, XmlAttributeCollection_get_ItemOf_1, (XmlAttributeCollection * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x0195C240, XmlAttribute *, XmlAttributeCollection_get_ItemOf_2, (XmlAttributeCollection * __this, String * localName, String * namespaceURI, MethodInfo * method));
DO_APP_FUNC(0x0195C420, int32_t, XmlAttributeCollection_FindNodeOffsetNS, (XmlAttributeCollection * __this, XmlAttribute * node, MethodInfo * method));
DO_APP_FUNC(0x0195C650, XmlNode *, XmlAttributeCollection_SetNamedItem, (XmlAttributeCollection * __this, XmlNode * node, MethodInfo * method));
DO_APP_FUNC(0x0195C800, XmlAttribute *, XmlAttributeCollection_Append, (XmlAttributeCollection * __this, XmlAttribute * node, MethodInfo * method));
DO_APP_FUNC(0x0195CA80, XmlAttribute *, XmlAttributeCollection_Remove, (XmlAttributeCollection * __this, XmlAttribute * node, MethodInfo * method));
DO_APP_FUNC(0x0195CB00, XmlAttribute *, XmlAttributeCollection_RemoveAt, (XmlAttributeCollection * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x0195CBD0, void, XmlAttributeCollection_RemoveAll, (XmlAttributeCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x0195CD10, void, XmlAttributeCollection_System_Collections_ICollection_CopyTo, (XmlAttributeCollection * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, XmlAttributeCollection_System_Collections_ICollection_get_IsSynchronized, (XmlAttributeCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, Object *, XmlAttributeCollection_System_Collections_ICollection_get_SyncRoot, (XmlAttributeCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x0195CDA0, int32_t, XmlAttributeCollection_System_Collections_ICollection_get_Count, (XmlAttributeCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x0195CDB0, XmlNode *, XmlAttributeCollection_AddNode, (XmlAttributeCollection * __this, XmlNode * node, MethodInfo * method));
DO_APP_FUNC(0x0195D030, XmlNode *, XmlAttributeCollection_InsertNodeAt, (XmlAttributeCollection * __this, int32_t i, XmlNode * node, MethodInfo * method));
DO_APP_FUNC(0x0195D130, XmlNode *, XmlAttributeCollection_RemoveNodeAt, (XmlAttributeCollection * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x0195D360, void, XmlAttributeCollection_Detach, (XmlAttributeCollection * __this, XmlAttribute * attr, MethodInfo * method));
DO_APP_FUNC(0x0195D430, void, XmlAttributeCollection_InsertParentIntoElementIdAttrMap, (XmlAttributeCollection * __this, XmlAttribute * attr, MethodInfo * method));
DO_APP_FUNC(0x0195D670, void, XmlAttributeCollection_RemoveParentFromElementIdAttrMap, (XmlAttributeCollection * __this, XmlAttribute * attr, MethodInfo * method));
DO_APP_FUNC(0x0195D8B0, int32_t, XmlAttributeCollection_RemoveDuplicateAttribute, (XmlAttributeCollection * __this, XmlAttribute * attr, MethodInfo * method));
DO_APP_FUNC(0x0195DA10, bool, XmlAttributeCollection_PrepareParentInElementIdAttrMap, (XmlAttributeCollection * __this, String * attrPrefix, String * attrLocalName, MethodInfo * method));
DO_APP_FUNC(0x0195DBA0, void, XmlAttributeCollection_ResetParentInElementIdAttrMap, (XmlAttributeCollection * __this, String * oldVal, String * newVal, MethodInfo * method));
DO_APP_FUNC(0x0195DCC0, XmlAttribute *, XmlAttributeCollection_InternalAppendAttribute, (XmlAttributeCollection * __this, XmlAttribute * node, MethodInfo * method));
DO_APP_FUNC(0x01714A90, void, XmlCDataSection__ctor, (XmlCDataSection * __this, String * data, XmlDocument * doc, MethodInfo * method));
DO_APP_FUNC(0x0195EF30, String *, XmlCDataSection_get_Name, (XmlCDataSection * __this, MethodInfo * method));
DO_APP_FUNC(0x0195EF30, String *, XmlCDataSection_get_LocalName, (XmlCDataSection * __this, MethodInfo * method));
DO_APP_FUNC(0x00910BD0, XmlNodeType__Enum, XmlCDataSection_get_NodeType, (XmlCDataSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01714B00, XmlNode *, XmlCDataSection_get_ParentNode, (XmlCDataSection * __this, MethodInfo * method));
DO_APP_FUNC(0x0195EF60, XmlNode *, XmlCDataSection_CloneNode, (XmlCDataSection * __this, bool deep, MethodInfo * method));
DO_APP_FUNC(0x0195EFC0, void, XmlCDataSection_WriteTo, (XmlCDataSection * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlCDataSection_WriteContentTo, (XmlCDataSection * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlCDataSection_get_IsText, (XmlCDataSection * __this, MethodInfo * method));
DO_APP_FUNC(0x01714A90, void, XmlCharacterData__ctor, (XmlCharacterData * __this, String * data, XmlDocument * doc, MethodInfo * method));
DO_APP_FUNC(0x01707640, String *, XmlCharacterData_get_Value, (XmlCharacterData * __this, MethodInfo * method));
DO_APP_FUNC(0x0195FD10, void, XmlCharacterData_set_Value, (XmlCharacterData * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0173D7B0, String *, XmlCharacterData_get_InnerText, (XmlCharacterData * __this, MethodInfo * method));
DO_APP_FUNC(0x00C53A30, void, XmlCharacterData_set_InnerText, (XmlCharacterData * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0195FD30, String *, XmlCharacterData_get_Data, (XmlCharacterData * __this, MethodInfo * method));
DO_APP_FUNC(0x0195FDC0, void, XmlCharacterData_set_Data, (XmlCharacterData * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0195FE70, bool, XmlCharacterData_CheckOnData, (XmlCharacterData * __this, String * data, MethodInfo * method));
DO_APP_FUNC(0x0195FF00, void, XmlChildEnumerator__ctor, (XmlChildEnumerator * __this, XmlNode * container, MethodInfo * method));
DO_APP_FUNC(0x0195FF40, bool, XmlChildEnumerator_System_Collections_IEnumerator_MoveNext, (XmlChildEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0195FF40, bool, XmlChildEnumerator_MoveNext, (XmlChildEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x0195FFC0, void, XmlChildEnumerator_System_Collections_IEnumerator_Reset, (XmlChildEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01960000, Object *, XmlChildEnumerator_System_Collections_IEnumerator_get_Current, (XmlChildEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01960000, XmlNode *, XmlChildEnumerator_get_Current, (XmlChildEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, XmlChildNodes__ctor, (XmlChildNodes * __this, XmlNode * container, MethodInfo * method));
DO_APP_FUNC(0x019600D0, XmlNode *, XmlChildNodes_Item, (XmlChildNodes * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x01960140, int32_t, XmlChildNodes_get_Count, (XmlChildNodes * __this, MethodInfo * method));
DO_APP_FUNC(0x019601B0, IEnumerator *, XmlChildNodes_GetEnumerator, (XmlChildNodes * __this, MethodInfo * method));
DO_APP_FUNC(0x01714A90, void, XmlComment__ctor, (XmlComment * __this, String * comment, XmlDocument * doc, MethodInfo * method));
DO_APP_FUNC(0x01960390, String *, XmlComment_get_Name, (XmlComment * __this, MethodInfo * method));
DO_APP_FUNC(0x01960390, String *, XmlComment_get_LocalName, (XmlComment * __this, MethodInfo * method));
DO_APP_FUNC(0x0043D9A0, XmlNodeType__Enum, XmlComment_get_NodeType, (XmlComment * __this, MethodInfo * method));
DO_APP_FUNC(0x019603C0, XmlNode *, XmlComment_CloneNode, (XmlComment * __this, bool deep, MethodInfo * method));
DO_APP_FUNC(0x01960420, void, XmlComment_WriteTo, (XmlComment * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlComment_WriteContentTo, (XmlComment * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x0196B610, void, XmlDeclaration__ctor, (XmlDeclaration * __this, String * version, String * encoding, String * standalone, XmlDocument * doc, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, XmlDeclaration_get_Version, (XmlDeclaration * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, XmlDeclaration_set_Version, (XmlDeclaration * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, XmlDeclaration_get_Encoding, (XmlDeclaration * __this, MethodInfo * method));
DO_APP_FUNC(0x0196B800, void, XmlDeclaration_set_Encoding, (XmlDeclaration * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, XmlDeclaration_get_Standalone, (XmlDeclaration * __this, MethodInfo * method));
DO_APP_FUNC(0x0196B8B0, void, XmlDeclaration_set_Standalone, (XmlDeclaration * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0195B1F0, String *, XmlDeclaration_get_Value, (XmlDeclaration * __this, MethodInfo * method));
DO_APP_FUNC(0x0195B210, void, XmlDeclaration_set_Value, (XmlDeclaration * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0196BA30, String *, XmlDeclaration_get_InnerText, (XmlDeclaration * __this, MethodInfo * method));
DO_APP_FUNC(0x0196BC70, void, XmlDeclaration_set_InnerText, (XmlDeclaration * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0196BE20, String *, XmlDeclaration_get_Name, (XmlDeclaration * __this, MethodInfo * method));
DO_APP_FUNC(0x015A1590, String *, XmlDeclaration_get_LocalName, (XmlDeclaration * __this, MethodInfo * method));
DO_APP_FUNC(0x007EC3F0, XmlNodeType__Enum, XmlDeclaration_get_NodeType, (XmlDeclaration * __this, MethodInfo * method));
DO_APP_FUNC(0x0196BEA0, XmlNode *, XmlDeclaration_CloneNode, (XmlDeclaration * __this, bool deep, MethodInfo * method));
DO_APP_FUNC(0x0196BEF0, void, XmlDeclaration_WriteTo, (XmlDeclaration * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlDeclaration_WriteContentTo, (XmlDeclaration * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x0196BF60, bool, XmlDeclaration_IsValidXmlVersion, (XmlDeclaration * __this, String * ver, MethodInfo * method));
DO_APP_FUNC(0x0196C010, void, XmlDocument__ctor, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x0196C280, void, XmlDocument__ctor_1, (XmlDocument * __this, XmlNameTable * nt, MethodInfo * method));
DO_APP_FUNC(0x0196C3D0, void, XmlDocument__ctor_2, (XmlDocument * __this, XmlImplementation * imp, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, SchemaInfo *, XmlDocument_get_DtdSchemaInfo, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBA00, void, XmlDocument_set_DtdSchemaInfo, (XmlDocument * __this, SchemaInfo * value, MethodInfo * method));
DO_APP_FUNC(0x0196C8E0, void, XmlDocument_CheckName, (String * name, MethodInfo * method));
DO_APP_FUNC(0x0196C9E0, XmlName *, XmlDocument_AddXmlName, (XmlDocument * __this, String * prefix, String * localName, String * namespaceURI, IXmlSchemaInfo * schemaInfo, MethodInfo * method));
DO_APP_FUNC(0x0196CA10, XmlName *, XmlDocument_GetXmlName, (XmlDocument * __this, String * prefix, String * localName, String * namespaceURI, IXmlSchemaInfo * schemaInfo, MethodInfo * method));
DO_APP_FUNC(0x0196CA40, XmlName *, XmlDocument_AddAttrXmlName, (XmlDocument * __this, String * prefix, String * localName, String * namespaceURI, IXmlSchemaInfo * schemaInfo, MethodInfo * method));
DO_APP_FUNC(0x0196CBE0, bool, XmlDocument_AddIdInfo, (XmlDocument * __this, XmlName * eleName, XmlName * attrName, MethodInfo * method));
DO_APP_FUNC(0x0196CDA0, XmlName *, XmlDocument_GetIDInfoByElement_, (XmlDocument * __this, XmlName * eleName, MethodInfo * method));
DO_APP_FUNC(0x0196CF00, XmlName *, XmlDocument_GetIDInfoByElement, (XmlDocument * __this, XmlName * eleName, MethodInfo * method));
DO_APP_FUNC(0x0196D070, WeakReference *, XmlDocument_GetElement, (XmlDocument * __this, ArrayList * elementList, XmlElement * elem, MethodInfo * method));
DO_APP_FUNC(0x0196D5D0, void, XmlDocument_AddElementWithId, (XmlDocument * __this, String * id, XmlElement * elem, MethodInfo * method));
DO_APP_FUNC(0x0196DAA0, void, XmlDocument_RemoveElementWithId, (XmlDocument * __this, String * id, XmlElement * elem, MethodInfo * method));
DO_APP_FUNC(0x0196DC10, XmlNode *, XmlDocument_CloneNode, (XmlDocument * __this, bool deep, MethodInfo * method));
DO_APP_FUNC(0x00AB4D20, XmlNodeType__Enum, XmlDocument_get_NodeType, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, XmlNode *, XmlDocument_get_ParentNode, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x0196DCA0, XmlDocumentType *, XmlDocument_get_DocumentType, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x0196DD80, XmlDeclaration *, XmlDocument_get_Declaration, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, XmlImplementation *, XmlDocument_get_Implementation, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC60, String *, XmlDocument_get_Name, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC60, String *, XmlDocument_get_LocalName, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x0196DE80, XmlElement *, XmlDocument_get_DocumentElement, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlDocument_get_IsContainer, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, XmlLinkedNode *, XmlDocument_get_LastNode, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB10, void, XmlDocument_set_LastNode, (XmlDocument * __this, XmlLinkedNode * value, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, XmlDocument *, XmlDocument_get_OwnerDocument, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, XmlDocument_set_Schemas, (XmlDocument * __this, XmlSchemaSet * value, MethodInfo * method));
DO_APP_FUNC(0x00585310, bool, XmlDocument_get_CanReportValidity, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x00757DC0, bool, XmlDocument_get_HasSetResolver, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x00A64220, XmlResolver *, XmlDocument_GetResolver, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x0196DF60, void, XmlDocument_set_XmlResolver, (XmlDocument * __this, XmlResolver * value, MethodInfo * method));
DO_APP_FUNC(0x0196E170, bool, XmlDocument_IsValidChildType, (XmlDocument * __this, XmlNodeType__Enum type, MethodInfo * method));
DO_APP_FUNC(0x0196E350, bool, XmlDocument_HasNodeTypeInPrevSiblings, (XmlDocument * __this, XmlNodeType__Enum nt, XmlNode * refNode, MethodInfo * method));
DO_APP_FUNC(0x0196E430, bool, XmlDocument_HasNodeTypeInNextSiblings, (XmlDocument * __this, XmlNodeType__Enum nt, XmlNode * refNode, MethodInfo * method));
DO_APP_FUNC(0x0196E4A0, bool, XmlDocument_CanInsertBefore, (XmlDocument * __this, XmlNode * newChild, XmlNode * refChild, MethodInfo * method));
DO_APP_FUNC(0x0196E640, bool, XmlDocument_CanInsertAfter, (XmlDocument * __this, XmlNode * newChild, XmlNode * refChild, MethodInfo * method));
DO_APP_FUNC(0x0196E760, XmlAttribute *, XmlDocument_CreateAttribute, (XmlDocument * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x0196E9A0, void, XmlDocument_SetDefaultNamespace, (XmlDocument * __this, String * prefix, String * localName, String * * namespaceURI, MethodInfo * method));
DO_APP_FUNC(0x0196EA80, XmlCDataSection *, XmlDocument_CreateCDataSection, (XmlDocument * __this, String * data, MethodInfo * method));
DO_APP_FUNC(0x0196EBF0, XmlComment *, XmlDocument_CreateComment, (XmlDocument * __this, String * data, MethodInfo * method));
DO_APP_FUNC(0x0196ED50, XmlDocumentType *, XmlDocument_CreateDocumentType, (XmlDocument * __this, String * name, String * publicId, String * systemId, String * internalSubset, MethodInfo * method));
DO_APP_FUNC(0x0196EEE0, XmlDocumentFragment *, XmlDocument_CreateDocumentFragment, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x0196F0C0, XmlElement *, XmlDocument_CreateElement, (XmlDocument * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x0196F250, void, XmlDocument_AddDefaultAttributes, (XmlDocument * __this, XmlElement * elem, MethodInfo * method));
DO_APP_FUNC(0x0196F580, SchemaElementDecl *, XmlDocument_GetSchemaElementDecl, (XmlDocument * __this, XmlElement * elem, MethodInfo * method));
DO_APP_FUNC(0x0196F7B0, XmlAttribute *, XmlDocument_PrepareDefaultAttribute, (XmlDocument * __this, SchemaAttDef * attdef, String * attrPrefix, String * attrLocalname, String * attrNamespaceURI, MethodInfo * method));
DO_APP_FUNC(0x0196F910, XmlEntityReference *, XmlDocument_CreateEntityReference, (XmlDocument * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x0196FA70, XmlProcessingInstruction *, XmlDocument_CreateProcessingInstruction, (XmlDocument * __this, String * target, String * data, MethodInfo * method));
DO_APP_FUNC(0x0196FBE0, XmlDeclaration *, XmlDocument_CreateXmlDeclaration, (XmlDocument * __this, String * version, String * encoding, String * standalone, MethodInfo * method));
DO_APP_FUNC(0x0196FD60, XmlText *, XmlDocument_CreateTextNode, (XmlDocument * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x0196FEC0, XmlSignificantWhitespace *, XmlDocument_CreateSignificantWhitespace, (XmlDocument * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01970020, XmlWhitespace *, XmlDocument_CreateWhitespace, (XmlDocument * __this, String * text, MethodInfo * method));
DO_APP_FUNC(0x01970180, XmlAttribute *, XmlDocument_CreateAttribute_1, (XmlDocument * __this, String * qualifiedName, String * namespaceURI, MethodInfo * method));
DO_APP_FUNC(0x01970310, XmlElement *, XmlDocument_CreateElement_1, (XmlDocument * __this, String * qualifiedName, String * namespaceURI, MethodInfo * method));
DO_APP_FUNC(0x019704A0, XmlNode *, XmlDocument_ImportNodeInternal, (XmlDocument * __this, XmlNode * node, bool deep, MethodInfo * method));
DO_APP_FUNC(0x01970A20, void, XmlDocument_ImportAttributes, (XmlDocument * __this, XmlNode * fromElem, XmlNode * toElem, MethodInfo * method));
DO_APP_FUNC(0x01970BA0, void, XmlDocument_ImportChildren, (XmlDocument * __this, XmlNode * fromNode, XmlNode * toNode, bool deep, MethodInfo * method));
DO_APP_FUNC(0x0195B0F0, XmlNameTable *, XmlDocument_get_NameTable, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x01970C70, XmlAttribute *, XmlDocument_CreateAttribute_2, (XmlDocument * __this, String * prefix, String * localName, String * namespaceURI, MethodInfo * method));
DO_APP_FUNC(0x01970E00, XmlAttribute *, XmlDocument_CreateDefaultAttribute, (XmlDocument * __this, String * prefix, String * localName, String * namespaceURI, MethodInfo * method));
DO_APP_FUNC(0x01970FA0, XmlElement *, XmlDocument_CreateElement_2, (XmlDocument * __this, String * prefix, String * localName, String * namespaceURI, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, XmlDocument_get_IsReadOnly, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x01971150, XmlNamedNodeMap *, XmlDocument_get_Entities, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9A0, void, XmlDocument_set_Entities, (XmlDocument * __this, XmlNamedNodeMap * value, MethodInfo * method));
DO_APP_FUNC(0x019712A0, bool, XmlDocument_get_IsLoading, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x019712B0, void, XmlDocument_set_IsLoading, (XmlDocument * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00DFE800, bool, XmlDocument_get_ActualLoadingStatus, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x019712C0, XmlNode *, XmlDocument_ReadNode, (XmlDocument * __this, XmlReader * reader, MethodInfo * method));
DO_APP_FUNC(0x019714D0, XmlTextReader *, XmlDocument_SetupReader, (XmlDocument * __this, XmlTextReader * tr, MethodInfo * method));
DO_APP_FUNC(0x019715D0, void, XmlDocument_Load, (XmlDocument * __this, XmlReader * reader, MethodInfo * method));
DO_APP_FUNC(0x019717F0, void, XmlDocument_LoadXml, (XmlDocument * __this, String * xml, MethodInfo * method));
DO_APP_FUNC(0x01971BA0, void, XmlDocument_set_InnerText, (XmlDocument * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01971C10, void, XmlDocument_set_InnerXml, (XmlDocument * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01971C30, void, XmlDocument_Save, (XmlDocument * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x01971EE0, void, XmlDocument_WriteTo, (XmlDocument * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x01971F00, void, XmlDocument_WriteContentTo, (XmlDocument * __this, XmlWriter * xw, MethodInfo * method));
DO_APP_FUNC(0x01972180, XmlNodeChangedEventArgs *, XmlDocument_GetEventArgs, (XmlDocument * __this, XmlNode * node, XmlNode * oldParent, XmlNode * newParent, String * oldValue, String * newValue, XmlNodeChangedAction__Enum action, MethodInfo * method));
DO_APP_FUNC(0x01972370, XmlNodeChangedEventArgs *, XmlDocument_GetInsertEventArgsForLoad, (XmlDocument * __this, XmlNode * node, XmlNode * newParent, MethodInfo * method));
DO_APP_FUNC(0x01972530, void, XmlDocument_BeforeEvent, (XmlDocument * __this, XmlNodeChangedEventArgs * args, MethodInfo * method));
DO_APP_FUNC(0x01972580, void, XmlDocument_AfterEvent, (XmlDocument * __this, XmlNodeChangedEventArgs * args, MethodInfo * method));
DO_APP_FUNC(0x019725D0, XmlAttribute *, XmlDocument_GetDefaultAttribute, (XmlDocument * __this, XmlElement * elem, String * attrPrefix, String * attrLocalname, String * attrNamespaceURI, MethodInfo * method));
DO_APP_FUNC(0x019728A0, String *, XmlDocument_get_Version, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x019728D0, String *, XmlDocument_get_Encoding, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x01972900, String *, XmlDocument_get_Standalone, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x01972930, XmlEntity *, XmlDocument_GetEntityNode, (XmlDocument * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01972A30, IXmlSchemaInfo *, XmlDocument_get_SchemaInfo, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x0065FBE0, String *, XmlDocument_get_BaseURI, (XmlDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x0065FBF0, void, XmlDocument_SetBaseURI, (XmlDocument * __this, String * inBaseURI, MethodInfo * method));
DO_APP_FUNC(0x01972BB0, XmlNode *, XmlDocument_AppendChildForLoad, (XmlDocument * __this, XmlNode * newChild, XmlDocument * doc, MethodInfo * method));
DO_APP_FUNC(0x01972DF0, void, XmlDocument__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01DAAEE0, void, XmlDocumentFragment__ctor, (XmlDocumentFragment * __this, XmlDocument * ownerDocument, MethodInfo * method));
DO_APP_FUNC(0x01DAAFB0, String *, XmlDocumentFragment_get_Name, (XmlDocumentFragment * __this, MethodInfo * method));
DO_APP_FUNC(0x01DAAFB0, String *, XmlDocumentFragment_get_LocalName, (XmlDocumentFragment * __this, MethodInfo * method));
DO_APP_FUNC(0x004FA040, XmlNodeType__Enum, XmlDocumentFragment_get_NodeType, (XmlDocumentFragment * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, XmlNode *, XmlDocumentFragment_get_ParentNode, (XmlDocumentFragment * __this, MethodInfo * method));
DO_APP_FUNC(0x01DAAFE0, XmlDocument *, XmlDocumentFragment_get_OwnerDocument, (XmlDocumentFragment * __this, MethodInfo * method));
DO_APP_FUNC(0x01DAB0B0, void, XmlDocumentFragment_set_InnerXml, (XmlDocumentFragment * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01DAB230, XmlNode *, XmlDocumentFragment_CloneNode, (XmlDocumentFragment * __this, bool deep, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlDocumentFragment_get_IsContainer, (XmlDocumentFragment * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, XmlLinkedNode *, XmlDocumentFragment_get_LastNode, (XmlDocumentFragment * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, XmlDocumentFragment_set_LastNode, (XmlDocumentFragment * __this, XmlLinkedNode * value, MethodInfo * method));
DO_APP_FUNC(0x01DAB2D0, bool, XmlDocumentFragment_IsValidChildType, (XmlDocumentFragment * __this, XmlNodeType__Enum type, MethodInfo * method));
DO_APP_FUNC(0x01DAB380, bool, XmlDocumentFragment_CanInsertAfter, (XmlDocumentFragment * __this, XmlNode * newChild, XmlNode * refChild, MethodInfo * method));
DO_APP_FUNC(0x01DAB400, bool, XmlDocumentFragment_CanInsertBefore, (XmlDocumentFragment * __this, XmlNode * newChild, XmlNode * refChild, MethodInfo * method));
DO_APP_FUNC(0x01971EE0, void, XmlDocumentFragment_WriteTo, (XmlDocumentFragment * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x01DAB470, void, XmlDocumentFragment_WriteContentTo, (XmlDocumentFragment * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x01DAB6F0, void, XmlDocumentType__ctor, (XmlDocumentType * __this, String * name, String * publicId, String * systemId, String * internalSubset, XmlDocument * doc, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, XmlDocumentType_get_Name, (XmlDocumentType * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, XmlDocumentType_get_LocalName, (XmlDocumentType * __this, MethodInfo * method));
DO_APP_FUNC(0x008556D0, XmlNodeType__Enum, XmlDocumentType_get_NodeType, (XmlDocumentType * __this, MethodInfo * method));
DO_APP_FUNC(0x01DAB8D0, XmlNode *, XmlDocumentType_CloneNode, (XmlDocumentType * __this, bool deep, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlDocumentType_get_IsReadOnly, (XmlDocumentType * __this, MethodInfo * method));
DO_APP_FUNC(0x01DAB930, XmlNamedNodeMap *, XmlDocumentType_get_Entities, (XmlDocumentType * __this, MethodInfo * method));
DO_APP_FUNC(0x01DABA80, XmlNamedNodeMap *, XmlDocumentType_get_Notations, (XmlDocumentType * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, XmlDocumentType_get_PublicId, (XmlDocumentType * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, XmlDocumentType_get_SystemId, (XmlDocumentType * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, String *, XmlDocumentType_get_InternalSubset, (XmlDocumentType * __this, MethodInfo * method));
DO_APP_FUNC(0x00446590, bool, XmlDocumentType_get_ParseWithNamespaces, (XmlDocumentType * __this, MethodInfo * method));
DO_APP_FUNC(0x01DABBD0, void, XmlDocumentType_WriteTo, (XmlDocumentType * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlDocumentType_WriteContentTo, (XmlDocumentType * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, SchemaInfo *, XmlDocumentType_get_DtdSchemaInfo, (XmlDocumentType * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB70, void, XmlDocumentType_set_DtdSchemaInfo, (XmlDocumentType * __this, SchemaInfo * value, MethodInfo * method));
DO_APP_FUNC(0x01DAD950, void, XmlElement__ctor, (XmlElement * __this, XmlName * name, bool empty, XmlDocument * doc, MethodInfo * method));
DO_APP_FUNC(0x01DADAD0, void, XmlElement__ctor_1, (XmlElement * __this, String * prefix, String * localName, String * namespaceURI, XmlDocument * doc, MethodInfo * method));
DO_APP_FUNC(0x002FB950, XmlName *, XmlElement_get_XmlName, (XmlElement * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, XmlElement_set_XmlName, (XmlElement * __this, XmlName * value, MethodInfo * method));
DO_APP_FUNC(0x01DADB40, XmlNode *, XmlElement_CloneNode, (XmlElement * __this, bool deep, MethodInfo * method));
DO_APP_FUNC(0x01DAE040, String *, XmlElement_get_Name, (XmlElement * __this, MethodInfo * method));
DO_APP_FUNC(0x005E01F0, String *, XmlElement_get_LocalName, (XmlElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01DAE060, String *, XmlElement_get_NamespaceURI, (XmlElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01DAE080, String *, XmlElement_get_Prefix, (XmlElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01DAE0A0, void, XmlElement_set_Prefix, (XmlElement * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x00417920, XmlNodeType__Enum, XmlElement_get_NodeType, (XmlElement * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, XmlNode *, XmlElement_get_ParentNode, (XmlElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01DAE170, XmlDocument *, XmlElement_get_OwnerDocument, (XmlElement * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlElement_get_IsContainer, (XmlElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01DAE190, XmlNode *, XmlElement_AppendChildForLoad, (XmlElement * __this, XmlNode * newChild, XmlDocument * doc, MethodInfo * method));
DO_APP_FUNC(0x01DAE360, bool, XmlElement_get_IsEmpty, (XmlElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01DAE370, void, XmlElement_set_IsEmpty, (XmlElement * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01DAE3B0, XmlLinkedNode *, XmlElement_get_LastNode, (XmlElement * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9A0, void, XmlElement_set_LastNode, (XmlElement * __this, XmlLinkedNode * value, MethodInfo * method));
DO_APP_FUNC(0x01DAE3C0, bool, XmlElement_IsValidChildType, (XmlElement * __this, XmlNodeType__Enum type, MethodInfo * method));
DO_APP_FUNC(0x01DAE420, XmlAttributeCollection *, XmlElement_get_Attributes, (XmlElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01DAE670, bool, XmlElement_get_HasAttributes, (XmlElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01DAE6A0, String *, XmlElement_GetAttribute, (XmlElement * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01DAE770, void, XmlElement_SetAttribute, (XmlElement * __this, String * name, String * value, MethodInfo * method));
DO_APP_FUNC(0x01DAE850, XmlAttribute *, XmlElement_GetAttributeNode, (XmlElement * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01DAE8C0, XmlAttribute *, XmlElement_SetAttributeNode, (XmlElement * __this, XmlAttribute * newAttr, MethodInfo * method));
DO_APP_FUNC(0x01DAEA40, String *, XmlElement_GetAttribute_1, (XmlElement * __this, String * localName, String * namespaceURI, MethodInfo * method));
DO_APP_FUNC(0x01DAEB20, String *, XmlElement_SetAttribute_1, (XmlElement * __this, String * localName, String * namespaceURI, String * value, MethodInfo * method));
DO_APP_FUNC(0x01DAECA0, XmlAttribute *, XmlElement_GetAttributeNode_1, (XmlElement * __this, String * localName, String * namespaceURI, MethodInfo * method));
DO_APP_FUNC(0x01DAED20, XmlAttribute *, XmlElement_SetAttributeNode_1, (XmlElement * __this, String * localName, String * namespaceURI, MethodInfo * method));
DO_APP_FUNC(0x01DAEE60, bool, XmlElement_HasAttribute, (XmlElement * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01DAEE80, void, XmlElement_WriteTo, (XmlElement * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x01DAEFD0, void, XmlElement_WriteElementTo, (XmlWriter * writer, XmlElement * e, MethodInfo * method));
DO_APP_FUNC(0x01DAF220, void, XmlElement_WriteStartElement, (XmlElement * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x0195BCE0, void, XmlElement_WriteContentTo, (XmlElement * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x01DAF350, void, XmlElement_RemoveAllAttributes, (XmlElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01DAF4B0, void, XmlElement_RemoveAll, (XmlElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01DAF4E0, void, XmlElement_RemoveAllChildren, (XmlElement * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, IXmlSchemaInfo *, XmlElement_get_SchemaInfo, (XmlElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01DAF4F0, void, XmlElement_set_InnerXml, (XmlElement * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01DAF6D0, String *, XmlElement_get_InnerText, (XmlElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01DAF6E0, void, XmlElement_set_InnerText, (XmlElement * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01DAF7C0, XmlNode *, XmlElement_get_NextSibling, (XmlElement * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, XmlElement_SetParent, (XmlElement * __this, XmlNode * node, MethodInfo * method));
DO_APP_FUNC(0x01DB52D0, void, XmlEntity__ctor, (XmlEntity * __this, String * name, String * strdata, String * publicId, String * systemId, String * notationName, XmlDocument * doc, MethodInfo * method));
DO_APP_FUNC(0x01DB5380, XmlNode *, XmlEntity_CloneNode, (XmlEntity * __this, bool deep, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlEntity_get_IsReadOnly, (XmlEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, XmlEntity_get_Name, (XmlEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, XmlEntity_get_LocalName, (XmlEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x01DAF6D0, String *, XmlEntity_get_InnerText, (XmlEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB53F0, void, XmlEntity_set_InnerText, (XmlEntity * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlEntity_get_IsContainer, (XmlEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB5460, XmlLinkedNode *, XmlEntity_get_LastNode, (XmlEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBA00, void, XmlEntity_set_LastNode, (XmlEntity * __this, XmlLinkedNode * value, MethodInfo * method));
DO_APP_FUNC(0x01DB5600, bool, XmlEntity_IsValidChildType, (XmlEntity * __this, XmlNodeType__Enum type, MethodInfo * method));
DO_APP_FUNC(0x005D89A0, XmlNodeType__Enum, XmlEntity_get_NodeType, (XmlEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, XmlEntity_get_SystemId, (XmlEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB5620, void, XmlEntity_set_InnerXml, (XmlEntity * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlEntity_WriteTo, (XmlEntity * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlEntity_WriteContentTo, (XmlEntity * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, String *, XmlEntity_get_BaseURI, (XmlEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9E0, void, XmlEntity_SetBaseURI, (XmlEntity * __this, String * inBaseURI, MethodInfo * method));
DO_APP_FUNC(0x01DB5690, void, XmlEntityReference__ctor, (XmlEntityReference * __this, String * name, XmlDocument * doc, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, XmlEntityReference_get_Name, (XmlEntityReference * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, XmlEntityReference_get_LocalName, (XmlEntityReference * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, String *, XmlEntityReference_get_Value, (XmlEntityReference * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB57F0, void, XmlEntityReference_set_Value, (XmlEntityReference * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x008E77B0, XmlNodeType__Enum, XmlEntityReference_get_NodeType, (XmlEntityReference * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB5860, XmlNode *, XmlEntityReference_CloneNode, (XmlEntityReference * __this, bool deep, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlEntityReference_get_IsReadOnly, (XmlEntityReference * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlEntityReference_get_IsContainer, (XmlEntityReference * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB58B0, void, XmlEntityReference_SetParent, (XmlEntityReference * __this, XmlNode * node, MethodInfo * method));
DO_APP_FUNC(0x01DB5A70, void, XmlEntityReference_SetParentForLoad, (XmlEntityReference * __this, XmlNode * node, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, XmlLinkedNode *, XmlEntityReference_get_LastNode, (XmlEntityReference * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB10, void, XmlEntityReference_set_LastNode, (XmlEntityReference * __this, XmlLinkedNode * value, MethodInfo * method));
DO_APP_FUNC(0x01DAE3C0, bool, XmlEntityReference_IsValidChildType, (XmlEntityReference * __this, XmlNodeType__Enum type, MethodInfo * method));
DO_APP_FUNC(0x01DB5A90, void, XmlEntityReference_WriteTo, (XmlEntityReference * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x01DB5AC0, void, XmlEntityReference_WriteContentTo, (XmlEntityReference * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x01DB5D40, String *, XmlEntityReference_get_BaseURI, (XmlEntityReference * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB5D80, String *, XmlEntityReference_ConstructBaseURI, (XmlEntityReference * __this, String * baseURI, String * systemId, MethodInfo * method));
DO_APP_FUNC(0x01DB5EA0, String *, XmlEntityReference_get_ChildBaseURI, (XmlEntityReference * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB9760, void, XmlImplementation__ctor, (XmlImplementation * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, XmlImplementation__ctor_1, (XmlImplementation * __this, XmlNameTable * nt, MethodInfo * method));
DO_APP_FUNC(0x01DB98B0, XmlDocument *, XmlImplementation_CreateDocument, (XmlImplementation * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, XmlNameTable *, XmlImplementation_get_NameTable, (XmlImplementation * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB9A00, void, XmlLinkedNode__ctor, (XmlLinkedNode * __this, XmlDocument * doc, MethodInfo * method));
DO_APP_FUNC(0x01DB9A20, XmlNode *, XmlLinkedNode_get_PreviousSibling, (XmlLinkedNode * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB9AA0, XmlNode *, XmlLinkedNode_get_NextSibling, (XmlLinkedNode * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlLoader__ctor, (XmlLoader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB9B00, void, XmlLoader_Load, (XmlLoader * __this, XmlDocument * doc, XmlReader * reader, bool preserveWhitespace, MethodInfo * method));
DO_APP_FUNC(0x01DB9E10, void, XmlLoader_LoadDocSequence, (XmlLoader * __this, XmlDocument * parentDoc, MethodInfo * method));
DO_APP_FUNC(0x01DB9E90, XmlNode *, XmlLoader_ReadCurrentNode, (XmlLoader * __this, XmlDocument * doc, XmlReader * reader, MethodInfo * method));
DO_APP_FUNC(0x01DBA060, XmlNode *, XmlLoader_LoadNode, (XmlLoader * __this, bool skipOverWhitespace, MethodInfo * method));
DO_APP_FUNC(0x01DBA7A0, XmlAttribute *, XmlLoader_LoadAttributeNode, (XmlLoader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DBAB60, XmlAttribute *, XmlLoader_LoadDefaultAttribute, (XmlLoader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DBAD80, void, XmlLoader_LoadAttributeValue, (XmlLoader * __this, XmlNode * parent, bool direct, MethodInfo * method));
DO_APP_FUNC(0x01DBB310, XmlEntityReference *, XmlLoader_LoadEntityReferenceNode, (XmlLoader * __this, bool direct, MethodInfo * method));
DO_APP_FUNC(0x01DBB660, XmlDeclaration *, XmlLoader_LoadDeclarationNode, (XmlLoader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DBB980, XmlDocumentType *, XmlLoader_LoadDocumentTypeNode, (XmlLoader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DBBCB0, XmlNode *, XmlLoader_LoadNodeDirect, (XmlLoader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DBC750, XmlAttribute *, XmlLoader_LoadAttributeNodeDirect, (XmlLoader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DBCAC0, void, XmlLoader_ParseDocumentType, (XmlLoader * __this, XmlDocumentType * dtNode, MethodInfo * method));
DO_APP_FUNC(0x01DBCB50, void, XmlLoader_ParseDocumentType_1, (XmlLoader * __this, XmlDocumentType * dtNode, bool bUseResolver, XmlResolver * resolver, MethodInfo * method));
DO_APP_FUNC(0x01DBD0B0, void, XmlLoader_LoadDocumentType, (XmlLoader * __this, IDtdInfo * dtdInfo, XmlDocumentType * dtNode, MethodInfo * method));
DO_APP_FUNC(0x01DBE010, XmlParserContext *, XmlLoader_GetContext, (XmlLoader * __this, XmlNode * node, MethodInfo * method));
DO_APP_FUNC(0x01DBEB80, XmlNamespaceManager *, XmlLoader_ParsePartialContent, (XmlLoader * __this, XmlNode * parentNode, String * innerxmltext, XmlNodeType__Enum nt, MethodInfo * method));
DO_APP_FUNC(0x01DBEDB0, void, XmlLoader_LoadInnerXmlElement, (XmlLoader * __this, XmlElement * node, String * innerxmltext, MethodInfo * method));
DO_APP_FUNC(0x01DBEE50, void, XmlLoader_LoadInnerXmlAttribute, (XmlLoader * __this, XmlAttribute * node, String * innerxmltext, MethodInfo * method));
DO_APP_FUNC(0x01DBEE70, void, XmlLoader_RemoveDuplicateNamespace, (XmlLoader * __this, XmlElement * elem, XmlNamespaceManager * mgr, bool fCheckElemAttrs, MethodInfo * method));
DO_APP_FUNC(0x01DBF320, String *, XmlLoader_EntitizeName, (XmlLoader * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01DBF3B0, void, XmlLoader_ExpandEntity, (XmlLoader * __this, XmlEntity * ent, MethodInfo * method));
DO_APP_FUNC(0x01DBF420, void, XmlLoader_ExpandEntityReference, (XmlLoader * __this, XmlEntityReference * eref, MethodInfo * method));
DO_APP_FUNC(0x01DBFBF0, XmlReader *, XmlLoader_CreateInnerXmlReader, (XmlLoader * __this, String * xmlFragment, XmlNodeType__Enum nt, XmlParserContext * context, XmlDocument * doc, MethodInfo * method));
DO_APP_FUNC(0x01DBFFC0, void, XmlLoader_ParseXmlDeclarationValue, (String * strValue, String * * version, String * * encoding, String * * standalone, MethodInfo * method));
DO_APP_FUNC(0x01DC0280, Exception *, XmlLoader_UnexpectedNodeType, (XmlNodeType__Enum nodetype, MethodInfo * method));
DO_APP_FUNC(0x01DC0490, XmlName *, XmlName_Create, (String * prefix, String * localName, String * ns, int32_t hashCode, XmlDocument * ownerDoc, XmlName * next, IXmlSchemaInfo * schemaInfo, MethodInfo * method));
DO_APP_FUNC(0x01DC0820, void, XmlName__ctor, (XmlName * __this, String * prefix, String * localName, String * ns, int32_t hashCode, XmlDocument * ownerDoc, XmlName * next, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, XmlName_get_LocalName, (XmlName * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, XmlName_get_NamespaceURI, (XmlName * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, XmlName_get_Prefix, (XmlName * __this, MethodInfo * method));
DO_APP_FUNC(0x00654950, int32_t, XmlName_get_HashCode, (XmlName * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, XmlDocument *, XmlName_get_OwnerDocument, (XmlName * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC0850, String *, XmlName_get_Name, (XmlName * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, XmlSchemaValidity__Enum, XmlName_get_Validity, (XmlName * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, XmlName_get_IsDefault, (XmlName * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, XmlName_get_IsNil, (XmlName * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, XmlSchemaSimpleType *, XmlName_get_MemberType, (XmlName * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, XmlSchemaType *, XmlName_get_SchemaType, (XmlName * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, XmlSchemaElement *, XmlName_get_SchemaElement, (XmlName * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, XmlSchemaAttribute *, XmlName_get_SchemaAttribute, (XmlName * __this, MethodInfo * method));
DO_APP_FUNC(0x00D4A040, bool, XmlName_Equals, (XmlName * __this, IXmlSchemaInfo * schemaInfo, MethodInfo * method));
DO_APP_FUNC(0x01DC0A80, int32_t, XmlName_GetHashCode, (String * name, MethodInfo * method));
DO_APP_FUNC(0x01DC0AF0, void, XmlNameEx__ctor, (XmlNameEx * __this, String * prefix, String * localName, String * ns, int32_t hashCode, XmlDocument * ownerDoc, XmlName * next, IXmlSchemaInfo * schemaInfo, MethodInfo * method));
DO_APP_FUNC(0x01DC0C70, XmlSchemaValidity__Enum, XmlNameEx_get_Validity, (XmlNameEx * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC0CA0, bool, XmlNameEx_get_IsDefault, (XmlNameEx * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC0CB0, bool, XmlNameEx_get_IsNil, (XmlNameEx * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, XmlSchemaSimpleType *, XmlNameEx_get_MemberType, (XmlNameEx * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, XmlSchemaType *, XmlNameEx_get_SchemaType, (XmlNameEx * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC0CC0, XmlSchemaElement *, XmlNameEx_get_SchemaElement, (XmlNameEx * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC0D80, XmlSchemaAttribute *, XmlNameEx_get_SchemaAttribute, (XmlNameEx * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC0E40, void, XmlNameEx_SetValidity, (XmlNameEx * __this, XmlSchemaValidity__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01DC0E50, void, XmlNameEx_SetIsDefault, (XmlNameEx * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01DC0E80, void, XmlNameEx_SetIsNil, (XmlNameEx * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01DC0EB0, bool, XmlNameEx_Equals, (XmlNameEx * __this, IXmlSchemaInfo * schemaInfo, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, XmlNamedNodeMap__ctor, (XmlNamedNodeMap * __this, XmlNode * parent, MethodInfo * method));
DO_APP_FUNC(0x01DC1020, XmlNode *, XmlNamedNodeMap_GetNamedItem, (XmlNamedNodeMap * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01DC1240, XmlNode *, XmlNamedNodeMap_SetNamedItem, (XmlNamedNodeMap * __this, XmlNode * node, MethodInfo * method));
DO_APP_FUNC(0x0195CDA0, int32_t, XmlNamedNodeMap_get_Count, (XmlNamedNodeMap * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC1320, IEnumerator *, XmlNamedNodeMap_GetEnumerator, (XmlNamedNodeMap * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC1330, int32_t, XmlNamedNodeMap_FindNodeOffset, (XmlNamedNodeMap * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01DC14A0, int32_t, XmlNamedNodeMap_FindNodeOffset_1, (XmlNamedNodeMap * __this, String * localName, String * namespaceURI, MethodInfo * method));
DO_APP_FUNC(0x01DC1660, XmlNode *, XmlNamedNodeMap_AddNode, (XmlNamedNodeMap * __this, XmlNode * node, MethodInfo * method));
DO_APP_FUNC(0x01DC18A0, XmlNode *, XmlNamedNodeMap_AddNodeForLoad, (XmlNamedNodeMap * __this, XmlNode * node, XmlDocument * doc, MethodInfo * method));
DO_APP_FUNC(0x01DC1960, XmlNode *, XmlNamedNodeMap_RemoveNodeAt, (XmlNamedNodeMap * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x01DC1B30, XmlNode *, XmlNamedNodeMap_ReplaceNodeAt, (XmlNamedNodeMap * __this, int32_t i, XmlNode * node, MethodInfo * method));
DO_APP_FUNC(0x01DC1BA0, XmlNode *, XmlNamedNodeMap_InsertNodeAt, (XmlNamedNodeMap * __this, int32_t i, XmlNode * node, MethodInfo * method));
DO_APP_FUNC(0x001CFBF0, int32_t, XmlNamedNodeMap_SmallXmlNodeList_get_Count, (XmlNamedNodeMap_SmallXmlNodeList__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001CFC00, Object *, XmlNamedNodeMap_SmallXmlNodeList_get_Item, (XmlNamedNodeMap_SmallXmlNodeList__Boxed * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x001CFC10, void, XmlNamedNodeMap_SmallXmlNodeList_Add, (XmlNamedNodeMap_SmallXmlNodeList__Boxed * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x001CFC20, void, XmlNamedNodeMap_SmallXmlNodeList_RemoveAt, (XmlNamedNodeMap_SmallXmlNodeList__Boxed * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x001CFC30, void, XmlNamedNodeMap_SmallXmlNodeList_Insert, (XmlNamedNodeMap_SmallXmlNodeList__Boxed * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x001CFC40, IEnumerator *, XmlNamedNodeMap_SmallXmlNodeList_GetEnumerator, (XmlNamedNodeMap_SmallXmlNodeList__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC2A00, void, XmlNamedNodeMap_SmallXmlNodeList_SingleObjectEnumerator__ctor, (XmlNamedNodeMap_SmallXmlNodeList_SingleObjectEnumerator * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01DC2A10, Object *, XmlNamedNodeMap_SmallXmlNodeList_SingleObjectEnumerator_get_Current, (XmlNamedNodeMap_SmallXmlNodeList_SingleObjectEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC2AC0, bool, XmlNamedNodeMap_SmallXmlNodeList_SingleObjectEnumerator_MoveNext, (XmlNamedNodeMap_SmallXmlNodeList_SingleObjectEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x00C2BCA0, void, XmlNamedNodeMap_SmallXmlNodeList_SingleObjectEnumerator_Reset, (XmlNamedNodeMap_SmallXmlNodeList_SingleObjectEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlNode__ctor, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC4000, void, XmlNode__ctor_1, (XmlNode * __this, XmlDocument * doc, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, String *, XmlNode_get_Value, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC40D0, void, XmlNode_set_Value, (XmlNode * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01DC4210, XmlNode *, XmlNode_get_ParentNode, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC4350, XmlNodeList *, XmlNode_get_ChildNodes, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, XmlNode *, XmlNode_get_PreviousSibling, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, XmlNode *, XmlNode_get_NextSibling, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, XmlAttributeCollection *, XmlNode_get_Attributes, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC4490, XmlDocument *, XmlNode_get_OwnerDocument, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC45B0, XmlNode *, XmlNode_get_FirstChild, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC45E0, XmlNode *, XmlNode_get_LastChild, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, XmlNode_get_IsContainer, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, XmlLinkedNode *, XmlNode_get_LastNode, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlNode_set_LastNode, (XmlNode * __this, XmlLinkedNode * value, MethodInfo * method));
DO_APP_FUNC(0x01DC4600, bool, XmlNode_AncestorNode, (XmlNode * __this, XmlNode * node, MethodInfo * method));
DO_APP_FUNC(0x01DC4670, XmlNode *, XmlNode_InsertBefore, (XmlNode * __this, XmlNode * newChild, XmlNode * refChild, MethodInfo * method));
DO_APP_FUNC(0x01DC4CF0, XmlNode *, XmlNode_InsertAfter, (XmlNode * __this, XmlNode * newChild, XmlNode * refChild, MethodInfo * method));
DO_APP_FUNC(0x01DC53A0, XmlNode *, XmlNode_RemoveChild, (XmlNode * __this, XmlNode * oldChild, MethodInfo * method));
DO_APP_FUNC(0x01DC5770, XmlNode *, XmlNode_PrependChild, (XmlNode * __this, XmlNode * newChild, MethodInfo * method));
DO_APP_FUNC(0x01DC57C0, XmlNode *, XmlNode_AppendChild, (XmlNode * __this, XmlNode * newChild, MethodInfo * method));
DO_APP_FUNC(0x01DC5D50, XmlNode *, XmlNode_AppendChildForLoad, (XmlNode * __this, XmlNode * newChild, XmlDocument * doc, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, XmlNode_IsValidChildType, (XmlNode * __this, XmlNodeType__Enum type, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlNode_CanInsertBefore, (XmlNode * __this, XmlNode * newChild, XmlNode * refChild, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlNode_CanInsertAfter, (XmlNode * __this, XmlNode * newChild, XmlNode * refChild, MethodInfo * method));
DO_APP_FUNC(0x01DC5F50, bool, XmlNode_get_HasChildNodes, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC5F70, void, XmlNode_CopyChildren, (XmlNode * __this, XmlDocument * doc, XmlNode * container, bool deep, MethodInfo * method));
DO_APP_FUNC(0x01DC6030, String *, XmlNode_get_NamespaceURI, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC60B0, String *, XmlNode_get_Prefix, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlNode_set_Prefix, (XmlNode * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01DC6130, bool, XmlNode_get_IsReadOnly, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC6250, bool, XmlNode_HasReadOnlyParent, (XmlNode * n, MethodInfo * method));
DO_APP_FUNC(0x01DC6350, Object *, XmlNode_System_ICloneable_Clone, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC6370, IEnumerator *, XmlNode_System_Collections_IEnumerable_GetEnumerator, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC64E0, IEnumerator *, XmlNode_GetEnumerator, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC6650, void, XmlNode_AppendChildText, (XmlNode * __this, StringBuilder * builder, MethodInfo * method));
DO_APP_FUNC(0x01DC6770, String *, XmlNode_get_InnerText, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC6990, void, XmlNode_set_InnerText, (XmlNode * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01DC6A90, void, XmlNode_set_InnerXml, (XmlNode * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01DC6B00, IXmlSchemaInfo *, XmlNode_get_SchemaInfo, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC6BA0, String *, XmlNode_get_BaseURI, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC6CE0, void, XmlNode_RemoveAll, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC6D60, XmlDocument *, XmlNode_get_Document, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC6E60, String *, XmlNode_GetPrefixOfNamespace, (XmlNode * __this, String * namespaceURI, MethodInfo * method));
DO_APP_FUNC(0x01DC6F10, String *, XmlNode_GetPrefixOfNamespaceStrict, (XmlNode * __this, String * namespaceURI, MethodInfo * method));
DO_APP_FUNC(0x01DC73C0, void, XmlNode_SetParent, (XmlNode * __this, XmlNode * node, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, XmlNode_SetParentForLoad, (XmlNode * __this, XmlNode * node, MethodInfo * method));
DO_APP_FUNC(0x01DC7400, void, XmlNode_SplitName, (String * name, String * * prefix, String * * localName, MethodInfo * method));
DO_APP_FUNC(0x01DC7520, XmlNode *, XmlNode_FindChild, (XmlNode * __this, XmlNodeType__Enum type, MethodInfo * method));
DO_APP_FUNC(0x01DC75A0, XmlNodeChangedEventArgs *, XmlNode_GetEventArgs, (XmlNode * __this, XmlNode * node, XmlNode * oldParent, XmlNode * newParent, String * oldValue, String * newValue, XmlNodeChangedAction__Enum action, MethodInfo * method));
DO_APP_FUNC(0x01DC7720, void, XmlNode_BeforeEvent, (XmlNode * __this, XmlNodeChangedEventArgs * args, MethodInfo * method));
DO_APP_FUNC(0x01DC7770, void, XmlNode_AfterEvent, (XmlNode * __this, XmlNodeChangedEventArgs * args, MethodInfo * method));
DO_APP_FUNC(0x01DC77C0, XmlSpace__Enum, XmlNode_get_XmlSpace, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC79B0, String *, XmlNode_get_XmlLang, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, XmlNode_get_IsText, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC7B00, void, XmlNode_NestTextNodes, (XmlNode * prevNode, XmlNode * nextNode, MethodInfo * method));
DO_APP_FUNC(0x01DC7B20, void, XmlNode_UnnestTextNodes, (XmlNode * prevNode, XmlNode * nextNode, MethodInfo * method));
DO_APP_FUNC(0x01DC7B60, Object *, XmlNode_get_debuggerDisplayProxy, (XmlNode * __this, MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, DebuggerDisplayXmlNodeProxy__ctor, (DebuggerDisplayXmlNodeProxy__Boxed * __this, XmlNode * node, MethodInfo * method));
DO_APP_FUNC(0x001DE680, String *, DebuggerDisplayXmlNodeProxy_ToString, (DebuggerDisplayXmlNodeProxy__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC7BF0, void, XmlNodeChangedEventArgs__ctor, (XmlNodeChangedEventArgs * __this, XmlNode * node, XmlNode * oldParent, XmlNode * newParent, String * oldValue, String * newValue, XmlNodeChangedAction__Enum action, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, XmlNodeChangedAction__Enum, XmlNodeChangedEventArgs_get_Action, (XmlNodeChangedEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, XmlNodeChangedEventHandler__ctor, (XmlNodeChangedEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, XmlNodeChangedEventHandler_Invoke, (XmlNodeChangedEventHandler * __this, Object * sender, XmlNodeChangedEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, XmlNodeChangedEventHandler_BeginInvoke, (XmlNodeChangedEventHandler * __this, Object * sender, XmlNodeChangedEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, XmlNodeChangedEventHandler_EndInvoke, (XmlNodeChangedEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01DC7CD0, XmlNode *, XmlNodeList_get_ItemOf, (XmlNodeList * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x005D2E60, void, XmlNodeList_System_IDisposable_Dispose, (XmlNodeList * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlNodeList_PrivateDisposeNodeList, (XmlNodeList * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlNodeList__ctor, (XmlNodeList * __this, MethodInfo * method));
DO_APP_FUNC(0x016FB1D0, void, XmlNodeReaderNavigator__ctor, (XmlNodeReaderNavigator * __this, XmlNode * node, MethodInfo * method));
DO_APP_FUNC(0x016FB440, XmlNodeType__Enum, XmlNodeReaderNavigator_get_NodeType, (XmlNodeReaderNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x016FB480, String *, XmlNodeReaderNavigator_get_NamespaceURI, (XmlNodeReaderNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x016FB4B0, String *, XmlNodeReaderNavigator_get_Name, (XmlNodeReaderNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x016FB660, String *, XmlNodeReaderNavigator_get_LocalName, (XmlNodeReaderNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x00F83F40, bool, XmlNodeReaderNavigator_get_CreatedOnAttribute, (XmlNodeReaderNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x016FB780, bool, XmlNodeReaderNavigator_IsLocalNameEmpty, (XmlNodeReaderNavigator * __this, XmlNodeType__Enum nt, MethodInfo * method));
DO_APP_FUNC(0x016FB7D0, String *, XmlNodeReaderNavigator_get_Prefix, (XmlNodeReaderNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x016FB800, String *, XmlNodeReaderNavigator_get_Value, (XmlNodeReaderNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x016FBBA0, String *, XmlNodeReaderNavigator_get_BaseURI, (XmlNodeReaderNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x016FBBD0, XmlSpace__Enum, XmlNodeReaderNavigator_get_XmlSpace, (XmlNodeReaderNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x016FBC00, String *, XmlNodeReaderNavigator_get_XmlLang, (XmlNodeReaderNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x016FBC30, bool, XmlNodeReaderNavigator_get_IsEmptyElement, (XmlNodeReaderNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x016FBD70, bool, XmlNodeReaderNavigator_get_IsDefault, (XmlNodeReaderNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x016FBED0, IXmlSchemaInfo *, XmlNodeReaderNavigator_get_SchemaInfo, (XmlNodeReaderNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, XmlNameTable *, XmlNodeReaderNavigator_get_NameTable, (XmlNodeReaderNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x016FBF00, int32_t, XmlNodeReaderNavigator_get_AttributeCount, (XmlNodeReaderNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x016FC0A0, void, XmlNodeReaderNavigator_CheckIndexCondition, (XmlNodeReaderNavigator * __this, int32_t attributeIndex, MethodInfo * method));
DO_APP_FUNC(0x016FC170, void, XmlNodeReaderNavigator_InitDecAttr, (XmlNodeReaderNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x016FC400, String *, XmlNodeReaderNavigator_GetDeclarationAttr, (XmlNodeReaderNavigator * __this, XmlDeclaration * decl, String * name, MethodInfo * method));
DO_APP_FUNC(0x016FC560, String *, XmlNodeReaderNavigator_GetDeclarationAttr_1, (XmlNodeReaderNavigator * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x016FC5C0, int32_t, XmlNodeReaderNavigator_GetDecAttrInd, (XmlNodeReaderNavigator * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x016FC680, void, XmlNodeReaderNavigator_InitDocTypeAttr, (XmlNodeReaderNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x016FC820, String *, XmlNodeReaderNavigator_GetDocumentTypeAttr, (XmlNodeReaderNavigator * __this, XmlDocumentType * docType, String * name, MethodInfo * method));
DO_APP_FUNC(0x016FC930, String *, XmlNodeReaderNavigator_GetDocumentTypeAttr_1, (XmlNodeReaderNavigator * __this, int32_t i, MethodInfo * method));
DO_APP_FUNC(0x016FC990, int32_t, XmlNodeReaderNavigator_GetDocTypeAttrInd, (XmlNodeReaderNavigator * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x016FCA50, String *, XmlNodeReaderNavigator_GetAttributeFromElement, (XmlNodeReaderNavigator * __this, XmlElement * elem, String * name, MethodInfo * method));
DO_APP_FUNC(0x016FCAA0, String *, XmlNodeReaderNavigator_GetAttribute, (XmlNodeReaderNavigator * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x016FCBF0, String *, XmlNodeReaderNavigator_GetAttributeFromElement_1, (XmlNodeReaderNavigator * __this, XmlElement * elem, String * name, String * ns, MethodInfo * method));
DO_APP_FUNC(0x016FCC50, String *, XmlNodeReaderNavigator_GetAttribute_1, (XmlNodeReaderNavigator * __this, String * name, String * ns, MethodInfo * method));
DO_APP_FUNC(0x016FCDD0, String *, XmlNodeReaderNavigator_GetAttribute_2, (XmlNodeReaderNavigator * __this, int32_t attributeIndex, MethodInfo * method));
DO_APP_FUNC(0x016FD0A0, void, XmlNodeReaderNavigator_LogMove, (XmlNodeReaderNavigator * __this, int32_t level, MethodInfo * method));
DO_APP_FUNC(0x016FD0C0, void, XmlNodeReaderNavigator_RollBackMove, (XmlNodeReaderNavigator * __this, int32_t * level, MethodInfo * method));
DO_APP_FUNC(0x016FD0F0, bool, XmlNodeReaderNavigator_get_IsOnDeclOrDocType, (XmlNodeReaderNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x016FD130, void, XmlNodeReaderNavigator_ResetToAttribute, (XmlNodeReaderNavigator * __this, int32_t * level, MethodInfo * method));
DO_APP_FUNC(0x016FD1F0, void, XmlNodeReaderNavigator_ResetMove, (XmlNodeReaderNavigator * __this, int32_t * level, XmlNodeType__Enum * nt, MethodInfo * method));
DO_APP_FUNC(0x016FD3E0, bool, XmlNodeReaderNavigator_MoveToAttribute, (XmlNodeReaderNavigator * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x016FD480, bool, XmlNodeReaderNavigator_MoveToAttributeFromElement, (XmlNodeReaderNavigator * __this, XmlElement * elem, String * name, String * ns, MethodInfo * method));
DO_APP_FUNC(0x016FD570, bool, XmlNodeReaderNavigator_MoveToAttribute_1, (XmlNodeReaderNavigator * __this, String * name, String * namespaceURI, MethodInfo * method));
DO_APP_FUNC(0x016FD7F0, void, XmlNodeReaderNavigator_MoveToAttribute_2, (XmlNodeReaderNavigator * __this, int32_t attributeIndex, MethodInfo * method));
DO_APP_FUNC(0x016FD9D0, bool, XmlNodeReaderNavigator_MoveToNextAttribute, (XmlNodeReaderNavigator * __this, int32_t * level, MethodInfo * method));
DO_APP_FUNC(0x016FDBD0, bool, XmlNodeReaderNavigator_MoveToParent, (XmlNodeReaderNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x016FDC20, bool, XmlNodeReaderNavigator_MoveToFirstChild, (XmlNodeReaderNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x016FDC70, bool, XmlNodeReaderNavigator_MoveToNextSibling, (XmlNodeReaderNavigator * __this, XmlNode * node, MethodInfo * method));
DO_APP_FUNC(0x016FDCC0, bool, XmlNodeReaderNavigator_MoveToNext, (XmlNodeReaderNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x016FDD50, bool, XmlNodeReaderNavigator_MoveToElement, (XmlNodeReaderNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x016FDDD0, String *, XmlNodeReaderNavigator_LookupNamespace, (XmlNodeReaderNavigator * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x016FE0A0, String *, XmlNodeReaderNavigator_DefaultLookupNamespace, (XmlNodeReaderNavigator * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x016FE280, String *, XmlNodeReaderNavigator_LookupPrefix, (XmlNodeReaderNavigator * __this, String * namespaceName, MethodInfo * method));
DO_APP_FUNC(0x016FE740, IDictionary_2_System_String_System_String_ *, XmlNodeReaderNavigator_GetNamespacesInScope, (XmlNodeReaderNavigator * __this, XmlNamespaceScope__Enum scope, MethodInfo * method));
DO_APP_FUNC(0x016FED70, bool, XmlNodeReaderNavigator_ReadAttributeValue, (XmlNodeReaderNavigator * __this, int32_t * level, bool * bResolveEntity, XmlNodeType__Enum * nt, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, XmlDocument *, XmlNodeReaderNavigator_get_Document, (XmlNodeReaderNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x00110270, void, XmlNodeReaderNavigator_VirtualAttribute__ctor, (XmlNodeReaderNavigator_VirtualAttribute__Boxed * __this, String * name, String * value, MethodInfo * method));
DO_APP_FUNC(0x01DC7CF0, void, XmlNodeReader__ctor, (XmlNodeReader * __this, XmlNode * node, MethodInfo * method));
DO_APP_FUNC(0x01DC7EC0, bool, XmlNodeReader_IsInReadingStates, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC7ED0, XmlNodeType__Enum, XmlNodeReader_get_NodeType, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC7EE0, String *, XmlNodeReader_get_Name, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC7F90, String *, XmlNodeReader_get_LocalName, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC8150, String *, XmlNodeReader_get_NamespaceURI, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC8210, String *, XmlNodeReader_get_Prefix, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC82D0, String *, XmlNodeReader_get_Value, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A010, int32_t, XmlNodeReader_get_Depth, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC8380, String *, XmlNodeReader_get_BaseURI, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlNodeReader_get_CanResolveEntity, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC83C0, bool, XmlNodeReader_get_IsEmptyElement, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC83F0, bool, XmlNodeReader_get_IsDefault, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC8420, XmlSpace__Enum, XmlNodeReader_get_XmlSpace, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC8470, String *, XmlNodeReader_get_XmlLang, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC8530, IXmlSchemaInfo *, XmlNodeReader_get_SchemaInfo, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC8580, int32_t, XmlNodeReader_get_AttributeCount, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC85C0, String *, XmlNodeReader_GetAttribute, (XmlNodeReader * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01DC8750, String *, XmlNodeReader_GetAttribute_1, (XmlNodeReader * __this, String * name, String * namespaceURI, MethodInfo * method));
DO_APP_FUNC(0x01DC8830, String *, XmlNodeReader_GetAttribute_2, (XmlNodeReader * __this, int32_t attributeIndex, MethodInfo * method));
DO_APP_FUNC(0x01DC8900, bool, XmlNodeReader_MoveToAttribute, (XmlNodeReader * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01DC8AB0, void, XmlNodeReader_MoveToAttribute_1, (XmlNodeReader * __this, int32_t attributeIndex, MethodInfo * method));
DO_APP_FUNC(0x01DC8CD0, bool, XmlNodeReader_MoveToFirstAttribute, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC8E10, bool, XmlNodeReader_MoveToNextAttribute, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC8F70, bool, XmlNodeReader_MoveToElement, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC9120, bool, XmlNodeReader_Read, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC9130, bool, XmlNodeReader_Read_1, (XmlNodeReader * __this, bool fSkipChildren, MethodInfo * method));
DO_APP_FUNC(0x01DC9340, bool, XmlNodeReader_ReadNextNode, (XmlNodeReader * __this, bool fSkipChildren, MethodInfo * method));
DO_APP_FUNC(0x01DC9690, void, XmlNodeReader_SetEndOfFile, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC96B0, bool, XmlNodeReader_ReadAtZeroLevel, (XmlNodeReader * __this, bool fSkipChildren, MethodInfo * method));
DO_APP_FUNC(0x01DC9750, bool, XmlNodeReader_ReadForward, (XmlNodeReader * __this, bool fSkipChildren, MethodInfo * method));
DO_APP_FUNC(0x01DC9980, void, XmlNodeReader_ReSetReadingMarks, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC99B0, bool, XmlNodeReader_get_EOF, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC99C0, void, XmlNodeReader_Close, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, ReadState__Enum_1, XmlNodeReader_get_ReadState, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC99D0, void, XmlNodeReader_Skip, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC99E0, String *, XmlNodeReader_ReadString, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01703570, bool, XmlNodeReader_get_HasAttributes, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x00417880, XmlNameTable *, XmlNodeReader_get_NameTable, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC9AE0, String *, XmlNodeReader_LookupNamespace, (XmlNodeReader * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01DC9B20, void, XmlNodeReader_ResolveEntity, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC9BF0, bool, XmlNodeReader_ReadAttributeValue, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC9C40, void, XmlNodeReader_FinishReadBinary, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC9C70, IDictionary_2_System_String_System_String_ *, XmlNodeReader_System_Xml_IXmlNamespaceResolver_GetNamespacesInScope, (XmlNodeReader * __this, XmlNamespaceScope__Enum scope, MethodInfo * method));
DO_APP_FUNC(0x01DC9C90, String *, XmlNodeReader_System_Xml_IXmlNamespaceResolver_LookupPrefix, (XmlNodeReader * __this, String * namespaceName, MethodInfo * method));
DO_APP_FUNC(0x01DC9CB0, String *, XmlNodeReader_System_Xml_IXmlNamespaceResolver_LookupNamespace, (XmlNodeReader * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01DC9D30, IDtdInfo *, XmlNodeReader_get_DtdInfo, (XmlNodeReader * __this, MethodInfo * method));
DO_APP_FUNC(0x016FEF80, void, XmlNotation__ctor, (XmlNotation * __this, String * name, String * publicId, String * systemId, XmlDocument * doc, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, XmlNotation_get_Name, (XmlNotation * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, XmlNotation_get_LocalName, (XmlNotation * __this, MethodInfo * method));
DO_APP_FUNC(0x00ADC4A0, XmlNodeType__Enum, XmlNotation_get_NodeType, (XmlNotation * __this, MethodInfo * method));
DO_APP_FUNC(0x016FF020, XmlNode *, XmlNotation_CloneNode, (XmlNotation * __this, bool deep, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlNotation_get_IsReadOnly, (XmlNotation * __this, MethodInfo * method));
DO_APP_FUNC(0x016FF090, void, XmlNotation_set_InnerXml, (XmlNotation * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlNotation_WriteTo, (XmlNotation * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlNotation_WriteContentTo, (XmlNotation * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x016FF630, void, XmlProcessingInstruction__ctor, (XmlProcessingInstruction * __this, String * target, String * data, XmlDocument * doc, MethodInfo * method));
DO_APP_FUNC(0x016FF680, String *, XmlProcessingInstruction_get_Name, (XmlProcessingInstruction * __this, MethodInfo * method));
DO_APP_FUNC(0x015A1590, String *, XmlProcessingInstruction_get_LocalName, (XmlProcessingInstruction * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, XmlProcessingInstruction_get_Value, (XmlProcessingInstruction * __this, MethodInfo * method));
DO_APP_FUNC(0x016FF710, void, XmlProcessingInstruction_set_Value, (XmlProcessingInstruction * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x016FF720, void, XmlProcessingInstruction_set_Data, (XmlProcessingInstruction * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, XmlProcessingInstruction_get_InnerText, (XmlProcessingInstruction * __this, MethodInfo * method));
DO_APP_FUNC(0x016FF710, void, XmlProcessingInstruction_set_InnerText, (XmlProcessingInstruction * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x00AD8BA0, XmlNodeType__Enum, XmlProcessingInstruction_get_NodeType, (XmlProcessingInstruction * __this, MethodInfo * method));
DO_APP_FUNC(0x016FF7D0, XmlNode *, XmlProcessingInstruction_CloneNode, (XmlProcessingInstruction * __this, bool deep, MethodInfo * method));
DO_APP_FUNC(0x016FF820, void, XmlProcessingInstruction_WriteTo, (XmlProcessingInstruction * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlProcessingInstruction_WriteContentTo, (XmlProcessingInstruction * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x01707400, void, XmlSignificantWhitespace__ctor, (XmlSignificantWhitespace * __this, String * strData, XmlDocument * doc, MethodInfo * method));
DO_APP_FUNC(0x01707510, String *, XmlSignificantWhitespace_get_Name, (XmlSignificantWhitespace * __this, MethodInfo * method));
DO_APP_FUNC(0x01707510, String *, XmlSignificantWhitespace_get_LocalName, (XmlSignificantWhitespace * __this, MethodInfo * method));
DO_APP_FUNC(0x00C8F220, XmlNodeType__Enum, XmlSignificantWhitespace_get_NodeType, (XmlSignificantWhitespace * __this, MethodInfo * method));
DO_APP_FUNC(0x01707540, XmlNode *, XmlSignificantWhitespace_get_ParentNode, (XmlSignificantWhitespace * __this, MethodInfo * method));
DO_APP_FUNC(0x017075E0, XmlNode *, XmlSignificantWhitespace_CloneNode, (XmlSignificantWhitespace * __this, bool deep, MethodInfo * method));
DO_APP_FUNC(0x01707640, String *, XmlSignificantWhitespace_get_Value, (XmlSignificantWhitespace * __this, MethodInfo * method));
DO_APP_FUNC(0x01707660, void, XmlSignificantWhitespace_set_Value, (XmlSignificantWhitespace * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01707750, void, XmlSignificantWhitespace_WriteTo, (XmlSignificantWhitespace * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSignificantWhitespace_WriteContentTo, (XmlSignificantWhitespace * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlSignificantWhitespace_get_IsText, (XmlSignificantWhitespace * __this, MethodInfo * method));
DO_APP_FUNC(0x01714A50, void, XmlText__ctor, (XmlText * __this, String * strData, MethodInfo * method));
DO_APP_FUNC(0x01714A90, void, XmlText__ctor_1, (XmlText * __this, String * strData, XmlDocument * doc, MethodInfo * method));
DO_APP_FUNC(0x01714AD0, String *, XmlText_get_Name, (XmlText * __this, MethodInfo * method));
DO_APP_FUNC(0x01714AD0, String *, XmlText_get_LocalName, (XmlText * __this, MethodInfo * method));
DO_APP_FUNC(0x00420230, XmlNodeType__Enum, XmlText_get_NodeType, (XmlText * __this, MethodInfo * method));
DO_APP_FUNC(0x01714B00, XmlNode *, XmlText_get_ParentNode, (XmlText * __this, MethodInfo * method));
DO_APP_FUNC(0x01714BA0, XmlNode *, XmlText_CloneNode, (XmlText * __this, bool deep, MethodInfo * method));
DO_APP_FUNC(0x01707640, String *, XmlText_get_Value, (XmlText * __this, MethodInfo * method));
DO_APP_FUNC(0x01714C00, void, XmlText_set_Value, (XmlText * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01707750, void, XmlText_WriteTo, (XmlText * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlText_WriteContentTo, (XmlText * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlText_get_IsText, (XmlText * __this, MethodInfo * method));
DO_APP_FUNC(0x0195AF70, void, XmlUnspecifiedAttribute__ctor, (XmlUnspecifiedAttribute * __this, String * prefix, String * localName, String * namespaceURI, XmlDocument * doc, MethodInfo * method));
DO_APP_FUNC(0x004F4CE0, bool, XmlUnspecifiedAttribute_get_Specified, (XmlUnspecifiedAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC3A30, XmlNode *, XmlUnspecifiedAttribute_CloneNode, (XmlUnspecifiedAttribute * __this, bool deep, MethodInfo * method));
DO_APP_FUNC(0x01FC3BD0, void, XmlUnspecifiedAttribute_set_InnerText, (XmlUnspecifiedAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01FC3C50, XmlNode *, XmlUnspecifiedAttribute_InsertBefore, (XmlUnspecifiedAttribute * __this, XmlNode * newChild, XmlNode * refChild, MethodInfo * method));
DO_APP_FUNC(0x01FC3CE0, XmlNode *, XmlUnspecifiedAttribute_InsertAfter, (XmlUnspecifiedAttribute * __this, XmlNode * newChild, XmlNode * refChild, MethodInfo * method));
DO_APP_FUNC(0x01FC3D70, XmlNode *, XmlUnspecifiedAttribute_RemoveChild, (XmlUnspecifiedAttribute * __this, XmlNode * oldChild, MethodInfo * method));
DO_APP_FUNC(0x01FC3E00, XmlNode *, XmlUnspecifiedAttribute_AppendChild, (XmlUnspecifiedAttribute * __this, XmlNode * newChild, MethodInfo * method));
DO_APP_FUNC(0x01FC3E90, void, XmlUnspecifiedAttribute_WriteTo, (XmlUnspecifiedAttribute * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x004F4CF0, void, XmlUnspecifiedAttribute_SetSpecified, (XmlUnspecifiedAttribute * __this, bool f, MethodInfo * method));
DO_APP_FUNC(0x01FD5270, void, XmlWhitespace__ctor, (XmlWhitespace * __this, String * strData, XmlDocument * doc, MethodInfo * method));
DO_APP_FUNC(0x01FD5380, String *, XmlWhitespace_get_Name, (XmlWhitespace * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD5380, String *, XmlWhitespace_get_LocalName, (XmlWhitespace * __this, MethodInfo * method));
DO_APP_FUNC(0x004AB2B0, XmlNodeType__Enum, XmlWhitespace_get_NodeType, (XmlWhitespace * __this, MethodInfo * method));
DO_APP_FUNC(0x01707540, XmlNode *, XmlWhitespace_get_ParentNode, (XmlWhitespace * __this, MethodInfo * method));
DO_APP_FUNC(0x01707640, String *, XmlWhitespace_get_Value, (XmlWhitespace * __this, MethodInfo * method));
DO_APP_FUNC(0x01FD53B0, void, XmlWhitespace_set_Value, (XmlWhitespace * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01FD54A0, XmlNode *, XmlWhitespace_CloneNode, (XmlWhitespace * __this, bool deep, MethodInfo * method));
DO_APP_FUNC(0x01FD5500, void, XmlWhitespace_WriteTo, (XmlWhitespace * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlWhitespace_WriteContentTo, (XmlWhitespace * __this, XmlWriter * w, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlWhitespace_get_IsText, (XmlWhitespace * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, EmptyEnumerator_System_Collections_IEnumerator_MoveNext, (EmptyEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, EmptyEnumerator_System_Collections_IEnumerator_Reset, (EmptyEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x021F8150, Object *, EmptyEnumerator_System_Collections_IEnumerator_get_Current, (EmptyEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, EmptyEnumerator__ctor, (EmptyEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x021F81C0, void, HWStack__ctor, (HWStack * __this, int32_t GrowthRate, MethodInfo * method));
DO_APP_FUNC(0x021F8270, void, HWStack__ctor_1, (HWStack * __this, int32_t GrowthRate, int32_t limit, MethodInfo * method));
DO_APP_FUNC(0x021F8320, Object *, HWStack_Push, (HWStack * __this, MethodInfo * method));
DO_APP_FUNC(0x021F8480, Object *, HWStack_Pop, (HWStack * __this, MethodInfo * method));
DO_APP_FUNC(0x021F84D0, Object *, HWStack_Peek, (HWStack * __this, MethodInfo * method));
DO_APP_FUNC(0x021F8520, void, HWStack_AddToTop, (HWStack * __this, Object * o, MethodInfo * method));
DO_APP_FUNC(0x021F85B0, Object *, HWStack_get_Item, (HWStack * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x021F8690, void, HWStack_set_Item, (HWStack * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0052A010, int32_t, HWStack_get_Length, (HWStack * __this, MethodInfo * method));
DO_APP_FUNC(0x021F87A0, void, HWStack__ctor_2, (HWStack * __this, Object__Array * stack, int32_t growthRate, int32_t used, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x021F87C0, Object *, HWStack_Clone, (HWStack * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, PositionInfo_HasLineInfo, (PositionInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, int32_t, PositionInfo_get_LineNumber, (PositionInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, int32_t, PositionInfo_get_LinePosition, (PositionInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0199E420, PositionInfo *, PositionInfo_GetPositionInfo, (Object * o, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, PositionInfo__ctor, (PositionInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, ReaderPositionInfo__ctor, (ReaderPositionInfo * __this, IXmlLineInfo * lineInfo, MethodInfo * method));
DO_APP_FUNC(0x0199F910, bool, ReaderPositionInfo_HasLineInfo, (ReaderPositionInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0199F9A0, int32_t, ReaderPositionInfo_get_LineNumber, (ReaderPositionInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0199FA30, int32_t, ReaderPositionInfo_get_LinePosition, (ReaderPositionInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00115520, void, LineInfo__ctor, (LineInfo__Boxed * __this, int32_t lineNo, int32_t linePos, MethodInfo * method));
DO_APP_FUNC(0x00115520, void, LineInfo_Set, (LineInfo__Boxed * __this, int32_t lineNo, int32_t linePos, MethodInfo * method));
DO_APP_FUNC(0x0199D9A0, void, NameTable__ctor, (NameTable * __this, MethodInfo * method));
DO_APP_FUNC(0x0199DA70, String *, NameTable_Add, (NameTable * __this, String * key, MethodInfo * method));
DO_APP_FUNC(0x0199DC20, String *, NameTable_Add_1, (NameTable * __this, Char__Array * key, int32_t start, int32_t len, MethodInfo * method));
DO_APP_FUNC(0x0199DE20, String *, NameTable_Get, (NameTable * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0199DFC0, String *, NameTable_AddEntry, (NameTable * __this, String * str, int32_t hashCode, MethodInfo * method));
DO_APP_FUNC(0x0199E1D0, void, NameTable_Grow, (NameTable * __this, MethodInfo * method));
DO_APP_FUNC(0x0199E370, bool, NameTable_TextEquals, (String * str1, Char__Array * str2, int32_t str2Start, int32_t str2Length, MethodInfo * method));
DO_APP_FUNC(0x0199E410, void, NameTable_Entry__ctor, (NameTable_Entry * __this, String * str, int32_t hashCode, NameTable_Entry * next, MethodInfo * method));
DO_APP_FUNC(0x015F8190, bool, Ref_Equal, (String * strA, String * strB, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DtdParser__cctor, (MethodInfo * method));
DO_APP_FUNC(0x021E9AD0, void, DtdParser__ctor, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021E9BE0, IDtdParser *, DtdParser_Create, (MethodInfo * method));
DO_APP_FUNC(0x021E9E00, void, DtdParser_Initialize, (DtdParser * __this, IDtdParserAdapter * readerAdapter, MethodInfo * method));
DO_APP_FUNC(0x021EA130, void, DtdParser_InitializeFreeFloatingDtd, (DtdParser * __this, String * baseUri, String * docTypeName, String * publicId, String * systemId, String * internalSubset, IDtdParserAdapter * adapter, MethodInfo * method));
DO_APP_FUNC(0x021EA620, IDtdInfo *, DtdParser_System_Xml_IDtdParser_ParseInternalDtd, (DtdParser * __this, IDtdParserAdapter * adapter, bool saveInternalSubset, MethodInfo * method));
DO_APP_FUNC(0x021EA660, IDtdInfo *, DtdParser_System_Xml_IDtdParser_ParseFreeFloatingDtd, (DtdParser * __this, String * baseUri, String * docTypeName, String * publicId, String * systemId, String * internalSubset, IDtdParserAdapter * adapter, MethodInfo * method));
DO_APP_FUNC(0x021EA6B0, bool, DtdParser_get_ParsingInternalSubset, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021EA6C0, bool, DtdParser_get_IgnoreEntityReferences, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021EA6D0, bool, DtdParser_get_SaveInternalSubsetValue, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021EA780, bool, DtdParser_get_ParsingTopLevelMarkup, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x00EEDBB0, bool, DtdParser_get_SupportNamespaces, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x003FCB00, bool, DtdParser_get_Normalize, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021EA7A0, void, DtdParser_Parse, (DtdParser * __this, bool saveInternalSubset, MethodInfo * method));
DO_APP_FUNC(0x021EAAF0, void, DtdParser_ParseInDocumentDtd, (DtdParser * __this, bool saveInternalSubset, MethodInfo * method));
DO_APP_FUNC(0x021EAD50, void, DtdParser_ParseFreeFloatingDtd, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021EADB0, void, DtdParser_ParseInternalSubset, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021EADC0, void, DtdParser_ParseExternalSubset, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021EAEE0, void, DtdParser_ParseSubset, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021EB360, void, DtdParser_ParseAttlistDecl, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021EBB80, void, DtdParser_ParseAttlistType, (DtdParser * __this, SchemaAttDef * attrDef, SchemaElementDecl * elementDecl, bool ignoreErrors, MethodInfo * method));
DO_APP_FUNC(0x021EC310, void, DtdParser_ParseAttlistDefault, (DtdParser * __this, SchemaAttDef * attrDef, bool ignoreErrors, MethodInfo * method));
DO_APP_FUNC(0x021EC610, void, DtdParser_ParseElementDecl, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021ECD30, void, DtdParser_ParseElementOnlyContent, (DtdParser * __this, ParticleContentValidator * pcv, int32_t startParenEntityId, MethodInfo * method));
DO_APP_FUNC(0x021ED3A0, void, DtdParser_ParseHowMany, (DtdParser * __this, ParticleContentValidator * pcv, MethodInfo * method));
DO_APP_FUNC(0x021ED420, void, DtdParser_ParseElementMixedContent, (DtdParser * __this, ParticleContentValidator * pcv, int32_t startParenEntityId, MethodInfo * method));
DO_APP_FUNC(0x021ED780, void, DtdParser_ParseEntityDecl, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021EDC60, void, DtdParser_ParseNotationDecl, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021EDF90, void, DtdParser_AddUndeclaredNotation, (DtdParser * __this, String * notationName, MethodInfo * method));
DO_APP_FUNC(0x021EE2F0, void, DtdParser_ParseComment, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021EE490, void, DtdParser_ParsePI, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021EE590, void, DtdParser_ParseCondSection, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021EE810, void, DtdParser_ParseExternalId, (DtdParser * __this, DtdParser_Token__Enum idTokenType, DtdParser_Token__Enum declType, String * * publicId, String * * systemId, MethodInfo * method));
DO_APP_FUNC(0x021EED30, DtdParser_Token__Enum, DtdParser_GetToken, (DtdParser * __this, bool needWhiteSpace, MethodInfo * method));
DO_APP_FUNC(0x021F03E0, DtdParser_Token__Enum, DtdParser_ScanSubsetContent, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F0CD0, DtdParser_Token__Enum, DtdParser_ScanNameExpected, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F0D00, DtdParser_Token__Enum, DtdParser_ScanQNameExpected, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F0D30, DtdParser_Token__Enum, DtdParser_ScanNmtokenExpected, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F0D60, DtdParser_Token__Enum, DtdParser_ScanDoctype1, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F0F00, DtdParser_Token__Enum, DtdParser_ScanDoctype2, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F1010, DtdParser_Token__Enum, DtdParser_ScanClosingTag, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F10F0, DtdParser_Token__Enum, DtdParser_ScanElement1, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F1380, DtdParser_Token__Enum, DtdParser_ScanElement2, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F15B0, DtdParser_Token__Enum, DtdParser_ScanElement3, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F1640, DtdParser_Token__Enum, DtdParser_ScanElement4, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F1760, DtdParser_Token__Enum, DtdParser_ScanElement5, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F18C0, DtdParser_Token__Enum, DtdParser_ScanElement6, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F19E0, DtdParser_Token__Enum, DtdParser_ScanElement7, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F1A40, DtdParser_Token__Enum, DtdParser_ScanAttlist1, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F1B60, DtdParser_Token__Enum, DtdParser_ScanAttlist2, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F2490, DtdParser_Token__Enum, DtdParser_ScanAttlist3, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F2580, DtdParser_Token__Enum, DtdParser_ScanAttlist4, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F26A0, DtdParser_Token__Enum, DtdParser_ScanAttlist5, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F27C0, DtdParser_Token__Enum, DtdParser_ScanAttlist6, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F2CA0, DtdParser_Token__Enum, DtdParser_ScanAttlist7, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F2DA0, DtdParser_Token__Enum, DtdParser_ScanLiteral, (DtdParser * __this, DtdParser_LiteralType__Enum literalType, MethodInfo * method));
DO_APP_FUNC(0x021F3DD0, XmlQualifiedName *, DtdParser_ScanEntityName, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F3F20, DtdParser_Token__Enum, DtdParser_ScanNotation1, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F4060, DtdParser_Token__Enum, DtdParser_ScanSystemId, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F4160, DtdParser_Token__Enum, DtdParser_ScanEntity1, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F41E0, DtdParser_Token__Enum, DtdParser_ScanEntity2, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F4360, DtdParser_Token__Enum, DtdParser_ScanEntity3, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F44C0, DtdParser_Token__Enum, DtdParser_ScanPublicId1, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F45C0, DtdParser_Token__Enum, DtdParser_ScanPublicId2, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F4640, DtdParser_Token__Enum, DtdParser_ScanCondSection1, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F4A70, DtdParser_Token__Enum, DtdParser_ScanCondSection2, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F4B50, DtdParser_Token__Enum, DtdParser_ScanCondSection3, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F5170, void, DtdParser_ScanName, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F5180, void, DtdParser_ScanQName, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F5190, void, DtdParser_ScanQName_1, (DtdParser * __this, bool isQName, MethodInfo * method));
DO_APP_FUNC(0x021F54B0, bool, DtdParser_ReadDataInName, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F5500, void, DtdParser_ScanNmtoken, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F56E0, bool, DtdParser_EatPublicKeyword, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F5840, bool, DtdParser_EatSystemKeyword, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F59A0, XmlQualifiedName *, DtdParser_GetNameQualified, (DtdParser * __this, bool canHavePrefix, MethodInfo * method));
DO_APP_FUNC(0x021F5CD0, String *, DtdParser_GetNameString, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F5CD0, String *, DtdParser_GetNmtokenString, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F5D00, String *, DtdParser_GetValue, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F5D70, String *, DtdParser_GetValueWithStrippedSpaces, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F5E70, int32_t, DtdParser_ReadData, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F5F30, void, DtdParser_LoadParsingBuffer, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F6080, void, DtdParser_SaveParsingBuffer, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F6090, void, DtdParser_SaveParsingBuffer_1, (DtdParser * __this, int32_t internalSubsetValueEndPos, MethodInfo * method));
DO_APP_FUNC(0x021F6190, bool, DtdParser_HandleEntityReference, (DtdParser * __this, bool paramEntity, bool inLiteral, bool inAttribute, MethodInfo * method));
DO_APP_FUNC(0x021F6200, bool, DtdParser_HandleEntityReference_1, (DtdParser * __this, XmlQualifiedName * entityName, bool paramEntity, bool inLiteral, bool inAttribute, MethodInfo * method));
DO_APP_FUNC(0x021F6450, bool, DtdParser_HandleEntityEnd, (DtdParser * __this, bool inLiteral, MethodInfo * method));
DO_APP_FUNC(0x021F65E0, SchemaEntity *, DtdParser_VerifyEntityReference, (DtdParser * __this, XmlQualifiedName * entityName, bool paramEntity, bool mustBeDeclared, bool inAttribute, MethodInfo * method));
DO_APP_FUNC(0x021F6990, void, DtdParser_SendValidationEvent, (DtdParser * __this, int32_t pos, XmlSeverityType__Enum severity, String * code, String * arg, MethodInfo * method));
DO_APP_FUNC(0x021F6B60, void, DtdParser_SendValidationEvent_1, (DtdParser * __this, XmlSeverityType__Enum severity, String * code, String * arg, MethodInfo * method));
DO_APP_FUNC(0x021F6D20, void, DtdParser_SendValidationEvent_2, (DtdParser * __this, XmlSeverityType__Enum severity, XmlSchemaException * e, MethodInfo * method));
DO_APP_FUNC(0x021F6DE0, bool, DtdParser_IsAttributeValueType, (DtdParser * __this, DtdParser_Token__Enum token, MethodInfo * method));
DO_APP_FUNC(0x021F6DF0, int32_t, DtdParser_get_LineNo, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F6E80, int32_t, DtdParser_get_LinePos, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F6F30, String *, DtdParser_get_BaseUriStr, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F7010, void, DtdParser_OnUnexpectedError, (DtdParser * __this, MethodInfo * method));
DO_APP_FUNC(0x021F70A0, void, DtdParser_Throw, (DtdParser * __this, int32_t curPos, String * res, MethodInfo * method));
DO_APP_FUNC(0x021F7160, void, DtdParser_Throw_1, (DtdParser * __this, int32_t curPos, String * res, String * arg, MethodInfo * method));
DO_APP_FUNC(0x021F73F0, void, DtdParser_Throw_2, (DtdParser * __this, int32_t curPos, String * res, String__Array * args, MethodInfo * method));
DO_APP_FUNC(0x021F7690, void, DtdParser_Throw_3, (DtdParser * __this, String * res, String * arg, int32_t lineNo, int32_t linePos, MethodInfo * method));
DO_APP_FUNC(0x021F78A0, void, DtdParser_ThrowInvalidChar, (DtdParser * __this, int32_t pos, String * data, int32_t invCharPos, MethodInfo * method));
DO_APP_FUNC(0x021F79A0, void, DtdParser_ThrowInvalidChar_1, (DtdParser * __this, Char__Array * data, int32_t length, int32_t invCharPos, MethodInfo * method));
DO_APP_FUNC(0x021F7A70, void, DtdParser_ThrowUnexpectedToken, (DtdParser * __this, int32_t pos, String * expectedToken, MethodInfo * method));
DO_APP_FUNC(0x021F7A90, void, DtdParser_ThrowUnexpectedToken_1, (DtdParser * __this, int32_t pos, String * expectedToken1, String * expectedToken2, MethodInfo * method));
DO_APP_FUNC(0x021F7D40, String *, DtdParser_ParseUnexpectedToken, (DtdParser * __this, int32_t startPos, MethodInfo * method));
DO_APP_FUNC(0x021F7E60, String *, DtdParser_StripSpaces, (String * value, MethodInfo * method));
DO_APP_FUNC(0x021F8130, void, DtdParser_UndeclaredNotation__ctor, (DtdParser_UndeclaredNotation * __this, String * name, int32_t lineNo, int32_t linePos, MethodInfo * method));
DO_APP_FUNC(0x021F8120, void, DtdParser_ParseElementOnlyContent_LocalFrame__ctor, (DtdParser_ParseElementOnlyContent_LocalFrame * __this, int32_t startParentEntityIdParam, MethodInfo * method));
DO_APP_FUNC(0x019536B0, int32_t, ValidateNames_ParseNmtoken, (String * s, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x019537D0, int32_t, ValidateNames_ParseNmtokenNoNamespaces, (String * s, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x01953900, int32_t, ValidateNames_ParseNameNoNamespaces, (String * s, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x01953AC0, bool, ValidateNames_IsNameNoNamespaces, (String * s, MethodInfo * method));
DO_APP_FUNC(0x01953B80, int32_t, ValidateNames_ParseNCName, (String * s, int32_t offset, MethodInfo * method));
DO_APP_FUNC(0x01953D20, int32_t, ValidateNames_ParseNCName_1, (String * s, MethodInfo * method));
DO_APP_FUNC(0x01953DC0, int32_t, ValidateNames_ParseQName, (String * s, int32_t offset, int32_t * colonOffset, MethodInfo * method));
DO_APP_FUNC(0x01953EF0, void, ValidateNames_ParseQNameThrow, (String * s, String * * prefix, String * * localName, MethodInfo * method));
DO_APP_FUNC(0x01954040, void, ValidateNames_ThrowInvalidName, (String * s, int32_t offsetStartChar, int32_t offsetBadChar, MethodInfo * method));
DO_APP_FUNC(0x01954260, Exception *, ValidateNames_GetInvalidNameException, (String * s, int32_t offsetStartChar, int32_t offsetBadChar, MethodInfo * method));
DO_APP_FUNC(0x01954690, void, ValidateNames_SplitQName, (String * name, String * * prefix, String * * lname, MethodInfo * method));
DO_APP_FUNC(0x01954800, void, ValidateNames__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0195F1F0, Object *, XmlCharType_get_StaticLock, (MethodInfo * method));
DO_APP_FUNC(0x0195F360, void, XmlCharType_InitInstance, (MethodInfo * method));
DO_APP_FUNC(0x0195F6C0, void, XmlCharType_SetProperties, (String * ranges, uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, XmlCharType__ctor, (XmlCharType__Boxed * __this, Byte__Array * charProperties, MethodInfo * method));
DO_APP_FUNC(0x0195F7E0, XmlCharType, XmlCharType_get_Instance, (MethodInfo * method));
DO_APP_FUNC(0x00153570, bool, XmlCharType_IsWhiteSpace, (XmlCharType__Boxed * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x001535B0, bool, XmlCharType_IsNCNameSingleChar, (XmlCharType__Boxed * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x001535F0, bool, XmlCharType_IsStartNCNameSingleChar, (XmlCharType__Boxed * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x00153630, bool, XmlCharType_IsNameSingleChar, (XmlCharType__Boxed * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x00153680, bool, XmlCharType_IsCharData, (XmlCharType__Boxed * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x001536C0, bool, XmlCharType_IsPubidChar, (XmlCharType__Boxed * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x001536D0, bool, XmlCharType_IsTextChar, (XmlCharType__Boxed * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x00153710, bool, XmlCharType_IsLetter, (XmlCharType__Boxed * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x00153750, bool, XmlCharType_IsNCNameCharXml4e, (XmlCharType__Boxed * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x00153790, bool, XmlCharType_IsStartNCNameCharXml4e, (XmlCharType__Boxed * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x001537E0, bool, XmlCharType_IsNameCharXml4e, (XmlCharType__Boxed * __this, uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x0195FA30, bool, XmlCharType_IsDigit, (uint16_t ch, MethodInfo * method));
DO_APP_FUNC(0x0195FA40, bool, XmlCharType_IsHighSurrogate, (int32_t ch, MethodInfo * method));
DO_APP_FUNC(0x0195FA50, bool, XmlCharType_IsLowSurrogate, (int32_t ch, MethodInfo * method));
DO_APP_FUNC(0x0195FA60, bool, XmlCharType_IsSurrogate, (int32_t ch, MethodInfo * method));
DO_APP_FUNC(0x0195FA70, int32_t, XmlCharType_CombineSurrogateChar, (int32_t lowChar, int32_t highChar, MethodInfo * method));
DO_APP_FUNC(0x0195FA90, void, XmlCharType_SplitSurrogateChar, (int32_t combinedChar, uint16_t * lowChar, uint16_t * highChar, MethodInfo * method));
DO_APP_FUNC(0x00153830, bool, XmlCharType_IsOnlyWhitespace, (XmlCharType__Boxed * __this, String * str, MethodInfo * method));
DO_APP_FUNC(0x00153850, int32_t, XmlCharType_IsOnlyWhitespaceWithPos, (XmlCharType__Boxed * __this, String * str, MethodInfo * method));
DO_APP_FUNC(0x00153860, int32_t, XmlCharType_IsOnlyCharData, (XmlCharType__Boxed * __this, String * str, MethodInfo * method));
DO_APP_FUNC(0x0195FC30, bool, XmlCharType_IsOnlyDigits, (String * str, int32_t startPos, int32_t len, MethodInfo * method));
DO_APP_FUNC(0x00153870, int32_t, XmlCharType_IsPublicId, (XmlCharType__Boxed * __this, String * str, MethodInfo * method));
DO_APP_FUNC(0x0195FD00, bool, XmlCharType_InRange, (int32_t value, int32_t start, int32_t end, MethodInfo * method));
DO_APP_FUNC(0x01960460, String *, XmlComplianceUtil_NonCDataNormalize, (String * value, MethodInfo * method));
DO_APP_FUNC(0x019607D0, String *, XmlComplianceUtil_CDataNormalize, (String * value, MethodInfo * method));
DO_APP_FUNC(0x01960BB0, String *, XmlConvert_EncodeName, (String * name, MethodInfo * method));
DO_APP_FUNC(0x01960C50, String *, XmlConvert_EncodeLocalName, (String * name, MethodInfo * method));
DO_APP_FUNC(0x01960CF0, String *, XmlConvert_DecodeName, (String * name, MethodInfo * method));
DO_APP_FUNC(0x019616B0, String *, XmlConvert_EncodeName_1, (String * name, bool first, bool local, MethodInfo * method));
DO_APP_FUNC(0x01962170, int32_t, XmlConvert_FromHex, (uint16_t digit, MethodInfo * method));
DO_APP_FUNC(0x019621A0, Byte__Array *, XmlConvert_FromBinHexString, (String * s, MethodInfo * method));
DO_APP_FUNC(0x01962240, Byte__Array *, XmlConvert_FromBinHexString_1, (String * s, bool allowOddCount, MethodInfo * method));
DO_APP_FUNC(0x01962310, String *, XmlConvert_ToBinHexString, (Byte__Array * inArray, MethodInfo * method));
DO_APP_FUNC(0x019623D0, String *, XmlConvert_VerifyName, (String * name, MethodInfo * method));
DO_APP_FUNC(0x01962550, Exception *, XmlConvert_TryVerifyName, (String * name, MethodInfo * method));
DO_APP_FUNC(0x01962830, String *, XmlConvert_VerifyQName, (String * name, ExceptionType__Enum exceptionType, MethodInfo * method));
DO_APP_FUNC(0x019629E0, String *, XmlConvert_VerifyNCName, (String * name, MethodInfo * method));
DO_APP_FUNC(0x01962BD0, String *, XmlConvert_VerifyNCName_1, (String * name, ExceptionType__Enum exceptionType, MethodInfo * method));
DO_APP_FUNC(0x01962D50, Exception *, XmlConvert_TryVerifyNCName, (String * name, MethodInfo * method));
DO_APP_FUNC(0x01962E50, String *, XmlConvert_VerifyTOKEN, (String * token, MethodInfo * method));
DO_APP_FUNC(0x01962FC0, Exception *, XmlConvert_TryVerifyTOKEN, (String * token, MethodInfo * method));
DO_APP_FUNC(0x019631E0, Exception *, XmlConvert_TryVerifyNMTOKEN, (String * name, MethodInfo * method));
DO_APP_FUNC(0x019635A0, Exception *, XmlConvert_TryVerifyNormalizedString, (String * str, MethodInfo * method));
DO_APP_FUNC(0x01963760, String *, XmlConvert_ToString, (bool value, MethodInfo * method));
DO_APP_FUNC(0x019637F0, String *, XmlConvert_ToString_1, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x01963810, String *, XmlConvert_ToString_2, (Decimal value, MethodInfo * method));
DO_APP_FUNC(0x01963850, String *, XmlConvert_ToString_3, (int8_t value, MethodInfo * method));
DO_APP_FUNC(0x01963880, String *, XmlConvert_ToString_4, (int16_t value, MethodInfo * method));
DO_APP_FUNC(0x019638B0, String *, XmlConvert_ToString_5, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x019638E0, String *, XmlConvert_ToString_6, (int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01963910, String *, XmlConvert_ToString_7, (uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x01963940, String *, XmlConvert_ToString_8, (uint16_t value, MethodInfo * method));
DO_APP_FUNC(0x01963970, String *, XmlConvert_ToString_9, (uint32_t value, MethodInfo * method));
DO_APP_FUNC(0x019639A0, String *, XmlConvert_ToString_10, (uint64_t value, MethodInfo * method));
DO_APP_FUNC(0x019639D0, String *, XmlConvert_ToString_11, (float value, MethodInfo * method));
DO_APP_FUNC(0x01963B00, String *, XmlConvert_ToString_12, (double value, MethodInfo * method));
DO_APP_FUNC(0x01963C60, String *, XmlConvert_ToString_13, (TimeSpan value, MethodInfo * method));
DO_APP_FUNC(0x01963CC0, String *, XmlConvert_ToString_14, (DateTime value, String * format, MethodInfo * method));
DO_APP_FUNC(0x01963D70, String *, XmlConvert_ToString_15, (DateTime value, XmlDateTimeSerializationMode__Enum dateTimeOption, MethodInfo * method));
DO_APP_FUNC(0x01963F70, String *, XmlConvert_ToString_16, (DateTimeOffset value, MethodInfo * method));
DO_APP_FUNC(0x01963FB0, String *, XmlConvert_ToString_17, (Guid value, MethodInfo * method));
DO_APP_FUNC(0x01963FC0, bool, XmlConvert_ToBoolean, (String * s, MethodInfo * method));
DO_APP_FUNC(0x019641E0, Exception *, XmlConvert_TryToBoolean, (String * s, bool * result, MethodInfo * method));
DO_APP_FUNC(0x01964500, uint16_t, XmlConvert_ToChar, (String * s, MethodInfo * method));
DO_APP_FUNC(0x01964610, Exception *, XmlConvert_TryToChar, (String * s, uint16_t * result, MethodInfo * method));
DO_APP_FUNC(0x019648A0, Decimal, XmlConvert_ToDecimal, (String * s, MethodInfo * method));
DO_APP_FUNC(0x01964990, Exception *, XmlConvert_TryToDecimal, (String * s, Decimal * result, MethodInfo * method));
DO_APP_FUNC(0x01964C30, Decimal, XmlConvert_ToInteger, (String * s, MethodInfo * method));
DO_APP_FUNC(0x01964D20, Exception *, XmlConvert_TryToInteger, (String * s, Decimal * result, MethodInfo * method));
DO_APP_FUNC(0x01964FC0, int8_t, XmlConvert_ToSByte, (String * s, MethodInfo * method));
DO_APP_FUNC(0x01965010, Exception *, XmlConvert_TryToSByte, (String * s, int8_t * result, MethodInfo * method));
DO_APP_FUNC(0x019652B0, int16_t, XmlConvert_ToInt16, (String * s, MethodInfo * method));
DO_APP_FUNC(0x01965300, Exception *, XmlConvert_TryToInt16, (String * s, int16_t * result, MethodInfo * method));
DO_APP_FUNC(0x019655A0, int32_t, XmlConvert_ToInt32, (String * s, MethodInfo * method));
DO_APP_FUNC(0x019655F0, Exception *, XmlConvert_TryToInt32, (String * s, int32_t * result, MethodInfo * method));
DO_APP_FUNC(0x01965870, int64_t, XmlConvert_ToInt64, (String * s, MethodInfo * method));
DO_APP_FUNC(0x019658C0, Exception *, XmlConvert_TryToInt64, (String * s, int64_t * result, MethodInfo * method));
DO_APP_FUNC(0x01965B40, uint8_t, XmlConvert_ToByte, (String * s, MethodInfo * method));
DO_APP_FUNC(0x01965B90, Exception *, XmlConvert_TryToByte, (String * s, uint8_t * result, MethodInfo * method));
DO_APP_FUNC(0x01965E00, uint16_t, XmlConvert_ToUInt16, (String * s, MethodInfo * method));
DO_APP_FUNC(0x01965E50, Exception *, XmlConvert_TryToUInt16, (String * s, uint16_t * result, MethodInfo * method));
DO_APP_FUNC(0x019660C0, uint32_t, XmlConvert_ToUInt32, (String * s, MethodInfo * method));
DO_APP_FUNC(0x01966110, Exception *, XmlConvert_TryToUInt32, (String * s, uint32_t * result, MethodInfo * method));
DO_APP_FUNC(0x01966390, uint64_t, XmlConvert_ToUInt64, (String * s, MethodInfo * method));
DO_APP_FUNC(0x019663E0, Exception *, XmlConvert_TryToUInt64, (String * s, uint64_t * result, MethodInfo * method));
DO_APP_FUNC(0x01966660, float, XmlConvert_ToSingle, (String * s, MethodInfo * method));
DO_APP_FUNC(0x01966800, Exception *, XmlConvert_TryToSingle, (String * s, float * result, MethodInfo * method));
DO_APP_FUNC(0x01966B80, double, XmlConvert_ToDouble, (String * s, MethodInfo * method));
DO_APP_FUNC(0x01966D30, Exception *, XmlConvert_TryToDouble, (String * s, double * result, MethodInfo * method));
DO_APP_FUNC(0x019670C0, double, XmlConvert_ToXPathDouble, (Object * o, MethodInfo * method));
DO_APP_FUNC(0x01967320, TimeSpan, XmlConvert_ToTimeSpan, (String * s, MethodInfo * method));
DO_APP_FUNC(0x019674A0, Exception *, XmlConvert_TryToTimeSpan, (String * s, TimeSpan * result, MethodInfo * method));
DO_APP_FUNC(0x019675B0, String__Array *, XmlConvert_get_AllDateTimeFormats, (MethodInfo * method));
DO_APP_FUNC(0x019676C0, void, XmlConvert_CreateAllDateTimeFormats, (MethodInfo * method));
DO_APP_FUNC(0x01968070, DateTime, XmlConvert_ToDateTime, (String * s, MethodInfo * method));
DO_APP_FUNC(0x019682D0, DateTime, XmlConvert_ToDateTime_1, (String * s, String__Array * formats, MethodInfo * method));
DO_APP_FUNC(0x019683C0, DateTime, XmlConvert_ToDateTime_2, (String * s, XmlDateTimeSerializationMode__Enum dateTimeOption, MethodInfo * method));
DO_APP_FUNC(0x01968600, DateTimeOffset, XmlConvert_ToDateTimeOffset, (String * s, MethodInfo * method));
DO_APP_FUNC(0x01968720, Guid, XmlConvert_ToGuid, (String * s, MethodInfo * method));
DO_APP_FUNC(0x01968740, Exception *, XmlConvert_TryToGuid, (String * s, Guid * result, MethodInfo * method));
DO_APP_FUNC(0x01968A90, DateTime, XmlConvert_SwitchToLocalTime, (DateTime value, MethodInfo * method));
DO_APP_FUNC(0x01968B20, DateTime, XmlConvert_SwitchToUtcTime, (DateTime value, MethodInfo * method));
DO_APP_FUNC(0x01968BC0, Uri *, XmlConvert_ToUri, (String * s, MethodInfo * method));
DO_APP_FUNC(0x01968E30, Exception *, XmlConvert_TryToUri, (String * s, Uri * * result, MethodInfo * method));
DO_APP_FUNC(0x01969260, bool, XmlConvert_StrEqual, (Char__Array * chars, int32_t strPos1, int32_t strLen1, String * str2, MethodInfo * method));
DO_APP_FUNC(0x01969310, String *, XmlConvert_TrimString, (String * value, MethodInfo * method));
DO_APP_FUNC(0x019693F0, String *, XmlConvert_TrimStringStart, (String * value, MethodInfo * method));
DO_APP_FUNC(0x019694B0, String *, XmlConvert_TrimStringEnd, (String * value, MethodInfo * method));
DO_APP_FUNC(0x01969570, String__Array *, XmlConvert_SplitString, (String * value, MethodInfo * method));
DO_APP_FUNC(0x01969650, bool, XmlConvert_IsNegativeZero, (double value, MethodInfo * method));
DO_APP_FUNC(0x01969710, int64_t, XmlConvert_DoubleToInt64Bits, (double value, MethodInfo * method));
DO_APP_FUNC(0x01969720, void, XmlConvert_VerifyCharData, (String * data, ExceptionType__Enum invCharExceptionType, ExceptionType__Enum invSurrogateExceptionType, MethodInfo * method));
DO_APP_FUNC(0x019699C0, String *, XmlConvert_EscapeValueForDebuggerDisplay, (String * value, MethodInfo * method));
DO_APP_FUNC(0x01969CD0, Exception *, XmlConvert_CreateException, (String * res, ExceptionType__Enum exceptionType, int32_t lineNo, int32_t linePos, MethodInfo * method));
DO_APP_FUNC(0x01969F40, Exception *, XmlConvert_CreateException_1, (String * res, String * arg, ExceptionType__Enum exceptionType, int32_t lineNo, int32_t linePos, MethodInfo * method));
DO_APP_FUNC(0x0196A220, Exception *, XmlConvert_CreateException_2, (String * res, String__Array * args, ExceptionType__Enum exceptionType, MethodInfo * method));
DO_APP_FUNC(0x0196A2F0, Exception *, XmlConvert_CreateException_3, (String * res, String__Array * args, ExceptionType__Enum exceptionType, int32_t lineNo, int32_t linePos, MethodInfo * method));
DO_APP_FUNC(0x0196A560, Exception *, XmlConvert_CreateInvalidSurrogatePairException, (uint16_t low, uint16_t hi, MethodInfo * method));
DO_APP_FUNC(0x0196A6A0, Exception *, XmlConvert_CreateInvalidSurrogatePairException_1, (uint16_t low, uint16_t hi, ExceptionType__Enum exceptionType, MethodInfo * method));
DO_APP_FUNC(0x0196A770, Exception *, XmlConvert_CreateInvalidSurrogatePairException_2, (uint16_t low, uint16_t hi, ExceptionType__Enum exceptionType, int32_t lineNo, int32_t linePos, MethodInfo * method));
DO_APP_FUNC(0x0196A990, Exception *, XmlConvert_CreateInvalidHighSurrogateCharException, (uint16_t hi, MethodInfo * method));
DO_APP_FUNC(0x0196AB90, Exception *, XmlConvert_CreateInvalidHighSurrogateCharException_1, (uint16_t hi, ExceptionType__Enum exceptionType, MethodInfo * method));
DO_APP_FUNC(0x0196AD20, Exception *, XmlConvert_CreateInvalidHighSurrogateCharException_2, (uint16_t hi, ExceptionType__Enum exceptionType, int32_t lineNo, int32_t linePos, MethodInfo * method));
DO_APP_FUNC(0x0196AE50, Exception *, XmlConvert_CreateInvalidCharException, (String * data, int32_t invCharPos, ExceptionType__Enum exceptionType, MethodInfo * method));
DO_APP_FUNC(0x0196AF70, Exception *, XmlConvert_CreateInvalidCharException_1, (uint16_t invChar, uint16_t nextChar, MethodInfo * method));
DO_APP_FUNC(0x0196B020, Exception *, XmlConvert_CreateInvalidCharException_2, (uint16_t invChar, uint16_t nextChar, ExceptionType__Enum exceptionType, MethodInfo * method));
DO_APP_FUNC(0x0196B180, Exception *, XmlConvert_CreateInvalidNameCharException, (String * name, int32_t index, ExceptionType__Enum exceptionType, MethodInfo * method));
DO_APP_FUNC(0x0196B2B0, ArgumentException *, XmlConvert_CreateInvalidNameArgumentException, (String * name, String * argumentName, MethodInfo * method));
DO_APP_FUNC(0x0196B500, void, XmlConvert__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01DABC20, Stream *, XmlDownloadManager_GetStream, (XmlDownloadManager * __this, Uri * uri, ICredentials * credentials, IWebProxy * proxy, RequestCachePolicy * cachePolicy, MethodInfo * method));
DO_APP_FUNC(0x01DABE30, Stream *, XmlDownloadManager_GetNonFileStream, (XmlDownloadManager * __this, Uri * uri, ICredentials * credentials, IWebProxy * proxy, RequestCachePolicy * cachePolicy, MethodInfo * method));
DO_APP_FUNC(0x01DAC5D0, void, XmlDownloadManager_Remove, (XmlDownloadManager * __this, String * host, MethodInfo * method));
DO_APP_FUNC(0x01DAC7A0, Task_1_System_IO_Stream_ *, XmlDownloadManager_GetStreamAsync, (XmlDownloadManager * __this, Uri * uri, ICredentials * credentials, IWebProxy * proxy, RequestCachePolicy * cachePolicy, MethodInfo * method));
DO_APP_FUNC(0x01DACB50, Task_1_System_IO_Stream_ *, XmlDownloadManager_GetNonFileStreamAsync, (XmlDownloadManager * __this, Uri * uri, ICredentials * credentials, IWebProxy * proxy, RequestCachePolicy * cachePolicy, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlDownloadManager__ctor, (XmlDownloadManager * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlDownloadManager_c_DisplayClass4_0__ctor, (XmlDownloadManager_c_DisplayClass4_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x01DACC90, Stream *, XmlDownloadManager_c_DisplayClass4_0__GetStreamAsync_b__0, (XmlDownloadManager_c_DisplayClass4_0 * __this, MethodInfo * method));
DO_APP_FUNC(0x001CF570, void, XmlDownloadManager_GetNonFileStreamAsync_d_5_MoveNext, (XmlDownloadManager_GetNonFileStreamAsync_d_5__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001CF580, void, XmlDownloadManager_GetNonFileStreamAsync_d_5_SetStateMachine, (XmlDownloadManager_GetNonFileStreamAsync_d_5__Boxed * __this, IAsyncStateMachine * stateMachine, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, OpenedHost__ctor, (OpenedHost * __this, MethodInfo * method));
DO_APP_FUNC(0x01706880, void, XmlRegisteredNonCachedStream__ctor, (XmlRegisteredNonCachedStream * __this, Stream * stream, XmlDownloadManager * downloadManager, String * host, MethodInfo * method));
DO_APP_FUNC(0x01706940, void, XmlRegisteredNonCachedStream_Finalize, (XmlRegisteredNonCachedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x017069E0, void, XmlRegisteredNonCachedStream_Dispose, (XmlRegisteredNonCachedStream * __this, bool disposing, MethodInfo * method));
DO_APP_FUNC(0x01706B30, IAsyncResult *, XmlRegisteredNonCachedStream_BeginRead, (XmlRegisteredNonCachedStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01706B60, IAsyncResult *, XmlRegisteredNonCachedStream_BeginWrite, (XmlRegisteredNonCachedStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, AsyncCallback * callback, Object * state, MethodInfo * method));
DO_APP_FUNC(0x01706B90, int32_t, XmlRegisteredNonCachedStream_EndRead, (XmlRegisteredNonCachedStream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01706BC0, void, XmlRegisteredNonCachedStream_EndWrite, (XmlRegisteredNonCachedStream * __this, IAsyncResult * asyncResult, MethodInfo * method));
DO_APP_FUNC(0x01706BF0, void, XmlRegisteredNonCachedStream_Flush, (XmlRegisteredNonCachedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01706C20, int32_t, XmlRegisteredNonCachedStream_Read, (XmlRegisteredNonCachedStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01706C50, int32_t, XmlRegisteredNonCachedStream_ReadByte, (XmlRegisteredNonCachedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01706C80, int64_t, XmlRegisteredNonCachedStream_Seek, (XmlRegisteredNonCachedStream * __this, int64_t offset, SeekOrigin__Enum origin, MethodInfo * method));
DO_APP_FUNC(0x01706CB0, void, XmlRegisteredNonCachedStream_SetLength, (XmlRegisteredNonCachedStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01706CE0, void, XmlRegisteredNonCachedStream_Write, (XmlRegisteredNonCachedStream * __this, Byte__Array * buffer, int32_t offset, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x01706D10, void, XmlRegisteredNonCachedStream_WriteByte, (XmlRegisteredNonCachedStream * __this, uint8_t value, MethodInfo * method));
DO_APP_FUNC(0x01706D40, bool, XmlRegisteredNonCachedStream_get_CanRead, (XmlRegisteredNonCachedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01706D70, bool, XmlRegisteredNonCachedStream_get_CanSeek, (XmlRegisteredNonCachedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01706DA0, bool, XmlRegisteredNonCachedStream_get_CanWrite, (XmlRegisteredNonCachedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01706DD0, int64_t, XmlRegisteredNonCachedStream_get_Length, (XmlRegisteredNonCachedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01706E00, int64_t, XmlRegisteredNonCachedStream_get_Position, (XmlRegisteredNonCachedStream * __this, MethodInfo * method));
DO_APP_FUNC(0x01706E30, void, XmlRegisteredNonCachedStream_set_Position, (XmlRegisteredNonCachedStream * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x0195F000, void, XmlCachedStream__ctor, (XmlCachedStream * __this, Uri * uri, Stream * stream, MethodInfo * method));
DO_APP_FUNC(0x019509A0, void, UTF16Decoder__ctor, (UTF16Decoder * __this, bool bigEndian, MethodInfo * method));
DO_APP_FUNC(0x019509B0, int32_t, UTF16Decoder_GetCharCount, (UTF16Decoder * __this, Byte__Array * bytes, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x019509E0, int32_t, UTF16Decoder_GetCharCount_1, (UTF16Decoder * __this, Byte__Array * bytes, int32_t index, int32_t count, bool flush, MethodInfo * method));
DO_APP_FUNC(0x01950B10, int32_t, UTF16Decoder_GetChars, (UTF16Decoder * __this, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, Char__Array * chars, int32_t charIndex, MethodInfo * method));
DO_APP_FUNC(0x01950E90, void, UTF16Decoder_Convert, (UTF16Decoder * __this, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, Char__Array * chars, int32_t charIndex, int32_t charCount, bool flush, int32_t * bytesUsed, int32_t * charsUsed, bool * completed, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SafeAsciiDecoder__ctor, (SafeAsciiDecoder * __this, MethodInfo * method));
DO_APP_FUNC(0x0199D990, int32_t, SafeAsciiDecoder_GetCharCount, (SafeAsciiDecoder * __this, Byte__Array * bytes, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x0199FB90, int32_t, SafeAsciiDecoder_GetChars, (SafeAsciiDecoder * __this, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, Char__Array * chars, int32_t charIndex, MethodInfo * method));
DO_APP_FUNC(0x0199FC30, void, SafeAsciiDecoder_Convert, (SafeAsciiDecoder * __this, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, Char__Array * chars, int32_t charIndex, int32_t charCount, bool flush, int32_t * bytesUsed, int32_t * charsUsed, bool * completed, MethodInfo * method));
DO_APP_FUNC(0x0173D7B0, String *, Ucs4Encoding_get_WebName, (Ucs4Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, Decoder *, Ucs4Encoding_GetDecoder, (Ucs4Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x01952400, int32_t, Ucs4Encoding_GetByteCount, (Ucs4Encoding * __this, Char__Array * chars, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Byte__Array *, Ucs4Encoding_GetBytes, (Ucs4Encoding * __this, String * s, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, int32_t, Ucs4Encoding_GetBytes_1, (Ucs4Encoding * __this, Char__Array * chars, int32_t charIndex, int32_t charCount, Byte__Array * bytes, int32_t byteIndex, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, int32_t, Ucs4Encoding_GetMaxByteCount, (Ucs4Encoding * __this, int32_t charCount, MethodInfo * method));
DO_APP_FUNC(0x019524A0, int32_t, Ucs4Encoding_GetCharCount, (Ucs4Encoding * __this, Byte__Array * bytes, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x019524D0, int32_t, Ucs4Encoding_GetChars, (Ucs4Encoding * __this, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, Char__Array * chars, int32_t charIndex, MethodInfo * method));
DO_APP_FUNC(0x01952500, int32_t, Ucs4Encoding_GetMaxCharCount, (Ucs4Encoding * __this, int32_t byteCount, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, int32_t, Ucs4Encoding_get_CodePage, (Ucs4Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Encoder *, Ucs4Encoding_GetEncoder, (Ucs4Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x01952510, Encoding *, Ucs4Encoding_get_UCS4_Littleendian, (MethodInfo * method));
DO_APP_FUNC(0x01952650, Encoding *, Ucs4Encoding_get_UCS4_Bigendian, (MethodInfo * method));
DO_APP_FUNC(0x01952790, Encoding *, Ucs4Encoding_get_UCS4_2143, (MethodInfo * method));
DO_APP_FUNC(0x019528D0, Encoding *, Ucs4Encoding_get_UCS4_3412, (MethodInfo * method));
DO_APP_FUNC(0x01952A10, void, Ucs4Encoding__ctor, (Ucs4Encoding * __this, MethodInfo * method));
DO_APP_FUNC(0x01952AB0, void, Ucs4Encoding1234__ctor, (Ucs4Encoding1234 * __this, MethodInfo * method));
DO_APP_FUNC(0x01952C70, String *, Ucs4Encoding1234_get_EncodingName, (Ucs4Encoding1234 * __this, MethodInfo * method));
DO_APP_FUNC(0x01952CF0, Byte__Array *, Ucs4Encoding1234_GetPreamble, (Ucs4Encoding1234 * __this, MethodInfo * method));
DO_APP_FUNC(0x019533B0, void, Ucs4Encoding4321__ctor, (Ucs4Encoding4321 * __this, MethodInfo * method));
DO_APP_FUNC(0x01953570, String *, Ucs4Encoding4321_get_EncodingName, (Ucs4Encoding4321 * __this, MethodInfo * method));
DO_APP_FUNC(0x019535F0, Byte__Array *, Ucs4Encoding4321_GetPreamble, (Ucs4Encoding4321 * __this, MethodInfo * method));
DO_APP_FUNC(0x01952DB0, void, Ucs4Encoding2143__ctor, (Ucs4Encoding2143 * __this, MethodInfo * method));
DO_APP_FUNC(0x01952F70, String *, Ucs4Encoding2143_get_EncodingName, (Ucs4Encoding2143 * __this, MethodInfo * method));
DO_APP_FUNC(0x01952FF0, Byte__Array *, Ucs4Encoding2143_GetPreamble, (Ucs4Encoding2143 * __this, MethodInfo * method));
DO_APP_FUNC(0x019530B0, void, Ucs4Encoding3412__ctor, (Ucs4Encoding3412 * __this, MethodInfo * method));
DO_APP_FUNC(0x01953270, String *, Ucs4Encoding3412_get_EncodingName, (Ucs4Encoding3412 * __this, MethodInfo * method));
DO_APP_FUNC(0x019532F0, Byte__Array *, Ucs4Encoding3412_GetPreamble, (Ucs4Encoding3412 * __this, MethodInfo * method));
DO_APP_FUNC(0x019512C0, int32_t, Ucs4Decoder_GetCharCount, (Ucs4Decoder * __this, Byte__Array * bytes, int32_t index, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x019512D0, int32_t, Ucs4Decoder_GetChars, (Ucs4Decoder * __this, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, Char__Array * chars, int32_t charIndex, MethodInfo * method));
DO_APP_FUNC(0x019514D0, void, Ucs4Decoder_Convert, (Ucs4Decoder * __this, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, Char__Array * chars, int32_t charIndex, int32_t charCount, bool flush, int32_t * bytesUsed, int32_t * charsUsed, bool * completed, MethodInfo * method));
DO_APP_FUNC(0x01951750, void, Ucs4Decoder_Ucs4ToUTF16, (Ucs4Decoder * __this, uint32_t code, Char__Array * chars, int32_t charIndex, MethodInfo * method));
DO_APP_FUNC(0x019517E0, void, Ucs4Decoder__ctor, (Ucs4Decoder * __this, MethodInfo * method));
DO_APP_FUNC(0x01952120, int32_t, Ucs4Decoder4321_GetFullChars, (Ucs4Decoder4321 * __this, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, Char__Array * chars, int32_t charIndex, MethodInfo * method));
DO_APP_FUNC(0x01951B50, void, Ucs4Decoder4321__ctor, (Ucs4Decoder4321 * __this, MethodInfo * method));
DO_APP_FUNC(0x01951870, int32_t, Ucs4Decoder1234_GetFullChars, (Ucs4Decoder1234 * __this, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, Char__Array * chars, int32_t charIndex, MethodInfo * method));
DO_APP_FUNC(0x01951B50, void, Ucs4Decoder1234__ctor, (Ucs4Decoder1234 * __this, MethodInfo * method));
DO_APP_FUNC(0x01951B60, int32_t, Ucs4Decoder2143_GetFullChars, (Ucs4Decoder2143 * __this, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, Char__Array * chars, int32_t charIndex, MethodInfo * method));
DO_APP_FUNC(0x01951B50, void, Ucs4Decoder2143__ctor, (Ucs4Decoder2143 * __this, MethodInfo * method));
DO_APP_FUNC(0x01951E40, int32_t, Ucs4Decoder3412_GetFullChars, (Ucs4Decoder3412 * __this, Byte__Array * bytes, int32_t byteIndex, int32_t byteCount, Char__Array * chars, int32_t charIndex, MethodInfo * method));
DO_APP_FUNC(0x01951B50, void, Ucs4Decoder3412__ctor, (Ucs4Decoder3412 * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB7C90, void, XmlException__ctor, (XmlException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01DB80D0, void, XmlException_GetObjectData, (XmlException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01DB8220, void, XmlException__ctor_1, (XmlException * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB8250, void, XmlException__ctor_2, (XmlException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01DB8280, void, XmlException__ctor_3, (XmlException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x01DB82B0, void, XmlException__ctor_4, (XmlException * __this, String * message, Exception * innerException, int32_t lineNumber, int32_t linePosition, MethodInfo * method));
DO_APP_FUNC(0x01DB82E0, void, XmlException__ctor_5, (XmlException * __this, String * message, Exception * innerException, int32_t lineNumber, int32_t linePosition, String * sourceUri, MethodInfo * method));
DO_APP_FUNC(0x01DB8550, void, XmlException__ctor_6, (XmlException * __this, String * res, String__Array * args, MethodInfo * method));
DO_APP_FUNC(0x01DB85D0, void, XmlException__ctor_7, (XmlException * __this, String * res, String * arg, MethodInfo * method));
DO_APP_FUNC(0x01DB8730, void, XmlException__ctor_8, (XmlException * __this, String * res, String * arg, String * sourceUri, MethodInfo * method));
DO_APP_FUNC(0x01DB8860, void, XmlException__ctor_9, (XmlException * __this, String * res, String * arg, IXmlLineInfo * lineInfo, MethodInfo * method));
DO_APP_FUNC(0x01DB8980, void, XmlException__ctor_10, (XmlException * __this, String * res, String__Array * args, IXmlLineInfo * lineInfo, MethodInfo * method));
DO_APP_FUNC(0x01DB89A0, void, XmlException__ctor_11, (XmlException * __this, String * res, String__Array * args, IXmlLineInfo * lineInfo, String * sourceUri, MethodInfo * method));
DO_APP_FUNC(0x01DB8AB0, void, XmlException__ctor_12, (XmlException * __this, String * res, String * arg, int32_t lineNumber, int32_t linePosition, MethodInfo * method));
DO_APP_FUNC(0x01DB8BE0, void, XmlException__ctor_13, (XmlException * __this, String * res, String * arg, int32_t lineNumber, int32_t linePosition, String * sourceUri, MethodInfo * method));
DO_APP_FUNC(0x01DB8D20, void, XmlException__ctor_14, (XmlException * __this, String * res, String__Array * args, int32_t lineNumber, int32_t linePosition, MethodInfo * method));
DO_APP_FUNC(0x01DB8D50, void, XmlException__ctor_15, (XmlException * __this, String * res, String__Array * args, int32_t lineNumber, int32_t linePosition, String * sourceUri, MethodInfo * method));
DO_APP_FUNC(0x01DB8D90, void, XmlException__ctor_16, (XmlException * __this, String * res, String__Array * args, Exception * innerException, int32_t lineNumber, int32_t linePosition, MethodInfo * method));
DO_APP_FUNC(0x01DB8DC0, void, XmlException__ctor_17, (XmlException * __this, String * res, String__Array * args, Exception * innerException, int32_t lineNumber, int32_t linePosition, String * sourceUri, MethodInfo * method));
DO_APP_FUNC(0x01DB8E70, String *, XmlException_FormatUserMessage, (String * message, int32_t lineNumber, int32_t linePosition, MethodInfo * method));
DO_APP_FUNC(0x01DB8FB0, String *, XmlException_CreateMessage, (String * res, String__Array * args, int32_t lineNumber, int32_t linePosition, MethodInfo * method));
DO_APP_FUNC(0x01DB9220, String__Array *, XmlException_BuildCharExceptionArgs, (String * data, int32_t invCharIndex, MethodInfo * method));
DO_APP_FUNC(0x01DB9280, String__Array *, XmlException_BuildCharExceptionArgs_1, (Char__Array * data, int32_t length, int32_t invCharIndex, MethodInfo * method));
DO_APP_FUNC(0x01DB9300, String__Array *, XmlException_BuildCharExceptionArgs_2, (uint16_t invChar, uint16_t nextChar, MethodInfo * method));
DO_APP_FUNC(0x00736620, int32_t, XmlException_get_LineNumber, (XmlException * __this, MethodInfo * method));
DO_APP_FUNC(0x007007F0, int32_t, XmlException_get_LinePosition, (XmlException * __this, MethodInfo * method));
DO_APP_FUNC(0x01DB9740, String *, XmlException_get_Message, (XmlException * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC20, String *, XmlException_get_ResString, (XmlException * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlNameTable__ctor, (XmlNameTable * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlNamespaceManager__ctor, (XmlNamespaceManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC2AE0, void, XmlNamespaceManager__ctor_1, (XmlNamespaceManager * __this, XmlNameTable * nameTable, MethodInfo * method));
DO_APP_FUNC(0x002FB950, XmlNameTable *, XmlNamespaceManager_get_NameTable, (XmlNamespaceManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC2D10, String *, XmlNamespaceManager_get_DefaultNamespace, (XmlNamespaceManager * __this, MethodInfo * method));
DO_APP_FUNC(0x0131C5E0, void, XmlNamespaceManager_PushScope, (XmlNamespaceManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC2DC0, bool, XmlNamespaceManager_PopScope, (XmlNamespaceManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC2F00, void, XmlNamespaceManager_AddNamespace, (XmlNamespaceManager * __this, String * prefix, String * uri, MethodInfo * method));
DO_APP_FUNC(0x01DC3410, void, XmlNamespaceManager_RemoveNamespace, (XmlNamespaceManager * __this, String * prefix, String * uri, MethodInfo * method));
DO_APP_FUNC(0x01DC3680, IEnumerator *, XmlNamespaceManager_GetEnumerator, (XmlNamespaceManager * __this, MethodInfo * method));
DO_APP_FUNC(0x01DC38E0, IDictionary_2_System_String_System_String_ *, XmlNamespaceManager_GetNamespacesInScope, (XmlNamespaceManager * __this, XmlNamespaceScope__Enum scope, MethodInfo * method));
DO_APP_FUNC(0x01DC3BD0, String *, XmlNamespaceManager_LookupNamespace, (XmlNamespaceManager * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01DC3C30, int32_t, XmlNamespaceManager_LookupNamespaceDecl, (XmlNamespaceManager * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01DC3EC0, String *, XmlNamespaceManager_LookupPrefix, (XmlNamespaceManager * __this, String * uri, MethodInfo * method));
DO_APP_FUNC(0x001CFE80, void, XmlNamespaceManager_NamespaceDeclaration_Set, (XmlNamespaceManager_NamespaceDeclaration__Boxed * __this, String * prefix, String * uri, int32_t scopeId, int32_t previousNsIndex, MethodInfo * method));
DO_APP_FUNC(0x016FF860, void, XmlQualifiedName__ctor, (XmlQualifiedName * __this, MethodInfo * method));
DO_APP_FUNC(0x016FF8F0, void, XmlQualifiedName__ctor_1, (XmlQualifiedName * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x016FF990, void, XmlQualifiedName__ctor_2, (XmlQualifiedName * __this, String * name, String * ns, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, XmlQualifiedName_get_Namespace, (XmlQualifiedName * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, XmlQualifiedName_get_Name, (XmlQualifiedName * __this, MethodInfo * method));
DO_APP_FUNC(0x016FFA60, int32_t, XmlQualifiedName_GetHashCode, (XmlQualifiedName * __this, MethodInfo * method));
DO_APP_FUNC(0x016FFBB0, bool, XmlQualifiedName_get_IsEmpty, (XmlQualifiedName * __this, MethodInfo * method));
DO_APP_FUNC(0x016FFBF0, String *, XmlQualifiedName_ToString, (XmlQualifiedName * __this, MethodInfo * method));
DO_APP_FUNC(0x016FFCA0, bool, XmlQualifiedName_Equals, (XmlQualifiedName * __this, Object * other, MethodInfo * method));
DO_APP_FUNC(0x016FFE20, bool, XmlQualifiedName_op_Equality, (XmlQualifiedName * a, XmlQualifiedName * b, MethodInfo * method));
DO_APP_FUNC(0x016FFEC0, bool, XmlQualifiedName_op_Inequality, (XmlQualifiedName * a, XmlQualifiedName * b, MethodInfo * method));
DO_APP_FUNC(0x016FFF70, String *, XmlQualifiedName_ToString_1, (String * name, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01700020, XmlQualifiedName_HashCodeOfStringDelegate *, XmlQualifiedName_GetHashCodeDelegate, (MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, XmlQualifiedName_IsRandomizedHashingDisabled, (MethodInfo * method));
DO_APP_FUNC(0x01700280, int32_t, XmlQualifiedName_GetHashCodeOfString, (String * s, int32_t length, int64_t additionalEntropy, MethodInfo * method));
DO_APP_FUNC(0x017002B0, void, XmlQualifiedName_Init, (XmlQualifiedName * __this, String * name, String * ns, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, XmlQualifiedName_SetNamespace, (XmlQualifiedName * __this, String * ns, MethodInfo * method));
DO_APP_FUNC(0x017002C0, void, XmlQualifiedName_Verify, (XmlQualifiedName * __this, MethodInfo * method));
DO_APP_FUNC(0x017003B0, void, XmlQualifiedName_Atomize, (XmlQualifiedName * __this, XmlNameTable * nameTable, MethodInfo * method));
DO_APP_FUNC(0x01700410, XmlQualifiedName *, XmlQualifiedName_Parse, (String * s, IXmlNamespaceResolver * nsmgr, String * * prefix, MethodInfo * method));
DO_APP_FUNC(0x01700630, XmlQualifiedName *, XmlQualifiedName_Clone, (XmlQualifiedName * __this, MethodInfo * method));
DO_APP_FUNC(0x01700780, void, XmlQualifiedName__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00611810, void, XmlQualifiedName_HashCodeOfStringDelegate__ctor, (XmlQualifiedName_HashCodeOfStringDelegate * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01700900, int32_t, XmlQualifiedName_HashCodeOfStringDelegate_Invoke, (XmlQualifiedName_HashCodeOfStringDelegate * __this, String * s, int32_t sLen, int64_t additionalEntropy, MethodInfo * method));
DO_APP_FUNC(0x01700E80, IAsyncResult *, XmlQualifiedName_HashCodeOfStringDelegate_BeginInvoke, (XmlQualifiedName_HashCodeOfStringDelegate * __this, String * s, int32_t sLen, int64_t additionalEntropy, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00F550D0, int32_t, XmlQualifiedName_HashCodeOfStringDelegate_EndInvoke, (XmlQualifiedName_HashCodeOfStringDelegate * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01706E60, Uri *, XmlResolver_ResolveUri, (XmlResolver * __this, Uri * baseUri, String * relativeUri, MethodInfo * method));
DO_APP_FUNC(0x01707270, bool, XmlResolver_SupportsType, (XmlResolver * __this, Uri * absoluteUri, Type * type, MethodInfo * method));
DO_APP_FUNC(0x017073B0, Task_1_System_Object_ *, XmlResolver_GetEntityAsync, (XmlResolver * __this, Uri * absoluteUri, String * role, Type * ofObjectToReturn, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlResolver__ctor, (XmlResolver * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC3F60, XmlDownloadManager *, XmlUrlResolver_get_DownloadManager, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlUrlResolver__ctor, (XmlUrlResolver * __this, MethodInfo * method));
DO_APP_FUNC(0x01FC4120, Object *, XmlUrlResolver_GetEntity, (XmlUrlResolver * __this, Uri * absoluteUri, String * role, Type * ofObjectToReturn, MethodInfo * method));
DO_APP_FUNC(0x01FC42D0, Uri *, XmlUrlResolver_ResolveUri, (XmlUrlResolver * __this, Uri * baseUri, String * relativeUri, MethodInfo * method));
DO_APP_FUNC(0x01FC42E0, Task_1_System_Object_ *, XmlUrlResolver_GetEntityAsync, (XmlUrlResolver * __this, Uri * absoluteUri, String * role, Type * ofObjectToReturn, MethodInfo * method));
DO_APP_FUNC(0x001DAAD0, void, XmlUrlResolver_GetEntityAsync_d_15_MoveNext, (XmlUrlResolver_GetEntityAsync_d_15__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001DAAE0, void, XmlUrlResolver_GetEntityAsync_d_15_SetStateMachine, (XmlUrlResolver_GetEntityAsync_d_15__Boxed * __this, IAsyncStateMachine * stateMachine, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, String *, Res_GetString, (String * name, MethodInfo * method));
DO_APP_FUNC(0x0199FAC0, String *, Res_GetString_1, (String * name, Object__Array * args, MethodInfo * method));
DO_APP_FUNC(0x002FB950, XmlNameTable *, XPathDocument_get_NameTable, (XPathDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x004F4CE0, bool, XPathDocument_get_HasLineInfo, (XPathDocument * __this, MethodInfo * method));
DO_APP_FUNC(0x01954C40, int32_t, XPathDocument_GetXmlNamespaceNode, (XPathDocument * __this, XPathNode__Array * * pageXmlNmsp, MethodInfo * method));
DO_APP_FUNC(0x01954C50, int32_t, XPathDocument_LookupNamespaces, (XPathDocument * __this, XPathNode__Array * pageElem, int32_t idxElem, XPathNode__Array * * pageNmsp, MethodInfo * method));
DO_APP_FUNC(0x01954E60, void, XPathException__ctor, (XPathException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01955150, void, XPathException_GetObjectData, (XPathException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01955250, void, XPathException__ctor_1, (XPathException * __this, MethodInfo * method));
DO_APP_FUNC(0x019553E0, void, XPathException__ctor_2, (XPathException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x01955520, XPathException *, XPathException_Create, (String * res, MethodInfo * method));
DO_APP_FUNC(0x01955690, XPathException *, XPathException_Create_1, (String * res, String * arg, MethodInfo * method));
DO_APP_FUNC(0x01955880, XPathException *, XPathException_Create_2, (String * res, String * arg, String * arg2, MethodInfo * method));
DO_APP_FUNC(0x01955AC0, void, XPathException__ctor_3, (XPathException * __this, String * res, String__Array * args, MethodInfo * method));
DO_APP_FUNC(0x01955B20, void, XPathException__ctor_4, (XPathException * __this, String * res, String__Array * args, Exception * inner, MethodInfo * method));
DO_APP_FUNC(0x01955B90, String *, XPathException_CreateMessage, (String * res, String__Array * args, MethodInfo * method));
DO_APP_FUNC(0x01955C70, String *, XPathException_get_Message, (XPathException * __this, MethodInfo * method));
DO_APP_FUNC(0x01955C90, Object *, XPathItem_ValueAs, (XPathItem * __this, Type * returnType, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XPathItem__ctor, (XPathItem * __this, MethodInfo * method));
DO_APP_FUNC(0x00CC2AF0, String *, XPathNavigator_ToString, (XPathNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x01955CB0, XmlSchemaType *, XPathNavigator_get_XmlType, (XPathNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x01955D70, Object *, XPathNavigator_get_TypedValue, (XPathNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x01955F90, Type *, XPathNavigator_get_ValueType, (XPathNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x019560A0, bool, XPathNavigator_get_ValueAsBoolean, (XPathNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x019562B0, DateTime, XPathNavigator_get_ValueAsDateTime, (XPathNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x019564C0, double, XPathNavigator_get_ValueAsDouble, (XPathNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x019566D0, int32_t, XPathNavigator_get_ValueAsInt, (XPathNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x019568E0, int64_t, XPathNavigator_get_ValueAsLong, (XPathNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x01956AF0, Object *, XPathNavigator_ValueAs, (XPathNavigator * __this, Type * returnType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x01956D40, Object *, XPathNavigator_System_ICloneable_Clone, (XPathNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x01956D60, String *, XPathNavigator_LookupNamespace, (XPathNavigator * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01956F50, String *, XPathNavigator_LookupPrefix, (XPathNavigator * __this, String * namespaceURI, MethodInfo * method));
DO_APP_FUNC(0x01957200, IDictionary_2_System_String_System_String_ *, XPathNavigator_GetNamespacesInScope, (XPathNavigator * __this, XmlNamespaceScope__Enum scope, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Object *, XPathNavigator_get_UnderlyingObject, (XPathNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x01957520, bool, XPathNavigator_MoveToNamespace, (XPathNavigator * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x01957630, IXmlSchemaInfo *, XPathNavigator_get_SchemaInfo, (XPathNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x019576B0, bool, XPathNavigator_IsText, (XPathNodeType__Enum type, MethodInfo * method));
DO_APP_FUNC(0x019576C0, Object *, XPathNavigator_get_debuggerDisplayProxy, (XPathNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XPathNavigator__ctor, (XPathNavigator * __this, MethodInfo * method));
DO_APP_FUNC(0x01957750, void, XPathNavigator__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0010FD20, void, XPathNavigator_DebuggerDisplayProxy__ctor, (XPathNavigator_DebuggerDisplayProxy__Boxed * __this, XPathNavigator * nav, MethodInfo * method));
DO_APP_FUNC(0x00153560, String *, XPathNavigator_DebuggerDisplayProxy_ToString, (XPathNavigator_DebuggerDisplayProxy__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x01957B90, bool, XPathNavigatorKeyComparer_System_Collections_IEqualityComparer_Equals, (XPathNavigatorKeyComparer * __this, Object * obj1, Object * obj2, MethodInfo * method));
DO_APP_FUNC(0x01957CC0, int32_t, XPathNavigatorKeyComparer_System_Collections_IEqualityComparer_GetHashCode, (XPathNavigatorKeyComparer * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XPathNavigatorKeyComparer__ctor, (XPathNavigatorKeyComparer * __this, MethodInfo * method));
DO_APP_FUNC(0x01C8D190, String *, CodeIdentifier_MakePascal, (String * identifier, MethodInfo * method));
DO_APP_FUNC(0x01C8D390, String *, CodeIdentifier_MakeValid, (String * identifier, MethodInfo * method));
DO_APP_FUNC(0x01C8D5F0, bool, CodeIdentifier_IsValidStart, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x01C8D690, bool, CodeIdentifier_IsValid, (uint16_t c, MethodInfo * method));
DO_APP_FUNC(0x01C8D780, void, CodeIdentifier__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSerializerNamespaces__ctor, (XmlSerializerNamespaces * __this, MethodInfo * method));
DO_APP_FUNC(0x0194C170, void, XmlSerializerNamespaces_Add, (XmlSerializerNamespaces * __this, String * prefix, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0194C290, void, XmlSerializerNamespaces_AddInternal, (XmlSerializerNamespaces * __this, String * prefix, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0194C2E0, XmlQualifiedName__Array *, XmlSerializerNamespaces_ToArray, (XmlSerializerNamespaces * __this, MethodInfo * method));
DO_APP_FUNC(0x0194C420, int32_t, XmlSerializerNamespaces_get_Count, (XmlSerializerNamespaces * __this, MethodInfo * method));
DO_APP_FUNC(0x0194C450, ArrayList *, XmlSerializerNamespaces_get_NamespaceList, (XmlSerializerNamespaces * __this, MethodInfo * method));
DO_APP_FUNC(0x0194C8F0, Hashtable *, XmlSerializerNamespaces_get_Namespaces, (XmlSerializerNamespaces * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, XmlSerializerNamespaces_set_Namespaces, (XmlSerializerNamespaces * __this, Hashtable * value, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, XmlAttributeEventHandler__ctor, (XmlAttributeEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, XmlAttributeEventHandler_Invoke, (XmlAttributeEventHandler * __this, Object * sender, XmlAttributeEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, XmlAttributeEventHandler_BeginInvoke, (XmlAttributeEventHandler * __this, Object * sender, XmlAttributeEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, XmlAttributeEventHandler_EndInvoke, (XmlAttributeEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01C9B3F0, void, XmlAttributeEventArgs__ctor, (XmlAttributeEventArgs * __this, XmlAttribute * attr, int32_t lineNumber, int32_t linePosition, Object * o, String * qnames, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, XmlElementEventHandler__ctor, (XmlElementEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, XmlElementEventHandler_Invoke, (XmlElementEventHandler * __this, Object * sender, XmlElementEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, XmlElementEventHandler_BeginInvoke, (XmlElementEventHandler * __this, Object * sender, XmlElementEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, XmlElementEventHandler_EndInvoke, (XmlElementEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x025A2330, void, XmlElementEventArgs__ctor, (XmlElementEventArgs * __this, XmlElement * elem, int32_t lineNumber, int32_t linePosition, Object * o, String * qnames, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, XmlNodeEventHandler__ctor, (XmlNodeEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, XmlNodeEventHandler_Invoke, (XmlNodeEventHandler * __this, Object * sender, XmlNodeEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, XmlNodeEventHandler_BeginInvoke, (XmlNodeEventHandler * __this, Object * sender, XmlNodeEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, XmlNodeEventHandler_EndInvoke, (XmlNodeEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x025A24D0, void, XmlNodeEventArgs__ctor, (XmlNodeEventArgs * __this, XmlNode * xmlNode, int32_t lineNumber, int32_t linePosition, Object * o, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, UnreferencedObjectEventHandler__ctor, (UnreferencedObjectEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, UnreferencedObjectEventHandler_Invoke, (UnreferencedObjectEventHandler * __this, Object * sender, UnreferencedObjectEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, UnreferencedObjectEventHandler_BeginInvoke, (UnreferencedObjectEventHandler * __this, Object * sender, UnreferencedObjectEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, UnreferencedObjectEventHandler_EndInvoke, (UnreferencedObjectEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01C99B90, void, UnreferencedObjectEventArgs__ctor, (UnreferencedObjectEventArgs * __this, Object * o, String * id, MethodInfo * method));
DO_APP_FUNC(0x01C8E310, void, KeyHelper_AddField, (StringBuilder * sb, int32_t n, String * val, MethodInfo * method));
DO_APP_FUNC(0x01C8E330, void, KeyHelper_AddField_1, (StringBuilder * sb, int32_t n, String * val, String * def, MethodInfo * method));
DO_APP_FUNC(0x01C8E490, void, KeyHelper_AddField_2, (StringBuilder * sb, int32_t n, bool val, MethodInfo * method));
DO_APP_FUNC(0x01C8E4E0, void, KeyHelper_AddField_3, (StringBuilder * sb, int32_t n, bool val, bool def, MethodInfo * method));
DO_APP_FUNC(0x01C8E530, void, KeyHelper_AddField_4, (StringBuilder * sb, int32_t n, int32_t val, int32_t def, MethodInfo * method));
DO_APP_FUNC(0x01C8E650, void, KeyHelper_AddField_5, (StringBuilder * sb, int32_t n, Type * val, MethodInfo * method));
DO_APP_FUNC(0x01C8F6C0, void, ReflectionHelper_RegisterSchemaType, (ReflectionHelper * __this, XmlTypeMapping * map, String * xmlType, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01C8F7C0, XmlTypeMapping *, ReflectionHelper_GetRegisteredSchemaType, (ReflectionHelper * __this, String * xmlType, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01C8F8D0, void, ReflectionHelper_RegisterClrType, (ReflectionHelper * __this, XmlTypeMapping * map, Type * type, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01C8FA30, XmlTypeMapping *, ReflectionHelper_GetRegisteredClrType, (ReflectionHelper * __this, Type * type, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01C8FBB0, void, ReflectionHelper_CheckSerializableType, (Type * type, bool allowPrivateConstructors, MethodInfo * method));
DO_APP_FUNC(0x01C8FF50, void, ReflectionHelper__ctor, (ReflectionHelper * __this, MethodInfo * method));
DO_APP_FUNC(0x01C90180, void, ReflectionHelper__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01C90210, void, SerializationSource__ctor, (SerializationSource * __this, String * namspace, Type__Array * includedTypes, MethodInfo * method));
DO_APP_FUNC(0x01C90220, bool, SerializationSource_BaseEquals, (SerializationSource * __this, SerializationSource * other, MethodInfo * method));
DO_APP_FUNC(0x019501E0, void, XmlTypeSerializationSource__ctor, (XmlTypeSerializationSource * __this, Type * type, XmlRootAttribute * root, XmlAttributeOverrides * attributeOverrides, String * namspace, Type__Array * includedTypes, MethodInfo * method));
DO_APP_FUNC(0x019504B0, bool, XmlTypeSerializationSource_Equals, (XmlTypeSerializationSource * __this, Object * o, MethodInfo * method));
DO_APP_FUNC(0x01950620, int32_t, XmlTypeSerializationSource_GetHashCode, (XmlTypeSerializationSource * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, XmlTypeConvertorAttribute_get_Method, (XmlTypeConvertorAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, XmlTypeConvertorAttribute_set_Method, (XmlTypeConvertorAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, XmlTypeConvertorAttribute__ctor, (XmlTypeConvertorAttribute * __this, String * method_1, MethodInfo * method));
DO_APP_FUNC(0x01C903A0, void, TypeData__ctor, (TypeData * __this, Type * type, String * elementName, bool isPrimitive, MethodInfo * method));
DO_APP_FUNC(0x01C903C0, void, TypeData__ctor_1, (TypeData * __this, Type * type, String * elementName, bool isPrimitive, TypeData * mappedType, XmlSchemaPatternFacet * facet, MethodInfo * method));
DO_APP_FUNC(0x01C908C0, void, TypeData_LookupTypeConvertor, (TypeData * __this, MethodInfo * method));
DO_APP_FUNC(0x01C909B0, void, TypeData_ConvertForAssignment, (TypeData * __this, Object * * value, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, TypeData_get_TypeName, (TypeData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, TypeData_get_XmlType, (TypeData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Type *, TypeData_get_Type, (TypeData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, String *, TypeData_get_FullTypeName, (TypeData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, SchemaTypes__Enum, TypeData_get_SchemaType, (TypeData * __this, MethodInfo * method));
DO_APP_FUNC(0x01C90B00, bool, TypeData_get_IsListType, (TypeData * __this, MethodInfo * method));
DO_APP_FUNC(0x01C90B10, bool, TypeData_get_IsComplexType, (TypeData * __this, MethodInfo * method));
DO_APP_FUNC(0x01C90B30, bool, TypeData_get_IsValueType, (TypeData * __this, MethodInfo * method));
DO_APP_FUNC(0x01C90C20, bool, TypeData_get_IsNullable, (TypeData * __this, MethodInfo * method));
DO_APP_FUNC(0x00575460, void, TypeData_set_IsNullable, (TypeData * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01C90D80, TypeData *, TypeData_get_ListItemTypeData, (TypeData * __this, MethodInfo * method));
DO_APP_FUNC(0x01C90E70, Type *, TypeData_get_ListItemType, (TypeData * __this, MethodInfo * method));
DO_APP_FUNC(0x01C91630, bool, TypeData_get_IsXsdType, (TypeData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FCE30, bool, TypeData_get_HasPublicConstructor, (TypeData * __this, MethodInfo * method));
DO_APP_FUNC(0x01C91640, PropertyInfo_1 *, TypeData_GetIndexerProperty, (Type * collectionType, MethodInfo * method));
DO_APP_FUNC(0x01C917E0, InvalidOperationException *, TypeData_CreateMissingAddMethodException, (Type * type, String * inheritFrom, Type * argumentType, MethodInfo * method));
DO_APP_FUNC(0x01C919E0, Type *, TypeData_GetGenericListItemType, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x01C91C30, void, TypeData__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, TypeMember__ctor, (TypeMember * __this, Type * type, String * member, MethodInfo * method));
DO_APP_FUNC(0x01C93A10, int32_t, TypeMember_GetHashCode, (TypeMember * __this, MethodInfo * method));
DO_APP_FUNC(0x01C93A70, bool, TypeMember_Equals, (TypeMember * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01C93C00, bool, TypeMember_Equals_1, (TypeMember * tm1, TypeMember * tm2, MethodInfo * method));
DO_APP_FUNC(0x01C93D00, String *, TypeMember_ToString, (TypeMember * __this, MethodInfo * method));
DO_APP_FUNC(0x01C93DB0, void, TypeTranslator__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01C98520, TypeData *, TypeTranslator_GetTypeData, (Type * type, MethodInfo * method));
DO_APP_FUNC(0x01C985C0, TypeData *, TypeTranslator_GetTypeData_1, (Type * runtimeType, String * xmlDataType, bool underlyingEnumType, MethodInfo * method));
DO_APP_FUNC(0x01C993D0, TypeData *, TypeTranslator_GetPrimitiveTypeData, (String * typeName, MethodInfo * method));
DO_APP_FUNC(0x01C99470, TypeData *, TypeTranslator_GetPrimitiveTypeData_1, (String * typeName, bool nullable, MethodInfo * method));
DO_APP_FUNC(0x01C99720, TypeData *, TypeTranslator_FindPrimitiveTypeData, (String * typeName, MethodInfo * method));
DO_APP_FUNC(0x01C99840, String *, TypeTranslator_GetArrayName, (String * elemName, MethodInfo * method));
DO_APP_FUNC(0x01C99A00, void, TypeTranslator_ParseArrayType, (String * arrayType, String * * type, String * * ns, String * * dimensions, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlAnyAttributeAttribute__ctor, (XmlAnyAttributeAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x00443280, void, XmlAnyElementAttribute__ctor, (XmlAnyElementAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01C99C40, String *, XmlAnyElementAttribute_get_Name, (XmlAnyElementAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, XmlAnyElementAttribute_get_Namespace, (XmlAnyElementAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, int32_t, XmlAnyElementAttribute_get_Order, (XmlAnyElementAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01C99CD0, void, XmlAnyElementAttribute_AddKeyHash, (XmlAnyElementAttribute * __this, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x01C99DB0, XmlAnyElementAttribute *, XmlAnyElementAttributes_get_Item, (XmlAnyElementAttributes * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01C99EA0, int32_t, XmlAnyElementAttributes_Add, (XmlAnyElementAttributes * __this, XmlAnyElementAttribute * attribute, MethodInfo * method));
DO_APP_FUNC(0x01C99F40, void, XmlAnyElementAttributes_AddKeyHash, (XmlAnyElementAttributes * __this, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x01C9A420, int32_t, XmlAnyElementAttributes_get_Order, (XmlAnyElementAttributes * __this, MethodInfo * method));
DO_APP_FUNC(0x01C9A650, void, XmlAnyElementAttributes__ctor, (XmlAnyElementAttributes * __this, MethodInfo * method));
DO_APP_FUNC(0x01C9A660, String *, XmlArrayAttribute_get_ElementName, (XmlArrayAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, XmlSchemaForm__Enum, XmlArrayAttribute_get_Form, (XmlArrayAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0052B580, bool, XmlArrayAttribute_get_IsNullable, (XmlArrayAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, XmlArrayAttribute_get_Namespace, (XmlArrayAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB970, int32_t, XmlArrayAttribute_get_Order, (XmlArrayAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01C9A6F0, void, XmlArrayAttribute_AddKeyHash, (XmlArrayAttribute * __this, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x01C9A8B0, String *, XmlArrayItemAttribute_get_DataType, (XmlArrayItemAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01C9A940, String *, XmlArrayItemAttribute_get_ElementName, (XmlArrayItemAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, XmlSchemaForm__Enum, XmlArrayItemAttribute_get_Form, (XmlArrayItemAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, XmlArrayItemAttribute_get_Namespace, (XmlArrayItemAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A050, bool, XmlArrayItemAttribute_get_IsNullable, (XmlArrayItemAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A070, bool, XmlArrayItemAttribute_get_IsNullableSpecified, (XmlArrayItemAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, Type *, XmlArrayItemAttribute_get_Type, (XmlArrayItemAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x00998570, int32_t, XmlArrayItemAttribute_get_NestingLevel, (XmlArrayItemAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01C9A9D0, void, XmlArrayItemAttribute_AddKeyHash, (XmlArrayItemAttribute * __this, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x01C9AC80, XmlArrayItemAttribute *, XmlArrayItemAttributes_get_Item, (XmlArrayItemAttributes * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01C9AD70, int32_t, XmlArrayItemAttributes_Add, (XmlArrayItemAttributes * __this, XmlArrayItemAttribute * attribute, MethodInfo * method));
DO_APP_FUNC(0x01C9AE10, void, XmlArrayItemAttributes_AddKeyHash, (XmlArrayItemAttributes * __this, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x01C9A650, void, XmlArrayItemAttributes__ctor, (XmlArrayItemAttributes * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, XmlAttributeAttribute__ctor, (XmlAttributeAttribute * __this, String * attributeName, MethodInfo * method));
DO_APP_FUNC(0x01C9B110, String *, XmlAttributeAttribute_get_AttributeName, (XmlAttributeAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01C9B1A0, String *, XmlAttributeAttribute_get_DataType, (XmlAttributeAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, XmlAttributeAttribute_set_DataType, (XmlAttributeAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB970, XmlSchemaForm__Enum, XmlAttributeAttribute_get_Form, (XmlAttributeAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, XmlAttributeAttribute_get_Namespace, (XmlAttributeAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01C9B230, void, XmlAttributeAttribute_AddKeyHash, (XmlAttributeAttribute * __this, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x01C9B4C0, void, XmlAttributeOverrides__ctor, (XmlAttributeOverrides * __this, MethodInfo * method));
DO_APP_FUNC(0x01C9B620, XmlAttributes *, XmlAttributeOverrides_get_Item, (XmlAttributeOverrides * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x01C9B6C0, XmlAttributes *, XmlAttributeOverrides_get_Item_1, (XmlAttributeOverrides * __this, Type * type, String * member, MethodInfo * method));
DO_APP_FUNC(0x01C9B8E0, TypeMember *, XmlAttributeOverrides_GetKey, (XmlAttributeOverrides * __this, Type * type, String * member, MethodInfo * method));
DO_APP_FUNC(0x01C9BA30, void, XmlAttributeOverrides_AddKeyHash, (XmlAttributeOverrides * __this, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x01C9BDB0, void, XmlAttributes__ctor, (XmlAttributes * __this, MethodInfo * method));
DO_APP_FUNC(0x01C9C0C0, void, XmlAttributes__ctor_1, (XmlAttributes * __this, ICustomAttributeProvider * provider, MethodInfo * method));
DO_APP_FUNC(0x002FA280, XmlAnyAttributeAttribute *, XmlAttributes_get_XmlAnyAttribute, (XmlAttributes * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, XmlAnyElementAttributes *, XmlAttributes_get_XmlAnyElements, (XmlAttributes * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, XmlArrayAttribute *, XmlAttributes_get_XmlArray, (XmlAttributes * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, XmlArrayItemAttributes *, XmlAttributes_get_XmlArrayItems, (XmlAttributes * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, XmlAttributeAttribute *, XmlAttributes_get_XmlAttribute, (XmlAttributes * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, XmlChoiceIdentifierAttribute *, XmlAttributes_get_XmlChoiceIdentifier, (XmlAttributes * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, Object *, XmlAttributes_get_XmlDefaultValue, (XmlAttributes * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, XmlElementAttributes *, XmlAttributes_get_XmlElements, (XmlAttributes * __this, MethodInfo * method));
DO_APP_FUNC(0x00585310, bool, XmlAttributes_get_XmlIgnore, (XmlAttributes * __this, MethodInfo * method));
DO_APP_FUNC(0x00DFE800, bool, XmlAttributes_get_Xmlns, (XmlAttributes * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, XmlRootAttribute *, XmlAttributes_get_XmlRoot, (XmlAttributes * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, XmlTextAttribute *, XmlAttributes_get_XmlText, (XmlAttributes * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, XmlTypeAttribute *, XmlAttributes_get_XmlType, (XmlAttributes * __this, MethodInfo * method));
DO_APP_FUNC(0x01C9C940, void, XmlAttributes_AddKeyHash, (XmlAttributes * __this, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x01C9CEB0, Nullable_1_Int32_, XmlAttributes_get_Order, (XmlAttributes * __this, MethodInfo * method));
DO_APP_FUNC(0x01C9D010, int32_t, XmlAttributes_get_SortableOrder, (XmlAttributes * __this, MethodInfo * method));
DO_APP_FUNC(0x01C9D150, String *, XmlChoiceIdentifierAttribute_get_MemberName, (XmlChoiceIdentifierAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01C9D1E0, void, XmlChoiceIdentifierAttribute_AddKeyHash, (XmlChoiceIdentifierAttribute * __this, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x01C9D2B0, String *, XmlCustomFormatter_FromEnum, (int64_t value, String__Array * values, Int64__Array * ids, String * typeName, MethodInfo * method));
DO_APP_FUNC(0x01C9D6D0, String *, XmlCustomFormatter_FromXmlName, (String * name, MethodInfo * method));
DO_APP_FUNC(0x01C9D770, String *, XmlCustomFormatter_FromXmlNCName, (String * ncName, MethodInfo * method));
DO_APP_FUNC(0x01C9D810, String *, XmlCustomFormatter_ToXmlString, (TypeData * type, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01C9E770, Object *, XmlCustomFormatter_FromXmlString, (TypeData * type, String * value, MethodInfo * method));
DO_APP_FUNC(0x01C9F450, void, XmlCustomFormatter__cctor, (MethodInfo * method));
DO_APP_FUNC(0x025A1A00, void, XmlElementAttribute__ctor, (XmlElementAttribute * __this, String * elementName, MethodInfo * method));
DO_APP_FUNC(0x025A1A10, void, XmlElementAttribute__ctor_1, (XmlElementAttribute * __this, String * elementName, Type * type, MethodInfo * method));
DO_APP_FUNC(0x025A1A20, String *, XmlElementAttribute_get_DataType, (XmlElementAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x025A1AB0, String *, XmlElementAttribute_get_ElementName, (XmlElementAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, XmlSchemaForm__Enum, XmlElementAttribute_get_Form, (XmlElementAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, XmlElementAttribute_get_Namespace, (XmlElementAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A050, bool, XmlElementAttribute_get_IsNullable, (XmlElementAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x004E57A0, int32_t, XmlElementAttribute_get_Order, (XmlElementAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, Type *, XmlElementAttribute_get_Type, (XmlElementAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x025A1B40, void, XmlElementAttribute_AddKeyHash, (XmlElementAttribute * __this, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x025A1D20, XmlElementAttribute *, XmlElementAttributes_get_Item, (XmlElementAttributes * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x025A1E10, int32_t, XmlElementAttributes_Add, (XmlElementAttributes * __this, XmlElementAttribute * attribute, MethodInfo * method));
DO_APP_FUNC(0x025A1EB0, void, XmlElementAttributes_AddKeyHash, (XmlElementAttributes * __this, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x025A2100, int32_t, XmlElementAttributes_get_Order, (XmlElementAttributes * __this, MethodInfo * method));
DO_APP_FUNC(0x01C9A650, void, XmlElementAttributes__ctor, (XmlElementAttributes * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, XmlEnumAttribute__ctor, (XmlEnumAttribute * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, XmlEnumAttribute_get_Name, (XmlEnumAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x025A2400, void, XmlEnumAttribute_AddKeyHash, (XmlEnumAttribute * __this, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlIgnoreAttribute__ctor, (XmlIgnoreAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Type *, XmlIncludeAttribute_get_Type, (XmlIncludeAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x00D09510, void, XmlMapping__ctor, (XmlMapping * __this, String * elementName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x002FB990, String *, XmlMapping_get_ElementName, (XmlMapping * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, String *, XmlMapping_get_Namespace, (XmlMapping * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9E0, void, XmlMapping_SetKey, (XmlMapping * __this, String * key, MethodInfo * method));
DO_APP_FUNC(0x002FA280, ObjectMap_1 *, XmlMapping_get_ObjectMap, (XmlMapping * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, XmlMapping_set_ObjectMap, (XmlMapping * __this, ObjectMap_1 * value, MethodInfo * method));
DO_APP_FUNC(0x002FB930, ArrayList *, XmlMapping_get_RelatedMaps, (XmlMapping * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, XmlMapping_set_RelatedMaps, (XmlMapping * __this, ArrayList * value, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, SerializationFormat__Enum, XmlMapping_get_Format, (XmlMapping * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1E0, void, XmlMapping_set_Format, (XmlMapping * __this, SerializationFormat__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, SerializationSource *, XmlMapping_get_Source, (XmlMapping * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ObjectMap_1__ctor, (ObjectMap_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x02119370, int32_t, XmlMembersMapping_get_Count, (XmlMembersMapping * __this, MethodInfo * method));
DO_APP_FUNC(0x003FCB00, bool, XmlMembersMapping_get_HasWrapperElement, (XmlMembersMapping * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlNamespaceDeclarationsAttribute__ctor, (XmlNamespaceDeclarationsAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x025A25A0, void, XmlReflectionImporter__ctor, (XmlReflectionImporter * __this, XmlAttributeOverrides * attributeOverrides, String * defaultNamespace, MethodInfo * method));
DO_APP_FUNC(0x025A29F0, XmlTypeMapping *, XmlReflectionImporter_ImportTypeMapping, (XmlReflectionImporter * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x025A2A10, XmlTypeMapping *, XmlReflectionImporter_ImportTypeMapping_1, (XmlReflectionImporter * __this, Type * type, String * defaultNamespace, MethodInfo * method));
DO_APP_FUNC(0x025A2A30, XmlTypeMapping *, XmlReflectionImporter_ImportTypeMapping_2, (XmlReflectionImporter * __this, Type * type, XmlRootAttribute * root, String * defaultNamespace, MethodInfo * method));
DO_APP_FUNC(0x025A2C00, XmlTypeMapping *, XmlReflectionImporter_ImportTypeMapping_3, (XmlReflectionImporter * __this, TypeData * typeData, XmlRootAttribute * root, String * defaultNamespace, MethodInfo * method));
DO_APP_FUNC(0x025A31B0, XmlTypeMapping *, XmlReflectionImporter_CreateTypeMapping, (XmlReflectionImporter * __this, TypeData * typeData, XmlRootAttribute * root, String * defaultXmlType, String * defaultNamespace, MethodInfo * method));
DO_APP_FUNC(0x025A39D0, XmlTypeMapping *, XmlReflectionImporter_ImportClassMapping, (XmlReflectionImporter * __this, Type * type, XmlRootAttribute * root, String * defaultNamespace, bool isBaseType, MethodInfo * method));
DO_APP_FUNC(0x025A3AC0, XmlTypeMapping *, XmlReflectionImporter_ImportClassMapping_1, (XmlReflectionImporter * __this, TypeData * typeData, XmlRootAttribute * root, String * defaultNamespace, bool isBaseType, MethodInfo * method));
DO_APP_FUNC(0x025A4C60, void, XmlReflectionImporter_RegisterDerivedMap, (XmlReflectionImporter * __this, XmlTypeMapping * map, XmlTypeMapping * derivedMap, MethodInfo * method));
DO_APP_FUNC(0x025A4E00, String *, XmlReflectionImporter_GetTypeNamespace, (XmlReflectionImporter * __this, TypeData * typeData, XmlRootAttribute * root, String * defaultNamespace, MethodInfo * method));
DO_APP_FUNC(0x025A5000, XmlTypeMapping *, XmlReflectionImporter_ImportListMapping, (XmlReflectionImporter * __this, Type * type, XmlRootAttribute * root, String * defaultNamespace, XmlAttributes * atts, int32_t nestingLevel, MethodInfo * method));
DO_APP_FUNC(0x025A50E0, XmlTypeMapping *, XmlReflectionImporter_ImportListMapping_1, (XmlReflectionImporter * __this, TypeData * typeData, XmlRootAttribute * root, String * defaultNamespace, XmlAttributes * atts, int32_t nestingLevel, MethodInfo * method));
DO_APP_FUNC(0x025A6160, XmlTypeMapping *, XmlReflectionImporter_ImportXmlNodeMapping, (XmlReflectionImporter * __this, TypeData * typeData, XmlRootAttribute * root, String * defaultNamespace, MethodInfo * method));
DO_APP_FUNC(0x025A63A0, XmlTypeMapping *, XmlReflectionImporter_ImportPrimitiveMapping, (XmlReflectionImporter * __this, TypeData * typeData, XmlRootAttribute * root, String * defaultNamespace, MethodInfo * method));
DO_APP_FUNC(0x025A6490, XmlTypeMapping *, XmlReflectionImporter_ImportEnumMapping, (XmlReflectionImporter * __this, TypeData * typeData, XmlRootAttribute * root, String * defaultNamespace, MethodInfo * method));
DO_APP_FUNC(0x025A6C20, XmlTypeMapping *, XmlReflectionImporter_ImportXmlSerializableMapping, (XmlReflectionImporter * __this, TypeData * typeData, XmlRootAttribute * root, String * defaultNamespace, MethodInfo * method));
DO_APP_FUNC(0x025A6DB0, void, XmlReflectionImporter_ImportIncludedTypes, (XmlReflectionImporter * __this, Type * type, String * defaultNamespace, MethodInfo * method));
DO_APP_FUNC(0x025A6F30, List_1_System_Xml_Serialization_XmlReflectionMember_ *, XmlReflectionImporter_GetReflectionMembers, (XmlReflectionImporter * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x025A7FF0, XmlTypeMapMember *, XmlReflectionImporter_CreateMapMember, (XmlReflectionImporter * __this, Type * declaringType, XmlReflectionMember * rmember, String * defaultNamespace, MethodInfo * method));
DO_APP_FUNC(0x025A9170, XmlTypeMapElementInfoList *, XmlReflectionImporter_ImportElementInfo, (XmlReflectionImporter * __this, Type * cls, String * defaultName, String * defaultNamespace, Type * defaultType, XmlTypeMapMemberElement * member, XmlAttributes * atts, MethodInfo * method));
DO_APP_FUNC(0x025AA240, XmlTypeMapElementInfoList *, XmlReflectionImporter_ImportAnyElementInfo, (XmlReflectionImporter * __this, String * defaultNamespace, XmlReflectionMember * rmember, XmlTypeMapMemberElement * member, XmlAttributes * atts, MethodInfo * method));
DO_APP_FUNC(0x025AA8D0, void, XmlReflectionImporter_ImportTextElementInfo, (XmlReflectionImporter * __this, XmlTypeMapElementInfoList * list, Type * defaultType, XmlTypeMapMemberElement * member, XmlAttributes * atts, String * defaultNamespace, MethodInfo * method));
DO_APP_FUNC(0x025AAE30, bool, XmlReflectionImporter_CanBeNull, (XmlReflectionImporter * __this, TypeData * type, MethodInfo * method));
DO_APP_FUNC(0x025AAE80, void, XmlReflectionImporter_IncludeType, (XmlReflectionImporter * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x025AB2C0, Object *, XmlReflectionImporter_GetDefaultValue, (XmlReflectionImporter * __this, TypeData * typeData, Object * defaultValue, MethodInfo * method));
DO_APP_FUNC(0x025AB4B0, void, XmlReflectionImporter__cctor, (MethodInfo * method));
DO_APP_FUNC(0x025AB550, void, XmlReflectionImporter_c__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlReflectionImporter_c__ctor, (XmlReflectionImporter_c * __this, MethodInfo * method));
DO_APP_FUNC(0x025AB690, int32_t, XmlReflectionImporter_c__ImportClassMapping_b__28_0, (XmlReflectionImporter_c * __this, XmlReflectionMember * m1, XmlReflectionMember * m2, MethodInfo * method));
DO_APP_FUNC(0x025AB710, void, XmlReflectionMember__ctor, (XmlReflectionMember * __this, String * name, Type * type, XmlAttributes * attributes, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, XmlReflectionMember_get_IsReturnValue, (XmlReflectionMember * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, XmlReflectionMember_get_MemberName, (XmlReflectionMember * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, Type *, XmlReflectionMember_get_MemberType, (XmlReflectionMember * __this, MethodInfo * method));
DO_APP_FUNC(0x025AB720, XmlAttributes *, XmlReflectionMember_get_XmlAttributes, (XmlReflectionMember * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, Type *, XmlReflectionMember_get_DeclaringType, (XmlReflectionMember * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9A0, void, XmlReflectionMember_set_DeclaringType, (XmlReflectionMember * __this, Type * value, MethodInfo * method));
DO_APP_FUNC(0x00447ED0, void, XmlRootAttribute__ctor, (XmlRootAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x025AB880, void, XmlRootAttribute__ctor_1, (XmlRootAttribute * __this, String * elementName, MethodInfo * method));
DO_APP_FUNC(0x025AB890, String *, XmlRootAttribute_get_DataType, (XmlRootAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, XmlRootAttribute_set_DataType, (XmlRootAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x025AB920, String *, XmlRootAttribute_get_ElementName, (XmlRootAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, XmlRootAttribute_set_ElementName, (XmlRootAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0052A030, bool, XmlRootAttribute_get_IsNullable, (XmlRootAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A040, void, XmlRootAttribute_set_IsNullable, (XmlRootAttribute * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, XmlRootAttribute_get_Namespace, (XmlRootAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB10, void, XmlRootAttribute_set_Namespace, (XmlRootAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x025AB9B0, void, XmlRootAttribute_AddKeyHash, (XmlRootAttribute * __this, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, XmlSchemaProviderAttribute__ctor, (XmlSchemaProviderAttribute * __this, String * methodName, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, XmlSchemaProviderAttribute_get_MethodName, (XmlSchemaProviderAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A280, bool, XmlSchemaProviderAttribute_get_IsAny, (XmlSchemaProviderAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x00533150, void, XmlSchemaProviderAttribute_set_IsAny, (XmlSchemaProviderAttribute * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, XmlSerializationCollectionFixupCallback__ctor, (XmlSerializationCollectionFixupCallback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x015FE410, void, XmlSerializationCollectionFixupCallback_Invoke, (XmlSerializationCollectionFixupCallback * __this, Object * collection, Object * collectionItems, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, XmlSerializationCollectionFixupCallback_BeginInvoke, (XmlSerializationCollectionFixupCallback * __this, Object * collection, Object * collectionItems, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, XmlSerializationCollectionFixupCallback_EndInvoke, (XmlSerializationCollectionFixupCallback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, XmlSerializationFixupCallback__ctor, (XmlSerializationFixupCallback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x00673B90, void, XmlSerializationFixupCallback_Invoke, (XmlSerializationFixupCallback * __this, Object * fixup, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, XmlSerializationFixupCallback_BeginInvoke, (XmlSerializationFixupCallback * __this, Object * fixup, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, XmlSerializationFixupCallback_EndInvoke, (XmlSerializationFixupCallback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSerializationGeneratedCode__ctor, (XmlSerializationGeneratedCode * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, XmlSerializationReadCallback__ctor, (XmlSerializationReadCallback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01938310, Object *, XmlSerializationReadCallback_Invoke, (XmlSerializationReadCallback * __this, MethodInfo * method));
DO_APP_FUNC(0x00611B10, IAsyncResult *, XmlSerializationReadCallback_BeginInvoke, (XmlSerializationReadCallback * __this, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, Object *, XmlSerializationReadCallback_EndInvoke, (XmlSerializationReadCallback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x025AC6A0, void, XmlSerializationReader_Initialize, (XmlSerializationReader * __this, XmlReader * reader, XmlSerializer * eventSource, MethodInfo * method));
DO_APP_FUNC(0x025ACAE0, ArrayList *, XmlSerializationReader_EnsureArrayList, (XmlSerializationReader * __this, ArrayList * list, MethodInfo * method));
DO_APP_FUNC(0x025ACC40, Hashtable *, XmlSerializationReader_EnsureHashtable, (XmlSerializationReader * __this, Hashtable * hash, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSerializationReader__ctor, (XmlSerializationReader * __this, MethodInfo * method));
DO_APP_FUNC(0x025ACDB0, XmlDocument *, XmlSerializationReader_get_Document, (XmlSerializationReader * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, XmlReader *, XmlSerializationReader_get_Reader, (XmlSerializationReader * __this, MethodInfo * method));
DO_APP_FUNC(0x025ACF40, void, XmlSerializationReader_AddFixup, (XmlSerializationReader * __this, XmlSerializationReader_CollectionFixup * fixup, MethodInfo * method));
DO_APP_FUNC(0x025AD010, void, XmlSerializationReader_AddFixup_1, (XmlSerializationReader * __this, XmlSerializationReader_Fixup * fixup, MethodInfo * method));
DO_APP_FUNC(0x025AD060, void, XmlSerializationReader_AddFixup_2, (XmlSerializationReader * __this, XmlSerializationReader_CollectionItemFixup * fixup, MethodInfo * method));
DO_APP_FUNC(0x025AD0B0, void, XmlSerializationReader_AddReadCallback, (XmlSerializationReader * __this, String * name, String * ns, Type * type, XmlSerializationReadCallback * read, MethodInfo * method));
DO_APP_FUNC(0x025AD340, void, XmlSerializationReader_AddTarget, (XmlSerializationReader * __this, String * id, Object * o, MethodInfo * method));
DO_APP_FUNC(0x025AD410, String *, XmlSerializationReader_CurrentTag, (XmlSerializationReader * __this, MethodInfo * method));
DO_APP_FUNC(0x025AD5E0, Exception *, XmlSerializationReader_CreateReadOnlyCollectionException, (XmlSerializationReader * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x025AD790, Exception *, XmlSerializationReader_CreateUnknownConstantException, (XmlSerializationReader * __this, String * value, Type * enumType, MethodInfo * method));
DO_APP_FUNC(0x025AD950, Exception *, XmlSerializationReader_CreateUnknownNodeException, (XmlSerializationReader * __this, MethodInfo * method));
DO_APP_FUNC(0x025ADAC0, Exception *, XmlSerializationReader_CreateUnknownTypeException, (XmlSerializationReader * __this, XmlQualifiedName * type, MethodInfo * method));
DO_APP_FUNC(0x025ADE70, Array *, XmlSerializationReader_EnsureArrayIndex, (XmlSerializationReader * __this, Array * a, int32_t index, Type * elementType, MethodInfo * method));
DO_APP_FUNC(0x025ADF00, bool, XmlSerializationReader_GetNullAttr, (XmlSerializationReader * __this, MethodInfo * method));
DO_APP_FUNC(0x025ADFF0, Object *, XmlSerializationReader_GetTarget, (XmlSerializationReader * __this, String * id, MethodInfo * method));
DO_APP_FUNC(0x025AE1C0, bool, XmlSerializationReader_TargetReady, (XmlSerializationReader * __this, String * id, MethodInfo * method));
DO_APP_FUNC(0x025AE1E0, XmlQualifiedName *, XmlSerializationReader_GetXsiType, (XmlSerializationReader * __this, MethodInfo * method));
DO_APP_FUNC(0x025AE620, bool, XmlSerializationReader_IsXmlnsAttribute, (XmlSerializationReader * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x025AE6F0, void, XmlSerializationReader_ParseWsdlArrayType, (XmlSerializationReader * __this, XmlAttribute * attr, MethodInfo * method));
DO_APP_FUNC(0x025AE930, XmlQualifiedName *, XmlSerializationReader_ReadElementQualifiedName, (XmlSerializationReader * __this, MethodInfo * method));
DO_APP_FUNC(0x025AEA90, void, XmlSerializationReader_ReadEndElement, (XmlSerializationReader * __this, MethodInfo * method));
DO_APP_FUNC(0x025AEB60, bool, XmlSerializationReader_ReadNull, (XmlSerializationReader * __this, MethodInfo * method));
DO_APP_FUNC(0x025AED60, XmlQualifiedName *, XmlSerializationReader_ReadNullableQualifiedName, (XmlSerializationReader * __this, MethodInfo * method));
DO_APP_FUNC(0x025AED90, String *, XmlSerializationReader_ReadNullableString, (XmlSerializationReader * __this, MethodInfo * method));
DO_APP_FUNC(0x025AEDE0, Object *, XmlSerializationReader_ReadReferencedElement, (XmlSerializationReader * __this, MethodInfo * method));
DO_APP_FUNC(0x025AEE50, XmlSerializationReader_WriteCallbackInfo *, XmlSerializationReader_GetCallbackInfo, (XmlSerializationReader * __this, XmlQualifiedName * qname, MethodInfo * method));
DO_APP_FUNC(0x025AF040, Object *, XmlSerializationReader_ReadReferencedElement_1, (XmlSerializationReader * __this, String * name, String * ns, MethodInfo * method));
DO_APP_FUNC(0x025AF3D0, bool, XmlSerializationReader_ReadList, (XmlSerializationReader * __this, Object * * resultList, MethodInfo * method));
DO_APP_FUNC(0x025AFAF0, void, XmlSerializationReader_ReadReferencedElements, (XmlSerializationReader * __this, MethodInfo * method));
DO_APP_FUNC(0x025B0860, Object *, XmlSerializationReader_ReadReferencingElement, (XmlSerializationReader * __this, String * * fixupReference, MethodInfo * method));
DO_APP_FUNC(0x025B08F0, Object *, XmlSerializationReader_ReadReferencingElement_1, (XmlSerializationReader * __this, String * name, String * ns, String * * fixupReference, MethodInfo * method));
DO_APP_FUNC(0x025B0910, Object *, XmlSerializationReader_ReadReferencingElement_2, (XmlSerializationReader * __this, String * name, String * ns, bool elementCanBeType, String * * fixupReference, MethodInfo * method));
DO_APP_FUNC(0x025B0D30, IXmlSerializable *, XmlSerializationReader_ReadSerializable, (XmlSerializationReader * __this, IXmlSerializable * serializable, MethodInfo * method));
DO_APP_FUNC(0x025B0F10, Object *, XmlSerializationReader_ReadTypedPrimitive, (XmlSerializationReader * __this, XmlQualifiedName * type, MethodInfo * method));
DO_APP_FUNC(0x025B0F20, Object *, XmlSerializationReader_ReadTypedPrimitive_1, (XmlSerializationReader * __this, XmlQualifiedName * qname, bool reportUnknown, MethodInfo * method));
DO_APP_FUNC(0x025B1980, XmlNode *, XmlSerializationReader_ReadXmlNode, (XmlSerializationReader * __this, bool wrapped, MethodInfo * method));
DO_APP_FUNC(0x025B19F0, XmlDocument *, XmlSerializationReader_ReadXmlDocument, (XmlSerializationReader * __this, bool wrapped, MethodInfo * method));
DO_APP_FUNC(0x025B1C20, Array *, XmlSerializationReader_ShrinkArray, (XmlSerializationReader * __this, Array * a, int32_t length, Type * elementType, bool isNullable, MethodInfo * method));
DO_APP_FUNC(0x025B1CE0, XmlQualifiedName *, XmlSerializationReader_ToXmlQualifiedName, (XmlSerializationReader * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x025B2020, void, XmlSerializationReader_UnknownAttribute, (XmlSerializationReader * __this, Object * o, XmlAttribute * attr, String * qnames, MethodInfo * method));
DO_APP_FUNC(0x025B23E0, void, XmlSerializationReader_UnknownElement, (XmlSerializationReader * __this, Object * o, XmlElement * elem, String * qnames, MethodInfo * method));
DO_APP_FUNC(0x025B27A0, void, XmlSerializationReader_UnknownNode, (XmlSerializationReader * __this, Object * o, MethodInfo * method));
DO_APP_FUNC(0x025B2810, void, XmlSerializationReader_UnknownNode_1, (XmlSerializationReader * __this, Object * o, String * qnames, MethodInfo * method));
DO_APP_FUNC(0x025B2880, void, XmlSerializationReader_OnUnknownNode, (XmlSerializationReader * __this, XmlNode * node, Object * o, String * qnames, MethodInfo * method));
DO_APP_FUNC(0x025B2DE0, void, XmlSerializationReader_UnreferencedObject, (XmlSerializationReader * __this, String * id, Object * o, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSerializationReader_WriteCallbackInfo__ctor, (XmlSerializationReader_WriteCallbackInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025B2FE0, void, XmlSerializationReader_CollectionFixup__ctor, (XmlSerializationReader_CollectionFixup * __this, Object * collection, XmlSerializationCollectionFixupCallback * callback, String * id, MethodInfo * method));
DO_APP_FUNC(0x002FA280, XmlSerializationCollectionFixupCallback *, XmlSerializationReader_CollectionFixup_get_Callback, (XmlSerializationReader_CollectionFixup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Object *, XmlSerializationReader_CollectionFixup_get_Collection, (XmlSerializationReader_CollectionFixup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, Object *, XmlSerializationReader_CollectionFixup_get_Id, (XmlSerializationReader_CollectionFixup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, Object *, XmlSerializationReader_CollectionFixup_get_CollectionItems, (XmlSerializationReader_CollectionFixup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, XmlSerializationReader_CollectionFixup_set_CollectionItems, (XmlSerializationReader_CollectionFixup * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x025B2FF0, void, XmlSerializationReader_Fixup__ctor, (XmlSerializationReader_Fixup * __this, Object * o, XmlSerializationFixupCallback * callback, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x002FB950, XmlSerializationFixupCallback *, XmlSerializationReader_Fixup_get_Callback, (XmlSerializationReader_Fixup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String__Array *, XmlSerializationReader_Fixup_get_Ids, (XmlSerializationReader_Fixup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Object *, XmlSerializationReader_Fixup_get_Source, (XmlSerializationReader_Fixup * __this, MethodInfo * method));
DO_APP_FUNC(0x0199E410, void, XmlSerializationReader_CollectionItemFixup__ctor, (XmlSerializationReader_CollectionItemFixup * __this, Array * list, int32_t index, String * id, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Array *, XmlSerializationReader_CollectionItemFixup_get_Collection, (XmlSerializationReader_CollectionItemFixup * __this, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, XmlSerializationReader_CollectionItemFixup_get_Index, (XmlSerializationReader_CollectionItemFixup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, XmlSerializationReader_CollectionItemFixup_get_Id, (XmlSerializationReader_CollectionItemFixup * __this, MethodInfo * method));
DO_APP_FUNC(0x025B30A0, void, XmlSerializationReaderInterpreter__ctor, (XmlSerializationReaderInterpreter * __this, XmlMapping * typeMap, MethodInfo * method));
DO_APP_FUNC(0x025B30D0, void, XmlSerializationReaderInterpreter_InitCallbacks, (XmlSerializationReaderInterpreter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSerializationReaderInterpreter_InitIDs, (XmlSerializationReaderInterpreter * __this, MethodInfo * method));
DO_APP_FUNC(0x025B3550, Object *, XmlSerializationReaderInterpreter_ReadRoot, (XmlSerializationReaderInterpreter * __this, MethodInfo * method));
DO_APP_FUNC(0x025B36E0, Object *, XmlSerializationReaderInterpreter_ReadEncodedObject, (XmlSerializationReaderInterpreter * __this, XmlTypeMapping * typeMap, MethodInfo * method));
DO_APP_FUNC(0x025B38F0, Object *, XmlSerializationReaderInterpreter_ReadMessage, (XmlSerializationReaderInterpreter * __this, XmlMembersMapping * typeMap, MethodInfo * method));
DO_APP_FUNC(0x025B3EA0, Object *, XmlSerializationReaderInterpreter_ReadRoot_1, (XmlSerializationReaderInterpreter * __this, XmlTypeMapping * rootMap, MethodInfo * method));
DO_APP_FUNC(0x025B4060, Object *, XmlSerializationReaderInterpreter_ReadObject, (XmlSerializationReaderInterpreter * __this, XmlTypeMapping * typeMap, bool isNullable, bool checkType, MethodInfo * method));
DO_APP_FUNC(0x025B4280, Object *, XmlSerializationReaderInterpreter_ReadClassInstance, (XmlSerializationReaderInterpreter * __this, XmlTypeMapping * typeMap, bool isNullable, bool checkType, MethodInfo * method));
DO_APP_FUNC(0x025B45F0, void, XmlSerializationReaderInterpreter_ReadClassInstanceMembers, (XmlSerializationReaderInterpreter * __this, XmlTypeMapping * typeMap, Object * ob, MethodInfo * method));
DO_APP_FUNC(0x025B4700, void, XmlSerializationReaderInterpreter_ReadAttributeMembers, (XmlSerializationReaderInterpreter * __this, ClassMap * map, Object * ob, bool isValueList, MethodInfo * method));
DO_APP_FUNC(0x025B4E20, void, XmlSerializationReaderInterpreter_ReadMembers, (XmlSerializationReaderInterpreter * __this, ClassMap * map, Object * ob, bool isValueList, bool readBySoapOrder, MethodInfo * method));
DO_APP_FUNC(0x025B7310, void, XmlSerializationReaderInterpreter_SetListMembersDefaults, (XmlSerializationReaderInterpreter * __this, ClassMap * map, Object * ob, bool isValueList, MethodInfo * method));
DO_APP_FUNC(0x025B7530, void, XmlSerializationReaderInterpreter_FixupMembers, (XmlSerializationReaderInterpreter * __this, ClassMap * map, Object * obfixup, bool isValueList, MethodInfo * method));
DO_APP_FUNC(0x025B27A0, void, XmlSerializationReaderInterpreter_ProcessUnknownAttribute, (XmlSerializationReaderInterpreter * __this, Object * target, MethodInfo * method));
DO_APP_FUNC(0x025B27A0, void, XmlSerializationReaderInterpreter_ProcessUnknownElement, (XmlSerializationReaderInterpreter * __this, Object * target, MethodInfo * method));
DO_APP_FUNC(0x025B7880, bool, XmlSerializationReaderInterpreter_IsReadOnly, (XmlSerializationReaderInterpreter * __this, XmlTypeMapMember * member, TypeData * memType, Object * ob, bool isValueList, MethodInfo * method));
DO_APP_FUNC(0x025B7920, void, XmlSerializationReaderInterpreter_SetMemberValue, (XmlSerializationReaderInterpreter * __this, XmlTypeMapMember * member, Object * ob, Object * value, bool isValueList, MethodInfo * method));
DO_APP_FUNC(0x025B7B30, void, XmlSerializationReaderInterpreter_SetMemberValueFromAttr, (XmlSerializationReaderInterpreter * __this, XmlTypeMapMember * member, Object * ob, Object * value, bool isValueList, MethodInfo * method));
DO_APP_FUNC(0x025B7C90, Object *, XmlSerializationReaderInterpreter_GetMemberValue, (XmlSerializationReaderInterpreter * __this, XmlTypeMapMember * member, Object * ob, bool isValueList, MethodInfo * method));
DO_APP_FUNC(0x025B7DC0, Object *, XmlSerializationReaderInterpreter_ReadObjectElement, (XmlSerializationReaderInterpreter * __this, XmlTypeMapElementInfo * elem, MethodInfo * method));
DO_APP_FUNC(0x025B7FC0, Object *, XmlSerializationReaderInterpreter_ReadPrimitiveValue, (XmlSerializationReaderInterpreter * __this, XmlTypeMapElementInfo * elem, MethodInfo * method));
DO_APP_FUNC(0x025B8150, Object *, XmlSerializationReaderInterpreter_GetValueFromXmlString, (XmlSerializationReaderInterpreter * __this, String * value, TypeData * typeData, XmlTypeMapping * typeMap, MethodInfo * method));
DO_APP_FUNC(0x025B82B0, Object *, XmlSerializationReaderInterpreter_ReadListElement, (XmlSerializationReaderInterpreter * __this, XmlTypeMapping * typeMap, bool isNullable, Object * list, bool canCreateInstance, MethodInfo * method));
DO_APP_FUNC(0x025B87A0, Object *, XmlSerializationReaderInterpreter_ReadListString, (XmlSerializationReaderInterpreter * __this, XmlTypeMapping * typeMap, String * values, MethodInfo * method));
DO_APP_FUNC(0x025B8B10, void, XmlSerializationReaderInterpreter_AddListValue, (XmlSerializationReaderInterpreter * __this, TypeData * listType, Object * * list, int32_t index, Object * value, bool canCreateInstance, MethodInfo * method));
DO_APP_FUNC(0x025B8F00, Object *, XmlSerializationReaderInterpreter_CreateInstance, (Type * type, bool nonPublic, MethodInfo * method));
DO_APP_FUNC(0x025B8F10, Object *, XmlSerializationReaderInterpreter_CreateInstance_1, (XmlSerializationReaderInterpreter * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x025B8FE0, Object *, XmlSerializationReaderInterpreter_CreateList, (XmlSerializationReaderInterpreter * __this, Type * listType, MethodInfo * method));
DO_APP_FUNC(0x025B90D0, Object *, XmlSerializationReaderInterpreter_InitializeList, (XmlSerializationReaderInterpreter * __this, TypeData * listType, MethodInfo * method));
DO_APP_FUNC(0x025B91B0, void, XmlSerializationReaderInterpreter_FillList, (XmlSerializationReaderInterpreter * __this, Object * list, Object * items, MethodInfo * method));
DO_APP_FUNC(0x025B91D0, void, XmlSerializationReaderInterpreter_CopyEnumerableList, (XmlSerializationReaderInterpreter * __this, Object * source, Object * dest, MethodInfo * method));
DO_APP_FUNC(0x025B9550, Object *, XmlSerializationReaderInterpreter_ReadXmlNodeElement, (XmlSerializationReaderInterpreter * __this, XmlTypeMapping * typeMap, bool isNullable, MethodInfo * method));
DO_APP_FUNC(0x025B9580, Object *, XmlSerializationReaderInterpreter_ReadXmlNode, (XmlSerializationReaderInterpreter * __this, TypeData * type, bool wrapped, MethodInfo * method));
DO_APP_FUNC(0x025B9670, Object *, XmlSerializationReaderInterpreter_ReadPrimitiveElement, (XmlSerializationReaderInterpreter * __this, XmlTypeMapping * typeMap, bool isNullable, MethodInfo * method));
DO_APP_FUNC(0x025B9830, Object *, XmlSerializationReaderInterpreter_ReadEnumElement, (XmlSerializationReaderInterpreter * __this, XmlTypeMapping * typeMap, bool isNullable, MethodInfo * method));
DO_APP_FUNC(0x025B98B0, Object *, XmlSerializationReaderInterpreter_GetEnumValue, (XmlSerializationReaderInterpreter * __this, XmlTypeMapping * typeMap, String * val, MethodInfo * method));
DO_APP_FUNC(0x025B9AC0, Object *, XmlSerializationReaderInterpreter_ReadXmlSerializableElement, (XmlSerializationReaderInterpreter * __this, XmlTypeMapping * typeMap, bool isNullable, MethodInfo * method));
DO_APP_FUNC(0x025B9D60, void, XmlSerializationReaderInterpreter__cctor, (MethodInfo * method));
DO_APP_FUNC(0x010415E0, void, XmlSerializationReaderInterpreter_FixupCallbackInfo__ctor, (XmlSerializationReaderInterpreter_FixupCallbackInfo * __this, XmlSerializationReaderInterpreter * sri, ClassMap * map, bool isValueList, MethodInfo * method));
DO_APP_FUNC(0x025B9EE0, void, XmlSerializationReaderInterpreter_FixupCallbackInfo_FixupMembers, (XmlSerializationReaderInterpreter_FixupCallbackInfo * __this, Object * fixup, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, XmlSerializationReaderInterpreter_ReaderCallbackInfo__ctor, (XmlSerializationReaderInterpreter_ReaderCallbackInfo * __this, XmlSerializationReaderInterpreter * sri, XmlTypeMapping * typeMap, MethodInfo * method));
DO_APP_FUNC(0x025B9F20, Object *, XmlSerializationReaderInterpreter_ReaderCallbackInfo_ReadObject, (XmlSerializationReaderInterpreter_ReaderCallbackInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, XmlSerializationWriteCallback__ctor, (XmlSerializationWriteCallback * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x00673B90, void, XmlSerializationWriteCallback_Invoke, (XmlSerializationWriteCallback * __this, Object * o, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, XmlSerializationWriteCallback_BeginInvoke, (XmlSerializationWriteCallback * __this, Object * o, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, XmlSerializationWriteCallback_EndInvoke, (XmlSerializationWriteCallback * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x025B9F60, void, XmlSerializationWriter__ctor, (XmlSerializationWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x025BA0C0, void, XmlSerializationWriter_Initialize, (XmlSerializationWriter * __this, XmlWriter * writer, XmlSerializerNamespaces * nss, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, XmlWriter *, XmlSerializationWriter_get_Writer, (XmlSerializationWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x025BA340, void, XmlSerializationWriter_AddWriteCallback, (XmlSerializationWriter * __this, Type * type, String * typeName, String * typeNs, XmlSerializationWriteCallback * callback, MethodInfo * method));
DO_APP_FUNC(0x025BA5D0, Exception *, XmlSerializationWriter_CreateUnknownAnyElementException, (XmlSerializationWriter * __this, String * name, String * ns, MethodInfo * method));
DO_APP_FUNC(0x025BA790, Exception *, XmlSerializationWriter_CreateUnknownTypeException, (XmlSerializationWriter * __this, Object * o, MethodInfo * method));
DO_APP_FUNC(0x025BA7D0, Exception *, XmlSerializationWriter_CreateUnknownTypeException_1, (XmlSerializationWriter * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x025BA980, String *, XmlSerializationWriter_FromXmlQualifiedName, (XmlSerializationWriter * __this, XmlQualifiedName * xmlQualifiedName, MethodInfo * method));
DO_APP_FUNC(0x025BAA90, String *, XmlSerializationWriter_GetId, (XmlSerializationWriter * __this, Object * o, bool addToReferencesList, MethodInfo * method));
DO_APP_FUNC(0x025BACC0, bool, XmlSerializationWriter_AlreadyQueued, (XmlSerializationWriter * __this, Object * ob, MethodInfo * method));
DO_APP_FUNC(0x025BAD00, String *, XmlSerializationWriter_GetNamespacePrefix, (XmlSerializationWriter * __this, String * ns, MethodInfo * method));
DO_APP_FUNC(0x025BAE90, String *, XmlSerializationWriter_GetQualifiedName, (XmlSerializationWriter * __this, String * name, String * ns, MethodInfo * method));
DO_APP_FUNC(0x025BB130, void, XmlSerializationWriter_TopLevelElement, (XmlSerializationWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x025BB140, void, XmlSerializationWriter_WriteAttribute, (XmlSerializationWriter * __this, String * localName, String * ns, String * value, MethodInfo * method));
DO_APP_FUNC(0x025BB1C0, void, XmlSerializationWriter_WriteAttribute_1, (XmlSerializationWriter * __this, String * prefix, String * localName, String * ns, String * value, MethodInfo * method));
DO_APP_FUNC(0x025BB240, void, XmlSerializationWriter_WriteXmlNode, (XmlSerializationWriter * __this, XmlNode * node, MethodInfo * method));
DO_APP_FUNC(0x025BB3B0, void, XmlSerializationWriter_WriteElementEncoded, (XmlSerializationWriter * __this, XmlNode * node, String * name, String * ns, bool isNullable, bool any, MethodInfo * method));
DO_APP_FUNC(0x025BB520, void, XmlSerializationWriter_WriteElementLiteral, (XmlSerializationWriter * __this, XmlNode * node, String * name, String * ns, bool isNullable, bool any, MethodInfo * method));
DO_APP_FUNC(0x025BB690, void, XmlSerializationWriter_WriteElementQualifiedName, (XmlSerializationWriter * __this, String * localName, String * ns, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x025BB6B0, void, XmlSerializationWriter_WriteElementQualifiedName_1, (XmlSerializationWriter * __this, String * localName, String * ns, XmlQualifiedName * value, XmlQualifiedName * xsiType, MethodInfo * method));
DO_APP_FUNC(0x025BB850, void, XmlSerializationWriter_WriteElementString, (XmlSerializationWriter * __this, String * localName, String * ns, String * value, MethodInfo * method));
DO_APP_FUNC(0x025BB870, void, XmlSerializationWriter_WriteElementString_1, (XmlSerializationWriter * __this, String * localName, String * ns, String * value, XmlQualifiedName * xsiType, MethodInfo * method));
DO_APP_FUNC(0x01706DA0, void, XmlSerializationWriter_WriteEndElement, (XmlSerializationWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x025BBA60, void, XmlSerializationWriter_WriteEndElement_1, (XmlSerializationWriter * __this, Object * o, MethodInfo * method));
DO_APP_FUNC(0x025BBAC0, void, XmlSerializationWriter_WriteNamespaceDeclarations, (XmlSerializationWriter * __this, XmlSerializerNamespaces * xmlns, MethodInfo * method));
DO_APP_FUNC(0x025BBE50, void, XmlSerializationWriter_WriteNullableQualifiedNameEncoded, (XmlSerializationWriter * __this, String * name, String * ns, XmlQualifiedName * value, XmlQualifiedName * xsiType, MethodInfo * method));
DO_APP_FUNC(0x025BBF50, void, XmlSerializationWriter_WriteNullableQualifiedNameLiteral, (XmlSerializationWriter * __this, String * name, String * ns, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x025BC050, void, XmlSerializationWriter_WriteNullableStringEncoded, (XmlSerializationWriter * __this, String * name, String * ns, String * value, XmlQualifiedName * xsiType, MethodInfo * method));
DO_APP_FUNC(0x025BC070, void, XmlSerializationWriter_WriteNullableStringLiteral, (XmlSerializationWriter * __this, String * name, String * ns, String * value, MethodInfo * method));
DO_APP_FUNC(0x025BC0A0, void, XmlSerializationWriter_WriteNullTagEncoded, (XmlSerializationWriter * __this, String * name, String * ns, MethodInfo * method));
DO_APP_FUNC(0x025BC1F0, void, XmlSerializationWriter_WriteNullTagLiteral, (XmlSerializationWriter * __this, String * name, String * ns, MethodInfo * method));
DO_APP_FUNC(0x025BC340, void, XmlSerializationWriter_WritePotentiallyReferencingElement, (XmlSerializationWriter * __this, String * n, String * ns, Object * o, Type * ambientType, bool suppressReference, bool isNullable, MethodInfo * method));
DO_APP_FUNC(0x025BC860, void, XmlSerializationWriter_WriteReferencedElements, (XmlSerializationWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x025BCAE0, bool, XmlSerializationWriter_IsPrimitiveArray, (XmlSerializationWriter * __this, TypeData * td, MethodInfo * method));
DO_APP_FUNC(0x025BCC10, void, XmlSerializationWriter_WriteArray, (XmlSerializationWriter * __this, Object * o, TypeData * td, MethodInfo * method));
DO_APP_FUNC(0x025BCF70, void, XmlSerializationWriter_WriteReferencingElement, (XmlSerializationWriter * __this, String * n, String * ns, Object * o, bool isNullable, MethodInfo * method));
DO_APP_FUNC(0x025BD170, void, XmlSerializationWriter_CheckReferenceQueue, (XmlSerializationWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x025BD2F0, void, XmlSerializationWriter_WriteSerializable, (XmlSerializationWriter * __this, IXmlSerializable * serializable, String * name, String * ns, bool isNullable, MethodInfo * method));
DO_APP_FUNC(0x025BD320, void, XmlSerializationWriter_WriteSerializable_1, (XmlSerializationWriter * __this, IXmlSerializable * serializable, String * name, String * ns, bool isNullable, bool wrapped, MethodInfo * method));
DO_APP_FUNC(0x025BD450, void, XmlSerializationWriter_WriteStartDocument, (XmlSerializationWriter * __this, MethodInfo * method));
DO_APP_FUNC(0x025BD4B0, void, XmlSerializationWriter_WriteStartElement, (XmlSerializationWriter * __this, String * name, String * ns, MethodInfo * method));
DO_APP_FUNC(0x025BD4E0, void, XmlSerializationWriter_WriteStartElement_1, (XmlSerializationWriter * __this, String * name, String * ns, bool writePrefixed, MethodInfo * method));
DO_APP_FUNC(0x025BD510, void, XmlSerializationWriter_WriteStartElement_2, (XmlSerializationWriter * __this, String * name, String * ns, Object * o, MethodInfo * method));
DO_APP_FUNC(0x025BD540, void, XmlSerializationWriter_WriteStartElement_3, (XmlSerializationWriter * __this, String * name, String * ns, Object * o, bool writePrefixed, MethodInfo * method));
DO_APP_FUNC(0x025BD570, void, XmlSerializationWriter_WriteStartElement_4, (XmlSerializationWriter * __this, String * name, String * ns, Object * o, bool writePrefixed, ICollection * namespaces, MethodInfo * method));
DO_APP_FUNC(0x025BDBA0, void, XmlSerializationWriter_WriteTypedPrimitive, (XmlSerializationWriter * __this, String * name, String * ns, Object * o, bool xsiType, MethodInfo * method));
DO_APP_FUNC(0x025BDF20, void, XmlSerializationWriter_WriteValue, (XmlSerializationWriter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x025BDF60, void, XmlSerializationWriter_WriteXmlAttribute, (XmlSerializationWriter * __this, XmlNode * node, Object * container, MethodInfo * method));
DO_APP_FUNC(0x025BE260, void, XmlSerializationWriter_WriteXsiType, (XmlSerializationWriter * __this, String * name, String * ns, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSerializationWriter_WriteCallbackInfo__ctor, (XmlSerializationWriter_WriteCallbackInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x025BE360, void, XmlSerializationWriterInterpreter__ctor, (XmlSerializationWriterInterpreter * __this, XmlMapping * typeMap, MethodInfo * method));
DO_APP_FUNC(0x025BE4D0, void, XmlSerializationWriterInterpreter_InitCallbacks, (XmlSerializationWriterInterpreter * __this, MethodInfo * method));
DO_APP_FUNC(0x025BEA50, void, XmlSerializationWriterInterpreter_WriteRoot, (XmlSerializationWriterInterpreter * __this, Object * ob, MethodInfo * method));
DO_APP_FUNC(0x025BED30, void, XmlSerializationWriterInterpreter_WriteObject, (XmlSerializationWriterInterpreter * __this, XmlTypeMapping * typeMap, Object * ob, String * element, String * namesp, bool isNullable, bool needType, bool writeWrappingElem, MethodInfo * method));
DO_APP_FUNC(0x025BF390, void, XmlSerializationWriterInterpreter_WriteMessage, (XmlSerializationWriterInterpreter * __this, XmlMembersMapping * membersMap, Object__Array * parameters, MethodInfo * method));
DO_APP_FUNC(0x025BF5D0, void, XmlSerializationWriterInterpreter_WriteObjectElement, (XmlSerializationWriterInterpreter * __this, XmlTypeMapping * typeMap, Object * ob, String * element, String * namesp, MethodInfo * method));
DO_APP_FUNC(0x025BF770, void, XmlSerializationWriterInterpreter_WriteObjectElementAttributes, (XmlSerializationWriterInterpreter * __this, XmlTypeMapping * typeMap, Object * ob, MethodInfo * method));
DO_APP_FUNC(0x025BF880, void, XmlSerializationWriterInterpreter_WriteObjectElementElements, (XmlSerializationWriterInterpreter * __this, XmlTypeMapping * typeMap, Object * ob, MethodInfo * method));
DO_APP_FUNC(0x025BF990, void, XmlSerializationWriterInterpreter_WriteMembers, (XmlSerializationWriterInterpreter * __this, ClassMap * map, Object * ob, bool isValueList, MethodInfo * method));
DO_APP_FUNC(0x025BF9F0, void, XmlSerializationWriterInterpreter_WriteAttributeMembers, (XmlSerializationWriterInterpreter * __this, ClassMap * map, Object * ob, bool isValueList, MethodInfo * method));
DO_APP_FUNC(0x025BFF50, void, XmlSerializationWriterInterpreter_WriteElementMembers, (XmlSerializationWriterInterpreter * __this, ClassMap * map, Object * ob, bool isValueList, MethodInfo * method));
DO_APP_FUNC(0x025C03E0, Object *, XmlSerializationWriterInterpreter_GetMemberValue, (XmlSerializationWriterInterpreter * __this, XmlTypeMapMember * member, Object * ob, bool isValueList, MethodInfo * method));
DO_APP_FUNC(0x025C0510, bool, XmlSerializationWriterInterpreter_MemberHasValue, (XmlSerializationWriterInterpreter * __this, XmlTypeMapMember * member, Object * ob, bool isValueList, MethodInfo * method));
DO_APP_FUNC(0x025C07B0, void, XmlSerializationWriterInterpreter_WriteMemberElement, (XmlSerializationWriterInterpreter * __this, XmlTypeMapElementInfo * elem, Object * memberValue, MethodInfo * method));
DO_APP_FUNC(0x025C0D80, Object *, XmlSerializationWriterInterpreter_ImplicitConvert, (Object * obj, Type * type, MethodInfo * method));
DO_APP_FUNC(0x025C1120, void, XmlSerializationWriterInterpreter_WritePrimitiveValueLiteral, (XmlSerializationWriterInterpreter * __this, Object * memberValue, String * name, String * ns, XmlTypeMapping * mappedType, TypeData * typeData, bool wrapped, bool isNullable, MethodInfo * method));
DO_APP_FUNC(0x025C1440, void, XmlSerializationWriterInterpreter_WritePrimitiveValueEncoded, (XmlSerializationWriterInterpreter * __this, Object * memberValue, String * name, String * ns, XmlQualifiedName * xsiType, XmlTypeMapping * mappedType, TypeData * typeData, bool wrapped, bool isNullable, MethodInfo * method));
DO_APP_FUNC(0x025C1780, void, XmlSerializationWriterInterpreter_WriteListElement, (XmlSerializationWriterInterpreter * __this, XmlTypeMapping * typeMap, Object * ob, String * element, String * namesp, MethodInfo * method));
DO_APP_FUNC(0x025C1AE0, void, XmlSerializationWriterInterpreter_WriteListContent, (XmlSerializationWriterInterpreter * __this, Object * container, TypeData * listType, ListMap * map, Object * ob, StringBuilder * targetString, MethodInfo * method));
DO_APP_FUNC(0x025C2200, int32_t, XmlSerializationWriterInterpreter_GetListCount, (XmlSerializationWriterInterpreter * __this, TypeData * listType, Object * ob, MethodInfo * method));
DO_APP_FUNC(0x025C23E0, void, XmlSerializationWriterInterpreter_WriteAnyElementContent, (XmlSerializationWriterInterpreter * __this, XmlTypeMapMemberAnyElement * member, Object * memberValue, MethodInfo * method));
DO_APP_FUNC(0x025C28F0, void, XmlSerializationWriterInterpreter_WritePrimitiveElement, (XmlSerializationWriterInterpreter * __this, XmlTypeMapping * typeMap, Object * ob, String * element, String * namesp, MethodInfo * method));
DO_APP_FUNC(0x025C2950, void, XmlSerializationWriterInterpreter_WriteEnumElement, (XmlSerializationWriterInterpreter * __this, XmlTypeMapping * typeMap, Object * ob, String * element, String * namesp, MethodInfo * method));
DO_APP_FUNC(0x025C2990, String *, XmlSerializationWriterInterpreter_GetStringValue, (XmlSerializationWriterInterpreter * __this, XmlTypeMapping * typeMap, TypeData * type, Object * value, MethodInfo * method));
DO_APP_FUNC(0x025C2C50, String *, XmlSerializationWriterInterpreter_GetEnumXmlValue, (XmlSerializationWriterInterpreter * __this, XmlTypeMapping * typeMap, Object * ob, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, XmlSerializationWriterInterpreter_CallbackInfo__ctor, (XmlSerializationWriterInterpreter_CallbackInfo * __this, XmlSerializationWriterInterpreter * swi, XmlTypeMapping * typeMap, MethodInfo * method));
DO_APP_FUNC(0x01949E30, void, XmlSerializationWriterInterpreter_CallbackInfo_WriteObject, (XmlSerializationWriterInterpreter_CallbackInfo * __this, Object * ob, MethodInfo * method));
DO_APP_FUNC(0x01949E90, void, XmlSerializationWriterInterpreter_CallbackInfo_WriteEnum, (XmlSerializationWriterInterpreter_CallbackInfo * __this, Object * ob, MethodInfo * method));
DO_APP_FUNC(0x01949EF0, void, XmlSerializer__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0194A0D0, void, XmlSerializer__ctor, (XmlSerializer * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x0194A100, void, XmlSerializer__ctor_1, (XmlSerializer * __this, Type * type, XmlAttributeOverrides * overrides, Type__Array * extraTypes, XmlRootAttribute * root, String * defaultNamespace, MethodInfo * method));
DO_APP_FUNC(0x002FB930, XmlMapping *, XmlSerializer_get_Mapping, (XmlSerializer * __this, MethodInfo * method));
DO_APP_FUNC(0x0194A350, void, XmlSerializer_OnUnknownAttribute, (XmlSerializer * __this, XmlAttributeEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x0194A370, void, XmlSerializer_OnUnknownElement, (XmlSerializer * __this, XmlElementEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x0194A390, void, XmlSerializer_OnUnknownNode, (XmlSerializer * __this, XmlNodeEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x0194A3B0, void, XmlSerializer_OnUnreferencedObject, (XmlSerializer * __this, UnreferencedObjectEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x0194A3D0, XmlSerializationReader *, XmlSerializer_CreateReader, (XmlSerializer * __this, MethodInfo * method));
DO_APP_FUNC(0x0194A420, XmlSerializationWriter *, XmlSerializer_CreateWriter, (XmlSerializer * __this, MethodInfo * method));
DO_APP_FUNC(0x0194A470, Object *, XmlSerializer_Deserialize, (XmlSerializer * __this, TextReader * textReader, MethodInfo * method));
DO_APP_FUNC(0x0194A5F0, Object *, XmlSerializer_Deserialize_1, (XmlSerializer * __this, XmlReader * xmlReader, MethodInfo * method));
DO_APP_FUNC(0x0194A7B0, Object *, XmlSerializer_Deserialize_2, (XmlSerializer * __this, XmlSerializationReader * reader, MethodInfo * method));
DO_APP_FUNC(0x0194AA00, void, XmlSerializer_Serialize, (XmlSerializer * __this, Object * o, XmlSerializationWriter * writer, MethodInfo * method));
DO_APP_FUNC(0x0194AC50, void, XmlSerializer_Serialize_1, (XmlSerializer * __this, Stream * stream, Object * o, MethodInfo * method));
DO_APP_FUNC(0x0194AE20, void, XmlSerializer_Serialize_2, (XmlSerializer * __this, TextWriter * textWriter, Object * o, MethodInfo * method));
DO_APP_FUNC(0x0194AFB0, void, XmlSerializer_Serialize_3, (XmlSerializer * __this, XmlWriter * xmlWriter, Object * o, MethodInfo * method));
DO_APP_FUNC(0x0194AFD0, void, XmlSerializer_Serialize_4, (XmlSerializer * __this, XmlWriter * xmlWriter, Object * o, XmlSerializerNamespaces * namespaces, MethodInfo * method));
DO_APP_FUNC(0x0194B2D0, XmlSerializationWriter *, XmlSerializer_CreateWriter_1, (XmlSerializer * __this, XmlMapping * typeMapping, MethodInfo * method));
DO_APP_FUNC(0x0194B830, XmlSerializationReader *, XmlSerializer_CreateReader_1, (XmlSerializer * __this, XmlMapping * typeMapping, MethodInfo * method));
DO_APP_FUNC(0x0194B990, XmlSerializationWriter *, XmlSerializer_SerializerData_CreateWriter, (XmlSerializer_SerializerData * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSerializerFactory__ctor, (XmlSerializerFactory * __this, MethodInfo * method));
DO_APP_FUNC(0x0194BAD0, XmlSerializer *, XmlSerializerFactory_CreateSerializer, (XmlSerializerFactory * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x0194BB00, XmlSerializer *, XmlSerializerFactory_CreateSerializer_1, (XmlSerializerFactory * __this, Type * type, XmlRootAttribute * root, MethodInfo * method));
DO_APP_FUNC(0x0194BB30, XmlSerializer *, XmlSerializerFactory_CreateSerializer_2, (XmlSerializerFactory * __this, Type * type, XmlAttributeOverrides * overrides, Type__Array * extraTypes, XmlRootAttribute * root, String * defaultNamespace, MethodInfo * method));
DO_APP_FUNC(0x0194BFC0, void, XmlSerializerFactory__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0194C120, XmlSerializationWriter *, XmlSerializerImplementation_get_Writer, (XmlSerializerImplementation * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlTextAttribute__ctor, (XmlTextAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0194CA60, String *, XmlTextAttribute_get_DataType, (XmlTextAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Type *, XmlTextAttribute_get_Type, (XmlTextAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0194CAF0, void, XmlTextAttribute_AddKeyHash, (XmlTextAttribute * __this, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, XmlTypeAttribute_get_IncludeInSchema, (XmlTypeAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, XmlTypeAttribute_get_Namespace, (XmlTypeAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0194CBD0, String *, XmlTypeAttribute_get_TypeName, (XmlTypeAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0194CC60, void, XmlTypeAttribute_AddKeyHash, (XmlTypeAttribute * __this, StringBuilder * sb, MethodInfo * method));
DO_APP_FUNC(0x0194CD70, void, XmlTypeMapElementInfo__ctor, (XmlTypeMapElementInfo * __this, XmlTypeMapMember * member, TypeData * type, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, TypeData *, XmlTypeMapElementInfo_get_TypeData, (XmlTypeMapElementInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, Object *, XmlTypeMapElementInfo_get_ChoiceValue, (XmlTypeMapElementInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9A0, void, XmlTypeMapElementInfo_set_ChoiceValue, (XmlTypeMapElementInfo * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, XmlTypeMapElementInfo_get_ElementName, (XmlTypeMapElementInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, XmlTypeMapElementInfo_set_ElementName, (XmlTypeMapElementInfo * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, XmlTypeMapElementInfo_get_Namespace, (XmlTypeMapElementInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, XmlTypeMapElementInfo_set_Namespace, (XmlTypeMapElementInfo * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0194CE40, String *, XmlTypeMapElementInfo_get_DataTypeNamespace, (XmlTypeMapElementInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0194CED0, String *, XmlTypeMapElementInfo_get_DataTypeName, (XmlTypeMapElementInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, XmlSchemaForm__Enum, XmlTypeMapElementInfo_get_Form, (XmlTypeMapElementInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1E0, void, XmlTypeMapElementInfo_set_Form, (XmlTypeMapElementInfo * __this, XmlSchemaForm__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, XmlTypeMapping *, XmlTypeMapElementInfo_get_MappedType, (XmlTypeMapElementInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9E0, void, XmlTypeMapElementInfo_set_MappedType, (XmlTypeMapElementInfo * __this, XmlTypeMapping * value, MethodInfo * method));
DO_APP_FUNC(0x004358D0, bool, XmlTypeMapElementInfo_get_IsNullable, (XmlTypeMapElementInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00447370, void, XmlTypeMapElementInfo_set_IsNullable, (XmlTypeMapElementInfo * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, XmlTypeMapMember *, XmlTypeMapElementInfo_get_Member, (XmlTypeMapElementInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x004C5130, void, XmlTypeMapElementInfo_set_NestingLevel, (XmlTypeMapElementInfo * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0194CF00, bool, XmlTypeMapElementInfo_get_MultiReferenceType, (XmlTypeMapElementInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x004430B0, bool, XmlTypeMapElementInfo_get_WrappedElement, (XmlTypeMapElementInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0058ED80, void, XmlTypeMapElementInfo_set_WrappedElement, (XmlTypeMapElementInfo * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x0194CF10, bool, XmlTypeMapElementInfo_get_IsTextElement, (XmlTypeMapElementInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0194CFC0, void, XmlTypeMapElementInfo_set_IsTextElement, (XmlTypeMapElementInfo * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x0194D0A0, bool, XmlTypeMapElementInfo_get_IsUnnamedAnyElement, (XmlTypeMapElementInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0194D160, void, XmlTypeMapElementInfo_set_IsUnnamedAnyElement, (XmlTypeMapElementInfo * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x003FDCE0, int32_t, XmlTypeMapElementInfo_get_ExplicitOrder, (XmlTypeMapElementInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x008C5DD0, void, XmlTypeMapElementInfo_set_ExplicitOrder, (XmlTypeMapElementInfo * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0194D240, bool, XmlTypeMapElementInfo_Equals, (XmlTypeMapElementInfo * __this, Object * other, MethodInfo * method));
DO_APP_FUNC(0x0194D440, int32_t, XmlTypeMapElementInfo_GetHashCode, (XmlTypeMapElementInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0194D450, void, XmlTypeMapElementInfoList__ctor, (XmlTypeMapElementInfoList * __this, MethodInfo * method));
DO_APP_FUNC(0x0194D4F0, void, XmlTypeMapMember__ctor, (XmlTypeMapMember * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, XmlTypeMapMember_get_Name, (XmlTypeMapMember * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, XmlTypeMapMember_set_Name, (XmlTypeMapMember * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, Object *, XmlTypeMapMember_get_DefaultValue, (XmlTypeMapMember * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBA00, void, XmlTypeMapMember_set_DefaultValue, (XmlTypeMapMember * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0194D5A0, bool, XmlTypeMapMember_IsReadOnly, (XmlTypeMapMember * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x0194D780, Object *, XmlTypeMapMember_GetValue, (Object * ob, String * name, MethodInfo * method));
DO_APP_FUNC(0x0194DA20, Object *, XmlTypeMapMember_GetValue_1, (XmlTypeMapMember * __this, Object * ob, MethodInfo * method));
DO_APP_FUNC(0x0194DCE0, void, XmlTypeMapMember_SetValue, (XmlTypeMapMember * __this, Object * ob, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0194DFF0, void, XmlTypeMapMember_SetValue_1, (Object * ob, String * name, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0194E2B0, void, XmlTypeMapMember_InitMember, (XmlTypeMapMember * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, TypeData *, XmlTypeMapMember_get_TypeData, (XmlTypeMapMember * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB10, void, XmlTypeMapMember_set_TypeData, (XmlTypeMapMember * __this, TypeData * value, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, XmlTypeMapMember_get_Index, (XmlTypeMapMember * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A000, void, XmlTypeMapMember_set_Index, (XmlTypeMapMember * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0052A010, int32_t, XmlTypeMapMember_get_GlobalIndex, (XmlTypeMapMember * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A020, void, XmlTypeMapMember_set_GlobalIndex, (XmlTypeMapMember * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01760C10, bool, XmlTypeMapMember_get_IsOptionalValueType, (XmlTypeMapMember * __this, MethodInfo * method));
DO_APP_FUNC(0x0194E5F0, void, XmlTypeMapMember_set_IsOptionalValueType, (XmlTypeMapMember * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x0194E610, bool, XmlTypeMapMember_get_IsReturnValue, (XmlTypeMapMember * __this, MethodInfo * method));
DO_APP_FUNC(0x0194E620, void, XmlTypeMapMember_set_IsReturnValue, (XmlTypeMapMember * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x0194E640, void, XmlTypeMapMember_CheckOptionalValueType, (XmlTypeMapMember * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x0194E720, bool, XmlTypeMapMember_GetValueSpecified, (XmlTypeMapMember * __this, Object * ob, MethodInfo * method));
DO_APP_FUNC(0x0194EA50, void, XmlTypeMapMember_SetValueSpecified, (XmlTypeMapMember * __this, Object * ob, bool value, MethodInfo * method));
DO_APP_FUNC(0x0194F2F0, void, XmlTypeMapMemberAttribute__ctor, (XmlTypeMapMemberAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, String *, XmlTypeMapMemberAttribute_get_AttributeName, (XmlTypeMapMemberAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB70, void, XmlTypeMapMemberAttribute_set_AttributeName, (XmlTypeMapMemberAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, String *, XmlTypeMapMemberAttribute_get_Namespace, (XmlTypeMapMemberAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB90, void, XmlTypeMapMemberAttribute_set_Namespace, (XmlTypeMapMemberAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x00F083C0, void, XmlTypeMapMemberAttribute_set_Form, (XmlTypeMapMemberAttribute * __this, XmlSchemaForm__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, XmlTypeMapping *, XmlTypeMapMemberAttribute_get_MappedType, (XmlTypeMapMemberAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBD0, void, XmlTypeMapMemberAttribute_set_MappedType, (XmlTypeMapMemberAttribute * __this, XmlTypeMapping * value, MethodInfo * method));
DO_APP_FUNC(0x0194ED90, void, XmlTypeMapMemberElement__ctor, (XmlTypeMapMemberElement * __this, MethodInfo * method));
DO_APP_FUNC(0x0194F380, XmlTypeMapElementInfoList *, XmlTypeMapMemberElement_get_ElementInfo, (XmlTypeMapMemberElement * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB70, void, XmlTypeMapMemberElement_set_ElementInfo, (XmlTypeMapMemberElement * __this, XmlTypeMapElementInfoList * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, String *, XmlTypeMapMemberElement_get_ChoiceMember, (XmlTypeMapMemberElement * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB90, void, XmlTypeMapMemberElement_set_ChoiceMember, (XmlTypeMapMemberElement * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, TypeData *, XmlTypeMapMemberElement_get_ChoiceTypeData, (XmlTypeMapMemberElement * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBD0, void, XmlTypeMapMemberElement_set_ChoiceTypeData, (XmlTypeMapMemberElement * __this, TypeData * value, MethodInfo * method));
DO_APP_FUNC(0x0194F4E0, XmlTypeMapElementInfo *, XmlTypeMapMemberElement_FindElement, (XmlTypeMapMemberElement * __this, Object * ob, Object * memberValue, MethodInfo * method));
DO_APP_FUNC(0x0194FA00, void, XmlTypeMapMemberElement_SetChoice, (XmlTypeMapMemberElement * __this, Object * ob, Object * choice, MethodInfo * method));
DO_APP_FUNC(0x0051DB40, bool, XmlTypeMapMemberElement_get_IsXmlTextCollector, (XmlTypeMapMemberElement * __this, MethodInfo * method));
DO_APP_FUNC(0x0051DB50, void, XmlTypeMapMemberElement_set_IsXmlTextCollector, (XmlTypeMapMemberElement * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x0194ED90, void, XmlTypeMapMemberList__ctor, (XmlTypeMapMemberList * __this, MethodInfo * method));
DO_APP_FUNC(0x003FF8B0, int32_t, XmlTypeMapMemberExpandable_get_FlatArrayIndex, (XmlTypeMapMemberExpandable * __this, MethodInfo * method));
DO_APP_FUNC(0x00B0E550, void, XmlTypeMapMemberExpandable_set_FlatArrayIndex, (XmlTypeMapMemberExpandable * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0194ED90, void, XmlTypeMapMemberExpandable__ctor, (XmlTypeMapMemberExpandable * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC00, ListMap *, XmlTypeMapMemberFlatList_get_ListMap, (XmlTypeMapMemberFlatList * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC10, void, XmlTypeMapMemberFlatList_set_ListMap, (XmlTypeMapMemberFlatList * __this, ListMap * value, MethodInfo * method));
DO_APP_FUNC(0x0194ED90, void, XmlTypeMapMemberFlatList__ctor, (XmlTypeMapMemberFlatList * __this, MethodInfo * method));
DO_APP_FUNC(0x0194EDA0, bool, XmlTypeMapMemberAnyElement_IsElementDefined, (XmlTypeMapMemberAnyElement * __this, String * name, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0194F070, bool, XmlTypeMapMemberAnyElement_get_IsDefaultAny, (XmlTypeMapMemberAnyElement * __this, MethodInfo * method));
DO_APP_FUNC(0x0194ED90, void, XmlTypeMapMemberAnyElement__ctor, (XmlTypeMapMemberAnyElement * __this, MethodInfo * method));
DO_APP_FUNC(0x0194ED90, void, XmlTypeMapMemberAnyAttribute__ctor, (XmlTypeMapMemberAnyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0194ED90, void, XmlTypeMapMemberNamespaces__ctor, (XmlTypeMapMemberNamespaces * __this, MethodInfo * method));
DO_APP_FUNC(0x0194FA20, void, XmlTypeMapping__ctor, (XmlTypeMapping * __this, String * elementName, String * ns, TypeData * typeData, String * xmlType, String * xmlTypeNamespace, MethodInfo * method));
DO_APP_FUNC(0x0194FBB0, String *, XmlTypeMapping_get_TypeFullName, (XmlTypeMapping * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, TypeData *, XmlTypeMapping_get_TypeData, (XmlTypeMapping * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, String *, XmlTypeMapping_get_XmlType, (XmlTypeMapping * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBA00, void, XmlTypeMapping_set_XmlType, (XmlTypeMapping * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0194FBD0, String *, XmlTypeMapping_get_XmlTypeNamespace, (XmlTypeMapping * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, XmlTypeMapping_set_XmlTypeNamespace, (XmlTypeMapping * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0194FC60, bool, XmlTypeMapping_get_HasXmlTypeNamespace, (XmlTypeMapping * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, ArrayList *, XmlTypeMapping_get_DerivedTypes, (XmlTypeMapping * __this, MethodInfo * method));
DO_APP_FUNC(0x0051DB40, bool, XmlTypeMapping_get_MultiReferenceType, (XmlTypeMapping * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, XmlTypeMapping *, XmlTypeMapping_get_BaseMap, (XmlTypeMapping * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB90, void, XmlTypeMapping_set_BaseMap, (XmlTypeMapping * __this, XmlTypeMapping * value, MethodInfo * method));
DO_APP_FUNC(0x00675C70, void, XmlTypeMapping_set_IncludeInSchema, (XmlTypeMapping * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x008543B0, bool, XmlTypeMapping_get_IsNullable, (XmlTypeMapping * __this, MethodInfo * method));
DO_APP_FUNC(0x00DC31D0, void, XmlTypeMapping_set_IsNullable, (XmlTypeMapping * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x0194FC70, bool, XmlTypeMapping_get_IsAny, (XmlTypeMapping * __this, MethodInfo * method));
DO_APP_FUNC(0x0194FC80, void, XmlTypeMapping_set_IsAny, (XmlTypeMapping * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x0194FC90, XmlTypeMapping *, XmlTypeMapping_GetRealTypeMap, (XmlTypeMapping * __this, Type * objectType, MethodInfo * method));
DO_APP_FUNC(0x0194FE50, XmlTypeMapping *, XmlTypeMapping_GetRealElementMap, (XmlTypeMapping * __this, String * name, String * ens, MethodInfo * method));
DO_APP_FUNC(0x01950110, void, XmlTypeMapping_UpdateRoot, (XmlTypeMapping * __this, XmlQualifiedName * qname, MethodInfo * method));
DO_APP_FUNC(0x025ABAE0, void, XmlSerializableMapping__ctor, (XmlSerializableMapping * __this, XmlRootAttribute * root, String * elementName, String * ns, TypeData * typeData, String * xmlType, String * xmlTypeNamespace, MethodInfo * method));
DO_APP_FUNC(0x01C8AE50, void, ClassMap_AddMember, (ClassMap * __this, XmlTypeMapMember * member, MethodInfo * method));
DO_APP_FUNC(0x01C8BCB0, void, ClassMap_RegisterFlatList, (ClassMap * __this, XmlTypeMapMemberExpandable * member, MethodInfo * method));
DO_APP_FUNC(0x01C8BE60, XmlTypeMapMemberAttribute *, ClassMap_GetAttribute, (ClassMap * __this, String * name, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01C8BF90, XmlTypeMapElementInfo *, ClassMap_GetElement, (ClassMap * __this, String * name, String * ns, int32_t minimalOrder, MethodInfo * method));
DO_APP_FUNC(0x01C8C2B0, XmlTypeMapElementInfo *, ClassMap_GetElement_1, (ClassMap * __this, String * name, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01C8C530, String *, ClassMap_BuildKey, (ClassMap * __this, String * name, String * ns, int32_t explicitOrder, MethodInfo * method));
DO_APP_FUNC(0x01C8C620, bool, ClassMap_get_IsOrderDependentMap, (ClassMap * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, XmlTypeMapMemberAnyElement *, ClassMap_get_DefaultAnyElementMember, (ClassMap * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, XmlTypeMapMemberAnyAttribute *, ClassMap_get_DefaultAnyAttributeMember, (ClassMap * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, XmlTypeMapMemberNamespaces *, ClassMap_get_NamespaceDeclarations, (ClassMap * __this, MethodInfo * method));
DO_APP_FUNC(0x01C8C8D0, ICollection *, ClassMap_get_AttributeMembers, (ClassMap * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, ICollection *, ClassMap_get_ElementMembers, (ClassMap * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, ArrayList *, ClassMap_get_AllMembers, (ClassMap * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, ArrayList *, ClassMap_get_FlatLists, (ClassMap * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, ArrayList *, ClassMap_get_ListMembers, (ClassMap * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, XmlTypeMapMember *, ClassMap_get_XmlTextCollector, (ClassMap * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, XmlTypeMapMember *, ClassMap_get_ReturnMember, (ClassMap * __this, MethodInfo * method));
DO_APP_FUNC(0x01C8CC00, XmlQualifiedName *, ClassMap_get_SimpleContentBaseType, (ClassMap * __this, MethodInfo * method));
DO_APP_FUNC(0x00674DC0, void, ClassMap_SetCanBeSimpleType, (ClassMap * __this, bool can, MethodInfo * method));
DO_APP_FUNC(0x01C8CEC0, bool, ClassMap_get_HasSimpleContent, (ClassMap * __this, MethodInfo * method));
DO_APP_FUNC(0x01C8CF70, void, ClassMap__ctor, (ClassMap * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, ListMap_set_ChoiceMember, (ListMap * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FA280, XmlTypeMapElementInfoList *, ListMap_get_ItemInfo, (ListMap * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, ListMap_set_ItemInfo, (ListMap * __this, XmlTypeMapElementInfoList * value, MethodInfo * method));
DO_APP_FUNC(0x01C8E780, XmlTypeMapElementInfo *, ListMap_FindElement, (ListMap * __this, Object * ob, int32_t index, Object * memberValue, MethodInfo * method));
DO_APP_FUNC(0x01C8ED40, XmlTypeMapElementInfo *, ListMap_FindElement_1, (ListMap * __this, String * elementName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01C8EFF0, XmlTypeMapElementInfo *, ListMap_FindTextElement, (ListMap * __this, MethodInfo * method));
DO_APP_FUNC(0x01C8F210, void, ListMap_GetArrayType, (ListMap * __this, int32_t itemCount, String * * localName, String * * ns, MethodInfo * method));
DO_APP_FUNC(0x01C8F4D0, bool, ListMap_Equals, (ListMap * __this, Object * other, MethodInfo * method));
DO_APP_FUNC(0x0194D440, int32_t, ListMap_GetHashCode, (ListMap * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ListMap__ctor, (ListMap * __this, MethodInfo * method));
DO_APP_FUNC(0x01C8D8C0, void, EnumMap__ctor, (EnumMap * __this, EnumMap_EnumMapMember__Array * members, bool isFlags, MethodInfo * method));
DO_APP_FUNC(0x0052A280, bool, EnumMap_get_IsFlags, (EnumMap * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String__Array *, EnumMap_get_EnumNames, (EnumMap * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String__Array *, EnumMap_get_XmlNames, (EnumMap * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, Int64__Array *, EnumMap_get_Values, (EnumMap * __this, MethodInfo * method));
DO_APP_FUNC(0x01C8DB40, String *, EnumMap_GetXmlName, (EnumMap * __this, String * typeName, Object * enumValue, MethodInfo * method));
DO_APP_FUNC(0x01C8DEA0, String *, EnumMap_GetEnumName, (EnumMap * __this, String * typeName, String * xmlName, MethodInfo * method));
DO_APP_FUNC(0x00522850, void, EnumMap_EnumMapMember__ctor, (EnumMap_EnumMapMember * __this, String * xmlName, String * enumName, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, EnumMap_EnumMapMember_get_XmlName, (EnumMap_EnumMapMember * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, EnumMap_EnumMapMember_get_EnumName, (EnumMap_EnumMapMember * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, int64_t, EnumMap_EnumMapMember_get_Value, (EnumMap_EnumMapMember * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, DoubleLinkAxis *, AxisElement_get_CurNode, (AxisElement * __this, MethodInfo * method));
DO_APP_FUNC(0x019A2F80, void, AxisElement__ctor, (AxisElement * __this, DoubleLinkAxis * node, int32_t depth, MethodInfo * method));
DO_APP_FUNC(0x019A2FA0, void, AxisElement_SetDepth, (AxisElement * __this, int32_t depth, MethodInfo * method));
DO_APP_FUNC(0x019A2FB0, void, AxisElement_MoveToParent, (AxisElement * __this, int32_t depth, ForwardAxis * parent, MethodInfo * method));
DO_APP_FUNC(0x019A30D0, bool, AxisElement_MoveToChild, (AxisElement * __this, String * name, String * URN, int32_t depth, ForwardAxis * parent, MethodInfo * method));
DO_APP_FUNC(0x002FB930, ForwardAxis *, AxisStack_get_Subtree, (AxisStack * __this, MethodInfo * method));
DO_APP_FUNC(0x016D95F0, int32_t, AxisStack_get_Length, (AxisStack * __this, MethodInfo * method));
DO_APP_FUNC(0x019A3240, void, AxisStack__ctor, (AxisStack * __this, ForwardAxis * faxis, ActiveAxis * parent, MethodInfo * method));
DO_APP_FUNC(0x019A33C0, void, AxisStack_Push, (AxisStack * __this, int32_t depth, MethodInfo * method));
DO_APP_FUNC(0x019A3550, void, AxisStack_Pop, (AxisStack * __this, MethodInfo * method));
DO_APP_FUNC(0x019A35A0, bool, AxisStack_Equal, (String * thisname, String * thisURN, String * name, String * URN, MethodInfo * method));
DO_APP_FUNC(0x019A3650, void, AxisStack_MoveToParent, (AxisStack * __this, String * name, String * URN, int32_t depth, MethodInfo * method));
DO_APP_FUNC(0x019A3A10, bool, AxisStack_MoveToChild, (AxisStack * __this, String * name, String * URN, int32_t depth, MethodInfo * method));
DO_APP_FUNC(0x019A3C70, bool, AxisStack_MoveToAttribute, (AxisStack * __this, String * name, String * URN, int32_t depth, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, ActiveAxis_get_CurrentDepth, (ActiveAxis * __this, MethodInfo * method));
DO_APP_FUNC(0x0199FCF0, void, ActiveAxis_Reactivate, (ActiveAxis * __this, MethodInfo * method));
DO_APP_FUNC(0x0199FD00, void, ActiveAxis__ctor, (ActiveAxis * __this, Asttree * axisTree, MethodInfo * method));
DO_APP_FUNC(0x019A00B0, bool, ActiveAxis_MoveToStartElement, (ActiveAxis * __this, String * localname, String * URN, MethodInfo * method));
DO_APP_FUNC(0x019A0290, bool, ActiveAxis_EndElement, (ActiveAxis * __this, String * localname, String * URN, MethodInfo * method));
DO_APP_FUNC(0x019A0460, bool, ActiveAxis_MoveToAttribute, (ActiveAxis * __this, String * localname, String * URN, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, Axis *, DoubleLinkAxis_get_Next, (DoubleLinkAxis * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9E0, void, DoubleLinkAxis_set_Next, (DoubleLinkAxis * __this, Axis * value, MethodInfo * method));
DO_APP_FUNC(0x02365520, void, DoubleLinkAxis__ctor, (DoubleLinkAxis * __this, Axis * axis, DoubleLinkAxis * inputaxis, MethodInfo * method));
DO_APP_FUNC(0x023655A0, DoubleLinkAxis *, DoubleLinkAxis_ConvertTree, (Axis * axis, MethodInfo * method));
DO_APP_FUNC(0x002FB930, DoubleLinkAxis *, ForwardAxis_get_RootNode, (ForwardAxis * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, DoubleLinkAxis *, ForwardAxis_get_TopNode, (ForwardAxis * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A030, bool, ForwardAxis_get_IsAttribute, (ForwardAxis * __this, MethodInfo * method));
DO_APP_FUNC(0x00DF3DF0, bool, ForwardAxis_get_IsDss, (ForwardAxis * __this, MethodInfo * method));
DO_APP_FUNC(0x016CC090, bool, ForwardAxis_get_IsSelfAxis, (ForwardAxis * __this, MethodInfo * method));
DO_APP_FUNC(0x016CC0A0, void, ForwardAxis__ctor, (ForwardAxis * __this, DoubleLinkAxis * axis, bool isdesorself, MethodInfo * method));
DO_APP_FUNC(0x002FA280, ArrayList *, Asttree_get_SubtreeArray, (Asttree * __this, MethodInfo * method));
DO_APP_FUNC(0x019A16D0, void, Asttree__ctor, (Asttree * __this, String * xPath, bool isField, XmlNamespaceManager * nsmgr, MethodInfo * method));
DO_APP_FUNC(0x019A16F0, bool, Asttree_IsNameTest, (Axis * ast, MethodInfo * method));
DO_APP_FUNC(0x019A1720, bool, Asttree_IsAttribute, (Axis * ast, MethodInfo * method));
DO_APP_FUNC(0x019A1750, bool, Asttree_IsDescendantOrSelf, (Axis * ast, MethodInfo * method));
DO_APP_FUNC(0x019A1780, bool, Asttree_IsSelf, (Axis * ast, MethodInfo * method));
DO_APP_FUNC(0x019A17B0, void, Asttree_CompileXPath, (Asttree * __this, String * xPath, bool isField, XmlNamespaceManager * nsmgr, MethodInfo * method));
DO_APP_FUNC(0x019A2340, void, Asttree_SetURN, (Asttree * __this, Axis * axis, XmlNamespaceManager * nsmgr, MethodInfo * method));
DO_APP_FUNC(0x019A2480, void, AutoValidator__ctor, (AutoValidator * __this, XmlValidatingReaderImpl * reader, XmlSchemaCollection * schemaCollection, IValidationEventHandling * eventHandling, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, AutoValidator_get_PreserveWhitespace, (AutoValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x019A25F0, void, AutoValidator_Validate, (AutoValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, AutoValidator_CompleteValidation, (AutoValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Object *, AutoValidator_FindId, (AutoValidator * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x019A29F0, ValidationType__Enum, AutoValidator_DetectValidationType, (AutoValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x019A3F00, void, BaseProcessor__ctor, (BaseProcessor * __this, XmlNameTable * nameTable, SchemaNames * schemaNames, ValidationEventHandler * eventHandler, MethodInfo * method));
DO_APP_FUNC(0x019A4080, void, BaseProcessor__ctor_1, (BaseProcessor * __this, XmlNameTable * nameTable, SchemaNames * schemaNames, ValidationEventHandler * eventHandler, XmlSchemaCompilationSettings * compilationSettings, MethodInfo * method));
DO_APP_FUNC(0x002FA280, XmlNameTable *, BaseProcessor_get_NameTable, (BaseProcessor * __this, MethodInfo * method));
DO_APP_FUNC(0x019A4160, SchemaNames *, BaseProcessor_get_SchemaNames, (BaseProcessor * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, ValidationEventHandler *, BaseProcessor_get_EventHandler, (BaseProcessor * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, XmlSchemaCompilationSettings *, BaseProcessor_get_CompilationSettings, (BaseProcessor * __this, MethodInfo * method));
DO_APP_FUNC(0x019A42C0, bool, BaseProcessor_get_HasErrors, (BaseProcessor * __this, MethodInfo * method));
DO_APP_FUNC(0x019A42D0, void, BaseProcessor_AddToTable, (BaseProcessor * __this, XmlSchemaObjectTable * table, XmlQualifiedName * qname, XmlSchemaObject * item, MethodInfo * method));
DO_APP_FUNC(0x019A4790, bool, BaseProcessor_IsValidAttributeGroupRedefine, (BaseProcessor * __this, XmlSchemaObject * existingObject, XmlSchemaObject * item, XmlSchemaObjectTable * table, MethodInfo * method));
DO_APP_FUNC(0x019A4920, bool, BaseProcessor_IsValidGroupRedefine, (BaseProcessor * __this, XmlSchemaObject * existingObject, XmlSchemaObject * item, XmlSchemaObjectTable * table, MethodInfo * method));
DO_APP_FUNC(0x019A4A80, bool, BaseProcessor_IsValidTypeRedefine, (BaseProcessor * __this, XmlSchemaObject * existingObject, XmlSchemaObject * item, XmlSchemaObjectTable * table, MethodInfo * method));
DO_APP_FUNC(0x019A4BF0, void, BaseProcessor_SendValidationEvent, (BaseProcessor * __this, String * code, XmlSchemaObject * source, MethodInfo * method));
DO_APP_FUNC(0x019A4D70, void, BaseProcessor_SendValidationEvent_1, (BaseProcessor * __this, String * code, String * msg, XmlSchemaObject * source, MethodInfo * method));
DO_APP_FUNC(0x019A4EF0, void, BaseProcessor_SendValidationEvent_2, (BaseProcessor * __this, String * code, String * msg1, String * msg2, XmlSchemaObject * source, MethodInfo * method));
DO_APP_FUNC(0x019A5130, void, BaseProcessor_SendValidationEvent_3, (BaseProcessor * __this, String * code, String__Array * args, Exception * innerException, XmlSchemaObject * source, MethodInfo * method));
DO_APP_FUNC(0x019A5300, void, BaseProcessor_SendValidationEvent_4, (BaseProcessor * __this, String * code, String * msg1, String * msg2, String * sourceUri, int32_t lineNumber, int32_t linePosition, MethodInfo * method));
DO_APP_FUNC(0x019A5550, void, BaseProcessor_SendValidationEvent_5, (BaseProcessor * __this, String * code, XmlSchemaObject * source, XmlSeverityType__Enum severity, MethodInfo * method));
DO_APP_FUNC(0x019A56D0, void, BaseProcessor_SendValidationEvent_6, (BaseProcessor * __this, XmlSchemaException * e, MethodInfo * method));
DO_APP_FUNC(0x019A56E0, void, BaseProcessor_SendValidationEvent_7, (BaseProcessor * __this, String * code, String * msg, XmlSchemaObject * source, XmlSeverityType__Enum severity, MethodInfo * method));
DO_APP_FUNC(0x019A5870, void, BaseProcessor_SendValidationEvent_8, (BaseProcessor * __this, XmlSchemaException * e, XmlSeverityType__Enum severity, MethodInfo * method));
DO_APP_FUNC(0x019A5A20, void, BaseProcessor_SendValidationEventNoThrow, (BaseProcessor * __this, XmlSchemaException * e, XmlSeverityType__Enum severity, MethodInfo * method));
DO_APP_FUNC(0x019A5BB0, void, BaseValidator__ctor, (BaseValidator * __this, BaseValidator * other, MethodInfo * method));
DO_APP_FUNC(0x019A5C10, void, BaseValidator__ctor_1, (BaseValidator * __this, XmlValidatingReaderImpl * reader, XmlSchemaCollection * schemaCollection, IValidationEventHandling * eventHandling, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, XmlValidatingReaderImpl *, BaseValidator_get_Reader, (BaseValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, XmlSchemaCollection *, BaseValidator_get_SchemaCollection, (BaseValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, XmlNameTable *, BaseValidator_get_NameTable, (BaseValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x019A5DA0, SchemaNames *, BaseValidator_get_SchemaNames, (BaseValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, PositionInfo *, BaseValidator_get_PositionInfo, (BaseValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, XmlResolver *, BaseValidator_get_XmlResolver, (BaseValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9C0, void, BaseValidator_set_XmlResolver, (BaseValidator * __this, XmlResolver * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, Uri *, BaseValidator_get_BaseUri, (BaseValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9E0, void, BaseValidator_set_BaseUri, (BaseValidator * __this, Uri * value, MethodInfo * method));
DO_APP_FUNC(0x019A5F30, ValidationEventHandler *, BaseValidator_get_EventHandler, (BaseValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, SchemaInfo *, BaseValidator_get_SchemaInfo, (BaseValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x019A5FF0, void, BaseValidator_set_DtdInfo, (BaseValidator * __this, IDtdInfo * value, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, BaseValidator_get_PreserveWhitespace, (BaseValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BaseValidator_Validate, (BaseValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BaseValidator_CompleteValidation, (BaseValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Object *, BaseValidator_FindId, (BaseValidator * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x019A6110, void, BaseValidator_ValidateText, (BaseValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x019A6440, void, BaseValidator_ValidateWhitespace, (BaseValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x019A65F0, void, BaseValidator_SaveTextValue, (BaseValidator * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x019A6670, void, BaseValidator_SendValidationEvent, (BaseValidator * __this, String * code, MethodInfo * method));
DO_APP_FUNC(0x019A6710, void, BaseValidator_SendValidationEvent_1, (BaseValidator * __this, String * code, String__Array * args, MethodInfo * method));
DO_APP_FUNC(0x019A6910, void, BaseValidator_SendValidationEvent_2, (BaseValidator * __this, String * code, String * arg, MethodInfo * method));
DO_APP_FUNC(0x019A6B10, void, BaseValidator_SendValidationEvent_3, (BaseValidator * __this, XmlSchemaException * e, MethodInfo * method));
DO_APP_FUNC(0x019A6B20, void, BaseValidator_SendValidationEvent_4, (BaseValidator * __this, String * code, String * msg, XmlSeverityType__Enum severity, MethodInfo * method));
DO_APP_FUNC(0x019A6D30, void, BaseValidator_SendValidationEvent_5, (BaseValidator * __this, String * code, String__Array * args, XmlSeverityType__Enum severity, MethodInfo * method));
DO_APP_FUNC(0x019A6F40, void, BaseValidator_SendValidationEvent_6, (BaseValidator * __this, XmlSchemaException * e, XmlSeverityType__Enum severity, MethodInfo * method));
DO_APP_FUNC(0x019A7000, void, BaseValidator_ProcessEntity, (SchemaInfo * sinfo, String * name, Object * sender, ValidationEventHandler * eventhandler, String * baseUri, int32_t lineNumber, int32_t linePosition, MethodInfo * method));
DO_APP_FUNC(0x019A7510, void, BaseValidator_ProcessEntity_1, (SchemaInfo * sinfo, String * name, IValidationEventHandling * eventHandling, String * baseUriStr, int32_t lineNumber, int32_t linePosition, MethodInfo * method));
DO_APP_FUNC(0x019A7890, BaseValidator *, BaseValidator_CreateInstance, (ValidationType__Enum valType, XmlValidatingReaderImpl * reader, XmlSchemaCollection * schemaCollection, IValidationEventHandling * eventHandling, bool processIdentityConstraints, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BitSet__ctor, (BitSet * __this, MethodInfo * method));
DO_APP_FUNC(0x019A87C0, void, BitSet__ctor_1, (BitSet * __this, int32_t count, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, BitSet_get_Count, (BitSet * __this, MethodInfo * method));
DO_APP_FUNC(0x019A8860, bool, BitSet_get_Item, (BitSet * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x019A88C0, void, BitSet_Clear, (BitSet * __this, MethodInfo * method));
DO_APP_FUNC(0x019A8920, void, BitSet_Set, (BitSet * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x019A8860, bool, BitSet_Get, (BitSet * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x019A8990, int32_t, BitSet_NextSet, (BitSet * __this, int32_t startFrom, MethodInfo * method));
DO_APP_FUNC(0x019A8A60, void, BitSet_And, (BitSet * __this, BitSet * other, MethodInfo * method));
DO_APP_FUNC(0x019A8B70, void, BitSet_Or, (BitSet * __this, BitSet * other, MethodInfo * method));
DO_APP_FUNC(0x019A8C30, int32_t, BitSet_GetHashCode, (BitSet * __this, MethodInfo * method));
DO_APP_FUNC(0x019A8C80, bool, BitSet_Equals, (BitSet * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x019A8EA0, BitSet *, BitSet_Clone, (BitSet * __this, MethodInfo * method));
DO_APP_FUNC(0x019A90C0, bool, BitSet_get_IsEmpty, (BitSet * __this, MethodInfo * method));
DO_APP_FUNC(0x019A9120, bool, BitSet_Intersects, (BitSet * __this, BitSet * other, MethodInfo * method));
DO_APP_FUNC(0x019A9270, int32_t, BitSet_Subscript, (BitSet * __this, int32_t bitIndex, MethodInfo * method));
DO_APP_FUNC(0x019A9280, void, BitSet_EnsureLength, (BitSet * __this, int32_t nRequiredLength, MethodInfo * method));
DO_APP_FUNC(0x019A9360, void, ChameleonKey__ctor, (ChameleonKey * __this, String * ns, XmlSchema * originalSchema, MethodInfo * method));
DO_APP_FUNC(0x019A9420, int32_t, ChameleonKey_GetHashCode, (ChameleonKey * __this, MethodInfo * method));
DO_APP_FUNC(0x019A94B0, bool, ChameleonKey_Equals, (ChameleonKey * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, CompiledIdentityConstraint_ConstraintRole__Enum, CompiledIdentityConstraint_get_Role, (CompiledIdentityConstraint * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, Asttree *, CompiledIdentityConstraint_get_Selector, (CompiledIdentityConstraint * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, Asttree__Array *, CompiledIdentityConstraint_get_Fields, (CompiledIdentityConstraint * __this, MethodInfo * method));
DO_APP_FUNC(0x019A9CA0, void, CompiledIdentityConstraint__ctor, (CompiledIdentityConstraint * __this, MethodInfo * method));
DO_APP_FUNC(0x019A9D60, void, CompiledIdentityConstraint__ctor_1, (CompiledIdentityConstraint * __this, XmlSchemaIdentityConstraint * constraint, XmlNamespaceManager * nsmgr, MethodInfo * method));
DO_APP_FUNC(0x019AA2F0, void, CompiledIdentityConstraint__cctor, (MethodInfo * method));
DO_APP_FUNC(0x003FC7F0, int32_t, ConstraintStruct_get_TableDim, (ConstraintStruct * __this, MethodInfo * method));
DO_APP_FUNC(0x0234CFC0, void, ConstraintStruct__ctor, (ConstraintStruct * __this, CompiledIdentityConstraint * constraint, MethodInfo * method));
DO_APP_FUNC(0x002FB970, int32_t, LocatedActiveAxis_get_Column, (LocatedActiveAxis * __this, MethodInfo * method));
DO_APP_FUNC(0x016CD900, void, LocatedActiveAxis__ctor, (LocatedActiveAxis * __this, Asttree * astfield, KeySequence * ks, int32_t column, MethodInfo * method));
DO_APP_FUNC(0x016CD940, void, LocatedActiveAxis_Reactivate, (LocatedActiveAxis * __this, KeySequence * ks, MethodInfo * method));
DO_APP_FUNC(0x01AB90E0, int32_t, SelectorActiveAxis_get_lastDepth, (SelectorActiveAxis * __this, MethodInfo * method));
DO_APP_FUNC(0x01AB9220, void, SelectorActiveAxis__ctor, (SelectorActiveAxis * __this, Asttree * axisTree, ConstraintStruct * cs, MethodInfo * method));
DO_APP_FUNC(0x01AB9380, bool, SelectorActiveAxis_EndElement, (SelectorActiveAxis * __this, String * localname, String * URN, MethodInfo * method));
DO_APP_FUNC(0x01AB93D0, int32_t, SelectorActiveAxis_PushKS, (SelectorActiveAxis * __this, int32_t errline, int32_t errcol, MethodInfo * method));
DO_APP_FUNC(0x01AB9B40, KeySequence *, SelectorActiveAxis_PopKS, (SelectorActiveAxis * __this, MethodInfo * method));
DO_APP_FUNC(0x016CC580, void, KSStruct__ctor, (KSStruct * __this, KeySequence * ks, int32_t dim, MethodInfo * method));
DO_APP_FUNC(0x00654950, int32_t, TypedObject_get_Dim, (TypedObject * __this, MethodInfo * method));
DO_APP_FUNC(0x00446970, bool, TypedObject_get_IsList, (TypedObject * __this, MethodInfo * method));
DO_APP_FUNC(0x01ABCC10, bool, TypedObject_get_IsDecimal, (TypedObject * __this, MethodInfo * method));
DO_APP_FUNC(0x004173F0, Decimal__Array *, TypedObject_get_Dvalue, (TypedObject * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Object *, TypedObject_get_Value, (TypedObject * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, XmlSchemaDatatype *, TypedObject_get_Type, (TypedObject * __this, MethodInfo * method));
DO_APP_FUNC(0x01ABCC30, void, TypedObject__ctor, (TypedObject * __this, Object * obj, String * svalue, XmlSchemaDatatype * xsdtype, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, TypedObject_ToString, (TypedObject * __this, MethodInfo * method));
DO_APP_FUNC(0x01ABCE30, void, TypedObject_SetDecimal, (TypedObject * __this, MethodInfo * method));
DO_APP_FUNC(0x01ABD3C0, bool, TypedObject_ListDValueEquals, (TypedObject * __this, TypedObject * other, MethodInfo * method));
DO_APP_FUNC(0x01ABD570, bool, TypedObject_Equals, (TypedObject * __this, TypedObject * other, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, TypedObject_DecimalStruct_get_IsDecimal, (TypedObject_DecimalStruct * __this, MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, TypedObject_DecimalStruct_set_IsDecimal, (TypedObject_DecimalStruct * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Decimal__Array *, TypedObject_DecimalStruct_get_Dvalue, (TypedObject_DecimalStruct * __this, MethodInfo * method));
DO_APP_FUNC(0x01ABD870, void, TypedObject_DecimalStruct__ctor, (TypedObject_DecimalStruct * __this, MethodInfo * method));
DO_APP_FUNC(0x01ABD900, void, TypedObject_DecimalStruct__ctor_1, (TypedObject_DecimalStruct * __this, int32_t dim, MethodInfo * method));
DO_APP_FUNC(0x016CC620, void, KeySequence__ctor, (KeySequence * __this, int32_t dim, int32_t line, int32_t col, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, int32_t, KeySequence_get_PosLine, (KeySequence * __this, MethodInfo * method));
DO_APP_FUNC(0x00529E80, int32_t, KeySequence_get_PosCol, (KeySequence * __this, MethodInfo * method));
DO_APP_FUNC(0x016CC6E0, Object *, KeySequence_get_Item, (KeySequence * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x016CC720, void, KeySequence_set_Item, (KeySequence * __this, int32_t index, Object * value, MethodInfo * method));
DO_APP_FUNC(0x016CC8A0, bool, KeySequence_IsQualified, (KeySequence * __this, MethodInfo * method));
DO_APP_FUNC(0x016CC900, int32_t, KeySequence_GetHashCode, (KeySequence * __this, MethodInfo * method));
DO_APP_FUNC(0x016CCE00, bool, KeySequence_Equals, (KeySequence * __this, Object * other, MethodInfo * method));
DO_APP_FUNC(0x016CCF90, String *, KeySequence_ToString, (KeySequence * __this, MethodInfo * method));
DO_APP_FUNC(0x01ABDB90, void, UpaException__ctor, (UpaException * __this, Object * particle1, Object * particle2, MethodInfo * method));
DO_APP_FUNC(0x002FBC20, Object *, UpaException_get_Particle1, (UpaException * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC40, Object *, UpaException_get_Particle2, (UpaException * __this, MethodInfo * method));
DO_APP_FUNC(0x01ABB750, void, SymbolsDictionary__ctor, (SymbolsDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x01ABB970, int32_t, SymbolsDictionary_get_Count, (SymbolsDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x004358D0, bool, SymbolsDictionary_get_IsUpaEnforced, (SymbolsDictionary * __this, MethodInfo * method));
DO_APP_FUNC(0x00447370, void, SymbolsDictionary_set_IsUpaEnforced, (SymbolsDictionary * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01ABB980, int32_t, SymbolsDictionary_AddName, (SymbolsDictionary * __this, XmlQualifiedName * name, Object * particle, MethodInfo * method));
DO_APP_FUNC(0x01ABBB10, void, SymbolsDictionary_AddNamespaceList, (SymbolsDictionary * __this, NamespaceList * list, Object * particle, bool allowLocal, MethodInfo * method));
DO_APP_FUNC(0x01ABBDB0, void, SymbolsDictionary_AddWildcard, (SymbolsDictionary * __this, String * wildcard, Object * particle, MethodInfo * method));
DO_APP_FUNC(0x01ABC010, ICollection *, SymbolsDictionary_GetNamespaceListSymbols, (SymbolsDictionary * __this, NamespaceList * list, MethodInfo * method));
DO_APP_FUNC(0x01ABC600, int32_t, SymbolsDictionary_get_Item, (SymbolsDictionary * __this, XmlQualifiedName * name, MethodInfo * method));
DO_APP_FUNC(0x01ABC740, bool, SymbolsDictionary_Exists, (SymbolsDictionary * __this, XmlQualifiedName * name, MethodInfo * method));
DO_APP_FUNC(0x01ABC770, Object *, SymbolsDictionary_GetParticle, (SymbolsDictionary * __this, int32_t symbol, MethodInfo * method));
DO_APP_FUNC(0x01ABC7B0, String *, SymbolsDictionary_NameOf, (SymbolsDictionary * __this, int32_t symbol, MethodInfo * method));
DO_APP_FUNC(0x0013C010, void, Position__ctor, (Position__Boxed * __this, int32_t symbol, Object * particle, MethodInfo * method));
DO_APP_FUNC(0x016D9430, int32_t, Positions_Add, (Positions * __this, int32_t symbol, Object * particle, MethodInfo * method));
DO_APP_FUNC(0x016D9510, Position, Positions_get_Item, (Positions * __this, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x016D95F0, int32_t, Positions_get_Count, (Positions * __this, MethodInfo * method));
DO_APP_FUNC(0x016D9620, void, Positions__ctor, (Positions * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, SyntaxTreeNode_get_IsRangeNode, (SyntaxTreeNode * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SyntaxTreeNode__ctor, (SyntaxTreeNode * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, LeafNode__ctor, (LeafNode * __this, int32_t pos, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, LeafNode_get_Pos, (LeafNode * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, LeafNode_set_Pos, (LeafNode * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, LeafNode_ExpandTree, (LeafNode * __this, InteriorNode * parent, SymbolsDictionary * symbols, Positions * positions, MethodInfo * method));
DO_APP_FUNC(0x016CD200, void, LeafNode_ConstructPos, (LeafNode * __this, BitSet * firstpos, BitSet * lastpos, BitSet__Array * followpos, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, LeafNode_get_IsNullable, (LeafNode * __this, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, NamespaceListNode__ctor, (NamespaceListNode * __this, NamespaceList * namespaceList, Object * particle, MethodInfo * method));
DO_APP_FUNC(0x016CFAA0, ICollection *, NamespaceListNode_GetResolvedSymbols, (NamespaceListNode * __this, SymbolsDictionary * symbols, MethodInfo * method));
DO_APP_FUNC(0x016CFAD0, void, NamespaceListNode_ExpandTree, (NamespaceListNode * __this, InteriorNode * parent, SymbolsDictionary * symbols, Positions * positions, MethodInfo * method));
DO_APP_FUNC(0x016CFF80, void, NamespaceListNode_ConstructPos, (NamespaceListNode * __this, BitSet * firstpos, BitSet * lastpos, BitSet__Array * followpos, MethodInfo * method));
DO_APP_FUNC(0x016CFFD0, bool, NamespaceListNode_get_IsNullable, (NamespaceListNode * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, SyntaxTreeNode *, InteriorNode_get_LeftChild, (InteriorNode * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, InteriorNode_set_LeftChild, (InteriorNode * __this, SyntaxTreeNode * value, MethodInfo * method));
DO_APP_FUNC(0x002FB930, SyntaxTreeNode *, InteriorNode_get_RightChild, (InteriorNode * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, InteriorNode_set_RightChild, (InteriorNode * __this, SyntaxTreeNode * value, MethodInfo * method));
DO_APP_FUNC(0x016CC230, void, InteriorNode_ExpandTreeNoRecursive, (InteriorNode * __this, InteriorNode * parent, SymbolsDictionary * symbols, Positions * positions, MethodInfo * method));
DO_APP_FUNC(0x016CC500, void, InteriorNode_ExpandTree, (InteriorNode * __this, InteriorNode * parent, SymbolsDictionary * symbols, Positions * positions, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, InteriorNode__ctor, (InteriorNode * __this, MethodInfo * method));
DO_APP_FUNC(0x01AB9C70, void, SequenceNode_ConstructPos, (SequenceNode * __this, BitSet * firstpos, BitSet * lastpos, BitSet__Array * followpos, MethodInfo * method));
DO_APP_FUNC(0x01ABA4E0, bool, SequenceNode_get_IsNullable, (SequenceNode * __this, MethodInfo * method));
DO_APP_FUNC(0x019A9C90, void, SequenceNode_ExpandTree, (SequenceNode * __this, InteriorNode * parent, SymbolsDictionary * symbols, Positions * positions, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SequenceNode__ctor, (SequenceNode * __this, MethodInfo * method));
DO_APP_FUNC(0x0018F7B0, void, SequenceNode_SequenceConstructPosContext__ctor, (SequenceNode_SequenceConstructPosContext__Boxed * __this, SequenceNode * node, BitSet * firstpos, BitSet * lastpos, MethodInfo * method));
DO_APP_FUNC(0x019A9600, void, ChoiceNode_ConstructChildPos, (SyntaxTreeNode * child, BitSet * firstpos, BitSet * lastpos, BitSet__Array * followpos, MethodInfo * method));
DO_APP_FUNC(0x019A98B0, void, ChoiceNode_ConstructPos, (ChoiceNode * __this, BitSet * firstpos, BitSet * lastpos, BitSet__Array * followpos, MethodInfo * method));
DO_APP_FUNC(0x019A9BA0, bool, ChoiceNode_get_IsNullable, (ChoiceNode * __this, MethodInfo * method));
DO_APP_FUNC(0x019A9C90, void, ChoiceNode_ExpandTree, (ChoiceNode * __this, InteriorNode * parent, SymbolsDictionary * symbols, Positions * positions, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ChoiceNode__ctor, (ChoiceNode * __this, MethodInfo * method));
DO_APP_FUNC(0x016D9320, void, PlusNode_ConstructPos, (PlusNode * __this, BitSet * firstpos, BitSet * lastpos, BitSet__Array * followpos, MethodInfo * method));
DO_APP_FUNC(0x016D9400, bool, PlusNode_get_IsNullable, (PlusNode * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, PlusNode__ctor, (PlusNode * __this, MethodInfo * method));
DO_APP_FUNC(0x016E5D00, void, QmarkNode_ConstructPos, (QmarkNode * __this, BitSet * firstpos, BitSet * lastpos, BitSet__Array * followpos, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, QmarkNode_get_IsNullable, (QmarkNode * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, QmarkNode__ctor, (QmarkNode * __this, MethodInfo * method));
DO_APP_FUNC(0x016D9320, void, StarNode_ConstructPos, (StarNode * __this, BitSet * firstpos, BitSet * lastpos, BitSet__Array * followpos, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, StarNode_get_IsNullable, (StarNode * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, StarNode__ctor, (StarNode * __this, MethodInfo * method));
DO_APP_FUNC(0x016CD250, void, LeafRangeNode__ctor, (LeafRangeNode * __this, Decimal min, Decimal max, MethodInfo * method));
DO_APP_FUNC(0x016CD270, void, LeafRangeNode__ctor_1, (LeafRangeNode * __this, int32_t pos, Decimal min, Decimal max, MethodInfo * method));
DO_APP_FUNC(0x00CB5CB0, Decimal, LeafRangeNode_get_Max, (LeafRangeNode * __this, MethodInfo * method));
DO_APP_FUNC(0x00C3DD30, Decimal, LeafRangeNode_get_Min, (LeafRangeNode * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, BitSet *, LeafRangeNode_get_NextIteration, (LeafRangeNode * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9C0, void, LeafRangeNode_set_NextIteration, (LeafRangeNode * __this, BitSet * value, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, LeafRangeNode_get_IsRangeNode, (LeafRangeNode * __this, MethodInfo * method));
DO_APP_FUNC(0x016CD290, void, LeafRangeNode_ExpandTree, (LeafRangeNode * __this, InteriorNode * parent, SymbolsDictionary * symbols, Positions * positions, MethodInfo * method));
DO_APP_FUNC(0x0234D420, void, ContentValidator__ctor, (ContentValidator * __this, XmlSchemaContentType__Enum contentType, MethodInfo * method));
DO_APP_FUNC(0x0234D430, void, ContentValidator__ctor_1, (ContentValidator * __this, XmlSchemaContentType__Enum contentType, bool isOpen, bool isEmptiable, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, XmlSchemaContentType__Enum, ContentValidator_get_ContentType, (ContentValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x0234D440, bool, ContentValidator_get_PreserveWhitespace, (ContentValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x00724AF0, bool, ContentValidator_get_IsEmptiable, (ContentValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x0234D460, bool, ContentValidator_get_IsOpen, (ContentValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x007EA280, void, ContentValidator_set_IsOpen, (ContentValidator * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ContentValidator_InitValidation, (ContentValidator * __this, ValidationState * context, MethodInfo * method));
DO_APP_FUNC(0x0234D470, Object *, ContentValidator_ValidateElement, (ContentValidator * __this, XmlQualifiedName * name, ValidationState * context, int32_t * errorCode, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, ContentValidator_CompleteValidation, (ContentValidator * __this, ValidationState * context, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, ArrayList *, ContentValidator_ExpectedElements, (ContentValidator * __this, ValidationState * context, bool isRequiredOnly, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, ArrayList *, ContentValidator_ExpectedParticles, (ContentValidator * __this, ValidationState * context, bool isRequiredOnly, XmlSchemaSet * schemaSet, MethodInfo * method));
DO_APP_FUNC(0x0234D4A0, void, ContentValidator_AddParticleToExpected, (XmlSchemaParticle * p, XmlSchemaSet * schemaSet, ArrayList * particles, MethodInfo * method));
DO_APP_FUNC(0x0234D570, void, ContentValidator_AddParticleToExpected_1, (XmlSchemaParticle * p, XmlSchemaSet * schemaSet, ArrayList * particles, bool global, MethodInfo * method));
DO_APP_FUNC(0x0234D870, void, ContentValidator__cctor, (MethodInfo * method));
DO_APP_FUNC(0x016D5510, void, ParticleContentValidator__ctor, (ParticleContentValidator * __this, XmlSchemaContentType__Enum contentType, MethodInfo * method));
DO_APP_FUNC(0x016D5520, void, ParticleContentValidator__ctor_1, (ParticleContentValidator * __this, XmlSchemaContentType__Enum contentType, bool enableUpaCheck, MethodInfo * method));
DO_APP_FUNC(0x016D55D0, void, ParticleContentValidator_InitValidation, (ParticleContentValidator * __this, ValidationState * context, MethodInfo * method));
DO_APP_FUNC(0x016D5620, Object *, ParticleContentValidator_ValidateElement, (ParticleContentValidator * __this, XmlQualifiedName * name, ValidationState * context, int32_t * errorCode, MethodInfo * method));
DO_APP_FUNC(0x016D5670, bool, ParticleContentValidator_CompleteValidation, (ParticleContentValidator * __this, ValidationState * context, MethodInfo * method));
DO_APP_FUNC(0x016D56C0, void, ParticleContentValidator_Start, (ParticleContentValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x016D5AC0, void, ParticleContentValidator_OpenGroup, (ParticleContentValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x016D5AF0, void, ParticleContentValidator_CloseGroup, (ParticleContentValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x016D5C90, bool, ParticleContentValidator_Exists, (ParticleContentValidator * __this, XmlQualifiedName * name, MethodInfo * method));
DO_APP_FUNC(0x016D5CD0, void, ParticleContentValidator_AddName, (ParticleContentValidator * __this, XmlQualifiedName * name, Object * particle, MethodInfo * method));
DO_APP_FUNC(0x016D5E70, void, ParticleContentValidator_AddNamespaceList, (ParticleContentValidator * __this, NamespaceList * namespaceList, Object * particle, MethodInfo * method));
DO_APP_FUNC(0x016D6000, void, ParticleContentValidator_AddLeafNode, (ParticleContentValidator * __this, SyntaxTreeNode * node, MethodInfo * method));
DO_APP_FUNC(0x016D6150, void, ParticleContentValidator_AddChoice, (ParticleContentValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x016D6330, void, ParticleContentValidator_AddSequence, (ParticleContentValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x016D6510, void, ParticleContentValidator_AddStar, (ParticleContentValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x016D6660, void, ParticleContentValidator_AddPlus, (ParticleContentValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x016D67B0, void, ParticleContentValidator_AddQMark, (ParticleContentValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x016D6900, void, ParticleContentValidator_AddLeafRange, (ParticleContentValidator * __this, Decimal min, Decimal max, MethodInfo * method));
DO_APP_FUNC(0x016D6B60, void, ParticleContentValidator_Closure, (ParticleContentValidator * __this, InteriorNode * node, MethodInfo * method));
DO_APP_FUNC(0x016D6D50, ContentValidator *, ParticleContentValidator_Finish, (ParticleContentValidator * __this, bool useDFA, MethodInfo * method));
DO_APP_FUNC(0x016D7C50, BitSet__Array *, ParticleContentValidator_CalculateTotalFollowposForRangeNodes, (ParticleContentValidator * __this, BitSet * firstpos, BitSet__Array * followpos, BitSet * * posWithRangeTerminals, MethodInfo * method));
DO_APP_FUNC(0x016D8160, void, ParticleContentValidator_CheckCMUPAWithLeafRangeNodes, (ParticleContentValidator * __this, BitSet * curpos, MethodInfo * method));
DO_APP_FUNC(0x016D8350, BitSet *, ParticleContentValidator_GetApplicableMinMaxFollowPos, (ParticleContentValidator * __this, BitSet * curpos, BitSet * posWithRangeTerminals, BitSet__Array * minmaxFollowPos, MethodInfo * method));
DO_APP_FUNC(0x016D8610, void, ParticleContentValidator_CheckUniqueParticleAttribution, (ParticleContentValidator * __this, BitSet * firstpos, BitSet__Array * followpos, MethodInfo * method));
DO_APP_FUNC(0x016D86D0, void, ParticleContentValidator_CheckUniqueParticleAttribution_1, (ParticleContentValidator * __this, BitSet * curpos, MethodInfo * method));
DO_APP_FUNC(0x016D8940, Int32__Array__Array *, ParticleContentValidator_BuildTransitionTable, (ParticleContentValidator * __this, BitSet * firstpos, BitSet__Array * followpos, int32_t endMarkerPos, MethodInfo * method));
DO_APP_FUNC(0x02364CC0, void, DfaContentValidator__ctor, (DfaContentValidator * __this, Int32__Array__Array * transitionTable, SymbolsDictionary * symbols, XmlSchemaContentType__Enum contentType, bool isOpen, bool isEmptiable, MethodInfo * method));
DO_APP_FUNC(0x02364D90, void, DfaContentValidator_InitValidation, (DfaContentValidator * __this, ValidationState * context, MethodInfo * method));
DO_APP_FUNC(0x02364E20, Object *, DfaContentValidator_ValidateElement, (DfaContentValidator * __this, XmlQualifiedName * name, ValidationState * context, int32_t * errorCode, MethodInfo * method));
DO_APP_FUNC(0x02364FF0, bool, DfaContentValidator_CompleteValidation, (DfaContentValidator * __this, ValidationState * context, MethodInfo * method));
DO_APP_FUNC(0x02365010, ArrayList *, DfaContentValidator_ExpectedElements, (DfaContentValidator * __this, ValidationState * context, bool isRequiredOnly, MethodInfo * method));
DO_APP_FUNC(0x023652E0, ArrayList *, DfaContentValidator_ExpectedParticles, (DfaContentValidator * __this, ValidationState * context, bool isRequiredOnly, XmlSchemaSet * schemaSet, MethodInfo * method));
DO_APP_FUNC(0x016D0120, void, NfaContentValidator__ctor, (NfaContentValidator * __this, BitSet * firstpos, BitSet__Array * followpos, SymbolsDictionary * symbols, Positions * positions, int32_t endMarkerPos, XmlSchemaContentType__Enum contentType, bool isOpen, bool isEmptiable, MethodInfo * method));
DO_APP_FUNC(0x016D0210, void, NfaContentValidator_InitValidation, (NfaContentValidator * __this, ValidationState * context, MethodInfo * method));
DO_APP_FUNC(0x016D0470, Object *, NfaContentValidator_ValidateElement, (NfaContentValidator * __this, XmlQualifiedName * name, ValidationState * context, int32_t * errorCode, MethodInfo * method));
DO_APP_FUNC(0x016D0750, bool, NfaContentValidator_CompleteValidation, (NfaContentValidator * __this, ValidationState * context, MethodInfo * method));
DO_APP_FUNC(0x016D0800, ArrayList *, NfaContentValidator_ExpectedElements, (NfaContentValidator * __this, ValidationState * context, bool isRequiredOnly, MethodInfo * method));
DO_APP_FUNC(0x016D0AE0, ArrayList *, NfaContentValidator_ExpectedParticles, (NfaContentValidator * __this, ValidationState * context, bool isRequiredOnly, XmlSchemaSet * schemaSet, MethodInfo * method));
DO_APP_FUNC(0x016E5D30, void, RangeContentValidator__ctor, (RangeContentValidator * __this, BitSet * firstpos, BitSet__Array * followpos, SymbolsDictionary * symbols, Positions * positions, int32_t endMarkerPos, XmlSchemaContentType__Enum contentType, bool isEmptiable, BitSet * positionsWithRangeTerminals, int32_t minmaxNodesCount, MethodInfo * method));
DO_APP_FUNC(0x016E5E30, void, RangeContentValidator_InitValidation, (RangeContentValidator * __this, ValidationState * context, MethodInfo * method));
DO_APP_FUNC(0x016E61F0, Object *, RangeContentValidator_ValidateElement, (RangeContentValidator * __this, XmlQualifiedName * name, ValidationState * context, int32_t * errorCode, MethodInfo * method));
DO_APP_FUNC(0x016E6DF0, bool, RangeContentValidator_CompleteValidation, (RangeContentValidator * __this, ValidationState * context, MethodInfo * method));
DO_APP_FUNC(0x016E6E10, ArrayList *, RangeContentValidator_ExpectedElements, (RangeContentValidator * __this, ValidationState * context, bool isRequiredOnly, MethodInfo * method));
DO_APP_FUNC(0x016E7270, ArrayList *, RangeContentValidator_ExpectedParticles, (RangeContentValidator * __this, ValidationState * context, bool isRequiredOnly, XmlSchemaSet * schemaSet, MethodInfo * method));
DO_APP_FUNC(0x019A0650, void, AllElementsContentValidator__ctor, (AllElementsContentValidator * __this, XmlSchemaContentType__Enum contentType, int32_t size, bool isEmptiable, MethodInfo * method));
DO_APP_FUNC(0x019A08C0, bool, AllElementsContentValidator_AddElement, (AllElementsContentValidator * __this, XmlQualifiedName * name, Object * particle, bool isEmptiable, MethodInfo * method));
DO_APP_FUNC(0x019A0A80, bool, AllElementsContentValidator_get_IsEmptiable, (AllElementsContentValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x019A0AA0, void, AllElementsContentValidator_InitValidation, (AllElementsContentValidator * __this, ValidationState * context, MethodInfo * method));
DO_APP_FUNC(0x019A0C30, Object *, AllElementsContentValidator_ValidateElement, (AllElementsContentValidator * __this, XmlQualifiedName * name, ValidationState * context, int32_t * errorCode, MethodInfo * method));
DO_APP_FUNC(0x019A0E30, bool, AllElementsContentValidator_CompleteValidation, (AllElementsContentValidator * __this, ValidationState * context, MethodInfo * method));
DO_APP_FUNC(0x019A0E80, ArrayList *, AllElementsContentValidator_ExpectedElements, (AllElementsContentValidator * __this, ValidationState * context, bool isRequiredOnly, MethodInfo * method));
DO_APP_FUNC(0x019A12B0, ArrayList *, AllElementsContentValidator_ExpectedParticles, (AllElementsContentValidator * __this, ValidationState * context, bool isRequiredOnly, XmlSchemaSet * schemaSet, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, XsdSimpleValue__ctor, (XsdSimpleValue * __this, XmlSchemaSimpleType * st, Object * value, MethodInfo * method));
DO_APP_FUNC(0x002FA280, XmlSchemaSimpleType *, XsdSimpleValue_get_XmlType, (XsdSimpleValue * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Object *, XsdSimpleValue_get_TypedValue, (XsdSimpleValue * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, RestrictionFacets__ctor, (RestrictionFacets * __this, MethodInfo * method));
DO_APP_FUNC(0x0234DC40, void, DatatypeImplementation__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02351840, XmlSchemaSimpleType *, DatatypeImplementation_get_AnySimpleType, (MethodInfo * method));
DO_APP_FUNC(0x023518E0, XmlSchemaSimpleType *, DatatypeImplementation_get_UntypedAtomicType, (MethodInfo * method));
DO_APP_FUNC(0x02351980, DatatypeImplementation *, DatatypeImplementation_FromXmlTokenizedType, (XmlTokenizedType__Enum token, MethodInfo * method));
DO_APP_FUNC(0x02351A50, DatatypeImplementation *, DatatypeImplementation_FromXmlTokenizedTypeXsd, (XmlTokenizedType__Enum token, MethodInfo * method));
DO_APP_FUNC(0x02351B20, DatatypeImplementation *, DatatypeImplementation_FromXdrName, (String * name, MethodInfo * method));
DO_APP_FUNC(0x02351C50, DatatypeImplementation *, DatatypeImplementation_FromTypeName, (String * name, MethodInfo * method));
DO_APP_FUNC(0x02351D80, XmlSchemaSimpleType *, DatatypeImplementation_StartBuiltinType, (XmlQualifiedName * qname, XmlSchemaDatatype * dataType, MethodInfo * method));
DO_APP_FUNC(0x02351FD0, void, DatatypeImplementation_FinishBuiltinType, (XmlSchemaSimpleType * derivedType, XmlSchemaSimpleType * baseType, MethodInfo * method));
DO_APP_FUNC(0x02352430, void, DatatypeImplementation_CreateBuiltinTypes, (MethodInfo * method));
DO_APP_FUNC(0x02353570, XmlSchemaSimpleType *, DatatypeImplementation_GetSimpleTypeFromTypeCode, (XmlTypeCode__Enum typeCode, MethodInfo * method));
DO_APP_FUNC(0x02353640, XmlSchemaSimpleType *, DatatypeImplementation_GetSimpleTypeFromXsdType, (XmlQualifiedName * qname, MethodInfo * method));
DO_APP_FUNC(0x02353760, XmlSchemaSimpleType *, DatatypeImplementation_GetNormalizedStringTypeV1Compat, (MethodInfo * method));
DO_APP_FUNC(0x02353A20, XmlSchemaSimpleType *, DatatypeImplementation_GetTokenTypeV1Compat, (MethodInfo * method));
DO_APP_FUNC(0x02353CE0, XmlSchemaSimpleType__Array *, DatatypeImplementation_GetBuiltInTypes, (MethodInfo * method));
DO_APP_FUNC(0x02353D80, XmlTypeCode__Enum, DatatypeImplementation_GetPrimitiveTypeCode, (XmlTypeCode__Enum typeCode, MethodInfo * method));
DO_APP_FUNC(0x02353F00, XmlSchemaDatatype *, DatatypeImplementation_DeriveByRestriction, (DatatypeImplementation * __this, XmlSchemaObjectCollection * facets, XmlNameTable * nameTable, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x023540D0, XmlSchemaDatatype *, DatatypeImplementation_DeriveByList, (DatatypeImplementation * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x023540E0, XmlSchemaDatatype *, DatatypeImplementation_DeriveByList_1, (DatatypeImplementation * __this, int32_t minSize, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x02354490, DatatypeImplementation *, DatatypeImplementation_DeriveByUnion, (XmlSchemaSimpleType__Array * types, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DatatypeImplementation_VerifySchemaValid, (DatatypeImplementation * __this, XmlSchemaObjectTable * notations, XmlSchemaObject * caller, MethodInfo * method));
DO_APP_FUNC(0x023546B0, bool, DatatypeImplementation_IsDerivedFrom, (DatatypeImplementation * __this, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x023549C0, bool, DatatypeImplementation_IsEqual, (DatatypeImplementation * __this, Object * o1, Object * o2, MethodInfo * method));
DO_APP_FUNC(0x023549E0, bool, DatatypeImplementation_IsComparable, (DatatypeImplementation * __this, XmlSchemaDatatype * dtype, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, XmlValueConverter *, DatatypeImplementation_CreateValueConverter, (DatatypeImplementation * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x02354B20, FacetsChecker *, DatatypeImplementation_get_FacetsChecker, (DatatypeImplementation * __this, MethodInfo * method));
DO_APP_FUNC(0x02354BC0, XmlValueConverter *, DatatypeImplementation_get_ValueConverter, (DatatypeImplementation * __this, MethodInfo * method));
DO_APP_FUNC(0x00ADC4A0, XmlTokenizedType__Enum, DatatypeImplementation_get_TokenizedType, (DatatypeImplementation * __this, MethodInfo * method));
DO_APP_FUNC(0x02354BF0, Type *, DatatypeImplementation_get_ValueType, (DatatypeImplementation * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, XmlSchemaDatatypeVariety__Enum, DatatypeImplementation_get_Variety, (DatatypeImplementation * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, XmlTypeCode__Enum, DatatypeImplementation_get_TypeCode, (DatatypeImplementation * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, RestrictionFacets *, DatatypeImplementation_get_Restriction, (DatatypeImplementation * __this, MethodInfo * method));
DO_APP_FUNC(0x02354C90, bool, DatatypeImplementation_get_HasLexicalFacets, (DatatypeImplementation * __this, MethodInfo * method));
DO_APP_FUNC(0x02354CB0, bool, DatatypeImplementation_get_HasValueFacets, (DatatypeImplementation * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, DatatypeImplementation *, DatatypeImplementation_get_Base, (DatatypeImplementation * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, XmlSchemaWhiteSpace__Enum, DatatypeImplementation_get_BuiltInWhitespaceFacet, (DatatypeImplementation * __this, MethodInfo * method));
DO_APP_FUNC(0x02354CD0, Object *, DatatypeImplementation_ParseValue, (DatatypeImplementation * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, MethodInfo * method));
DO_APP_FUNC(0x02354F40, Object *, DatatypeImplementation_ParseValue_1, (DatatypeImplementation * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, bool createAtomicValue, MethodInfo * method));
DO_APP_FUNC(0x02355130, Exception *, DatatypeImplementation_TryParseValue, (DatatypeImplementation * __this, Object * value, XmlNameTable * nameTable, IXmlNamespaceResolver * namespaceResolver, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x02355530, String *, DatatypeImplementation_GetTypeName, (DatatypeImplementation * __this, MethodInfo * method));
DO_APP_FUNC(0x023555C0, int32_t, DatatypeImplementation_Compare, (DatatypeImplementation * __this, Byte__Array * value1, Byte__Array * value2, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DatatypeImplementation__ctor, (DatatypeImplementation * __this, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, DatatypeImplementation_SchemaDatatypeMap__ctor, (DatatypeImplementation_SchemaDatatypeMap * __this, String * name, DatatypeImplementation * type, MethodInfo * method));
DO_APP_FUNC(0x00E332C0, void, DatatypeImplementation_SchemaDatatypeMap__ctor_1, (DatatypeImplementation_SchemaDatatypeMap * __this, String * name, DatatypeImplementation * type, int32_t parentIndex, MethodInfo * method));
DO_APP_FUNC(0x00C3DB20, DatatypeImplementation *, DatatypeImplementation_SchemaDatatypeMap_op_Explicit, (DatatypeImplementation_SchemaDatatypeMap * sdm, MethodInfo * method));
DO_APP_FUNC(0x002FA280, String *, DatatypeImplementation_SchemaDatatypeMap_get_Name, (DatatypeImplementation_SchemaDatatypeMap * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD1D0, int32_t, DatatypeImplementation_SchemaDatatypeMap_get_ParentIndex, (DatatypeImplementation_SchemaDatatypeMap * __this, MethodInfo * method));
DO_APP_FUNC(0x02355650, int32_t, DatatypeImplementation_SchemaDatatypeMap_CompareTo, (DatatypeImplementation_SchemaDatatypeMap * __this, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x023557B0, XmlValueConverter *, Datatype_List_CreateValueConverter, (Datatype_List * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x02355AF0, void, Datatype_List__ctor, (Datatype_List * __this, DatatypeImplementation * type, int32_t minListSize, MethodInfo * method));
DO_APP_FUNC(0x02355BB0, int32_t, Datatype_List_Compare, (Datatype_List * __this, Object * value1, Object * value2, MethodInfo * method));
DO_APP_FUNC(0x02355F40, Type *, Datatype_List_get_ValueType, (Datatype_List * __this, MethodInfo * method));
DO_APP_FUNC(0x02355F60, XmlTokenizedType__Enum, Datatype_List_get_TokenizedType, (Datatype_List * __this, MethodInfo * method));
DO_APP_FUNC(0x02355F90, Type *, Datatype_List_get_ListValueType, (Datatype_List * __this, MethodInfo * method));
DO_APP_FUNC(0x02355FC0, FacetsChecker *, Datatype_List_get_FacetsChecker, (Datatype_List * __this, MethodInfo * method));
DO_APP_FUNC(0x02356060, XmlTypeCode__Enum, Datatype_List_get_TypeCode, (Datatype_List * __this, MethodInfo * method));
DO_APP_FUNC(0x00E40570, RestrictionFlags__Enum, Datatype_List_get_ValidRestrictionFlags, (Datatype_List * __this, MethodInfo * method));
DO_APP_FUNC(0x02356090, Exception *, Datatype_List_TryParseValue, (Datatype_List * __this, Object * value, XmlNameTable * nameTable, IXmlNamespaceResolver * namespaceResolver, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x02356610, Exception *, Datatype_List_TryParseValue_1, (Datatype_List * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x02360980, XmlValueConverter *, Datatype_union_CreateValueConverter, (Datatype_union * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x02360AD0, void, Datatype_union__ctor, (Datatype_union * __this, XmlSchemaSimpleType__Array * types, MethodInfo * method));
DO_APP_FUNC(0x02360B80, int32_t, Datatype_union_Compare, (Datatype_union * __this, Object * value1, Object * value2, MethodInfo * method));
DO_APP_FUNC(0x02360CE0, Type *, Datatype_union_get_ValueType, (Datatype_union * __this, MethodInfo * method));
DO_APP_FUNC(0x008556D0, XmlTypeCode__Enum, Datatype_union_get_TypeCode, (Datatype_union * __this, MethodInfo * method));
DO_APP_FUNC(0x02360D80, FacetsChecker *, Datatype_union_get_FacetsChecker, (Datatype_union * __this, MethodInfo * method));
DO_APP_FUNC(0x02360E20, Type *, Datatype_union_get_ListValueType, (Datatype_union * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3E570, RestrictionFlags__Enum, Datatype_union_get_ValidRestrictionFlags, (Datatype_union * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, XmlSchemaSimpleType__Array *, Datatype_union_get_BaseMemberTypes, (Datatype_union * __this, MethodInfo * method));
DO_APP_FUNC(0x02360EC0, bool, Datatype_union_HasAtomicMembers, (Datatype_union * __this, MethodInfo * method));
DO_APP_FUNC(0x02360F80, bool, Datatype_union_IsUnionBaseOf, (Datatype_union * __this, DatatypeImplementation * derivedType, MethodInfo * method));
DO_APP_FUNC(0x02361050, Exception *, Datatype_union_TryParseValue, (Datatype_union * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x02361470, Exception *, Datatype_union_TryParseValue_1, (Datatype_union * __this, Object * value, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x02361A30, void, Datatype_union__cctor, (MethodInfo * method));
DO_APP_FUNC(0x023582F0, XmlValueConverter *, Datatype_anySimpleType_CreateValueConverter, (Datatype_anySimpleType * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x02358390, FacetsChecker *, Datatype_anySimpleType_get_FacetsChecker, (Datatype_anySimpleType * __this, MethodInfo * method));
DO_APP_FUNC(0x02358430, Type *, Datatype_anySimpleType_get_ValueType, (Datatype_anySimpleType * __this, MethodInfo * method));
DO_APP_FUNC(0x008556D0, XmlTypeCode__Enum, Datatype_anySimpleType_get_TypeCode, (Datatype_anySimpleType * __this, MethodInfo * method));
DO_APP_FUNC(0x023584D0, Type *, Datatype_anySimpleType_get_ListValueType, (Datatype_anySimpleType * __this, MethodInfo * method));
DO_APP_FUNC(0x00ADC4A0, XmlTokenizedType__Enum, Datatype_anySimpleType_get_TokenizedType, (Datatype_anySimpleType * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, RestrictionFlags__Enum, Datatype_anySimpleType_get_ValidRestrictionFlags, (Datatype_anySimpleType * __this, MethodInfo * method));
DO_APP_FUNC(0x0043D9E0, XmlSchemaWhiteSpace__Enum, Datatype_anySimpleType_get_BuiltInWhitespaceFacet, (Datatype_anySimpleType * __this, MethodInfo * method));
DO_APP_FUNC(0x02358570, int32_t, Datatype_anySimpleType_Compare, (Datatype_anySimpleType * __this, Object * value1, Object * value2, MethodInfo * method));
DO_APP_FUNC(0x023586A0, Exception *, Datatype_anySimpleType_TryParseValue, (Datatype_anySimpleType * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x023586C0, void, Datatype_anySimpleType__ctor, (Datatype_anySimpleType * __this, MethodInfo * method));
DO_APP_FUNC(0x02358750, void, Datatype_anySimpleType__cctor, (MethodInfo * method));
DO_APP_FUNC(0x023581B0, XmlValueConverter *, Datatype_anyAtomicType_CreateValueConverter, (Datatype_anyAtomicType * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, XmlSchemaWhiteSpace__Enum, Datatype_anyAtomicType_get_BuiltInWhitespaceFacet, (Datatype_anyAtomicType * __this, MethodInfo * method));
DO_APP_FUNC(0x008556D0, XmlTypeCode__Enum, Datatype_anyAtomicType_get_TypeCode, (Datatype_anyAtomicType * __this, MethodInfo * method));
DO_APP_FUNC(0x02358250, void, Datatype_anyAtomicType__ctor, (Datatype_anyAtomicType * __this, MethodInfo * method));
DO_APP_FUNC(0x02363710, XmlValueConverter *, Datatype_untypedAtomicType_CreateValueConverter, (Datatype_untypedAtomicType * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, XmlSchemaWhiteSpace__Enum, Datatype_untypedAtomicType_get_BuiltInWhitespaceFacet, (Datatype_untypedAtomicType * __this, MethodInfo * method));
DO_APP_FUNC(0x004FA040, XmlTypeCode__Enum, Datatype_untypedAtomicType_get_TypeCode, (Datatype_untypedAtomicType * __this, MethodInfo * method));
DO_APP_FUNC(0x023637B0, void, Datatype_untypedAtomicType__ctor, (Datatype_untypedAtomicType * __this, MethodInfo * method));
DO_APP_FUNC(0x02360500, XmlValueConverter *, Datatype_string_CreateValueConverter, (Datatype_string * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, XmlSchemaWhiteSpace__Enum, Datatype_string_get_BuiltInWhitespaceFacet, (Datatype_string * __this, MethodInfo * method));
DO_APP_FUNC(0x02360510, FacetsChecker *, Datatype_string_get_FacetsChecker, (Datatype_string * __this, MethodInfo * method));
DO_APP_FUNC(0x00ADC4A0, XmlTypeCode__Enum, Datatype_string_get_TypeCode, (Datatype_string * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, XmlTokenizedType__Enum, Datatype_string_get_TokenizedType, (Datatype_string * __this, MethodInfo * method));
DO_APP_FUNC(0x00E40570, RestrictionFlags__Enum, Datatype_string_get_ValidRestrictionFlags, (Datatype_string * __this, MethodInfo * method));
DO_APP_FUNC(0x023605B0, Exception *, Datatype_string_TryParseValue, (Datatype_string * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x02360700, void, Datatype_string__ctor, (Datatype_string * __this, MethodInfo * method));
DO_APP_FUNC(0x023594E0, XmlValueConverter *, Datatype_boolean_CreateValueConverter, (Datatype_boolean * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x023594F0, FacetsChecker *, Datatype_boolean_get_FacetsChecker, (Datatype_boolean * __this, MethodInfo * method));
DO_APP_FUNC(0x004AB2B0, XmlTypeCode__Enum, Datatype_boolean_get_TypeCode, (Datatype_boolean * __this, MethodInfo * method));
DO_APP_FUNC(0x02359590, Type *, Datatype_boolean_get_ValueType, (Datatype_boolean * __this, MethodInfo * method));
DO_APP_FUNC(0x02359630, Type *, Datatype_boolean_get_ListValueType, (Datatype_boolean * __this, MethodInfo * method));
DO_APP_FUNC(0x0043D9E0, XmlSchemaWhiteSpace__Enum, Datatype_boolean_get_BuiltInWhitespaceFacet, (Datatype_boolean * __this, MethodInfo * method));
DO_APP_FUNC(0x00C754B0, RestrictionFlags__Enum, Datatype_boolean_get_ValidRestrictionFlags, (Datatype_boolean * __this, MethodInfo * method));
DO_APP_FUNC(0x023596D0, int32_t, Datatype_boolean_Compare, (Datatype_boolean * __this, Object * value1, Object * value2, MethodInfo * method));
DO_APP_FUNC(0x02359790, Exception *, Datatype_boolean_TryParseValue, (Datatype_boolean * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x023598E0, void, Datatype_boolean__ctor, (Datatype_boolean * __this, MethodInfo * method));
DO_APP_FUNC(0x02359980, void, Datatype_boolean__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0235BED0, XmlValueConverter *, Datatype_float_CreateValueConverter, (Datatype_float * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x0235D3B0, FacetsChecker *, Datatype_float_get_FacetsChecker, (Datatype_float * __this, MethodInfo * method));
DO_APP_FUNC(0x00D51450, XmlTypeCode__Enum, Datatype_float_get_TypeCode, (Datatype_float * __this, MethodInfo * method));
DO_APP_FUNC(0x0235D450, Type *, Datatype_float_get_ValueType, (Datatype_float * __this, MethodInfo * method));
DO_APP_FUNC(0x0235D4F0, Type *, Datatype_float_get_ListValueType, (Datatype_float * __this, MethodInfo * method));
DO_APP_FUNC(0x0043D9E0, XmlSchemaWhiteSpace__Enum, Datatype_float_get_BuiltInWhitespaceFacet, (Datatype_float * __this, MethodInfo * method));
DO_APP_FUNC(0x0235AAB0, RestrictionFlags__Enum, Datatype_float_get_ValidRestrictionFlags, (Datatype_float * __this, MethodInfo * method));
DO_APP_FUNC(0x0235D590, int32_t, Datatype_float_Compare, (Datatype_float * __this, Object * value1, Object * value2, MethodInfo * method));
DO_APP_FUNC(0x0235D650, Exception *, Datatype_float_TryParseValue, (Datatype_float * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x0235D810, void, Datatype_float__ctor, (Datatype_float * __this, MethodInfo * method));
DO_APP_FUNC(0x0235D8B0, void, Datatype_float__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0235BED0, XmlValueConverter *, Datatype_double_CreateValueConverter, (Datatype_double * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x0235BEE0, FacetsChecker *, Datatype_double_get_FacetsChecker, (Datatype_double * __this, MethodInfo * method));
DO_APP_FUNC(0x007E3F10, XmlTypeCode__Enum, Datatype_double_get_TypeCode, (Datatype_double * __this, MethodInfo * method));
DO_APP_FUNC(0x0235BF80, Type *, Datatype_double_get_ValueType, (Datatype_double * __this, MethodInfo * method));
DO_APP_FUNC(0x0235C020, Type *, Datatype_double_get_ListValueType, (Datatype_double * __this, MethodInfo * method));
DO_APP_FUNC(0x0043D9E0, XmlSchemaWhiteSpace__Enum, Datatype_double_get_BuiltInWhitespaceFacet, (Datatype_double * __this, MethodInfo * method));
DO_APP_FUNC(0x0235AAB0, RestrictionFlags__Enum, Datatype_double_get_ValidRestrictionFlags, (Datatype_double * __this, MethodInfo * method));
DO_APP_FUNC(0x0235C0C0, int32_t, Datatype_double_Compare, (Datatype_double * __this, Object * value1, Object * value2, MethodInfo * method));
DO_APP_FUNC(0x0235C180, Exception *, Datatype_double_TryParseValue, (Datatype_double * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x0235C340, void, Datatype_double__ctor, (Datatype_double * __this, MethodInfo * method));
DO_APP_FUNC(0x0235C3E0, void, Datatype_double__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0235B710, XmlValueConverter *, Datatype_decimal_CreateValueConverter, (Datatype_decimal * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x0235B720, FacetsChecker *, Datatype_decimal_get_FacetsChecker, (Datatype_decimal * __this, MethodInfo * method));
DO_APP_FUNC(0x00C8F220, XmlTypeCode__Enum, Datatype_decimal_get_TypeCode, (Datatype_decimal * __this, MethodInfo * method));
DO_APP_FUNC(0x0235B7C0, Type *, Datatype_decimal_get_ValueType, (Datatype_decimal * __this, MethodInfo * method));
DO_APP_FUNC(0x0235B860, Type *, Datatype_decimal_get_ListValueType, (Datatype_decimal * __this, MethodInfo * method));
DO_APP_FUNC(0x0043D9E0, XmlSchemaWhiteSpace__Enum, Datatype_decimal_get_BuiltInWhitespaceFacet, (Datatype_decimal * __this, MethodInfo * method));
DO_APP_FUNC(0x0235B900, RestrictionFlags__Enum, Datatype_decimal_get_ValidRestrictionFlags, (Datatype_decimal * __this, MethodInfo * method));
DO_APP_FUNC(0x0235B910, int32_t, Datatype_decimal_Compare, (Datatype_decimal * __this, Object * value1, Object * value2, MethodInfo * method));
DO_APP_FUNC(0x0235B9D0, Exception *, Datatype_decimal_TryParseValue, (Datatype_decimal * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x0235BBA0, void, Datatype_decimal__ctor, (Datatype_decimal * __this, MethodInfo * method));
DO_APP_FUNC(0x0235BC40, void, Datatype_decimal__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02356E60, XmlValueConverter *, Datatype_duration_CreateValueConverter, (Datatype_duration * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x0235C760, FacetsChecker *, Datatype_duration_get_FacetsChecker, (Datatype_duration * __this, MethodInfo * method));
DO_APP_FUNC(0x007EC3F0, XmlTypeCode__Enum, Datatype_duration_get_TypeCode, (Datatype_duration * __this, MethodInfo * method));
DO_APP_FUNC(0x0235C800, Type *, Datatype_duration_get_ValueType, (Datatype_duration * __this, MethodInfo * method));
DO_APP_FUNC(0x0235C8A0, Type *, Datatype_duration_get_ListValueType, (Datatype_duration * __this, MethodInfo * method));
DO_APP_FUNC(0x0043D9E0, XmlSchemaWhiteSpace__Enum, Datatype_duration_get_BuiltInWhitespaceFacet, (Datatype_duration * __this, MethodInfo * method));
DO_APP_FUNC(0x0235AAB0, RestrictionFlags__Enum, Datatype_duration_get_ValidRestrictionFlags, (Datatype_duration * __this, MethodInfo * method));
DO_APP_FUNC(0x0235C940, int32_t, Datatype_duration_Compare, (Datatype_duration * __this, Object * value1, Object * value2, MethodInfo * method));
DO_APP_FUNC(0x0235CA00, Exception *, Datatype_duration_TryParseValue, (Datatype_duration * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x0235CD80, void, Datatype_duration__ctor, (Datatype_duration * __this, MethodInfo * method));
DO_APP_FUNC(0x0235CE20, void, Datatype_duration__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02363EE0, Exception *, Datatype_yearMonthDuration_TryParseValue, (Datatype_yearMonthDuration * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x00E406F0, XmlTypeCode__Enum, Datatype_yearMonthDuration_get_TypeCode, (Datatype_yearMonthDuration * __this, MethodInfo * method));
DO_APP_FUNC(0x023641D0, void, Datatype_yearMonthDuration__ctor, (Datatype_yearMonthDuration * __this, MethodInfo * method));
DO_APP_FUNC(0x0235B380, Exception *, Datatype_dayTimeDuration_TryParseValue, (Datatype_dayTimeDuration * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x00E3FDE0, XmlTypeCode__Enum, Datatype_dayTimeDuration_get_TypeCode, (Datatype_dayTimeDuration * __this, MethodInfo * method));
DO_APP_FUNC(0x0235B670, void, Datatype_dayTimeDuration__ctor, (Datatype_dayTimeDuration * __this, MethodInfo * method));
DO_APP_FUNC(0x0235A810, XmlValueConverter *, Datatype_dateTimeBase_CreateValueConverter, (Datatype_dateTimeBase * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x0235A820, FacetsChecker *, Datatype_dateTimeBase_get_FacetsChecker, (Datatype_dateTimeBase * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3D980, XmlTypeCode__Enum, Datatype_dateTimeBase_get_TypeCode, (Datatype_dateTimeBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0235A8C0, void, Datatype_dateTimeBase__ctor, (Datatype_dateTimeBase * __this, XsdDateTimeFlags__Enum dateTimeFlags, MethodInfo * method));
DO_APP_FUNC(0x0235A970, Type *, Datatype_dateTimeBase_get_ValueType, (Datatype_dateTimeBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0235AA10, Type *, Datatype_dateTimeBase_get_ListValueType, (Datatype_dateTimeBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0043D9E0, XmlSchemaWhiteSpace__Enum, Datatype_dateTimeBase_get_BuiltInWhitespaceFacet, (Datatype_dateTimeBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0235AAB0, RestrictionFlags__Enum, Datatype_dateTimeBase_get_ValidRestrictionFlags, (Datatype_dateTimeBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0235AAC0, int32_t, Datatype_dateTimeBase_Compare, (Datatype_dateTimeBase * __this, Object * value1, Object * value2, MethodInfo * method));
DO_APP_FUNC(0x0235AC30, Exception *, Datatype_dateTimeBase_TryParseValue, (Datatype_dateTimeBase * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x0235B0D0, void, Datatype_dateTimeBase__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0235B1A0, void, Datatype_dateTimeNoTimeZone__ctor, (Datatype_dateTimeNoTimeZone * __this, MethodInfo * method));
DO_APP_FUNC(0x0235B240, void, Datatype_dateTimeTimeZone__ctor, (Datatype_dateTimeTimeZone * __this, MethodInfo * method));
DO_APP_FUNC(0x0235A770, void, Datatype_dateTime__ctor, (Datatype_dateTime * __this, MethodInfo * method));
DO_APP_FUNC(0x02360840, void, Datatype_timeNoTimeZone__ctor, (Datatype_timeNoTimeZone * __this, MethodInfo * method));
DO_APP_FUNC(0x023608E0, void, Datatype_timeTimeZone__ctor, (Datatype_timeTimeZone * __this, MethodInfo * method));
DO_APP_FUNC(0x006FD6F0, XmlTypeCode__Enum, Datatype_time_get_TypeCode, (Datatype_time * __this, MethodInfo * method));
DO_APP_FUNC(0x023607A0, void, Datatype_time__ctor, (Datatype_time * __this, MethodInfo * method));
DO_APP_FUNC(0x007E3F30, XmlTypeCode__Enum, Datatype_date_get_TypeCode, (Datatype_date * __this, MethodInfo * method));
DO_APP_FUNC(0x0235A6D0, void, Datatype_date__ctor, (Datatype_date * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3E2D0, XmlTypeCode__Enum, Datatype_yearMonth_get_TypeCode, (Datatype_yearMonth * __this, MethodInfo * method));
DO_APP_FUNC(0x02363E40, void, Datatype_yearMonth__ctor, (Datatype_yearMonth * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3E310, XmlTypeCode__Enum, Datatype_year_get_TypeCode, (Datatype_year * __this, MethodInfo * method));
DO_APP_FUNC(0x02363DA0, void, Datatype_year__ctor, (Datatype_year * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3E350, XmlTypeCode__Enum, Datatype_monthDay_get_TypeCode, (Datatype_monthDay * __this, MethodInfo * method));
DO_APP_FUNC(0x0235F1D0, void, Datatype_monthDay__ctor, (Datatype_monthDay * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3E570, XmlTypeCode__Enum, Datatype_day_get_TypeCode, (Datatype_day * __this, MethodInfo * method));
DO_APP_FUNC(0x0235B2E0, void, Datatype_day__ctor, (Datatype_day * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3E740, XmlTypeCode__Enum, Datatype_month_get_TypeCode, (Datatype_month * __this, MethodInfo * method));
DO_APP_FUNC(0x0235F130, void, Datatype_month__ctor, (Datatype_month * __this, MethodInfo * method));
DO_APP_FUNC(0x02356E60, XmlValueConverter *, Datatype_hexBinary_CreateValueConverter, (Datatype_hexBinary * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x0235DBD0, FacetsChecker *, Datatype_hexBinary_get_FacetsChecker, (Datatype_hexBinary * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3AE80, XmlTypeCode__Enum, Datatype_hexBinary_get_TypeCode, (Datatype_hexBinary * __this, MethodInfo * method));
DO_APP_FUNC(0x0235DC70, Type *, Datatype_hexBinary_get_ValueType, (Datatype_hexBinary * __this, MethodInfo * method));
DO_APP_FUNC(0x0235DD10, Type *, Datatype_hexBinary_get_ListValueType, (Datatype_hexBinary * __this, MethodInfo * method));
DO_APP_FUNC(0x0043D9E0, XmlSchemaWhiteSpace__Enum, Datatype_hexBinary_get_BuiltInWhitespaceFacet, (Datatype_hexBinary * __this, MethodInfo * method));
DO_APP_FUNC(0x00E40570, RestrictionFlags__Enum, Datatype_hexBinary_get_ValidRestrictionFlags, (Datatype_hexBinary * __this, MethodInfo * method));
DO_APP_FUNC(0x0235DDB0, int32_t, Datatype_hexBinary_Compare, (Datatype_hexBinary * __this, Object * value1, Object * value2, MethodInfo * method));
DO_APP_FUNC(0x0235DEC0, Exception *, Datatype_hexBinary_TryParseValue, (Datatype_hexBinary * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x0235E070, void, Datatype_hexBinary__ctor, (Datatype_hexBinary * __this, MethodInfo * method));
DO_APP_FUNC(0x0235E110, void, Datatype_hexBinary__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02356E60, XmlValueConverter *, Datatype_base64Binary_CreateValueConverter, (Datatype_base64Binary * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x02358EE0, FacetsChecker *, Datatype_base64Binary_get_FacetsChecker, (Datatype_base64Binary * __this, MethodInfo * method));
DO_APP_FUNC(0x00ACB190, XmlTypeCode__Enum, Datatype_base64Binary_get_TypeCode, (Datatype_base64Binary * __this, MethodInfo * method));
DO_APP_FUNC(0x02358F80, Type *, Datatype_base64Binary_get_ValueType, (Datatype_base64Binary * __this, MethodInfo * method));
DO_APP_FUNC(0x02359020, Type *, Datatype_base64Binary_get_ListValueType, (Datatype_base64Binary * __this, MethodInfo * method));
DO_APP_FUNC(0x0043D9E0, XmlSchemaWhiteSpace__Enum, Datatype_base64Binary_get_BuiltInWhitespaceFacet, (Datatype_base64Binary * __this, MethodInfo * method));
DO_APP_FUNC(0x00E40570, RestrictionFlags__Enum, Datatype_base64Binary_get_ValidRestrictionFlags, (Datatype_base64Binary * __this, MethodInfo * method));
DO_APP_FUNC(0x023590C0, int32_t, Datatype_base64Binary_Compare, (Datatype_base64Binary * __this, Object * value1, Object * value2, MethodInfo * method));
DO_APP_FUNC(0x023591D0, Exception *, Datatype_base64Binary_TryParseValue, (Datatype_base64Binary * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x02359370, void, Datatype_base64Binary__ctor, (Datatype_base64Binary * __this, MethodInfo * method));
DO_APP_FUNC(0x02359410, void, Datatype_base64Binary__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02356E60, XmlValueConverter *, Datatype_anyURI_CreateValueConverter, (Datatype_anyURI * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x02358820, FacetsChecker *, Datatype_anyURI_get_FacetsChecker, (Datatype_anyURI * __this, MethodInfo * method));
DO_APP_FUNC(0x007E99A0, XmlTypeCode__Enum, Datatype_anyURI_get_TypeCode, (Datatype_anyURI * __this, MethodInfo * method));
DO_APP_FUNC(0x023588C0, Type *, Datatype_anyURI_get_ValueType, (Datatype_anyURI * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, Datatype_anyURI_get_HasValueFacets, (Datatype_anyURI * __this, MethodInfo * method));
DO_APP_FUNC(0x02358960, Type *, Datatype_anyURI_get_ListValueType, (Datatype_anyURI * __this, MethodInfo * method));
DO_APP_FUNC(0x0043D9E0, XmlSchemaWhiteSpace__Enum, Datatype_anyURI_get_BuiltInWhitespaceFacet, (Datatype_anyURI * __this, MethodInfo * method));
DO_APP_FUNC(0x00E40570, RestrictionFlags__Enum, Datatype_anyURI_get_ValidRestrictionFlags, (Datatype_anyURI * __this, MethodInfo * method));
DO_APP_FUNC(0x02358A00, int32_t, Datatype_anyURI_Compare, (Datatype_anyURI * __this, Object * value1, Object * value2, MethodInfo * method));
DO_APP_FUNC(0x02358B80, Exception *, Datatype_anyURI_TryParseValue, (Datatype_anyURI * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x02358D70, void, Datatype_anyURI__ctor, (Datatype_anyURI * __this, MethodInfo * method));
DO_APP_FUNC(0x02358E10, void, Datatype_anyURI__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02356E60, XmlValueConverter *, Datatype_QName_CreateValueConverter, (Datatype_QName * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x023576E0, FacetsChecker *, Datatype_QName_get_FacetsChecker, (Datatype_QName * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3E950, XmlTypeCode__Enum, Datatype_QName_get_TypeCode, (Datatype_QName * __this, MethodInfo * method));
DO_APP_FUNC(0x008556D0, XmlTokenizedType__Enum, Datatype_QName_get_TokenizedType, (Datatype_QName * __this, MethodInfo * method));
DO_APP_FUNC(0x00E40570, RestrictionFlags__Enum, Datatype_QName_get_ValidRestrictionFlags, (Datatype_QName * __this, MethodInfo * method));
DO_APP_FUNC(0x02357780, Type *, Datatype_QName_get_ValueType, (Datatype_QName * __this, MethodInfo * method));
DO_APP_FUNC(0x02357820, Type *, Datatype_QName_get_ListValueType, (Datatype_QName * __this, MethodInfo * method));
DO_APP_FUNC(0x0043D9E0, XmlSchemaWhiteSpace__Enum, Datatype_QName_get_BuiltInWhitespaceFacet, (Datatype_QName * __this, MethodInfo * method));
DO_APP_FUNC(0x023578C0, Exception *, Datatype_QName_TryParseValue, (Datatype_QName * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x02357B90, void, Datatype_QName__ctor, (Datatype_QName * __this, MethodInfo * method));
DO_APP_FUNC(0x02357C30, void, Datatype_QName__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00E3EE40, XmlTypeCode__Enum, Datatype_normalizedString_get_TypeCode, (Datatype_normalizedString * __this, MethodInfo * method));
DO_APP_FUNC(0x00417920, XmlSchemaWhiteSpace__Enum, Datatype_normalizedString_get_BuiltInWhitespaceFacet, (Datatype_normalizedString * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, Datatype_normalizedString_get_HasValueFacets, (Datatype_normalizedString * __this, MethodInfo * method));
DO_APP_FUNC(0x023557A0, void, Datatype_normalizedString__ctor, (Datatype_normalizedString * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3EE40, XmlTypeCode__Enum, Datatype_normalizedStringV1Compat_get_TypeCode, (Datatype_normalizedStringV1Compat * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, Datatype_normalizedStringV1Compat_get_HasValueFacets, (Datatype_normalizedStringV1Compat * __this, MethodInfo * method));
DO_APP_FUNC(0x023557A0, void, Datatype_normalizedStringV1Compat__ctor, (Datatype_normalizedStringV1Compat * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3EE80, XmlTypeCode__Enum, Datatype_token_get_TypeCode, (Datatype_token * __this, MethodInfo * method));
DO_APP_FUNC(0x0043D9E0, XmlSchemaWhiteSpace__Enum, Datatype_token_get_BuiltInWhitespaceFacet, (Datatype_token * __this, MethodInfo * method));
DO_APP_FUNC(0x023557A0, void, Datatype_token__ctor, (Datatype_token * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3EE80, XmlTypeCode__Enum, Datatype_tokenV1Compat_get_TypeCode, (Datatype_tokenV1Compat * __this, MethodInfo * method));
DO_APP_FUNC(0x023557A0, void, Datatype_tokenV1Compat__ctor, (Datatype_tokenV1Compat * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3F100, XmlTypeCode__Enum, Datatype_language_get_TypeCode, (Datatype_language * __this, MethodInfo * method));
DO_APP_FUNC(0x023557A0, void, Datatype_language__ctor, (Datatype_language * __this, MethodInfo * method));
DO_APP_FUNC(0x00A79BB0, XmlTypeCode__Enum, Datatype_NMTOKEN_get_TypeCode, (Datatype_NMTOKEN * __this, MethodInfo * method));
DO_APP_FUNC(0x005D89A0, XmlTokenizedType__Enum, Datatype_NMTOKEN_get_TokenizedType, (Datatype_NMTOKEN * __this, MethodInfo * method));
DO_APP_FUNC(0x023557A0, void, Datatype_NMTOKEN__ctor, (Datatype_NMTOKEN * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3CA20, XmlTypeCode__Enum, Datatype_Name_get_TypeCode, (Datatype_Name * __this, MethodInfo * method));
DO_APP_FUNC(0x023557A0, void, Datatype_Name__ctor, (Datatype_Name * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3FB10, XmlTypeCode__Enum, Datatype_NCName_get_TypeCode, (Datatype_NCName * __this, MethodInfo * method));
DO_APP_FUNC(0x02356CE0, Exception *, Datatype_NCName_TryParseValue, (Datatype_NCName * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x023557A0, void, Datatype_NCName__ctor, (Datatype_NCName * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3F9D0, XmlTypeCode__Enum, Datatype_ID_get_TypeCode, (Datatype_ID * __this, MethodInfo * method));
DO_APP_FUNC(0x00417920, XmlTokenizedType__Enum, Datatype_ID_get_TokenizedType, (Datatype_ID * __this, MethodInfo * method));
DO_APP_FUNC(0x023557A0, void, Datatype_ID__ctor, (Datatype_ID * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3F7C0, XmlTypeCode__Enum, Datatype_IDREF_get_TypeCode, (Datatype_IDREF * __this, MethodInfo * method));
DO_APP_FUNC(0x0043D9E0, XmlTokenizedType__Enum, Datatype_IDREF_get_TokenizedType, (Datatype_IDREF * __this, MethodInfo * method));
DO_APP_FUNC(0x023557A0, void, Datatype_IDREF__ctor, (Datatype_IDREF * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3FFC0, XmlTypeCode__Enum, Datatype_ENTITY_get_TypeCode, (Datatype_ENTITY * __this, MethodInfo * method));
DO_APP_FUNC(0x00910BD0, XmlTokenizedType__Enum, Datatype_ENTITY_get_TokenizedType, (Datatype_ENTITY * __this, MethodInfo * method));
DO_APP_FUNC(0x023557A0, void, Datatype_ENTITY__ctor, (Datatype_ENTITY * __this, MethodInfo * method));
DO_APP_FUNC(0x02356E60, XmlValueConverter *, Datatype_NOTATION_CreateValueConverter, (Datatype_NOTATION * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x02356E70, FacetsChecker *, Datatype_NOTATION_get_FacetsChecker, (Datatype_NOTATION * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3EBF0, XmlTypeCode__Enum, Datatype_NOTATION_get_TypeCode, (Datatype_NOTATION * __this, MethodInfo * method));
DO_APP_FUNC(0x0043D9A0, XmlTokenizedType__Enum, Datatype_NOTATION_get_TokenizedType, (Datatype_NOTATION * __this, MethodInfo * method));
DO_APP_FUNC(0x00E40570, RestrictionFlags__Enum, Datatype_NOTATION_get_ValidRestrictionFlags, (Datatype_NOTATION * __this, MethodInfo * method));
DO_APP_FUNC(0x02356F10, Type *, Datatype_NOTATION_get_ValueType, (Datatype_NOTATION * __this, MethodInfo * method));
DO_APP_FUNC(0x02356FB0, Type *, Datatype_NOTATION_get_ListValueType, (Datatype_NOTATION * __this, MethodInfo * method));
DO_APP_FUNC(0x0043D9E0, XmlSchemaWhiteSpace__Enum, Datatype_NOTATION_get_BuiltInWhitespaceFacet, (Datatype_NOTATION * __this, MethodInfo * method));
DO_APP_FUNC(0x02357050, Exception *, Datatype_NOTATION_TryParseValue, (Datatype_NOTATION * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x02357320, void, Datatype_NOTATION_VerifySchemaValid, (Datatype_NOTATION * __this, XmlSchemaObjectTable * notations, XmlSchemaObject * caller, MethodInfo * method));
DO_APP_FUNC(0x02357570, void, Datatype_NOTATION__ctor, (Datatype_NOTATION * __this, MethodInfo * method));
DO_APP_FUNC(0x02357610, void, Datatype_NOTATION__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00C754B0, XmlTypeCode__Enum, Datatype_integer_get_TypeCode, (Datatype_integer * __this, MethodInfo * method));
DO_APP_FUNC(0x0235E8B0, Exception *, Datatype_integer_TryParseValue, (Datatype_integer * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x0235EA40, void, Datatype_integer__ctor, (Datatype_integer * __this, MethodInfo * method));
DO_APP_FUNC(0x0235F850, FacetsChecker *, Datatype_nonPositiveInteger_get_FacetsChecker, (Datatype_nonPositiveInteger * __this, MethodInfo * method));
DO_APP_FUNC(0x00E408E0, XmlTypeCode__Enum, Datatype_nonPositiveInteger_get_TypeCode, (Datatype_nonPositiveInteger * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, Datatype_nonPositiveInteger_get_HasValueFacets, (Datatype_nonPositiveInteger * __this, MethodInfo * method));
DO_APP_FUNC(0x0235EF30, void, Datatype_nonPositiveInteger__ctor, (Datatype_nonPositiveInteger * __this, MethodInfo * method));
DO_APP_FUNC(0x0235F8F0, void, Datatype_nonPositiveInteger__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0235F270, FacetsChecker *, Datatype_negativeInteger_get_FacetsChecker, (Datatype_negativeInteger * __this, MethodInfo * method));
DO_APP_FUNC(0x005D6E50, XmlTypeCode__Enum, Datatype_negativeInteger_get_TypeCode, (Datatype_negativeInteger * __this, MethodInfo * method));
DO_APP_FUNC(0x0235F310, void, Datatype_negativeInteger__ctor, (Datatype_negativeInteger * __this, MethodInfo * method));
DO_APP_FUNC(0x0235F3B0, void, Datatype_negativeInteger__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0235EAE0, FacetsChecker *, Datatype_long_get_FacetsChecker, (Datatype_long * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, Datatype_long_get_HasValueFacets, (Datatype_long * __this, MethodInfo * method));
DO_APP_FUNC(0x00E40D50, XmlTypeCode__Enum, Datatype_long_get_TypeCode, (Datatype_long * __this, MethodInfo * method));
DO_APP_FUNC(0x0235EB80, int32_t, Datatype_long_Compare, (Datatype_long * __this, Object * value1, Object * value2, MethodInfo * method));
DO_APP_FUNC(0x0235EC40, Type *, Datatype_long_get_ValueType, (Datatype_long * __this, MethodInfo * method));
DO_APP_FUNC(0x0235ECE0, Type *, Datatype_long_get_ListValueType, (Datatype_long * __this, MethodInfo * method));
DO_APP_FUNC(0x0235ED80, Exception *, Datatype_long_TryParseValue, (Datatype_long * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x0235EF30, void, Datatype_long__ctor, (Datatype_long * __this, MethodInfo * method));
DO_APP_FUNC(0x0235EF40, void, Datatype_long__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0235E1E0, FacetsChecker *, Datatype_int_get_FacetsChecker, (Datatype_int * __this, MethodInfo * method));
DO_APP_FUNC(0x00E40FA0, XmlTypeCode__Enum, Datatype_int_get_TypeCode, (Datatype_int * __this, MethodInfo * method));
DO_APP_FUNC(0x0235E280, int32_t, Datatype_int_Compare, (Datatype_int * __this, Object * value1, Object * value2, MethodInfo * method));
DO_APP_FUNC(0x0235E340, Type *, Datatype_int_get_ValueType, (Datatype_int * __this, MethodInfo * method));
DO_APP_FUNC(0x0235E3E0, Type *, Datatype_int_get_ListValueType, (Datatype_int * __this, MethodInfo * method));
DO_APP_FUNC(0x0235E480, Exception *, Datatype_int_TryParseValue, (Datatype_int * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x0235E630, void, Datatype_int__ctor, (Datatype_int * __this, MethodInfo * method));
DO_APP_FUNC(0x0235E6D0, void, Datatype_int__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0235FE30, FacetsChecker *, Datatype_short_get_FacetsChecker, (Datatype_short * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3BD70, XmlTypeCode__Enum, Datatype_short_get_TypeCode, (Datatype_short * __this, MethodInfo * method));
DO_APP_FUNC(0x0235FED0, int32_t, Datatype_short_Compare, (Datatype_short * __this, Object * value1, Object * value2, MethodInfo * method));
DO_APP_FUNC(0x0235FF90, Type *, Datatype_short_get_ValueType, (Datatype_short * __this, MethodInfo * method));
DO_APP_FUNC(0x02360030, Type *, Datatype_short_get_ListValueType, (Datatype_short * __this, MethodInfo * method));
DO_APP_FUNC(0x023600D0, Exception *, Datatype_short_TryParseValue, (Datatype_short * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x02360280, void, Datatype_short__ctor, (Datatype_short * __this, MethodInfo * method));
DO_APP_FUNC(0x02360320, void, Datatype_short__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02359A50, FacetsChecker *, Datatype_byte_get_FacetsChecker, (Datatype_byte * __this, MethodInfo * method));
DO_APP_FUNC(0x00E16AE0, XmlTypeCode__Enum, Datatype_byte_get_TypeCode, (Datatype_byte * __this, MethodInfo * method));
DO_APP_FUNC(0x02359AF0, int32_t, Datatype_byte_Compare, (Datatype_byte * __this, Object * value1, Object * value2, MethodInfo * method));
DO_APP_FUNC(0x02359BB0, Type *, Datatype_byte_get_ValueType, (Datatype_byte * __this, MethodInfo * method));
DO_APP_FUNC(0x02359C50, Type *, Datatype_byte_get_ListValueType, (Datatype_byte * __this, MethodInfo * method));
DO_APP_FUNC(0x02359CF0, Exception *, Datatype_byte_TryParseValue, (Datatype_byte * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x02359EA0, void, Datatype_byte__ctor, (Datatype_byte * __this, MethodInfo * method));
DO_APP_FUNC(0x02359F40, void, Datatype_byte__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0235F5B0, FacetsChecker *, Datatype_nonNegativeInteger_get_FacetsChecker, (Datatype_nonNegativeInteger * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3AD20, XmlTypeCode__Enum, Datatype_nonNegativeInteger_get_TypeCode, (Datatype_nonNegativeInteger * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, Datatype_nonNegativeInteger_get_HasValueFacets, (Datatype_nonNegativeInteger * __this, MethodInfo * method));
DO_APP_FUNC(0x0235EF30, void, Datatype_nonNegativeInteger__ctor, (Datatype_nonNegativeInteger * __this, MethodInfo * method));
DO_APP_FUNC(0x0235F650, void, Datatype_nonNegativeInteger__cctor, (MethodInfo * method));
DO_APP_FUNC(0x023628E0, FacetsChecker *, Datatype_unsignedLong_get_FacetsChecker, (Datatype_unsignedLong * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3E530, XmlTypeCode__Enum, Datatype_unsignedLong_get_TypeCode, (Datatype_unsignedLong * __this, MethodInfo * method));
DO_APP_FUNC(0x02362980, int32_t, Datatype_unsignedLong_Compare, (Datatype_unsignedLong * __this, Object * value1, Object * value2, MethodInfo * method));
DO_APP_FUNC(0x02362A40, Type *, Datatype_unsignedLong_get_ValueType, (Datatype_unsignedLong * __this, MethodInfo * method));
DO_APP_FUNC(0x02362AE0, Type *, Datatype_unsignedLong_get_ListValueType, (Datatype_unsignedLong * __this, MethodInfo * method));
DO_APP_FUNC(0x02362B80, Exception *, Datatype_unsignedLong_TryParseValue, (Datatype_unsignedLong * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x02362D80, void, Datatype_unsignedLong__ctor, (Datatype_unsignedLong * __this, MethodInfo * method));
DO_APP_FUNC(0x02362E20, void, Datatype_unsignedLong__cctor, (MethodInfo * method));
DO_APP_FUNC(0x023621F0, FacetsChecker *, Datatype_unsignedInt_get_FacetsChecker, (Datatype_unsignedInt * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3BD30, XmlTypeCode__Enum, Datatype_unsignedInt_get_TypeCode, (Datatype_unsignedInt * __this, MethodInfo * method));
DO_APP_FUNC(0x02362290, int32_t, Datatype_unsignedInt_Compare, (Datatype_unsignedInt * __this, Object * value1, Object * value2, MethodInfo * method));
DO_APP_FUNC(0x02362350, Type *, Datatype_unsignedInt_get_ValueType, (Datatype_unsignedInt * __this, MethodInfo * method));
DO_APP_FUNC(0x023623F0, Type *, Datatype_unsignedInt_get_ListValueType, (Datatype_unsignedInt * __this, MethodInfo * method));
DO_APP_FUNC(0x02362490, Exception *, Datatype_unsignedInt_TryParseValue, (Datatype_unsignedInt * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x02362640, void, Datatype_unsignedInt__ctor, (Datatype_unsignedInt * __this, MethodInfo * method));
DO_APP_FUNC(0x023626E0, void, Datatype_unsignedInt__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02363020, FacetsChecker *, Datatype_unsignedShort_get_FacetsChecker, (Datatype_unsignedShort * __this, MethodInfo * method));
DO_APP_FUNC(0x00D5A0A0, XmlTypeCode__Enum, Datatype_unsignedShort_get_TypeCode, (Datatype_unsignedShort * __this, MethodInfo * method));
DO_APP_FUNC(0x023630C0, int32_t, Datatype_unsignedShort_Compare, (Datatype_unsignedShort * __this, Object * value1, Object * value2, MethodInfo * method));
DO_APP_FUNC(0x02363180, Type *, Datatype_unsignedShort_get_ValueType, (Datatype_unsignedShort * __this, MethodInfo * method));
DO_APP_FUNC(0x02363220, Type *, Datatype_unsignedShort_get_ListValueType, (Datatype_unsignedShort * __this, MethodInfo * method));
DO_APP_FUNC(0x023632C0, Exception *, Datatype_unsignedShort_TryParseValue, (Datatype_unsignedShort * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x02363470, void, Datatype_unsignedShort__ctor, (Datatype_unsignedShort * __this, MethodInfo * method));
DO_APP_FUNC(0x02363510, void, Datatype_unsignedShort__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02361B00, FacetsChecker *, Datatype_unsignedByte_get_FacetsChecker, (Datatype_unsignedByte * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3CE50, XmlTypeCode__Enum, Datatype_unsignedByte_get_TypeCode, (Datatype_unsignedByte * __this, MethodInfo * method));
DO_APP_FUNC(0x02361BA0, int32_t, Datatype_unsignedByte_Compare, (Datatype_unsignedByte * __this, Object * value1, Object * value2, MethodInfo * method));
DO_APP_FUNC(0x02361C60, Type *, Datatype_unsignedByte_get_ValueType, (Datatype_unsignedByte * __this, MethodInfo * method));
DO_APP_FUNC(0x02361D00, Type *, Datatype_unsignedByte_get_ListValueType, (Datatype_unsignedByte * __this, MethodInfo * method));
DO_APP_FUNC(0x02361DA0, Exception *, Datatype_unsignedByte_TryParseValue, (Datatype_unsignedByte * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x02361F50, void, Datatype_unsignedByte__ctor, (Datatype_unsignedByte * __this, MethodInfo * method));
DO_APP_FUNC(0x02361FF0, void, Datatype_unsignedByte__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0235FAF0, FacetsChecker *, Datatype_positiveInteger_get_FacetsChecker, (Datatype_positiveInteger * __this, MethodInfo * method));
DO_APP_FUNC(0x00E3E390, XmlTypeCode__Enum, Datatype_positiveInteger_get_TypeCode, (Datatype_positiveInteger * __this, MethodInfo * method));
DO_APP_FUNC(0x0235FB90, void, Datatype_positiveInteger__ctor, (Datatype_positiveInteger * __this, MethodInfo * method));
DO_APP_FUNC(0x0235FC30, void, Datatype_positiveInteger__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0235C4B0, Object *, Datatype_doubleXdr_ParseValue, (Datatype_doubleXdr * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, MethodInfo * method));
DO_APP_FUNC(0x0235C6C0, void, Datatype_doubleXdr__ctor, (Datatype_doubleXdr * __this, MethodInfo * method));
DO_APP_FUNC(0x0235D980, Object *, Datatype_floatXdr_ParseValue, (Datatype_floatXdr * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, MethodInfo * method));
DO_APP_FUNC(0x0235DB30, void, Datatype_floatXdr__ctor, (Datatype_floatXdr * __this, MethodInfo * method));
DO_APP_FUNC(0x008556D0, XmlTokenizedType__Enum, Datatype_QNameXdr_get_TokenizedType, (Datatype_QNameXdr * __this, MethodInfo * method));
DO_APP_FUNC(0x02357D00, Object *, Datatype_QNameXdr_ParseValue, (Datatype_QNameXdr * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, MethodInfo * method));
DO_APP_FUNC(0x02357F00, Type *, Datatype_QNameXdr_get_ValueType, (Datatype_QNameXdr * __this, MethodInfo * method));
DO_APP_FUNC(0x02357FA0, Type *, Datatype_QNameXdr_get_ListValueType, (Datatype_QNameXdr * __this, MethodInfo * method));
DO_APP_FUNC(0x02358040, void, Datatype_QNameXdr__ctor, (Datatype_QNameXdr * __this, MethodInfo * method));
DO_APP_FUNC(0x023580E0, void, Datatype_QNameXdr__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00AB4D20, XmlTokenizedType__Enum, Datatype_ENUMERATION_get_TokenizedType, (Datatype_ENUMERATION * __this, MethodInfo * method));
DO_APP_FUNC(0x023557A0, void, Datatype_ENUMERATION__ctor, (Datatype_ENUMERATION * __this, MethodInfo * method));
DO_APP_FUNC(0x0235A120, Type *, Datatype_char_get_ValueType, (Datatype_char * __this, MethodInfo * method));
DO_APP_FUNC(0x0235A1C0, Type *, Datatype_char_get_ListValueType, (Datatype_char * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, RestrictionFlags__Enum, Datatype_char_get_ValidRestrictionFlags, (Datatype_char * __this, MethodInfo * method));
DO_APP_FUNC(0x0235A260, int32_t, Datatype_char_Compare, (Datatype_char * __this, Object * value1, Object * value2, MethodInfo * method));
DO_APP_FUNC(0x0235A320, Object *, Datatype_char_ParseValue, (Datatype_char * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, MethodInfo * method));
DO_APP_FUNC(0x0235A480, Exception *, Datatype_char_TryParseValue, (Datatype_char * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x0235A560, void, Datatype_char__ctor, (Datatype_char * __this, MethodInfo * method));
DO_APP_FUNC(0x0235A600, void, Datatype_char__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0235CEF0, Object *, Datatype_fixed_ParseValue, (Datatype_fixed * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, MethodInfo * method));
DO_APP_FUNC(0x0235D140, Exception *, Datatype_fixed_TryParseValue, (Datatype_fixed * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x0235D310, void, Datatype_fixed__ctor, (Datatype_fixed * __this, MethodInfo * method));
DO_APP_FUNC(0x023637C0, Type *, Datatype_uuid_get_ValueType, (Datatype_uuid * __this, MethodInfo * method));
DO_APP_FUNC(0x02363860, Type *, Datatype_uuid_get_ListValueType, (Datatype_uuid * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, RestrictionFlags__Enum, Datatype_uuid_get_ValidRestrictionFlags, (Datatype_uuid * __this, MethodInfo * method));
DO_APP_FUNC(0x02363900, int32_t, Datatype_uuid_Compare, (Datatype_uuid * __this, Object * value1, Object * value2, MethodInfo * method));
DO_APP_FUNC(0x023639D0, Object *, Datatype_uuid_ParseValue, (Datatype_uuid * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, MethodInfo * method));
DO_APP_FUNC(0x02363B40, Exception *, Datatype_uuid_TryParseValue, (Datatype_uuid * __this, String * s, XmlNameTable * nameTable, IXmlNamespaceResolver * nsmgr, Object * * typedValue, MethodInfo * method));
DO_APP_FUNC(0x02363C30, void, Datatype_uuid__ctor, (Datatype_uuid * __this, MethodInfo * method));
DO_APP_FUNC(0x02363CD0, void, Datatype_uuid__cctor, (MethodInfo * method));
DO_APP_FUNC(0x023657A0, void, DtdValidator__ctor, (DtdValidator * __this, XmlValidatingReaderImpl * reader, IValidationEventHandling * eventHandling, bool processIdentityConstraints, MethodInfo * method));
DO_APP_FUNC(0x023658A0, void, DtdValidator_Init, (DtdValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x02365CB0, void, DtdValidator_Validate, (DtdValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x023661C0, bool, DtdValidator_MeetsStandAloneConstraint, (DtdValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x023662C0, void, DtdValidator_ValidatePIComment, (DtdValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x023663C0, void, DtdValidator_ValidateElement, (DtdValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x02366580, void, DtdValidator_ValidateChildElement, (DtdValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x02366780, void, DtdValidator_ValidateStartElement, (DtdValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x02366DD0, void, DtdValidator_ValidateEndStartElement, (DtdValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x02367000, void, DtdValidator_ProcessElement, (DtdValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x02367190, void, DtdValidator_CompleteValidation, (DtdValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x023671F0, void, DtdValidator_ValidateEndElement, (DtdValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x01C870B0, bool, DtdValidator_get_PreserveWhitespace, (DtdValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x02367450, void, DtdValidator_ProcessTokenizedType, (DtdValidator * __this, XmlTokenizedType__Enum ttype, String * name, MethodInfo * method));
DO_APP_FUNC(0x02367780, void, DtdValidator_CheckValue, (DtdValidator * __this, String * value, SchemaAttDef * attdef, MethodInfo * method));
DO_APP_FUNC(0x02367CE0, void, DtdValidator_AddID, (DtdValidator * __this, String * name, Object * node, MethodInfo * method));
DO_APP_FUNC(0x02367E80, Object *, DtdValidator_FindId, (DtdValidator * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x02367EA0, bool, DtdValidator_GenEntity, (DtdValidator * __this, XmlQualifiedName * qname, MethodInfo * method));
DO_APP_FUNC(0x02368090, SchemaEntity *, DtdValidator_GetEntity, (DtdValidator * __this, XmlQualifiedName * qname, bool fParameterEntity, MethodInfo * method));
DO_APP_FUNC(0x02368240, void, DtdValidator_CheckForwardRefs, (DtdValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x02368450, void, DtdValidator_Push, (DtdValidator * __this, XmlQualifiedName * elementName, MethodInfo * method));
DO_APP_FUNC(0x02368680, bool, DtdValidator_Pop, (DtdValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x023687E0, void, DtdValidator_SetDefaultTypedValue, (SchemaAttDef * attdef, IDtdParserAdapter * readerAdapter, MethodInfo * method));
DO_APP_FUNC(0x02368AB0, void, DtdValidator_CheckDefaultValue, (SchemaAttDef * attdef, SchemaInfo * sinfo, IValidationEventHandling * eventHandling, String * baseUriStr, MethodInfo * method));
DO_APP_FUNC(0x02368F40, void, DtdValidator__cctor, (MethodInfo * method));
DO_APP_FUNC(0x00502220, String *, DtdValidator_NamespaceManager_LookupNamespace, (DtdValidator_NamespaceManager * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DtdValidator_NamespaceManager__ctor, (DtdValidator_NamespaceManager * __this, MethodInfo * method));
DO_APP_FUNC(0x02369B00, Exception *, FacetsChecker_CheckLexicalFacets, (FacetsChecker * __this, String * * parseString, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Exception *, FacetsChecker_CheckValueFacets, (FacetsChecker * __this, Object * value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Exception *, FacetsChecker_CheckValueFacets_1, (FacetsChecker * __this, Decimal value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Exception *, FacetsChecker_CheckValueFacets_2, (FacetsChecker * __this, int64_t value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Exception *, FacetsChecker_CheckValueFacets_3, (FacetsChecker * __this, int32_t value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Exception *, FacetsChecker_CheckValueFacets_4, (FacetsChecker * __this, int16_t value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Exception *, FacetsChecker_CheckValueFacets_5, (FacetsChecker * __this, DateTime value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Exception *, FacetsChecker_CheckValueFacets_6, (FacetsChecker * __this, double value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Exception *, FacetsChecker_CheckValueFacets_7, (FacetsChecker * __this, float value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Exception *, FacetsChecker_CheckValueFacets_8, (FacetsChecker * __this, String * value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Exception *, FacetsChecker_CheckValueFacets_9, (FacetsChecker * __this, Byte__Array * value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Exception *, FacetsChecker_CheckValueFacets_10, (FacetsChecker * __this, TimeSpan value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, Exception *, FacetsChecker_CheckValueFacets_11, (FacetsChecker * __this, XmlQualifiedName * value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x02369C20, void, FacetsChecker_CheckWhitespaceFacets, (FacetsChecker * __this, String * * s, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x02369D30, Exception *, FacetsChecker_CheckPatternFacets, (FacetsChecker * __this, RestrictionFacets * restriction, String * value, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, FacetsChecker_MatchEnumeration, (FacetsChecker * __this, Object * value, ArrayList * enumeration, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x02369F60, RestrictionFacets *, FacetsChecker_ConstructRestriction, (FacetsChecker * __this, DatatypeImplementation * datatype, XmlSchemaObjectCollection * facets, XmlNameTable * nameTable, MethodInfo * method));
DO_APP_FUNC(0x0236A480, Decimal, FacetsChecker_Power, (int32_t x, int32_t y, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, FacetsChecker__ctor, (FacetsChecker * __this, MethodInfo * method));
DO_APP_FUNC(0x001E6F60, void, FacetsChecker_FacetsCompiler__ctor, (FacetsChecker_FacetsCompiler__Boxed * __this, DatatypeImplementation * baseDatatype, RestrictionFacets * restriction, MethodInfo * method));
DO_APP_FUNC(0x001E6F70, void, FacetsChecker_FacetsCompiler_CompileLengthFacet, (FacetsChecker_FacetsCompiler__Boxed * __this, XmlSchemaFacet * facet, MethodInfo * method));
DO_APP_FUNC(0x001E6F80, void, FacetsChecker_FacetsCompiler_CompileMinLengthFacet, (FacetsChecker_FacetsCompiler__Boxed * __this, XmlSchemaFacet * facet, MethodInfo * method));
DO_APP_FUNC(0x001E6F90, void, FacetsChecker_FacetsCompiler_CompileMaxLengthFacet, (FacetsChecker_FacetsCompiler__Boxed * __this, XmlSchemaFacet * facet, MethodInfo * method));
DO_APP_FUNC(0x001E6FA0, void, FacetsChecker_FacetsCompiler_CompilePatternFacet, (FacetsChecker_FacetsCompiler__Boxed * __this, XmlSchemaPatternFacet * facet, MethodInfo * method));
DO_APP_FUNC(0x001E6FB0, void, FacetsChecker_FacetsCompiler_CompileEnumerationFacet, (FacetsChecker_FacetsCompiler__Boxed * __this, XmlSchemaFacet * facet, IXmlNamespaceResolver * nsmgr, XmlNameTable * nameTable, MethodInfo * method));
DO_APP_FUNC(0x001E6FC0, void, FacetsChecker_FacetsCompiler_CompileWhitespaceFacet, (FacetsChecker_FacetsCompiler__Boxed * __this, XmlSchemaFacet * facet, MethodInfo * method));
DO_APP_FUNC(0x001E6FD0, void, FacetsChecker_FacetsCompiler_CompileMaxInclusiveFacet, (FacetsChecker_FacetsCompiler__Boxed * __this, XmlSchemaFacet * facet, MethodInfo * method));
DO_APP_FUNC(0x001E6FE0, void, FacetsChecker_FacetsCompiler_CompileMaxExclusiveFacet, (FacetsChecker_FacetsCompiler__Boxed * __this, XmlSchemaFacet * facet, MethodInfo * method));
DO_APP_FUNC(0x001E6FF0, void, FacetsChecker_FacetsCompiler_CompileMinInclusiveFacet, (FacetsChecker_FacetsCompiler__Boxed * __this, XmlSchemaFacet * facet, MethodInfo * method));
DO_APP_FUNC(0x001E7000, void, FacetsChecker_FacetsCompiler_CompileMinExclusiveFacet, (FacetsChecker_FacetsCompiler__Boxed * __this, XmlSchemaFacet * facet, MethodInfo * method));
DO_APP_FUNC(0x001E7010, void, FacetsChecker_FacetsCompiler_CompileTotalDigitsFacet, (FacetsChecker_FacetsCompiler__Boxed * __this, XmlSchemaFacet * facet, MethodInfo * method));
DO_APP_FUNC(0x001E7020, void, FacetsChecker_FacetsCompiler_CompileFractionDigitsFacet, (FacetsChecker_FacetsCompiler__Boxed * __this, XmlSchemaFacet * facet, MethodInfo * method));
DO_APP_FUNC(0x001E7030, void, FacetsChecker_FacetsCompiler_FinishFacetCompile, (FacetsChecker_FacetsCompiler__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E7040, void, FacetsChecker_FacetsCompiler_CheckValue, (FacetsChecker_FacetsCompiler__Boxed * __this, Object * value, XmlSchemaFacet * facet, MethodInfo * method));
DO_APP_FUNC(0x001E7050, void, FacetsChecker_FacetsCompiler_CompileFacetCombinations, (FacetsChecker_FacetsCompiler__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E7060, void, FacetsChecker_FacetsCompiler_CopyFacetsFromBaseType, (FacetsChecker_FacetsCompiler__Boxed * __this, MethodInfo * method));
DO_APP_FUNC(0x001E7070, Object *, FacetsChecker_FacetsCompiler_ParseFacetValue, (FacetsChecker_FacetsCompiler__Boxed * __this, XmlSchemaDatatype * datatype, XmlSchemaFacet * facet, String * code, IXmlNamespaceResolver * nsmgr, XmlNameTable * nameTable, MethodInfo * method));
DO_APP_FUNC(0x0236E690, String *, FacetsChecker_FacetsCompiler_Preprocess, (String * pattern, MethodInfo * method));
DO_APP_FUNC(0x001E7080, void, FacetsChecker_FacetsCompiler_CheckProhibitedFlag, (FacetsChecker_FacetsCompiler__Boxed * __this, XmlSchemaFacet * facet, RestrictionFlags__Enum flag, String * errorCode, MethodInfo * method));
DO_APP_FUNC(0x001E7090, void, FacetsChecker_FacetsCompiler_CheckDupFlag, (FacetsChecker_FacetsCompiler__Boxed * __this, XmlSchemaFacet * facet, RestrictionFlags__Enum flag, String * errorCode, MethodInfo * method));
DO_APP_FUNC(0x001E70A0, void, FacetsChecker_FacetsCompiler_SetFlag, (FacetsChecker_FacetsCompiler__Boxed * __this, XmlSchemaFacet * facet, RestrictionFlags__Enum flag, MethodInfo * method));
DO_APP_FUNC(0x001E7110, void, FacetsChecker_FacetsCompiler_SetFlag_1, (FacetsChecker_FacetsCompiler__Boxed * __this, RestrictionFlags__Enum flag, MethodInfo * method));
DO_APP_FUNC(0x0236EC50, void, FacetsChecker_FacetsCompiler__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0013BE80, void, FacetsChecker_FacetsCompiler_Map__ctor, (FacetsChecker_FacetsCompiler_Map__Boxed * __this, uint16_t m, String * r, MethodInfo * method));
DO_APP_FUNC(0x016D0D80, void, Numeric10FacetsChecker__ctor, (Numeric10FacetsChecker * __this, Decimal minVal, Decimal maxVal, MethodInfo * method));
DO_APP_FUNC(0x016D0D90, Exception *, Numeric10FacetsChecker_CheckValueFacets, (Numeric10FacetsChecker * __this, Object * value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x016D0E30, Exception *, Numeric10FacetsChecker_CheckValueFacets_1, (Numeric10FacetsChecker * __this, Decimal value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x016D19A0, Exception *, Numeric10FacetsChecker_CheckValueFacets_2, (Numeric10FacetsChecker * __this, int64_t value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x016D1AA0, Exception *, Numeric10FacetsChecker_CheckValueFacets_3, (Numeric10FacetsChecker * __this, int32_t value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x016D1BA0, Exception *, Numeric10FacetsChecker_CheckValueFacets_4, (Numeric10FacetsChecker * __this, int16_t value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x016D1CA0, bool, Numeric10FacetsChecker_MatchEnumeration, (Numeric10FacetsChecker * __this, Object * value, ArrayList * enumeration, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x016D1D60, bool, Numeric10FacetsChecker_MatchEnumeration_1, (Numeric10FacetsChecker * __this, Decimal value, ArrayList * enumeration, XmlValueConverter * valueConverter, MethodInfo * method));
DO_APP_FUNC(0x016D1ED0, Exception *, Numeric10FacetsChecker_CheckTotalAndFractionDigits, (Numeric10FacetsChecker * __this, Decimal value, int32_t totalDigits, int32_t fractionDigits, bool checkTotal, bool checkFraction, MethodInfo * method));
DO_APP_FUNC(0x016D2530, void, Numeric10FacetsChecker__cctor, (MethodInfo * method));
DO_APP_FUNC(0x016D2610, Exception *, Numeric2FacetsChecker_CheckValueFacets, (Numeric2FacetsChecker * __this, Object * value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x016D26A0, Exception *, Numeric2FacetsChecker_CheckValueFacets_1, (Numeric2FacetsChecker * __this, double value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x016D2D40, Exception *, Numeric2FacetsChecker_CheckValueFacets_2, (Numeric2FacetsChecker * __this, float value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x016D2D60, bool, Numeric2FacetsChecker_MatchEnumeration, (Numeric2FacetsChecker * __this, Object * value, ArrayList * enumeration, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x016D2E10, bool, Numeric2FacetsChecker_MatchEnumeration_1, (Numeric2FacetsChecker * __this, double value, ArrayList * enumeration, XmlValueConverter * valueConverter, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, Numeric2FacetsChecker__ctor, (Numeric2FacetsChecker * __this, MethodInfo * method));
DO_APP_FUNC(0x02369080, Exception *, DurationFacetsChecker_CheckValueFacets, (DurationFacetsChecker * __this, Object * value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x023691E0, Exception *, DurationFacetsChecker_CheckValueFacets_1, (DurationFacetsChecker * __this, TimeSpan value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x02369910, bool, DurationFacetsChecker_MatchEnumeration, (DurationFacetsChecker * __this, Object * value, ArrayList * enumeration, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x023699D0, bool, DurationFacetsChecker_MatchEnumeration_1, (DurationFacetsChecker * __this, TimeSpan value, ArrayList * enumeration, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DurationFacetsChecker__ctor, (DurationFacetsChecker * __this, MethodInfo * method));
DO_APP_FUNC(0x02364270, Exception *, DateTimeFacetsChecker_CheckValueFacets, (DateTimeFacetsChecker * __this, Object * value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x02364300, Exception *, DateTimeFacetsChecker_CheckValueFacets_1, (DateTimeFacetsChecker * __this, DateTime value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x02364AC0, bool, DateTimeFacetsChecker_MatchEnumeration, (DateTimeFacetsChecker * __this, Object * value, ArrayList * enumeration, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x02364B50, bool, DateTimeFacetsChecker_MatchEnumeration_1, (DateTimeFacetsChecker * __this, DateTime value, ArrayList * enumeration, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, DateTimeFacetsChecker__ctor, (DateTimeFacetsChecker * __this, MethodInfo * method));
DO_APP_FUNC(0x01ABA6E0, Regex *, StringFacetsChecker_get_LanguagePattern, (MethodInfo * method));
DO_APP_FUNC(0x01ABA870, Exception *, StringFacetsChecker_CheckValueFacets, (StringFacetsChecker * __this, Object * value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x01ABA900, Exception *, StringFacetsChecker_CheckValueFacets_1, (StringFacetsChecker * __this, String * value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x01ABA920, Exception *, StringFacetsChecker_CheckValueFacets_2, (StringFacetsChecker * __this, String * value, XmlSchemaDatatype * datatype, bool verifyUri, MethodInfo * method));
DO_APP_FUNC(0x01ABAE70, bool, StringFacetsChecker_MatchEnumeration, (StringFacetsChecker * __this, Object * value, ArrayList * enumeration, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x01ABAF00, bool, StringFacetsChecker_MatchEnumeration_1, (StringFacetsChecker * __this, String * value, ArrayList * enumeration, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x01ABB110, Exception *, StringFacetsChecker_CheckBuiltInFacets, (StringFacetsChecker * __this, String * s, XmlTypeCode__Enum typeCode, bool verifyUri, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, StringFacetsChecker__ctor, (StringFacetsChecker * __this, MethodInfo * method));
DO_APP_FUNC(0x016E53A0, Exception *, QNameFacetsChecker_CheckValueFacets, (QNameFacetsChecker * __this, Object * value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x016E5520, Exception *, QNameFacetsChecker_CheckValueFacets_1, (QNameFacetsChecker * __this, XmlQualifiedName * value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x016E5A10, bool, QNameFacetsChecker_MatchEnumeration, (QNameFacetsChecker * __this, Object * value, ArrayList * enumeration, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x016E5B90, bool, QNameFacetsChecker_MatchEnumeration_1, (QNameFacetsChecker * __this, XmlQualifiedName * value, ArrayList * enumeration, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, QNameFacetsChecker__ctor, (QNameFacetsChecker * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, MiscFacetsChecker__ctor, (MiscFacetsChecker * __this, MethodInfo * method));
DO_APP_FUNC(0x019A7FE0, Exception *, BinaryFacetsChecker_CheckValueFacets, (BinaryFacetsChecker * __this, Object * value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x019A80C0, Exception *, BinaryFacetsChecker_CheckValueFacets_1, (BinaryFacetsChecker * __this, Byte__Array * value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x019A8580, bool, BinaryFacetsChecker_MatchEnumeration, (BinaryFacetsChecker * __this, Object * value, ArrayList * enumeration, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x019A8670, bool, BinaryFacetsChecker_MatchEnumeration_1, (BinaryFacetsChecker * __this, Byte__Array * value, ArrayList * enumeration, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, BinaryFacetsChecker__ctor, (BinaryFacetsChecker * __this, MethodInfo * method));
DO_APP_FUNC(0x016CD2E0, Exception *, ListFacetsChecker_CheckValueFacets, (ListFacetsChecker * __this, Object * value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x016CD840, bool, ListFacetsChecker_MatchEnumeration, (ListFacetsChecker * __this, Object * value, ArrayList * enumeration, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, ListFacetsChecker__ctor, (ListFacetsChecker * __this, MethodInfo * method));
DO_APP_FUNC(0x01ABD9A0, Exception *, UnionFacetsChecker_CheckValueFacets, (UnionFacetsChecker * __this, Object * value, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x016CD840, bool, UnionFacetsChecker_MatchEnumeration, (UnionFacetsChecker * __this, Object * value, ArrayList * enumeration, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, UnionFacetsChecker__ctor, (UnionFacetsChecker * __this, MethodInfo * method));
DO_APP_FUNC(0x008F7CD0, void, XmlSchemaInference_set_Occurrence, (XmlSchemaInference * __this, XmlSchemaInference_InferenceOption__Enum value, MethodInfo * method));
DO_APP_FUNC(0x006410F0, XmlSchemaInference_InferenceOption__Enum, XmlSchemaInference_get_Occurrence, (XmlSchemaInference * __this, MethodInfo * method));
DO_APP_FUNC(0x00843E80, void, XmlSchemaInference_set_TypeInference, (XmlSchemaInference * __this, XmlSchemaInference_InferenceOption__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01CA9680, void, XmlSchemaInference__ctor, (XmlSchemaInference * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA9990, XmlSchemaSet *, XmlSchemaInference_InferSchema, (XmlSchemaInference * __this, XmlReader * instanceDocument, MethodInfo * method));
DO_APP_FUNC(0x01CA9B00, XmlSchemaSet *, XmlSchemaInference_InferSchema1, (XmlSchemaInference * __this, XmlReader * instanceDocument, XmlSchemaSet * schemas, MethodInfo * method));
DO_APP_FUNC(0x01CAA2E0, XmlSchemaAttribute *, XmlSchemaInference_AddAttribute, (XmlSchemaInference * __this, String * localName, String * prefix, String * childURI, String * attrValue, bool bCreatingNewType, XmlSchema * parentSchema, XmlSchemaObjectCollection * addLocation, XmlSchemaObjectTable * compiledAttributes, MethodInfo * method));
DO_APP_FUNC(0x01CAB1E0, XmlSchema *, XmlSchemaInference_CreateXmlSchema, (XmlSchemaInference * __this, String * targetNS, MethodInfo * method));
DO_APP_FUNC(0x01CAB370, XmlSchemaElement *, XmlSchemaInference_AddElement, (XmlSchemaInference * __this, String * localName, String * prefix, String * childURI, XmlSchema * parentSchema, XmlSchemaObjectCollection * addLocation, int32_t positionWithinCollection, MethodInfo * method));
DO_APP_FUNC(0x01CABE90, void, XmlSchemaInference_InferElement, (XmlSchemaInference * __this, XmlSchemaElement * xse, bool bCreatingNewType, XmlSchema * parentSchema, MethodInfo * method));
DO_APP_FUNC(0x01CAD8F0, XmlSchemaSimpleContentExtension *, XmlSchemaInference_CheckSimpleContentExtension, (XmlSchemaInference * __this, XmlSchemaComplexType * ct, MethodInfo * method));
DO_APP_FUNC(0x01CADAA0, XmlSchemaType *, XmlSchemaInference_GetEffectiveSchemaType, (XmlSchemaInference * __this, XmlSchemaElement * elem, bool bCreatingNewType, MethodInfo * method));
DO_APP_FUNC(0x01CADD50, XmlSchemaElement *, XmlSchemaInference_FindMatchingElement, (XmlSchemaInference * __this, bool bCreatingNewType, XmlReader * xtr, XmlSchemaComplexType * ct, int32_t * lastUsedSeqItem, bool * bParticleChanged, XmlSchema * parentSchema, bool setMaxoccurs, MethodInfo * method));
DO_APP_FUNC(0x01CAF160, void, XmlSchemaInference_ProcessAttributes, (XmlSchemaInference * __this, XmlSchemaElement * * xse, XmlSchemaType * effectiveSchemaType, bool bCreatingNewType, XmlSchema * parentSchema, MethodInfo * method));
DO_APP_FUNC(0x01CAFE50, void, XmlSchemaInference_MoveAttributes, (XmlSchemaInference * __this, XmlSchemaSimpleContentExtension * scExtension, XmlSchemaComplexType * ct, MethodInfo * method));
DO_APP_FUNC(0x01CAFF30, void, XmlSchemaInference_MoveAttributes_1, (XmlSchemaInference * __this, XmlSchemaComplexType * ct, XmlSchemaSimpleContentExtension * simpleContentExtension, bool bCreatingNewType, MethodInfo * method));
DO_APP_FUNC(0x01CB02A0, XmlSchemaAttribute *, XmlSchemaInference_FindAttribute, (XmlSchemaInference * __this, ICollection * attributes, String * attrName, MethodInfo * method));
DO_APP_FUNC(0x01CB0530, XmlSchemaElement *, XmlSchemaInference_FindGlobalElement, (XmlSchemaInference * __this, String * namespaceURI, String * localName, XmlSchema * * parentSchema, MethodInfo * method));
DO_APP_FUNC(0x01CB07A0, XmlSchemaElement *, XmlSchemaInference_FindElement, (XmlSchemaInference * __this, XmlSchemaObjectCollection * elements, String * elementName, MethodInfo * method));
DO_APP_FUNC(0x01CB0950, XmlSchemaAttribute *, XmlSchemaInference_FindAttributeRef, (XmlSchemaInference * __this, ICollection * attributes, String * attributeName, String * nsURI, MethodInfo * method));
DO_APP_FUNC(0x01CB0C50, XmlSchemaElement *, XmlSchemaInference_FindElementRef, (XmlSchemaInference * __this, XmlSchemaObjectCollection * elements, String * elementName, String * nsURI, MethodInfo * method));
DO_APP_FUNC(0x01CB0E50, void, XmlSchemaInference_MakeExistingAttributesOptional, (XmlSchemaInference * __this, XmlSchemaComplexType * ct, XmlSchemaObjectCollection * attributesInInstance, MethodInfo * method));
DO_APP_FUNC(0x01CB0F70, void, XmlSchemaInference_SwitchUseToOptional, (XmlSchemaInference * __this, XmlSchemaObjectCollection * attributes, XmlSchemaObjectCollection * attributesInInstance, MethodInfo * method));
DO_APP_FUNC(0x01CB1120, XmlQualifiedName *, XmlSchemaInference_RefineSimpleType, (XmlSchemaInference * __this, String * s, int32_t * iTypeFlags, MethodInfo * method));
DO_APP_FUNC(0x01CB20B0, int32_t, XmlSchemaInference_InferSimpleType, (String * s, bool * bNeedsRangeCheck, MethodInfo * method));
DO_APP_FUNC(0x01CB3160, int32_t, XmlSchemaInference_DateTime, (String * s, bool bDate, bool bTime, MethodInfo * method));
DO_APP_FUNC(0x01CB32F0, XmlSchemaElement *, XmlSchemaInference_CreateNewElementforChoice, (XmlSchemaInference * __this, XmlSchemaElement * copyElement, MethodInfo * method));
DO_APP_FUNC(0x01CB3630, int32_t, XmlSchemaInference_GetSchemaType, (XmlQualifiedName * qname, MethodInfo * method));
DO_APP_FUNC(0x01CB4410, void, XmlSchemaInference_SetMinMaxOccurs, (XmlSchemaInference * __this, XmlSchemaElement * el, bool setMaxOccurs, MethodInfo * method));
DO_APP_FUNC(0x01CB46A0, void, XmlSchemaInference__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0191EC50, void, XmlSchemaInferenceException__ctor, (XmlSchemaInferenceException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0191EC70, void, XmlSchemaInferenceException_GetObjectData, (XmlSchemaInferenceException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0191EC90, void, XmlSchemaInferenceException__ctor_1, (XmlSchemaInferenceException * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB6020, void, XmlSchemaInferenceException__ctor_2, (XmlSchemaInferenceException * __this, String * res, String * arg, MethodInfo * method));
DO_APP_FUNC(0x01CB6180, void, XmlSchemaInferenceException__ctor_3, (XmlSchemaInferenceException * __this, String * res, int32_t lineNumber, int32_t linePosition, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, NamespaceList__ctor, (NamespaceList * __this, MethodInfo * method));
DO_APP_FUNC(0x016CD950, void, NamespaceList__ctor_1, (NamespaceList * __this, String * namespaces, String * targetNamespace, MethodInfo * method));
DO_APP_FUNC(0x016CDD60, NamespaceList *, NamespaceList_Clone, (NamespaceList * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, NamespaceList_ListType__Enum, NamespaceList_get_Type, (NamespaceList * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, NamespaceList_get_Excluded, (NamespaceList * __this, MethodInfo * method));
DO_APP_FUNC(0x016CDF40, ICollection *, NamespaceList_get_Enumerate, (NamespaceList * __this, MethodInfo * method));
DO_APP_FUNC(0x016CE010, bool, NamespaceList_Allows, (NamespaceList * __this, String * ns, MethodInfo * method));
DO_APP_FUNC(0x016CE0B0, bool, NamespaceList_Allows_1, (NamespaceList * __this, XmlQualifiedName * qname, MethodInfo * method));
DO_APP_FUNC(0x016CE0E0, String *, NamespaceList_ToString, (NamespaceList * __this, MethodInfo * method));
DO_APP_FUNC(0x016CE520, bool, NamespaceList_IsSubset, (NamespaceList * sub, NamespaceList * super, MethodInfo * method));
DO_APP_FUNC(0x016CE810, NamespaceList *, NamespaceList_Union, (NamespaceList * o1, NamespaceList * o2, bool v1Compat, MethodInfo * method));
DO_APP_FUNC(0x016CF0F0, NamespaceList *, NamespaceList_CompareSetToOther, (NamespaceList * __this, NamespaceList * other, MethodInfo * method));
DO_APP_FUNC(0x016CF3E0, NamespaceList *, NamespaceList_Intersection, (NamespaceList * o1, NamespaceList * o2, bool v1Compat, MethodInfo * method));
DO_APP_FUNC(0x016CFA30, void, NamespaceList_RemoveNamespace, (NamespaceList * __this, String * tns, MethodInfo * method));
DO_APP_FUNC(0x016D0020, void, NamespaceListV1Compat__ctor, (NamespaceListV1Compat * __this, String * namespaces, String * targetNamespace, MethodInfo * method));
DO_APP_FUNC(0x016D0030, bool, NamespaceListV1Compat_Allows, (NamespaceListV1Compat * __this, String * ns, MethodInfo * method));
DO_APP_FUNC(0x016D2ED0, void, Parser_1__ctor, (Parser_1 * __this, SchemaType__Enum schemaType, XmlNameTable * nameTable, SchemaNames * schemaNames, ValidationEventHandler * eventHandler, MethodInfo * method));
DO_APP_FUNC(0x016D3070, SchemaType__Enum, Parser_1_Parse, (Parser_1 * __this, XmlReader * reader, String * targetNamespace, MethodInfo * method));
DO_APP_FUNC(0x016D30D0, void, Parser_1_StartParsing, (Parser_1 * __this, XmlReader * reader, String * targetNamespace, MethodInfo * method));
DO_APP_FUNC(0x016D39C0, bool, Parser_1_CheckSchemaRoot, (Parser_1 * __this, SchemaType__Enum rootType, String * * code, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, SchemaType__Enum, Parser_1_FinishParsing, (Parser_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, XmlSchema *, Parser_1_get_XmlSchema, (Parser_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBD0, void, Parser_1_set_XmlResolver, (Parser_1 * __this, XmlResolver * value, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, SchemaInfo *, Parser_1_get_XdrSchema, (Parser_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x016D3AC0, bool, Parser_1_ParseReaderNode, (Parser_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x016D4520, void, Parser_1_ProcessAppInfoDocMarkup, (Parser_1 * __this, bool root, MethodInfo * method));
DO_APP_FUNC(0x016D48B0, XmlElement *, Parser_1_LoadElementNode, (Parser_1 * __this, bool root, MethodInfo * method));
DO_APP_FUNC(0x016D4E80, XmlAttribute *, Parser_1_CreateXmlNsAttribute, (Parser_1 * __this, String * prefix, String * value, MethodInfo * method));
DO_APP_FUNC(0x016D5010, XmlAttribute *, Parser_1_LoadAttributeNode, (Parser_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x016D5220, XmlEntityReference *, Parser_1_LoadEntityReferenceInAttribute, (Parser_1 * __this, MethodInfo * method));
DO_APP_FUNC(0x0058DA40, void, RedefineEntry__ctor, (RedefineEntry * __this, XmlSchemaRedefine * external, XmlSchema * schema, MethodInfo * method));
DO_APP_FUNC(0x016D9770, void, Preprocessor__ctor, (Preprocessor * __this, XmlNameTable * nameTable, SchemaNames * schemaNames, ValidationEventHandler * eventHandler, XmlSchemaCompilationSettings * compilationSettings, MethodInfo * method));
DO_APP_FUNC(0x016D9AB0, bool, Preprocessor_Execute, (Preprocessor * __this, XmlSchema * schema, String * targetNamespace, bool loadExternals, MethodInfo * method));
DO_APP_FUNC(0x016DA170, void, Preprocessor_Cleanup, (Preprocessor * __this, XmlSchema * schema, MethodInfo * method));
DO_APP_FUNC(0x016DA2A0, void, Preprocessor_CleanupRedefine, (Preprocessor * __this, XmlSchemaExternal * include, MethodInfo * method));
DO_APP_FUNC(0x002FBCF0, void, Preprocessor_set_XmlResolver, (Preprocessor * __this, XmlResolver * value, MethodInfo * method));
DO_APP_FUNC(0x002FBC90, void, Preprocessor_set_ReaderSettings, (Preprocessor * __this, XmlReaderSettings * value, MethodInfo * method));
DO_APP_FUNC(0x002FBBF0, void, Preprocessor_set_SchemaLocations, (Preprocessor * __this, Hashtable * value, MethodInfo * method));
DO_APP_FUNC(0x002FBC10, void, Preprocessor_set_ChameleonSchemas, (Preprocessor * __this, Hashtable * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, XmlSchema *, Preprocessor_get_RootSchema, (Preprocessor * __this, MethodInfo * method));
DO_APP_FUNC(0x016DA3B0, void, Preprocessor_BuildSchemaList, (Preprocessor * __this, XmlSchema * schema, MethodInfo * method));
DO_APP_FUNC(0x016DA5E0, void, Preprocessor_LoadExternals, (Preprocessor * __this, XmlSchema * schema, MethodInfo * method));
DO_APP_FUNC(0x016DB3D0, XmlSchema *, Preprocessor_GetBuildInSchema, (MethodInfo * method));
DO_APP_FUNC(0x016DC600, void, Preprocessor_BuildRefNamespaces, (Preprocessor * __this, XmlSchema * schema, MethodInfo * method));
DO_APP_FUNC(0x016DC930, void, Preprocessor_ParseUri, (Preprocessor * __this, String * uri, String * code, XmlSchemaObject * sourceSchemaObject, MethodInfo * method));
DO_APP_FUNC(0x016DCA60, void, Preprocessor_Preprocess, (Preprocessor * __this, XmlSchema * schema, String * targetNamespace, ArrayList * imports, MethodInfo * method));
DO_APP_FUNC(0x016DDF10, void, Preprocessor_CopyIncludedComponents, (Preprocessor * __this, XmlSchema * includedSchema, XmlSchema * schema, MethodInfo * method));
DO_APP_FUNC(0x016DEED0, void, Preprocessor_PreprocessRedefine, (Preprocessor * __this, RedefineEntry * redefineEntry, MethodInfo * method));
DO_APP_FUNC(0x016DFA00, void, Preprocessor_GetIncludedSet, (Preprocessor * __this, XmlSchema * schema, ArrayList * includesList, MethodInfo * method));
DO_APP_FUNC(0x016DFBF0, XmlSchema *, Preprocessor_GetParentSchema, (XmlSchemaObject * currentSchemaObject, MethodInfo * method));
DO_APP_FUNC(0x016DFCC0, void, Preprocessor_SetSchemaDefaults, (Preprocessor * __this, XmlSchema * schema, MethodInfo * method));
DO_APP_FUNC(0x016DFE00, int32_t, Preprocessor_CountGroupSelfReference, (Preprocessor * __this, XmlSchemaObjectCollection * items, XmlQualifiedName * name, XmlSchemaGroup * redefined, MethodInfo * method));
DO_APP_FUNC(0x016E0110, void, Preprocessor_CheckRefinedGroup, (Preprocessor * __this, XmlSchemaGroup * group, MethodInfo * method));
DO_APP_FUNC(0x016E01F0, void, Preprocessor_CheckRefinedAttributeGroup, (Preprocessor * __this, XmlSchemaAttributeGroup * attributeGroup, MethodInfo * method));
DO_APP_FUNC(0x016E03C0, void, Preprocessor_CheckRefinedSimpleType, (Preprocessor * __this, XmlSchemaSimpleType * stype, MethodInfo * method));
DO_APP_FUNC(0x016E0520, void, Preprocessor_CheckRefinedComplexType, (Preprocessor * __this, XmlSchemaComplexType * ctype, MethodInfo * method));
DO_APP_FUNC(0x016E0870, void, Preprocessor_PreprocessAttribute, (Preprocessor * __this, XmlSchemaAttribute * attribute, MethodInfo * method));
DO_APP_FUNC(0x016E0A90, void, Preprocessor_PreprocessLocalAttribute, (Preprocessor * __this, XmlSchemaAttribute * attribute, MethodInfo * method));
DO_APP_FUNC(0x016E0D50, void, Preprocessor_PreprocessAttributeContent, (Preprocessor * __this, XmlSchemaAttribute * attribute, MethodInfo * method));
DO_APP_FUNC(0x016E0FE0, void, Preprocessor_PreprocessAttributeGroup, (Preprocessor * __this, XmlSchemaAttributeGroup * attributeGroup, MethodInfo * method));
DO_APP_FUNC(0x016E11D0, void, Preprocessor_PreprocessElement, (Preprocessor * __this, XmlSchemaElement * element, MethodInfo * method));
DO_APP_FUNC(0x016E14E0, void, Preprocessor_PreprocessLocalElement, (Preprocessor * __this, XmlSchemaElement * element, MethodInfo * method));
DO_APP_FUNC(0x016E1990, void, Preprocessor_PreprocessElementContent, (Preprocessor * __this, XmlSchemaElement * element, MethodInfo * method));
DO_APP_FUNC(0x016E1D80, void, Preprocessor_PreprocessIdentityConstraint, (Preprocessor * __this, XmlSchemaIdentityConstraint * constraint, MethodInfo * method));
DO_APP_FUNC(0x016E2250, void, Preprocessor_PreprocessSimpleType, (Preprocessor * __this, XmlSchemaSimpleType * simpleType, bool local, MethodInfo * method));
DO_APP_FUNC(0x016E2990, void, Preprocessor_PreprocessComplexType, (Preprocessor * __this, XmlSchemaComplexType * complexType, bool local, MethodInfo * method));
DO_APP_FUNC(0x016E32C0, void, Preprocessor_PreprocessGroup, (Preprocessor * __this, XmlSchemaGroup * group, MethodInfo * method));
DO_APP_FUNC(0x016E3530, void, Preprocessor_PreprocessNotation, (Preprocessor * __this, XmlSchemaNotation * notation, MethodInfo * method));
DO_APP_FUNC(0x016E3820, void, Preprocessor_PreprocessParticle, (Preprocessor * __this, XmlSchemaParticle * particle, MethodInfo * method));
DO_APP_FUNC(0x016E4270, void, Preprocessor_PreprocessAttributes, (Preprocessor * __this, XmlSchemaObjectCollection * attributes, XmlSchemaAnyAttribute * anyAttribute, XmlSchemaObject * parent, MethodInfo * method));
DO_APP_FUNC(0x016E45B0, void, Preprocessor_ValidateIdAttribute, (Preprocessor * __this, XmlSchemaObject * xso, MethodInfo * method));
DO_APP_FUNC(0x016E4840, void, Preprocessor_ValidateNameAttribute, (Preprocessor * __this, XmlSchemaObject * xso, MethodInfo * method));
DO_APP_FUNC(0x016E4BB0, void, Preprocessor_ValidateQNameAttribute, (Preprocessor * __this, XmlSchemaObject * xso, String * attributeName, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x016E4EC0, Uri *, Preprocessor_ResolveSchemaLocationUri, (Preprocessor * __this, XmlSchema * enclosingSchema, String * location, MethodInfo * method));
DO_APP_FUNC(0x016E4F20, Object *, Preprocessor_GetSchemaEntity, (Preprocessor * __this, Uri * ruri, MethodInfo * method));
DO_APP_FUNC(0x016E4F60, XmlSchema *, Preprocessor_GetChameleonSchema, (Preprocessor * __this, String * targetNamespace, XmlSchema * schema, MethodInfo * method));
DO_APP_FUNC(0x016E51A0, void, Preprocessor_SetParent, (Preprocessor * __this, XmlSchemaObject * child, XmlSchemaObject * parent, MethodInfo * method));
DO_APP_FUNC(0x016E51C0, void, Preprocessor_PreprocessAnnotation, (Preprocessor * __this, XmlSchemaObject * schemaObject, MethodInfo * method));
DO_APP_FUNC(0x016E5300, void, Preprocessor_PreprocessAnnotation_1, (Preprocessor * __this, XmlSchemaAnnotation * annotation, MethodInfo * method));
DO_APP_FUNC(0x016E7630, void, SchemaAttDef__ctor, (SchemaAttDef * __this, XmlQualifiedName * name, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x016E7640, void, SchemaAttDef__ctor_1, (SchemaAttDef * __this, XmlQualifiedName * name, MethodInfo * method));
DO_APP_FUNC(0x016E7650, void, SchemaAttDef__ctor_2, (SchemaAttDef * __this, MethodInfo * method));
DO_APP_FUNC(0x016E7660, String *, SchemaAttDef_System_Xml_IDtdAttributeInfo_get_Prefix, (SchemaAttDef * __this, MethodInfo * method));
DO_APP_FUNC(0x01052DF0, String *, SchemaAttDef_System_Xml_IDtdAttributeInfo_get_LocalName, (SchemaAttDef * __this, MethodInfo * method));
DO_APP_FUNC(0x003FF610, int32_t, SchemaAttDef_System_Xml_IDtdAttributeInfo_get_LineNumber, (SchemaAttDef * __this, MethodInfo * method));
DO_APP_FUNC(0x00608710, int32_t, SchemaAttDef_System_Xml_IDtdAttributeInfo_get_LinePosition, (SchemaAttDef * __this, MethodInfo * method));
DO_APP_FUNC(0x016E7670, bool, SchemaAttDef_System_Xml_IDtdAttributeInfo_get_IsNonCDataType, (SchemaAttDef * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A030, bool, SchemaAttDef_System_Xml_IDtdAttributeInfo_get_IsDeclaredInExternal, (SchemaAttDef * __this, MethodInfo * method));
DO_APP_FUNC(0x016E76A0, bool, SchemaAttDef_System_Xml_IDtdAttributeInfo_get_IsXmlAttribute, (SchemaAttDef * __this, MethodInfo * method));
DO_APP_FUNC(0x016E76B0, String *, SchemaAttDef_System_Xml_IDtdDefaultAttributeInfo_get_DefaultValueExpanded, (SchemaAttDef * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, Object *, SchemaAttDef_System_Xml_IDtdDefaultAttributeInfo_get_DefaultValueTyped, (SchemaAttDef * __this, MethodInfo * method));
DO_APP_FUNC(0x003FF7B0, int32_t, SchemaAttDef_System_Xml_IDtdDefaultAttributeInfo_get_ValueLineNumber, (SchemaAttDef * __this, MethodInfo * method));
DO_APP_FUNC(0x003FF7D0, int32_t, SchemaAttDef_System_Xml_IDtdDefaultAttributeInfo_get_ValueLinePosition, (SchemaAttDef * __this, MethodInfo * method));
DO_APP_FUNC(0x00608710, int32_t, SchemaAttDef_get_LinePosition, (SchemaAttDef * __this, MethodInfo * method));
DO_APP_FUNC(0x00608720, void, SchemaAttDef_set_LinePosition, (SchemaAttDef * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x003FF610, int32_t, SchemaAttDef_get_LineNumber, (SchemaAttDef * __this, MethodInfo * method));
DO_APP_FUNC(0x00F083C0, void, SchemaAttDef_set_LineNumber, (SchemaAttDef * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x003FF7D0, int32_t, SchemaAttDef_get_ValueLinePosition, (SchemaAttDef * __this, MethodInfo * method));
DO_APP_FUNC(0x0111BFC0, void, SchemaAttDef_set_ValueLinePosition, (SchemaAttDef * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x003FF7B0, int32_t, SchemaAttDef_get_ValueLineNumber, (SchemaAttDef * __this, MethodInfo * method));
DO_APP_FUNC(0x003FF7C0, void, SchemaAttDef_set_ValueLineNumber, (SchemaAttDef * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x016E76C0, String *, SchemaAttDef_get_DefaultValueExpanded, (SchemaAttDef * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB90, void, SchemaAttDef_set_DefaultValueExpanded, (SchemaAttDef * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x016E7750, XmlTokenizedType__Enum, SchemaAttDef_get_TokenizedType, (SchemaAttDef * __this, MethodInfo * method));
DO_APP_FUNC(0x016E7780, void, SchemaAttDef_set_TokenizedType, (SchemaAttDef * __this, XmlTokenizedType__Enum value, MethodInfo * method));
DO_APP_FUNC(0x003FF8B0, SchemaAttDef_Reserve__Enum, SchemaAttDef_get_Reserved, (SchemaAttDef * __this, MethodInfo * method));
DO_APP_FUNC(0x00B0E550, void, SchemaAttDef_set_Reserved, (SchemaAttDef * __this, SchemaAttDef_Reserve__Enum value, MethodInfo * method));
DO_APP_FUNC(0x0085D750, bool, SchemaAttDef_get_DefaultValueChecked, (SchemaAttDef * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC00, XmlSchemaAttribute *, SchemaAttDef_get_SchemaAttribute, (SchemaAttDef * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC10, void, SchemaAttDef_set_SchemaAttribute, (SchemaAttDef * __this, XmlSchemaAttribute * value, MethodInfo * method));
DO_APP_FUNC(0x016E77A0, void, SchemaAttDef_CheckXmlSpace, (SchemaAttDef * __this, IValidationEventHandling * validationEventHandling, MethodInfo * method));
DO_APP_FUNC(0x016E7B40, SchemaAttDef *, SchemaAttDef_Clone, (SchemaAttDef * __this, MethodInfo * method));
DO_APP_FUNC(0x016E7C70, void, SchemaAttDef__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, SchemaBuilder__ctor, (SchemaBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x016E7DC0, void, SchemaCollectionCompiler__ctor, (SchemaCollectionCompiler * __this, XmlNameTable * nameTable, ValidationEventHandler * eventHandler, MethodInfo * method));
DO_APP_FUNC(0x016E8000, bool, SchemaCollectionCompiler_Execute, (SchemaCollectionCompiler * __this, XmlSchema * schema, SchemaInfo * schemaInfo, bool compileContentModel, MethodInfo * method));
DO_APP_FUNC(0x016E8060, void, SchemaCollectionCompiler_Prepare, (SchemaCollectionCompiler * __this, MethodInfo * method));
DO_APP_FUNC(0x016E8490, void, SchemaCollectionCompiler_Cleanup, (SchemaCollectionCompiler * __this, MethodInfo * method));
DO_APP_FUNC(0x016E91E0, void, SchemaCollectionCompiler_Cleanup_1, (XmlSchema * schema, MethodInfo * method));
DO_APP_FUNC(0x016E98B0, void, SchemaCollectionCompiler_Compile, (SchemaCollectionCompiler * __this, MethodInfo * method));
DO_APP_FUNC(0x016EB590, void, SchemaCollectionCompiler_Output, (SchemaCollectionCompiler * __this, SchemaInfo * schemaInfo, MethodInfo * method));
DO_APP_FUNC(0x016EC410, void, SchemaCollectionCompiler_CleanupAttribute, (XmlSchemaAttribute * attribute, MethodInfo * method));
DO_APP_FUNC(0x016EC450, void, SchemaCollectionCompiler_CleanupAttributeGroup, (XmlSchemaAttributeGroup * attributeGroup, MethodInfo * method));
DO_APP_FUNC(0x016EC4A0, void, SchemaCollectionCompiler_CleanupComplexType, (XmlSchemaComplexType * complexType, MethodInfo * method));
DO_APP_FUNC(0x016EC840, void, SchemaCollectionCompiler_CleanupSimpleType, (XmlSchemaSimpleType * simpleType, MethodInfo * method));
DO_APP_FUNC(0x016EC870, void, SchemaCollectionCompiler_CleanupElement, (XmlSchemaElement * element, MethodInfo * method));
DO_APP_FUNC(0x016ECAA0, void, SchemaCollectionCompiler_CleanupAttributes, (XmlSchemaObjectCollection * attributes, MethodInfo * method));
DO_APP_FUNC(0x016ECBE0, void, SchemaCollectionCompiler_CleanupGroup, (XmlSchemaGroup * group, MethodInfo * method));
DO_APP_FUNC(0x016ECC10, void, SchemaCollectionCompiler_CleanupParticle, (XmlSchemaParticle * particle, MethodInfo * method));
DO_APP_FUNC(0x016ECE80, void, SchemaCollectionCompiler_CompileSubstitutionGroup, (SchemaCollectionCompiler * __this, XmlSchemaSubstitutionGroupV1Compat * substitutionGroup, MethodInfo * method));
DO_APP_FUNC(0x016ED390, void, SchemaCollectionCompiler_CheckSubstitutionGroup, (SchemaCollectionCompiler * __this, XmlSchemaSubstitutionGroup * substitutionGroup, MethodInfo * method));
DO_APP_FUNC(0x016ED640, void, SchemaCollectionCompiler_CompileGroup, (SchemaCollectionCompiler * __this, XmlSchemaGroup * group, MethodInfo * method));
DO_APP_FUNC(0x016ED760, void, SchemaCollectionCompiler_CompileSimpleType, (SchemaCollectionCompiler * __this, XmlSchemaSimpleType * simpleType, MethodInfo * method));
DO_APP_FUNC(0x016EDF80, XmlSchemaSimpleType__Array *, SchemaCollectionCompiler_CompileBaseMemberTypes, (SchemaCollectionCompiler * __this, XmlSchemaSimpleType * simpleType, MethodInfo * method));
DO_APP_FUNC(0x016EE440, void, SchemaCollectionCompiler_CheckUnionType, (SchemaCollectionCompiler * __this, XmlSchemaSimpleType * unionMember, ArrayList * memberTypeDefinitions, XmlSchemaSimpleType * parentType, MethodInfo * method));
DO_APP_FUNC(0x016EE5C0, void, SchemaCollectionCompiler_CompileComplexType, (SchemaCollectionCompiler * __this, XmlSchemaComplexType * complexType, MethodInfo * method));
DO_APP_FUNC(0x016EEFD0, void, SchemaCollectionCompiler_CompileSimpleContentExtension, (SchemaCollectionCompiler * __this, XmlSchemaComplexType * complexType, XmlSchemaSimpleContentExtension * simpleExtension, MethodInfo * method));
DO_APP_FUNC(0x016EF240, void, SchemaCollectionCompiler_CompileSimpleContentRestriction, (SchemaCollectionCompiler * __this, XmlSchemaComplexType * complexType, XmlSchemaSimpleContentRestriction * simpleRestriction, MethodInfo * method));
DO_APP_FUNC(0x016EF660, void, SchemaCollectionCompiler_CompileComplexContentExtension, (SchemaCollectionCompiler * __this, XmlSchemaComplexType * complexType, XmlSchemaComplexContent * complexContent, XmlSchemaComplexContentExtension * complexExtension, MethodInfo * method));
DO_APP_FUNC(0x016EFB00, void, SchemaCollectionCompiler_CompileComplexContentRestriction, (SchemaCollectionCompiler * __this, XmlSchemaComplexType * complexType, XmlSchemaComplexContent * complexContent, XmlSchemaComplexContentRestriction * complexRestriction, MethodInfo * method));
DO_APP_FUNC(0x016EFDE0, void, SchemaCollectionCompiler_CheckParticleDerivation, (SchemaCollectionCompiler * __this, XmlSchemaComplexType * complexType, MethodInfo * method));
DO_APP_FUNC(0x016EFF20, XmlSchemaParticle *, SchemaCollectionCompiler_CompileContentTypeParticle, (SchemaCollectionCompiler * __this, XmlSchemaParticle * particle, bool substitution, MethodInfo * method));
DO_APP_FUNC(0x016F0120, XmlSchemaParticle *, SchemaCollectionCompiler_CannonicalizeParticle, (SchemaCollectionCompiler * __this, XmlSchemaParticle * particle, bool root, bool substitution, MethodInfo * method));
DO_APP_FUNC(0x016F0510, XmlSchemaParticle *, SchemaCollectionCompiler_CannonicalizeElement, (SchemaCollectionCompiler * __this, XmlSchemaElement * element, bool substitution, MethodInfo * method));
DO_APP_FUNC(0x016F06D0, XmlSchemaParticle *, SchemaCollectionCompiler_CannonicalizeGroupRef, (SchemaCollectionCompiler * __this, XmlSchemaGroupRef * groupRef, bool root, bool substitution, MethodInfo * method));
DO_APP_FUNC(0x016F0F40, XmlSchemaParticle *, SchemaCollectionCompiler_CannonicalizeAll, (SchemaCollectionCompiler * __this, XmlSchemaAll * all, bool root, bool substitution, MethodInfo * method));
DO_APP_FUNC(0x016F1630, XmlSchemaParticle *, SchemaCollectionCompiler_CannonicalizeChoice, (SchemaCollectionCompiler * __this, XmlSchemaChoice * choice, bool root, bool substitution, MethodInfo * method));
DO_APP_FUNC(0x016F1D90, XmlSchemaParticle *, SchemaCollectionCompiler_CannonicalizeSequence, (SchemaCollectionCompiler * __this, XmlSchemaSequence * sequence, bool root, bool substitution, MethodInfo * method));
DO_APP_FUNC(0x016F2470, bool, SchemaCollectionCompiler_IsValidRestriction, (SchemaCollectionCompiler * __this, XmlSchemaParticle * derivedParticle, XmlSchemaParticle * baseParticle, MethodInfo * method));
DO_APP_FUNC(0x016F2AF0, bool, SchemaCollectionCompiler_IsElementFromElement, (SchemaCollectionCompiler * __this, XmlSchemaElement * derivedElement, XmlSchemaElement * baseElement, MethodInfo * method));
DO_APP_FUNC(0x016F2C80, bool, SchemaCollectionCompiler_IsElementFromAny, (SchemaCollectionCompiler * __this, XmlSchemaElement * derivedElement, XmlSchemaAny * baseAny, MethodInfo * method));
DO_APP_FUNC(0x016F2D20, bool, SchemaCollectionCompiler_IsAnyFromAny, (SchemaCollectionCompiler * __this, XmlSchemaAny * derivedAny, XmlSchemaAny * baseAny, MethodInfo * method));
DO_APP_FUNC(0x016F2D80, bool, SchemaCollectionCompiler_IsGroupBaseFromAny, (SchemaCollectionCompiler * __this, XmlSchemaGroupBase * derivedGroupBase, XmlSchemaAny * baseAny, MethodInfo * method));
DO_APP_FUNC(0x016F30A0, bool, SchemaCollectionCompiler_IsElementFromGroupBase, (SchemaCollectionCompiler * __this, XmlSchemaElement * derivedElement, XmlSchemaGroupBase * baseGroupBase, bool skipEmptableOnly, MethodInfo * method));
DO_APP_FUNC(0x016F36C0, bool, SchemaCollectionCompiler_IsGroupBaseFromGroupBase, (SchemaCollectionCompiler * __this, XmlSchemaGroupBase * derivedGroupBase, XmlSchemaGroupBase * baseGroupBase, bool skipEmptableOnly, MethodInfo * method));
DO_APP_FUNC(0x016F39E0, bool, SchemaCollectionCompiler_IsSequenceFromAll, (SchemaCollectionCompiler * __this, XmlSchemaSequence * derivedSequence, XmlSchemaAll * baseAll, MethodInfo * method));
DO_APP_FUNC(0x016F3E20, bool, SchemaCollectionCompiler_IsSequenceFromChoice, (SchemaCollectionCompiler * __this, XmlSchemaSequence * derivedSequence, XmlSchemaChoice * baseChoice, MethodInfo * method));
DO_APP_FUNC(0x016F4170, void, SchemaCollectionCompiler_CalculateSequenceRange, (SchemaCollectionCompiler * __this, XmlSchemaSequence * sequence, Decimal * minOccurs, Decimal * maxOccurs, MethodInfo * method));
DO_APP_FUNC(0x016F49F0, bool, SchemaCollectionCompiler_IsValidOccurrenceRangeRestriction, (SchemaCollectionCompiler * __this, XmlSchemaParticle * derivedParticle, XmlSchemaParticle * baseParticle, MethodInfo * method));
DO_APP_FUNC(0x016F4B40, bool, SchemaCollectionCompiler_IsValidOccurrenceRangeRestriction_1, (SchemaCollectionCompiler * __this, Decimal minOccurs, Decimal maxOccurs, Decimal baseMinOccurs, Decimal baseMaxOccurs, MethodInfo * method));
DO_APP_FUNC(0x016F4C70, int32_t, SchemaCollectionCompiler_GetMappingParticle, (SchemaCollectionCompiler * __this, XmlSchemaParticle * particle, XmlSchemaObjectCollection * collection, MethodInfo * method));
DO_APP_FUNC(0x016F4DE0, bool, SchemaCollectionCompiler_IsParticleEmptiable, (SchemaCollectionCompiler * __this, XmlSchemaParticle * particle, MethodInfo * method));
DO_APP_FUNC(0x016F4EF0, void, SchemaCollectionCompiler_CalculateEffectiveTotalRange, (SchemaCollectionCompiler * __this, XmlSchemaParticle * particle, Decimal * minOccurs, Decimal * maxOccurs, MethodInfo * method));
DO_APP_FUNC(0x016F5F40, void, SchemaCollectionCompiler_PushComplexType, (SchemaCollectionCompiler * __this, XmlSchemaComplexType * complexType, MethodInfo * method));
DO_APP_FUNC(0x016F5F70, XmlSchemaContentType__Enum, SchemaCollectionCompiler_GetSchemaContentType, (SchemaCollectionCompiler * __this, XmlSchemaComplexType * complexType, XmlSchemaComplexContent * complexContent, XmlSchemaParticle * particle, MethodInfo * method));
DO_APP_FUNC(0x016F5FF0, void, SchemaCollectionCompiler_CompileAttributeGroup, (SchemaCollectionCompiler * __this, XmlSchemaAttributeGroup * attributeGroup, MethodInfo * method));
DO_APP_FUNC(0x016F6610, void, SchemaCollectionCompiler_CompileLocalAttributes, (SchemaCollectionCompiler * __this, XmlSchemaComplexType * baseType, XmlSchemaComplexType * derivedType, XmlSchemaObjectCollection * attributes, XmlSchemaAnyAttribute * anyAttribute, XmlSchemaDerivationMethod__Enum derivedBy, MethodInfo * method));
DO_APP_FUNC(0x016F7700, XmlSchemaAnyAttribute *, SchemaCollectionCompiler_CompileAnyAttributeUnion, (SchemaCollectionCompiler * __this, XmlSchemaAnyAttribute * a, XmlSchemaAnyAttribute * b, MethodInfo * method));
DO_APP_FUNC(0x016F77F0, XmlSchemaAnyAttribute *, SchemaCollectionCompiler_CompileAnyAttributeIntersection, (SchemaCollectionCompiler * __this, XmlSchemaAnyAttribute * a, XmlSchemaAnyAttribute * b, MethodInfo * method));
DO_APP_FUNC(0x016F78E0, void, SchemaCollectionCompiler_CompileAttribute, (SchemaCollectionCompiler * __this, XmlSchemaAttribute * xa, MethodInfo * method));
DO_APP_FUNC(0x016F83D0, void, SchemaCollectionCompiler_CompileIdentityConstraint, (SchemaCollectionCompiler * __this, XmlSchemaIdentityConstraint * xi, MethodInfo * method));
DO_APP_FUNC(0x016F8AC0, void, SchemaCollectionCompiler_CompileElement, (SchemaCollectionCompiler * __this, XmlSchemaElement * xe, MethodInfo * method));
DO_APP_FUNC(0x016F9660, ContentValidator *, SchemaCollectionCompiler_CompileComplexContent, (SchemaCollectionCompiler * __this, XmlSchemaComplexType * complexType, MethodInfo * method));
DO_APP_FUNC(0x016FA050, void, SchemaCollectionCompiler_BuildParticleContentModel, (SchemaCollectionCompiler * __this, ParticleContentValidator * contentValidator, XmlSchemaParticle * particle, MethodInfo * method));
DO_APP_FUNC(0x016FA820, void, SchemaCollectionCompiler_CompileParticleElements, (SchemaCollectionCompiler * __this, XmlSchemaComplexType * complexType, XmlSchemaParticle * particle, MethodInfo * method));
DO_APP_FUNC(0x016FABA0, void, SchemaCollectionCompiler_CompileCompexTypeElements, (SchemaCollectionCompiler * __this, XmlSchemaComplexType * complexType, MethodInfo * method));
DO_APP_FUNC(0x016FACC0, XmlSchemaSimpleType *, SchemaCollectionCompiler_GetSimpleType, (SchemaCollectionCompiler * __this, XmlQualifiedName * name, MethodInfo * method));
DO_APP_FUNC(0x016FAE80, XmlSchemaComplexType *, SchemaCollectionCompiler_GetComplexType, (SchemaCollectionCompiler * __this, XmlQualifiedName * name, MethodInfo * method));
DO_APP_FUNC(0x016FAF90, XmlSchemaType *, SchemaCollectionCompiler_GetAnySchemaType, (SchemaCollectionCompiler * __this, XmlQualifiedName * name, MethodInfo * method));
DO_APP_FUNC(0x01AA5130, void, SchemaCollectionPreprocessor__ctor, (SchemaCollectionPreprocessor * __this, XmlNameTable * nameTable, SchemaNames * schemaNames, ValidationEventHandler * eventHandler, MethodInfo * method));
DO_APP_FUNC(0x01AA5140, bool, SchemaCollectionPreprocessor_Execute, (SchemaCollectionPreprocessor * __this, XmlSchema * schema, String * targetNamespace, bool loadExternals, XmlSchemaCollection * xsc, MethodInfo * method));
DO_APP_FUNC(0x01AA54B0, void, SchemaCollectionPreprocessor_Cleanup, (SchemaCollectionPreprocessor * __this, XmlSchema * schema, MethodInfo * method));
DO_APP_FUNC(0x002FBC10, void, SchemaCollectionPreprocessor_set_XmlResolver, (SchemaCollectionPreprocessor * __this, XmlResolver * value, MethodInfo * method));
DO_APP_FUNC(0x01AA57D0, void, SchemaCollectionPreprocessor_LoadExternals, (SchemaCollectionPreprocessor * __this, XmlSchema * schema, XmlSchemaCollection * xsc, MethodInfo * method));
DO_APP_FUNC(0x01AA6470, void, SchemaCollectionPreprocessor_BuildRefNamespaces, (SchemaCollectionPreprocessor * __this, XmlSchema * schema, MethodInfo * method));
DO_APP_FUNC(0x01AA67B0, void, SchemaCollectionPreprocessor_Preprocess, (SchemaCollectionPreprocessor * __this, XmlSchema * schema, String * targetNamespace, SchemaCollectionPreprocessor_Compositor__Enum compositor, MethodInfo * method));
DO_APP_FUNC(0x01AA8270, void, SchemaCollectionPreprocessor_PreprocessRedefine, (SchemaCollectionPreprocessor * __this, XmlSchemaRedefine * redefine, MethodInfo * method));
DO_APP_FUNC(0x01AA9230, int32_t, SchemaCollectionPreprocessor_CountGroupSelfReference, (SchemaCollectionPreprocessor * __this, XmlSchemaObjectCollection * items, XmlQualifiedName * name, MethodInfo * method));
DO_APP_FUNC(0x01AA9530, void, SchemaCollectionPreprocessor_CheckRefinedGroup, (SchemaCollectionPreprocessor * __this, XmlSchemaGroup * group, MethodInfo * method));
DO_APP_FUNC(0x01AA9600, void, SchemaCollectionPreprocessor_CheckRefinedAttributeGroup, (SchemaCollectionPreprocessor * __this, XmlSchemaAttributeGroup * attributeGroup, MethodInfo * method));
DO_APP_FUNC(0x01AA97D0, void, SchemaCollectionPreprocessor_CheckRefinedSimpleType, (SchemaCollectionPreprocessor * __this, XmlSchemaSimpleType * stype, MethodInfo * method));
DO_APP_FUNC(0x01AA9930, void, SchemaCollectionPreprocessor_CheckRefinedComplexType, (SchemaCollectionPreprocessor * __this, XmlSchemaComplexType * ctype, MethodInfo * method));
DO_APP_FUNC(0x01AA9C80, void, SchemaCollectionPreprocessor_PreprocessAttribute, (SchemaCollectionPreprocessor * __this, XmlSchemaAttribute * attribute, MethodInfo * method));
DO_APP_FUNC(0x01AA9EA0, void, SchemaCollectionPreprocessor_PreprocessLocalAttribute, (SchemaCollectionPreprocessor * __this, XmlSchemaAttribute * attribute, MethodInfo * method));
DO_APP_FUNC(0x01AAA160, void, SchemaCollectionPreprocessor_PreprocessAttributeContent, (SchemaCollectionPreprocessor * __this, XmlSchemaAttribute * attribute, MethodInfo * method));
DO_APP_FUNC(0x01AAA420, void, SchemaCollectionPreprocessor_PreprocessAttributeGroup, (SchemaCollectionPreprocessor * __this, XmlSchemaAttributeGroup * attributeGroup, MethodInfo * method));
DO_APP_FUNC(0x01AAA610, void, SchemaCollectionPreprocessor_PreprocessElement, (SchemaCollectionPreprocessor * __this, XmlSchemaElement * element, MethodInfo * method));
DO_APP_FUNC(0x01AAA920, void, SchemaCollectionPreprocessor_PreprocessLocalElement, (SchemaCollectionPreprocessor * __this, XmlSchemaElement * element, MethodInfo * method));
DO_APP_FUNC(0x01AAADD0, void, SchemaCollectionPreprocessor_PreprocessElementContent, (SchemaCollectionPreprocessor * __this, XmlSchemaElement * element, MethodInfo * method));
DO_APP_FUNC(0x01AAB210, void, SchemaCollectionPreprocessor_PreprocessIdentityConstraint, (SchemaCollectionPreprocessor * __this, XmlSchemaIdentityConstraint * constraint, MethodInfo * method));
DO_APP_FUNC(0x01AAB6E0, void, SchemaCollectionPreprocessor_PreprocessSimpleType, (SchemaCollectionPreprocessor * __this, XmlSchemaSimpleType * simpleType, bool local, MethodInfo * method));
DO_APP_FUNC(0x01AABE60, void, SchemaCollectionPreprocessor_PreprocessComplexType, (SchemaCollectionPreprocessor * __this, XmlSchemaComplexType * complexType, bool local, MethodInfo * method));
DO_APP_FUNC(0x01AAC790, void, SchemaCollectionPreprocessor_PreprocessGroup, (SchemaCollectionPreprocessor * __this, XmlSchemaGroup * group, MethodInfo * method));
DO_APP_FUNC(0x01AACA00, void, SchemaCollectionPreprocessor_PreprocessNotation, (SchemaCollectionPreprocessor * __this, XmlSchemaNotation * notation, MethodInfo * method));
DO_APP_FUNC(0x01AACCC0, void, SchemaCollectionPreprocessor_PreprocessParticle, (SchemaCollectionPreprocessor * __this, XmlSchemaParticle * particle, MethodInfo * method));
DO_APP_FUNC(0x01AAD600, void, SchemaCollectionPreprocessor_PreprocessAttributes, (SchemaCollectionPreprocessor * __this, XmlSchemaObjectCollection * attributes, XmlSchemaAnyAttribute * anyAttribute, XmlSchemaObject * parent, MethodInfo * method));
DO_APP_FUNC(0x01AAD8B0, void, SchemaCollectionPreprocessor_ValidateIdAttribute, (SchemaCollectionPreprocessor * __this, XmlSchemaObject * xso, MethodInfo * method));
DO_APP_FUNC(0x01AADAF0, void, SchemaCollectionPreprocessor_ValidateNameAttribute, (SchemaCollectionPreprocessor * __this, XmlSchemaObject * xso, MethodInfo * method));
DO_APP_FUNC(0x01AADE60, void, SchemaCollectionPreprocessor_ValidateQNameAttribute, (SchemaCollectionPreprocessor * __this, XmlSchemaObject * xso, String * attributeName, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x016E51A0, void, SchemaCollectionPreprocessor_SetParent, (SchemaCollectionPreprocessor * __this, XmlSchemaObject * child, XmlSchemaObject * parent, MethodInfo * method));
DO_APP_FUNC(0x01AAE010, void, SchemaCollectionPreprocessor_PreprocessAnnotation, (SchemaCollectionPreprocessor * __this, XmlSchemaObject * schemaObject, MethodInfo * method));
DO_APP_FUNC(0x01AAE180, Uri *, SchemaCollectionPreprocessor_ResolveSchemaLocationUri, (SchemaCollectionPreprocessor * __this, XmlSchema * enclosingSchema, String * location, MethodInfo * method));
DO_APP_FUNC(0x01AAE260, Stream *, SchemaCollectionPreprocessor_GetSchemaEntity, (SchemaCollectionPreprocessor * __this, Uri * ruri, MethodInfo * method));
DO_APP_FUNC(0x01AAE380, void, SchemaDeclBase__ctor, (SchemaDeclBase * __this, XmlQualifiedName * name, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AAE440, void, SchemaDeclBase__ctor_1, (SchemaDeclBase * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, XmlQualifiedName *, SchemaDeclBase_get_Name, (SchemaDeclBase * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, SchemaDeclBase_set_Name, (SchemaDeclBase * __this, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x01AAE4F0, String *, SchemaDeclBase_get_Prefix, (SchemaDeclBase * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, SchemaDeclBase_set_Prefix, (SchemaDeclBase * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0052A030, bool, SchemaDeclBase_get_IsDeclaredInExternal, (SchemaDeclBase * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A040, void, SchemaDeclBase_set_IsDeclaredInExternal, (SchemaDeclBase * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00529E80, SchemaDeclBase_Use__Enum, SchemaDeclBase_get_Presence, (SchemaDeclBase * __this, MethodInfo * method));
DO_APP_FUNC(0x00529E90, void, SchemaDeclBase_set_Presence, (SchemaDeclBase * __this, SchemaDeclBase_Use__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, int64_t, SchemaDeclBase_get_MaxLength, (SchemaDeclBase * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBA00, void, SchemaDeclBase_set_MaxLength, (SchemaDeclBase * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, int64_t, SchemaDeclBase_get_MinLength, (SchemaDeclBase * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, SchemaDeclBase_set_MinLength, (SchemaDeclBase * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, XmlSchemaType *, SchemaDeclBase_get_SchemaType, (SchemaDeclBase * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB10, void, SchemaDeclBase_set_SchemaType, (SchemaDeclBase * __this, XmlSchemaType * value, MethodInfo * method));
DO_APP_FUNC(0x002FB990, XmlSchemaDatatype *, SchemaDeclBase_get_Datatype, (SchemaDeclBase * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9A0, void, SchemaDeclBase_set_Datatype, (SchemaDeclBase * __this, XmlSchemaDatatype * value, MethodInfo * method));
DO_APP_FUNC(0x01AAE580, void, SchemaDeclBase_AddValue, (SchemaDeclBase * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, List_1_System_String_ *, SchemaDeclBase_get_Values, (SchemaDeclBase * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB70, void, SchemaDeclBase_set_Values, (SchemaDeclBase * __this, List_1_System_String_ * value, MethodInfo * method));
DO_APP_FUNC(0x01AAE700, String *, SchemaDeclBase_get_DefaultValueRaw, (SchemaDeclBase * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9C0, void, SchemaDeclBase_set_DefaultValueRaw, (SchemaDeclBase * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, Object *, SchemaDeclBase_get_DefaultValueTyped, (SchemaDeclBase * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9E0, void, SchemaDeclBase_set_DefaultValueTyped, (SchemaDeclBase * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01AAE790, bool, SchemaDeclBase_CheckEnumeration, (SchemaDeclBase * __this, Object * pVal, MethodInfo * method));
DO_APP_FUNC(0x01AAE8B0, bool, SchemaDeclBase_CheckValue, (SchemaDeclBase * __this, Object * pVal, MethodInfo * method));
DO_APP_FUNC(0x01AAE900, void, SchemaElementDecl__ctor, (SchemaElementDecl * __this, MethodInfo * method));
DO_APP_FUNC(0x01AAEB70, void, SchemaElementDecl__ctor_1, (SchemaElementDecl * __this, XmlSchemaDatatype * dtype, MethodInfo * method));
DO_APP_FUNC(0x01AAEE30, void, SchemaElementDecl__ctor_2, (SchemaElementDecl * __this, XmlQualifiedName * name, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AAF0C0, SchemaElementDecl *, SchemaElementDecl_CreateAnyTypeElementDecl, (MethodInfo * method));
DO_APP_FUNC(0x015CCAD0, bool, SchemaElementDecl_System_Xml_IDtdAttributeListInfo_get_HasNonCDataAttributes, (SchemaElementDecl * __this, MethodInfo * method));
DO_APP_FUNC(0x01AAF240, IDtdAttributeInfo *, SchemaElementDecl_System_Xml_IDtdAttributeListInfo_LookupAttribute, (SchemaElementDecl * __this, String * prefix, String * localName, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, IEnumerable_1_System_Xml_IDtdDefaultAttributeInfo_ *, SchemaElementDecl_System_Xml_IDtdAttributeListInfo_LookupDefaultAttributes, (SchemaElementDecl * __this, MethodInfo * method));
DO_APP_FUNC(0x00405F50, bool, SchemaElementDecl_get_IsIdDeclared, (SchemaElementDecl * __this, MethodInfo * method));
DO_APP_FUNC(0x00724140, void, SchemaElementDecl_set_IsIdDeclared, (SchemaElementDecl * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x015CCAD0, bool, SchemaElementDecl_get_HasNonCDataAttribute, (SchemaElementDecl * __this, MethodInfo * method));
DO_APP_FUNC(0x015CCAE0, void, SchemaElementDecl_set_HasNonCDataAttribute, (SchemaElementDecl * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01AAF410, SchemaElementDecl *, SchemaElementDecl_Clone, (SchemaElementDecl * __this, MethodInfo * method));
DO_APP_FUNC(0x00E24C90, bool, SchemaElementDecl_get_IsAbstract, (SchemaElementDecl * __this, MethodInfo * method));
DO_APP_FUNC(0x00E24CA0, void, SchemaElementDecl_set_IsAbstract, (SchemaElementDecl * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01AAF540, bool, SchemaElementDecl_get_IsNillable, (SchemaElementDecl * __this, MethodInfo * method));
DO_APP_FUNC(0x01AAF550, void, SchemaElementDecl_set_IsNillable, (SchemaElementDecl * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x003FC380, XmlSchemaDerivationMethod__Enum, SchemaElementDecl_get_Block, (SchemaElementDecl * __this, MethodInfo * method));
DO_APP_FUNC(0x00A26C10, void, SchemaElementDecl_set_Block, (SchemaElementDecl * __this, XmlSchemaDerivationMethod__Enum value, MethodInfo * method));
DO_APP_FUNC(0x0108CEB0, bool, SchemaElementDecl_get_IsNotationDeclared, (SchemaElementDecl * __this, MethodInfo * method));
DO_APP_FUNC(0x0108CEC0, void, SchemaElementDecl_set_IsNotationDeclared, (SchemaElementDecl * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01AAF560, bool, SchemaElementDecl_get_HasDefaultAttribute, (SchemaElementDecl * __this, MethodInfo * method));
DO_APP_FUNC(0x0074AB10, bool, SchemaElementDecl_get_HasRequiredAttribute, (SchemaElementDecl * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC00, ContentValidator *, SchemaElementDecl_get_ContentValidator, (SchemaElementDecl * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC10, void, SchemaElementDecl_set_ContentValidator, (SchemaElementDecl * __this, ContentValidator * value, MethodInfo * method));
DO_APP_FUNC(0x002FBC20, XmlSchemaAnyAttribute *, SchemaElementDecl_get_AnyAttribute, (SchemaElementDecl * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC30, void, SchemaElementDecl_set_AnyAttribute, (SchemaElementDecl * __this, XmlSchemaAnyAttribute * value, MethodInfo * method));
DO_APP_FUNC(0x002FBC60, CompiledIdentityConstraint__Array *, SchemaElementDecl_get_Constraints, (SchemaElementDecl * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC70, void, SchemaElementDecl_set_Constraints, (SchemaElementDecl * __this, CompiledIdentityConstraint__Array * value, MethodInfo * method));
DO_APP_FUNC(0x002FBC80, XmlSchemaElement *, SchemaElementDecl_get_SchemaElement, (SchemaElementDecl * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC90, void, SchemaElementDecl_set_SchemaElement, (SchemaElementDecl * __this, XmlSchemaElement * value, MethodInfo * method));
DO_APP_FUNC(0x01AAF570, void, SchemaElementDecl_AddAttDef, (SchemaElementDecl * __this, SchemaAttDef * attdef, MethodInfo * method));
DO_APP_FUNC(0x01AAF760, SchemaAttDef *, SchemaElementDecl_GetAttDef, (SchemaElementDecl * __this, XmlQualifiedName * qname, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, IList_1_System_Xml_IDtdDefaultAttributeInfo_ *, SchemaElementDecl_get_DefaultAttDefs, (SchemaElementDecl * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, Dictionary_2_System_Xml_XmlQualifiedName_System_Xml_Schema_SchemaAttDef_ *, SchemaElementDecl_get_AttDefs, (SchemaElementDecl * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBE0, Dictionary_2_System_Xml_XmlQualifiedName_System_Xml_XmlQualifiedName_ *, SchemaElementDecl_get_ProhibitedAttributes, (SchemaElementDecl * __this, MethodInfo * method));
DO_APP_FUNC(0x01AAF860, void, SchemaElementDecl_CheckAttributes, (SchemaElementDecl * __this, Hashtable * presence, bool standalone, MethodInfo * method));
DO_APP_FUNC(0x01AAFAF0, void, SchemaElementDecl__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01AAFC40, void, SchemaEntity__ctor, (SchemaEntity * __this, XmlQualifiedName * qname, bool isParameter, MethodInfo * method));
DO_APP_FUNC(0x01052DF0, String *, SchemaEntity_System_Xml_IDtdEntityInfo_get_Name, (SchemaEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x00444DC0, bool, SchemaEntity_System_Xml_IDtdEntityInfo_get_IsExternal, (SchemaEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x00A1A3B0, bool, SchemaEntity_System_Xml_IDtdEntityInfo_get_IsDeclaredInExternal, (SchemaEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x01AAFD10, bool, SchemaEntity_System_Xml_IDtdEntityInfo_get_IsUnparsedEntity, (SchemaEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x00446590, bool, SchemaEntity_System_Xml_IDtdEntityInfo_get_IsParameterEntity, (SchemaEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x01AAFD60, String *, SchemaEntity_System_Xml_IDtdEntityInfo_get_BaseUriString, (SchemaEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x01AAFDF0, String *, SchemaEntity_System_Xml_IDtdEntityInfo_get_DeclaredUriString, (SchemaEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, SchemaEntity_System_Xml_IDtdEntityInfo_get_SystemId, (SchemaEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, SchemaEntity_System_Xml_IDtdEntityInfo_get_PublicId, (SchemaEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, SchemaEntity_System_Xml_IDtdEntityInfo_get_Text, (SchemaEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x003FC7F0, int32_t, SchemaEntity_System_Xml_IDtdEntityInfo_get_LineNumber, (SchemaEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x003FC830, int32_t, SchemaEntity_System_Xml_IDtdEntityInfo_get_LinePosition, (SchemaEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x01AAFE00, bool, SchemaEntity_IsPredefinedEntity, (String * n, MethodInfo * method));
DO_APP_FUNC(0x002FA280, XmlQualifiedName *, SchemaEntity_get_Name, (SchemaEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, SchemaEntity_get_Url, (SchemaEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x01AAFF80, void, SchemaEntity_set_Url, (SchemaEntity * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, SchemaEntity_get_Pubid, (SchemaEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, SchemaEntity_set_Pubid, (SchemaEntity * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x00444DC0, bool, SchemaEntity_get_IsExternal, (SchemaEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x004C15D0, void, SchemaEntity_set_IsExternal, (SchemaEntity * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00A1A3B0, bool, SchemaEntity_get_DeclaredInExternal, (SchemaEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x00A1A3C0, void, SchemaEntity_set_DeclaredInExternal, (SchemaEntity * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FB990, XmlQualifiedName *, SchemaEntity_get_NData, (SchemaEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9A0, void, SchemaEntity_set_NData, (SchemaEntity * __this, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, String *, SchemaEntity_get_Text, (SchemaEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x01AAFF90, void, SchemaEntity_set_Text, (SchemaEntity * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x003FC7F0, int32_t, SchemaEntity_get_Line, (SchemaEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x00617D40, void, SchemaEntity_set_Line, (SchemaEntity * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x003FC830, int32_t, SchemaEntity_get_Pos, (SchemaEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x004C5130, void, SchemaEntity_set_Pos, (SchemaEntity * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01AAFFA0, String *, SchemaEntity_get_BaseURI, (SchemaEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBA00, void, SchemaEntity_set_BaseURI, (SchemaEntity * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x00F3ABA0, bool, SchemaEntity_get_ParsingInProgress, (SchemaEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x01AB0030, void, SchemaEntity_set_ParsingInProgress, (SchemaEntity * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01AB0040, String *, SchemaEntity_get_DeclaredURI, (SchemaEntity * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, SchemaEntity_set_DeclaredURI, (SchemaEntity * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01AB00D0, void, SchemaInfo__ctor, (SchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, XmlQualifiedName *, SchemaInfo_get_DocTypeName, (SchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9A0, void, SchemaInfo_set_DocTypeName, (SchemaInfo * __this, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9C0, void, SchemaInfo_set_InternalDtdSubset, (SchemaInfo * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FA280, Dictionary_2_System_Xml_XmlQualifiedName_System_Xml_Schema_SchemaElementDecl_ *, SchemaInfo_get_ElementDecls, (SchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, Dictionary_2_System_Xml_XmlQualifiedName_System_Xml_Schema_SchemaElementDecl_ *, SchemaInfo_get_UndeclaredElementDecls, (SchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01AB0660, Dictionary_2_System_Xml_XmlQualifiedName_System_Xml_Schema_SchemaEntity_ *, SchemaInfo_get_GeneralEntities, (SchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01AB07E0, Dictionary_2_System_Xml_XmlQualifiedName_System_Xml_Schema_SchemaEntity_ *, SchemaInfo_get_ParameterEntities, (SchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x003FF2B0, SchemaType__Enum, SchemaInfo_get_SchemaType, (SchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x003FF2C0, void, SchemaInfo_set_SchemaType, (SchemaInfo * __this, SchemaType__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, Dictionary_2_System_String_System_Boolean_ *, SchemaInfo_get_TargetNamespaces, (SchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, Dictionary_2_System_Xml_XmlQualifiedName_System_Xml_Schema_SchemaElementDecl_ *, SchemaInfo_get_ElementDeclsByType, (SchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, Dictionary_2_System_Xml_XmlQualifiedName_System_Xml_Schema_SchemaAttDef_ *, SchemaInfo_get_AttributeDecls, (SchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01AB0960, Dictionary_2_System_String_System_Xml_Schema_SchemaNotation_ *, SchemaInfo_get_Notations, (SchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x004C6660, int32_t, SchemaInfo_get_ErrorCount, (SchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0191E6A0, void, SchemaInfo_set_ErrorCount, (SchemaInfo * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01AB0AE0, SchemaElementDecl *, SchemaInfo_GetElementDecl, (SchemaInfo * __this, XmlQualifiedName * qname, MethodInfo * method));
DO_APP_FUNC(0x01AB0BE0, SchemaElementDecl *, SchemaInfo_GetTypeDecl, (SchemaInfo * __this, XmlQualifiedName * qname, MethodInfo * method));
DO_APP_FUNC(0x01AB0CE0, XmlSchemaElement *, SchemaInfo_GetElement, (SchemaInfo * __this, XmlQualifiedName * qname, MethodInfo * method));
DO_APP_FUNC(0x01AB0D10, bool, SchemaInfo_HasSchema, (SchemaInfo * __this, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01AB0DD0, bool, SchemaInfo_Contains, (SchemaInfo * __this, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01AB0E90, SchemaAttDef *, SchemaInfo_GetAttributeXdr, (SchemaInfo * __this, SchemaElementDecl * ed, XmlQualifiedName * qname, MethodInfo * method));
DO_APP_FUNC(0x01AB10F0, SchemaAttDef *, SchemaInfo_GetAttributeXsd, (SchemaInfo * __this, SchemaElementDecl * ed, XmlQualifiedName * qname, XmlSchemaObject * partialValidationType, AttributeMatchState__Enum * attributeMatchState, MethodInfo * method));
DO_APP_FUNC(0x01AB1480, SchemaAttDef *, SchemaInfo_GetAttributeXsd_1, (SchemaInfo * __this, SchemaElementDecl * ed, XmlQualifiedName * qname, bool * skip, MethodInfo * method));
DO_APP_FUNC(0x01AB1620, void, SchemaInfo_Add, (SchemaInfo * __this, SchemaInfo * sinfo, ValidationEventHandler * eventhandler, MethodInfo * method));
DO_APP_FUNC(0x01AB1FF0, void, SchemaInfo_Finish, (SchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00444DC0, bool, SchemaInfo_System_Xml_IDtdInfo_get_HasDefaultAttributes, (SchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00446590, bool, SchemaInfo_System_Xml_IDtdInfo_get_HasNonCDataAttributes, (SchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01AB21D0, IDtdAttributeListInfo *, SchemaInfo_System_Xml_IDtdInfo_LookupAttributeList, (SchemaInfo * __this, String * prefix, String * localName, MethodInfo * method));
DO_APP_FUNC(0x01AB2400, IDtdEntityInfo *, SchemaInfo_System_Xml_IDtdInfo_LookupEntity, (SchemaInfo * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x002FB990, XmlQualifiedName *, SchemaInfo_System_Xml_IDtdInfo_get_Name, (SchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, String *, SchemaInfo_System_Xml_IDtdInfo_get_InternalDtdSubset, (SchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01AB25D0, void, SchemaNames__ctor, (SchemaNames * __this, XmlNameTable * nameTable, MethodInfo * method));
DO_APP_FUNC(0x01AB5560, void, SchemaNames_CreateTokenToQNameTable, (SchemaNames * __this, MethodInfo * method));
DO_APP_FUNC(0x01AB8A50, SchemaType__Enum, SchemaNames_SchemaTypeFromRoot, (SchemaNames * __this, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01AB8B10, bool, SchemaNames_IsXSDRoot, (SchemaNames * __this, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01AB8BA0, bool, SchemaNames_IsXDRRoot, (SchemaNames * __this, String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, SchemaNamespaceManager__ctor, (SchemaNamespaceManager * __this, XmlSchemaObject * node, MethodInfo * method));
DO_APP_FUNC(0x01AB8C30, String *, SchemaNamespaceManager_LookupNamespace, (SchemaNamespaceManager * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AB8DB0, String *, SchemaNamespaceManager_LookupPrefix, (SchemaNamespaceManager * __this, String * ns, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, SchemaNotation__ctor, (SchemaNotation * __this, XmlQualifiedName * name, MethodInfo * method));
DO_APP_FUNC(0x002FA280, XmlQualifiedName *, SchemaNotation_get_Name, (SchemaNotation * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, SchemaNotation_get_SystemLiteral, (SchemaNotation * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, SchemaNotation_set_SystemLiteral, (SchemaNotation * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB950, String *, SchemaNotation_get_Pubid, (SchemaNotation * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, SchemaNotation_set_Pubid, (SchemaNotation * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x019AA4E0, void, Compiler__ctor, (Compiler * __this, XmlNameTable * nameTable, ValidationEventHandler * eventHandler, XmlSchema * schemaForSchema, XmlSchemaCompilationSettings * compilationSettings, MethodInfo * method));
DO_APP_FUNC(0x019AAE40, bool, Compiler_Execute, (Compiler * __this, XmlSchemaSet * schemaSet, SchemaInfo * schemaCompiledInfo, MethodInfo * method));
DO_APP_FUNC(0x019AAED0, void, Compiler_Prepare, (Compiler * __this, XmlSchema * schema, bool cleanup, MethodInfo * method));
DO_APP_FUNC(0x019AC210, void, Compiler_UpdateSForSSimpleTypes, (Compiler * __this, MethodInfo * method));
DO_APP_FUNC(0x019AC410, void, Compiler_Output, (Compiler * __this, SchemaInfo * schemaInfo, MethodInfo * method));
DO_APP_FUNC(0x019AD320, void, Compiler_ImportAllCompiledSchemas, (Compiler * __this, XmlSchemaSet * schemaSet, MethodInfo * method));
DO_APP_FUNC(0x019AD490, bool, Compiler_Compile, (Compiler * __this, MethodInfo * method));
DO_APP_FUNC(0x019AEFC0, void, Compiler_CleanupAttribute, (Compiler * __this, XmlSchemaAttribute * attribute, MethodInfo * method));
DO_APP_FUNC(0x019AF000, void, Compiler_CleanupAttributeGroup, (Compiler * __this, XmlSchemaAttributeGroup * attributeGroup, MethodInfo * method));
DO_APP_FUNC(0x019AF080, void, Compiler_CleanupComplexType, (Compiler * __this, XmlSchemaComplexType * complexType, MethodInfo * method));
DO_APP_FUNC(0x019AF470, void, Compiler_CleanupSimpleType, (Compiler * __this, XmlSchemaSimpleType * simpleType, MethodInfo * method));
DO_APP_FUNC(0x019AF580, void, Compiler_CleanupElement, (Compiler * __this, XmlSchemaElement * element, MethodInfo * method));
DO_APP_FUNC(0x019AF7C0, void, Compiler_CleanupAttributes, (Compiler * __this, XmlSchemaObjectCollection * attributes, MethodInfo * method));
DO_APP_FUNC(0x019AF900, void, Compiler_CleanupGroup, (Compiler * __this, XmlSchemaGroup * group, MethodInfo * method));
DO_APP_FUNC(0x019AF960, void, Compiler_CleanupParticle, (Compiler * __this, XmlSchemaParticle * particle, MethodInfo * method));
DO_APP_FUNC(0x019AFB90, void, Compiler_ProcessSubstitutionGroups, (Compiler * __this, MethodInfo * method));
DO_APP_FUNC(0x019B0300, void, Compiler_CompileSubstitutionGroup, (Compiler * __this, XmlSchemaSubstitutionGroup * substitutionGroup, MethodInfo * method));
DO_APP_FUNC(0x019B08D0, void, Compiler_RecursivelyCheckRedefinedGroups, (Compiler * __this, XmlSchemaGroup * redefinedGroup, XmlSchemaGroup * baseGroup, MethodInfo * method));
DO_APP_FUNC(0x019B0A80, void, Compiler_RecursivelyCheckRedefinedAttributeGroups, (Compiler * __this, XmlSchemaAttributeGroup * attributeGroup, XmlSchemaAttributeGroup * baseAttributeGroup, MethodInfo * method));
DO_APP_FUNC(0x019B0B10, void, Compiler_CompileGroup, (Compiler * __this, XmlSchemaGroup * group, MethodInfo * method));
DO_APP_FUNC(0x019B0C20, void, Compiler_CompileSimpleType, (Compiler * __this, XmlSchemaSimpleType * simpleType, MethodInfo * method));
DO_APP_FUNC(0x019B1470, XmlSchemaSimpleType__Array *, Compiler_CompileBaseMemberTypes, (Compiler * __this, XmlSchemaSimpleType * simpleType, MethodInfo * method));
DO_APP_FUNC(0x019B1930, void, Compiler_CheckUnionType, (Compiler * __this, XmlSchemaSimpleType * unionMember, ArrayList * memberTypeDefinitions, XmlSchemaSimpleType * parentType, MethodInfo * method));
DO_APP_FUNC(0x019B1AB0, void, Compiler_CompileComplexType, (Compiler * __this, XmlSchemaComplexType * complexType, MethodInfo * method));
DO_APP_FUNC(0x019B22A0, void, Compiler_CompileSimpleContentExtension, (Compiler * __this, XmlSchemaComplexType * complexType, XmlSchemaSimpleContentExtension * simpleExtension, MethodInfo * method));
DO_APP_FUNC(0x019B2510, void, Compiler_CompileSimpleContentRestriction, (Compiler * __this, XmlSchemaComplexType * complexType, XmlSchemaSimpleContentRestriction * simpleRestriction, MethodInfo * method));
DO_APP_FUNC(0x019B2930, void, Compiler_CompileComplexContentExtension, (Compiler * __this, XmlSchemaComplexType * complexType, XmlSchemaComplexContent * complexContent, XmlSchemaComplexContentExtension * complexExtension, MethodInfo * method));
DO_APP_FUNC(0x019B2D80, void, Compiler_CompileComplexContentRestriction, (Compiler * __this, XmlSchemaComplexType * complexType, XmlSchemaComplexContent * complexContent, XmlSchemaComplexContentRestriction * complexRestriction, MethodInfo * method));
DO_APP_FUNC(0x019B3050, void, Compiler_CheckParticleDerivation, (Compiler * __this, XmlSchemaComplexType * complexType, MethodInfo * method));
DO_APP_FUNC(0x019B3430, void, Compiler_CheckParticleDerivation_1, (Compiler * __this, XmlSchemaParticle * derivedParticle, XmlSchemaParticle * baseParticle, MethodInfo * method));
DO_APP_FUNC(0x019B3530, XmlSchemaParticle *, Compiler_CompileContentTypeParticle, (Compiler * __this, XmlSchemaParticle * particle, MethodInfo * method));
DO_APP_FUNC(0x019B3720, XmlSchemaParticle *, Compiler_CannonicalizeParticle, (Compiler * __this, XmlSchemaParticle * particle, bool root, MethodInfo * method));
DO_APP_FUNC(0x019B3AA0, XmlSchemaParticle *, Compiler_CannonicalizeElement, (Compiler * __this, XmlSchemaElement * element, MethodInfo * method));
DO_APP_FUNC(0x019B3E40, XmlSchemaParticle *, Compiler_CannonicalizeGroupRef, (Compiler * __this, XmlSchemaGroupRef * groupRef, bool root, MethodInfo * method));
DO_APP_FUNC(0x019B4670, XmlSchemaParticle *, Compiler_CannonicalizeAll, (Compiler * __this, XmlSchemaAll * all, bool root, MethodInfo * method));
DO_APP_FUNC(0x019B4A60, XmlSchemaParticle *, Compiler_CannonicalizeChoice, (Compiler * __this, XmlSchemaChoice * choice, bool root, MethodInfo * method));
DO_APP_FUNC(0x019B51E0, XmlSchemaParticle *, Compiler_CannonicalizeSequence, (Compiler * __this, XmlSchemaSequence * sequence, bool root, MethodInfo * method));
DO_APP_FUNC(0x019B58C0, XmlSchemaParticle *, Compiler_CannonicalizePointlessRoot, (Compiler * __this, XmlSchemaParticle * particle, MethodInfo * method));
DO_APP_FUNC(0x019B5CD0, bool, Compiler_IsValidRestriction, (Compiler * __this, XmlSchemaParticle * derivedParticle, XmlSchemaParticle * baseParticle, MethodInfo * method));
DO_APP_FUNC(0x019B66C0, bool, Compiler_IsElementFromElement, (Compiler * __this, XmlSchemaElement * derivedElement, XmlSchemaElement * baseElement, MethodInfo * method));
DO_APP_FUNC(0x019B6990, bool, Compiler_IsElementFromAny, (Compiler * __this, XmlSchemaElement * derivedElement, XmlSchemaAny * baseAny, MethodInfo * method));
DO_APP_FUNC(0x019B6C00, bool, Compiler_IsAnyFromAny, (Compiler * __this, XmlSchemaAny * derivedAny, XmlSchemaAny * baseAny, MethodInfo * method));
DO_APP_FUNC(0x019B6D30, bool, Compiler_IsGroupBaseFromAny, (Compiler * __this, XmlSchemaGroupBase * derivedGroupBase, XmlSchemaAny * baseAny, MethodInfo * method));
DO_APP_FUNC(0x019B7270, bool, Compiler_IsElementFromGroupBase, (Compiler * __this, XmlSchemaElement * derivedElement, XmlSchemaGroupBase * baseGroupBase, MethodInfo * method));
DO_APP_FUNC(0x019B7F70, bool, Compiler_IsChoiceFromChoiceSubstGroup, (Compiler * __this, XmlSchemaChoice * derivedChoice, XmlSchemaChoice * baseChoice, MethodInfo * method));
DO_APP_FUNC(0x019B8120, bool, Compiler_IsGroupBaseFromGroupBase, (Compiler * __this, XmlSchemaGroupBase * derivedGroupBase, XmlSchemaGroupBase * baseGroupBase, bool skipEmptableOnly, MethodInfo * method));
DO_APP_FUNC(0x019B8460, bool, Compiler_IsSequenceFromAll, (Compiler * __this, XmlSchemaSequence * derivedSequence, XmlSchemaAll * baseAll, MethodInfo * method));
DO_APP_FUNC(0x019B88A0, bool, Compiler_IsSequenceFromChoice, (Compiler * __this, XmlSchemaSequence * derivedSequence, XmlSchemaChoice * baseChoice, MethodInfo * method));
DO_APP_FUNC(0x019B8F70, bool, Compiler_IsValidOccurrenceRangeRestriction, (Compiler * __this, XmlSchemaParticle * derivedParticle, XmlSchemaParticle * baseParticle, MethodInfo * method));
DO_APP_FUNC(0x019B90C0, bool, Compiler_IsValidOccurrenceRangeRestriction_1, (Compiler * __this, Decimal minOccurs, Decimal maxOccurs, Decimal baseMinOccurs, Decimal baseMaxOccurs, MethodInfo * method));
DO_APP_FUNC(0x019B91F0, int32_t, Compiler_GetMappingParticle, (Compiler * __this, XmlSchemaParticle * particle, XmlSchemaObjectCollection * collection, MethodInfo * method));
DO_APP_FUNC(0x019B9360, bool, Compiler_IsParticleEmptiable, (Compiler * __this, XmlSchemaParticle * particle, MethodInfo * method));
DO_APP_FUNC(0x019B9470, void, Compiler_CalculateEffectiveTotalRange, (Compiler * __this, XmlSchemaParticle * particle, Decimal * minOccurs, Decimal * maxOccurs, MethodInfo * method));
DO_APP_FUNC(0x019BA450, void, Compiler_PushComplexType, (Compiler * __this, XmlSchemaComplexType * complexType, MethodInfo * method));
DO_APP_FUNC(0x016F5F70, XmlSchemaContentType__Enum, Compiler_GetSchemaContentType, (Compiler * __this, XmlSchemaComplexType * complexType, XmlSchemaComplexContent * complexContent, XmlSchemaParticle * particle, MethodInfo * method));
DO_APP_FUNC(0x019BA480, void, Compiler_CompileAttributeGroup, (Compiler * __this, XmlSchemaAttributeGroup * attributeGroup, MethodInfo * method));
DO_APP_FUNC(0x019BAB00, void, Compiler_CompileLocalAttributes, (Compiler * __this, XmlSchemaComplexType * baseType, XmlSchemaComplexType * derivedType, XmlSchemaObjectCollection * attributes, XmlSchemaAnyAttribute * anyAttribute, XmlSchemaDerivationMethod__Enum derivedBy, MethodInfo * method));
DO_APP_FUNC(0x019BBC50, void, Compiler_CheckAtrributeGroupRestriction, (Compiler * __this, XmlSchemaAttributeGroup * baseAttributeGroup, XmlSchemaAttributeGroup * derivedAttributeGroup, MethodInfo * method));
DO_APP_FUNC(0x019BC460, bool, Compiler_IsProcessContentsRestricted, (Compiler * __this, XmlSchemaComplexType * baseType, XmlSchemaAnyAttribute * derivedAttributeWildcard, XmlSchemaAnyAttribute * baseAttributeWildcard, MethodInfo * method));
DO_APP_FUNC(0x019BC560, XmlSchemaAnyAttribute *, Compiler_CompileAnyAttributeUnion, (Compiler * __this, XmlSchemaAnyAttribute * a, XmlSchemaAnyAttribute * b, MethodInfo * method));
DO_APP_FUNC(0x019BC650, XmlSchemaAnyAttribute *, Compiler_CompileAnyAttributeIntersection, (Compiler * __this, XmlSchemaAnyAttribute * a, XmlSchemaAnyAttribute * b, MethodInfo * method));
DO_APP_FUNC(0x019BC740, void, Compiler_CompileAttribute, (Compiler * __this, XmlSchemaAttribute * xa, MethodInfo * method));
DO_APP_FUNC(0x019BCF80, void, Compiler_SetDefaultFixed, (Compiler * __this, XmlSchemaAttribute * xa, SchemaAttDef * decl, MethodInfo * method));
DO_APP_FUNC(0x019BD220, void, Compiler_CompileIdentityConstraint, (Compiler * __this, XmlSchemaIdentityConstraint * xi, MethodInfo * method));
DO_APP_FUNC(0x019BD900, void, Compiler_CompileElement, (Compiler * __this, XmlSchemaElement * xe, MethodInfo * method));
DO_APP_FUNC(0x019BE5D0, ContentValidator *, Compiler_CompileComplexContent, (Compiler * __this, XmlSchemaComplexType * complexType, MethodInfo * method));
DO_APP_FUNC(0x019BEFD0, bool, Compiler_BuildParticleContentModel, (Compiler * __this, ParticleContentValidator * contentValidator, XmlSchemaParticle * particle, MethodInfo * method));
DO_APP_FUNC(0x019BF760, void, Compiler_CompileParticleElements, (Compiler * __this, XmlSchemaComplexType * complexType, XmlSchemaParticle * particle, MethodInfo * method));
DO_APP_FUNC(0x019BFAE0, void, Compiler_CompileParticleElements_1, (Compiler * __this, XmlSchemaParticle * particle, MethodInfo * method));
DO_APP_FUNC(0x019BFD70, void, Compiler_CompileComplexTypeElements, (Compiler * __this, XmlSchemaComplexType * complexType, MethodInfo * method));
DO_APP_FUNC(0x019BFEF0, XmlSchemaSimpleType *, Compiler_GetSimpleType, (Compiler * __this, XmlQualifiedName * name, MethodInfo * method));
DO_APP_FUNC(0x019C0020, XmlSchemaComplexType *, Compiler_GetComplexType, (Compiler * __this, XmlQualifiedName * name, MethodInfo * method));
DO_APP_FUNC(0x019C0120, XmlSchemaType *, Compiler_GetAnySchemaType, (Compiler * __this, XmlQualifiedName * name, MethodInfo * method));
DO_APP_FUNC(0x019C0340, void, Compiler_CopyPosition, (Compiler * __this, XmlSchemaAnnotated * to, XmlSchemaAnnotated * from, bool copyParent, MethodInfo * method));
DO_APP_FUNC(0x019C03C0, bool, Compiler_IsFixedEqual, (Compiler * __this, SchemaDeclBase * baseDecl, SchemaDeclBase * derivedDecl, MethodInfo * method));
DO_APP_FUNC(0x01ABDC50, void, ValidationEventArgs__ctor, (ValidationEventArgs * __this, XmlSchemaException * ex, MethodInfo * method));
DO_APP_FUNC(0x01ABDD00, void, ValidationEventArgs__ctor_1, (ValidationEventArgs * __this, XmlSchemaException * ex, XmlSeverityType__Enum severity, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, XmlSeverityType__Enum, ValidationEventArgs_get_Severity, (ValidationEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, XmlSchemaException *, ValidationEventArgs_get_Exception, (ValidationEventArgs * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, ValidationEventHandler__ctor, (ValidationEventHandler * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, ValidationEventHandler_Invoke, (ValidationEventHandler * __this, Object * sender, ValidationEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, ValidationEventHandler_BeginInvoke, (ValidationEventHandler * __this, Object * sender, ValidationEventArgs * e, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, ValidationEventHandler_EndInvoke, (ValidationEventHandler * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x01ABDDB0, void, ValidationState__ctor, (ValidationState * __this, MethodInfo * method));
DO_APP_FUNC(0x01ABDE40, void, XdrBuilder__ctor, (XdrBuilder * __this, XmlReader * reader, XmlNamespaceManager * curmgr, SchemaInfo * sinfo, String * targetNamspace, XmlNameTable * nameTable, SchemaNames * schemaNames, ValidationEventHandler * eventhandler, MethodInfo * method));
DO_APP_FUNC(0x01ABE460, bool, XdrBuilder_ProcessElement, (XdrBuilder * __this, String * prefix, String * name, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01ABE7D0, void, XdrBuilder_ProcessAttribute, (XdrBuilder * __this, String * prefix, String * name, String * ns, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBD10, void, XdrBuilder_set_XmlResolver, (XdrBuilder * __this, XmlResolver * value, MethodInfo * method));
DO_APP_FUNC(0x01ABEE90, bool, XdrBuilder_LoadSchema, (XdrBuilder * __this, String * uri, MethodInfo * method));
DO_APP_FUNC(0x01ABF590, bool, XdrBuilder_IsXdrSchema, (String * uri, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XdrBuilder_IsContentParsed, (XdrBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x01ABF750, void, XdrBuilder_ProcessMarkup, (XdrBuilder * __this, XmlNode__Array * markup, MethodInfo * method));
DO_APP_FUNC(0x01ABF7C0, void, XdrBuilder_ProcessCData, (XdrBuilder * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01ABF880, void, XdrBuilder_StartChildren, (XdrBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x01ABF8C0, void, XdrBuilder_EndChildren, (XdrBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x01ABF9F0, void, XdrBuilder_Push, (XdrBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x01ABFA40, void, XdrBuilder_Pop, (XdrBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x01ABFB30, void, XdrBuilder_PushGroupInfo, (XdrBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x01ABFD00, void, XdrBuilder_PopGroupInfo, (XdrBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x01ABFDF0, void, XdrBuilder_XDR_InitRoot, (XdrBuilder * builder, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01ABFE60, void, XdrBuilder_XDR_BuildRoot_Name, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XdrBuilder_XDR_BuildRoot_ID, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01ABFF30, void, XdrBuilder_XDR_BeginRoot, (XdrBuilder * builder, MethodInfo * method));
DO_APP_FUNC(0x01AC0070, void, XdrBuilder_XDR_EndRoot, (XdrBuilder * builder, MethodInfo * method));
DO_APP_FUNC(0x01AC05F0, void, XdrBuilder_XDR_InitElementType, (XdrBuilder * builder, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01AC0A00, void, XdrBuilder_XDR_BuildElementType_Name, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AC0CA0, void, XdrBuilder_XDR_BuildElementType_Content, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AC0DA0, void, XdrBuilder_XDR_BuildElementType_Model, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AC0EA0, void, XdrBuilder_XDR_BuildElementType_Order, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AC0FD0, void, XdrBuilder_XDR_BuildElementType_DtType, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AC1140, void, XdrBuilder_XDR_BuildElementType_DtValues, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AC1310, void, XdrBuilder_XDR_BuildElementType_DtMaxLength, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AC13E0, void, XdrBuilder_XDR_BuildElementType_DtMinLength, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AC14B0, void, XdrBuilder_XDR_BeginElementType, (XdrBuilder * builder, MethodInfo * method));
DO_APP_FUNC(0x01AC1A00, void, XdrBuilder_XDR_EndElementType, (XdrBuilder * builder, MethodInfo * method));
DO_APP_FUNC(0x01AC1EB0, void, XdrBuilder_XDR_InitAttributeType, (XdrBuilder * builder, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01AC20A0, void, XdrBuilder_XDR_BuildAttributeType_Name, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AC24C0, void, XdrBuilder_XDR_BuildAttributeType_Required, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AC2590, void, XdrBuilder_XDR_BuildAttributeType_Default, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AC25C0, void, XdrBuilder_XDR_BuildAttributeType_DtType, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AC26F0, void, XdrBuilder_XDR_BuildAttributeType_DtValues, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AC28C0, void, XdrBuilder_XDR_BuildAttributeType_DtMaxLength, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AC2990, void, XdrBuilder_XDR_BuildAttributeType_DtMinLength, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AC2A60, void, XdrBuilder_XDR_BeginAttributeType, (XdrBuilder * builder, MethodInfo * method));
DO_APP_FUNC(0x01AC2B40, void, XdrBuilder_XDR_EndAttributeType, (XdrBuilder * builder, MethodInfo * method));
DO_APP_FUNC(0x01AC2EA0, void, XdrBuilder_XDR_InitElement, (XdrBuilder * builder, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01AC2FC0, void, XdrBuilder_XDR_BuildElement_Type, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AC32B0, void, XdrBuilder_XDR_BuildElement_MinOccurs, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AC3380, void, XdrBuilder_XDR_BuildElement_MaxOccurs, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AC3450, void, XdrBuilder_XDR_EndElement, (XdrBuilder * builder, MethodInfo * method));
DO_APP_FUNC(0x01AC35A0, void, XdrBuilder_XDR_InitAttribute, (XdrBuilder * builder, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01AC3720, void, XdrBuilder_XDR_BuildAttribute_Type, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AC3830, void, XdrBuilder_XDR_BuildAttribute_Required, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AC3910, void, XdrBuilder_XDR_BuildAttribute_Default, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AC3940, void, XdrBuilder_XDR_BeginAttribute, (XdrBuilder * builder, MethodInfo * method));
DO_APP_FUNC(0x01AC3F60, void, XdrBuilder_XDR_EndAttribute, (XdrBuilder * builder, MethodInfo * method));
DO_APP_FUNC(0x01AC3F90, void, XdrBuilder_XDR_InitGroup, (XdrBuilder * builder, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01AC4120, void, XdrBuilder_XDR_BuildGroup_Order, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AC4270, void, XdrBuilder_XDR_BuildGroup_MinOccurs, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AC4350, void, XdrBuilder_XDR_BuildGroup_MaxOccurs, (XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x01AC4430, void, XdrBuilder_XDR_EndGroup, (XdrBuilder * builder, MethodInfo * method));
DO_APP_FUNC(0x01AC46E0, void, XdrBuilder_XDR_InitElementDtType, (XdrBuilder * builder, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01AC47B0, void, XdrBuilder_XDR_EndElementDtType, (XdrBuilder * builder, MethodInfo * method));
DO_APP_FUNC(0x01AC4900, void, XdrBuilder_XDR_InitAttributeDtType, (XdrBuilder * builder, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01AC49B0, void, XdrBuilder_XDR_EndAttributeDtType, (XdrBuilder * builder, MethodInfo * method));
DO_APP_FUNC(0x01AC4B00, bool, XdrBuilder_GetNextState, (XdrBuilder * __this, XmlQualifiedName * qname, MethodInfo * method));
DO_APP_FUNC(0x01AC4DD0, bool, XdrBuilder_IsSkipableElement, (XdrBuilder * __this, XmlQualifiedName * qname, MethodInfo * method));
DO_APP_FUNC(0x01AC4F10, bool, XdrBuilder_IsSkipableAttribute, (XdrBuilder * __this, XmlQualifiedName * qname, MethodInfo * method));
DO_APP_FUNC(0x01AC50D0, int32_t, XdrBuilder_GetOrder, (XdrBuilder * __this, XmlQualifiedName * qname, MethodInfo * method));
DO_APP_FUNC(0x01AC5330, void, XdrBuilder_AddOrder, (XdrBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x01AC5430, bool, XdrBuilder_IsYes, (Object * obj, XdrBuilder * builder, MethodInfo * method));
DO_APP_FUNC(0x01AC55B0, uint32_t, XdrBuilder_ParseMinOccurs, (Object * obj, XdrBuilder * builder, MethodInfo * method));
DO_APP_FUNC(0x01AC56F0, uint32_t, XdrBuilder_ParseMaxOccurs, (Object * obj, XdrBuilder * builder, MethodInfo * method));
DO_APP_FUNC(0x01AC5860, void, XdrBuilder_HandleMinMax, (ParticleContentValidator * pContent, uint32_t cMin, uint32_t cMax, MethodInfo * method));
DO_APP_FUNC(0x01AC5890, void, XdrBuilder_ParseDtMaxLength, (uint32_t * cVal, Object * obj, XdrBuilder * builder, MethodInfo * method));
DO_APP_FUNC(0x01AC5A20, void, XdrBuilder_ParseDtMinLength, (uint32_t * cVal, Object * obj, XdrBuilder * builder, MethodInfo * method));
DO_APP_FUNC(0x01AC5BB0, void, XdrBuilder_CompareMinMaxLength, (uint32_t cMin, uint32_t cMax, XdrBuilder * builder, MethodInfo * method));
DO_APP_FUNC(0x01AC5C60, bool, XdrBuilder_ParseInteger, (String * str, uint32_t * n, MethodInfo * method));
DO_APP_FUNC(0x01AC5CC0, void, XdrBuilder_XDR_CheckAttributeDefault, (XdrBuilder * __this, XdrBuilder_DeclBaseInfo * decl, SchemaAttDef * pAttdef, MethodInfo * method));
DO_APP_FUNC(0x01AC5DF0, void, XdrBuilder_SetAttributePresence, (XdrBuilder * __this, SchemaAttDef * pAttdef, bool fRequired, MethodInfo * method));
DO_APP_FUNC(0x01AC5E50, int32_t, XdrBuilder_GetContent, (XdrBuilder * __this, XmlQualifiedName * qname, MethodInfo * method));
DO_APP_FUNC(0x01AC6150, bool, XdrBuilder_GetModel, (XdrBuilder * __this, XmlQualifiedName * qname, MethodInfo * method));
DO_APP_FUNC(0x01AC6310, XmlSchemaDatatype *, XdrBuilder_CheckDatatype, (XdrBuilder * __this, String * str, MethodInfo * method));
DO_APP_FUNC(0x01AC64F0, void, XdrBuilder_CheckDefaultAttValue, (XdrBuilder * __this, SchemaAttDef * attDef, MethodInfo * method));
DO_APP_FUNC(0x01AC6660, bool, XdrBuilder_IsGlobal, (XdrBuilder * __this, int32_t flags, MethodInfo * method));
DO_APP_FUNC(0x01AC6670, void, XdrBuilder_SendValidationEvent, (XdrBuilder * __this, String * code, String__Array * args, XmlSeverityType__Enum severity, MethodInfo * method));
DO_APP_FUNC(0x01AC6880, void, XdrBuilder_SendValidationEvent_1, (XdrBuilder * __this, String * code, MethodInfo * method));
DO_APP_FUNC(0x01AC6920, void, XdrBuilder_SendValidationEvent_2, (XdrBuilder * __this, String * code, String * msg, MethodInfo * method));
DO_APP_FUNC(0x01AC6B20, void, XdrBuilder_SendValidationEvent_3, (XdrBuilder * __this, XmlSchemaException * e, XmlSeverityType__Enum severity, MethodInfo * method));
DO_APP_FUNC(0x01AC6CF0, void, XdrBuilder__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02232240, void, XdrBuilder_DeclBaseInfo__ctor, (XdrBuilder_DeclBaseInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02232250, void, XdrBuilder_DeclBaseInfo_Reset, (XdrBuilder_DeclBaseInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x02232350, void, XdrBuilder_GroupContent_Copy, (XdrBuilder_GroupContent * from, XdrBuilder_GroupContent * to, MethodInfo * method));
DO_APP_FUNC(0x02232390, XdrBuilder_GroupContent *, XdrBuilder_GroupContent_Copy_1, (XdrBuilder_GroupContent * other, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XdrBuilder_GroupContent__ctor, (XdrBuilder_GroupContent * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XdrBuilder_ElementContent__ctor, (XdrBuilder_ElementContent * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XdrBuilder_AttributeContent__ctor, (XdrBuilder_AttributeContent * __this, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, XdrBuilder_XdrBuildFunction__ctor, (XdrBuilder_XdrBuildFunction * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01434270, void, XdrBuilder_XdrBuildFunction_Invoke, (XdrBuilder_XdrBuildFunction * __this, XdrBuilder * builder, Object * obj, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x00DC7DB0, IAsyncResult *, XdrBuilder_XdrBuildFunction_BeginInvoke, (XdrBuilder_XdrBuildFunction * __this, XdrBuilder * builder, Object * obj, String * prefix, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, XdrBuilder_XdrBuildFunction_EndInvoke, (XdrBuilder_XdrBuildFunction * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, XdrBuilder_XdrInitFunction__ctor, (XdrBuilder_XdrInitFunction * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01686F50, void, XdrBuilder_XdrInitFunction_Invoke, (XdrBuilder_XdrInitFunction * __this, XdrBuilder * builder, Object * obj, MethodInfo * method));
DO_APP_FUNC(0x01435260, IAsyncResult *, XdrBuilder_XdrInitFunction_BeginInvoke, (XdrBuilder_XdrInitFunction * __this, XdrBuilder * builder, Object * obj, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, XdrBuilder_XdrInitFunction_EndInvoke, (XdrBuilder_XdrInitFunction * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, XdrBuilder_XdrBeginChildFunction__ctor, (XdrBuilder_XdrBeginChildFunction * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x00673B90, void, XdrBuilder_XdrBeginChildFunction_Invoke, (XdrBuilder_XdrBeginChildFunction * __this, XdrBuilder * builder, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, XdrBuilder_XdrBeginChildFunction_BeginInvoke, (XdrBuilder_XdrBeginChildFunction * __this, XdrBuilder * builder, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, XdrBuilder_XdrBeginChildFunction_EndInvoke, (XdrBuilder_XdrBeginChildFunction * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, XdrBuilder_XdrEndChildFunction__ctor, (XdrBuilder_XdrEndChildFunction * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x00673B90, void, XdrBuilder_XdrEndChildFunction_Invoke, (XdrBuilder_XdrEndChildFunction * __this, XdrBuilder * builder, MethodInfo * method));
DO_APP_FUNC(0x00674080, IAsyncResult *, XdrBuilder_XdrEndChildFunction_BeginInvoke, (XdrBuilder_XdrEndChildFunction * __this, XdrBuilder * builder, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, void, XdrBuilder_XdrEndChildFunction_EndInvoke, (XdrBuilder_XdrEndChildFunction * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x02232500, void, XdrBuilder_XdrAttributeEntry__ctor, (XdrBuilder_XdrAttributeEntry * __this, SchemaNames_Token__Enum a, XmlTokenizedType__Enum ttype, XdrBuilder_XdrBuildFunction * build, MethodInfo * method));
DO_APP_FUNC(0x02232540, void, XdrBuilder_XdrAttributeEntry__ctor_1, (XdrBuilder_XdrAttributeEntry * __this, SchemaNames_Token__Enum a, XmlTokenizedType__Enum ttype, int32_t schemaFlags, XdrBuilder_XdrBuildFunction * build, MethodInfo * method));
DO_APP_FUNC(0x02232580, void, XdrBuilder_XdrEntry__ctor, (XdrBuilder_XdrEntry * __this, SchemaNames_Token__Enum n, Int32__Array * states, XdrBuilder_XdrAttributeEntry__Array * attributes, XdrBuilder_XdrInitFunction * init, XdrBuilder_XdrBeginChildFunction * begin, XdrBuilder_XdrEndChildFunction * end, bool fText, MethodInfo * method));
DO_APP_FUNC(0x022325B0, void, XdrValidator__ctor, (XdrValidator * __this, BaseValidator * validator, MethodInfo * method));
DO_APP_FUNC(0x022326D0, void, XdrValidator__ctor_1, (XdrValidator * __this, XmlValidatingReaderImpl * reader, XmlSchemaCollection * schemaCollection, IValidationEventHandling * eventHandling, MethodInfo * method));
DO_APP_FUNC(0x022327D0, void, XdrValidator_Init, (XdrValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x02232D00, void, XdrValidator_Validate, (XdrValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x02232DE0, void, XdrValidator_ValidateElement, (XdrValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x022331A0, void, XdrValidator_ValidateChildElement, (XdrValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x005D1A10, bool, XdrValidator_get_IsInlineSchemaStarted, (XdrValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x022333A0, void, XdrValidator_ProcessInlineSchema, (XdrValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x022336A0, void, XdrValidator_ProcessElement, (XdrValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x022337A0, void, XdrValidator_ValidateEndElement, (XdrValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x02233A30, SchemaElementDecl *, XdrValidator_ThoroughGetElementDecl, (XdrValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x02233EB0, void, XdrValidator_ValidateStartElement, (XdrValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x02234480, void, XdrValidator_ValidateEndStartElement, (XdrValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x02234860, void, XdrValidator_LoadSchemaFromLocation, (XdrValidator * __this, String * uri, MethodInfo * method));
DO_APP_FUNC(0x02235070, void, XdrValidator_LoadSchema, (XdrValidator * __this, String * uri, MethodInfo * method));
DO_APP_FUNC(0x01C87090, bool, XdrValidator_get_HasSchema, (XdrValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x01C870B0, bool, XdrValidator_get_PreserveWhitespace, (XdrValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x02235260, void, XdrValidator_ProcessTokenizedType, (XdrValidator * __this, XmlTokenizedType__Enum ttype, String * name, MethodInfo * method));
DO_APP_FUNC(0x02235570, void, XdrValidator_CompleteValidation, (XdrValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x02235780, void, XdrValidator_CheckValue, (XdrValidator * __this, String * value, SchemaAttDef * attdef, MethodInfo * method));
DO_APP_FUNC(0x02235D20, void, XdrValidator_CheckDefaultValue, (String * value, SchemaAttDef * attdef, SchemaInfo * sinfo, XmlNamespaceManager * nsManager, XmlNameTable * NameTable, Object * sender, ValidationEventHandler * eventhandler, String * baseUri, int32_t lineNo, int32_t linePos, MethodInfo * method));
DO_APP_FUNC(0x02236410, void, XdrValidator_AddID, (XdrValidator * __this, String * name, Object * node, MethodInfo * method));
DO_APP_FUNC(0x01C87A40, Object *, XdrValidator_FindId, (XdrValidator * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x022365B0, void, XdrValidator_Push, (XdrValidator * __this, XmlQualifiedName * elementName, MethodInfo * method));
DO_APP_FUNC(0x022367E0, void, XdrValidator_Pop, (XdrValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x02236930, void, XdrValidator_CheckForwardRefs, (XdrValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x02236B40, XmlQualifiedName *, XdrValidator_QualifiedName, (XdrValidator * __this, String * name, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0223BA20, void, XmlAtomicValue__ctor, (XmlAtomicValue * __this, XmlSchemaType * xmlType, bool value, MethodInfo * method));
DO_APP_FUNC(0x0223BAF0, void, XmlAtomicValue__ctor_1, (XmlAtomicValue * __this, XmlSchemaType * xmlType, DateTime value, MethodInfo * method));
DO_APP_FUNC(0x0223BBC0, void, XmlAtomicValue__ctor_2, (XmlAtomicValue * __this, XmlSchemaType * xmlType, double value, MethodInfo * method));
DO_APP_FUNC(0x0223BCA0, void, XmlAtomicValue__ctor_3, (XmlAtomicValue * __this, XmlSchemaType * xmlType, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0223BD70, void, XmlAtomicValue__ctor_4, (XmlAtomicValue * __this, XmlSchemaType * xmlType, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x0223BE40, void, XmlAtomicValue__ctor_5, (XmlAtomicValue * __this, XmlSchemaType * xmlType, String * value, MethodInfo * method));
DO_APP_FUNC(0x0223BF40, void, XmlAtomicValue__ctor_6, (XmlAtomicValue * __this, XmlSchemaType * xmlType, String * value, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x0223C240, void, XmlAtomicValue__ctor_7, (XmlAtomicValue * __this, XmlSchemaType * xmlType, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0223C340, void, XmlAtomicValue__ctor_8, (XmlAtomicValue * __this, XmlSchemaType * xmlType, Object * value, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, Object *, XmlAtomicValue_System_ICloneable_Clone, (XmlAtomicValue * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA280, XmlSchemaType *, XmlAtomicValue_get_XmlType, (XmlAtomicValue * __this, MethodInfo * method));
DO_APP_FUNC(0x0223C5A0, Type *, XmlAtomicValue_get_ValueType, (XmlAtomicValue * __this, MethodInfo * method));
DO_APP_FUNC(0x0223C5E0, Object *, XmlAtomicValue_get_TypedValue, (XmlAtomicValue * __this, MethodInfo * method));
DO_APP_FUNC(0x0223C830, bool, XmlAtomicValue_get_ValueAsBoolean, (XmlAtomicValue * __this, MethodInfo * method));
DO_APP_FUNC(0x0223C950, DateTime, XmlAtomicValue_get_ValueAsDateTime, (XmlAtomicValue * __this, MethodInfo * method));
DO_APP_FUNC(0x0223CA70, double, XmlAtomicValue_get_ValueAsDouble, (XmlAtomicValue * __this, MethodInfo * method));
DO_APP_FUNC(0x0223CB90, int32_t, XmlAtomicValue_get_ValueAsInt, (XmlAtomicValue * __this, MethodInfo * method));
DO_APP_FUNC(0x0223CCB0, int64_t, XmlAtomicValue_get_ValueAsLong, (XmlAtomicValue * __this, MethodInfo * method));
DO_APP_FUNC(0x0223CDD0, Object *, XmlAtomicValue_ValueAs, (XmlAtomicValue * __this, Type * type, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x0223D040, String *, XmlAtomicValue_get_Value, (XmlAtomicValue * __this, MethodInfo * method));
DO_APP_FUNC(0x00CC2AF0, String *, XmlAtomicValue_ToString, (XmlAtomicValue * __this, MethodInfo * method));
DO_APP_FUNC(0x0223D180, String *, XmlAtomicValue_GetPrefixFromQName, (XmlAtomicValue * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x02028E40, void, XmlAtomicValue_NamespacePrefixForQName__ctor, (XmlAtomicValue_NamespacePrefixForQName * __this, String * prefix, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0223D290, String *, XmlAtomicValue_NamespacePrefixForQName_LookupNamespace, (XmlAtomicValue_NamespacePrefixForQName * __this, String * prefix, MethodInfo * method));
DO_APP_FUNC(0x0223D2E0, String *, XmlAtomicValue_NamespacePrefixForQName_LookupPrefix, (XmlAtomicValue_NamespacePrefixForQName * __this, String * namespaceName, MethodInfo * method));
DO_APP_FUNC(0x0223D330, IDictionary_2_System_String_System_String_ *, XmlAtomicValue_NamespacePrefixForQName_GetNamespacesInScope, (XmlAtomicValue_NamespacePrefixForQName * __this, XmlNamespaceScope__Enum scope, MethodInfo * method));
DO_APP_FUNC(0x02256A30, void, XmlSchema__ctor, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x022571E0, XmlSchema *, XmlSchema_Read, (XmlReader * reader, ValidationEventHandler * validationEventHandler, MethodInfo * method));
DO_APP_FUNC(0x022575D0, bool, XmlSchema_CompileSchema, (XmlSchema * __this, XmlSchemaCollection * xsc, XmlResolver * resolver, SchemaInfo * schemaInfo, String * ns, ValidationEventHandler * validationEventHandler, XmlNameTable * nameTable, bool CompileContentModel, MethodInfo * method));
DO_APP_FUNC(0x02257980, void, XmlSchema_CompileSchemaInSet, (XmlSchema * __this, XmlNameTable * nameTable, ValidationEventHandler * eventHandler, XmlSchemaCompilationSettings * compilationSettings, MethodInfo * method));
DO_APP_FUNC(0x003FC7F0, XmlSchemaForm__Enum, XmlSchema_get_AttributeFormDefault, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x00617D40, void, XmlSchema_set_AttributeFormDefault, (XmlSchema * __this, XmlSchemaForm__Enum value, MethodInfo * method));
DO_APP_FUNC(0x004E57A0, XmlSchemaDerivationMethod__Enum, XmlSchema_get_BlockDefault, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x004E57B0, void, XmlSchema_set_BlockDefault, (XmlSchema * __this, XmlSchemaDerivationMethod__Enum value, MethodInfo * method));
DO_APP_FUNC(0x0057AAC0, XmlSchemaDerivationMethod__Enum, XmlSchema_get_FinalDefault, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x00C08D30, void, XmlSchema_set_FinalDefault, (XmlSchema * __this, XmlSchemaDerivationMethod__Enum value, MethodInfo * method));
DO_APP_FUNC(0x003FC830, XmlSchemaForm__Enum, XmlSchema_get_ElementFormDefault, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x004C5130, void, XmlSchema_set_ElementFormDefault, (XmlSchema * __this, XmlSchemaForm__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, String *, XmlSchema_get_TargetNamespace, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBA00, void, XmlSchema_set_TargetNamespace, (XmlSchema * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, String *, XmlSchema_get_Version, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, XmlSchema_set_Version, (XmlSchema * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, XmlSchemaObjectCollection *, XmlSchema_get_Includes, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, XmlSchemaObjectCollection *, XmlSchema_get_Items, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x00615270, bool, XmlSchema_get_IsCompiledBySet, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x00674DC0, void, XmlSchema_set_IsCompiledBySet, (XmlSchema * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00B8A120, bool, XmlSchema_get_IsPreprocessed, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x00B8A130, void, XmlSchema_set_IsPreprocessed, (XmlSchema * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01CA7690, bool, XmlSchema_get_IsRedefined, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x02257B20, void, XmlSchema_set_IsRedefined, (XmlSchema * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x02257B30, XmlSchemaObjectTable *, XmlSchema_get_Attributes, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x02257C90, XmlSchemaObjectTable *, XmlSchema_get_AttributeGroups, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x02257DF0, XmlSchemaObjectTable *, XmlSchema_get_SchemaTypes, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x02257F50, XmlSchemaObjectTable *, XmlSchema_get_Elements, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, String *, XmlSchema_get_Id, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBB0, void, XmlSchema_set_Id, (XmlSchema * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBC80, XmlSchemaObjectTable *, XmlSchema_get_Groups, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBCA0, XmlSchemaObjectTable *, XmlSchema_get_Notations, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBCC0, XmlSchemaObjectTable *, XmlSchema_get_IdentityConstraints, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBD40, Uri *, XmlSchema_get_BaseUri, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBD50, void, XmlSchema_set_BaseUri, (XmlSchema * __this, Uri * value, MethodInfo * method));
DO_APP_FUNC(0x022580B0, int32_t, XmlSchema_get_SchemaId, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x00413160, bool, XmlSchema_get_IsChameleon, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x00413170, void, XmlSchema_set_IsChameleon, (XmlSchema * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00660430, Hashtable *, XmlSchema_get_Ids, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x02258170, XmlDocument *, XmlSchema_get_Document, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x006DC050, int32_t, XmlSchema_get_ErrorCount, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x012C9CC0, void, XmlSchema_set_ErrorCount, (XmlSchema * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x022582D0, XmlSchema *, XmlSchema_Clone, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x02258480, XmlSchema *, XmlSchema_DeepClone, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, String *, XmlSchema_get_IdAttribute, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBB0, void, XmlSchema_set_IdAttribute, (XmlSchema * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x006DC040, void, XmlSchema_SetIsCompiled, (XmlSchema * __this, bool isCompiled, MethodInfo * method));
DO_APP_FUNC(0x002FBBD0, void, XmlSchema_SetUnhandledAttributes, (XmlSchema * __this, XmlAttribute__Array * moreAttributes, MethodInfo * method));
DO_APP_FUNC(0x02258900, void, XmlSchema_AddAnnotation, (XmlSchema * __this, XmlSchemaAnnotation * annotation, MethodInfo * method));
DO_APP_FUNC(0x02258920, ArrayList *, XmlSchema_get_ImportedSchemas, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x02258A80, ArrayList *, XmlSchema_get_ImportedNamespaces, (XmlSchema * __this, MethodInfo * method));
DO_APP_FUNC(0x02258BE0, void, XmlSchema_GetExternalSchemasList, (XmlSchema * __this, IList * extList, XmlSchema * schema, MethodInfo * method));
DO_APP_FUNC(0x02258DC0, void, XmlSchema__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FBBE0, XmlSchemaObjectCollection *, XmlSchemaAll_get_Items, (XmlSchemaAll * __this, MethodInfo * method));
DO_APP_FUNC(0x01C9FDA0, bool, XmlSchemaAll_get_IsEmpty, (XmlSchemaAll * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBF0, void, XmlSchemaAll_SetItems, (XmlSchemaAll * __this, XmlSchemaObjectCollection * newItems, MethodInfo * method));
DO_APP_FUNC(0x01C9FE00, void, XmlSchemaAll__ctor, (XmlSchemaAll * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, String *, XmlSchemaAnnotated_get_Id, (XmlSchemaAnnotated * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9C0, void, XmlSchemaAnnotated_set_Id, (XmlSchemaAnnotated * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, XmlSchemaAnnotation *, XmlSchemaAnnotated_get_Annotation, (XmlSchemaAnnotated * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9E0, void, XmlSchemaAnnotated_set_Annotation, (XmlSchemaAnnotated * __this, XmlSchemaAnnotation * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, XmlAttribute__Array *, XmlSchemaAnnotated_get_UnhandledAttributes, (XmlSchemaAnnotated * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBA00, void, XmlSchemaAnnotated_set_UnhandledAttributes, (XmlSchemaAnnotated * __this, XmlAttribute__Array * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, String *, XmlSchemaAnnotated_get_IdAttribute, (XmlSchemaAnnotated * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9C0, void, XmlSchemaAnnotated_set_IdAttribute, (XmlSchemaAnnotated * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBA00, void, XmlSchemaAnnotated_SetUnhandledAttributes, (XmlSchemaAnnotated * __this, XmlAttribute__Array * moreAttributes, MethodInfo * method));
DO_APP_FUNC(0x002FB9E0, void, XmlSchemaAnnotated_AddAnnotation, (XmlSchemaAnnotated * __this, XmlSchemaAnnotation * annotation, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSchemaAnnotated__ctor, (XmlSchemaAnnotated * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, String *, XmlSchemaAnnotation_get_Id, (XmlSchemaAnnotation * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9C0, void, XmlSchemaAnnotation_set_Id, (XmlSchemaAnnotation * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, XmlSchemaObjectCollection *, XmlSchemaAnnotation_get_Items, (XmlSchemaAnnotation * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, String *, XmlSchemaAnnotation_get_IdAttribute, (XmlSchemaAnnotation * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9C0, void, XmlSchemaAnnotation_set_IdAttribute, (XmlSchemaAnnotation * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBA00, void, XmlSchemaAnnotation_SetUnhandledAttributes, (XmlSchemaAnnotation * __this, XmlAttribute__Array * moreAttributes, MethodInfo * method));
DO_APP_FUNC(0x01C9FF50, void, XmlSchemaAnnotation__ctor, (XmlSchemaAnnotation * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBE0, String *, XmlSchemaAny_get_Namespace, (XmlSchemaAny * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBF0, void, XmlSchemaAny_set_Namespace, (XmlSchemaAny * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x00C03C80, void, XmlSchemaAny_set_ProcessContents, (XmlSchemaAny * __this, XmlSchemaContentProcessing__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FBC20, NamespaceList *, XmlSchemaAny_get_NamespaceList, (XmlSchemaAny * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA00A0, String *, XmlSchemaAny_get_ResolvedNamespace, (XmlSchemaAny * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA0130, XmlSchemaContentProcessing__Enum, XmlSchemaAny_get_ProcessContentsCorrect, (XmlSchemaAny * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA0150, String *, XmlSchemaAny_get_NameString, (XmlSchemaAny * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA05D0, void, XmlSchemaAny_BuildNamespaceList, (XmlSchemaAny * __this, String * targetNamespace, MethodInfo * method));
DO_APP_FUNC(0x01CA07F0, void, XmlSchemaAny_BuildNamespaceListV1Compat, (XmlSchemaAny * __this, String * targetNamespace, MethodInfo * method));
DO_APP_FUNC(0x01CA0A20, bool, XmlSchemaAny_Allows, (XmlSchemaAny * __this, XmlQualifiedName * qname, MethodInfo * method));
DO_APP_FUNC(0x01CA0A60, void, XmlSchemaAny__ctor, (XmlSchemaAny * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, XmlSchemaAnyAttribute_set_Namespace, (XmlSchemaAnyAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x004C6660, XmlSchemaContentProcessing__Enum, XmlSchemaAnyAttribute_get_ProcessContents, (XmlSchemaAnyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x0191E6A0, void, XmlSchemaAnyAttribute_set_ProcessContents, (XmlSchemaAnyAttribute * __this, XmlSchemaContentProcessing__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, NamespaceList *, XmlSchemaAnyAttribute_get_NamespaceList, (XmlSchemaAnyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA0B00, XmlSchemaContentProcessing__Enum, XmlSchemaAnyAttribute_get_ProcessContentsCorrect, (XmlSchemaAnyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA0B10, void, XmlSchemaAnyAttribute_BuildNamespaceList, (XmlSchemaAnyAttribute * __this, String * targetNamespace, MethodInfo * method));
DO_APP_FUNC(0x01CA0D30, void, XmlSchemaAnyAttribute_BuildNamespaceListV1Compat, (XmlSchemaAnyAttribute * __this, String * targetNamespace, MethodInfo * method));
DO_APP_FUNC(0x01CA0F60, bool, XmlSchemaAnyAttribute_Allows, (XmlSchemaAnyAttribute * __this, XmlQualifiedName * qname, MethodInfo * method));
DO_APP_FUNC(0x01CA0FA0, bool, XmlSchemaAnyAttribute_IsSubset, (XmlSchemaAnyAttribute * sub, XmlSchemaAnyAttribute * super, MethodInfo * method));
DO_APP_FUNC(0x01CA0FD0, XmlSchemaAnyAttribute *, XmlSchemaAnyAttribute_Intersection, (XmlSchemaAnyAttribute * o1, XmlSchemaAnyAttribute * o2, bool v1Compat, MethodInfo * method));
DO_APP_FUNC(0x01CA1180, XmlSchemaAnyAttribute *, XmlSchemaAnyAttribute_Union, (XmlSchemaAnyAttribute * o1, XmlSchemaAnyAttribute * o2, bool v1Compat, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSchemaAnyAttribute__ctor, (XmlSchemaAnyAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9C0, void, XmlSchemaAppInfo_set_Source, (XmlSchemaAppInfo * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, XmlNode__Array *, XmlSchemaAppInfo_get_Markup, (XmlSchemaAppInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9E0, void, XmlSchemaAppInfo_set_Markup, (XmlSchemaAppInfo * __this, XmlNode__Array * value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSchemaAppInfo__ctor, (XmlSchemaAppInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, String *, XmlSchemaAttribute_get_DefaultValue, (XmlSchemaAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, XmlSchemaAttribute_set_DefaultValue, (XmlSchemaAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, String *, XmlSchemaAttribute_get_FixedValue, (XmlSchemaAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB70, void, XmlSchemaAttribute_set_FixedValue, (XmlSchemaAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x003FF610, XmlSchemaForm__Enum, XmlSchemaAttribute_get_Form, (XmlSchemaAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x00F083C0, void, XmlSchemaAttribute_set_Form, (XmlSchemaAttribute * __this, XmlSchemaForm__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, String *, XmlSchemaAttribute_get_Name, (XmlSchemaAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB90, void, XmlSchemaAttribute_set_Name, (XmlSchemaAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, XmlQualifiedName *, XmlSchemaAttribute_get_RefName, (XmlSchemaAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA1330, void, XmlSchemaAttribute_set_RefName, (XmlSchemaAttribute * __this, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x002FBBE0, XmlQualifiedName *, XmlSchemaAttribute_get_SchemaTypeName, (XmlSchemaAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA1420, void, XmlSchemaAttribute_set_SchemaTypeName, (XmlSchemaAttribute * __this, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x002FBC20, XmlSchemaSimpleType *, XmlSchemaAttribute_get_SchemaType, (XmlSchemaAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC30, void, XmlSchemaAttribute_set_SchemaType, (XmlSchemaAttribute * __this, XmlSchemaSimpleType * value, MethodInfo * method));
DO_APP_FUNC(0x00608710, XmlSchemaUse__Enum, XmlSchemaAttribute_get_Use, (XmlSchemaAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x00608720, void, XmlSchemaAttribute_set_Use, (XmlSchemaAttribute * __this, XmlSchemaUse__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FBC00, XmlQualifiedName *, XmlSchemaAttribute_get_QualifiedName, (XmlSchemaAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC40, XmlSchemaSimpleType *, XmlSchemaAttribute_get_AttributeSchemaType, (XmlSchemaAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA1510, XmlSchemaDatatype *, XmlSchemaAttribute_get_Datatype, (XmlSchemaAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC10, void, XmlSchemaAttribute_SetQualifiedName, (XmlSchemaAttribute * __this, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x002FBC50, void, XmlSchemaAttribute_SetAttributeType, (XmlSchemaAttribute * __this, XmlSchemaSimpleType * value, MethodInfo * method));
DO_APP_FUNC(0x002FBC60, SchemaAttDef *, XmlSchemaAttribute_get_AttDef, (XmlSchemaAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC70, void, XmlSchemaAttribute_set_AttDef, (XmlSchemaAttribute * __this, SchemaAttDef * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, String *, XmlSchemaAttribute_get_NameAttribute, (XmlSchemaAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB90, void, XmlSchemaAttribute_set_NameAttribute, (XmlSchemaAttribute * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01CA1530, XmlSchemaObject *, XmlSchemaAttribute_Clone, (XmlSchemaAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA16E0, void, XmlSchemaAttribute__ctor, (XmlSchemaAttribute * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, String *, XmlSchemaAttributeGroup_get_Name, (XmlSchemaAttributeGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, XmlSchemaAttributeGroup_set_Name, (XmlSchemaAttributeGroup * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, XmlSchemaObjectCollection *, XmlSchemaAttributeGroup_get_Attributes, (XmlSchemaAttributeGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, XmlSchemaAnyAttribute *, XmlSchemaAttributeGroup_get_AnyAttribute, (XmlSchemaAttributeGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB90, void, XmlSchemaAttributeGroup_set_AnyAttribute, (XmlSchemaAttributeGroup * __this, XmlSchemaAnyAttribute * value, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, XmlQualifiedName *, XmlSchemaAttributeGroup_get_QualifiedName, (XmlSchemaAttributeGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA17C0, XmlSchemaObjectTable *, XmlSchemaAttributeGroup_get_AttributeUses, (XmlSchemaAttributeGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC00, XmlSchemaAnyAttribute *, XmlSchemaAttributeGroup_get_AttributeWildcard, (XmlSchemaAttributeGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC10, void, XmlSchemaAttributeGroup_set_AttributeWildcard, (XmlSchemaAttributeGroup * __this, XmlSchemaAnyAttribute * value, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, XmlSchemaAttributeGroup *, XmlSchemaAttributeGroup_get_RedefinedAttributeGroup, (XmlSchemaAttributeGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, XmlSchemaAttributeGroup *, XmlSchemaAttributeGroup_get_Redefined, (XmlSchemaAttributeGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBD0, void, XmlSchemaAttributeGroup_set_Redefined, (XmlSchemaAttributeGroup * __this, XmlSchemaAttributeGroup * value, MethodInfo * method));
DO_APP_FUNC(0x00989BF0, int32_t, XmlSchemaAttributeGroup_get_SelfReferenceCount, (XmlSchemaAttributeGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x009C9740, void, XmlSchemaAttributeGroup_set_SelfReferenceCount, (XmlSchemaAttributeGroup * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, String *, XmlSchemaAttributeGroup_get_NameAttribute, (XmlSchemaAttributeGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, XmlSchemaAttributeGroup_set_NameAttribute, (XmlSchemaAttributeGroup * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBBB0, void, XmlSchemaAttributeGroup_SetQualifiedName, (XmlSchemaAttributeGroup * __this, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x01CA1920, XmlSchemaObject *, XmlSchemaAttributeGroup_Clone, (XmlSchemaAttributeGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA1AF0, void, XmlSchemaAttributeGroup__ctor, (XmlSchemaAttributeGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, XmlQualifiedName *, XmlSchemaAttributeGroupRef_get_RefName, (XmlSchemaAttributeGroupRef * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA1C70, void, XmlSchemaAttributeGroupRef_set_RefName, (XmlSchemaAttributeGroupRef * __this, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x01CA1D60, void, XmlSchemaAttributeGroupRef__ctor, (XmlSchemaAttributeGroupRef * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBE0, XmlSchemaObjectCollection *, XmlSchemaChoice_get_Items, (XmlSchemaChoice * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA1E10, bool, XmlSchemaChoice_get_IsEmpty, (XmlSchemaChoice * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBF0, void, XmlSchemaChoice_SetItems, (XmlSchemaChoice * __this, XmlSchemaObjectCollection * newItems, MethodInfo * method));
DO_APP_FUNC(0x01CA1E20, void, XmlSchemaChoice__ctor, (XmlSchemaChoice * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA1F70, void, XmlSchemaCollection__ctor, (XmlSchemaCollection * __this, XmlNameTable * nametable, MethodInfo * method));
DO_APP_FUNC(0x016FBBA0, int32_t, XmlSchemaCollection_get_Count, (XmlSchemaCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB930, XmlNameTable *, XmlSchemaCollection_get_NameTable, (XmlSchemaCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9E0, void, XmlSchemaCollection_set_XmlResolver, (XmlSchemaCollection * __this, XmlResolver * value, MethodInfo * method));
DO_APP_FUNC(0x01CA21F0, XmlSchema *, XmlSchemaCollection_get_Item, (XmlSchemaCollection * __this, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01CA22E0, IEnumerator *, XmlSchemaCollection_System_Collections_IEnumerable_GetEnumerator, (XmlSchemaCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA2450, XmlSchemaCollectionEnumerator *, XmlSchemaCollection_GetEnumerator, (XmlSchemaCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA25C0, void, XmlSchemaCollection_System_Collections_ICollection_CopyTo, (XmlSchemaCollection * __this, Array * array, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlSchemaCollection_System_Collections_ICollection_get_IsSynchronized, (XmlSchemaCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x004C50A0, Object *, XmlSchemaCollection_System_Collections_ICollection_get_SyncRoot, (XmlSchemaCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x016FBBA0, int32_t, XmlSchemaCollection_System_Collections_ICollection_get_Count, (XmlSchemaCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA2750, SchemaInfo *, XmlSchemaCollection_GetSchemaInfo, (XmlSchemaCollection * __this, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01CA2840, SchemaNames *, XmlSchemaCollection_GetSchemaNames, (XmlSchemaCollection * __this, XmlNameTable * nt, MethodInfo * method));
DO_APP_FUNC(0x01CA2A80, XmlSchema *, XmlSchemaCollection_Add, (XmlSchemaCollection * __this, String * ns, SchemaInfo * schemaInfo, XmlSchema * schema, bool compile, MethodInfo * method));
DO_APP_FUNC(0x01CA2AB0, XmlSchema *, XmlSchemaCollection_Add_1, (XmlSchemaCollection * __this, String * ns, SchemaInfo * schemaInfo, XmlSchema * schema, bool compile, XmlResolver * resolver, MethodInfo * method));
DO_APP_FUNC(0x01CA2D00, void, XmlSchemaCollection_Add_2, (XmlSchemaCollection * __this, String * ns, XmlSchemaCollectionNode * node, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, ValidationEventHandler *, XmlSchemaCollection_get_EventHandler, (XmlSchemaCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9C0, void, XmlSchemaCollection_set_EventHandler, (XmlSchemaCollection * __this, ValidationEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, XmlSchemaCollectionNode_set_NamespaceURI, (XmlSchemaCollectionNode * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB930, SchemaInfo *, XmlSchemaCollectionNode_get_SchemaInfo, (XmlSchemaCollectionNode * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, XmlSchemaCollectionNode_set_SchemaInfo, (XmlSchemaCollectionNode * __this, SchemaInfo * value, MethodInfo * method));
DO_APP_FUNC(0x002FB950, XmlSchema *, XmlSchemaCollectionNode_get_Schema, (XmlSchemaCollectionNode * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, XmlSchemaCollectionNode_set_Schema, (XmlSchemaCollectionNode * __this, XmlSchema * value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSchemaCollectionNode__ctor, (XmlSchemaCollectionNode * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA2E60, void, XmlSchemaCollectionEnumerator__ctor, (XmlSchemaCollectionEnumerator * __this, Hashtable * collection, MethodInfo * method));
DO_APP_FUNC(0x01CA2EA0, void, XmlSchemaCollectionEnumerator_System_Collections_IEnumerator_Reset, (XmlSchemaCollectionEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA2F30, bool, XmlSchemaCollectionEnumerator_System_Collections_IEnumerator_MoveNext, (XmlSchemaCollectionEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA2FC0, bool, XmlSchemaCollectionEnumerator_MoveNext, (XmlSchemaCollectionEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA3050, Object *, XmlSchemaCollectionEnumerator_System_Collections_IEnumerator_get_Current, (XmlSchemaCollectionEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA3060, XmlSchema *, XmlSchemaCollectionEnumerator_get_Current, (XmlSchemaCollectionEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA3130, XmlSchemaCollectionNode *, XmlSchemaCollectionEnumerator_get_CurrentNode, (XmlSchemaCollectionEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x00B80D80, void, XmlSchemaCompilationSettings__ctor, (XmlSchemaCompilationSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, XmlSchemaCompilationSettings_get_EnableUpaCheck, (XmlSchemaCompilationSettings * __this, MethodInfo * method));
DO_APP_FUNC(0x00585310, bool, XmlSchemaComplexContent_get_IsMixed, (XmlSchemaComplexContent * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA31F0, void, XmlSchemaComplexContent_set_IsMixed, (XmlSchemaComplexContent * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, XmlSchemaContent *, XmlSchemaComplexContent_get_Content, (XmlSchemaComplexContent * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, XmlSchemaComplexContent_set_Content, (XmlSchemaComplexContent * __this, XmlSchemaContent * value, MethodInfo * method));
DO_APP_FUNC(0x00DFE800, bool, XmlSchemaComplexContent_get_HasMixedAttribute, (XmlSchemaComplexContent * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSchemaComplexContent__ctor, (XmlSchemaComplexContent * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, XmlQualifiedName *, XmlSchemaComplexContentExtension_get_BaseTypeName, (XmlSchemaComplexContentExtension * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA3200, void, XmlSchemaComplexContentExtension_set_BaseTypeName, (XmlSchemaComplexContentExtension * __this, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, XmlSchemaParticle *, XmlSchemaComplexContentExtension_get_Particle, (XmlSchemaComplexContentExtension * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, XmlSchemaComplexContentExtension_set_Particle, (XmlSchemaComplexContentExtension * __this, XmlSchemaParticle * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, XmlSchemaObjectCollection *, XmlSchemaComplexContentExtension_get_Attributes, (XmlSchemaComplexContentExtension * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, XmlSchemaAnyAttribute *, XmlSchemaComplexContentExtension_get_AnyAttribute, (XmlSchemaComplexContentExtension * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB90, void, XmlSchemaComplexContentExtension_set_AnyAttribute, (XmlSchemaComplexContentExtension * __this, XmlSchemaAnyAttribute * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB70, void, XmlSchemaComplexContentExtension_SetAttributes, (XmlSchemaComplexContentExtension * __this, XmlSchemaObjectCollection * newAttributes, MethodInfo * method));
DO_APP_FUNC(0x01CA32F0, void, XmlSchemaComplexContentExtension__ctor, (XmlSchemaComplexContentExtension * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, XmlQualifiedName *, XmlSchemaComplexContentRestriction_get_BaseTypeName, (XmlSchemaComplexContentRestriction * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA3470, void, XmlSchemaComplexContentRestriction_set_BaseTypeName, (XmlSchemaComplexContentRestriction * __this, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, XmlSchemaParticle *, XmlSchemaComplexContentRestriction_get_Particle, (XmlSchemaComplexContentRestriction * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, XmlSchemaComplexContentRestriction_set_Particle, (XmlSchemaComplexContentRestriction * __this, XmlSchemaParticle * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, XmlSchemaObjectCollection *, XmlSchemaComplexContentRestriction_get_Attributes, (XmlSchemaComplexContentRestriction * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, XmlSchemaAnyAttribute *, XmlSchemaComplexContentRestriction_get_AnyAttribute, (XmlSchemaComplexContentRestriction * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB90, void, XmlSchemaComplexContentRestriction_set_AnyAttribute, (XmlSchemaComplexContentRestriction * __this, XmlSchemaAnyAttribute * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB70, void, XmlSchemaComplexContentRestriction_SetAttributes, (XmlSchemaComplexContentRestriction * __this, XmlSchemaObjectCollection * newAttributes, MethodInfo * method));
DO_APP_FUNC(0x01CA3560, void, XmlSchemaComplexContentRestriction__ctor, (XmlSchemaComplexContentRestriction * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA36E0, void, XmlSchemaComplexType__cctor, (MethodInfo * method));
DO_APP_FUNC(0x01CA3AE0, XmlSchemaComplexType *, XmlSchemaComplexType_CreateAnyType, (XmlSchemaContentProcessing__Enum processContents, MethodInfo * method));
DO_APP_FUNC(0x01CA41D0, void, XmlSchemaComplexType__ctor, (XmlSchemaComplexType * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA4290, XmlSchemaComplexType *, XmlSchemaComplexType_get_AnyType, (MethodInfo * method));
DO_APP_FUNC(0x01CA4330, XmlSchemaComplexType *, XmlSchemaComplexType_get_UntypedAnyType, (MethodInfo * method));
DO_APP_FUNC(0x01CA43D0, ContentValidator *, XmlSchemaComplexType_get_AnyTypeContentValidator, (MethodInfo * method));
DO_APP_FUNC(0x01CA44A0, bool, XmlSchemaComplexType_get_IsAbstract, (XmlSchemaComplexType * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA44B0, void, XmlSchemaComplexType_set_IsAbstract, (XmlSchemaComplexType * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00736620, XmlSchemaDerivationMethod__Enum, XmlSchemaComplexType_get_Block, (XmlSchemaComplexType * __this, MethodInfo * method));
DO_APP_FUNC(0x006E35E0, void, XmlSchemaComplexType_set_Block, (XmlSchemaComplexType * __this, XmlSchemaDerivationMethod__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01CA44E0, bool, XmlSchemaComplexType_get_IsMixed, (XmlSchemaComplexType * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA44F0, void, XmlSchemaComplexType_set_IsMixed, (XmlSchemaComplexType * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FBC80, XmlSchemaContentModel *, XmlSchemaComplexType_get_ContentModel, (XmlSchemaComplexType * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC90, void, XmlSchemaComplexType_set_ContentModel, (XmlSchemaComplexType * __this, XmlSchemaContentModel * value, MethodInfo * method));
DO_APP_FUNC(0x002FBCA0, XmlSchemaParticle *, XmlSchemaComplexType_get_Particle, (XmlSchemaComplexType * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBCB0, void, XmlSchemaComplexType_set_Particle, (XmlSchemaComplexType * __this, XmlSchemaParticle * value, MethodInfo * method));
DO_APP_FUNC(0x01CA4520, XmlSchemaObjectCollection *, XmlSchemaComplexType_get_Attributes, (XmlSchemaComplexType * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBCE0, XmlSchemaAnyAttribute *, XmlSchemaComplexType_get_AnyAttribute, (XmlSchemaComplexType * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBCF0, void, XmlSchemaComplexType_set_AnyAttribute, (XmlSchemaComplexType * __this, XmlSchemaAnyAttribute * value, MethodInfo * method));
DO_APP_FUNC(0x003FC380, XmlSchemaContentType__Enum, XmlSchemaComplexType_get_ContentType, (XmlSchemaComplexType * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBD00, XmlSchemaParticle *, XmlSchemaComplexType_get_ContentTypeParticle, (XmlSchemaComplexType * __this, MethodInfo * method));
DO_APP_FUNC(0x008468B0, XmlSchemaDerivationMethod__Enum, XmlSchemaComplexType_get_BlockResolved, (XmlSchemaComplexType * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA4680, XmlSchemaObjectTable *, XmlSchemaComplexType_get_AttributeUses, (XmlSchemaComplexType * __this, MethodInfo * method));
DO_APP_FUNC(0x00660430, XmlSchemaAnyAttribute *, XmlSchemaComplexType_get_AttributeWildcard, (XmlSchemaComplexType * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA47E0, XmlSchemaObjectTable *, XmlSchemaComplexType_get_LocalElements, (XmlSchemaComplexType * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBD10, void, XmlSchemaComplexType_SetContentTypeParticle, (XmlSchemaComplexType * __this, XmlSchemaParticle * value, MethodInfo * method));
DO_APP_FUNC(0x008468C0, void, XmlSchemaComplexType_SetBlockResolved, (XmlSchemaComplexType * __this, XmlSchemaDerivationMethod__Enum value, MethodInfo * method));
DO_APP_FUNC(0x00660440, void, XmlSchemaComplexType_SetAttributeWildcard, (XmlSchemaComplexType * __this, XmlSchemaAnyAttribute * value, MethodInfo * method));
DO_APP_FUNC(0x01CA4940, void, XmlSchemaComplexType_set_HasWildCard, (XmlSchemaComplexType * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FBCD0, void, XmlSchemaComplexType_SetAttributes, (XmlSchemaComplexType * __this, XmlSchemaObjectCollection * newAttributes, MethodInfo * method));
DO_APP_FUNC(0x01CA4970, bool, XmlSchemaComplexType_ContainsIdAttribute, (XmlSchemaComplexType * __this, bool findAll, MethodInfo * method));
DO_APP_FUNC(0x01CA4C10, XmlSchemaObject *, XmlSchemaComplexType_Clone, (XmlSchemaComplexType * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA4C20, XmlSchemaObject *, XmlSchemaComplexType_Clone_1, (XmlSchemaComplexType * __this, XmlSchema * parentSchema, MethodInfo * method));
DO_APP_FUNC(0x01CA5430, void, XmlSchemaComplexType_ClearCompiledState, (XmlSchemaComplexType * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA5510, XmlSchemaObjectCollection *, XmlSchemaComplexType_CloneAttributes, (XmlSchemaObjectCollection * attributes, MethodInfo * method));
DO_APP_FUNC(0x01CA57B0, XmlSchemaObjectCollection *, XmlSchemaComplexType_CloneGroupBaseParticles, (XmlSchemaObjectCollection * groupBaseParticles, XmlSchema * parentSchema, MethodInfo * method));
DO_APP_FUNC(0x01CA5960, XmlSchemaParticle *, XmlSchemaComplexType_CloneParticle, (XmlSchemaParticle * particle, XmlSchema * parentSchema, MethodInfo * method));
DO_APP_FUNC(0x01CA5CA0, XmlSchemaForm__Enum, XmlSchemaComplexType_GetResolvedElementForm, (XmlSchema * parentSchema, XmlSchemaElement * element, MethodInfo * method));
DO_APP_FUNC(0x01CA5CD0, bool, XmlSchemaComplexType_HasParticleRef, (XmlSchemaParticle * particle, XmlSchema * parentSchema, MethodInfo * method));
DO_APP_FUNC(0x01CA5F90, bool, XmlSchemaComplexType_HasAttributeQNameRef, (XmlSchemaObjectCollection * attributes, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSchemaContent__ctor, (XmlSchemaContent * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSchemaContentModel__ctor, (XmlSchemaContentModel * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, XmlSchemaDatatypeVariety__Enum, XmlSchemaDatatype_get_Variety, (XmlSchemaDatatype * __this, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, XmlTypeCode__Enum, XmlSchemaDatatype_get_TypeCode, (XmlSchemaDatatype * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, XmlSchemaDatatype_IsDerivedFrom, (XmlSchemaDatatype * __this, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x01CA6130, String *, XmlSchemaDatatype_get_TypeCodeString, (XmlSchemaDatatype * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA62A0, String *, XmlSchemaDatatype_TypeCodeToString, (XmlSchemaDatatype * __this, XmlTypeCode__Enum typeCode, MethodInfo * method));
DO_APP_FUNC(0x01CA6670, String *, XmlSchemaDatatype_ConcatenatedToString, (Object * value, MethodInfo * method));
DO_APP_FUNC(0x01CA6B60, XmlSchemaDatatype *, XmlSchemaDatatype_FromXmlTokenizedType, (XmlTokenizedType__Enum token, MethodInfo * method));
DO_APP_FUNC(0x01CA6CC0, XmlSchemaDatatype *, XmlSchemaDatatype_FromXmlTokenizedTypeXsd, (XmlTokenizedType__Enum token, MethodInfo * method));
DO_APP_FUNC(0x01CA6E20, XmlSchemaDatatype *, XmlSchemaDatatype_FromXdrName, (String * name, MethodInfo * method));
DO_APP_FUNC(0x01CA6FD0, XmlSchemaDatatype *, XmlSchemaDatatype_DeriveByUnion, (XmlSchemaSimpleType__Array * types, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x01CA7080, String *, XmlSchemaDatatype_XdrCanonizeUri, (String * uri, XmlNameTable * nameTable, SchemaNames * schemaNames, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSchemaDatatype__ctor, (XmlSchemaDatatype * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9C0, void, XmlSchemaDocumentation_set_Source, (XmlSchemaDocumentation * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01CA73C0, void, XmlSchemaDocumentation_set_Language, (XmlSchemaDocumentation * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBA00, void, XmlSchemaDocumentation_set_Markup, (XmlSchemaDocumentation * __this, XmlNode__Array * value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSchemaDocumentation__ctor, (XmlSchemaDocumentation * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA74E0, void, XmlSchemaDocumentation__cctor, (MethodInfo * method));
DO_APP_FUNC(0x005D8A80, bool, XmlSchemaElement_get_IsAbstract, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA7670, void, XmlSchemaElement_set_IsAbstract, (XmlSchemaElement * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00C03C70, XmlSchemaDerivationMethod__Enum, XmlSchemaElement_get_Block, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x00C03C80, void, XmlSchemaElement_set_Block, (XmlSchemaElement * __this, XmlSchemaDerivationMethod__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FBC40, String *, XmlSchemaElement_get_DefaultValue, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC50, void, XmlSchemaElement_set_DefaultValue, (XmlSchemaElement * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x00653FB0, XmlSchemaDerivationMethod__Enum, XmlSchemaElement_get_Final, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x00881060, void, XmlSchemaElement_set_Final, (XmlSchemaElement * __this, XmlSchemaDerivationMethod__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FBC60, String *, XmlSchemaElement_get_FixedValue, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC70, void, XmlSchemaElement_set_FixedValue, (XmlSchemaElement * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x00989BF0, XmlSchemaForm__Enum, XmlSchemaElement_get_Form, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x009C9740, void, XmlSchemaElement_set_Form, (XmlSchemaElement * __this, XmlSchemaForm__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FBC80, String *, XmlSchemaElement_get_Name, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC90, void, XmlSchemaElement_set_Name, (XmlSchemaElement * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x00B8A120, bool, XmlSchemaElement_get_IsNillable, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA7680, void, XmlSchemaElement_set_IsNillable, (XmlSchemaElement * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01CA7690, bool, XmlSchemaElement_get_HasNillableAttribute, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x00615270, bool, XmlSchemaElement_get_HasAbstractAttribute, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBCA0, XmlQualifiedName *, XmlSchemaElement_get_RefName, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA76A0, void, XmlSchemaElement_set_RefName, (XmlSchemaElement * __this, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x002FBCC0, XmlQualifiedName *, XmlSchemaElement_get_SubstitutionGroup, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA7790, void, XmlSchemaElement_set_SubstitutionGroup, (XmlSchemaElement * __this, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x002FBCE0, XmlQualifiedName *, XmlSchemaElement_get_SchemaTypeName, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA7880, void, XmlSchemaElement_set_SchemaTypeName, (XmlSchemaElement * __this, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x002FBD00, XmlSchemaType *, XmlSchemaElement_get_SchemaType, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBD10, void, XmlSchemaElement_set_SchemaType, (XmlSchemaElement * __this, XmlSchemaType * value, MethodInfo * method));
DO_APP_FUNC(0x01CA7970, XmlSchemaObjectCollection *, XmlSchemaElement_get_Constraints, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBD20, XmlQualifiedName *, XmlSchemaElement_get_QualifiedName, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBD40, XmlSchemaType *, XmlSchemaElement_get_ElementSchemaType, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFBD0, XmlSchemaDerivationMethod__Enum, XmlSchemaElement_get_BlockResolved, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x00413180, XmlSchemaDerivationMethod__Enum, XmlSchemaElement_get_FinalResolved, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBD30, void, XmlSchemaElement_SetQualifiedName, (XmlSchemaElement * __this, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x002FBD50, void, XmlSchemaElement_SetElementType, (XmlSchemaElement * __this, XmlSchemaType * value, MethodInfo * method));
DO_APP_FUNC(0x00E6FE10, void, XmlSchemaElement_SetBlockResolved, (XmlSchemaElement * __this, XmlSchemaDerivationMethod__Enum value, MethodInfo * method));
DO_APP_FUNC(0x00413190, void, XmlSchemaElement_SetFinalResolved, (XmlSchemaElement * __this, XmlSchemaDerivationMethod__Enum value, MethodInfo * method));
DO_APP_FUNC(0x01CA7AD0, bool, XmlSchemaElement_get_HasConstraints, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x0085D750, bool, XmlSchemaElement_get_IsLocalTypeDerivationChecked, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x003FFE00, void, XmlSchemaElement_set_IsLocalTypeDerivationChecked, (XmlSchemaElement * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x005B0220, SchemaElementDecl *, XmlSchemaElement_get_ElementDecl, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x00A2A740, void, XmlSchemaElement_set_ElementDecl, (XmlSchemaElement * __this, SchemaElementDecl * value, MethodInfo * method));
DO_APP_FUNC(0x002FBC80, String *, XmlSchemaElement_get_NameAttribute, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC90, void, XmlSchemaElement_set_NameAttribute, (XmlSchemaElement * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01CA7B20, String *, XmlSchemaElement_get_NameString, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA7B50, XmlSchemaObject *, XmlSchemaElement_Clone, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA7B60, XmlSchemaObject *, XmlSchemaElement_Clone_1, (XmlSchemaElement * __this, XmlSchema * parentSchema, MethodInfo * method));
DO_APP_FUNC(0x01CA7E20, void, XmlSchemaElement__ctor, (XmlSchemaElement * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA7F70, void, XmlSchemaException__ctor, (XmlSchemaException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x01CA8360, void, XmlSchemaException_GetObjectData, (XmlSchemaException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0191EC90, void, XmlSchemaException__ctor_1, (XmlSchemaException * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA84B0, void, XmlSchemaException__ctor_2, (XmlSchemaException * __this, String * message, MethodInfo * method));
DO_APP_FUNC(0x01CA84D0, void, XmlSchemaException__ctor_3, (XmlSchemaException * __this, String * message, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x01CA84F0, void, XmlSchemaException__ctor_4, (XmlSchemaException * __this, String * message, Exception * innerException, int32_t lineNumber, int32_t linePosition, MethodInfo * method));
DO_APP_FUNC(0x01CA8680, void, XmlSchemaException__ctor_5, (XmlSchemaException * __this, String * res, String__Array * args, MethodInfo * method));
DO_APP_FUNC(0x01CA8700, void, XmlSchemaException__ctor_6, (XmlSchemaException * __this, String * res, String * arg, MethodInfo * method));
DO_APP_FUNC(0x01CA8860, void, XmlSchemaException__ctor_7, (XmlSchemaException * __this, String * res, String * arg, String * sourceUri, int32_t lineNumber, int32_t linePosition, MethodInfo * method));
DO_APP_FUNC(0x01CA89D0, void, XmlSchemaException__ctor_8, (XmlSchemaException * __this, String * res, String * sourceUri, int32_t lineNumber, int32_t linePosition, MethodInfo * method));
DO_APP_FUNC(0x0191EE30, void, XmlSchemaException__ctor_9, (XmlSchemaException * __this, String * res, String__Array * args, String * sourceUri, int32_t lineNumber, int32_t linePosition, MethodInfo * method));
DO_APP_FUNC(0x01CA8A60, void, XmlSchemaException__ctor_10, (XmlSchemaException * __this, String * res, XmlSchemaObject * source, MethodInfo * method));
DO_APP_FUNC(0x01CA8A80, void, XmlSchemaException__ctor_11, (XmlSchemaException * __this, String * res, String * arg, XmlSchemaObject * source, MethodInfo * method));
DO_APP_FUNC(0x01CA8BA0, void, XmlSchemaException__ctor_12, (XmlSchemaException * __this, String * res, String__Array * args, XmlSchemaObject * source, MethodInfo * method));
DO_APP_FUNC(0x01CA8C60, void, XmlSchemaException__ctor_13, (XmlSchemaException * __this, String * res, String__Array * args, Exception * innerException, String * sourceUri, int32_t lineNumber, int32_t linePosition, XmlSchemaObject * source, MethodInfo * method));
DO_APP_FUNC(0x01CA8D00, String *, XmlSchemaException_CreateMessage, (String * res, String__Array * args, MethodInfo * method));
DO_APP_FUNC(0x002FBC20, String *, XmlSchemaException_get_GetRes, (XmlSchemaException * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC40, String__Array *, XmlSchemaException_get_Args, (XmlSchemaException * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC60, String *, XmlSchemaException_get_SourceUri, (XmlSchemaException * __this, MethodInfo * method));
DO_APP_FUNC(0x010F4B70, int32_t, XmlSchemaException_get_LineNumber, (XmlSchemaException * __this, MethodInfo * method));
DO_APP_FUNC(0x0057A5A0, int32_t, XmlSchemaException_get_LinePosition, (XmlSchemaException * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBCA0, XmlSchemaObject *, XmlSchemaException_get_SourceSchemaObject, (XmlSchemaException * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA8DC0, void, XmlSchemaException_SetSource, (XmlSchemaException * __this, String * sourceUri, int32_t lineNumber, int32_t linePosition, MethodInfo * method));
DO_APP_FUNC(0x002FBCB0, void, XmlSchemaException_SetSchemaObject, (XmlSchemaException * __this, XmlSchemaObject * source, MethodInfo * method));
DO_APP_FUNC(0x01CA8DE0, void, XmlSchemaException_SetSource_1, (XmlSchemaException * __this, XmlSchemaObject * source, MethodInfo * method));
DO_APP_FUNC(0x01CA8E20, String *, XmlSchemaException_get_Message, (XmlSchemaException * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, String *, XmlSchemaExternal_get_SchemaLocation, (XmlSchemaExternal * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9C0, void, XmlSchemaExternal_set_SchemaLocation, (XmlSchemaExternal * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, XmlSchema *, XmlSchemaExternal_get_Schema, (XmlSchemaExternal * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBA00, void, XmlSchemaExternal_set_Schema, (XmlSchemaExternal * __this, XmlSchema * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, String *, XmlSchemaExternal_get_Id, (XmlSchemaExternal * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, XmlSchemaExternal_set_Id, (XmlSchemaExternal * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, Uri *, XmlSchemaExternal_get_BaseUri, (XmlSchemaExternal * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9E0, void, XmlSchemaExternal_set_BaseUri, (XmlSchemaExternal * __this, Uri * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, String *, XmlSchemaExternal_get_IdAttribute, (XmlSchemaExternal * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, XmlSchemaExternal_set_IdAttribute, (XmlSchemaExternal * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB70, void, XmlSchemaExternal_SetUnhandledAttributes, (XmlSchemaExternal * __this, XmlAttribute__Array * moreAttributes, MethodInfo * method));
DO_APP_FUNC(0x002FD750, Compositor__Enum, XmlSchemaExternal_get_Compositor, (XmlSchemaExternal * __this, MethodInfo * method));
DO_APP_FUNC(0x002FD760, void, XmlSchemaExternal_set_Compositor, (XmlSchemaExternal * __this, Compositor__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSchemaExternal__ctor, (XmlSchemaExternal * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, String *, XmlSchemaFacet_get_Value, (XmlSchemaFacet * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, XmlSchemaFacet_set_Value, (XmlSchemaFacet * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x00585310, bool, XmlSchemaFacet_get_IsFixed, (XmlSchemaFacet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA8E40, void, XmlSchemaFacet_set_IsFixed, (XmlSchemaFacet * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x003FF2B0, FacetType__Enum, XmlSchemaFacet_get_FacetType, (XmlSchemaFacet * __this, MethodInfo * method));
DO_APP_FUNC(0x003FF2C0, void, XmlSchemaFacet_set_FacetType, (XmlSchemaFacet * __this, FacetType__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSchemaFacet__ctor, (XmlSchemaFacet * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSchemaNumericFacet__ctor, (XmlSchemaNumericFacet * __this, MethodInfo * method));
DO_APP_FUNC(0x01290230, void, XmlSchemaLengthFacet__ctor, (XmlSchemaLengthFacet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB6560, void, XmlSchemaMinLengthFacet__ctor, (XmlSchemaMinLengthFacet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB6530, void, XmlSchemaMaxLengthFacet__ctor, (XmlSchemaMaxLengthFacet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CBA390, void, XmlSchemaPatternFacet__ctor, (XmlSchemaPatternFacet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA7F60, void, XmlSchemaEnumerationFacet__ctor, (XmlSchemaEnumerationFacet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB6540, void, XmlSchemaMinExclusiveFacet__ctor, (XmlSchemaMinExclusiveFacet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB6550, void, XmlSchemaMinInclusiveFacet__ctor, (XmlSchemaMinInclusiveFacet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB6510, void, XmlSchemaMaxExclusiveFacet__ctor, (XmlSchemaMaxExclusiveFacet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB6520, void, XmlSchemaMaxInclusiveFacet__ctor, (XmlSchemaMaxInclusiveFacet * __this, MethodInfo * method));
DO_APP_FUNC(0x0191E330, void, XmlSchemaTotalDigitsFacet__ctor, (XmlSchemaTotalDigitsFacet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA8F50, void, XmlSchemaFractionDigitsFacet__ctor, (XmlSchemaFractionDigitsFacet * __this, MethodInfo * method));
DO_APP_FUNC(0x0192ED70, void, XmlSchemaWhiteSpaceFacet__ctor, (XmlSchemaWhiteSpaceFacet * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, String *, XmlSchemaGroup_get_Name, (XmlSchemaGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, XmlSchemaGroup_set_Name, (XmlSchemaGroup * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, XmlSchemaGroupBase *, XmlSchemaGroup_get_Particle, (XmlSchemaGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB70, void, XmlSchemaGroup_set_Particle, (XmlSchemaGroup * __this, XmlSchemaGroupBase * value, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, XmlQualifiedName *, XmlSchemaGroup_get_QualifiedName, (XmlSchemaGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, XmlSchemaParticle *, XmlSchemaGroup_get_CanonicalParticle, (XmlSchemaGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB90, void, XmlSchemaGroup_set_CanonicalParticle, (XmlSchemaGroup * __this, XmlSchemaParticle * value, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, XmlSchemaGroup *, XmlSchemaGroup_get_Redefined, (XmlSchemaGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBD0, void, XmlSchemaGroup_set_Redefined, (XmlSchemaGroup * __this, XmlSchemaGroup * value, MethodInfo * method));
DO_APP_FUNC(0x003FF8B0, int32_t, XmlSchemaGroup_get_SelfReferenceCount, (XmlSchemaGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x00B0E550, void, XmlSchemaGroup_set_SelfReferenceCount, (XmlSchemaGroup * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, String *, XmlSchemaGroup_get_NameAttribute, (XmlSchemaGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, XmlSchemaGroup_set_NameAttribute, (XmlSchemaGroup * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBBB0, void, XmlSchemaGroup_SetQualifiedName, (XmlSchemaGroup * __this, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x01CA8F60, XmlSchemaObject *, XmlSchemaGroup_Clone, (XmlSchemaGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA8F70, XmlSchemaObject *, XmlSchemaGroup_Clone_1, (XmlSchemaGroup * __this, XmlSchema * parentSchema, MethodInfo * method));
DO_APP_FUNC(0x01CA91D0, void, XmlSchemaGroup__ctor, (XmlSchemaGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA9280, void, XmlSchemaGroupBase__ctor, (XmlSchemaGroupBase * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBE0, XmlQualifiedName *, XmlSchemaGroupRef_get_RefName, (XmlSchemaGroupRef * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA9320, void, XmlSchemaGroupRef_set_RefName, (XmlSchemaGroupRef * __this, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x002FBC00, XmlSchemaGroupBase *, XmlSchemaGroupRef_get_Particle, (XmlSchemaGroupRef * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC10, void, XmlSchemaGroupRef_SetParticle, (XmlSchemaGroupRef * __this, XmlSchemaGroupBase * value, MethodInfo * method));
DO_APP_FUNC(0x002FBC20, XmlSchemaGroup *, XmlSchemaGroupRef_get_Redefined, (XmlSchemaGroupRef * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC30, void, XmlSchemaGroupRef_set_Redefined, (XmlSchemaGroupRef * __this, XmlSchemaGroup * value, MethodInfo * method));
DO_APP_FUNC(0x01CA9410, void, XmlSchemaGroupRef__ctor, (XmlSchemaGroupRef * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, String *, XmlSchemaIdentityConstraint_get_Name, (XmlSchemaIdentityConstraint * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, XmlSchemaIdentityConstraint_set_Name, (XmlSchemaIdentityConstraint * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, XmlSchemaXPath *, XmlSchemaIdentityConstraint_get_Selector, (XmlSchemaIdentityConstraint * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB70, void, XmlSchemaIdentityConstraint_set_Selector, (XmlSchemaIdentityConstraint * __this, XmlSchemaXPath * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, XmlSchemaObjectCollection *, XmlSchemaIdentityConstraint_get_Fields, (XmlSchemaIdentityConstraint * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, XmlQualifiedName *, XmlSchemaIdentityConstraint_get_QualifiedName, (XmlSchemaIdentityConstraint * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBB0, void, XmlSchemaIdentityConstraint_SetQualifiedName, (XmlSchemaIdentityConstraint * __this, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, CompiledIdentityConstraint *, XmlSchemaIdentityConstraint_get_CompiledConstraint, (XmlSchemaIdentityConstraint * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBD0, void, XmlSchemaIdentityConstraint_set_CompiledConstraint, (XmlSchemaIdentityConstraint * __this, CompiledIdentityConstraint * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, String *, XmlSchemaIdentityConstraint_get_NameAttribute, (XmlSchemaIdentityConstraint * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, XmlSchemaIdentityConstraint_set_NameAttribute, (XmlSchemaIdentityConstraint * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01CA94E0, void, XmlSchemaIdentityConstraint__ctor, (XmlSchemaIdentityConstraint * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, String *, XmlSchemaXPath_get_XPath, (XmlSchemaXPath * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, XmlSchemaXPath_set_XPath, (XmlSchemaXPath * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSchemaXPath__ctor, (XmlSchemaXPath * __this, MethodInfo * method));
DO_APP_FUNC(0x0191EC40, void, XmlSchemaUnique__ctor, (XmlSchemaUnique * __this, MethodInfo * method));
DO_APP_FUNC(0x0191EC40, void, XmlSchemaKey__ctor, (XmlSchemaKey * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBE0, XmlQualifiedName *, XmlSchemaKeyref_get_Refer, (XmlSchemaKeyref * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB6360, void, XmlSchemaKeyref_set_Refer, (XmlSchemaKeyref * __this, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x01CB6450, void, XmlSchemaKeyref__ctor, (XmlSchemaKeyref * __this, MethodInfo * method));
DO_APP_FUNC(0x01CA9660, void, XmlSchemaImport__ctor, (XmlSchemaImport * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, String *, XmlSchemaImport_get_Namespace, (XmlSchemaImport * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBB0, void, XmlSchemaImport_set_Namespace, (XmlSchemaImport * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBBD0, void, XmlSchemaImport_AddAnnotation, (XmlSchemaImport * __this, XmlSchemaAnnotation * annotation, MethodInfo * method));
DO_APP_FUNC(0x01CA9670, void, XmlSchemaInclude__ctor, (XmlSchemaInclude * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBB0, void, XmlSchemaInclude_AddAnnotation, (XmlSchemaInclude * __this, XmlSchemaAnnotation * annotation, MethodInfo * method));
DO_APP_FUNC(0x01CB6210, void, XmlSchemaInfo__ctor, (XmlSchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB6240, void, XmlSchemaInfo__ctor_1, (XmlSchemaInfo * __this, XmlSchemaValidity__Enum validity, MethodInfo * method));
DO_APP_FUNC(0x003FC7F0, XmlSchemaValidity__Enum, XmlSchemaInfo_get_Validity, (XmlSchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x00617D40, void, XmlSchemaInfo_set_Validity, (XmlSchemaInfo * __this, XmlSchemaValidity__Enum value, MethodInfo * method));
DO_APP_FUNC(0x0052B590, bool, XmlSchemaInfo_get_IsDefault, (XmlSchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0052C650, void, XmlSchemaInfo_set_IsDefault, (XmlSchemaInfo * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x00504D80, bool, XmlSchemaInfo_get_IsNil, (XmlSchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x0052C660, void, XmlSchemaInfo_set_IsNil, (XmlSchemaInfo * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x002FB990, XmlSchemaSimpleType *, XmlSchemaInfo_get_MemberType, (XmlSchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9A0, void, XmlSchemaInfo_set_MemberType, (XmlSchemaInfo * __this, XmlSchemaSimpleType * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, XmlSchemaType *, XmlSchemaInfo_get_SchemaType, (XmlSchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB6270, void, XmlSchemaInfo_set_SchemaType, (XmlSchemaInfo * __this, XmlSchemaType * value, MethodInfo * method));
DO_APP_FUNC(0x002FB930, XmlSchemaElement *, XmlSchemaInfo_get_SchemaElement, (XmlSchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB6290, void, XmlSchemaInfo_set_SchemaElement, (XmlSchemaInfo * __this, XmlSchemaElement * value, MethodInfo * method));
DO_APP_FUNC(0x002FB950, XmlSchemaAttribute *, XmlSchemaInfo_get_SchemaAttribute, (XmlSchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB62B0, void, XmlSchemaInfo_set_SchemaAttribute, (XmlSchemaInfo * __this, XmlSchemaAttribute * value, MethodInfo * method));
DO_APP_FUNC(0x003FC830, XmlSchemaContentType__Enum, XmlSchemaInfo_get_ContentType, (XmlSchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB62D0, XmlSchemaType *, XmlSchemaInfo_get_XmlType, (XmlSchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB62E0, bool, XmlSchemaInfo_get_HasDefaultValue, (XmlSchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB6320, bool, XmlSchemaInfo_get_IsUnionType, (XmlSchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB6210, void, XmlSchemaInfo_Clear, (XmlSchemaInfo * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, String *, XmlSchemaNotation_get_Name, (XmlSchemaNotation * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, XmlSchemaNotation_set_Name, (XmlSchemaNotation * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, String *, XmlSchemaNotation_get_Public, (XmlSchemaNotation * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB70, void, XmlSchemaNotation_set_Public, (XmlSchemaNotation * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, String *, XmlSchemaNotation_get_System, (XmlSchemaNotation * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB90, void, XmlSchemaNotation_set_System, (XmlSchemaNotation * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, XmlQualifiedName *, XmlSchemaNotation_get_QualifiedName, (XmlSchemaNotation * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBB0, void, XmlSchemaNotation_set_QualifiedName, (XmlSchemaNotation * __this, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, String *, XmlSchemaNotation_get_NameAttribute, (XmlSchemaNotation * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, XmlSchemaNotation_set_NameAttribute, (XmlSchemaNotation * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01CB6570, void, XmlSchemaNotation__ctor, (XmlSchemaNotation * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6D0, int32_t, XmlSchemaObject_get_LineNumber, (XmlSchemaObject * __this, MethodInfo * method));
DO_APP_FUNC(0x002FC6E0, void, XmlSchemaObject_set_LineNumber, (XmlSchemaObject * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x00CC59E0, int32_t, XmlSchemaObject_get_LinePosition, (XmlSchemaObject * __this, MethodInfo * method));
DO_APP_FUNC(0x00E39C80, void, XmlSchemaObject_set_LinePosition, (XmlSchemaObject * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x002FB930, String *, XmlSchemaObject_get_SourceUri, (XmlSchemaObject * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB940, void, XmlSchemaObject_set_SourceUri, (XmlSchemaObject * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB00, XmlSchemaObject *, XmlSchemaObject_get_Parent, (XmlSchemaObject * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB10, void, XmlSchemaObject_set_Parent, (XmlSchemaObject * __this, XmlSchemaObject * value, MethodInfo * method));
DO_APP_FUNC(0x01CB6620, XmlSerializerNamespaces *, XmlSchemaObject_get_Namespaces, (XmlSchemaObject * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB960, void, XmlSchemaObject_set_Namespaces, (XmlSchemaObject * __this, XmlSerializerNamespaces * value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSchemaObject_OnAdd, (XmlSchemaObject * __this, XmlSchemaObjectCollection * container, Object * item, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSchemaObject_OnRemove, (XmlSchemaObject * __this, XmlSchemaObjectCollection * container, Object * item, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSchemaObject_OnClear, (XmlSchemaObject * __this, XmlSchemaObjectCollection * container, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, String *, XmlSchemaObject_get_IdAttribute, (XmlSchemaObject * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSchemaObject_set_IdAttribute, (XmlSchemaObject * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSchemaObject_SetUnhandledAttributes, (XmlSchemaObject * __this, XmlAttribute__Array * moreAttributes, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSchemaObject_AddAnnotation, (XmlSchemaObject * __this, XmlSchemaAnnotation * annotation, MethodInfo * method));
DO_APP_FUNC(0x00420EE0, String *, XmlSchemaObject_get_NameAttribute, (XmlSchemaObject * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSchemaObject_set_NameAttribute, (XmlSchemaObject * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0052A050, bool, XmlSchemaObject_get_IsProcessing, (XmlSchemaObject * __this, MethodInfo * method));
DO_APP_FUNC(0x0052A060, void, XmlSchemaObject_set_IsProcessing, (XmlSchemaObject * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x01CB6770, XmlSchemaObject *, XmlSchemaObject_Clone, (XmlSchemaObject * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSchemaObject__ctor, (XmlSchemaObject * __this, MethodInfo * method));
DO_APP_FUNC(0x01C9A650, void, XmlSchemaObjectCollection__ctor, (XmlSchemaObjectCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB68C0, XmlSchemaObject *, XmlSchemaObjectCollection_get_Item, (XmlSchemaObjectCollection * __this, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01CB69B0, void, XmlSchemaObjectCollection_set_Item, (XmlSchemaObjectCollection * __this, int32_t index, XmlSchemaObject * value, MethodInfo * method));
DO_APP_FUNC(0x01CB6A60, XmlSchemaObjectEnumerator *, XmlSchemaObjectCollection_GetEnumerator, (XmlSchemaObjectCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB6BD0, int32_t, XmlSchemaObjectCollection_Add, (XmlSchemaObjectCollection * __this, XmlSchemaObject * item, MethodInfo * method));
DO_APP_FUNC(0x01CB6C70, void, XmlSchemaObjectCollection_Insert, (XmlSchemaObjectCollection * __this, int32_t index, XmlSchemaObject * item, MethodInfo * method));
DO_APP_FUNC(0x01CB6D20, void, XmlSchemaObjectCollection_Remove, (XmlSchemaObjectCollection * __this, XmlSchemaObject * item, MethodInfo * method));
DO_APP_FUNC(0x01CB6DC0, void, XmlSchemaObjectCollection_OnInsert, (XmlSchemaObjectCollection * __this, int32_t index, Object * item, MethodInfo * method));
DO_APP_FUNC(0x01CB6DE0, void, XmlSchemaObjectCollection_OnSet, (XmlSchemaObjectCollection * __this, int32_t index, Object * oldValue, Object * newValue, MethodInfo * method));
DO_APP_FUNC(0x01CB6E40, void, XmlSchemaObjectCollection_OnClear, (XmlSchemaObjectCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB6E60, void, XmlSchemaObjectCollection_OnRemove, (XmlSchemaObjectCollection * __this, int32_t index, Object * item, MethodInfo * method));
DO_APP_FUNC(0x01CB6E80, XmlSchemaObjectCollection *, XmlSchemaObjectCollection_Clone, (XmlSchemaObjectCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB7000, void, XmlSchemaObjectCollection_Add_1, (XmlSchemaObjectCollection * __this, XmlSchemaObjectCollection * collToAdd, MethodInfo * method));
DO_APP_FUNC(0x002FA490, void, XmlSchemaObjectEnumerator__ctor, (XmlSchemaObjectEnumerator * __this, IEnumerator * enumerator, MethodInfo * method));
DO_APP_FUNC(0x01CB7040, bool, XmlSchemaObjectEnumerator_MoveNext, (XmlSchemaObjectEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB70D0, XmlSchemaObject *, XmlSchemaObjectEnumerator_get_Current, (XmlSchemaObjectEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB71C0, void, XmlSchemaObjectEnumerator_System_Collections_IEnumerator_Reset, (XmlSchemaObjectEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB7250, bool, XmlSchemaObjectEnumerator_System_Collections_IEnumerator_MoveNext, (XmlSchemaObjectEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB72E0, Object *, XmlSchemaObjectEnumerator_System_Collections_IEnumerator_get_Current, (XmlSchemaObjectEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB7370, void, XmlSchemaObjectTable__ctor, (XmlSchemaObjectTable * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB7660, void, XmlSchemaObjectTable_Add, (XmlSchemaObjectTable * __this, XmlQualifiedName * name, XmlSchemaObject * value, MethodInfo * method));
DO_APP_FUNC(0x01CB77C0, void, XmlSchemaObjectTable_Insert, (XmlSchemaObjectTable * __this, XmlQualifiedName * name, XmlSchemaObject * value, MethodInfo * method));
DO_APP_FUNC(0x01CB7990, void, XmlSchemaObjectTable_Replace, (XmlSchemaObjectTable * __this, XmlQualifiedName * name, XmlSchemaObject * value, MethodInfo * method));
DO_APP_FUNC(0x01CB7B50, void, XmlSchemaObjectTable_Clear, (XmlSchemaObjectTable * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB7C20, void, XmlSchemaObjectTable_Remove, (XmlSchemaObjectTable * __this, XmlQualifiedName * name, MethodInfo * method));
DO_APP_FUNC(0x01CB7DF0, int32_t, XmlSchemaObjectTable_FindIndexByValue, (XmlSchemaObjectTable * __this, XmlSchemaObject * xso, MethodInfo * method));
DO_APP_FUNC(0x01CB7EE0, int32_t, XmlSchemaObjectTable_get_Count, (XmlSchemaObjectTable * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB7F70, bool, XmlSchemaObjectTable_Contains, (XmlSchemaObjectTable * __this, XmlQualifiedName * name, MethodInfo * method));
DO_APP_FUNC(0x01CB8030, XmlSchemaObject *, XmlSchemaObjectTable_get_Item, (XmlSchemaObjectTable * __this, XmlQualifiedName * name, MethodInfo * method));
DO_APP_FUNC(0x01CB8130, ICollection *, XmlSchemaObjectTable_get_Values, (XmlSchemaObjectTable * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB82A0, IDictionaryEnumerator *, XmlSchemaObjectTable_GetEnumerator, (XmlSchemaObjectTable * __this, MethodInfo * method));
DO_APP_FUNC(0x00110270, void, XmlSchemaObjectTable_XmlSchemaObjectEntry__ctor, (XmlSchemaObjectTable_XmlSchemaObjectEntry__Boxed * __this, XmlQualifiedName * name, XmlSchemaObject * value, MethodInfo * method));
DO_APP_FUNC(0x00CC8D50, void, XmlSchemaObjectTable_ValuesCollection__ctor, (XmlSchemaObjectTable_ValuesCollection * __this, List_1_System_Xml_Schema_XmlSchemaObjectTable_XmlSchemaObjectEntry_ * entries, int32_t size, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, int32_t, XmlSchemaObjectTable_ValuesCollection_get_Count, (XmlSchemaObjectTable_ValuesCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB8410, Object *, XmlSchemaObjectTable_ValuesCollection_get_SyncRoot, (XmlSchemaObjectTable_ValuesCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB84A0, bool, XmlSchemaObjectTable_ValuesCollection_get_IsSynchronized, (XmlSchemaObjectTable_ValuesCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB8530, void, XmlSchemaObjectTable_ValuesCollection_CopyTo, (XmlSchemaObjectTable_ValuesCollection * __this, Array * array, int32_t arrayIndex, MethodInfo * method));
DO_APP_FUNC(0x01CB86A0, IEnumerator *, XmlSchemaObjectTable_ValuesCollection_GetEnumerator, (XmlSchemaObjectTable_ValuesCollection * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB8800, void, XmlSchemaObjectTable_XSOEnumerator__ctor, (XmlSchemaObjectTable_XSOEnumerator * __this, List_1_System_Xml_Schema_XmlSchemaObjectTable_XmlSchemaObjectEntry_ * entries, int32_t size, XmlSchemaObjectTable_EnumeratorType__Enum enumType, MethodInfo * method));
DO_APP_FUNC(0x01CB8D40, Object *, XmlSchemaObjectTable_XSOEnumerator_get_Current, (XmlSchemaObjectTable_XSOEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB8F50, bool, XmlSchemaObjectTable_XSOEnumerator_MoveNext, (XmlSchemaObjectTable_XSOEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB9050, void, XmlSchemaObjectTable_XSOEnumerator_Reset, (XmlSchemaObjectTable_XSOEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB8800, void, XmlSchemaObjectTable_XSODictionaryEnumerator__ctor, (XmlSchemaObjectTable_XSODictionaryEnumerator * __this, List_1_System_Xml_Schema_XmlSchemaObjectTable_XmlSchemaObjectEntry_ * entries, int32_t size, XmlSchemaObjectTable_EnumeratorType__Enum enumType, MethodInfo * method));
DO_APP_FUNC(0x01CB8820, DictionaryEntry, XmlSchemaObjectTable_XSODictionaryEnumerator_get_Entry, (XmlSchemaObjectTable_XSODictionaryEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB89E0, Object *, XmlSchemaObjectTable_XSODictionaryEnumerator_get_Key, (XmlSchemaObjectTable_XSODictionaryEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB8B90, Object *, XmlSchemaObjectTable_XSODictionaryEnumerator_get_Value, (XmlSchemaObjectTable_XSODictionaryEnumerator * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB9070, String *, XmlSchemaParticle_get_MinOccursString, (XmlSchemaParticle * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB9150, void, XmlSchemaParticle_set_MinOccursString, (XmlSchemaParticle * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01CB9310, String *, XmlSchemaParticle_get_MaxOccursString, (XmlSchemaParticle * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB94D0, void, XmlSchemaParticle_set_MaxOccursString, (XmlSchemaParticle * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01CB97B0, Decimal, XmlSchemaParticle_get_MinOccurs, (XmlSchemaParticle * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB97C0, void, XmlSchemaParticle_set_MinOccurs, (XmlSchemaParticle * __this, Decimal value, MethodInfo * method));
DO_APP_FUNC(0x01A6D2E0, Decimal, XmlSchemaParticle_get_MaxOccurs, (XmlSchemaParticle * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB99F0, void, XmlSchemaParticle_set_MaxOccurs, (XmlSchemaParticle * __this, Decimal value, MethodInfo * method));
DO_APP_FUNC(0x01CB9C90, bool, XmlSchemaParticle_get_IsEmpty, (XmlSchemaParticle * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB9D60, String *, XmlSchemaParticle_get_NameString, (XmlSchemaParticle * __this, MethodInfo * method));
DO_APP_FUNC(0x01CB9DE0, XmlQualifiedName *, XmlSchemaParticle_GetQualifiedName, (XmlSchemaParticle * __this, MethodInfo * method));
DO_APP_FUNC(0x01CBA060, void, XmlSchemaParticle__ctor, (XmlSchemaParticle * __this, MethodInfo * method));
DO_APP_FUNC(0x01CBA120, void, XmlSchemaParticle__cctor, (MethodInfo * method));
DO_APP_FUNC(0x003FFDF0, bool, XmlSchemaParticle_EmptyParticle_get_IsEmpty, (XmlSchemaParticle_EmptyParticle * __this, MethodInfo * method));
DO_APP_FUNC(0x01CBA2F0, void, XmlSchemaParticle_EmptyParticle__ctor, (XmlSchemaParticle_EmptyParticle * __this, MethodInfo * method));
DO_APP_FUNC(0x01CBA3A0, void, XmlSchemaRedefine__ctor, (XmlSchemaRedefine * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, XmlSchemaObjectCollection *, XmlSchemaRedefine_get_Items, (XmlSchemaRedefine * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, XmlSchemaObjectTable *, XmlSchemaRedefine_get_AttributeGroups, (XmlSchemaRedefine * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBE0, XmlSchemaObjectTable *, XmlSchemaRedefine_get_SchemaTypes, (XmlSchemaRedefine * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC00, XmlSchemaObjectTable *, XmlSchemaRedefine_get_Groups, (XmlSchemaRedefine * __this, MethodInfo * method));
DO_APP_FUNC(0x01CBA750, void, XmlSchemaRedefine_AddAnnotation, (XmlSchemaRedefine * __this, XmlSchemaAnnotation * annotation, MethodInfo * method));
DO_APP_FUNC(0x002FBBE0, XmlSchemaObjectCollection *, XmlSchemaSequence_get_Items, (XmlSchemaSequence * __this, MethodInfo * method));
DO_APP_FUNC(0x01C9FDA0, bool, XmlSchemaSequence_get_IsEmpty, (XmlSchemaSequence * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBF0, void, XmlSchemaSequence_SetItems, (XmlSchemaSequence * __this, XmlSchemaObjectCollection * newItems, MethodInfo * method));
DO_APP_FUNC(0x01CBA770, void, XmlSchemaSequence__ctor, (XmlSchemaSequence * __this, MethodInfo * method));
DO_APP_FUNC(0x01CBA8C0, Object *, XmlSchemaSet_get_InternalSyncObject, (XmlSchemaSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CBAA20, void, XmlSchemaSet__ctor, (XmlSchemaSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CBAB70, void, XmlSchemaSet__ctor_1, (XmlSchemaSet * __this, XmlNameTable * nameTable, MethodInfo * method));
DO_APP_FUNC(0x01CBB430, void, XmlSchemaSet_add_ValidationEventHandler, (XmlSchemaSet * __this, ValidationEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x01CBB530, void, XmlSchemaSet_remove_ValidationEventHandler, (XmlSchemaSet * __this, ValidationEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x004358D0, bool, XmlSchemaSet_get_IsCompiled, (XmlSchemaSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CBB600, void, XmlSchemaSet_set_XmlResolver, (XmlSchemaSet * __this, XmlResolver * value, MethodInfo * method));
DO_APP_FUNC(0x002FBBE0, XmlSchemaCompilationSettings *, XmlSchemaSet_get_CompilationSettings, (XmlSchemaSet * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBF0, void, XmlSchemaSet_set_CompilationSettings, (XmlSchemaSet * __this, XmlSchemaCompilationSettings * value, MethodInfo * method));
DO_APP_FUNC(0x01CBB620, int32_t, XmlSchemaSet_get_Count, (XmlSchemaSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CBB650, XmlSchemaObjectTable *, XmlSchemaSet_get_GlobalElements, (XmlSchemaSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CBB7B0, XmlSchemaObjectTable *, XmlSchemaSet_get_GlobalAttributes, (XmlSchemaSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CBB910, XmlSchemaObjectTable *, XmlSchemaSet_get_GlobalTypes, (XmlSchemaSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CBBA70, XmlSchemaObjectTable *, XmlSchemaSet_get_SubstitutionGroups, (XmlSchemaSet * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, Hashtable *, XmlSchemaSet_get_SchemaLocations, (XmlSchemaSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CBBBD0, XmlSchemaObjectTable *, XmlSchemaSet_get_TypeExtensions, (XmlSchemaSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CBBD30, void, XmlSchemaSet_Add, (XmlSchemaSet * __this, XmlSchemaSet * schemas, MethodInfo * method));
DO_APP_FUNC(0x01CBC3F0, XmlSchema *, XmlSchemaSet_Add_1, (XmlSchemaSet * __this, XmlSchema * schema, MethodInfo * method));
DO_APP_FUNC(0x01CBC630, bool, XmlSchemaSet_RemoveRecursive, (XmlSchemaSet * __this, XmlSchema * schemaToRemove, MethodInfo * method));
DO_APP_FUNC(0x01CBD120, bool, XmlSchemaSet_Contains, (XmlSchemaSet * __this, String * targetNamespace, MethodInfo * method));
DO_APP_FUNC(0x01CBD1E0, void, XmlSchemaSet_Compile, (XmlSchemaSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CBDB30, XmlSchema *, XmlSchemaSet_Reprocess, (XmlSchemaSet * __this, XmlSchema * schema, MethodInfo * method));
DO_APP_FUNC(0x01CBE200, void, XmlSchemaSet_CopyTo, (XmlSchemaSet * __this, XmlSchema__Array * schemas, int32_t index, MethodInfo * method));
DO_APP_FUNC(0x01CBE340, ICollection *, XmlSchemaSet_Schemas, (XmlSchemaSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CBE370, ICollection *, XmlSchemaSet_Schemas_1, (XmlSchemaSet * __this, String * targetNamespace, MethodInfo * method));
DO_APP_FUNC(0x01CBE660, XmlSchema *, XmlSchemaSet_Add_2, (XmlSchemaSet * __this, String * targetNamespace, XmlSchema * schema, MethodInfo * method));
DO_APP_FUNC(0x01CBE6C0, void, XmlSchemaSet_Add_3, (XmlSchemaSet * __this, String * targetNamespace, XmlReader * reader, Hashtable * validatedNamespaces, MethodInfo * method));
DO_APP_FUNC(0x01CBEC10, XmlSchema *, XmlSchemaSet_FindSchemaByNSAndUrl, (XmlSchemaSet * __this, Uri * schemaUri, String * ns, DictionaryEntry__Array * locationsTable, MethodInfo * method));
DO_APP_FUNC(0x01CBEF50, void, XmlSchemaSet_AddSchemaToSet, (XmlSchemaSet * __this, XmlSchema * schema, MethodInfo * method));
DO_APP_FUNC(0x01CBF3B0, void, XmlSchemaSet_ProcessNewSubstitutionGroups, (XmlSchemaSet * __this, XmlSchemaObjectTable * substitutionGroupsTable, bool resolve, MethodInfo * method));
DO_APP_FUNC(0x01CBF730, void, XmlSchemaSet_ResolveSubstitutionGroup, (XmlSchemaSet * __this, XmlSchemaSubstitutionGroup * substitutionGroup, XmlSchemaObjectTable * substTable, MethodInfo * method));
DO_APP_FUNC(0x01CBFB70, XmlSchema *, XmlSchemaSet_Remove, (XmlSchemaSet * __this, XmlSchema * schema, bool forceCompile, MethodInfo * method));
DO_APP_FUNC(0x01CBFEC0, void, XmlSchemaSet_ClearTables, (XmlSchemaSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CC00C0, bool, XmlSchemaSet_PreprocessSchema, (XmlSchemaSet * __this, XmlSchema * * schema, String * targetNamespace, MethodInfo * method));
DO_APP_FUNC(0x01CC02D0, XmlSchema *, XmlSchemaSet_ParseSchema, (XmlSchemaSet * __this, String * targetNamespace, XmlReader * reader, MethodInfo * method));
DO_APP_FUNC(0x01CC0550, void, XmlSchemaSet_CopyFromCompiledSet, (XmlSchemaSet * __this, XmlSchemaSet * otherSet, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, SchemaInfo *, XmlSchemaSet_get_CompiledInfo, (XmlSchemaSet * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, XmlReaderSettings *, XmlSchemaSet_get_ReaderSettings, (XmlSchemaSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CC1A40, XmlResolver *, XmlSchemaSet_GetResolver, (XmlSchemaSet * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB990, ValidationEventHandler *, XmlSchemaSet_GetEventHandler, (XmlSchemaSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CC1A60, SchemaNames *, XmlSchemaSet_GetSchemaNames, (XmlSchemaSet * __this, XmlNameTable * nt, MethodInfo * method));
DO_APP_FUNC(0x01CC1CA0, bool, XmlSchemaSet_IsSchemaLoaded, (XmlSchemaSet * __this, Uri * schemaUri, String * targetNamespace, XmlSchema * * schema, MethodInfo * method));
DO_APP_FUNC(0x01CC21A0, bool, XmlSchemaSet_GetSchemaByUri, (XmlSchemaSet * __this, Uri * schemaUri, XmlSchema * * schema, MethodInfo * method));
DO_APP_FUNC(0x01CC22D0, String *, XmlSchemaSet_GetTargetNamespace, (XmlSchemaSet * __this, XmlSchema * schema, MethodInfo * method));
DO_APP_FUNC(0x002FB950, SortedList *, XmlSchemaSet_get_SortedSchemas, (XmlSchemaSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CC2370, void, XmlSchemaSet_RemoveSchemaFromCaches, (XmlSchemaSet * __this, XmlSchema * schema, MethodInfo * method));
DO_APP_FUNC(0x01CC29B0, void, XmlSchemaSet_RemoveSchemaFromGlobalTables, (XmlSchemaSet * __this, XmlSchema * schema, MethodInfo * method));
DO_APP_FUNC(0x01CC3360, bool, XmlSchemaSet_AddToTable, (XmlSchemaSet * __this, XmlSchemaObjectTable * table, XmlQualifiedName * qname, XmlSchemaObject * item, MethodInfo * method));
DO_APP_FUNC(0x01CC36C0, void, XmlSchemaSet_VerifyTables, (XmlSchemaSet * __this, MethodInfo * method));
DO_APP_FUNC(0x01CC3AA0, void, XmlSchemaSet_InternalValidationCallback, (XmlSchemaSet * __this, Object * sender, ValidationEventArgs * e, MethodInfo * method));
DO_APP_FUNC(0x01CC3B50, void, XmlSchemaSet_SendValidationEvent, (XmlSchemaSet * __this, XmlSchemaException * e, XmlSeverityType__Enum severity, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, XmlSchemaContent *, XmlSchemaSimpleContent_get_Content, (XmlSchemaSimpleContent * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, XmlSchemaSimpleContent_set_Content, (XmlSchemaSimpleContent * __this, XmlSchemaContent * value, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSchemaSimpleContent__ctor, (XmlSchemaSimpleContent * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, XmlQualifiedName *, XmlSchemaSimpleContentExtension_get_BaseTypeName, (XmlSchemaSimpleContentExtension * __this, MethodInfo * method));
DO_APP_FUNC(0x0191CE20, void, XmlSchemaSimpleContentExtension_set_BaseTypeName, (XmlSchemaSimpleContentExtension * __this, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, XmlSchemaObjectCollection *, XmlSchemaSimpleContentExtension_get_Attributes, (XmlSchemaSimpleContentExtension * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, XmlSchemaAnyAttribute *, XmlSchemaSimpleContentExtension_get_AnyAttribute, (XmlSchemaSimpleContentExtension * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB70, void, XmlSchemaSimpleContentExtension_set_AnyAttribute, (XmlSchemaSimpleContentExtension * __this, XmlSchemaAnyAttribute * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, XmlSchemaSimpleContentExtension_SetAttributes, (XmlSchemaSimpleContentExtension * __this, XmlSchemaObjectCollection * newAttributes, MethodInfo * method));
DO_APP_FUNC(0x0191CF10, void, XmlSchemaSimpleContentExtension__ctor, (XmlSchemaSimpleContentExtension * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, XmlQualifiedName *, XmlSchemaSimpleContentRestriction_get_BaseTypeName, (XmlSchemaSimpleContentRestriction * __this, MethodInfo * method));
DO_APP_FUNC(0x0191D090, void, XmlSchemaSimpleContentRestriction_set_BaseTypeName, (XmlSchemaSimpleContentRestriction * __this, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, XmlSchemaSimpleType *, XmlSchemaSimpleContentRestriction_get_BaseType, (XmlSchemaSimpleContentRestriction * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB70, void, XmlSchemaSimpleContentRestriction_set_BaseType, (XmlSchemaSimpleContentRestriction * __this, XmlSchemaSimpleType * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, XmlSchemaObjectCollection *, XmlSchemaSimpleContentRestriction_get_Facets, (XmlSchemaSimpleContentRestriction * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, XmlSchemaObjectCollection *, XmlSchemaSimpleContentRestriction_get_Attributes, (XmlSchemaSimpleContentRestriction * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBC0, XmlSchemaAnyAttribute *, XmlSchemaSimpleContentRestriction_get_AnyAttribute, (XmlSchemaSimpleContentRestriction * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBD0, void, XmlSchemaSimpleContentRestriction_set_AnyAttribute, (XmlSchemaSimpleContentRestriction * __this, XmlSchemaAnyAttribute * value, MethodInfo * method));
DO_APP_FUNC(0x002FBBB0, void, XmlSchemaSimpleContentRestriction_SetAttributes, (XmlSchemaSimpleContentRestriction * __this, XmlSchemaObjectCollection * newAttributes, MethodInfo * method));
DO_APP_FUNC(0x0191D180, void, XmlSchemaSimpleContentRestriction__ctor, (XmlSchemaSimpleContentRestriction * __this, MethodInfo * method));
DO_APP_FUNC(0x0191D3D0, void, XmlSchemaSimpleType__ctor, (XmlSchemaSimpleType * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC60, XmlSchemaSimpleTypeContent *, XmlSchemaSimpleType_get_Content, (XmlSchemaSimpleType * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC70, void, XmlSchemaSimpleType_set_Content, (XmlSchemaSimpleType * __this, XmlSchemaSimpleTypeContent * value, MethodInfo * method));
DO_APP_FUNC(0x0191D3E0, XmlSchemaObject *, XmlSchemaSimpleType_Clone, (XmlSchemaSimpleType * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSchemaSimpleTypeContent__ctor, (XmlSchemaSimpleTypeContent * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, XmlQualifiedName *, XmlSchemaSimpleTypeList_get_ItemTypeName, (XmlSchemaSimpleTypeList * __this, MethodInfo * method));
DO_APP_FUNC(0x0191D5C0, void, XmlSchemaSimpleTypeList_set_ItemTypeName, (XmlSchemaSimpleTypeList * __this, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, XmlSchemaSimpleType *, XmlSchemaSimpleTypeList_get_ItemType, (XmlSchemaSimpleTypeList * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB70, void, XmlSchemaSimpleTypeList_set_ItemType, (XmlSchemaSimpleTypeList * __this, XmlSchemaSimpleType * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, XmlSchemaSimpleType *, XmlSchemaSimpleTypeList_get_BaseItemType, (XmlSchemaSimpleTypeList * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB90, void, XmlSchemaSimpleTypeList_set_BaseItemType, (XmlSchemaSimpleTypeList * __this, XmlSchemaSimpleType * value, MethodInfo * method));
DO_APP_FUNC(0x0191D6B0, XmlSchemaObject *, XmlSchemaSimpleTypeList_Clone, (XmlSchemaSimpleTypeList * __this, MethodInfo * method));
DO_APP_FUNC(0x0191D830, void, XmlSchemaSimpleTypeList__ctor, (XmlSchemaSimpleTypeList * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, XmlQualifiedName *, XmlSchemaSimpleTypeRestriction_get_BaseTypeName, (XmlSchemaSimpleTypeRestriction * __this, MethodInfo * method));
DO_APP_FUNC(0x0191D8E0, void, XmlSchemaSimpleTypeRestriction_set_BaseTypeName, (XmlSchemaSimpleTypeRestriction * __this, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, XmlSchemaSimpleType *, XmlSchemaSimpleTypeRestriction_get_BaseType, (XmlSchemaSimpleTypeRestriction * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB70, void, XmlSchemaSimpleTypeRestriction_set_BaseType, (XmlSchemaSimpleTypeRestriction * __this, XmlSchemaSimpleType * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, XmlSchemaObjectCollection *, XmlSchemaSimpleTypeRestriction_get_Facets, (XmlSchemaSimpleTypeRestriction * __this, MethodInfo * method));
DO_APP_FUNC(0x0191D9D0, XmlSchemaObject *, XmlSchemaSimpleTypeRestriction_Clone, (XmlSchemaSimpleTypeRestriction * __this, MethodInfo * method));
DO_APP_FUNC(0x0191DB50, void, XmlSchemaSimpleTypeRestriction__ctor, (XmlSchemaSimpleTypeRestriction * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, XmlSchemaObjectCollection *, XmlSchemaSimpleTypeUnion_get_BaseTypes, (XmlSchemaSimpleTypeUnion * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB60, XmlQualifiedName__Array *, XmlSchemaSimpleTypeUnion_get_MemberTypes, (XmlSchemaSimpleTypeUnion * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB70, void, XmlSchemaSimpleTypeUnion_set_MemberTypes, (XmlSchemaSimpleTypeUnion * __this, XmlQualifiedName__Array * value, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, XmlSchemaSimpleType__Array *, XmlSchemaSimpleTypeUnion_get_BaseMemberTypes, (XmlSchemaSimpleTypeUnion * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB90, void, XmlSchemaSimpleTypeUnion_SetBaseMemberTypes, (XmlSchemaSimpleTypeUnion * __this, XmlSchemaSimpleType__Array * baseMemberTypes, MethodInfo * method));
DO_APP_FUNC(0x0191DCD0, XmlSchemaObject *, XmlSchemaSimpleTypeUnion_Clone, (XmlSchemaSimpleTypeUnion * __this, MethodInfo * method));
DO_APP_FUNC(0x0191DF10, void, XmlSchemaSimpleTypeUnion__ctor, (XmlSchemaSimpleTypeUnion * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9B0, ArrayList *, XmlSchemaSubstitutionGroup_get_Members, (XmlSchemaSubstitutionGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9D0, XmlQualifiedName *, XmlSchemaSubstitutionGroup_get_Examplar, (XmlSchemaSubstitutionGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9E0, void, XmlSchemaSubstitutionGroup_set_Examplar, (XmlSchemaSubstitutionGroup * __this, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x0191E060, void, XmlSchemaSubstitutionGroup__ctor, (XmlSchemaSubstitutionGroup * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB9F0, XmlSchemaChoice *, XmlSchemaSubstitutionGroupV1Compat_get_Choice, (XmlSchemaSubstitutionGroupV1Compat * __this, MethodInfo * method));
DO_APP_FUNC(0x0191E1E0, void, XmlSchemaSubstitutionGroupV1Compat__ctor, (XmlSchemaSubstitutionGroupV1Compat * __this, MethodInfo * method));
DO_APP_FUNC(0x0191E340, XmlSchemaSimpleType *, XmlSchemaType_GetBuiltInSimpleType, (XmlQualifiedName * qualifiedName, MethodInfo * method));
DO_APP_FUNC(0x0191E430, XmlSchemaSimpleType *, XmlSchemaType_GetBuiltInSimpleType_1, (XmlTypeCode__Enum typeCode, MethodInfo * method));
DO_APP_FUNC(0x0191E4D0, XmlSchemaComplexType *, XmlSchemaType_GetBuiltInComplexType, (XmlQualifiedName * qualifiedName, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, String *, XmlSchemaType_get_Name, (XmlSchemaType * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, XmlSchemaType_set_Name, (XmlSchemaType * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x004C6660, XmlSchemaDerivationMethod__Enum, XmlSchemaType_get_Final, (XmlSchemaType * __this, MethodInfo * method));
DO_APP_FUNC(0x0191E6A0, void, XmlSchemaType_set_Final, (XmlSchemaType * __this, XmlSchemaDerivationMethod__Enum value, MethodInfo * method));
DO_APP_FUNC(0x0191E6B0, XmlQualifiedName *, XmlSchemaType_get_QualifiedName, (XmlSchemaType * __this, MethodInfo * method));
DO_APP_FUNC(0x003FF7B0, XmlSchemaDerivationMethod__Enum, XmlSchemaType_get_FinalResolved, (XmlSchemaType * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB80, XmlSchemaType *, XmlSchemaType_get_BaseXmlSchemaType, (XmlSchemaType * __this, MethodInfo * method));
DO_APP_FUNC(0x003FF2B0, XmlSchemaDerivationMethod__Enum, XmlSchemaType_get_DerivedBy, (XmlSchemaType * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBBA0, XmlSchemaDatatype *, XmlSchemaType_get_Datatype, (XmlSchemaType * __this, MethodInfo * method));
DO_APP_FUNC(0x00417870, bool, XmlSchemaType_get_IsMixed, (XmlSchemaType * __this, MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlSchemaType_set_IsMixed, (XmlSchemaType * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x0191E6C0, XmlTypeCode__Enum, XmlSchemaType_get_TypeCode, (XmlSchemaType * __this, MethodInfo * method));
DO_APP_FUNC(0x0191E790, XmlValueConverter *, XmlSchemaType_get_ValueConverter, (XmlSchemaType * __this, MethodInfo * method));
DO_APP_FUNC(0x003FC380, XmlSchemaContentType__Enum, XmlSchemaType_get_SchemaContentType, (XmlSchemaType * __this, MethodInfo * method));
DO_APP_FUNC(0x0191E860, void, XmlSchemaType_SetQualifiedName, (XmlSchemaType * __this, XmlQualifiedName * value, MethodInfo * method));
DO_APP_FUNC(0x003FF7C0, void, XmlSchemaType_SetFinalResolved, (XmlSchemaType * __this, XmlSchemaDerivationMethod__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FBB90, void, XmlSchemaType_SetBaseSchemaType, (XmlSchemaType * __this, XmlSchemaType * value, MethodInfo * method));
DO_APP_FUNC(0x003FF2C0, void, XmlSchemaType_SetDerivedBy, (XmlSchemaType * __this, XmlSchemaDerivationMethod__Enum value, MethodInfo * method));
DO_APP_FUNC(0x002FBBB0, void, XmlSchemaType_SetDatatype, (XmlSchemaType * __this, XmlSchemaDatatype * value, MethodInfo * method));
DO_APP_FUNC(0x0191E870, SchemaElementDecl *, XmlSchemaType_get_ElementDecl, (XmlSchemaType * __this, MethodInfo * method));
DO_APP_FUNC(0x0191E880, void, XmlSchemaType_set_ElementDecl, (XmlSchemaType * __this, SchemaElementDecl * value, MethodInfo * method));
DO_APP_FUNC(0x002FBC20, XmlSchemaType *, XmlSchemaType_get_Redefined, (XmlSchemaType * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBC30, void, XmlSchemaType_set_Redefined, (XmlSchemaType * __this, XmlSchemaType * value, MethodInfo * method));
DO_APP_FUNC(0x00A26C10, void, XmlSchemaType_SetContentType, (XmlSchemaType * __this, XmlSchemaContentType__Enum value, MethodInfo * method));
DO_APP_FUNC(0x0191E890, bool, XmlSchemaType_IsDerivedFrom, (XmlSchemaType * derivedType, XmlSchemaType * baseType, XmlSchemaDerivationMethod__Enum except, MethodInfo * method));
DO_APP_FUNC(0x0191EA90, bool, XmlSchemaType_IsDerivedFromDatatype, (XmlSchemaDatatype * derivedDataType, XmlSchemaDatatype * baseDataType, XmlSchemaDerivationMethod__Enum except, MethodInfo * method));
DO_APP_FUNC(0x002FBB40, String *, XmlSchemaType_get_NameAttribute, (XmlSchemaType * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBB50, void, XmlSchemaType_set_NameAttribute, (XmlSchemaType * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0191EB80, void, XmlSchemaType__ctor, (XmlSchemaType * __this, MethodInfo * method));
DO_APP_FUNC(0x0191EC50, void, XmlSchemaValidationException__ctor, (XmlSchemaValidationException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0191EC70, void, XmlSchemaValidationException_GetObjectData, (XmlSchemaValidationException * __this, SerializationInfo * info, StreamingContext context, MethodInfo * method));
DO_APP_FUNC(0x0191EC90, void, XmlSchemaValidationException__ctor_1, (XmlSchemaValidationException * __this, MethodInfo * method));
DO_APP_FUNC(0x0191ECC0, void, XmlSchemaValidationException__ctor_2, (XmlSchemaValidationException * __this, String * res, String * arg, String * sourceUri, int32_t lineNumber, int32_t linePosition, MethodInfo * method));
DO_APP_FUNC(0x0191EE30, void, XmlSchemaValidationException__ctor_3, (XmlSchemaValidationException * __this, String * res, String__Array * args, String * sourceUri, int32_t lineNumber, int32_t linePosition, MethodInfo * method));
DO_APP_FUNC(0x0191EEC0, void, XmlSchemaValidationException__ctor_4, (XmlSchemaValidationException * __this, String * res, String__Array * args, Exception * innerException, String * sourceUri, int32_t lineNumber, int32_t linePosition, MethodInfo * method));
DO_APP_FUNC(0x00611810, void, XmlValueGetter__ctor, (XmlValueGetter * __this, Object * object, void * method_1, MethodInfo * method));
DO_APP_FUNC(0x01938310, Object *, XmlValueGetter_Invoke, (XmlValueGetter * __this, MethodInfo * method));
DO_APP_FUNC(0x00611B10, IAsyncResult *, XmlValueGetter_BeginInvoke, (XmlValueGetter * __this, AsyncCallback * callback, Object * object, MethodInfo * method));
DO_APP_FUNC(0x00611B40, Object *, XmlValueGetter_EndInvoke, (XmlValueGetter * __this, IAsyncResult * result, MethodInfo * method));
DO_APP_FUNC(0x016CC210, void, IdRefNode__ctor, (IdRefNode * __this, IdRefNode * next, String * id, int32_t lineNo, int32_t linePos, MethodInfo * method));
DO_APP_FUNC(0x0191EF60, void, XmlSchemaValidator__ctor, (XmlSchemaValidator * __this, XmlNameTable * nameTable, XmlSchemaSet * schemas, IXmlNamespaceResolver * namespaceResolver, XmlSchemaValidationFlags__Enum validationFlags, MethodInfo * method));
DO_APP_FUNC(0x0191F400, void, XmlSchemaValidator_Init, (XmlSchemaValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x0191FA90, void, XmlSchemaValidator_Reset, (XmlSchemaValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x002FBD70, void, XmlSchemaValidator_set_XmlResolver, (XmlSchemaValidator * __this, XmlResolver * value, MethodInfo * method));
DO_APP_FUNC(0x0191FB70, void, XmlSchemaValidator_set_LineInfoProvider, (XmlSchemaValidator * __this, IXmlLineInfo * value, MethodInfo * method));
DO_APP_FUNC(0x0191FB90, void, XmlSchemaValidator_set_SourceUri, (XmlSchemaValidator * __this, Uri * value, MethodInfo * method));
DO_APP_FUNC(0x002FBCF0, void, XmlSchemaValidator_set_ValidationEventSender, (XmlSchemaValidator * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0191FBD0, void, XmlSchemaValidator_add_ValidationEventHandler, (XmlSchemaValidator * __this, ValidationEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x0191FC90, void, XmlSchemaValidator_remove_ValidationEventHandler, (XmlSchemaValidator * __this, ValidationEventHandler * value, MethodInfo * method));
DO_APP_FUNC(0x0191FD50, void, XmlSchemaValidator_AddSchema, (XmlSchemaValidator * __this, XmlSchema * schema, MethodInfo * method));
DO_APP_FUNC(0x019201B0, void, XmlSchemaValidator_Initialize, (XmlSchemaValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x01920370, void, XmlSchemaValidator_Initialize_1, (XmlSchemaValidator * __this, XmlSchemaObject * partialValidationType, MethodInfo * method));
DO_APP_FUNC(0x01920670, void, XmlSchemaValidator_ValidateElement, (XmlSchemaValidator * __this, String * localName, String * namespaceUri, XmlSchemaInfo * schemaInfo, String * xsiType, String * xsiNil, String * xsiSchemaLocation, String * xsiNoNamespaceSchemaLocation, MethodInfo * method));
DO_APP_FUNC(0x01920C20, Object *, XmlSchemaValidator_ValidateAttribute, (XmlSchemaValidator * __this, String * localName, String * namespaceUri, XmlValueGetter * attributeValue, XmlSchemaInfo * schemaInfo, MethodInfo * method));
DO_APP_FUNC(0x01920D20, Object *, XmlSchemaValidator_ValidateAttribute_1, (XmlSchemaValidator * __this, String * lName, String * ns, XmlValueGetter * attributeValueGetter, String * attributeStringValue, XmlSchemaInfo * schemaInfo, MethodInfo * method));
DO_APP_FUNC(0x019217D0, void, XmlSchemaValidator_ValidateEndOfAttributes, (XmlSchemaValidator * __this, XmlSchemaInfo * schemaInfo, MethodInfo * method));
DO_APP_FUNC(0x01921910, void, XmlSchemaValidator_ValidateText, (XmlSchemaValidator * __this, XmlValueGetter * elementValue, MethodInfo * method));
DO_APP_FUNC(0x019219E0, void, XmlSchemaValidator_ValidateText_1, (XmlSchemaValidator * __this, String * elementStringValue, XmlValueGetter * elementValueGetter, MethodInfo * method));
DO_APP_FUNC(0x01921E80, void, XmlSchemaValidator_ValidateWhitespace, (XmlSchemaValidator * __this, XmlValueGetter * elementValue, MethodInfo * method));
DO_APP_FUNC(0x01921F50, void, XmlSchemaValidator_ValidateWhitespace_1, (XmlSchemaValidator * __this, String * elementStringValue, XmlValueGetter * elementValueGetter, MethodInfo * method));
DO_APP_FUNC(0x019221D0, Object *, XmlSchemaValidator_ValidateEndElement, (XmlSchemaValidator * __this, XmlSchemaInfo * schemaInfo, MethodInfo * method));
DO_APP_FUNC(0x019221E0, void, XmlSchemaValidator_SkipToEndElement, (XmlSchemaValidator * __this, XmlSchemaInfo * schemaInfo, MethodInfo * method));
DO_APP_FUNC(0x019224A0, void, XmlSchemaValidator_EndValidation, (XmlSchemaValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x019225F0, void, XmlSchemaValidator_GetUnspecifiedDefaultAttributes, (XmlSchemaValidator * __this, ArrayList * defaultAttributes, bool createNodeData, MethodInfo * method));
DO_APP_FUNC(0x002FA280, XmlSchemaSet *, XmlSchemaValidator_get_SchemaSet, (XmlSchemaValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, XmlSchemaValidationFlags__Enum, XmlSchemaValidator_get_ValidationFlags, (XmlSchemaValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x01922D70, XmlSchemaContentType__Enum, XmlSchemaValidator_get_CurrentContentType, (XmlSchemaValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x01922DC0, void, XmlSchemaValidator_SetDtdSchemaInfo, (XmlSchemaValidator * __this, IDtdInfo * dtdSchemaInfo, MethodInfo * method));
DO_APP_FUNC(0x01922DD0, bool, XmlSchemaValidator_get_StrictlyAssessed, (XmlSchemaValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x01922E20, bool, XmlSchemaValidator_get_HasSchema, (XmlSchemaValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x01922E70, String *, XmlSchemaValidator_GetConcatenatedValue, (XmlSchemaValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x01922EA0, Object *, XmlSchemaValidator_InternalValidateEndElement, (XmlSchemaValidator * __this, XmlSchemaInfo * schemaInfo, Object * typedValue, MethodInfo * method));
DO_APP_FUNC(0x01923600, void, XmlSchemaValidator_ProcessSchemaLocations, (XmlSchemaValidator * __this, String * xsiSchemaLocation, String * xsiNoNamespaceSchemaLocation, MethodInfo * method));
DO_APP_FUNC(0x01923A20, Object *, XmlSchemaValidator_ValidateElementContext, (XmlSchemaValidator * __this, XmlQualifiedName * elementName, bool * invalidElementInContext, MethodInfo * method));
DO_APP_FUNC(0x01923F40, XmlSchemaElement *, XmlSchemaValidator_GetSubstitutionGroupHead, (XmlSchemaValidator * __this, XmlQualifiedName * member, MethodInfo * method));
DO_APP_FUNC(0x01924250, Object *, XmlSchemaValidator_ValidateAtomicValue, (XmlSchemaValidator * __this, String * stringValue, XmlSchemaSimpleType * * memberType, MethodInfo * method));
DO_APP_FUNC(0x019245B0, Object *, XmlSchemaValidator_ValidateAtomicValue_1, (XmlSchemaValidator * __this, Object * parsedValue, XmlSchemaSimpleType * * memberType, MethodInfo * method));
DO_APP_FUNC(0x01924A30, String *, XmlSchemaValidator_GetTypeName, (XmlSchemaValidator * __this, SchemaDeclBase * decl, MethodInfo * method));
DO_APP_FUNC(0x01924AB0, void, XmlSchemaValidator_SaveTextValue, (XmlSchemaValidator * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01924B00, void, XmlSchemaValidator_Push, (XmlSchemaValidator * __this, XmlQualifiedName * elementName, MethodInfo * method));
DO_APP_FUNC(0x01924DF0, void, XmlSchemaValidator_Pop, (XmlSchemaValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x01925000, SchemaElementDecl *, XmlSchemaValidator_FastGetElementDecl, (XmlSchemaValidator * __this, XmlQualifiedName * elementName, Object * particle, MethodInfo * method));
DO_APP_FUNC(0x01925290, SchemaElementDecl *, XmlSchemaValidator_CheckXsiTypeAndNil, (XmlSchemaValidator * __this, SchemaElementDecl * elementDecl, String * xsiType, String * xsiNil, bool * declFound, MethodInfo * method));
DO_APP_FUNC(0x01925B60, void, XmlSchemaValidator_ThrowDeclNotFoundWarningOrError, (XmlSchemaValidator * __this, bool declFound, MethodInfo * method));
DO_APP_FUNC(0x01925D90, void, XmlSchemaValidator_CheckElementProperties, (XmlSchemaValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x01925E90, void, XmlSchemaValidator_ValidateStartElementIdentityConstraints, (XmlSchemaValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x01925F00, SchemaAttDef *, XmlSchemaValidator_CheckIsXmlAttribute, (XmlSchemaValidator * __this, XmlQualifiedName * attQName, MethodInfo * method));
DO_APP_FUNC(0x01926060, void, XmlSchemaValidator_AddXmlNamespaceSchema, (XmlSchemaValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x019261F0, Object *, XmlSchemaValidator_CheckMixedValueConstraint, (XmlSchemaValidator * __this, String * elementValue, MethodInfo * method));
DO_APP_FUNC(0x01926360, void, XmlSchemaValidator_LoadSchema, (XmlSchemaValidator * __this, String * uri, String * url, MethodInfo * method));
DO_APP_FUNC(0x01926810, void, XmlSchemaValidator_RecompileSchemaSet, (XmlSchemaValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x019268F0, void, XmlSchemaValidator_ProcessTokenizedType, (XmlSchemaValidator * __this, XmlTokenizedType__Enum ttype, String * name, bool attrValue, MethodInfo * method));
DO_APP_FUNC(0x01926D30, Object *, XmlSchemaValidator_CheckAttributeValue, (XmlSchemaValidator * __this, Object * value, SchemaAttDef * attdef, MethodInfo * method));
DO_APP_FUNC(0x01927110, Object *, XmlSchemaValidator_CheckElementValue, (XmlSchemaValidator * __this, String * stringValue, MethodInfo * method));
DO_APP_FUNC(0x019274D0, void, XmlSchemaValidator_CheckTokenizedTypes, (XmlSchemaValidator * __this, XmlSchemaDatatype * dtype, Object * typedValue, bool attrValue, MethodInfo * method));
DO_APP_FUNC(0x01927690, Object *, XmlSchemaValidator_FindId, (XmlSchemaValidator * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x019276B0, void, XmlSchemaValidator_CheckForwardRefs, (XmlSchemaValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x019278A0, bool, XmlSchemaValidator_get_HasIdentityConstraints, (XmlSchemaValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x019278C0, bool, XmlSchemaValidator_get_ProcessIdentityConstraints, (XmlSchemaValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x019278D0, bool, XmlSchemaValidator_get_ReportValidationWarnings, (XmlSchemaValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x019278E0, bool, XmlSchemaValidator_get_ProcessSchemaHints, (XmlSchemaValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x019278F0, void, XmlSchemaValidator_CheckStateTransition, (XmlSchemaValidator * __this, ValidatorState__Enum toState, String * methodName, MethodInfo * method));
DO_APP_FUNC(0x01927C30, void, XmlSchemaValidator_ClearPSVI, (XmlSchemaValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x01927C80, void, XmlSchemaValidator_CheckRequiredAttributes, (XmlSchemaValidator * __this, SchemaElementDecl * currentElementDecl, MethodInfo * method));
DO_APP_FUNC(0x01927E80, XmlSchemaElement *, XmlSchemaValidator_GetSchemaElement, (XmlSchemaValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x01927FE0, String *, XmlSchemaValidator_GetDefaultAttributePrefix, (XmlSchemaValidator * __this, String * attributeNS, MethodInfo * method));
DO_APP_FUNC(0x01928290, void, XmlSchemaValidator_AddIdentityConstraints, (XmlSchemaValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x01928AE0, void, XmlSchemaValidator_ElementIdentityConstraints, (XmlSchemaValidator * __this, MethodInfo * method));
DO_APP_FUNC(0x01928F00, void, XmlSchemaValidator_AttributeIdentityConstraints, (XmlSchemaValidator * __this, String * name, String * ns, Object * obj, String * sobj, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x01929320, void, XmlSchemaValidator_EndElementIdentityConstraints, (XmlSchemaValidator * __this, Object * typedValue, String * stringValue, XmlSchemaDatatype * datatype, MethodInfo * method));
DO_APP_FUNC(0x0192A650, void, XmlSchemaValidator_ElementValidationError, (XmlQualifiedName * name, ValidationState * context, ValidationEventHandler * eventHandler, Object * sender, String * sourceUri, int32_t lineNo, int32_t linePos, XmlSchemaSet * schemaSet, MethodInfo * method));
DO_APP_FUNC(0x0192B3E0, void, XmlSchemaValidator_CompleteValidationError, (ValidationState * context, ValidationEventHandler * eventHandler, Object * sender, String * sourceUri, int32_t lineNo, int32_t linePos, XmlSchemaSet * schemaSet, MethodInfo * method));
DO_APP_FUNC(0x0192BCB0, String *, XmlSchemaValidator_PrintExpectedElements, (ArrayList * expected, bool getParticles, MethodInfo * method));
DO_APP_FUNC(0x0192C280, String *, XmlSchemaValidator_PrintNames, (ArrayList * expected, MethodInfo * method));
DO_APP_FUNC(0x0192C4E0, void, XmlSchemaValidator_PrintNamesWithNS, (ArrayList * expected, StringBuilder * builder, MethodInfo * method));
DO_APP_FUNC(0x0192CC80, void, XmlSchemaValidator_EnumerateAny, (StringBuilder * builder, String * namespaces, MethodInfo * method));
DO_APP_FUNC(0x0192CFC0, String *, XmlSchemaValidator_QNameString, (String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0192D080, String *, XmlSchemaValidator_BuildElementName, (XmlQualifiedName * qname, MethodInfo * method));
DO_APP_FUNC(0x0192D140, String *, XmlSchemaValidator_BuildElementName_1, (String * localName, String * ns, MethodInfo * method));
DO_APP_FUNC(0x0192D310, void, XmlSchemaValidator_ProcessEntity, (XmlSchemaValidator * __this, String * name, MethodInfo * method));
DO_APP_FUNC(0x0192D3F0, void, XmlSchemaValidator_SendValidationEvent, (XmlSchemaValidator * __this, String * code, MethodInfo * method));
DO_APP_FUNC(0x0192D490, void, XmlSchemaValidator_SendValidationEvent_1, (XmlSchemaValidator * __this, String * code, String__Array * args, MethodInfo * method));
DO_APP_FUNC(0x0192D680, void, XmlSchemaValidator_SendValidationEvent_2, (XmlSchemaValidator * __this, String * code, String * arg, MethodInfo * method));
DO_APP_FUNC(0x0192D870, void, XmlSchemaValidator_SendValidationEvent_3, (XmlSchemaValidator * __this, String * code, String * arg1, String * arg2, MethodInfo * method));
DO_APP_FUNC(0x0192DB20, void, XmlSchemaValidator_SendValidationEvent_4, (XmlSchemaValidator * __this, String * code, String__Array * args, Exception * innerException, XmlSeverityType__Enum severity, MethodInfo * method));
DO_APP_FUNC(0x0192DD40, void, XmlSchemaValidator_SendValidationEvent_5, (XmlSchemaValidator * __this, String * code, String__Array * args, Exception * innerException, MethodInfo * method));
DO_APP_FUNC(0x0192DF40, void, XmlSchemaValidator_SendValidationEvent_6, (XmlSchemaValidator * __this, XmlSchemaValidationException * e, MethodInfo * method));
DO_APP_FUNC(0x0192DF50, void, XmlSchemaValidator_SendValidationEvent_7, (XmlSchemaValidator * __this, XmlSchemaException * e, MethodInfo * method));
DO_APP_FUNC(0x0192E110, void, XmlSchemaValidator_SendValidationEvent_8, (XmlSchemaValidator * __this, String * code, String * msg, XmlSeverityType__Enum severity, MethodInfo * method));
DO_APP_FUNC(0x0192E310, void, XmlSchemaValidator_SendValidationEvent_9, (XmlSchemaValidator * __this, XmlSchemaValidationException * e, XmlSeverityType__Enum severity, MethodInfo * method));
DO_APP_FUNC(0x0192E5E0, void, XmlSchemaValidator_SendValidationEvent_10, (ValidationEventHandler * eventHandler, Object * sender, XmlSchemaValidationException * e, XmlSeverityType__Enum severity, MethodInfo * method));
DO_APP_FUNC(0x0192E780, void, XmlSchemaValidator__cctor, (MethodInfo * method));
DO_APP_FUNC(0x002FA000, void, XmlValueConverter__ctor, (XmlValueConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x0223D4D0, void, XmlBaseConverter__ctor, (XmlBaseConverter * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x0223D620, void, XmlBaseConverter__ctor_1, (XmlBaseConverter * __this, XmlTypeCode__Enum typeCode, MethodInfo * method));
DO_APP_FUNC(0x0223D780, void, XmlBaseConverter__ctor_2, (XmlBaseConverter * __this, XmlBaseConverter * converterAtomic, MethodInfo * method));
DO_APP_FUNC(0x0223D7E0, void, XmlBaseConverter__ctor_3, (XmlBaseConverter * __this, XmlBaseConverter * converterAtomic, Type * clrTypeDefault, MethodInfo * method));
DO_APP_FUNC(0x0223D810, bool, XmlBaseConverter_ToBoolean, (XmlBaseConverter * __this, DateTime value, MethodInfo * method));
DO_APP_FUNC(0x0223D930, bool, XmlBaseConverter_ToBoolean_1, (XmlBaseConverter * __this, double value, MethodInfo * method));
DO_APP_FUNC(0x0223DA60, bool, XmlBaseConverter_ToBoolean_2, (XmlBaseConverter * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0223DB80, bool, XmlBaseConverter_ToBoolean_3, (XmlBaseConverter * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x0223DCA0, bool, XmlBaseConverter_ToBoolean_4, (XmlBaseConverter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0223DDB0, bool, XmlBaseConverter_ToBoolean_5, (XmlBaseConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0223DEC0, DateTime, XmlBaseConverter_ToDateTime, (XmlBaseConverter * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x0223DFE0, DateTime, XmlBaseConverter_ToDateTime_1, (XmlBaseConverter * __this, DateTimeOffset value, MethodInfo * method));
DO_APP_FUNC(0x0223E100, DateTime, XmlBaseConverter_ToDateTime_2, (XmlBaseConverter * __this, double value, MethodInfo * method));
DO_APP_FUNC(0x0223E230, DateTime, XmlBaseConverter_ToDateTime_3, (XmlBaseConverter * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0223E350, DateTime, XmlBaseConverter_ToDateTime_4, (XmlBaseConverter * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x0223E470, DateTime, XmlBaseConverter_ToDateTime_5, (XmlBaseConverter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0223E580, DateTime, XmlBaseConverter_ToDateTime_6, (XmlBaseConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0223E690, DateTimeOffset, XmlBaseConverter_ToDateTimeOffset, (XmlBaseConverter * __this, DateTime value, MethodInfo * method));
DO_APP_FUNC(0x0223E7C0, DateTimeOffset, XmlBaseConverter_ToDateTimeOffset_1, (XmlBaseConverter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0223E8E0, DateTimeOffset, XmlBaseConverter_ToDateTimeOffset_2, (XmlBaseConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0223EA00, Decimal, XmlBaseConverter_ToDecimal, (XmlBaseConverter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0223EB10, Decimal, XmlBaseConverter_ToDecimal_1, (XmlBaseConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0223EC20, double, XmlBaseConverter_ToDouble, (XmlBaseConverter * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x0223ED40, double, XmlBaseConverter_ToDouble_1, (XmlBaseConverter * __this, DateTime value, MethodInfo * method));
DO_APP_FUNC(0x0223EE60, double, XmlBaseConverter_ToDouble_2, (XmlBaseConverter * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0223EF80, double, XmlBaseConverter_ToDouble_3, (XmlBaseConverter * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x0223F0A0, double, XmlBaseConverter_ToDouble_4, (XmlBaseConverter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0223F1B0, double, XmlBaseConverter_ToDouble_5, (XmlBaseConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0223F2C0, int32_t, XmlBaseConverter_ToInt32, (XmlBaseConverter * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x0223F3E0, int32_t, XmlBaseConverter_ToInt32_1, (XmlBaseConverter * __this, DateTime value, MethodInfo * method));
DO_APP_FUNC(0x0223F500, int32_t, XmlBaseConverter_ToInt32_2, (XmlBaseConverter * __this, double value, MethodInfo * method));
DO_APP_FUNC(0x0223F620, int32_t, XmlBaseConverter_ToInt32_3, (XmlBaseConverter * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x0223F740, int32_t, XmlBaseConverter_ToInt32_4, (XmlBaseConverter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0223F840, int32_t, XmlBaseConverter_ToInt32_5, (XmlBaseConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0223F940, int64_t, XmlBaseConverter_ToInt64, (XmlBaseConverter * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x0223FA60, int64_t, XmlBaseConverter_ToInt64_1, (XmlBaseConverter * __this, DateTime value, MethodInfo * method));
DO_APP_FUNC(0x0223FB80, int64_t, XmlBaseConverter_ToInt64_2, (XmlBaseConverter * __this, double value, MethodInfo * method));
DO_APP_FUNC(0x0223FCA0, int64_t, XmlBaseConverter_ToInt64_3, (XmlBaseConverter * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0223FDC0, int64_t, XmlBaseConverter_ToInt64_4, (XmlBaseConverter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0223FEC0, int64_t, XmlBaseConverter_ToInt64_5, (XmlBaseConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0223FFC0, float, XmlBaseConverter_ToSingle, (XmlBaseConverter * __this, double value, MethodInfo * method));
DO_APP_FUNC(0x022400F0, float, XmlBaseConverter_ToSingle_1, (XmlBaseConverter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x02240200, float, XmlBaseConverter_ToSingle_2, (XmlBaseConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02240310, String *, XmlBaseConverter_ToString, (XmlBaseConverter * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x02240420, String *, XmlBaseConverter_ToString_1, (XmlBaseConverter * __this, DateTime value, MethodInfo * method));
DO_APP_FUNC(0x02240530, String *, XmlBaseConverter_ToString_2, (XmlBaseConverter * __this, DateTimeOffset value, MethodInfo * method));
DO_APP_FUNC(0x02240650, String *, XmlBaseConverter_ToString_3, (XmlBaseConverter * __this, Decimal value, MethodInfo * method));
DO_APP_FUNC(0x02240770, String *, XmlBaseConverter_ToString_4, (XmlBaseConverter * __this, double value, MethodInfo * method));
DO_APP_FUNC(0x02240890, String *, XmlBaseConverter_ToString_5, (XmlBaseConverter * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x022409A0, String *, XmlBaseConverter_ToString_6, (XmlBaseConverter * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x02240AB0, String *, XmlBaseConverter_ToString_7, (XmlBaseConverter * __this, float value, MethodInfo * method));
DO_APP_FUNC(0x02240BD0, String *, XmlBaseConverter_ToString_8, (XmlBaseConverter * __this, Object * value, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x02240CE0, String *, XmlBaseConverter_ToString_9, (XmlBaseConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02240D00, Object *, XmlBaseConverter_ChangeType, (XmlBaseConverter * __this, bool value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x02240DC0, Object *, XmlBaseConverter_ChangeType_1, (XmlBaseConverter * __this, DateTime value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x02240E80, Object *, XmlBaseConverter_ChangeType_2, (XmlBaseConverter * __this, Decimal value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x02240F50, Object *, XmlBaseConverter_ChangeType_3, (XmlBaseConverter * __this, double value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x02241020, Object *, XmlBaseConverter_ChangeType_4, (XmlBaseConverter * __this, int32_t value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x022410E0, Object *, XmlBaseConverter_ChangeType_5, (XmlBaseConverter * __this, int64_t value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x022411A0, Object *, XmlBaseConverter_ChangeType_6, (XmlBaseConverter * __this, String * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x022411C0, Object *, XmlBaseConverter_ChangeType_7, (XmlBaseConverter * __this, Object * value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x002FA280, XmlSchemaType *, XmlBaseConverter_get_SchemaType, (XmlBaseConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x00529FF0, XmlTypeCode__Enum, XmlBaseConverter_get_TypeCode, (XmlBaseConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x022411F0, String *, XmlBaseConverter_get_XmlTypeName, (XmlBaseConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x002FB950, Type *, XmlBaseConverter_get_DefaultClrType, (XmlBaseConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x02241540, bool, XmlBaseConverter_IsDerivedFrom, (Type * derivedType, Type * baseType, MethodInfo * method));
DO_APP_FUNC(0x02241640, Exception *, XmlBaseConverter_CreateInvalidClrMappingException, (XmlBaseConverter * __this, Type * sourceType, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x02241A90, String *, XmlBaseConverter_QNameToString, (XmlQualifiedName * name, MethodInfo * method));
DO_APP_FUNC(0x02241C00, Object *, XmlBaseConverter_ChangeListType, (XmlBaseConverter * __this, Object * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x02241C70, Byte__Array *, XmlBaseConverter_StringToBase64Binary, (String * value, MethodInfo * method));
DO_APP_FUNC(0x02241D40, DateTime, XmlBaseConverter_StringToDate, (String * value, MethodInfo * method));
DO_APP_FUNC(0x02241E10, DateTime, XmlBaseConverter_StringToDateTime, (String * value, MethodInfo * method));
DO_APP_FUNC(0x02241EE0, TimeSpan, XmlBaseConverter_StringToDayTimeDuration, (String * value, MethodInfo * method));
DO_APP_FUNC(0x02241F40, TimeSpan, XmlBaseConverter_StringToDuration, (String * value, MethodInfo * method));
DO_APP_FUNC(0x02241FA0, DateTime, XmlBaseConverter_StringToGDay, (String * value, MethodInfo * method));
DO_APP_FUNC(0x02242070, DateTime, XmlBaseConverter_StringToGMonth, (String * value, MethodInfo * method));
DO_APP_FUNC(0x02242140, DateTime, XmlBaseConverter_StringToGMonthDay, (String * value, MethodInfo * method));
DO_APP_FUNC(0x02242210, DateTime, XmlBaseConverter_StringToGYear, (String * value, MethodInfo * method));
DO_APP_FUNC(0x022422E0, DateTime, XmlBaseConverter_StringToGYearMonth, (String * value, MethodInfo * method));
DO_APP_FUNC(0x022423B0, DateTimeOffset, XmlBaseConverter_StringToDateOffset, (String * value, MethodInfo * method));
DO_APP_FUNC(0x02242490, DateTimeOffset, XmlBaseConverter_StringToDateTimeOffset, (String * value, MethodInfo * method));
DO_APP_FUNC(0x02242570, DateTimeOffset, XmlBaseConverter_StringToGDayOffset, (String * value, MethodInfo * method));
DO_APP_FUNC(0x02242650, DateTimeOffset, XmlBaseConverter_StringToGMonthOffset, (String * value, MethodInfo * method));
DO_APP_FUNC(0x02242740, DateTimeOffset, XmlBaseConverter_StringToGMonthDayOffset, (String * value, MethodInfo * method));
DO_APP_FUNC(0x02242820, DateTimeOffset, XmlBaseConverter_StringToGYearOffset, (String * value, MethodInfo * method));
DO_APP_FUNC(0x02242900, DateTimeOffset, XmlBaseConverter_StringToGYearMonthOffset, (String * value, MethodInfo * method));
DO_APP_FUNC(0x022429E0, Byte__Array *, XmlBaseConverter_StringToHexBinary, (String * value, MethodInfo * method));
DO_APP_FUNC(0x02242AF0, XmlQualifiedName *, XmlBaseConverter_StringToQName, (String * value, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x02242E60, DateTime, XmlBaseConverter_StringToTime, (String * value, MethodInfo * method));
DO_APP_FUNC(0x02242F30, DateTimeOffset, XmlBaseConverter_StringToTimeOffset, (String * value, MethodInfo * method));
DO_APP_FUNC(0x02243010, TimeSpan, XmlBaseConverter_StringToYearMonthDuration, (String * value, MethodInfo * method));
DO_APP_FUNC(0x02243070, String *, XmlBaseConverter_AnyUriToString, (Uri * value, MethodInfo * method));
DO_APP_FUNC(0x022430E0, String *, XmlBaseConverter_Base64BinaryToString, (Byte__Array * value, MethodInfo * method));
DO_APP_FUNC(0x02243180, String *, XmlBaseConverter_DateToString, (DateTime value, MethodInfo * method));
DO_APP_FUNC(0x022431C0, String *, XmlBaseConverter_DateTimeToString, (DateTime value, MethodInfo * method));
DO_APP_FUNC(0x02243200, String *, XmlBaseConverter_DayTimeDurationToString, (TimeSpan value, MethodInfo * method));
DO_APP_FUNC(0x01963C60, String *, XmlBaseConverter_DurationToString, (TimeSpan value, MethodInfo * method));
DO_APP_FUNC(0x02243260, String *, XmlBaseConverter_GDayToString, (DateTime value, MethodInfo * method));
DO_APP_FUNC(0x022432A0, String *, XmlBaseConverter_GMonthToString, (DateTime value, MethodInfo * method));
DO_APP_FUNC(0x022432E0, String *, XmlBaseConverter_GMonthDayToString, (DateTime value, MethodInfo * method));
DO_APP_FUNC(0x02243320, String *, XmlBaseConverter_GYearToString, (DateTime value, MethodInfo * method));
DO_APP_FUNC(0x02243360, String *, XmlBaseConverter_GYearMonthToString, (DateTime value, MethodInfo * method));
DO_APP_FUNC(0x022433A0, String *, XmlBaseConverter_DateOffsetToString, (DateTimeOffset value, MethodInfo * method));
DO_APP_FUNC(0x022433F0, String *, XmlBaseConverter_DateTimeOffsetToString, (DateTimeOffset value, MethodInfo * method));
DO_APP_FUNC(0x02243440, String *, XmlBaseConverter_GDayOffsetToString, (DateTimeOffset value, MethodInfo * method));
DO_APP_FUNC(0x02243490, String *, XmlBaseConverter_GMonthOffsetToString, (DateTimeOffset value, MethodInfo * method));
DO_APP_FUNC(0x022434E0, String *, XmlBaseConverter_GMonthDayOffsetToString, (DateTimeOffset value, MethodInfo * method));
DO_APP_FUNC(0x02243530, String *, XmlBaseConverter_GYearOffsetToString, (DateTimeOffset value, MethodInfo * method));
DO_APP_FUNC(0x02243580, String *, XmlBaseConverter_GYearMonthOffsetToString, (DateTimeOffset value, MethodInfo * method));
DO_APP_FUNC(0x022435D0, String *, XmlBaseConverter_QNameToString_1, (XmlQualifiedName * qname, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x022437C0, String *, XmlBaseConverter_TimeToString, (DateTime value, MethodInfo * method));
DO_APP_FUNC(0x02243800, String *, XmlBaseConverter_TimeOffsetToString, (DateTimeOffset value, MethodInfo * method));
DO_APP_FUNC(0x02243850, String *, XmlBaseConverter_YearMonthDurationToString, (TimeSpan value, MethodInfo * method));
DO_APP_FUNC(0x022438B0, DateTime, XmlBaseConverter_DateTimeOffsetToDateTime, (DateTimeOffset value, MethodInfo * method));
DO_APP_FUNC(0x022438D0, int32_t, XmlBaseConverter_DecimalToInt32, (Decimal value, MethodInfo * method));
DO_APP_FUNC(0x02243B80, int64_t, XmlBaseConverter_DecimalToInt64, (Decimal value, MethodInfo * method));
DO_APP_FUNC(0x02243DC0, uint64_t, XmlBaseConverter_DecimalToUInt64, (Decimal value, MethodInfo * method));
DO_APP_FUNC(0x02244000, uint8_t, XmlBaseConverter_Int32ToByte, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x02244150, int16_t, XmlBaseConverter_Int32ToInt16, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x022442B0, int8_t, XmlBaseConverter_Int32ToSByte, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x02244410, uint16_t, XmlBaseConverter_Int32ToUInt16, (int32_t value, MethodInfo * method));
DO_APP_FUNC(0x02244560, int32_t, XmlBaseConverter_Int64ToInt32, (int64_t value, MethodInfo * method));
DO_APP_FUNC(0x022446C0, uint32_t, XmlBaseConverter_Int64ToUInt32, (int64_t value, MethodInfo * method));
DO_APP_FUNC(0x02244820, DateTime, XmlBaseConverter_UntypedAtomicToDateTime, (String * value, MethodInfo * method));
DO_APP_FUNC(0x022448F0, DateTimeOffset, XmlBaseConverter_UntypedAtomicToDateTimeOffset, (String * value, MethodInfo * method));
DO_APP_FUNC(0x022449E0, void, XmlBaseConverter__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0224EB90, void, XmlNumeric10Converter__ctor, (XmlNumeric10Converter * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x0224EC40, XmlValueConverter *, XmlNumeric10Converter_Create, (XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x0224EE00, Decimal, XmlNumeric10Converter_ToDecimal, (XmlNumeric10Converter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0224EF30, Decimal, XmlNumeric10Converter_ToDecimal_1, (XmlNumeric10Converter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0224F460, int32_t, XmlNumeric10Converter_ToInt32, (XmlNumeric10Converter * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x0224F500, int32_t, XmlNumeric10Converter_ToInt32_1, (XmlNumeric10Converter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0224F680, int32_t, XmlNumeric10Converter_ToInt32_2, (XmlNumeric10Converter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x0224FAF0, int64_t, XmlNumeric10Converter_ToInt64, (XmlNumeric10Converter * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x0224FB00, int64_t, XmlNumeric10Converter_ToInt64_1, (XmlNumeric10Converter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0224FC80, int64_t, XmlNumeric10Converter_ToInt64_2, (XmlNumeric10Converter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x022500D0, String *, XmlNumeric10Converter_ToString, (XmlNumeric10Converter * __this, Decimal value, MethodInfo * method));
DO_APP_FUNC(0x022502C0, String *, XmlNumeric10Converter_ToString_1, (XmlNumeric10Converter * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x02250370, String *, XmlNumeric10Converter_ToString_2, (XmlNumeric10Converter * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x02250420, String *, XmlNumeric10Converter_ToString_3, (XmlNumeric10Converter * __this, Object * value, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x022508C0, Object *, XmlNumeric10Converter_ChangeType, (XmlNumeric10Converter * __this, Decimal value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x02250E90, Object *, XmlNumeric10Converter_ChangeType_1, (XmlNumeric10Converter * __this, int32_t value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x02251460, Object *, XmlNumeric10Converter_ChangeType_2, (XmlNumeric10Converter * __this, int64_t value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x02251A60, Object *, XmlNumeric10Converter_ChangeType_3, (XmlNumeric10Converter * __this, String * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x02252010, Object *, XmlNumeric10Converter_ChangeType_4, (XmlNumeric10Converter * __this, Object * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x022537D0, Object *, XmlNumeric10Converter_ChangeTypeWildcardDestination, (XmlNumeric10Converter * __this, Object * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x02253C60, Object *, XmlNumeric10Converter_ChangeTypeWildcardSource, (XmlNumeric10Converter * __this, Object * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x02254180, void, XmlNumeric2Converter__ctor, (XmlNumeric2Converter * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x02254230, XmlValueConverter *, XmlNumeric2Converter_Create, (XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x022543F0, double, XmlNumeric2Converter_ToDouble, (XmlNumeric2Converter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x02254510, double, XmlNumeric2Converter_ToDouble_1, (XmlNumeric2Converter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x022548C0, float, XmlNumeric2Converter_ToSingle, (XmlNumeric2Converter * __this, double value, MethodInfo * method));
DO_APP_FUNC(0x022548D0, float, XmlNumeric2Converter_ToSingle_1, (XmlNumeric2Converter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x022549F0, float, XmlNumeric2Converter_ToSingle_2, (XmlNumeric2Converter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02254E00, String *, XmlNumeric2Converter_ToString, (XmlNumeric2Converter * __this, double value, MethodInfo * method));
DO_APP_FUNC(0x02254F00, String *, XmlNumeric2Converter_ToString_1, (XmlNumeric2Converter * __this, float value, MethodInfo * method));
DO_APP_FUNC(0x02254FE0, String *, XmlNumeric2Converter_ToString_2, (XmlNumeric2Converter * __this, Object * value, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x02255380, Object *, XmlNumeric2Converter_ChangeType, (XmlNumeric2Converter * __this, double value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x02255880, Object *, XmlNumeric2Converter_ChangeType_1, (XmlNumeric2Converter * __this, String * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x02255DB0, Object *, XmlNumeric2Converter_ChangeType_2, (XmlNumeric2Converter * __this, Object * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x02246B80, void, XmlDateTimeConverter__ctor, (XmlDateTimeConverter * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x02246C30, XmlValueConverter *, XmlDateTimeConverter_Create, (XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x02246DF0, DateTime, XmlDateTimeConverter_ToDateTime, (XmlDateTimeConverter * __this, DateTimeOffset value, MethodInfo * method));
DO_APP_FUNC(0x02246EB0, DateTime, XmlDateTimeConverter_ToDateTime_1, (XmlDateTimeConverter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x022473E0, DateTime, XmlDateTimeConverter_ToDateTime_2, (XmlDateTimeConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x022477A0, DateTimeOffset, XmlDateTimeConverter_ToDateTimeOffset, (XmlDateTimeConverter * __this, DateTime value, MethodInfo * method));
DO_APP_FUNC(0x022477D0, DateTimeOffset, XmlDateTimeConverter_ToDateTimeOffset_1, (XmlDateTimeConverter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x02247D10, DateTimeOffset, XmlDateTimeConverter_ToDateTimeOffset_2, (XmlDateTimeConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02248120, String *, XmlDateTimeConverter_ToString, (XmlDateTimeConverter * __this, DateTime value, MethodInfo * method));
DO_APP_FUNC(0x02248350, String *, XmlDateTimeConverter_ToString_1, (XmlDateTimeConverter * __this, DateTimeOffset value, MethodInfo * method));
DO_APP_FUNC(0x02248590, String *, XmlDateTimeConverter_ToString_2, (XmlDateTimeConverter * __this, Object * value, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x02248940, Object *, XmlDateTimeConverter_ChangeType, (XmlDateTimeConverter * __this, DateTime value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x02248E40, Object *, XmlDateTimeConverter_ChangeType_1, (XmlDateTimeConverter * __this, String * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x02249360, Object *, XmlDateTimeConverter_ChangeType_2, (XmlDateTimeConverter * __this, Object * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x02244E40, void, XmlBooleanConverter__ctor, (XmlBooleanConverter * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x02244EF0, XmlValueConverter *, XmlBooleanConverter_Create, (XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x022450B0, bool, XmlBooleanConverter_ToBoolean, (XmlBooleanConverter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x02245180, bool, XmlBooleanConverter_ToBoolean_1, (XmlBooleanConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x022454B0, String *, XmlBooleanConverter_ToString, (XmlBooleanConverter * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x02245550, String *, XmlBooleanConverter_ToString_1, (XmlBooleanConverter * __this, Object * value, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x02245860, Object *, XmlBooleanConverter_ChangeType, (XmlBooleanConverter * __this, bool value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x02245CF0, Object *, XmlBooleanConverter_ChangeType_1, (XmlBooleanConverter * __this, String * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x022461A0, Object *, XmlBooleanConverter_ChangeType_2, (XmlBooleanConverter * __this, Object * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x0224C4C0, void, XmlMiscConverter__ctor, (XmlMiscConverter * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x0224C570, XmlValueConverter *, XmlMiscConverter_Create, (XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x0224C730, String *, XmlMiscConverter_ToString, (XmlMiscConverter * __this, Object * value, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x0224CE20, Object *, XmlMiscConverter_ChangeType, (XmlMiscConverter * __this, String * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x0224D450, Object *, XmlMiscConverter_ChangeType_1, (XmlMiscConverter * __this, Object * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x0224E860, Object *, XmlMiscConverter_ChangeTypeWildcardDestination, (XmlMiscConverter * __this, Object * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x0224E9D0, Object *, XmlMiscConverter_ChangeTypeWildcardSource, (XmlMiscConverter * __this, Object * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x0192ED80, void, XmlStringConverter__ctor, (XmlStringConverter * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x0192EE30, XmlValueConverter *, XmlStringConverter_Create, (XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x0192EFF0, String *, XmlStringConverter_ToString, (XmlStringConverter * __this, Object * value, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x0192F260, Object *, XmlStringConverter_ChangeType, (XmlStringConverter * __this, String * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x0192F660, Object *, XmlStringConverter_ChangeType_1, (XmlStringConverter * __this, Object * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x01930730, void, XmlUntypedConverter__ctor, (XmlUntypedConverter * __this, MethodInfo * method));
DO_APP_FUNC(0x019308F0, void, XmlUntypedConverter__ctor_1, (XmlUntypedConverter * __this, XmlUntypedConverter * atomicConverter, bool allowListToList, MethodInfo * method));
DO_APP_FUNC(0x01930AA0, bool, XmlUntypedConverter_ToBoolean, (XmlUntypedConverter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01930B70, bool, XmlUntypedConverter_ToBoolean_1, (XmlUntypedConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01930D70, DateTime, XmlUntypedConverter_ToDateTime, (XmlUntypedConverter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01930E40, DateTime, XmlUntypedConverter_ToDateTime_1, (XmlUntypedConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01931040, DateTimeOffset, XmlUntypedConverter_ToDateTimeOffset, (XmlUntypedConverter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01931130, DateTimeOffset, XmlUntypedConverter_ToDateTimeOffset_1, (XmlUntypedConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01931340, Decimal, XmlUntypedConverter_ToDecimal, (XmlUntypedConverter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01931430, Decimal, XmlUntypedConverter_ToDecimal_1, (XmlUntypedConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01931640, double, XmlUntypedConverter_ToDouble, (XmlUntypedConverter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01931710, double, XmlUntypedConverter_ToDouble_1, (XmlUntypedConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01931920, int32_t, XmlUntypedConverter_ToInt32, (XmlUntypedConverter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01931A20, int32_t, XmlUntypedConverter_ToInt32_1, (XmlUntypedConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01931C40, int64_t, XmlUntypedConverter_ToInt64, (XmlUntypedConverter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01931D40, int64_t, XmlUntypedConverter_ToInt64_1, (XmlUntypedConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01931F60, float, XmlUntypedConverter_ToSingle, (XmlUntypedConverter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01932030, float, XmlUntypedConverter_ToSingle_1, (XmlUntypedConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x01932240, String *, XmlUntypedConverter_ToString, (XmlUntypedConverter * __this, bool value, MethodInfo * method));
DO_APP_FUNC(0x019322E0, String *, XmlUntypedConverter_ToString_1, (XmlUntypedConverter * __this, DateTime value, MethodInfo * method));
DO_APP_FUNC(0x019323A0, String *, XmlUntypedConverter_ToString_2, (XmlUntypedConverter * __this, DateTimeOffset value, MethodInfo * method));
DO_APP_FUNC(0x01932470, String *, XmlUntypedConverter_ToString_3, (XmlUntypedConverter * __this, Decimal value, MethodInfo * method));
DO_APP_FUNC(0x01932530, String *, XmlUntypedConverter_ToString_4, (XmlUntypedConverter * __this, double value, MethodInfo * method));
DO_APP_FUNC(0x019325D0, String *, XmlUntypedConverter_ToString_5, (XmlUntypedConverter * __this, int32_t value, MethodInfo * method));
DO_APP_FUNC(0x01932680, String *, XmlUntypedConverter_ToString_6, (XmlUntypedConverter * __this, int64_t value, MethodInfo * method));
DO_APP_FUNC(0x01932730, String *, XmlUntypedConverter_ToString_7, (XmlUntypedConverter * __this, float value, MethodInfo * method));
DO_APP_FUNC(0x019327D0, String *, XmlUntypedConverter_ToString_8, (XmlUntypedConverter * __this, Object * value, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x019337C0, Object *, XmlUntypedConverter_ChangeType, (XmlUntypedConverter * __this, bool value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x019339D0, Object *, XmlUntypedConverter_ChangeType_1, (XmlUntypedConverter * __this, DateTime value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x01933C00, Object *, XmlUntypedConverter_ChangeType_2, (XmlUntypedConverter * __this, Decimal value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x01933E30, Object *, XmlUntypedConverter_ChangeType_3, (XmlUntypedConverter * __this, double value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x01934040, Object *, XmlUntypedConverter_ChangeType_4, (XmlUntypedConverter * __this, int32_t value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x01934260, Object *, XmlUntypedConverter_ChangeType_5, (XmlUntypedConverter * __this, int64_t value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x01934480, Object *, XmlUntypedConverter_ChangeType_6, (XmlUntypedConverter * __this, String * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x01935480, Object *, XmlUntypedConverter_ChangeType_7, (XmlUntypedConverter * __this, Object * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x01937020, Object *, XmlUntypedConverter_ChangeTypeWildcardDestination, (XmlUntypedConverter * __this, Object * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x01937190, Object *, XmlUntypedConverter_ChangeTypeWildcardSource, (XmlUntypedConverter * __this, Object * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x01937470, Object *, XmlUntypedConverter_ChangeListType, (XmlUntypedConverter * __this, Object * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x019377E0, bool, XmlUntypedConverter_SupportsType, (XmlUntypedConverter * __this, Type * clrType, MethodInfo * method));
DO_APP_FUNC(0x01937F50, void, XmlUntypedConverter__cctor, (MethodInfo * method));
DO_APP_FUNC(0x02236CC0, void, XmlAnyConverter__ctor, (XmlAnyConverter * __this, XmlTypeCode__Enum typeCode, MethodInfo * method));
DO_APP_FUNC(0x02236E70, bool, XmlAnyConverter_ToBoolean, (XmlAnyConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02237060, DateTime, XmlAnyConverter_ToDateTime, (XmlAnyConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02237250, DateTimeOffset, XmlAnyConverter_ToDateTimeOffset, (XmlAnyConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x022374B0, Decimal, XmlAnyConverter_ToDecimal, (XmlAnyConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02237700, double, XmlAnyConverter_ToDouble, (XmlAnyConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x022378F0, int32_t, XmlAnyConverter_ToInt32, (XmlAnyConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02237AE0, int64_t, XmlAnyConverter_ToInt64, (XmlAnyConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02237CD0, float, XmlAnyConverter_ToSingle, (XmlAnyConverter * __this, Object * value, MethodInfo * method));
DO_APP_FUNC(0x02237F20, Object *, XmlAnyConverter_ChangeType, (XmlAnyConverter * __this, bool value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x022381E0, Object *, XmlAnyConverter_ChangeType_1, (XmlAnyConverter * __this, DateTime value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x022384A0, Object *, XmlAnyConverter_ChangeType_2, (XmlAnyConverter * __this, Decimal value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x02238780, Object *, XmlAnyConverter_ChangeType_3, (XmlAnyConverter * __this, double value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x02238A50, Object *, XmlAnyConverter_ChangeType_4, (XmlAnyConverter * __this, int32_t value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x02238D10, Object *, XmlAnyConverter_ChangeType_5, (XmlAnyConverter * __this, int64_t value, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x02238FD0, Object *, XmlAnyConverter_ChangeType_6, (XmlAnyConverter * __this, String * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x022392C0, Object *, XmlAnyConverter_ChangeType_7, (XmlAnyConverter * __this, Object * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x0223ADE0, Object *, XmlAnyConverter_ChangeTypeWildcardDestination, (XmlAnyConverter * __this, Object * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x0223AF50, Object *, XmlAnyConverter_ChangeTypeWildcardSource, (XmlAnyConverter * __this, Object * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x0223B110, XPathNavigator *, XmlAnyConverter_ToNavigator, (XmlAnyConverter * __this, XPathNavigator * nav, MethodInfo * method));
DO_APP_FUNC(0x0223B210, void, XmlAnyConverter__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0223B440, void, XmlAnyListConverter__ctor, (XmlAnyListConverter * __this, XmlBaseConverter * atomicConverter, MethodInfo * method));
DO_APP_FUNC(0x0223B450, Object *, XmlAnyListConverter_ChangeType, (XmlAnyListConverter * __this, Object * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x0223B700, void, XmlAnyListConverter__cctor, (MethodInfo * method));
DO_APP_FUNC(0x0224A020, void, XmlListConverter__ctor, (XmlListConverter * __this, XmlBaseConverter * atomicConverter, MethodInfo * method));
DO_APP_FUNC(0x0224A110, void, XmlListConverter__ctor_1, (XmlListConverter * __this, XmlBaseConverter * atomicConverter, Type * clrTypeDefault, MethodInfo * method));
DO_APP_FUNC(0x0224A1E0, void, XmlListConverter__ctor_2, (XmlListConverter * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x0224A290, XmlValueConverter *, XmlListConverter_Create, (XmlValueConverter * atomicConverter, MethodInfo * method));
DO_APP_FUNC(0x0224A530, Object *, XmlListConverter_ChangeType, (XmlListConverter * __this, Object * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x0224A680, Object *, XmlListConverter_ChangeListType, (XmlListConverter * __this, Object * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x0224B530, bool, XmlListConverter_IsListType, (XmlListConverter * __this, Type * type, MethodInfo * method));
DO_APP_FUNC(0x0224B750, IList *, XmlListConverter_ToList, (XmlListConverter * __this, Object * list, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x0224BB80, List_1_System_String_ *, XmlListConverter_StringAsList, (XmlListConverter * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x0224BD00, String *, XmlListConverter_ListAsString, (XmlListConverter * __this, IEnumerable * list, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x0224C070, Exception *, XmlListConverter_CreateInvalidClrMappingException, (XmlListConverter * __this, Type * sourceType, Type * destinationType, MethodInfo * method));
DO_APP_FUNC(0x0192FD00, void, XmlUnionConverter__ctor, (XmlUnionConverter * __this, XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x019300A0, XmlValueConverter *, XmlUnionConverter_Create, (XmlSchemaType * schemaType, MethodInfo * method));
DO_APP_FUNC(0x019301F0, Object *, XmlUnionConverter_ChangeType, (XmlUnionConverter * __this, Object * value, Type * destinationType, IXmlNamespaceResolver * nsResolver, MethodInfo * method));
DO_APP_FUNC(0x01938610, void, XsdBuilder__ctor, (XsdBuilder * __this, XmlReader * reader, XmlNamespaceManager * curmgr, XmlSchema * schema, XmlNameTable * nameTable, SchemaNames * schemaNames, ValidationEventHandler * eventhandler, MethodInfo * method));
DO_APP_FUNC(0x01938B50, bool, XsdBuilder_ProcessElement, (XsdBuilder * __this, String * prefix, String * name, String * ns, MethodInfo * method));
DO_APP_FUNC(0x01938E40, void, XsdBuilder_ProcessAttribute, (XsdBuilder * __this, String * prefix, String * name, String * ns, String * value, MethodInfo * method));
DO_APP_FUNC(0x01939760, bool, XsdBuilder_IsContentParsed, (XsdBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x00FAE9B0, void, XsdBuilder_ProcessMarkup, (XsdBuilder * __this, XmlNode__Array * markup, MethodInfo * method));
DO_APP_FUNC(0x01939780, void, XsdBuilder_ProcessCData, (XsdBuilder * __this, String * value, MethodInfo * method));
DO_APP_FUNC(0x01939820, void, XsdBuilder_StartChildren, (XsdBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x01939A20, void, XsdBuilder_EndChildren, (XsdBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x01939A70, void, XsdBuilder_Push, (XsdBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x01939D50, void, XsdBuilder_Pop, (XsdBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x01939E80, SchemaNames_Token__Enum, XsdBuilder_get_CurrentElement, (XsdBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x01939EA0, SchemaNames_Token__Enum, XsdBuilder_get_ParentElement, (XsdBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x01939F60, XmlSchemaObject *, XsdBuilder_get_ParentContainer, (XsdBuilder * __this, MethodInfo * method));
DO_APP_FUNC(0x0193A050, XmlSchemaObject *, XsdBuilder_GetContainer, (XsdBuilder * __this, XsdBuilder_State__Enum state, MethodInfo * method));